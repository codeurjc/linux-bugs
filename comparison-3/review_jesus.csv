hash,reviewer,iunderstd,understd,bfc,bpc,prc,nfc,asc,spec,obc,safety,patchset,comment
5b2c5540b8,jesus,4,True,4,0,3,0,0,3,0,,,"INFO. This would be a bug fixing commit if we consider that errors returned by BPF are the same to be returned by the ""real"" stack (such as TCP). Of course, we could also consider this is also a matter of opinion, and this is just a perfective commit, trying to take BPF closer to the communication stack (in this case, at the level or error reporting). This is an interesting case of ""being a BFC or not would depend on whether what is considered to be the specification"". If the specification were ""errors should be like those of the TCP/IP stack"", this would be a bug. I'm considering that's the case. But if there is no specification as such, this would be just a perfective commit, making things more ""reasonable"", and more like they were in the past (it seems that was the situation previous to some commit). And could signal a change in specifications (or more likely, an extension of the specifications to address this case). This is also part of a patchset, but it seems it is independent from other patches in it."
9a10064f56,jesus,4,False,0,0,0,4,0,4,0,0.0,,"INFO. This seems to me clearly as a new feature. It ""adds a field to /proc/pid/maps and /proc/pid/smaps to show a userspace-provided name for anonymous vmas"". I think two of the reviewers didn't understood the commit, and that's why they said it is close to a BFC. This is a good example of a new feature, which is extending specifications (vmas should have a field for a userspace-provided name), which is introduced at the same time the patch is committed."
016017a195,jesus,4,True,4,2,0,1,0,0,4,0.0,False,"INFO. Interesting case: a ""not real"" configuration case (a non-useful configuration for compiling the kernel) is fixed in this commit. It is even unlikely that the ""fixed"" config is used at all. However, it avoids an error in that case, so this could be a bug fixing commit. So, I label this as a BFC, but it could also be a BPC (if it is considered that this didn't really trigger a bug), or even (maybe) a NFC (if consider that configuration is now considered)."
11c2bf4a20,jesus,4,True,2,4,0,0,0,0,0,0.0,True,"INFO. This is considered as a bug fix by the author (it is part of a patchset which reads ""This patch series contains various fixes for pci-mvebu.c driver. Only bugfixes, no new features."" But it doesn't really refer to a bug. It seems more like preventing future bugs.  There is no evidence the code is being called in a way that ""invalid size"" actually happens. So, I label it as a BPC. However, it could be a BFC if we consider this is fixing a possible bug (or if a bug were reported about this matter).
"
088c840599,jesus,4,True,0,4,0,0,4,0,0,0.0,True,"INFO: This seems to me clearly a BPC, fixing a warning triggered by a checking tool."
3364c6ce23,jesus,4,True,0,4,0,0,4,0,0,0.0,False,"Fixing a warning by the compiled, when -Warray-bounds is used. This is not really fixing a bug, but fixing the warning, which, maybe, could make it more difficult to find a bug if array bounds are not respected. The commit comment itself says the binary output of the compiler is exactly the same, so it is clear this cannot be fixing a bug, but just, maybe, helping to prevent a future one."
e973746882,jesus,4,False,4,0,0,0,0,0,0,0.0,False,"INFO. The discussion in LORE [1] shows what is actually happening. The fix avoids confusion when calling the kernel API from userspace. Before the patch, information provided by the kernel could be contradictory, now it is isn't. Now, the question is: does this make it a BFC, a BPC, or something else? In addition, this is in the context of commit ""690a757d610e (""kvm: x86: Add CPUID support for Intel AMX"")"" (which is mentioned in the Fixes field). In other words, some new functionality was added, but it could provide contradictory info to userspace, so that is fixed. Apparently, no bug was reported. However, it seems the spec was that the information should not be contradictory, thus this would be fixing a non-reported bug. Labeling as BFC because of that.

[1] https://lore.kernel.org/all/20220117074531.76925-1-likexu@tencent.com/"
1ac7fd8159,jesus,4,False,4,0,0,0,0,0,0,0.0,True,"INFO. Interesting case of a commit that could be considered a BFC, or a NFC. Apparently, some families of Intel processors use a new format for some CPU registers (LBR). LBR stands for ""last branch records"", and apparently is a hw mechanism provided by some Intel CPUs to collect information about the call graph, which can be used by performance profilers [1] [2]. It seems that in some of the latest Intel families, some information about missprediction could be lost. The commit fixes this. I'm considering it as a bug fixing commit, because it seems those Intel families are within specs at the moment the commit is written, and providing the right info is also within specs. But it is important to notice that likely those families were not within specs when the fixed code was written, so this could also be considered just as a NFC, adding the feature of supporting these Intel families with respect to performance statistics.

In this case, some of the annotators labeled the commit as PRC, likely because performance was mentioned (but this is, afaik, about performance stats, not performance itself).

[1] https://stackoverflow.com/a/57432063/2075265
[2] https://stackoverflow.com/questions/12160449/call-stack-in-the-perf-profiler"
a8db854be2,jesus,3,True,4,0,0,0,0,0,0,0.0,True,"INFO. This is a patch sent to a stable branch (note the ""Upstream commit"" field [1], seen in [2]). It is a part of a patchset for a stable release (see [3]: ""This is the start of the stable review cycle for the 5.16.5 release. There are 200 patches in this series""). It seems that in certain cases, a component is not getting the right error information. The commit fixes it. So, it seems to be a BFC (if we consider that passing the right error info is part of the specs). If passing the right error information is not considered a part of the specs, this could be a PRC (which is what two of the annotators did). I'm not sure about implications for safety: labeling as 0 since I don't see any, anyway.


[1] https://www.kernel.org/doc/html/v4.10/process/stable-kernel-rules.html
[2] https://lore.kernel.org/all/20220131105238.574507596@linuxfoundation.org/
[3] https://lore.kernel.org/all/20220131105233.561926043@linuxfoundation.org/"
edb854a368,jesus,4,True,0,0,4,0,0,0,0,0.0,False,"INFO. This seems to be a perfective commit to me. It helps memory to be used more efficiently in some cases. Doesn't seem to have an effect in behavior, so not really a bug fix. Labelling it as a PRC. Annotators seem to understand the commit as I do, but they seem to consider the waste in memory as a bug (which I think is not the case, since it doesn't cause a malfunction)."
bd2db32e7c,jesus,4,True,4,0,0,0,0,0,0,0.0,False,"INFO. This seems clearly as a BFC. Some memory could be accessed after (supposedly) being freed. There was a CVE from 2022 about this, CVE-2022-48626 [1]. So, labelling as a BFC. 

[1] https://lore.kernel.org/linux-cve-announce/2024022558-CVE-2022-48626-8a90%40gregkh/"
e2b993302f,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"INFO. This seems like a clear PRC to me. It just avoids a check, in some circumstances, which is unnecessary in those circumstances. This fixes a warning, which was apparently triggered because that check was performed when it shouldn't (thus, this is also a ASC). Curiously enough, all annotators thought this as a BFC or BPC to some extent, even when apparently they understood the commit as I did. 

Seems to fix CVE-2022-48849 [1] But this doesn't even seem as a BFC to me (???)

It is a commit to a stable release, ""[ Upstream commit e2b993302f40c4eb714ecf896dd9e1c5be7d4cd7 ]"" (seen in the commit to the stable release, which references this one) [2] [3], for 5.15 y 5.16).

[1] https://lore.kernel.org/all/2024071624-CVE-2022-48849-3119@gregkh/
[2] https://lore.kernel.org/all/20220314112746.270164115@linuxfoundation.org/
[3] https://lore.kernel.org/all/20220301201344.18191-20-sashal@kernel.org/"
302e9edd54,jesus,4,True,4,0,0,0,0,0,0,0.0,False,"INFO. Assuming the spec is that tracing should be enabled/disabled at the instance, and not at a higher level, this would be a bug fix (because it is not, so there is a malfunction)."
6c1f41afc1,jesus,3,True,4,0,0,0,0,0,0,1.0,False,"It seems this is fixing a case that causes malfunction, and is reported as a bug (notice the ""Reported-by:"" line). So, I think this is a clear BFC. Maybe it could have implications for safety, in the case there is a problem with the network devices, but I'm not sure (labeling as ""1"" for that)."
0966d38583,jesus,3,True,4,0,0,0,0,0,0,3.0,False,"The commit seems to fix a case when the offset, in RISC V, is returned erroneously. So, it seems a clear BFC to me. It could also have implications for safety."
16b1941eac,jesus,4,True,4,0,0,0,4,0,0,3.0,False,"INFO. This seems like a clear BFC, triggered by an automated tool (A fuzzer). It could be a safety-related bug, since a variable is used after being freed, which in principle could have unintended consequences.

This said, it is interesting this sentence in the commit message: ""The race wouldn't occur if the gadget core registered its devices on a real bus, using the standard synchronization techniques of the driver core."" Reading the complete message, the bug manifests in the gadget core (this is in the USB subsystem) because it is not using the ""standard synchronization techniques provided by the driver core"". However, the bug is fixed not in the gadget core, but in the driver core, thus preventing bugs caused by other gadgets that could not be using those standard techniques."
0a3a4b9d2b,jesus,4,True,0,0,0,4,0,4,0,0.0,True,"INFO. A variable is increased in size, to hold more elements (in this case, number of timer interrupts, if I understand it well). I think we can assume the previous value (10) was good enough when the code was written, being therefore a part of the specs at that time (no more than 10 timer interrupts). But with time, this become too small, and needed to be extended (both in the specs, and in the code). This is also drawn from the sentence: ""Which restrict the scalability of the MCT driver for the SoC which has more local timers interrupts"", which seems to imply that to gain scalability to allow for SoC, with more timer interrupts (thus, extending specs to consider them), the size needs to be enlarged. Thus, I consider this really as a NFC, and a change in specs (but the change in specs could happen earlier, which these kind of devices were included in the specs for the kernel).

If we consider that the specs were already changed earlier, and this is not just a commit to implement such specs, this would be a BFC. Which shows the importance of the changes in spec, and the ""intention"" of a commit (to implement a change in specs, which would be a NFC, or to fix a bug because specs changed and some part of the code is not adhering to them, which would be a BFC or maybe a BPC).

It is also interesting how annotators differed in the interpretation of the commit."
c95aa2bab9,jesus,4,True,0,4,0,0,0,0,0,0.0,False,"INFO: Fixes a dependency problem in the configuration info for the kernel. There is no indication of a bug, thus this is trying to prevent bugs. This could cause an obvious bug if triggered, because the resulting kernel would have a missing  module. But I don't think this would be the case, since that could go unnoticed, because the resulting kernel would likely work as intended, except for matters related to the missing module.

Curiously enough, annotators identified this as a BFC (3,4)"
7a70d9a1cf,jesus,4,True,0,4,4,0,0,0,0,0.0,False,"INFO. There are two things addressed in this commit. One is checking if the needed hw is present, which seems to be a perfective commit, PRC since it really doesn't fix or prevent a malfunction, except for the log message, which in any case would be correct (stating that hw is not available). The other one is fixing dependency information, which could cause a bug (no report is provided), and is thus a BPC."
e52432e164,jesus,4,True,0,4,0,0,4,0,0,0.0,False,"INFO. This seems a clear BPC, triggered by a compiler warning (and therefore, a ASC as well). There is no report of a real bug, and the message states clearly that the fix ""keep[s] this code robust if the use of proxy_dev->req_len ever changes in the future""

It is also interesting how a developer, in an answer [1], shows how there is no chance of having a problem, so this really only ""keeps the compiler happy"". Which reinfrces the idea that this is a BPC.

[1] https://lore.kernel.org/lkml/4b59d305-6858-1514-751a-37853ad777be@linux.ibm.com/"
30d024b505,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"INFO. This seems like a perfective commit, since it only fixes the case that users of the file get a warning about a struct not being declared in the header file. It doesn't seem to have any effect on the behaviour of the kernel."
09e7af76db,jesus,4,True,0,4,0,0,0,0,0,0.0,False,"This commit is preventing a non-reported bug: ""As the potential failure of the clk_enable(), it should be better to check it and return error if fails."""
dca4f5fdbc,jesus,4,True,0,4,0,0,4,0,0,4.0,False,"INFO: Bug preventing commit. Uses a pre-defined helper, instead of some specific code, which could trigger bugs. In part, the commit is triggered by a warning, thus ASC.

Interesting that some annotators think this is a PRC (maybe because the use of a helper being a kind of refactoring?). I'm not labeling as PRC because in my opinion, the refactoring is at the service of fixing the potential bug, and is not a refactoring without an impact on behavior (now, some bugs are prevented, but nothing else changed)."
c8e98eaf2b,jesus,4,True,0,0,0,4,0,4,0,0.0,False,"INFO. Clear NFC: ""Add a board config adl_rt5682 to support alc5682 headset codec"". No bug to fix (except if adding a new configuration for a new device is considered as fixing a bug, which in some contexts cout be...).

Good example of a case which seems a NFC, but could be considered as a BFC if adding support for a missing codec is considered as fixing a bug.

I assume it is a spec change, because now scpec include this new codec."
ed482dc8c7,jesus,4,True,4,0,0,0,0,0,4,0.0,False,"INFO. Fixes some build failures, so BFC. The expression ""which can lead to build failures in some configurations"" could, however, imply it is a BPC, so that could also be fasible. I tend to think it is a BFC because in this case, the bug seems to be clear, given that those configurations that are mentioned are possible. However, there is room for discussion, so this could be a good example of a borderline BFC / BPC. Also, it is a good example of a BFC (or BPC) fixing a bug at build time (meaning that the system wouldn't even build). It is an obvious bug, because if it happens, it is obvious there is an error, which should be catched."
aa0a20f521,jesus,4,False,0,4,0,0,0,0,0,4.0,True,"INFO. BPC, since the commit changes code to ""avoid using R9 in the IRQ handler code, as the entry code uses it for tsk, and expects it to remain untouched between the IRQ entry and exit
code."" No specific bug is mentioned, and this is done in the context of supporting some new SMP processors, if I understand well the rest of the patchset, and the previous versions of it. Looking at the message describing the patchset [1], this is in fact v4 of the patchset which included the new functionality. Therefore, it would be a NCF, if not because it seems that V4 was accepted into the kernel, even when problems with it were found later, and that's the reason for V5 and V6 (which is produced as a delta against V4, which is already in the kernel).

In summary: some new functionality is added to the kernel (V4), bug is later found with problems, so this V6 is produced (and later accepted). It doesn't seem this patch fixes any specific bug, but clearly addresses a problem with severe potential consequences, thus a BPC (with an impact on safety).

[1] https://lore.kernel.org/all/20220125091453.1475246-1-ardb@kernel.org/"
b00e3e03cf,jesus,4,True,0,4,0,0,0,0,0,0.0,True,"INFO. It is described how it is found that ""LDO4 is not connected so disable it"", and LDO5 is connected and used, so it should be enabled. The commit fixes this. No specific bug is mentioned, but it is likely that software using LD05 would not work. So, I think this is a BPC.

I see some annotators consider this as a PRC, which I don´t understand, because it has an impact in ""correctness"" (some faulty behavior would be avoided). I also don't understand how this can be an NFC.

Interesting case of three annotators (four with me) understanding the commit the same way, but reaching very different conclusions about how to classify it."
daeb1c2b50,jesus,3,True,0,4,0,0,0,0,0,4.0,True,"INFO. This seems to be a bug preventing commit: ""The pin controller device node is expected to have one (optional) interrupt. [...] Exynos850 defined the second part - interrupt for each pin in wake-up pin controller - but also added these interrupts in main device node, which is not correct."" Therefore, no specific malfunction is described, but the mapping of interrupts was not correct. It could be a BFC if we consider this fixes a bug, but in fact it seems to be mostly a bug preventing action, or even a perfective action, since there is no description of specific problems caused. I'm labeling it as BPC, since a user of this code could think it can select the interrupt in the device node, which would trigger the bug (I think).

Interesting case of a commit where we all have different opinions on how to classify, even when we have at least a general understanding about what is happening. Maybe we could need a kernel developer to explain further this commit, and its consequences?

Also, labeling it a safety-related, because it could happen, if I understand it well, that the wake-up int is needed, but it is connected to the wrong interrupt (in the main device node)."
dd2319c618,jesus,4,True,0,4,0,0,0,0,0,4.0,True,"INFO. Bug preventing commit: some new annotations are included, to ensure that a warning is triggered if possible null pointers dereferences are detected. No specific bug is fixed, but the action intends to help in detecting (and hopefully fixing) bugs in vendor modules.

Interesting that, despite being in agreement with this diagnostics, two annotators still give a large mark (3, 4) to BFC."
512865d83f,jesus,4,True,0,0,0,4,0,4,0,0.0,True,"FIXME. Interesting case: a new version number is exposed to guests (I assume they are users of the module API). I think this is a new feature (new version number exposed by the API), according to change in specs (version number now is the new one). Inherently enough, it is a part of a patchset where  some new functionality is added to this new version (but not in this commit).

Interesting case, because this is likely a corner case of change in specs (and new feature implementation), since it has not a real functional impact."
4ec25b49f4,jesus,4,True,0,0,4,0,0,0,0,0.0,True,"INFO. Perfective commit. It is on a test, so it cannot change functionality (therefore, not fixing a bug), and it doesn't seem to be implementing or supporting the implementation of a new feature. BTW, the rationale for the change is clear in the message for the whole patchset [1¸: ""There are some bpf tests using hard code netns name like ns0, ns1, etc. This kind of ns name is easily used by other tests or system. If there is already a such netns, all the related tests will failed. So let's use temp netns name for testing.""

[1] https://lore.kernel.org/all/20220125081717.1260849-1-liuhangbin@gmail.com/"
e7b060460f,jesus,4,True,4,0,0,0,0,0,0,0.0,True,"INFO. The commit adds support for a feature (timestamping in ipv6 ping) which was not supported earlier. Since the spec for ipv6 is clear, this is not a new feature, but a bug fix (some functionality that should be there, according to the spec, was not)."
ae962e5f63,jesus,4,True,0,4,0,0,0,0,0,0.0,True,"INFO. Bug preventing commit, to avoid possible shadowing of a variable. It doesn't directly change functionality, but tries to prevent future bugs."
6a6f457ed5,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"INFO. This commit fixes a specific case that could happen: a table could not be allocated, therefore, check if that happened, and in that case, it returns a null pointer. This seems to fix a bug, since the behavior without that check is erroneous, and could cause a malfunction, by trying to work with a table which does not exist. I think it is a BFC and not a BPC because it is actually fixing a very specific case (the table was not allocated, which would cause problems).

Interesting case of what ""prevent"" means, with respect to ""fix"" (see how annotators understood the commit)."
9087c6ff8d,jesus,4,True,0,0,4,0,0,0,0,0.0,False,"INFO. Moves a call to a function to the proper place. Apparently, there is no change in functionality, only a function that checks some concurrency scenario is called once (instead of twice). So, a perfective commit."
9b392e0e0b,jesus,4,True,4,0,0,0,0,0,0,0.0,False,"INFO. Changes the variable to use in a print statement. Instead of printing the variable directly, which could be null, it calls a function to obtain the right value (producing null if needed). This fixes a bug, since the code fixes is intended to write a message which is not right if the value is null (instead, a relatively obscure error was printed). Thus, BFC.

Tow annotators classified this as PRC, but I don't see the reason. Maybe because ""core"" functionality is not changed? (I mean, if we consider that these functions that are intended to print messages are not really part of the ""core"" functionality.

NOTE: I couldn't find it in a patchset, except for the one collecting commits for a stable release [1] (which clearly references this as an upstream commit, thus this is not really the patchset).

[1] https://lore.kernel.org/all/20220412062954.935795098@linuxfoundation.org/"
0301bcd599,jesus,4,True,0,4,0,0,4,0,0,4.0,True,"INFO. Casting a constant to a variable. Some compilers (or compiler flags) don't allow directly using (void *), so more specific code is used. This should also help to prevent bugs. Thus, bug preventing commit, signalled by an automated tool (the compiler, in this case).

Interesting that one annotator considered this as BFC (but I don't see any bug being fixed), or PRC (but I don't see any perfective action being performed)."
9af41cc334,jesus,4,True,4,0,0,0,0,0,0,0.0,True,"INFO. This is seems as a BFC to me, since some missing functionality (echo, in this case) is implemented for GTP (GPRS Tunnelling Protocol). However, I see there is room to consider this as a NFC, since also the specs for this case are clear, and there *should be* implementation for echo, we could also consider that the spec for Linux was ""just a subset of the GTP spec"", and it is being extended now, to also support echo (and thus, it would be a NFC).

Interesting (maybe bordeline) case where the problem is to define which one is the spec.

Some annotators are also considering this, in part, as BPC, but don't get why. Maybe because ""it could happen that an echo message is received"", and in this case, this would be preventing a bug in that case? If that is what they understood, I think they are wrong,  because BPC are for general improvements that could prevent bugs, not fix specific bugs (problems with the functionality), which is this case, since the scenario in which the bug would be triggered is clear (receiving an echo message)."
ec80906b0f,jesus,4,True,0,0,4,0,0,0,0,0.0,False,"INFO. Fixing errors in tests. I think this can be considered a PRC, since it improves the code, but does not impact on functionality.

It seems that the annotator who labeled this as BFC didn't notice the fix was in a test."
2485c12c98,jesus,4,False,0,0,0,4,0,4,0,0.0,True,"INFO. This is part of the v5 version of a patchset [1]. The patchset is implementing some new functionality to support a tool (CRIU). The commit itself seems to fix a bug, by adding some data when restoing some data structure. But I think it is in fact a part of the new feature, thus a NFC. Curiosuly enough, none of the annotators thought the same (?).

specs are being changed in the patchset. Being this commit a part of it, I consdier it is also changing specs.

[1] https://lore.kernel.org/all/20220203090918.11520-1-rajneesh.bhardwaj@amd.com/"
79af2404e5,jesus,4,True,4,0,0,0,0,0,0,0.0,True,"INFO. This seems to add some functionality which should be in the code, to address a case which is in the specs (see discussion [1] and lines ""BSpec: 52890, BSpec: 49421""). Thus, considering this should be implemented, because it is in the spec, I think this is a BFC. As in other cases, if we consider that the Linux specs were a partial version of the ""real"" specs, not including this one,  which is considered now by extending the Linux specs on this matter, it would be a NFC.

[1] https://patchwork.freedesktop.org/patch/473540/"
719ca37972,jesus,4,True,4,0,0,0,0,0,0,0.0,False,Remove interrupt flags which are incorrect. Seems like a clear BFC to me.
2703c16c75,jesus,4,True,0,0,0,4,0,0,0,0.0,True,"This is a part of a large chunk of new code to support (or better support) Compute Express Link (CXL) . As seen in the description of v0 of the patchset [1]: ""Two new drivers are introduced to support Compute Express Link 2.0 [2] HDM decoder enumeration [...] cxl_port [...] cxl_port."" In particular, the commit main purpose is to ""provide a common mechanism for a CXL.mem endpoint driver to enumerate all the ancestor CXL ports in the topology and validate CXL.mem connectivity."" So, I think this is clearly a NFC, part of a large new functionality patchset. Even when the specification could be changing in part to allow for this new implementation, that's not done in this commit.

Curiously enough, none of the annotators saw it that way... Maybe I'm wrong?

[1] https://lore.kernel.org/linux-cxl/20211120000250.1663391-1-ben.widawsky@intel.com/
"
208cc9fe6f,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"This seems like a clear BFC: a check for a memory boundary is done in the wrong way (it should use the pool's DMA address instead of using the virtual address). As is before the commit, the code would perform wrong (not calculating the boundary the right way), and the commit fixes this."
d49fc69293,jesus,4,True,0,0,4,0,0,0,0,0.0,False,"INFO. Interesting case of a compiler flag not supported in clang, causing noise. The fix is easy: adding the flag to those flags that are ignored if not available. I guess this is just a PRC (perfective commit, in this case to increase the quality of compilation logs). No functionality is changed, so no change for a BFC or BPC.

Curiosly enough, only one annotator is coincident with my classification.

I couldn't find the commit in LORE."
a156f09c90,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"A table (extable) may not be available at the time it is needed. This commit fixes that case. This seems like a clear BFC. Safety implications, because without the fix, the algo will not work in some circumstances."
c8bd296cca,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"This seems like a BFC: a fallback for a crypto algo is needed, but for that to work, some modules need to be selected in config. The commit does so. The wrong functionality is clear, the fix too. Safety implications, because without the fix, the algo will not work in some circumstances."
b5fa1d09f1,jesus,4,True,0,4,0,0,0,0,0,4.0,False,"Preventive commit. It makes MAC addresses a constant, which could prevent errors (or allow for automatic detection of errors).

Curiously enough, none of the annotators classified it this way.

I can't find this one in LORE"
f93e2a100e,jesus,4,True,0,4,0,0,0,0,0,4.0,False,"Preventive commit. No bug is reported, but it seems reasonable to check the return of kzalloc just in case it returns null (in which case the function should return directly). This should allow to catch this situation in the future, by ensuring null is returned instead of the function trying to do something wrong."
5f24d5a579,jesus,4,False,4,0,0,0,0,0,0,4.0,False,"INFO This commit fixes a problem that happens in ARM, but not in other archs. Apparently, when the functionality for huge address spaces was added, it was not taken into account completely how ARM does it. Thus, this is fixing that bug (which would prevent that functionality working properly for ARM). Thus, this is a BFC. Alternatively, if we think that the original implementation specs didn't include ARM, this would be a NFC. But that doesn't seem to be the case.

I think annotators didn't completely understood this commit, or understood it differently."
3e5a8e8494,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"A clear case of a bug is described in the commit (""avoids, software reset timeout issues as below""). So, I think this is a clear case of a BFC, with a bug described in the commit message."
570a4bf744,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"This is a commit which in its message describes the bug it is fixing, and its root cause, ""The root cause of this failure has been traced to a failure to compute a nonzero value of mr in rare situations."" The commit fixes this, so clearly a BFC."
c223929418,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"A bug is described in the commit message: ""the driver calls sysfs_remove_group() for the groups it believes has been registered.  However, if the group was never previously registered, then this causes a splat."" The commit fixes this bug."
9aeb7f99a1,jesus,4,True,0,4,0,0,4,0,0,4.0,True,"A new annotation is produced to ""more correctly"" deal with situations when it is known that it is safe to touch some data. It seems no specific error is fixed, but potential bugs are prevented. Thus, BPC. In addition, a reason for these changes is avoiding some warnings (an automated suggestion), thus this is also an ASC.

It could also be a perfective commit, if we consider it does not prevent bugs, but I think that's not the case (or my understanding of the code is not that deep to realize that)."
aeb8441203,jesus,4,True,0,4,0,0,4,0,0,4.0,False,"A new version of GCC shows warnings about a potentially dangerous casting. The commit fixes those cases. I understand it is not a BFC because no specific bug is mentioned. It is a BPC because thanks to the changes, bugs are prevented. Since it is suggested by the compiler, it is also ASC."
d9edc4bc67,jesus,3,True,0,0,0,4,0,4,0,4.0,True,"The comment says: ""The code change proposes a new way to set bch geometry for large oob NAND (oobsize > 1KB). In this case, previous implementation can NOT guarantee the bad block mark always locates in data chunk, so we need a new way to do it."" From this, it could be either a BFC (fixing the problem that previous implementation does not work properly), or a NFC, being new functionality not previously in spec (support for large oob NAND). Marginally, it could be a PRC, if this is just a new way of doing the same (refactoring), but this doesn't seem the case, since at the same time, large oob NAND chips now work.

By checking in the message describing the patchset [1], I read ""For some NAND chips that oobsize larger than 1KB, a new way to set bch was introduced, which may use a separate ecc for meta."" With this, I tend to think that this is more like an NFC, because those chips were not really in-spec earlier. To be more conclusive, we would need somebody with better knowledge of this patch, but for now, I'm leaning towards NFC.

If we consider it as a NFC, it would also be a spec change, since the commit specifies that now those chips should work.

[1] https://lore.kernel.org/linux-mtd/20220412025246.24269-1-han.xu@nxp.com/

"
0c9ee5ba75,jesus,4,True,0,4,0,0,4,0,0,4.0,False,"Adds a prototype to the declaration of a variable. This should help in preventing bugs, thus this is a BPC. In addition, the change is triggered by a compiler warning, so ASC. 

Curiously enough, no annotator classifies as BPC."
116c3f4a78,jesus,4,True,4,0,0,0,0,0,0,0.0,False,"From the commit message: ""Increase maximum brightness for Dream Cheeky to 63. Emperically determined based on testing in kernel 4.4"" From this, I guess this is a BFC. Previously, maximum brightness was 31, which was an error."
002752af7b,jesus,4,True,0,4,0,0,0,0,0,4.0,,"This commit is done to prevent some problems, that happen with the previous implementation: ""This approach uglifies the code and adds a point of making a mistake, i.e. forgetting about error point case."" In fact, the commit does not fix anything, it just ""allow[s] an error pointer to be passed to the fwnode APIs."" Thus, I think this is a BPC: helps to prevent bugs, such as ""forgetting about error point case"".
"
590a8e564c,jesus,4,True,4,0,0,0,0,0,0,0.0,True,"This commit fixes a clear bug: ""it could overwrite the HW buffer containing the old transmit with the new transmit, leading to garbled data on the CEC bus""."
7b8b82224c,jesus,4,True,4,0,0,0,4,0,0,0.0,False,"INFO. This seems to fix a bug: ""Remove .owner field if calls are used which set it automatically.
./drivers/net/ethernet/sunplus/spl2sw_driver.c:569:3-8: No need to set
.owner here. The core will do it.""  There is also a reported-by field. So, I lean to BFC. However, the only effect seems to be to remove the warning. So, if we consider the warning as a part of the functionality, it is changed (and fixed). If it is not, this would be just a PRC. Having all into account, I still think it is a BFC, since the warning could be important, as a part of the functionality (and disturbing). It would also be a ASC, because the problem is detected thanks to the (automatic) warning.

This commit, and some others similar, maybe are showing that we would need to define if these log messages are part of the functionality or not."
3128ea0169,jesus,3,True,4,0,0,0,0,0,0,0.0,True,"Apparently, some rx frames were not accepted, but they should be. This seems like a BFC to me. However, it could be a new feature if dropping those frames previously was intentional, and now we could consider the spec changed.

I'm not sure about implications for safety, I assume none."
abba345311,jesus,4,True,0,4,0,0,0,0,0,4.0,False,"BPC, because a check on the antenna config is moved to a better place, hopefully avoiding cases where the check is not done. There is no specific scenario described of a bug caused by the previous code, so I assume this not a BFC.

I assume safety implications, because if the fight config for the antenna is not provided, the system could malfunction."
e950329880,jesus,4,True,0,0,4,0,0,0,0,0.0,True,"There is a warning by a new version of the compiler (GCC 12). The warning seems to be unjustified, so the developer adds code to ignore the warning (causing it not appear in the build logs). This does not have an impact on functionality, so I classify it as perfective (produces cleaner, more trustable compile logs). It could also be a bug fixing commit, but for fixing a bug in the compiler (which is raising a warning with no cause), but I think bug fixing should be focused on bugs on the kernel, not the tools to build it.

This is a part of a patchset doing similar stuff for other GCC 12 warnings."
a90b8fc9ca,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"INFO. The commit message mentions HDMI specifications: ""HDMI1.4b specification section 6.5.3: Source shall only send GCPs with non-zero CD to sinks that indicate support for Deep Color."" The commit ensures that ""auto-CGP"" is not activated for sinks that do not indicate support for DeepColor. So I think this is a BFC to be conformant with specs.

In the previous version of the patchset (v2) [1], this is mentioned as a bug fix (beware, the name of the commit is different)

Note: Probably when defining ""specs"" we should clearly specify that if specs are supposed to be followed (as in this case), anything to implement the specs more completely is a BFC (since it is fixing a case when specs are not followed, and thus is causing malfunction). However, we should have into account different versions of the specs (in this case, HDMI1.4b is mentioned, maybe the fixed code was written for a previous version of the spec, which didn't have this provision, and therefore this would be a NFC), or cases when Linux specs include only a partial version of the ""external"" spec, such as ""limited support of HDMI"".

[1] https://patchwork.freedesktop.org/series/102256/"
a772105cfa,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"The patch updates the field order in a struct: ""Update field order to match DP2.0 spec SCR"". This seems like a BFC, since if the order was wrong, the information in the field was also wrong. However, the wording (""update"") could mean that DP2.0 is a new spec which changes the order with respect to some previous spec? I don't think so, because in that case it is likely that both specs were supported, and the patch would be different. Therefore, I lean towards BFC."
0f12a22f37,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"INFO. This seems like a cleat BFC: a table has to be flushed before doing some other action, otherwise old data will remain in it. I think it is BFC and not BPC because there are clear scenarios in which the fix is needed (whenever the table is later reused). In fact, in of the messages in the thread [1], I read ""this fix is needed for correctness"" and ""This fixes a regression that was introduced by recent changes to the TLB flushing code"", which reinforces the idea that this is a BFC.

In any case, this leads to think about when do we exactly have a bug fix (versus a bug prevention). Maybe we should dig a bit more on this. A bug fix could be when there is at least a clear scenario when there would be a malfunction, while a bug prevention would be when ""reasonable measures are taken to avoid cases that could lead to a malfunction, but no specific scenario of such malfunction can be described"". Or it should be ""is described""? Food for thought...

[1] https://lore.kernel.org/all/f125dd0d-034a-9d7a-c446-19e817a94b38@amd.com/"
60f6fe665e,jesus,3,True,0,4,0,0,0,0,0,4.0,False,"From the commit comment: ""Make dcn315 base its clock table off dcfclk rather than fclk"". In other words, reading [1], make the device base its clock table off Display Controller Fabric Clock rather than Fabric Clock. This seems like a BFC (if it is fixing a bug) or a BPC commit (if it is preventing bugs that may happen because of the selection of a wrong clock in some circumstances). Since the device seems to be working before the commit, and no specific scenario is mentioned, I tend to think it is the second case, so I classify it as BPC. However, in the same patch there is also ""adds some sanity checking to make sure an empty pmfw table does not result in invalid dal clocks"", which means this is also a BPF because of that (in this case, a bug is prevented, but there is no specific scenario of how the code as it is now could be causing a malfunction).

I couldn't find a patchset (I couldn't find this message in LORE).

[1] https://docs.kernel.org/gpu/amdgpu/display/dc-glossary.html"
f716113aac,jesus,4,True,0,4,0,0,0,0,0,4.0,True,"Prevention of unspecified malfunctions: ""Check the table signatures and checksums and verify that the tables exist before accessing them""."
9995c1d096,jesus,4,True,0,0,4,0,0,0,0,0.0,True,"INFO. This commit doesn't seem to fix any bug, or prevent any bug. It is improving the implementation of a specific case, as was suggested by reviewers of a previous commit. From this point of view, it seems it is a PRC. There could be reasons for considering it a NFC, because the commit comment says: ""This would allow for a more consistent resource management for platforms where PAUSE and STOP are handled differently"", which may imply that some new functionality is being added for that kind of platforms. But I find this case to be weak enough to still consider the bug as a PRC.

However, this could be an interesting example for defining where ""perfective commits"" end (in general, they are assumed to not change functionality: does this commit change it?), and where ""new feature"" starts (in this case, it could be that supporting those platforms where PAUSE and STOP and handled differently is enough of a reason to consider it as a new feature?"
e730558adf,jesus,4,True,0,0,0,4,0,4,0,4.0,True,"INFO. Interesting case. At first glance, it seems like refactoring, thus PRC. But when looking in more detail, behavior is changed (see description of several changes in the commit message), thus this would imply a change in implementation, and therefore a NFC. I annotate it as such. However, it would be interesting to see if a more clear line can be drawn between refactoring and changing specs (and their implementation), or between refactoring and fixing how specs are implemented (in this case, it could be understood that the previous implemenation was wrong, and therefore this is a fix). Or maybe all we have is shadows of grey between all these three cases. In this case, I'm annotating it as change in specs, since I assume this is implicitly changing specs to the new behavior. But this is obviously arguable."
42da167bbd,jesus,4,True,0,0,4,0,4,0,0,0.0,True,"Apparently, this is just refactoring (change in names in labels), due to some warning popped out by some new checks (""The recent addition pinctrl.yaml [...] resulted in some node name warnings"")."
24a3db53ec,jesus,4,True,0,0,4,0,4,0,0,0.0,True,"INFO. Fixes some warning in the build process, apparently just by refactoring, and apparently with no implications for bug prevention.

This is an interesting case of when it is bug prevention, and when it is just a perfective change. In the definitions, we have drawn the line in if it is impacting possible bugs (bug prevention) or not (perfective change). But in cases like this, there could be shadows of grey: the refactoring could lead to better understandable code, and less chances for future bugs. This said, I guess the line should be in possible scenarios of preventing bugs (eg, avoiding using a null pointer), vs general refactoring which could lead to better understanding, but no specific malfunction avoided, even just as a possible scenario."
23347c90e2,jesus,4,True,0,0,4,0,4,0,0,0.0,True,"Same case as 24a3db53ec (exactly same case, but in other files)."
7cbeeb0553,jesus,4,True,0,4,0,0,4,0,0,4.0,False,"INFO. This is a bug prevention commit, to fix a warning raised by the compiler. As in other cases, this could be just refactoring (changing the type of a variable), but I tend to consider this as a help for catching future bugs, and therefore BPC. There is room for discussion, anyway."
4e05a4b329,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"INFO The patch is in a patchset titled ""Fix race conditions in rxe_pool"". The patch seems to fix one of this by changing the order to flush a table. So, I think this is a BFC, since there would be race conditions if the patch is not applied (in fact, the patch also explains why the current code is not working in some cases): ""The ref is never 0 today because the tasklets are flushed before the ref is dropped. The next patch changes this so that the ref is dropped then the tasklets are flushed.""

It is interesting how annotators explain ""add check to detect possible failures"" when in fact, I think it fixes the code so real malfunction cases are fixed.

Interesting case of the line between fixing a bug and preventing a bug."
a3b774342f,jesus,4,True,4,0,0,0,4,0,0,4.0,False,"INFO. This fixes an error, by not detecting shift values that are too large.

Annotators tend to think it is more a BPC than a BFC. Again, this could be a sympthom of drawing better the line between both, or that there are shadows of grey...

The error is detected by specific code in the kernel (the error is shown in the commit message, thus this is also an ASC."
82cd4bacff,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"This commit fixes an error when ""the transaction ID passed to as argument is 0"". Those messages should be considered, and not ignored, and that is what this commit does. So, BFC.
"
da4363457f,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"Refactoring, with apparently no effect on functionality. Suggested by warnings while compiling, so ASC.

None of the annotators identified it the same way I did (?)"
690b2549b1,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"Bug fix, consisting in ensuring a variable coming from the user cannot ""write beyond the end
of dma_buffer[]"".

Curiously enough, annotators consider it as a BPC mostly... Maybe because it is not clear when user functions could use the variable for overwriting beyond the end of the buffer?"
d6f8168e43,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"Correctly cast the return value of a function, which for some archs returns a different type. This doesn't seem to cause errors, since it is only used for printing a warning message at build time, so it doesn't seem to be a BFC or a BPC, but a PRC. This also removes a build-time warning (thus, ASC)."
403d50341c,jesus,3,True,4,0,0,0,0,0,0,4.0,False,"Fixes a problem in a function for copying memory, by having into account some offsets. Seem to fix a bug, which would happen when those offsets are not considered, although I'm not 100% sure I correctly understand the patch."
647df0d41b,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"A warning is printed due to a formatting error for a variable, which is fixed by casting it. Since it doesn't change functionality (besides not triggering the warning), it is not a bug fix or prevention. So, PRC. Also, ASC because it was suggested by the warning."
ec906102e5,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"A performance test is failing, and it is fixed. This does not deal with bugs in the kernel, but helps to test performance, therefore PRC. Triggered by an error when running the tests, so ASC."
9577fc5fdc,jesus,4,True,0,0,4,0,0,0,0,0.0,True,"INFO. Avoid logging an errror in a case when it is misleading. Considering that log printing is not part of the functionality, this is not dealing with a bug, thus PRC.

Important: we should clarify if error and warning logs are part of the functionality (and therefore, subject to specs) ir not."
a382f8fee4,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"A certain function (BUG_ON) should not be called in some circumstances, because it may halt the system with locks. Instead, some other function that let the system continue after logging an error should be used. Doing it in some other way goes against specs of what to do in those cases. So, bug fix."
d147553b64,jesus,3,False,4,0,0,0,0,0,0,4.0,True,"To understand UNTRAIN_RET, I checked the source code [1], and some info in the Internet. Apparently, this is related to mitigating bugs such as RETBleed (see for example [2]). I assume that this commit tries to ensure that the mitigation is also done in the Xen case. Thus, BFS. However, I'm not completely sure, this would be one of those cases where somebody with good knowledge of the code would be specially useful.

[1] https://github.com/torvalds/linux/blob/ee9a43b7cfe2d8a3520335fea7d8ce71b8cabd9d/arch/x86/include/asm/nospec-branch.h#L281
[2] https://www.phoronix.com/news/AMD-SRSO-Inception-Fixes-2024"
6cc2714e85,jesus,3,True,4,0,0,0,0,0,0,4.0,True,"INFO. Use the correct constant in a comparison. I think we can assume the old one was erroneous, thus this is a bug fix.

If the old one was not completely correct, but doesn't cause problems (for example, because both have the same value), this would be a bug prevention commit (preparing for the case that the values differ). But I cannot tell that without a better understanding of the code."
e60414644c,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"There was a warning message printed at boot time. It is detected that it is due to a node not being used. It is fixed by removing the node. Functionality doesn't change, so I understand it is not a BFC or a BPC. I classify it as a PRC."
cbd2574854,jesus,4,False,0,0,4,0,0,0,0,0.0,True,"This is a part of a patchset re-implementing socket multi-receive. Functionality seems to remain the same. So, the patchset is perfective (improves performance), and thus this commit too."
932be3e95b,jesus,4,True,0,4,0,0,0,0,0,4.0,False,"INFO. Fix a data structure. The fix could have implications when zeoring or counting the size of the data structure. Thus, bug preventing (no specific malfunction is mentioned).

But the story becomes more interesting when reading an answer in the thread: ""since those fields were not used before and IIRC the below result struct size is set dynamically (the h/w doesn't expect a fixed size) this doesn't need to be backported to stable trees"" [1]. So, it seems this is a new feature being implemented, but still not in use. From this point of view, it could be considered either as a part of the new feature (being fixed before it really enters production) or as a preventive commit (the feature was implemented, and this is an early fix). I lean to the latter.

[1] https://lore.kernel.org/all/165691958960.3764.6967842126015044710@kwain/
"
7460ade1fc,jesus,4,True,0,0,4,0,0,0,0,0.0,True,"This commit deals with tasks being in a critical section (within a RCU, read-copy-update [1], protection schema), and more concretely, in a RCU tasks schema [2] (data is protected until no task has a reference to it). The commit can be found as a part of a patchset [3] which is presenetd as ""This series provides updates for the RCU Tasks family, perhaps most notably reducing the CPU overhead of RCU Tasks Trace grace periods"". Therefore, it seems these changes do not fix a bug, but improves performance. Thus, PRC.

From the description of the annotators, it seems that they focus on the specific commit, not having the whole patchset into account.

[1] https://www.kernel.org/doc/html/next/RCU/whatisRCU.html
[2] https://lwn.net/Articles/607117/
[3] https://lore.kernel.org/all/20220620225402.GA3842369@paulmck-ThinkPad-P17-Gen-1/"
fd8b330ce1,jesus,4,True,0,0,4,0,0,0,0,0.0,False,"It seems a duplicate function entered the code unnoticed. This commit removes the dup. It doesn't seem to have any impact on functionality. So, I think it is a PRC."
7e193a42c3,jesus,4,True,0,4,0,0,0,0,0,4.0,False,"INFO. Change in the code due to a new functionality (but implemented several years ago): a module for fixed bitrates for the CAN bus. Apparently, changes in bitrates using that module were possible when configured via netlink, but they shouldn't, which is what this commit fixes.

I doubt between BFC (it fixes a possible scenario) or BPC (just prevents for some possible bugs when trying to change the bitrate, but that is not possible). I finally decide the latter, because according to [1], likely the problem didn't happen because the code calling this does not enter into that scenario.

[1] https://lore.kernel.org/all/20220611172438.59ad6167.max@enpas.org/"
8094029330,jesus,4,True,4,0,0,0,0,0,0,0.0,True,A bug is described in the commit message. The commit fixes it.
1ee6c5abeb,jesus,4,True,0,0,4,0,4,0,0,4.0,False,"INFO. A wrong assumption on how interrupt lines work is fixed, using the right data to determine when an interrupt is activated. This cleans some warning message, which seem to have triggered the commit. It seems in the case described, the code was working (if we don't consider those warning messages), likely because the code was expecting edge rising, while the devices were using level high (which has an edge rising when the interrupt starts). Thus, a perfective commit: the code is ""better"" by using the right data, and the warning message is removed.

 However, an interesting discussion: the use of the wrong data (edge rising instead of info in Devicetree) should be considered as a bug? In that case this would be a BFC... And of course, the discussion on whether fixing warning messages should be considered a change in functionality, and thus this could be fixing a bug just by causing that warning to no longer appear."
3470079687,jesus,4,True,4,0,0,0,0,0,0,0.0,True,"INFO. This commit fixes an error (EBUSY in some circumstances) by allowing the MTU to be changed with the device up, if a correct request for changing the MTU arrives. So, this seems like a BFC to me, with a clear description of the malfunction in the commit message.

This could be a part of a NFC if we would consider that letting the device change the MTU while up is a new feature (since the device was already implemented without that feature). Again, this could be a matter of ""real, external specs"" (which allow for the change in MTU in any moment) vs ""Linux specs"", which maybe would define spec of the device as not allowing for that MTU change when the device was up, and now changing to allow for it."
cc1049ccee,jesus,4,True,4,0,0,0,0,0,4,4.0,False,"Fixes a bug, which is described in the commit text (the scenario causing the bug). The bug indeed seems a regression."
9f22f95951,jesus,4,True,0,0,0,4,0,4,0,0.0,True,"INFO. Specific config info for two cameras, which ""don't implement the power line correctly"". This could be a bug (those cameras were not well supported), but also a new feature, since likely those two cameras were not supported at all, and are supported now. Again, this is a matter of deciding if those two cameras were in-specs or off-specs before this commit. Let's assume they were off-specs (in principle, the previous code was correct, in the sense it supported all other supported cameras), and this commit is putting these cameras in-specs, and at the same time, supporting them.

In addition, this commit is part of a patchset [1] which states: ""The goal is still to support the UVC 1.5 power line frequency control extra option (patch 1/7), and work around an issue with devices that do not implement support for disabling the power line frequency (patches 2/7 to 7/7)."" Which again seems to be a new feature (supporting ""UVC 1.5 power line frequency control extra option"").

In any case, yet another example of how definition of what is in-specs and what is off-specs is fundamental to decide if a commit is fixing a bug or adding new functionality.

[1] https://lore.kernel.org/all/20220617235610.321917-1-ribalda@chromium.org/"
aa303964bc,jesus,3,True,0,0,0,4,0,4,0,0.0,True,"The commit refers (indirectly) to the implementation of PSR-SU for amdpgu, which was included in this patchset [1]. This reference can be found in the first commit of the patchset to which this commit belongs [2]: ""PSR-SU is implemented in upstreamed dmub FW but not enabled on DM and DC. We'd add necessary and missing definitions in dmub cmd header to align w/ the up-to-date DMUB FW for PSR-SU support."" An in particular, in this commit we read ""We need to implement the VSC packet rev4 that is required by PSRSU"". So, I think this is a part of the implementation of a new feature, the support of PSR-SU for DM and DC. It is not clear to me if we should also consider this as a change in specs (parallel to its implementation), or if that change was implicit when PSR-SU was implemented. I'm considering the change in specs is now, considering the previous change was changing the specs for ""generic support for PSR-SU for amdpgu"", and now this one extends the specs to specific support for DM and DC.

[1] https://lists.freedesktop.org/archives/amd-gfx/2022-May/078751.html
[2] https://lore.kernel.org/all/20220505142323.2566949-2-dingchen.zhang@amd.com/"
cff35798fa,jesus,4,True,4,0,0,4,0,4,0,0.0,False,"INFO. This commit seems to fix a problem with some new ASICS: ""GFX10 and up have work group processors (WGP) and WGP mode is the native compile mode"". Once again, this could be a bug fix (those ASICS are not working as intended, so a bug), or as the implementation of a new feature (those ASICS were not supported, because they were off-specs, and are now supported and in-specs because of this commit). I lean towards the latter, since those ASICS could not be in-specs when they still didn't exist (when, appartently, the code that is fixed now was written).

Apparently, all three annotators lean towards BFC instead."
747c7cf159,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"The comment for the partchset reads: ""This patch series adds trigger buffer support with data ready interrupt, separate channel for step counter, an event for step change interrupt, activity recognition and activity/inactivity event support."" [1]. This seems to imply a new feature (or several new features) are being implemented. However, the patch itself seems more like a fix. The explanation in the commit diff (LSB stands for ""least significative bit"") is detailed, and seems to imply that the previous values were wrong. So, I lean towards BFC in this case. Somebody with better understanding of the code could say otehrwise, anyway.

[1] https://lore.kernel.org/all/20220505133021.22362-1-jagathjog1996@gmail.com/"
0704a8586f,jesus,4,True,0,0,3,0,0,0,0,0,False,"INFO. This seems like a refactoring. There are two fields that can be used to create a set of sysfs files, and they are transitioning to a new one. This commit does the transition for s390, with the idea of removing the old field soon. Thus, functionality doesn't change, so no NFC, and no bug seems to be present. I think this is a PRC. "
c5e97ed154,jesus,4,True,0,0,4,0,0,0,0,0,True,"INFO. This doesn't seem to be exactly fixing an error, since the old functionality apparently was working, and no specific problem with it is mentioned. The new one could be better, but it is not clear if it prevents some bug. So, I think it is just a refactoring, thus PRC.

In addition, the commit is a part of a patchset, ""Separate struct slab from struct page"" [1], which seems clearly as refactoring.

[1] https://lore.kernel.org/all/20220104001046.12263-1-vbabka@suse.cz/"
4f9f531e15,jesus,4,True,0,0,4,0,0,0,0,0,False,"Apparently, this is just a refactoring and code clean-up."
258030acc9,jesus,4,True,0,0,4,0,0,0,0,0,True,"Refactoring. Making a field in a struct smaller, because the extra space is not needed. It is also a part of a ""cleanup"" patchset [1]

[1] https://lore.kernel.org/all/20220105132141.2648876-1-vladimir.oltean@nxp.com/"
3044a4f271,jesus,4,True,0,0,4,0,0,0,0,0,True,"Part of a patchset stating ""this series consists of a lot of cleanups and preparation work to improve FIFO handling."" [1] It seems like refactoring.

[1] https://lore.kernel.org/all/20220105154300.1258636-1-mkl@pengutronix.de/
"
8512559741,jesus,4,True,0,0,4,0,0,0,0,0,True,"INFO. A more specific function, which includes printing a log with the reason for dropping a package, is used. It seems this will help to find root cause for bugs in the future (although won't prevent them happening), so this is a PRC.

It is a part of the patchset ""the interface kfree_skb_with_reason() is introduced(), which is used to collect skb drop reason, and pass it to 'kfree_skb' tracepoint"" [1]. So, it is maybe even more clear that our commit is just a refactoring using this new kfree_skb_with_reason().

[1] https://lore.kernel.org/all/20220109063628.526990-1-imagedong@tencent.com/
"
18451db82e,jesus,4,True,0,0,0,4,0,0,0,0,True,"INFO. This commit is a part of the patchset ""Generate UDP src port with flow label or lqpn/rqpn"" [1]. The patchset, and the commit, seem to be adding new functionality (in fact, the commit just adds a function, not calling it). I assume the change in spec ""came earlier"" (maybe with the first commit in the patchset, maybe earlier), when the kernel people decided they were to support this functionality for UDP. Maybe we would need somebody with better knowledge to know if this is really new functionality.

[1] https://lore.kernel.org/all/20220106180359.2915060-1-yanjun.zhu@linux.dev/"
3b9cb4ba4b,jesus,4,True,0,0,4,0,0,0,0,0,True,"""Replace kthread_create_on_node/kthread_bind/wake_up_process() with kthread_run_on_cpu() to simplify the code."" It seems like a clear refactoring, with no change in functionality. It is a part of a patchset that adds the helper function kthread_run_on_cpu() [1], so more in favor of a refactoring.

[1] https://lore.kernel.org/all/20211022025711.3673-5-caihuoqing@baidu.com/T/#m24724ebdf1ffd5d7a0ccd36f9f14e7b4614e58e9"
f2fed022aa,jesus,4,True,0,0,4,0,0,0,0,0,False,"The subject is ""use swap() to make code cleaner"". So, it seems like a refactoring."
1eba86c096,jesus,4,True,4,0,0,0,0,0,0,0,True,"INFO. ""Ensure that some memory corruptions are prevented by checking at the time of insertion of entries into user page tables that there is no illegal sharing."" So, it seems a first sight like a BPC. But reading in detail, it seems it is a bit more than that: there is at one specific bug that was found, and that this commit fixes. Therefore, this is a BFC. 

This is, assuming the difference between BFC and BPC is the description of a specific case when the commit would fix a malfunction.
"
f346f32701,jesus,4,True,0,0,0,0,0,0,0,0,False,"INFO. Add new name to MAINTANERS file. This is an interesting case which is not a BFC, a BPC, a PRC or a NFC. It doesn't have to do with code. So, 0 in all of them."
9a9acdccdf,jesus,4,True,4,0,0,0,0,0,0,0,True,"There is an error handling path, a release of the DMA channel is needed. This seems to be a clear BTF, since a clear scenario of malfunction (in which the DMA channel would not be released) is fixed."
805a3ebed5,jesus,4,True,0,0,4,0,0,0,0,0,True,"This seems like a clear refactoring. It is a part of a patchset ""init clean up #ifdefs"" [1]. This reinforces the idea of it being refactoring, thus PRC.

[1] https://lore.kernel.org/all/20211206150353.731-1-jszhang@kernel.org/"
