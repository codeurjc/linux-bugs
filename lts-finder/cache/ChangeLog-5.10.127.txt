commit deb587b1a48d3ac4a29378fc238a4677944dff83
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jun 29 08:59:54 2022 +0200

    Linux 5.10.127
    
    Link: https://lore.kernel.org/r/20220627111933.455024953@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cca46c20541d8521c855f7eace5e96f4f005923
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sat Jun 11 17:10:15 2022 +0200

    powerpc/pseries: wire up rng during setup_arch()
    
    commit e561e472a3d441753bd012333b057f48fef1045b upstream.
    
    The platform's RNG must be available before random_init() in order to be
    useful for initial seeding, which in turn means that it needs to be
    called from setup_arch(), rather than from an init call. Fortunately,
    each platform already has a setup_arch function pointer, which means
    it's easy to wire this up. This commit also removes some noisy log
    messages that don't add much.
    
    Fixes: a489043f4626 ("powerpc/pseries: Implement arch_get_random_long() based on H_RANDOM")
    Cc: stable@vger.kernel.org # v3.13+
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220611151015.548325-4-Jason@zx2c4.com
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95d73d510b8ae6652b48709bc0f9283a18f8b092
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Fri Jun 24 04:11:47 2022 +0900

    kbuild: link vmlinux only once for CONFIG_TRIM_UNUSED_KSYMS (2nd attempt)
    
    commit 53632ba87d9f302a8d97a11ec2f4f4eec7bb75ea upstream.
    
    If CONFIG_TRIM_UNUSED_KSYMS is enabled and the kernel is built from
    a pristine state, the vmlinux is linked twice.
    
    Commit 3fdc7d3fe4c0 ("kbuild: link vmlinux only once for
    CONFIG_TRIM_UNUSED_KSYMS") explains why this happens, but it did not fix
    the issue at all.
    
    Now I realized I had applied a wrong patch.
    
    In v1 patch [1], the autoksyms_recursive target correctly recurses to
    "$(MAKE) -f $(srctree)/Makefile autoksyms_recursive".
    
    In v2 patch [2], I accidentally dropped the diff line, and it recurses to
    "$(MAKE) -f $(srctree)/Makefile vmlinux".
    
    Restore the code I intended in v1.
    
    [1]: https://lore.kernel.org/linux-kbuild/1521045861-22418-8-git-send-email-yamada.masahiro@socionext.com/
    [2]: https://lore.kernel.org/linux-kbuild/1521166725-24157-8-git-send-email-yamada.masahiro@socionext.com/
    
    Fixes: 3fdc7d3fe4c0 ("kbuild: link vmlinux only once for CONFIG_TRIM_UNUSED_KSYMS")
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Tested-by: Sami Tolvanen <samitolvanen@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feb5ab798698a05d14e74804dd09ba352c714553
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Mon Jun 20 11:03:48 2022 +0200

    random: update comment from copy_to_user() -> copy_to_iter()
    
    commit 63b8ea5e4f1a87dea4d3114293fc8e96a8f193d7 upstream.
    
    This comment wasn't updated when we moved from read() to read_iter(), so
    this patch makes the trivial fix.
    
    Fixes: 1b388e7765f2 ("random: convert to using fops->read_iter()")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 959bbaf5b7a9cc5504b88e3a5b87a11937df6366
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sat Jun 11 03:32:30 2022 +0900

    modpost: fix section mismatch check for exported init/exit sections
    
    commit 28438794aba47a27e922857d27b31b74e8559143 upstream.
    
    Since commit f02e8a6596b7 ("module: Sort exported symbols"),
    EXPORT_SYMBOL* is placed in the individual section ___ksymtab(_gpl)+<sym>
    (3 leading underscores instead of 2).
    
    Since then, modpost cannot detect the bad combination of EXPORT_SYMBOL
    and __init/__exit.
    
    Fix the .fromsec field.
    
    Fixes: f02e8a6596b7 ("module: Sort exported symbols")
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c980392af1473d6d5662f70d8089c8e6d85144a4
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 11:58:41 2022 +0400

    ARM: cns3xxx: Fix refcount leak in cns3xxx_init
    
    commit 1ba904b6b16e08de5aed7c1349838d9cd0d178c5 upstream.
    
    of_find_compatible_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 415f59142d9d ("ARM: cns3xxx: initial DT support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Krzysztof Halasa <khalasa@piap.pl>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 889aad2203e09eed2071ca8985c25e9d6aea5735
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jun 2 08:17:21 2022 +0400

    memory: samsung: exynos5422-dmc: Fix refcount leak in of_get_dram_timings
    
    commit 1332661e09304b7b8e84e5edc11811ba08d12abe upstream.
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    This function doesn't call of_node_put() in some error paths.
    To unify the structure, Add put_node label and goto it on errors.
    
    Fixes: 6e7674c3c6df ("memory: Add DMC driver for Exynos5422")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Lukasz Luba <lukasz.luba@arm.com>
    Link: https://lore.kernel.org/r/20220602041721.64348-1-linmq006@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44a5b3a073e5aaa5720929dba95b2725eb32bb65
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jun 1 13:05:48 2022 +0400

    ARM: Fix refcount leak in axxia_boot_secondary
    
    commit 7c7ff68daa93d8c4cdea482da4f2429c0398fcde upstream.
    
    of_find_compatible_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 1d22924e1c4e ("ARM: Add platform support for LSI AXM55xx SoC")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220601090548.47616-1-linmq006@gmail.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30bbfeb480ae8b5ee43199d72417b232590440c2
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu May 26 11:53:22 2022 +0400

    soc: bcm: brcmstb: pm: pm-arm: Fix refcount leak in brcmstb_pm_probe
    
    commit 37d838de369b07b596c19ff3662bf0293fdb09ee upstream.
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    In brcmstb_init_sram, it pass dn to of_address_to_resource(),
    of_address_to_resource() will call of_find_device_by_node() to take
    reference, so we should release the reference returned by
    of_find_matching_node().
    
    Fixes: 0b741b8234c8 ("soc: bcm: brcmstb: Add support for S2/S3/S5 suspend states (ARM)")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68f28d52e6cbab8dcfa249cac4356d1d0573e868
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon May 23 18:55:13 2022 +0400

    ARM: exynos: Fix refcount leak in exynos_map_pmu
    
    commit c4c79525042a4a7df96b73477feaf232fe44ae81 upstream.
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    of_node_put() checks null pointer.
    
    Fixes: fce9e5bb2526 ("ARM: EXYNOS: Add support for mapping PMU base address via DT")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220523145513.12341-1-linmq006@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59fdf108144c046e39e8ecb0dade7426fde772a6
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Wed May 11 18:08:23 2022 +0200

    ARM: dts: imx6qdl: correct PU regulator ramp delay
    
    commit 93a8ba2a619816d631bd69e9ce2172b4d7a481b8 upstream.
    
    Contrary to what was believed at the time, the ramp delay of 150us is not
    plenty for the PU LDO with the default step time of 512 pulses of the 24MHz
    clock. Measurements have shown that after enabling the LDO the voltage on
    VDDPU_CAP jumps to ~750mV in the first step and after that the regulator
    executes the normal ramp up as defined by the step size control.
    
    This means it takes the regulator between 360us and 370us to ramp up to
    the nominal 1.15V voltage for this power domain. With the old setting of
    the ramp delay the power up of the PU GPC domain would happen in the middle
    of the regulator ramp with the voltage being at around 900mV. Apparently
    this was enough for most units to properly power up the peripherals in the
    domain and execute the reset. Some units however, fail to power up properly,
    especially when the chip is at a low temperature. In that case any access
    to the GPU registers would yield an incorrect result with no way to recover
    from this situation.
    
    Change the ramp delay to 380us to cover the measured ramp up time with a
    bit of additional slack.
    
    Fixes: 40130d327f72 ("ARM: dts: imx6qdl: Allow disabling the PU regulator, add a enable ramp delay")
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb70bd86751ad2dd7d8db15a60d2bf8ce9803d72
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Tue May 10 07:46:12 2022 +0200

    ARM: dts: imx7: Move hsic_phy power domain to HSIC PHY node
    
    commit 552ca27929ab28b341ae9b2629f0de3a84c98ee8 upstream.
    
    Move the power domain to its actual user. This keeps the power domain
    enabled even when the USB host is runtime suspended. This is necessary
    to detect any downstream events, like device attach.
    
    Fixes: 02f8eb40ef7b ("ARM: dts: imx7s: Add power domain for imx7d HSIC")
    Suggested-by: Jun Li <jun.li@nxp.com>
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f78acc4288edf747e8376d50c92cb427e3193ec6
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Tue Jun 21 16:08:49 2022 +0200

    powerpc/powernv: wire up rng during setup_arch
    
    commit f3eac426657d985b97c92fa5f7ae1d43f04721f3 upstream.
    
    The platform's RNG must be available before random_init() in order to be
    useful for initial seeding, which in turn means that it needs to be
    called from setup_arch(), rather than from an init call.
    
    Complicating things, however, is that POWER8 systems need some per-cpu
    state and kmalloc, which isn't available at this stage. So we split
    things up into an early phase and a later opportunistic phase. This
    commit also removes some noisy log messages that don't add much.
    
    Fixes: a4da0d50b2a0 ("powerpc: Implement arch_get_random_long/int() for powernv")
    Cc: stable@vger.kernel.org # v3.13+
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    [mpe: Add of_node_put(), use pnv naming, minor change log editing]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220621140849.127227-1-Jason@zx2c4.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7db1ba660b07bc89fd608f30bff583d35ba34353
Author: Andrew Donnellan <ajd@linux.ibm.com>
Date:   Tue Jun 14 23:49:52 2022 +1000

    powerpc/rtas: Allow ibm,platform-dump RTAS call with null buffer address
    
    commit 7bc08056a6dabc3a1442216daf527edf61ac24b6 upstream.
    
    Add a special case to block_rtas_call() to allow the ibm,platform-dump RTAS
    call through the RTAS filter if the buffer address is 0.
    
    According to PAPR, ibm,platform-dump is called with a null buffer address
    to notify the platform firmware that processing of a particular dump is
    finished.
    
    Without this, on a pseries machine with CONFIG_PPC_RTAS_FILTER enabled, an
    application such as rtas_errd that is attempting to retrieve a dump will
    encounter an error at the end of the retrieval process.
    
    Fixes: bd59380c5ba4 ("powerpc/rtas: Restrict RTAS requests from userspace")
    Cc: stable@vger.kernel.org
    Reported-by: Sathvika Vasireddy <sathvika@linux.ibm.com>
    Signed-off-by: Andrew Donnellan <ajd@linux.ibm.com>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Reviewed-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220614134952.156010-1-ajd@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f5a9205a3be6406af488cd6511c481a6d6e9b71
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jun 9 16:03:28 2022 +0530

    powerpc: Enable execve syscall exit tracepoint
    
    commit ec6d0dde71d760aa60316f8d1c9a1b0d99213529 upstream.
    
    On execve[at], we are zero'ing out most of the thread register state
    including gpr[0], which contains the syscall number. Due to this, we
    fail to trigger the syscall exit tracepoint properly. Fix this by
    retaining gpr[0] in the thread register state.
    
    Before this patch:
      # tail /sys/kernel/debug/tracing/trace
                   cat-123     [000] .....    61.449351: sys_execve(filename:
      7fffa6b23448, argv: 7fffa6b233e0, envp: 7fffa6b233f8)
                   cat-124     [000] .....    62.428481: sys_execve(filename:
      7fffa6b23448, argv: 7fffa6b233e0, envp: 7fffa6b233f8)
                  echo-125     [000] .....    65.813702: sys_execve(filename:
      7fffa6b23378, argv: 7fffa6b233a0, envp: 7fffa6b233b0)
                  echo-125     [000] .....    65.822214: sys_execveat(fd: 0,
      filename: 1009ac48, argv: 7ffff65d0c98, envp: 7ffff65d0ca8, flags: 0)
    
    After this patch:
      # tail /sys/kernel/debug/tracing/trace
                   cat-127     [000] .....   100.416262: sys_execve(filename:
      7fffa41b3448, argv: 7fffa41b33e0, envp: 7fffa41b33f8)
                   cat-127     [000] .....   100.418203: sys_execve -> 0x0
                  echo-128     [000] .....   103.873968: sys_execve(filename:
      7fffa41b3378, argv: 7fffa41b33a0, envp: 7fffa41b33b0)
                  echo-128     [000] .....   103.875102: sys_execve -> 0x0
                  echo-128     [000] .....   103.882097: sys_execveat(fd: 0,
      filename: 1009ac48, argv: 7fffd10d2148, envp: 7fffd10d2158, flags: 0)
                  echo-128     [000] .....   103.883225: sys_execveat -> 0x0
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Tested-by: Sumit Dubey2 <Sumit.Dubey2@ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220609103328.41306-1-naveen.n.rao@linux.vnet.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca144919afd4cd5c297ccca05a027f6392edb066
Author: Helge Deller <deller@gmx.de>
Date:   Sun Jun 26 11:50:43 2022 +0200

    parisc: Enable ARCH_HAS_STRICT_MODULE_RWX
    
    commit 0a1355db36718178becd2bfe728a023933d73123 upstream.
    
    Fix a boot crash on a c8000 machine as reported by Dave.  Basically it changes
    patch_map() to return an alias mapping to the to-be-patched code in order to
    prevent writing to write-protected memory.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Suggested-by: John David Anglin <dave.anglin@bell.net>
    Cc: stable@vger.kernel.org   # v5.2+
    Link: https://lore.kernel.org/all/e8ec39e8-25f8-e6b4-b7ed-4cb23efc756e@bell.net/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1c902349ad5656903589d672ad163a23a2a99b4
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jun 7 12:57:58 2022 +0200

    parisc/stifb: Fix fb_is_primary_device() only available with CONFIG_FB_STI
    
    commit 1d0811b03eb30b2f0793acaa96c6ce90b8b9c87a upstream.
    
    Fix this build error noticed by the kernel test robot:
    
    drivers/video/console/sticore.c:1132:5: error: redefinition of 'fb_is_primary_device'
     arch/parisc/include/asm/fb.h:18:19: note: previous definition of 'fb_is_primary_device'
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable@vger.kernel.org   # v5.10+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af0ff2da01521144bc11194f4c26485d7c9cee73
Author: Liang He <windhl@126.com>
Date:   Fri Jun 17 20:44:32 2022 +0800

    xtensa: Fix refcount leak bug in time.c
    
    commit a0117dc956429f2ede17b323046e1968d1849150 upstream.
    
    In calibrate_ccount(), of_find_compatible_node() will return a node
    pointer with refcount incremented. We should use of_node_put() when
    it is not used anymore.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Liang He <windhl@126.com>
    Message-Id: <20220617124432.4049006-1-windhl@126.com>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c0839cf1b9e1b3c88da6af76794583cbfae8da3
Author: Liang He <windhl@126.com>
Date:   Fri Jun 17 19:53:23 2022 +0800

    xtensa: xtfpga: Fix refcount leak bug in setup
    
    commit 173940b3ae40114d4179c251a98ee039dc9cd5b3 upstream.
    
    In machine_setup(), of_find_compatible_node() will return a node
    pointer with refcount incremented. We should use of_node_put() when
    it is not used anymore.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Liang He <windhl@126.com>
    Message-Id: <20220617115323.4046905-1-windhl@126.com>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 501652a2ad5450b4908e1f204ce75b2414c305b7
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue May 24 11:45:17 2022 +0400

    iio: adc: adi-axi-adc: Fix refcount leak in adi_axi_adc_attach_client
    
    commit ada7b0c0dedafd7d059115adf49e48acba3153a8 upstream.
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: ef04070692a2 ("iio: adc: adi-axi-adc: add support for AXI ADC IP core")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220524074517.45268-1-linmq006@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d40514d4403a89e00c17815140b3ec74d8ddd9b6
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri May 6 11:50:40 2022 +0200

    iio: adc: axp288: Override TS pin bias current for some models
    
    commit 048058399f19d43cf21de9f5d36cd8144337d004 upstream.
    
    Since commit 9bcf15f75cac ("iio: adc: axp288: Fix TS-pin handling") we
    preserve the bias current set by the firmware at boot. This fixes issues
    we were seeing on various models.
    
    Some models like the Nuvision Solo 10 Draw tablet actually need the
    old hardcoded 80ųA bias current for battery temperature monitoring
    to work properly.
    
    Add a quirk entry for the Nuvision Solo 10 Draw to the DMI quirk table
    to restore setting the bias current to 80ųA on this model.
    
    Fixes: 9bcf15f75cac ("iio: adc: axp288: Fix TS-pin handling")
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=215882
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220506095040.21008-1-hdegoede@redhat.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d579c893dd6ccb636ad80069f5b6287380386307
Author: Yannick Brosseau <yannick.brosseau@gmail.com>
Date:   Mon May 16 16:39:39 2022 -0400

    iio: adc: stm32: Fix IRQs on STM32F4 by removing custom spurious IRQs message
    
    commit 99bded02dae5e1e2312813506c41dc8db2fb656c upstream.
    
    The check for spurious IRQs introduced in 695e2f5c289bb assumed that the bits
    in the control and status registers are aligned. This is true for the H7 and MP1
    version, but not the F4. The interrupt was then never handled on the F4.
    
    Instead of increasing the complexity of the comparison and check each bit specifically,
    we remove this check completely and rely on the generic handler for spurious IRQs.
    
    Fixes: 695e2f5c289b ("iio: adc: stm32-adc: fix a regression when using dma and irq")
    Signed-off-by: Yannick Brosseau <yannick.brosseau@gmail.com>
    Reviewed-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/20220516203939.3498673-3-yannick.brosseau@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62284d45e26d53423fcdb5b5cf0bdb8af4e366c9
Author: Yannick Brosseau <yannick.brosseau@gmail.com>
Date:   Mon May 16 16:39:38 2022 -0400

    iio: adc: stm32: Fix ADCs iteration in irq handler
    
    commit d2214cca4d3eadc74eac9e30301ec7cad5355f00 upstream.
    
    The irq handler was only checking the mask for the first ADCs in the case of the
    F4 and H7 generation, since it was iterating up to the num_irq value. This patch add
    the maximum number of ADC in the common register, which map to the number of entries of
    eoc_msk and ovr_msk in stm32_adc_common_regs. This allow the handler to check all ADCs in
    that module.
    
    Tested on a STM32F429NIH6.
    
    Fixes: 695e2f5c289b ("iio: adc: stm32-adc: fix a regression when using dma and irq")
    Signed-off-by: Yannick Brosseau <yannick.brosseau@gmail.com>
    Reviewed-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/20220516203939.3498673-2-yannick.brosseau@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3ebb9d16ce13772f0b094fbd5d02bef42da83e9
Author: Jean-Baptiste Maneyrol <jean-baptiste.maneyrol@tdk.com>
Date:   Thu Jun 9 12:23:01 2022 +0200

    iio: imu: inv_icm42600: Fix broken icm42600 (chip id 0 value)
    
    commit 106b391e1b859100a3f38f0ad874236e9be06bde upstream.
    
    The 0 value used for INV_CHIP_ICM42600 was not working since the
    match in i2c/spi was checking against NULL value.
    
    To keep this check, add a first INV_CHIP_INVALID 0 value as safe
    guard.
    
    Fixes: 31c24c1e93c3 ("iio: imu: inv_icm42600: add core of new inv_icm42600 driver")
    Signed-off-by: Jean-Baptiste Maneyrol <jean-baptiste.maneyrol@tdk.com>
    Link: https://lore.kernel.org/r/20220609102301.4794-1-jmaneyrol@invensense.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e0af68b99b8aab0a3b7e2a92292825d001a5cc2
Author: Olivier Moysan <olivier.moysan@foss.st.com>
Date:   Thu Jun 9 11:52:34 2022 +0200

    iio: adc: stm32: fix maximum clock rate for stm32mp15x
    
    commit 990539486e7e311fb5dab1bf4d85d1a8973ae644 upstream.
    
    Change maximum STM32 ADC input clock rate to 36MHz, as specified
    in STM32MP15x datasheets.
    
    Fixes: d58c67d1d851 ("iio: adc: stm32-adc: add support for STM32MP1")
    Signed-off-by: Olivier Moysan <olivier.moysan@foss.st.com>
    Reviewed-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/20220609095234.375925-1-olivier.moysan@foss.st.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b07a30a774b3c3e584a68dc91779c68ea2da4813
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Thu May 19 11:19:25 2022 +0200

    iio: trigger: sysfs: fix use-after-free on remove
    
    commit 78601726d4a59a291acc5a52da1d3a0a6831e4e8 upstream.
    
    Ensure that the irq_work has completed before the trigger is freed.
    
     ==================================================================
     BUG: KASAN: use-after-free in irq_work_run_list
     Read of size 8 at addr 0000000064702248 by task python3/25
    
     Call Trace:
      irq_work_run_list
      irq_work_tick
      update_process_times
      tick_sched_handle
      tick_sched_timer
      __hrtimer_run_queues
      hrtimer_interrupt
    
     Allocated by task 25:
      kmem_cache_alloc_trace
      iio_sysfs_trig_add
      dev_attr_store
      sysfs_kf_write
      kernfs_fop_write_iter
      new_sync_write
      vfs_write
      ksys_write
      sys_write
    
     Freed by task 25:
      kfree
      iio_sysfs_trig_remove
      dev_attr_store
      sysfs_kf_write
      kernfs_fop_write_iter
      new_sync_write
      vfs_write
      ksys_write
      sys_write
    
     ==================================================================
    
    Fixes: f38bc926d022 ("staging:iio:sysfs-trigger: Use irq_work to properly active trigger")
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Link: https://lore.kernel.org/r/20220519091925.1053897-1-vincent.whitchurch@axis.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 399788e819a17c43f275516b375b4314b6827191
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Tue May 10 17:24:31 2022 +0800

    iio: gyro: mpu3050: Fix the error handling in mpu3050_power_up()
    
    commit b2f5ad97645e1deb5ca9bcb7090084b92cae35d2 upstream.
    
    The driver should disable regulators when fails at regmap_update_bits().
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220510092431.1711284-1-zheyuma97@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1ec7d52a218d1efe7d6a7c3dbafb3d3022392c9
Author: Haibo Chen <haibo.chen@nxp.com>
Date:   Wed Jun 15 19:31:58 2022 +0800

    iio: accel: mma8452: ignore the return value of reset operation
    
    commit bf745142cc0a3e1723f9207fb0c073c88464b7b4 upstream.
    
    On fxls8471, after set the reset bit, the device will reset immediately,
    will not give ACK. So ignore the return value of this reset operation,
    let the following code logic to check whether the reset operation works.
    
    Signed-off-by: Haibo Chen <haibo.chen@nxp.com>
    Fixes: ecabae713196 ("iio: mma8452: Initialise before activating")
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/1655292718-14287-1-git-send-email-haibo.chen@nxp.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42caf44906d6de02c4649e98e4a8bd03c4c53fa1
Author: Dmitry Rokosov <DDRokosov@sberdevices.ru>
Date:   Tue May 24 18:14:43 2022 +0000

    iio:accel:mxc4005: rearrange iio trigger get and register
    
    commit 9354c224c9b4f55847a0de3e968cba2ebf15af3b upstream.
    
    IIO trigger interface function iio_trigger_get() should be called after
    iio_trigger_register() (or its devm analogue) strictly, because of
    iio_trigger_get() acquires module refcnt based on the trigger->owner
    pointer, which is initialized inside iio_trigger_register() to
    THIS_MODULE.
    If this call order is wrong, the next iio_trigger_put() (from sysfs
    callback or "delete module" path) will dereference "default" module
    refcnt, which is incorrect behaviour.
    
    Fixes: 47196620c82f ("iio: mxc4005: add data ready trigger for mxc4005")
    Signed-off-by: Dmitry Rokosov <ddrokosov@sberdevices.ru>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220524181150.9240-4-ddrokosov@sberdevices.ru
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e26dcf627971aa0029fd192543505fe61f5d965b
Author: Dmitry Rokosov <DDRokosov@sberdevices.ru>
Date:   Tue May 24 18:14:39 2022 +0000

    iio:accel:bma180: rearrange iio trigger get and register
    
    commit e5f3205b04d7f95a2ef43bce4b454a7f264d6923 upstream.
    
    IIO trigger interface function iio_trigger_get() should be called after
    iio_trigger_register() (or its devm analogue) strictly, because of
    iio_trigger_get() acquires module refcnt based on the trigger->owner
    pointer, which is initialized inside iio_trigger_register() to
    THIS_MODULE.
    If this call order is wrong, the next iio_trigger_put() (from sysfs
    callback or "delete module" path) will dereference "default" module
    refcnt, which is incorrect behaviour.
    
    Fixes: 0668a4e4d297 ("iio: accel: bma180: Fix indio_dev->trig assignment")
    Signed-off-by: Dmitry Rokosov <ddrokosov@sberdevices.ru>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220524181150.9240-2-ddrokosov@sberdevices.ru
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f26379e19958a5164373d1e96c08a53742704f22
Author: Dmitry Rokosov <DDRokosov@sberdevices.ru>
Date:   Tue May 24 18:14:45 2022 +0000

    iio:chemical:ccs811: rearrange iio trigger get and register
    
    commit d710359c0b445e8c03e24f19ae2fb79ce7282260 upstream.
    
    IIO trigger interface function iio_trigger_get() should be called after
    iio_trigger_register() (or its devm analogue) strictly, because of
    iio_trigger_get() acquires module refcnt based on the trigger->owner
    pointer, which is initialized inside iio_trigger_register() to
    THIS_MODULE.
    If this call order is wrong, the next iio_trigger_put() (from sysfs
    callback or "delete module" path) will dereference "default" module
    refcnt, which is incorrect behaviour.
    
    Fixes: f1f065d7ac30 ("iio: chemical: ccs811: Add support for data ready trigger")
    Signed-off-by: Dmitry Rokosov <ddrokosov@sberdevices.ru>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220524181150.9240-5-ddrokosov@sberdevices.ru
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b6cdcff7cb8b9324a7fb2cb4460f523b9d4674d
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Tue May 31 18:27:09 2022 -0700

    f2fs: attach inline_data after setting compression
    
    commit 4cde00d50707c2ef6647b9b96b2cb40b6eb24397 upstream.
    
    This fixes the below corruption.
    
    [345393.335389] F2FS-fs (vdb): sanity_check_inode: inode (ino=6d0, mode=33206) should not have inline_data, run fsck to fix
    
    Cc: <stable@vger.kernel.org>
    Fixes: 677a82b44ebf ("f2fs: fix to do sanity check for inline inode")
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d7bdb6a5a37e57b2b93e138f543e8accdad2531
Author: Xu Yang <xu.yang_2@nxp.com>
Date:   Thu Jun 23 11:02:42 2022 +0800

    usb: chipidea: udc: check request status before setting device address
    
    commit b24346a240b36cfc4df194d145463874985aa29b upstream.
    
    The complete() function may be called even though request is not
    completed. In this case, it's necessary to check request status so
    as not to set device address wrongly.
    
    Fixes: 10775eb17bee ("usb: chipidea: udc: update gadget states according to ch9")
    cc: <stable@vger.kernel.org>
    Signed-off-by: Xu Yang <xu.yang_2@nxp.com>
    Link: https://lore.kernel.org/r/20220623030242.41796-1-xu.yang_2@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 656eca37aae1f7dad26693ab1bd1c1d4f110741c
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Jun 22 10:46:31 2022 -0400

    USB: gadget: Fix double-free bug in raw_gadget driver
    
    commit 90bc2af24638659da56397ff835f3c95a948f991 upstream.
    
    Re-reading a recently merged fix to the raw_gadget driver showed that
    it inadvertently introduced a double-free bug in a failure pathway.
    If raw_ioctl_init() encounters an error after the driver ID number has
    been allocated, it deallocates the ID number before returning.  But
    when dev_free() runs later on, it will then try to deallocate the ID
    number a second time.
    
    Closely related to this issue is another error in the recent fix: The
    ID number is stored in the raw_dev structure before the code checks to
    see whether the structure has already been initialized, in which case
    the new ID number would overwrite the earlier value.
    
    The solution to both bugs is to keep the new ID number in a local
    variable, and store it in the raw_dev structure only after the check
    for prior initialization.  No errors can occur after that point, so
    the double-free will never happen.
    
    Fixes: f2d8c2606825 ("usb: gadget: Fix non-unique driver names in raw-gadget driver")
    CC: Andrey Konovalov <andreyknvl@gmail.com>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/YrMrRw5AyIZghN0v@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54604108be64c59c38827083c24d260b9820dd6e
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Jun 13 10:17:03 2022 -0400

    usb: gadget: Fix non-unique driver names in raw-gadget driver
    
    commit f2d8c2606825317b77db1f9ba0fc26ef26160b30 upstream.
    
    In a report for a separate bug (which has already been fixed by commit
    5f0b5f4d50fa "usb: gadget: fix race when gadget driver register via
    ioctl") in the raw-gadget driver, the syzbot console log included
    error messages caused by attempted registration of a new driver with
    the same name as an existing driver:
    
    > kobject_add_internal failed for raw-gadget with -EEXIST, don't try to register things with the same name in the same directory.
    > UDC core: USB Raw Gadget: driver registration failed: -17
    > misc raw-gadget: fail, usb_gadget_register_driver returned -17
    
    These errors arise because raw_gadget.c registers a separate UDC
    driver for each of the UDC instances it creates, but these drivers all
    have the same name: "raw-gadget".  Until recently this wasn't a
    problem, but when the "gadget" bus was added and UDC drivers were
    registered on this bus, it became possible for name conflicts to cause
    the registrations to fail.  The reason is simply that the bus code in
    the driver core uses the driver name as a sysfs directory name (e.g.,
    /sys/bus/gadget/drivers/raw-gadget/), and you can't create two
    directories with the same pathname.
    
    To fix this problem, the driver names used by raw-gadget are made
    distinct by appending a unique ID number: "raw-gadget.N", with a
    different value of N for each driver instance.  And to avoid the
    proliferation of error handling code in the raw_ioctl_init() routine,
    the error return paths are refactored into the common pattern (goto
    statements leading to cleanup code at the end of the routine).
    
    Link: https://lore.kernel.org/all/0000000000008c664105dffae2eb@google.com/
    Fixes: fc274c1e9973 "USB: gadget: Add a new bus for gadgets"
    CC: Andrey Konovalov <andreyknvl@gmail.com>
    CC: <stable@vger.kernel.org>
    Reported-and-tested-by: syzbot+02b16343704b3af1667e@syzkaller.appspotmail.com
    Reviewed-by: Andrey Konovalov <andreyknvl@gmail.com>
    Acked-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/YqdG32w+3h8c1s7z@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d87dec22fdf51920be1739aca2e8c901d878017c
Author: Utkarsh Patel <utkarsh.h.patel@intel.com>
Date:   Thu Jun 23 14:19:45 2022 +0300

    xhci-pci: Allow host runtime PM as default for Intel Meteor Lake xHCI
    
    commit 8ffdc53a60049f3930afe161dc51c67959c8d83d upstream.
    
    Meteor Lake TCSS(Type-C Subsystem) xHCI needs to be runtime suspended
    whenever possible to allow the TCSS hardware block to enter D3cold and
    thus save energy.
    
    Cc: stable@kernel.org
    Signed-off-by: Utkarsh Patel <utkarsh.h.patel@intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220623111945.1557702-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 114080d04ae489e24509a0a348c283fb5ea3c5db
Author: Tanveer Alam <tanveer1.alam@intel.com>
Date:   Thu Jun 23 14:19:44 2022 +0300

    xhci-pci: Allow host runtime PM as default for Intel Raptor Lake xHCI
    
    commit 7516da47a349e74de623243a27f9b8a91446bf4f upstream.
    
    In the same way as Intel Alder Lake TCSS (Type-C Subsystem) the Raptor
    Lake TCSS xHCI needs to be runtime suspended whenever possible to
    allow the TCSS hardware block to enter D3cold and thus save energy.
    
    Cc: stable@kernel.org
    Signed-off-by: Tanveer Alam <tanveer1.alam@intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220623111945.1557702-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8142a84657eb464e4d7b2f6e509fdf70629bcb2
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu Jun 23 14:19:43 2022 +0300

    xhci: turn off port power in shutdown
    
    commit 83810f84ecf11dfc5a9414a8b762c3501b328185 upstream.
    
    If ports are not turned off in shutdown then runtime suspended
    self-powered USB devices may survive in U3 link state over S5.
    
    During subsequent boot, if firmware sends an IPC command to program
    the port in DISCONNECT state, it will time out, causing significant
    delay in the boot time.
    
    Turning off roothub port power is also recommended in xhci
    specification 4.19.4 "Port Power" in the additional note.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220623111945.1557702-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 116c3e81b0537ac6ea89445ff235edc8d9e64d51
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Jun 20 13:43:16 2022 +0300

    usb: typec: wcove: Drop wrong dependency to INTEL_SOC_PMIC
    
    [ Upstream commit 9ef165406308515dcf2e3f6e97b39a1c56d86db5 ]
    
    Intel SoC PMIC is a generic name for all PMICs that are used
    on Intel platforms. In particular, INTEL_SOC_PMIC kernel configuration
    option refers to Crystal Cove PMIC, which has never been a part
    of any Intel Broxton hardware. Drop wrong dependency from Kconfig.
    
    Note, the correct dependency is satisfied via ACPI PMIC OpRegion driver,
    which the Type-C depends on.
    
    Fixes: d2061f9cc32d ("usb: typec: add driver for Intel Whiskey Cove PMIC USB Type-C PHY")
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20220620104316.57592-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a547662534ca62e70c41ee36776ec4008f836268
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Mon May 30 11:50:26 2022 +0300

    iio: adc: vf610: fix conversion mode sysfs node name
    
    [ Upstream commit f1a633b15cd5371a2a83f02c513984e51132dd68 ]
    
    The documentation missed the "in_" prefix for this IIO_SHARED_BY_DIR
    entry.
    
    Fixes: bf04c1a367e3 ("iio: adc: vf610: implement configurable conversion modes")
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Acked-by: Haibo Chen <haibo.chen@nxp.com>
    Link: https://lore.kernel.org/r/560dc93fafe5ef7e9a409885fd20b6beac3973d8.1653900626.git.baruch@tkos.co.il
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58c3a27e9c233bcb203624ce4f4132423fe3318d
Author: Haibo Chen <haibo.chen@nxp.com>
Date:   Mon Apr 25 16:41:00 2022 +0800

    iio: mma8452: fix probe fail when device tree compatible is used.
    
    [ Upstream commit fe18894930a025617114aa8ca0adbf94d5bffe89 ]
    
    Correct the logic for the probe. First check of_match_table, if
    not meet, then check i2c_driver.id_table. If both not meet, then
    return fail.
    
    Fixes: a47ac019e7e8 ("iio: mma8452: Fix probe failing when an i2c_device_id is used")
    Signed-off-by: Haibo Chen <haibo.chen@nxp.com>
    Link: https://lore.kernel.org/r/1650876060-17577-1-git-send-email-haibo.chen@nxp.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ee016f6120ae6c64f9f8953405590e6d4b604e1
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Fri Jun 10 15:19:00 2022 +0200

    s390/cpumf: Handle events cycles and instructions identical
    
    [ Upstream commit be857b7f77d130dbbd47c91fc35198b040f35865 ]
    
    Events CPU_CYCLES and INSTRUCTIONS can be submitted with two different
    perf_event attribute::type values:
     - PERF_TYPE_HARDWARE: when invoked via perf tool predefined events name
       cycles or cpu-cycles or instructions.
     - pmu->type: when invoked via perf tool event name cpu_cf/CPU_CYLCES/ or
       cpu_cf/INSTRUCTIONS/. This invocation also selects the PMU to which
       the event belongs.
    Handle both type of invocations identical for events CPU_CYLCES and
    INSTRUCTIONS. They address the same hardware.
    The result is different when event modifier exclude_kernel is also set.
    Invocation with event modifier for user space event counting fails.
    
    Output before:
    
     # perf stat -e cpum_cf/cpu_cycles/u -- true
    
     Performance counter stats for 'true':
    
       <not supported>      cpum_cf/cpu_cycles/u
    
           0.000761033 seconds time elapsed
    
           0.000076000 seconds user
           0.000725000 seconds sys
    
     #
    
    Output after:
     # perf stat -e cpum_cf/cpu_cycles/u -- true
    
     Performance counter stats for 'true':
    
               349,613      cpum_cf/cpu_cycles/u
    
           0.000844143 seconds time elapsed
    
           0.000079000 seconds user
           0.000800000 seconds sys
     #
    
    Fixes: 6a82e23f45fe ("s390/cpumf: Adjust registration of s390 PMU device drivers")
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Acked-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
    [agordeev@linux.ibm.com corrected commit ID of Fixes commit]
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abe487a88a5daa3b26e415105b4ad2e84624a461
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jun 23 11:29:48 2022 +0300

    gpio: winbond: Fix error code in winbond_gpio_get()
    
    [ Upstream commit 9ca766eaea2e87b8b773bff04ee56c055cb76d4e ]
    
    This error path returns 1, but it should instead propagate the negative
    error code from winbond_sio_enter().
    
    Fixes: a0d65009411c ("gpio: winbond: Add driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30531e0d7b5d9418903a4413280fb06bf923e68e
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Jun 17 10:29:42 2022 +0200

    nvme: move the Samsung X5 quirk entry to the core quirks
    
    [ Upstream commit e6487833182a8a0187f0292aca542fc163ccd03e ]
    
    This device shares the PCI ID with the Samsung 970 Evo Plus that
    does not need or want the quirks.  Move the the quirk entry to the
    core table based on the model number instead.
    
    Fixes: bc360b0b1611 ("nvme-pci: add quirks for Samsung X5 SSDs")
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Pankaj Raghav <p.raghav@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 169f7d770552437671b998b63560209982615cb6
Author: Enzo Matsumiya <ematsumiya@suse.de>
Date:   Fri Nov 5 23:08:57 2021 -0300

    nvme-pci: add NO APST quirk for Kioxia device
    
    [ Upstream commit 5a6254d55e2a9f7919ead8580d7aa0c7a382b26a ]
    
    This particular Kioxia device times out and aborts I/O during any load,
    but it's more easily observable with discards (fstrim).
    
    The device gets to a state that is also not possible to use
    "nvme set-feature" to disable APST.
    Booting with nvme_core.default_ps_max_latency=0 solves the issue.
    
    We had a dozen or so of these devices behaving this same way in
    customer environments.
    
    Signed-off-by: Enzo Matsumiya <ematsumiya@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 938f594266a671b7cc90bf96d2bee27f9e4f3339
Author: Keith Busch <kbusch@kernel.org>
Date:   Wed Mar 17 13:37:02 2021 -0700

    nvme-pci: allocate nvme_command within driver pdu
    
    [ Upstream commit af7fae857ea22e9c2aef812e1321d9c5c206edde ]
    
    Except for pci, all the nvme transport drivers allocate a command within
    the driver's pdu. Align pci with everyone else by allocating the nvme
    command within pci's pdu and replace the .queue_rq() stack variable with
    this.
    
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Jens Axboe <axboe@kernel.dk>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba388d4e9a684fc7a84b7cbdf9887efe11f4fde5
Author: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date:   Sun Feb 28 18:06:08 2021 -0800

    nvme: don't check nvme_req flags for new req
    
    [ Upstream commit c03fd85de293a4f65fcb94a795bf4c12a432bb6c ]
    
    nvme_clear_request() has a check for flag REQ_DONTPREP and it is called
    from nvme_init_request() and nvme_setuo_cmd().
    
    The function nvme_init_request() is called from nvme_alloc_request()
    and nvme_alloc_request_qid(). From these two callers new request is
    allocated everytime. For newly allocated request RQF_DONTPREP is never
    set. Since after getting a tag, block layer sets the req->rq_flags == 0
    and never sets the REQ_DONTPREP when returning the request :-
    
    nvme_alloc_request()
            blk_mq_alloc_request()
                    blk_mq_rq_ctx_init()
                            rq->rq_flags = 0 <----
    
    nvme_alloc_request_qid()
            blk_mq_alloc_request_hctx()
                    blk_mq_rq_ctx_init()
                            rq->rq_flags = 0 <----
    
    The block layer does set req->rq_flags but REQ_DONTPREP is not one of
    them and that is set by the driver.
    
    That means we can unconditinally set the REQ_DONTPREP value to the
    rq->rq_flags when nvme_init_request()->nvme_clear_request() is called
    from above two callers.
    
    Move the check for REQ_DONTPREP from nvme_clear_nvme_request() into
    nvme_setup_cmd().
    
    This is needed since nvme_alloc_request() now gets called from fast
    path when NVMeOF target is configured with passthru backend to avoid
    unnecessary checks in the fast path.
    
    Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7ccaa1abacf6f8b4fe4e0a06cbb9e2051a4d79e
Author: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date:   Sun Feb 28 18:06:06 2021 -0800

    nvme: mark nvme_setup_passsthru() inline
    
    [ Upstream commit 7a36604668b9b1f84126ef0342144ba5b07e518f ]
    
    Since nvmet_setup_passthru() function falls in fast path when called
    from the NVMeOF passthru backend, make it inline.
    
    Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ee62a1f0701ab55370f84a8a786c7ae9ae029e4
Author: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date:   Mon Nov 9 18:24:00 2020 -0800

    nvme: split nvme_alloc_request()
    
    [ Upstream commit 39dfe84451b4526a8054cc5a127337bca980dfa3 ]
    
    Right now nvme_alloc_request() allocates a request from block layer
    based on the value of the qid. When qid set to NVME_QID_ANY it used
    blk_mq_alloc_request() else blk_mq_alloc_request_hctx().
    
    The function nvme_alloc_request() is called from different context, The
    only place where it uses non NVME_QID_ANY value is for fabrics connect
    commands :-
    
    nvme_submit_sync_cmd()          NVME_QID_ANY
    nvme_features()                 NVME_QID_ANY
    nvme_sec_submit()               NVME_QID_ANY
    nvmf_reg_read32()               NVME_QID_ANY
    nvmf_reg_read64()               NVME_QID_ANY
    nvmf_reg_write32()              NVME_QID_ANY
    nvmf_connect_admin_queue()      NVME_QID_ANY
    nvme_submit_user_cmd()          NVME_QID_ANY
            nvme_alloc_request()
    nvme_keep_alive()               NVME_QID_ANY
            nvme_alloc_request()
    nvme_timeout()                  NVME_QID_ANY
            nvme_alloc_request()
    nvme_delete_queue()             NVME_QID_ANY
            nvme_alloc_request()
    nvmet_passthru_execute_cmd()    NVME_QID_ANY
            nvme_alloc_request()
    nvmf_connect_io_queue()         QID
            __nvme_submit_sync_cmd()
                    nvme_alloc_request()
    
    With passthru nvme_alloc_request() now falls into the I/O fast path such
    that blk_mq_alloc_request_hctx() is never gets called and that adds
    additional branch check in fast path.
    
    Split the nvme_alloc_request() into nvme_alloc_request() and
    nvme_alloc_request_qid().
    
    Replace each call of the nvme_alloc_request() with NVME_QID_ANY param
    with a call to newly added nvme_alloc_request() without NVME_QID_ANY.
    
    Replace a call to nvme_alloc_request() with QID param with a call to
    newly added nvme_alloc_request() and nvme_alloc_request_qid()
    based on the qid value set in the __nvme_submit_sync_cmd().
    
    Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe06c692cd7e3bf12b2561ba2d5f6490e8082a8f
Author: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date:   Mon Nov 9 16:33:42 2020 -0800

    nvme: centralize setting the timeout in nvme_alloc_request
    
    [ Upstream commit 0d2e7c840b178bf9a47bd0de89d8f9182fa71d86 ]
    
    The function nvme_alloc_request() is called from different context
    (I/O and Admin queue) where callers do not consider the I/O timeout when
    called from I/O queue context.
    
    Update nvme_alloc_request() to set the default I/O and Admin timeout
    value based on whether the queuedata is set or not.
    
    Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afbc954e78962028a6806e34f3cc40e236f01770
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Jun 20 12:13:52 2022 -0700

    Revert "net/tls: fix tls_sk_proto_close executed repeatedly"
    
    [ Upstream commit 1b205d948fbb06a7613d87dcea0ff5fd8a08ed91 ]
    
    This reverts commit 69135c572d1f84261a6de2a1268513a7e71753e2.
    
    This commit was just papering over the issue, ULP should not
    get ->update() called with its own sk_prot. Each ULP would
    need to add this check.
    
    Fixes: 69135c572d1f ("net/tls: fix tls_sk_proto_close executed repeatedly")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/r/20220620191353.1184629-1-kuba@kernel.org
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 340fbdc8011f2dc678f622c5ce1cbb5ab8305de7
Author: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
Date:   Tue Jun 21 13:48:44 2022 +0200

    virtio_net: fix xdp_rxq_info bug after suspend/resume
    
    [ Upstream commit 8af52fe9fd3bf5e7478da99193c0632276e1dfce ]
    
    The following sequence currently causes a driver bug warning
    when using virtio_net:
    
      # ip link set eth0 up
      # echo mem > /sys/power/state (or e.g. # rtcwake -s 10 -m mem)
      <resume>
      # ip link set eth0 down
    
      Missing register, driver bug
      WARNING: CPU: 0 PID: 375 at net/core/xdp.c:138 xdp_rxq_info_unreg+0x58/0x60
      Call trace:
       xdp_rxq_info_unreg+0x58/0x60
       virtnet_close+0x58/0xac
       __dev_close_many+0xac/0x140
       __dev_change_flags+0xd8/0x210
       dev_change_flags+0x24/0x64
       do_setlink+0x230/0xdd0
       ...
    
    This happens because virtnet_freeze() frees the receive_queue
    completely (including struct xdp_rxq_info) but does not call
    xdp_rxq_info_unreg(). Similarly, virtnet_restore() sets up the
    receive_queue again but does not call xdp_rxq_info_reg().
    
    Actually, parts of virtnet_freeze_down() and virtnet_restore_up()
    are almost identical to virtnet_close() and virtnet_open(): only
    the calls to xdp_rxq_info_(un)reg() are missing. This means that
    we can fix this easily and avoid such problems in the future by
    just calling virtnet_close()/open() from the freeze/restore handlers.
    
    Aside from adding the missing xdp_rxq_info calls the only difference
    is that the refill work is only cancelled if netif_running(). However,
    this should not make any functional difference since the refill work
    should only be active if the network interface is actually up.
    
    Fixes: 754b8a21a96d ("virtio_net: setup xdp_rxq_info")
    Signed-off-by: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Link: https://lore.kernel.org/r/20220621114845.3650258-1-stephan.gerhold@kernkonzept.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bccf82169c503b7baa1ee469f0098f51ca2de7b
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Jun 21 15:10:56 2022 -0700

    igb: Make DMA faster when CPU is active on the PCIe link
    
    [ Upstream commit 4e0effd9007ea0be31f7488611eb3824b4541554 ]
    
    Intel I210 on some Intel Alder Lake platforms can only achieve ~750Mbps
    Tx speed via iperf. The RR2DCDELAY shows around 0x2xxx DMA delay, which
    will be significantly lower when 1) ASPM is disabled or 2) SoC package
    c-state stays above PC3. When the RR2DCDELAY is around 0x1xxx the Tx
    speed can reach to ~950Mbps.
    
    According to the I210 datasheet "8.26.1 PCIe Misc. Register - PCIEMISC",
    "DMA Idle Indication" doesn't seem to tie to DMA coalesce anymore, so
    set it to 1b for "DMA is considered idle when there is no Rx or Tx AND
    when there are no TLPs indicating that CPU is active detected on the
    PCIe link (such as the host executes CSR or Configuration register read
    or write operation)" and performing Tx should also fall under "active
    CPU on PCIe link" case.
    
    In addition to that, commit b6e0c419f040 ("igb: Move DMA Coalescing init
    code to separate function.") seems to wrongly changed from enabling
    E1000_PCIEMISC_LX_DECISION to disabling it, also fix that.
    
    Fixes: b6e0c419f040 ("igb: Move DMA Coalescing init code to separate function.")
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Tested-by: Gurucharan <gurucharanx.g@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Link: https://lore.kernel.org/r/20220621221056.604304-1-anthony.l.nguyen@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d7450363fdfd17222f70f2014a5abe2a1fe2e2b
Author: Aidan MacDonald <aidanmacdonald.0x0@gmail.com>
Date:   Mon Jun 20 21:05:56 2022 +0100

    regmap-irq: Fix a bug in regmap_irq_enable() for type_in_mask chips
    
    [ Upstream commit 485037ae9a095491beb7f893c909a76cc4f9d1e7 ]
    
    When enabling a type_in_mask irq, the type_buf contents must be
    AND'd with the mask of the IRQ we're enabling to avoid enabling
    other IRQs by accident, which can happen if several type_in_mask
    irqs share a mask register.
    
    Fixes: bc998a730367 ("regmap: irq: handle HW using separate rising/falling edge interrupts")
    Signed-off-by: Aidan MacDonald <aidanmacdonald.0x0@gmail.com>
    Link: https://lore.kernel.org/r/20220620200644.1961936-2-aidanmacdonald.0x0@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40b3815b2c9027061fb74c1d21a1e9b8f486977d
Author: Anatolii Gerasymenko <anatolii.gerasymenko@intel.com>
Date:   Mon Jun 20 09:47:05 2022 +0200

    ice: ethtool: advertise 1000M speeds properly
    
    [ Upstream commit c3d184c83ff4b80167e34edfc3d21df424bf27ff ]
    
    In current implementation ice_update_phy_type enables all link modes
    for selected speed. This approach doesn't work for 1000M speeds,
    because both copper (1000baseT) and optical (1000baseX) standards
    cannot be enabled at once.
    
    Fix this, by adding the function `ice_set_phy_type_from_speed()`
    for 1000M speeds.
    
    Fixes: 48cb27f2fd18 ("ice: Implement handlers for ethtool PHY/link operations")
    Signed-off-by: Anatolii Gerasymenko <anatolii.gerasymenko@intel.com>
    Tested-by: Gurucharan <gurucharanx.g@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b564e3254b7db5fbfbf11a824627a6c31b932b4
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jun 21 15:59:57 2022 +0100

    afs: Fix dynamic root getattr
    
    [ Upstream commit cb78d1b5efffe4cf97e16766329dd7358aed3deb ]
    
    The recent patch to make afs_getattr consult the server didn't account
    for the pseudo-inodes employed by the dynamic root-type afs superblock
    not having a volume or a server to access, and thus an oops occurs if
    such a directory is stat'd.
    
    Fix this by checking to see if the vnode->volume pointer actually points
    anywhere before following it in afs_getattr().
    
    This can be tested by stat'ing a directory in /afs.  It may be
    sufficient just to do "ls /afs" and the oops looks something like:
    
            BUG: kernel NULL pointer dereference, address: 0000000000000020
            ...
            RIP: 0010:afs_getattr+0x8b/0x14b
            ...
            Call Trace:
             <TASK>
             vfs_statx+0x79/0xf5
             vfs_fstatat+0x49/0x62
    
    Fixes: 2aeb8c86d499 ("afs: Fix afs_getattr() to refetch file status if callback break occurred")
    Reported-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Marc Dionne <marc.dionne@auristor.com>
    Tested-by: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Link: https://lore.kernel.org/r/165408450783.1031787.7941404776393751186.stgit@warthog.procyon.org.uk/
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c22192db06e9a8b96b3b125a2b00d2069ee3980
Author: huhai <huhai@kylinos.cn>
Date:   Fri Jun 10 19:14:20 2022 +0800

    MIPS: Remove repetitive increase irq_err_count
    
    [ Upstream commit c81aba8fde2aee4f5778ebab3a1d51bd2ef48e4c ]
    
    commit 979934da9e7a ("[PATCH] mips: update IRQ handling for vr41xx") added
    a function irq_dispatch, and it'll increase irq_err_count when the get_irq
    callback returns a negative value, but increase irq_err_count in get_irq
    was not removed.
    
    And also, modpost complains once gpio-vr41xx drivers become modules.
      ERROR: modpost: "irq_err_count" [drivers/gpio/gpio-vr41xx.ko] undefined!
    
    So it would be a good idea to remove repetitive increase irq_err_count in
    get_irq callback.
    
    Fixes: 27fdd325dace ("MIPS: Update VR41xx GPIO driver to use gpiolib")
    Fixes: 979934da9e7a ("[PATCH] mips: update IRQ handling for vr41xx")
    Reported-by: k2ci <kernel-bot@kylinos.cn>
    Signed-off-by: huhai <huhai@kylinos.cn>
    Signed-off-by: Genjian Zhang <zhanggenjian@kylinos.cn>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc649a78654af08db77db44558ca96edb63e3bbb
Author: Julien Grall <jgrall@amazon.com>
Date:   Fri Jun 17 11:30:37 2022 +0100

    x86/xen: Remove undefined behavior in setup_features()
    
    [ Upstream commit ecb6237fa397b7b810d798ad19322eca466dbab1 ]
    
    1 << 31 is undefined. So switch to 1U << 31.
    
    Fixes: 5ead97c84fa7 ("xen: Core Xen implementation")
    Signed-off-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20220617103037.57828-1-julien@xen.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b60c375ad140f9ea4c18e59b9fa3f1ef80951522
Author: Jie2x Zhou <jie2x.zhou@intel.com>
Date:   Thu Jun 16 15:40:46 2022 +0800

    selftests: netfilter: correct PKTGEN_SCRIPT_PATHS in nft_concat_range.sh
    
    [ Upstream commit 5d79d8af8dec58bf709b3124d09d9572edd9c617 ]
    
    Before change:
    make -C netfilter
     TEST: performance
       net,port                                                      [SKIP]
       perf not supported
       port,net                                                      [SKIP]
       perf not supported
       net6,port                                                     [SKIP]
       perf not supported
       port,proto                                                    [SKIP]
       perf not supported
       net6,port,mac                                                 [SKIP]
       perf not supported
       net6,port,mac,proto                                           [SKIP]
       perf not supported
       net,mac                                                       [SKIP]
       perf not supported
    
    After change:
       net,mac                                                       [ OK ]
         baseline (drop from netdev hook):               2061098pps
         baseline hash (non-ranged entries):             1606741pps
         baseline rbtree (match on first field only):    1191607pps
         set with  1000 full, ranged entries:            1639119pps
    ok 8 selftests: netfilter: nft_concat_range.sh
    
    Fixes: 611973c1e06f ("selftests: netfilter: Introduce tests for sets with range concatenation")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Jie2x Zhou <jie2x.zhou@intel.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20119c1e0fff89542ff3272ace87e04cf6ee6bea
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Mon Jun 20 09:15:47 2022 +0200

    udmabuf: add back sanity check
    
    [ Upstream commit 05b252cccb2e5c3f56119d25de684b4f810ba40a ]
    
    Check vm_fault->pgoff before using it.  When we removed the warning, we
    also removed the check.
    
    Fixes: 7b26e4e2119d ("udmabuf: drop WARN_ON() check.")
    Reported-by: zdi-disclosures@trendmicro.com
    Suggested-by: Linus Torvalds <torvalds@linuxfoundation.org>
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e82376b632473790781a182b10823a4b5dbf6606
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Mon Jun 20 12:35:08 2022 +0800

    net/tls: fix tls_sk_proto_close executed repeatedly
    
    [ Upstream commit 69135c572d1f84261a6de2a1268513a7e71753e2 ]
    
    After setting the sock ktls, update ctx->sk_proto to sock->sk_prot by
    tls_update(), so now ctx->sk_proto->close is tls_sk_proto_close(). When
    close the sock, tls_sk_proto_close() is called for sock->sk_prot->close
    is tls_sk_proto_close(). But ctx->sk_proto->close() will be executed later
    in tls_sk_proto_close(). Thus tls_sk_proto_close() executed repeatedly
    occurred. That will trigger the following bug.
    
    =================================================================
    KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]
    RIP: 0010:tls_sk_proto_close+0xd8/0xaf0 net/tls/tls_main.c:306
    Call Trace:
     <TASK>
     tls_sk_proto_close+0x356/0xaf0 net/tls/tls_main.c:329
     inet_release+0x12e/0x280 net/ipv4/af_inet.c:428
     __sock_release+0xcd/0x280 net/socket.c:650
     sock_close+0x18/0x20 net/socket.c:1365
    
    Updating a proto which is same with sock->sk_prot is incorrect. Add proto
    and sock->sk_prot equality check at the head of tls_update() to fix it.
    
    Fixes: 95fa145479fb ("bpf: sockmap/tls, close can race with map free")
    Reported-by: syzbot+29c3c12f3214b85ad081@syzkaller.appspotmail.com
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cec9867ee55478ef5dcb2adf030fe0c442a4c4ee
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jun 20 01:35:06 2022 -0700

    erspan: do not assume transport header is always set
    
    [ Upstream commit 301bd140ed0b24f0da660874c7e8a47dad8c8222 ]
    
    Rewrite tests in ip6erspan_tunnel_xmit() and
    erspan_fb_xmit() to not assume transport header is set.
    
    syzbot reported:
    
    WARNING: CPU: 0 PID: 1350 at include/linux/skbuff.h:2911 skb_transport_header include/linux/skbuff.h:2911 [inline]
    WARNING: CPU: 0 PID: 1350 at include/linux/skbuff.h:2911 ip6erspan_tunnel_xmit+0x15af/0x2eb0 net/ipv6/ip6_gre.c:963
    Modules linked in:
    CPU: 0 PID: 1350 Comm: aoe_tx0 Not tainted 5.19.0-rc2-syzkaller-00160-g274295c6e53f #0
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014
    RIP: 0010:skb_transport_header include/linux/skbuff.h:2911 [inline]
    RIP: 0010:ip6erspan_tunnel_xmit+0x15af/0x2eb0 net/ipv6/ip6_gre.c:963
    Code: 0f 47 f0 40 88 b5 7f fe ff ff e8 8c 16 4b f9 89 de bf ff ff ff ff e8 a0 12 4b f9 66 83 fb ff 0f 85 1d f1 ff ff e8 71 16 4b f9 <0f> 0b e9 43 f0 ff ff e8 65 16 4b f9 48 8d 85 30 ff ff ff ba 60 00
    RSP: 0018:ffffc90005daf910 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: 000000000000ffff RCX: 0000000000000000
    RDX: ffff88801f032100 RSI: ffffffff882e8d3f RDI: 0000000000000003
    RBP: ffffc90005dafab8 R08: 0000000000000003 R09: 000000000000ffff
    R10: 000000000000ffff R11: 0000000000000000 R12: ffff888024f21d40
    R13: 000000000000a288 R14: 00000000000000b0 R15: ffff888025a2e000
    FS: 0000000000000000(0000) GS:ffff88802c800000(0000) knlGS:0000000000000000
    CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b2e425000 CR3: 000000006d099000 CR4: 0000000000152ef0
    Call Trace:
    <TASK>
    __netdev_start_xmit include/linux/netdevice.h:4805 [inline]
    netdev_start_xmit include/linux/netdevice.h:4819 [inline]
    xmit_one net/core/dev.c:3588 [inline]
    dev_hard_start_xmit+0x188/0x880 net/core/dev.c:3604
    sch_direct_xmit+0x19f/0xbe0 net/sched/sch_generic.c:342
    __dev_xmit_skb net/core/dev.c:3815 [inline]
    __dev_queue_xmit+0x14a1/0x3900 net/core/dev.c:4219
    dev_queue_xmit include/linux/netdevice.h:2994 [inline]
    tx+0x6a/0xc0 drivers/block/aoe/aoenet.c:63
    kthread+0x1e7/0x3b0 drivers/block/aoe/aoecmd.c:1229
    kthread+0x2e9/0x3a0 kernel/kthread.c:376
    ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:302
    </TASK>
    
    Fixes: d5db21a3e697 ("erspan: auto detect truncated ipv6 packets.")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: William Tu <u9012063@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acf76125bb2b247d27cb4ca57fda772c8a691fe9
Author: Kuogee Hsieh <quic_khsieh@quicinc.com>
Date:   Wed Nov 18 13:00:14 2020 -0800

    drm/msm/dp: fix connect/disconnect handled at irq_hpd
    
    [ Upstream commit c58eb1b54feefc3a47fab78addd14083bc941c44 ]
    
    Some usb type-c dongle use irq_hpd request to perform device connection
    and disconnection. This patch add handling of both connection and
    disconnection are based on the state of hpd_state and sink_count.
    
    Changes in V2:
    -- add dp_display_handle_port_ststus_changed()
    -- fix kernel test robot complaint
    
    Changes in V3:
    -- add encoder_mode_set into struct dp_display_private
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 26b8d66a399e ("drm/msm/dp: promote irq_hpd handle to handle link training correctly")
    Tested-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Kuogee Hsieh <khsieh@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61f8f4034c04231148e7580ae51a2a74171c04a0
Author: Kuogee Hsieh <quic_khsieh@quicinc.com>
Date:   Tue Nov 3 12:49:02 2020 -0800

    drm/msm/dp: promote irq_hpd handle to handle link training correctly
    
    [ Upstream commit 26b8d66a399e625f3aa2c02ccbab1bff2e00040c ]
    
    Some dongles require link training done at irq_hpd request instead
    of plugin request. This patch promote irq_hpd handler to handle link
    training and setup hpd_state correctly.
    
    Signed-off-by: Kuogee Hsieh <khsieh@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d11cb082151f5276e6e506b3b8c512f8cc57ae83
Author: Kuogee Hsieh <quic_khsieh@quicinc.com>
Date:   Tue Nov 3 12:49:00 2020 -0800

    drm/msm/dp: deinitialize mainlink if link training failed
    
    [ Upstream commit 231a04fcc6cb5b0e5f72c015d36462a17355f925 ]
    
    DP compo phy have to be enable to start link training. When
    link training failed phy need to be disabled so that next
    link traning can be proceed smoothly at next plug in. This
    patch de-initialize mainlink to disable phy if link training
    failed. This prevent system crash due to
    disp_cc_mdss_dp_link_intf_clk stuck at "off" state.  This patch
    also perform checking power_on flag at dp_display_enable() and
    dp_display_disable() to avoid crashing when unplug cable while
    display is off.
    
    Signed-off-by: Kuogee Hsieh <khsieh@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d67cb00cbbb776e2165a807bc7fe114293ffdd2
Author: Kuogee Hsieh <quic_khsieh@quicinc.com>
Date:   Tue Nov 3 14:53:36 2020 -0800

    drm/msm/dp: fixes wrong connection state caused by failure of link train
    
    [ Upstream commit 62671d2ef24bca1e2e1709a59a5bfb5c423cdc8e ]
    
    Connection state is not set correctly happen when either failure of link
    train due to cable unplugged in the middle of aux channel reading or
    cable plugged in while in suspended state. This patch fixes these problems.
    This patch also replace ST_SUSPEND_PENDING with ST_DISPLAY_OFF.
    
    Changes in V2:
    -- Add more information to commit message.
    
    Changes in V3:
    -- change base
    
    Changes in V4:
    -- add Fixes tag
    
    Signed-off-by: Kuogee Hsieh <khsieh@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efb2b6916050715b0af521706332f0a2d01e7e85
Author: Kuogee Hsieh <quic_khsieh@quicinc.com>
Date:   Mon Jun 6 10:55:39 2022 -0700

    drm/msm/dp: check core_initialized before disable interrupts at dp_display_unbind()
    
    [ Upstream commit d80c3ba0ac247791a4ed7a0cd865a64906c8906a ]
    
    During msm initialize phase, dp_display_unbind() will be called to undo
    initializations had been done by dp_display_bind() previously if there is
    error happen at msm_drm_bind. In this case, core_initialized flag had to
    be check to make sure clocks is on before update DP controller register
    to disable HPD interrupts. Otherwise system will crash due to below NOC
    fatal error.
    
    QTISECLIB [01f01a7ad]CNOC2 ERROR: ERRLOG0_LOW = 0x00061007
    QTISECLIB [01f01a7ad]GEM_NOC ERROR: ERRLOG0_LOW = 0x00001007
    QTISECLIB [01f0371a0]CNOC2 ERROR: ERRLOG0_HIGH = 0x00000003
    QTISECLIB [01f055297]GEM_NOC ERROR: ERRLOG0_HIGH = 0x00000003
    QTISECLIB [01f072beb]CNOC2 ERROR: ERRLOG1_LOW = 0x00000024
    QTISECLIB [01f0914b8]GEM_NOC ERROR: ERRLOG1_LOW = 0x00000042
    QTISECLIB [01f0ae639]CNOC2 ERROR: ERRLOG1_HIGH = 0x00004002
    QTISECLIB [01f0cc73f]GEM_NOC ERROR: ERRLOG1_HIGH = 0x00004002
    QTISECLIB [01f0ea092]CNOC2 ERROR: ERRLOG2_LOW = 0x0009020c
    QTISECLIB [01f10895f]GEM_NOC ERROR: ERRLOG2_LOW = 0x0ae9020c
    QTISECLIB [01f125ae1]CNOC2 ERROR: ERRLOG2_HIGH = 0x00000000
    QTISECLIB [01f143be7]GEM_NOC ERROR: ERRLOG2_HIGH = 0x00000000
    QTISECLIB [01f16153a]CNOC2 ERROR: ERRLOG3_LOW = 0x00000000
    QTISECLIB [01f17fe07]GEM_NOC ERROR: ERRLOG3_LOW = 0x00000000
    QTISECLIB [01f19cf89]CNOC2 ERROR: ERRLOG3_HIGH = 0x00000000
    QTISECLIB [01f1bb08e]GEM_NOC ERROR: ERRLOG3_HIGH = 0x00000000
    QTISECLIB [01f1d8a31]CNOC2 ERROR: SBM1 FAULTINSTATUS0_LOW = 0x00000002
    QTISECLIB [01f1f72a4]GEM_NOC ERROR: SBM0 FAULTINSTATUS0_LOW = 0x00000001
    QTISECLIB [01f21a217]CNOC3 ERROR: ERRLOG0_LOW = 0x00000006
    QTISECLIB [01f23dfd3]NOC error fatal
    
    changes in v2:
    -- drop the first patch (drm/msm: enable msm irq after all initializations are done successfully at msm_drm_init()) since the problem had been fixed by other patch
    
    Fixes: 570d3e5d28db ("drm/msm/dp: stop event kernel thread when DP unbind")
    Signed-off-by: Kuogee Hsieh <quic_khsieh@quicinc.com>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Patchwork: https://patchwork.freedesktop.org/patch/488387/
    Link: https://lore.kernel.org/r/1654538139-7450-1-git-send-email-quic_khsieh@quicinc.com
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d16a4339825e64f9ddcdff5277982d640bae933b
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Jun 7 15:08:38 2022 +0400

    drm/msm/mdp4: Fix refcount leak in mdp4_modeset_init_intf
    
    [ Upstream commit b9cc4598607cb7f7eae5c75fc1e3209cd52ff5e0 ]
    
    of_graph_get_remote_node() returns remote device node pointer with
    refcount incremented, we should use of_node_put() on it
    when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 86418f90a4c1 ("drm: convert drivers to use of_graph_get_remote_node")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/488473/
    Link: https://lore.kernel.org/r/20220607110841.53889-1-linmq006@gmail.com
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 363fd6e3461851826cc4dfd624104cb205c61bd0
Author: Peilin Ye <peilin.ye@bytedance.com>
Date:   Thu Jun 16 16:43:36 2022 -0700

    net/sched: sch_netem: Fix arithmetic in netem_dump() for 32-bit platforms
    
    [ Upstream commit a2b1a5d40bd12b44322c2ccd40bb0ec1699708b6 ]
    
    As reported by Yuming, currently tc always show a latency of UINT_MAX
    for netem Qdisc's on 32-bit platforms:
    
        $ tc qdisc add dev dummy0 root netem latency 100ms
        $ tc qdisc show dev dummy0
        qdisc netem 8001: root refcnt 2 limit 1000 delay 275s  275s
                                                   ^^^^^^^^^^^^^^^^
    
    Let us take a closer look at netem_dump():
    
            qopt.latency = min_t(psched_tdiff_t, PSCHED_NS2TICKS(q->latency,
                                 UINT_MAX);
    
    qopt.latency is __u32, psched_tdiff_t is signed long,
    (psched_tdiff_t)(UINT_MAX) is negative for 32-bit platforms, so
    qopt.latency is always UINT_MAX.
    
    Fix it by using psched_time_t (u64) instead.
    
    Note: confusingly, users have two ways to specify 'latency':
    
      1. normally, via '__u32 latency' in struct tc_netem_qopt;
      2. via the TCA_NETEM_LATENCY64 attribute, which is s64.
    
    For the second case, theoretically 'latency' could be negative.  This
    patch ignores that corner case, since it is broken (i.e. assigning a
    negative s64 to __u32) anyways, and should be handled separately.
    
    Thanks Ted Lin for the analysis [1] .
    
    [1] https://github.com/raspberrypi/linux/issues/3512
    
    Reported-by: Yuming Chen <chenyuming.junnan@bytedance.com>
    Fixes: 112f9cb65643 ("netem: convert to qdisc_watchdog_schedule_ns")
    Reviewed-by: Cong Wang <cong.wang@bytedance.com>
    Signed-off-by: Peilin Ye <peilin.ye@bytedance.com>
    Acked-by: Stephen Hemminger <stephen@networkplumber.org>
    Link: https://lore.kernel.org/r/20220616234336.2443-1-yepeilin.cs@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e3216b929bb1c74ae8bea6042b9c85ad37240e8
Author: Jay Vosburgh <jay.vosburgh@canonical.com>
Date:   Thu Jun 16 12:32:40 2022 -0700

    bonding: ARP monitor spams NETDEV_NOTIFY_PEERS notifiers
    
    [ Upstream commit 7a9214f3d88cfdb099f3896e102a306b316d8707 ]
    
    The bonding ARP monitor fails to decrement send_peer_notif, the
    number of peer notifications (gratuitous ARP or ND) to be sent. This
    results in a continuous series of notifications.
    
    Correct this by decrementing the counter for each notification.
    
    Reported-by: Jonathan Toppins <jtoppins@redhat.com>
    Signed-off-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Fixes: b0929915e035 ("bonding: Fix RTNL: assertion failed at net/core/rtnetlink.c for ab arp monitor")
    Link: https://lore.kernel.org/netdev/b2fd4147-8f50-bebd-963a-1a3e8d1d9715@redhat.com/
    Tested-by: Jonathan Toppins <jtoppins@redhat.com>
    Reviewed-by: Jonathan Toppins <jtoppins@redhat.com>
    Link: https://lore.kernel.org/r/9400.1655407960@famine
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c12a2c9b1b460ed72e6b3c33aac1ef51b0329b66
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Thu Jun 16 16:13:20 2022 +0200

    igb: fix a use-after-free issue in igb_clean_tx_ring
    
    [ Upstream commit 3f6a57ee8544ec3982f8a3cbcbf4aea7d47eb9ec ]
    
    Fix the following use-after-free bug in igb_clean_tx_ring routine when
    the NIC is running in XDP mode. The issue can be triggered redirecting
    traffic into the igb NIC and then closing the device while the traffic
    is flowing.
    
    [   73.322719] CPU: 1 PID: 487 Comm: xdp_redirect Not tainted 5.18.3-apu2 #9
    [   73.330639] Hardware name: PC Engines APU2/APU2, BIOS 4.0.7 02/28/2017
    [   73.337434] RIP: 0010:refcount_warn_saturate+0xa7/0xf0
    [   73.362283] RSP: 0018:ffffc9000081f798 EFLAGS: 00010282
    [   73.367761] RAX: 0000000000000000 RBX: ffffc90000420f80 RCX: 0000000000000000
    [   73.375200] RDX: ffff88811ad22d00 RSI: ffff88811ad171e0 RDI: ffff88811ad171e0
    [   73.382590] RBP: 0000000000000900 R08: ffffffff82298f28 R09: 0000000000000058
    [   73.390008] R10: 0000000000000219 R11: ffffffff82280f40 R12: 0000000000000090
    [   73.397356] R13: ffff888102343a40 R14: ffff88810359e0e4 R15: 0000000000000000
    [   73.404806] FS:  00007ff38d31d740(0000) GS:ffff88811ad00000(0000) knlGS:0000000000000000
    [   73.413129] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   73.419096] CR2: 000055cff35f13f8 CR3: 0000000106391000 CR4: 00000000000406e0
    [   73.426565] Call Trace:
    [   73.429087]  <TASK>
    [   73.431314]  igb_clean_tx_ring+0x43/0x140 [igb]
    [   73.436002]  igb_down+0x1d7/0x220 [igb]
    [   73.439974]  __igb_close+0x3c/0x120 [igb]
    [   73.444118]  igb_xdp+0x10c/0x150 [igb]
    [   73.447983]  ? igb_pci_sriov_configure+0x70/0x70 [igb]
    [   73.453362]  dev_xdp_install+0xda/0x110
    [   73.457371]  dev_xdp_attach+0x1da/0x550
    [   73.461369]  do_setlink+0xfd0/0x10f0
    [   73.465166]  ? __nla_validate_parse+0x89/0xc70
    [   73.469714]  rtnl_setlink+0x11a/0x1e0
    [   73.473547]  rtnetlink_rcv_msg+0x145/0x3d0
    [   73.477709]  ? rtnl_calcit.isra.0+0x130/0x130
    [   73.482258]  netlink_rcv_skb+0x8d/0x110
    [   73.486229]  netlink_unicast+0x230/0x340
    [   73.490317]  netlink_sendmsg+0x215/0x470
    [   73.494395]  __sys_sendto+0x179/0x190
    [   73.498268]  ? move_addr_to_user+0x37/0x70
    [   73.502547]  ? __sys_getsockname+0x84/0xe0
    [   73.506853]  ? netlink_setsockopt+0x1c1/0x4a0
    [   73.511349]  ? __sys_setsockopt+0xc8/0x1d0
    [   73.515636]  __x64_sys_sendto+0x20/0x30
    [   73.519603]  do_syscall_64+0x3b/0x80
    [   73.523399]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [   73.528712] RIP: 0033:0x7ff38d41f20c
    [   73.551866] RSP: 002b:00007fff3b945a68 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    [   73.559640] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ff38d41f20c
    [   73.567066] RDX: 0000000000000034 RSI: 00007fff3b945b30 RDI: 0000000000000003
    [   73.574457] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000000
    [   73.581852] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fff3b945ab0
    [   73.589179] R13: 0000000000000000 R14: 0000000000000003 R15: 00007fff3b945b30
    [   73.596545]  </TASK>
    [   73.598842] ---[ end trace 0000000000000000 ]---
    
    Fixes: 9cbc948b5a20c ("igb: add XDP support")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Link: https://lore.kernel.org/r/e5c01d549dc37bff18e46aeabd6fb28a7bcf84be.1655388571.git.lorenzo@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 361c5521c1e49843b710f455cae3c0a50b714323
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Fri Jun 17 08:45:51 2022 +0700

    tipc: fix use-after-free Read in tipc_named_reinit
    
    [ Upstream commit 911600bf5a5e84bfda4d33ee32acc75ecf6159f0 ]
    
    syzbot found the following issue on:
    ==================================================================
    BUG: KASAN: use-after-free in tipc_named_reinit+0x94f/0x9b0
    net/tipc/name_distr.c:413
    Read of size 8 at addr ffff88805299a000 by task kworker/1:9/23764
    
    CPU: 1 PID: 23764 Comm: kworker/1:9 Not tainted
    5.18.0-rc4-syzkaller-00878-g17d49e6e8012 #0
    Hardware name: Google Compute Engine/Google Compute Engine,
    BIOS Google 01/01/2011
    Workqueue: events tipc_net_finalize_work
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     print_address_description.constprop.0.cold+0xeb/0x495
    mm/kasan/report.c:313
     print_report mm/kasan/report.c:429 [inline]
     kasan_report.cold+0xf4/0x1c6 mm/kasan/report.c:491
     tipc_named_reinit+0x94f/0x9b0 net/tipc/name_distr.c:413
     tipc_net_finalize+0x234/0x3d0 net/tipc/net.c:138
     process_one_work+0x996/0x1610 kernel/workqueue.c:2289
     worker_thread+0x665/0x1080 kernel/workqueue.c:2436
     kthread+0x2e9/0x3a0 kernel/kthread.c:376
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:298
     </TASK>
    [...]
    ==================================================================
    
    In the commit
    d966ddcc3821 ("tipc: fix a deadlock when flushing scheduled work"),
    the cancel_work_sync() function just to make sure ONLY the work
    tipc_net_finalize_work() is executing/pending on any CPU completed before
    tipc namespace is destroyed through tipc_exit_net(). But this function
    is not guaranteed the work is the last queued. So, the destroyed instance
    may be accessed in the work which will try to enqueue later.
    
    In order to completely fix, we re-order the calling of cancel_work_sync()
    to make sure the work tipc_net_finalize_work() was last queued and it
    must be completed by calling cancel_work_sync().
    
    Reported-by: syzbot+47af19f3307fc9c5c82e@syzkaller.appspotmail.com
    Fixes: d966ddcc3821 ("tipc: fix a deadlock when flushing scheduled work")
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f299d3fbe431aa5556edc0670a401d2b7b796490
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue May 18 10:09:08 2021 +0800

    tipc: simplify the finalize work queue
    
    [ Upstream commit be07f056396d6bb40963c45a02951c566ddeef8e ]
    
    This patch is to use "struct work_struct" for the finalize work queue
    instead of "struct tipc_net_work", as it can get the "net" and "addr"
    from tipc_net's other members and there is no need to add extra net
    and addr in tipc_net by defining "struct tipc_net_work".
    
    Note that it's safe to get net from tn->bcl as bcl is always released
    after the finalize work queue is done.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab7f565ac70594576bc23ac3da24d13c68122171
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Fri Jun 10 11:40:37 2022 +0300

    phy: aquantia: Fix AN when higher speeds than 1G are not advertised
    
    [ Upstream commit 9b7fd1670a94a57d974795acebde843a5c1a354e ]
    
    Even when the eth port is resticted to work with speeds not higher than 1G,
    and so the eth driver is requesting the phy (via phylink) to advertise up
    to 1000BASET support, the aquantia phy device is still advertising for 2.5G
    and 5G speeds.
    Clear these advertising defaults when requested.
    
    Cc: Ondrej Spacek <ondrej.spacek@nxp.com>
    Fixes: 09c4c57f7bc41 ("net: phy: aquantia: add support for auto-negotiation configuration")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Link: https://lore.kernel.org/r/20220610084037.7625-1-claudiu.manoil@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a51c199e4d2bbb8748c12e2ce846024dea012e57
Author: Jakub Sitnicki <jakub@cloudflare.com>
Date:   Thu Jun 16 18:20:36 2022 +0200

    bpf, x86: Fix tail call count offset calculation on bpf2bpf call
    
    [ Upstream commit ff672c67ee7635ca1e28fb13729e8ef0d1f08ce5 ]
    
    On x86-64 the tail call count is passed from one BPF function to another
    through %rax. Additionally, on function entry, the tail call count value
    is stored on stack right after the BPF program stack, due to register
    shortage.
    
    The stored count is later loaded from stack either when performing a tail
    call - to check if we have not reached the tail call limit - or before
    calling another BPF function call in order to pass it via %rax.
    
    In the latter case, we miscalculate the offset at which the tail call count
    was stored on function entry. The JIT does not take into account that the
    allocated BPF program stack is always a multiple of 8 on x86, while the
    actual stack depth does not have to be.
    
    This leads to a load from an offset that belongs to the BPF stack, as shown
    in the example below:
    
    SEC("tc")
    int entry(struct __sk_buff *skb)
    {
            /* Have data on stack which size is not a multiple of 8 */
            volatile char arr[1] = {};
            return subprog_tail(skb);
    }
    
    int entry(struct __sk_buff * skb):
       0: (b4) w2 = 0
       1: (73) *(u8 *)(r10 -1) = r2
       2: (85) call pc+1#bpf_prog_ce2f79bb5f3e06dd_F
       3: (95) exit
    
    int entry(struct __sk_buff * skb):
       0xffffffffa0201788:  nop    DWORD PTR [rax+rax*1+0x0]
       0xffffffffa020178d:  xor    eax,eax
       0xffffffffa020178f:  push   rbp
       0xffffffffa0201790:  mov    rbp,rsp
       0xffffffffa0201793:  sub    rsp,0x8
       0xffffffffa020179a:  push   rax
       0xffffffffa020179b:  xor    esi,esi
       0xffffffffa020179d:  mov    BYTE PTR [rbp-0x1],sil
       0xffffffffa02017a1:  mov    rax,QWORD PTR [rbp-0x9]  !!! tail call count
       0xffffffffa02017a8:  call   0xffffffffa02017d8       !!! is at rbp-0x10
       0xffffffffa02017ad:  leave
       0xffffffffa02017ae:  ret
    
    Fix it by rounding up the BPF stack depth to a multiple of 8, when
    calculating the tail call count offset on stack.
    
    Fixes: ebf7d1f508a7 ("bpf, x64: rework pro/epilogue and tailcall handling in JIT")
    Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220616162037.535469-2-jakub@cloudflare.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ae116428e81f4c3785792d5647d445c8b3e0171
Author: Samuel Holland <samuel@sholland.org>
Date:   Wed Jun 15 00:42:53 2022 -0500

    drm/sun4i: Fix crash during suspend after component bind failure
    
    [ Upstream commit 1342b5b23da9559a1578978eaff7f797d8a87d91 ]
    
    If the component driver fails to bind, or is unbound, the driver data
    for the top-level platform device points to a freed drm_device. If the
    system is then suspended, the driver passes this dangling pointer to
    drm_mode_config_helper_suspend(), which crashes.
    
    Fix this by only setting the driver data while the platform driver holds
    a reference to the drm_device.
    
    Fixes: 624b4b48d9d8 ("drm: sun4i: Add support for suspending the display driver")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220615054254.16352-1-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 516760f1d2979903eaad5b437256913c5cd98416
Author: Jon Maxwell <jmaxwell37@gmail.com>
Date:   Wed Jun 15 11:15:40 2022 +1000

    bpf: Fix request_sock leak in sk lookup helpers
    
    [ Upstream commit 3046a827316c0e55fc563b4fb78c93b9ca5c7c37 ]
    
    A customer reported a request_socket leak in a Calico cloud environment. We
    found that a BPF program was doing a socket lookup with takes a refcnt on
    the socket and that it was finding the request_socket but returning the parent
    LISTEN socket via sk_to_full_sk() without decrementing the child request socket
    1st, resulting in request_sock slab object leak. This patch retains the
    existing behaviour of returning full socks to the caller but it also decrements
    the child request_socket if one is present before doing so to prevent the leak.
    
    Thanks to Curtis Taylor for all the help in diagnosing and testing this. And
    thanks to Antoine Tenart for the reproducer and patch input.
    
    v2 of this patch contains, refactor as per Daniel Borkmann's suggestions to
    validate RCU flags on the listen socket so that it balances with bpf_sk_release()
    and update comments as per Martin KaFai Lau's suggestion. One small change to
    Daniels suggestion, put "sk = sk2" under "if (sk2 != sk)" to avoid an extra
    instruction.
    
    Fixes: f7355a6c0497 ("bpf: Check sk_fullsock() before returning from bpf_sk_lookup()")
    Fixes: edbf8c01de5a ("bpf: add skc_lookup_tcp helper")
    Co-developed-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: Jon Maxwell <jmaxwell37@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Curtis Taylor <cutaylor-pub@yahoo.com>
    Cc: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/56d6f898-bde0-bb25-3427-12a330b29fb8@iogearbox.net
    Link: https://lore.kernel.org/bpf/20220615011540.813025-1-jmaxwell37@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 505a375eea117985ed47cbcb5e1d43a37d2104c8
Author: Jonathan Marek <jonathan@marek.ca>
Date:   Mon Jun 13 18:10:19 2022 -0400

    drm/msm: use for_each_sgtable_sg to iterate over scatterlist
    
    [ Upstream commit 62b5e322fb6cc5a5a91fdeba0e4e57e75d9f4387 ]
    
    The dma_map_sgtable() call (used to invalidate cache) overwrites sgt->nents
    with 1, so msm_iommu_pagetable_map maps only the first physical segment.
    
    To fix this problem use for_each_sgtable_sg(), which uses orig_nents.
    
    Fixes: b145c6e65eb0 ("drm/msm: Add support to create a local pagetable")
    Signed-off-by: Jonathan Marek <jonathan@marek.ca>
    Link: https://lore.kernel.org/r/20220613221019.11399-1-jonathan@marek.ca
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10eb239e293516d99f7df050a1a0c8a9cf484070
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Wed Jun 8 10:13:02 2022 +0900

    scsi: scsi_debug: Fix zone transition to full condition
    
    [ Upstream commit 566d3c57eb526f32951af15866086e236ce1fc8a ]
    
    When a write command to a sequential write required or sequential write
    preferred zone result in the zone write pointer reaching the end of the
    zone, the zone condition must be set to full AND the number of implicitly
    or explicitly open zones updated to have a correct accounting for zone
    resources. However, the function zbc_inc_wp() only sets the zone condition
    to full without updating the open zone counters, resulting in a zone state
    machine breakage.
    
    Introduce the helper function zbc_set_zone_full() and use it in
    zbc_inc_wp() to correctly transition zones to the full condition.
    
    Link: https://lore.kernel.org/r/20220608011302.92061-1-damien.lemoal@opensource.wdc.com
    Fixes: f0d1cf9378bd ("scsi: scsi_debug: Add ZBC zone commands")
    Reviewed-by: Niklas Cassel <niklas.cassel@wdc.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15cc30ac2a8d7185f8ebf97dd1ddd90a7c79783b
Author: Florian Westphal <fw@strlen.de>
Date:   Wed May 18 20:15:31 2022 +0200

    netfilter: use get_random_u32 instead of prandom
    
    [ Upstream commit b1fd94e704571f98b21027340eecf821b2bdffba ]
    
    bh might occur while updating per-cpu rnd_state from user context,
    ie. local_out path.
    
    BUG: using smp_processor_id() in preemptible [00000000] code: nginx/2725
    caller is nft_ng_random_eval+0x24/0x54 [nft_numgen]
    Call Trace:
     check_preemption_disabled+0xde/0xe0
     nft_ng_random_eval+0x24/0x54 [nft_numgen]
    
    Use the random driver instead, this also avoids need for local prandom
    state. Moreover, prandom now uses the random driver since d4150779e60f
    ("random32: use real rng for non-deterministic randomness").
    
    Based on earlier patch from Pablo Neira.
    
    Fixes: 6b2faee0ca91 ("netfilter: nft_meta: place prandom handling in a helper")
    Fixes: 978d8f9055c3 ("netfilter: nft_numgen: add map lookups for numgen random operations")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95f80c88436f98f38abdeb791b2a979b24191091
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Jan 25 18:27:22 2021 +0100

    netfilter: nftables: add nft_parse_register_store() and use it
    
    [ Upstream commit 345023b0db315648ccc3c1a36aee88304a8b4d91 ]
    
    This new function combines the netlink register attribute parser
    and the store validation function.
    
    This update requires to replace:
    
            enum nft_registers      dreg:8;
    
    in many of the expression private areas otherwise compiler complains
    with:
    
            error: cannot take address of bit-field ‘dreg’
    
    when passing the register field as reference.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec9b0a8d307ed0377699fe47bb4dc640e9184f8b
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Jan 25 17:28:18 2021 +0100

    netfilter: nftables: add nft_parse_register_load() and use it
    
    [ Upstream commit 4f16d25c68ec844299a4df6ecbb0234eaf88a935 ]
    
    This new function combines the netlink register attribute parser
    and the load validation function.
    
    This update requires to replace:
    
            enum nft_registers      sreg:8;
    
    in many of the expression private areas otherwise compiler complains
    with:
    
            error: cannot take address of bit-field ‘sreg’
    
    when passing the register field as reference.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8adedb4711dcdf25bbe3098284eb7654fb0a66c3
Author: Maximilian Luz <luzmaximilian@gmail.com>
Date:   Mon Jun 6 23:13:05 2022 +0200

    drm/msm: Fix double pm_runtime_disable() call
    
    [ Upstream commit ce0db505bc0c51ef5e9ba446c660de7e26f78f29 ]
    
    Following commit 17e822f7591f ("drm/msm: fix unbalanced
    pm_runtime_enable in adreno_gpu_{init, cleanup}"), any call to
    adreno_unbind() will disable runtime PM twice, as indicated by the call
    trees below:
    
      adreno_unbind()
       -> pm_runtime_force_suspend()
       -> pm_runtime_disable()
    
      adreno_unbind()
       -> gpu->funcs->destroy() [= aNxx_destroy()]
       -> adreno_gpu_cleanup()
       -> pm_runtime_disable()
    
    Note that pm_runtime_force_suspend() is called right before
    gpu->funcs->destroy() and both functions are called unconditionally.
    
    With recent addition of the eDP AUX bus code, this problem manifests
    itself when the eDP panel cannot be found yet and probing is deferred.
    On the first probe attempt, we disable runtime PM twice as described
    above. This then causes any later probe attempt to fail with
    
      [drm:adreno_load_gpu [msm]] *ERROR* Couldn't power up the GPU: -13
    
    preventing the driver from loading.
    
    As there seem to be scenarios where the aNxx_destroy() functions are not
    called from adreno_unbind(), simply removing pm_runtime_disable() from
    inside adreno_unbind() does not seem to be the proper fix. This is what
    commit 17e822f7591f ("drm/msm: fix unbalanced pm_runtime_enable in
    adreno_gpu_{init, cleanup}") intended to fix. Therefore, instead check
    whether runtime PM is still enabled, and only disable it in that case.
    
    Fixes: 17e822f7591f ("drm/msm: fix unbalanced pm_runtime_enable in adreno_gpu_{init, cleanup}")
    Signed-off-by: Maximilian Luz <luzmaximilian@gmail.com>
    Tested-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Rob Clark <robdclark@gmail.com>
    Link: https://lore.kernel.org/r/20220606211305.189585-1-luzmaximilian@gmail.com
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8682335375bdd98d6c0d343ae4e72ad4779c0041
Author: Macpaul Lin <macpaul.lin@mediatek.com>
Date:   Thu Jun 23 16:56:44 2022 +0800

    USB: serial: option: add Quectel RM500K module support
    
    commit 15b694e96c31807d8515aacfa687a1e8a4fbbadc upstream.
    
    Add usb product id of the Quectel RM500K module.
    
    RM500K provides 2 mandatory interfaces to Linux host after enumeration.
     - /dev/ttyUSB5: this is a serial interface for control path. User needs
       to write AT commands to this device node to query status, set APN,
       set PIN code, and enable/disable the data connection to 5G network.
     - ethX: this is the data path provided as a RNDIS devices. After the
       data connection has been established, Linux host can access 5G data
       network via this interface.
    
    "RNDIS": RNDIS + ADB + AT (/dev/ttyUSB5) + MODEM COMs
    
    usb-devices output for 0x7001:
    T:  Bus=05 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  3 Spd=480 MxCh= 0
    D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=7001 Rev=00.01
    S:  Manufacturer=MediaTek Inc.
    S:  Product=USB DATA CARD
    S:  SerialNumber=869206050009672
    C:  #Ifs=10 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=02 Prot=ff Driver=rndis_host
    E:  Ad=82(I) Atr=03(Int.) MxPS=  64 Ivl=125us
    I:  If#= 1 Alt= 0 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=rndis_host
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 7 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=07(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 8 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=08(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=89(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 9 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=09(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=8a(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Co-developed-by: Ballon Shi <ballon.shi@quectel.com>
    Signed-off-by: Ballon Shi <ballon.shi@quectel.com>
    Signed-off-by: Macpaul Lin <macpaul.lin@mediatek.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e6e063e548b487407316939977ee3b6e796a2c9
Author: Yonglin Tan <yonglin.tan@outlook.com>
Date:   Tue Jun 21 20:37:53 2022 +0800

    USB: serial: option: add Quectel EM05-G modem
    
    commit 33b29dbb39bcbd0a96e440646396bbf670b914fa upstream.
    
    The EM05-G modem has 2 USB configurations that are configurable via the AT
    command AT+QCFG="usbnet",[ 0 | 2 ] which make the modem enumerate with
    the following interfaces, respectively:
    
    "RMNET" : AT + DIAG + NMEA + Modem + QMI
    "MBIM"  : MBIM + AT + DIAG + NMEA + Modem
    
    The detailed description of the USB configuration for each mode as follows:
    
    RMNET Mode
    --------------
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 21 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=030a Rev= 3.18
    S:  Manufacturer=Quectel
    S:  Product=Quectel EM05-G
    C:* #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    E:  Ad=89(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    MBIM Mode
    --------------
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 16 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=030a Rev= 3.18
    S:  Manufacturer=Quectel
    S:  Product=Quectel EM05-G
    C:* #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=0e Prot=00
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=0e Prot=00 Driver=cdc_mbim
    E:  Ad=89(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
    I:  If#= 1 Alt= 0 #EPs= 0 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:* If#= 1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Signed-off-by: Yonglin Tan <yonglin.tan@outlook.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b3006a862fb3cdbb3e5d6e125b60d4bf94a7ea0
Author: Carlo Lobrano <c.lobrano@gmail.com>
Date:   Tue Jun 14 09:56:23 2022 +0200

    USB: serial: option: add Telit LE910Cx 0x1250 composition
    
    commit 342fc0c3b345525da21112bd0478a0dc741598ea upstream.
    
    Add support for the following Telit LE910Cx composition:
    
    0x1250: rmnet, tty, tty, tty, tty
    
    Reviewed-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: Carlo Lobrano <c.lobrano@gmail.com>
    Link: https://lore.kernel.org/r/20220614075623.2392607-1-c.lobrano@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6a266e0dc6fc024767cd15b8f9de477f4efdfc2
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jun 23 14:53:25 2022 -0400

    dm mirror log: clear log bits up to BITS_PER_LONG boundary
    
    commit 90736eb3232d208ee048493f371075e4272e0944 upstream.
    
    Commit 85e123c27d5c ("dm mirror log: round up region bitmap size to
    BITS_PER_LONG") introduced a regression on 64-bit architectures in the
    lvm testsuite tests: lvcreate-mirror, mirror-names and vgsplit-operation.
    
    If the device is shrunk, we need to clear log bits beyond the end of the
    device. The code clears bits up to a 32-bit boundary and then calculates
    lc->sync_count by summing set bits up to a 64-bit boundary (the commit
    changed that; previously, this boundary was 32-bit too). So, it was using
    some non-zeroed bits in the calculation and this caused misbehavior.
    
    Fix this regression by clearing bits up to BITS_PER_LONG boundary.
    
    Fixes: 85e123c27d5c ("dm mirror log: round up region bitmap size to BITS_PER_LONG")
    Cc: stable@vger.kernel.org
    Reported-by: Benjamin Marzinski <bmarzins@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03d1874b8295384b232237418c07235753912b8f
Author: Nikos Tsironis <ntsironis@arrikto.com>
Date:   Tue Jun 21 15:24:03 2022 +0300

    dm era: commit metadata in postsuspend after worker stops
    
    commit 9ae6e8b1c9bbf6874163d1243e393137313762b7 upstream.
    
    During postsuspend dm-era does the following:
    
    1. Archives the current era
    2. Commits the metadata, as part of the RPC call for archiving the
       current era
    3. Stops the worker
    
    Until the worker stops, it might write to the metadata again. Moreover,
    these writes are not flushed to disk immediately, but are cached by the
    dm-bufio client, which writes them back asynchronously.
    
    As a result, the committed metadata of a suspended dm-era device might
    not be consistent with the in-core metadata.
    
    In some cases, this can result in the corruption of the on-disk
    metadata. Suppose the following sequence of events:
    
    1. Load a new table, e.g. a snapshot-origin table, to a device with a
       dm-era table
    2. Suspend the device
    3. dm-era commits its metadata, but the worker does a few more metadata
       writes until it stops, as part of digesting an archived writeset
    4. These writes are cached by the dm-bufio client
    5. Load the dm-era table to another device.
    6. The new instance of the dm-era target loads the committed, on-disk
       metadata, which don't include the extra writes done by the worker
       after the metadata commit.
    7. Resume the new device
    8. The new dm-era target instance starts using the metadata
    9. Resume the original device
    10. The destructor of the old dm-era target instance is called and
        destroys the dm-bufio client, which results in flushing the cached
        writes to disk
    11. These writes might overwrite the writes done by the new dm-era
        instance, hence corrupting its metadata.
    
    Fix this by committing the metadata after the worker stops running.
    
    stop_worker uses flush_workqueue to flush the current work. However, the
    work item may re-queue itself and flush_workqueue doesn't wait for
    re-queued works to finish.
    
    This could result in the worker changing the metadata after they have
    been committed, or writing to the metadata concurrently with the commit
    in the postsuspend thread.
    
    Use drain_workqueue instead, which waits until the work and all
    re-queued works finish.
    
    Fixes: eec40579d8487 ("dm: add era target")
    Cc: stable@vger.kernel.org # v3.15+
    Signed-off-by: Nikos Tsironis <ntsironis@arrikto.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 273106c2df43b6a8d4dccfb012163dfbda94563a
Author: Edward Wu <edwardwu@realtek.com>
Date:   Fri Jun 17 11:32:20 2022 +0800

    ata: libata: add qc->flags in ata_qc_complete_template tracepoint
    
    commit 540a92bfe6dab7310b9df2e488ba247d784d0163 upstream.
    
    Add flags value to check the result of ata completion
    
    Fixes: 255c03d15a29 ("libata: Add tracepoints")
    Cc: stable@vger.kernel.org
    Signed-off-by: Edward Wu <edwardwu@realtek.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 156427b3123c2c1f0987a544d0b005b188a75393
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Jun 14 10:31:38 2022 +0200

    mtd: rawnand: gpmi: Fix setting busy timeout setting
    
    commit 06781a5026350cde699d2d10c9914a25c1524f45 upstream.
    
    The DEVICE_BUSY_TIMEOUT value is described in the Reference Manual as:
    
    | Timeout waiting for NAND Ready/Busy or ATA IRQ. Used in WAIT_FOR_READY
    | mode. This value is the number of GPMI_CLK cycles multiplied by 4096.
    
    So instead of multiplying the value in cycles with 4096, we have to
    divide it by that value. Use DIV_ROUND_UP to make sure we are on the
    safe side, especially when the calculated value in cycles is smaller
    than 4096 as typically the case.
    
    This bug likely never triggered because any timeout != 0 usually will
    do. In my case the busy timeout in cycles was originally calculated as
    2408, which multiplied with 4096 is 0x968000. The lower 16 bits were
    taken for the 16 bit wide register field, so the register value was
    0x8000. With 2970bf5a32f0 ("mtd: rawnand: gpmi: fix controller timings
    setting") however the value in cycles became 2384, which multiplied
    with 4096 is 0x950000. The lower 16 bit are 0x0 now resulting in an
    intermediate timeout when reading from NAND.
    
    Fixes: b1206122069aa ("mtd: rawnand: gpmi: use core timings instead of an empirical derivation")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220614083138.3455683-1-s.hauer@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07e56884cd95769e42190aecbc78040e3068f673
Author: Chevron Li <chevron.li@bayhubtech.com>
Date:   Thu Jun 2 06:25:43 2022 -0700

    mmc: sdhci-pci-o2micro: Fix card detect by dealing with debouncing
    
    commit e591fcf6b4e39335c9b128b17738fcd2fdd278ae upstream.
    
    The result from ->get_cd() may be incorrect as the card detect debouncing
    isn't managed correctly. Let's fix it.
    
    Signed-off-by: Chevron Li<chevron.li@bayhubtech.com>
    Fixes: 7d44061704dd ("mmc: sdhci-pci-o2micro: Fix O2 Host data read/write DLL Lock phase shift issue")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220602132543.596-1-chevron.li@bayhubtech.com
    [Ulf: Updated the commit message]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ae82e1ccb666a83ac1426a145bf346ea7612364
Author: David Sterba <dsterba@suse.com>
Date:   Thu Jun 2 23:57:17 2022 +0200

    btrfs: add error messages to all unrecognized mount options
    
    commit e3a4167c880cf889f66887a152799df4d609dd21 upstream.
    
    Almost none of the errors stemming from a valid mount option but wrong
    value prints a descriptive message which would help to identify why
    mount failed. Like in the linked report:
    
      $ uname -r
      v4.19
      $ mount -o compress=zstd /dev/sdb /mnt
      mount: /mnt: wrong fs type, bad option, bad superblock on
      /dev/sdb, missing codepage or helper program, or other error.
      $ dmesg
      ...
      BTRFS error (device sdb): open_ctree failed
    
    Errors caused by memory allocation failures are left out as it's not a
    user error so reporting that would be confusing.
    
    Link: https://lore.kernel.org/linux-btrfs/9c3fec36-fc61-3a33-4977-a7e207c3fa4e@gmx.de/
    CC: stable@vger.kernel.org # 4.9+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49e3e449bc4e1208e3db7f19a86246467b230672
Author: Rosemarie O'Riorden <roriorden@redhat.com>
Date:   Tue Jun 21 16:48:45 2022 -0400

    net: openvswitch: fix parsing of nw_proto for IPv6 fragments
    
    commit 12378a5a75e33f34f8586706eb61cca9e6d4690c upstream.
    
    When a packet enters the OVS datapath and does not match any existing
    flows installed in the kernel flow cache, the packet will be sent to
    userspace to be parsed, and a new flow will be created. The kernel and
    OVS rely on each other to parse packet fields in the same way so that
    packets will be handled properly.
    
    As per the design document linked below, OVS expects all later IPv6
    fragments to have nw_proto=44 in the flow key, so they can be correctly
    matched on OpenFlow rules. OpenFlow controllers create pipelines based
    on this design.
    
    This behavior was changed by the commit in the Fixes tag so that
    nw_proto equals the next_header field of the last extension header.
    However, there is no counterpart for this change in OVS userspace,
    meaning that this field is parsed differently between OVS and the
    kernel. This is a problem because OVS creates actions based on what is
    parsed in userspace, but the kernel-provided flow key is used as a match
    criteria, as described in Documentation/networking/openvswitch.rst. This
    leads to issues such as packets incorrectly matching on a flow and thus
    the wrong list of actions being applied to the packet. Such changes in
    packet parsing cannot be implemented without breaking the userspace.
    
    The offending commit is partially reverted to restore the expected
    behavior.
    
    The change technically made sense and there is a good reason that it was
    implemented, but it does not comply with the original design of OVS.
    If in the future someone wants to implement such a change, then it must
    be user-configurable and disabled by default to preserve backwards
    compatibility with existing OVS versions.
    
    Cc: stable@vger.kernel.org
    Fixes: fa642f08839b ("openvswitch: Derive IP protocol number for IPv6 later frags")
    Link: https://docs.openvswitch.org/en/latest/topics/design/#fragments
    Signed-off-by: Rosemarie O'Riorden <roriorden@redhat.com>
    Acked-by: Eelco Chaudron <echaudro@redhat.com>
    Link: https://lore.kernel.org/r/20220621204845.9721-1-roriorden@redhat.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1508658aec4ef85d3ae7e3149ea25ef862eaef3b
Author: Tim Crawford <tcrawford@system76.com>
Date:   Wed Jun 22 09:00:17 2022 -0600

    ALSA: hda/realtek: Add quirk for Clevo NS50PU
    
    commit 627ce0d68eb4b53e995b08089fa9da1e513ec5ba upstream.
    
    Fixes headset detection on Clevo NS50PU.
    
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220622150017.9897-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e8e5031592d4f04244a00b591f3076e33b52caf
Author: Tim Crawford <tcrawford@system76.com>
Date:   Fri Jun 17 07:30:28 2022 -0600

    ALSA: hda/realtek: Add quirk for Clevo PD70PNT
    
    commit d49951219b0249d3eff49e4f02e0de82357bc8a0 upstream.
    
    Fixes speaker output and headset detection on Clevo PD70PNT.
    
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220617133028.50568-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80307458a1eef6ea6bfecfb3be68cd0ad33f1fdd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jun 14 07:48:31 2022 +0200

    ALSA: hda/realtek: Apply fixup for Lenovo Yoga Duet 7 properly
    
    commit 56ec3e755bd1041d35bdec020a99b327697ee470 upstream.
    
    It turned out that Lenovo shipped two completely different products
    with the very same PCI SSID, where both require different quirks;
    namely, Lenovo C940 has already the fixup for its speaker
    (ALC298_FIXUP_LENOVO_SPK_VOLUME) with the PCI SSID 17aa:3818, while
    Yoga Duet 7 has also the very same PCI SSID but requires a different
    quirk, ALC287_FIXUP_YOGA7_14TIL_SPEAKERS.
    
    Fortunately, both are with different codecs (C940 with ALC298 and Duet
    7 with ALC287), hence we can apply different fixes by checking the
    codec ID.  This patch implements that special fixup function.
    
    For easier handling, the internal function for applying a specific
    fixup entry is exported as __snd_hda_apply_fixup(), so that it can be
    called from the codec driver.  The rest is simply calling it with a
    different fixup ID depending on the codec ID.
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Tested-by: nikitashvets@flyium.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/5ca147d1-3a2d-60c6-c491-8aa844183222@redhat.com
    Link: https://lore.kernel.org/r/20220614054831.14648-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fcbc89d4722f7b24ab12cdf6ec31a957de98e04
Author: Kailang Yang <kailang@realtek.com>
Date:   Mon Jun 13 14:57:19 2022 +0800

    ALSA: hda/realtek - ALC897 headset MIC no sound
    
    commit fe6900bd8156467365bd5b976df64928fdebfeb0 upstream.
    
    There is not have Headset Mic verb table in BIOS default.
    So, it will have recording issue from headset MIC.
    Add the verb table value without jack detect. It will turn on Headset Mic.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/719133a27d8844a890002cb817001dfa@realtek.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5ea433d56d45ea81b0a51e6cf45b1349205f6d2
Author: Soham Sen <contact@sohamsen.me>
Date:   Thu Jun 9 23:49:20 2022 +0530

    ALSA: hda/realtek: Add mute LED quirk for HP Omen laptop
    
    commit b2e6b3d9bbb0a59ba7c710cc06e44cc548301f5f upstream.
    
    The HP Omen 15 laptop needs a quirk to toggle the mute LED. It already is implemented for a different variant of the HP Omen laptop so a fixup entry is needed for this variant.
    
    Signed-off-by: Soham Sen <contact@sohamsen.me>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220609181919.45535-1-contact@sohamsen.me
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64373290601f9f06f260590cba8018dea323d1ea
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jun 20 12:40:07 2022 +0200

    ALSA: hda/conexant: Fix missing beep setup
    
    commit 5faa0bc69102f3a4c605581564c367be5eb94dfa upstream.
    
    Currently the Conexant codec driver sets up the beep NID after calling
    snd_hda_gen_parse_auto_config().  It turned out that this results in
    the insufficient setup for the beep control, as the generic parser
    handles the fake path in snd_hda_gen_parse_auto_config() only if the
    beep_nid is set up beforehand.
    
    For dealing with the beep widget properly, call cx_auto_parse_beep()
    before snd_hda_gen_parse_auto_config() call.
    
    Fixes: 51e19ca5f755 ("ALSA: hda/conexant - Clean up beep code")
    Cc: <stable@vger.kernel.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216152
    Link: https://lore.kernel.org/r/20220620104008.1994-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12a6be5d11d0799c59fe6578793ffabd20b8e60b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jun 20 12:40:08 2022 +0200

    ALSA: hda/via: Fix missing beep setup
    
    commit c7807b27d510e5aa53c8a120cfc02c33c24ebb5f upstream.
    
    Like the previous fix for Conexant codec, the beep_nid has to be set
    up before calling snd_hda_gen_parse_auto_config(); otherwise it'd miss
    the path setup.
    
    Fix the call order for addressing the missing beep setup.
    
    Fixes: 0e8f9862493a ("ALSA: hda/via - Simplify control management")
    Cc: <stable@vger.kernel.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216152
    Link: https://lore.kernel.org/r/20220620104008.1994-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e80f923b8ddb3af9f9e6d77c2f108521c362c4e
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Jun 16 15:00:51 2022 +0200

    random: quiet urandom warning ratelimit suppression message
    
    commit c01d4d0a82b71857be7449380338bc53dde2da92 upstream.
    
    random.c ratelimits how much it warns about uninitialized urandom reads
    using __ratelimit(). When the RNG is finally initialized, it prints the
    number of missed messages due to ratelimiting.
    
    It has been this way since that functionality was introduced back in
    2018. Recently, cc1e127bfa95 ("random: remove ratelimiting for in-kernel
    unseeded randomness") put a bit more stress on the urandom ratelimiting,
    which teased out a bug in the implementation.
    
    Specifically, when under pressure, __ratelimit() will print its own
    message and reset the count back to 0, making the final message at the
    end less useful. Secondly, it does so as a pr_warn(), which apparently
    is undesirable for people's CI.
    
    Fortunately, __ratelimit() has the RATELIMIT_MSG_ON_RELEASE flag exactly
    for this purpose, so we set the flag.
    
    Fixes: 4e00b339e264 ("random: rate limit unseeded randomness warnings")
    Cc: stable@vger.kernel.org
    Reported-by: Jon Hunter <jonathanh@nvidia.com>
    Reported-by: Ron Economos <re@w6rz.net>
    Tested-by: Ron Economos <re@w6rz.net>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 310ebbd9f5cd2f52a160dc652f750ecc41b0cd5c
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Jun 16 02:03:12 2022 +0200

    random: schedule mix_interrupt_randomness() less often
    
    commit 534d2eaf1970274150596fdd2bf552721e65d6b2 upstream.
    
    It used to be that mix_interrupt_randomness() would credit 1 bit each
    time it ran, and so add_interrupt_randomness() would schedule mix() to
    run every 64 interrupts, a fairly arbitrary number, but nonetheless
    considered to be a decent enough conservative estimate.
    
    Since e3e33fc2ea7f ("random: do not use input pool from hard IRQs"),
    mix() is now able to credit multiple bits, depending on the number of
    calls to add(). This was done for reasons separate from this commit, but
    it has the nice side effect of enabling this patch to schedule mix()
    less often.
    
    Currently the rules are:
    a) Credit 1 bit for every 64 calls to add().
    b) Schedule mix() once a second that add() is called.
    c) Schedule mix() once every 64 calls to add().
    
    Rules (a) and (c) no longer need to be coupled. It's still important to
    have _some_ value in (c), so that we don't "over-saturate" the fast
    pool, but the once per second we get from rule (b) is a plenty enough
    baseline. So, by increasing the 64 in rule (c) to something larger, we
    avoid calling queue_work_on() as frequently during irq storms.
    
    This commit changes that 64 in rule (c) to be 1024, which means we
    schedule mix() 16 times less often. And it does *not* need to change the
    64 in rule (a).
    
    Fixes: 58340f8e952b ("random: defer fast pool mixing to worker")
    Cc: stable@vger.kernel.org
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3acb7dc242ca25eb258493b513ef2f4b0f2a9ad1
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Jan 5 13:02:35 2021 +0100

    vt: drop old FONT ioctls
    
    commit ff2047fb755d4415ec3c70ac799889371151796d upstream.
    
    Drop support for these ioctls:
    * PIO_FONT, PIO_FONTX
    * GIO_FONT, GIO_FONTX
    * PIO_FONTRESET
    
    As was demonstrated by commit 90bfdeef83f1 (tty: make FONTX ioctl use
    the tty pointer they were actually passed), these ioctls are not used
    from userspace, as:
    1) they used to be broken (set up font on current console, not the open
       one) and racy (before the commit above)
    2) KDFONTOP ioctl is used for years instead
    
    Note that PIO_FONTRESET is defunct on most systems as VGA_CONSOLE is set
    on them for ages. That turns on BROKEN_GRAPHICS_PROGRAMS which makes
    PIO_FONTRESET just return an error.
    
    We are removing KD_FONT_FLAG_OLD here as it was used only by these
    removed ioctls. kd.h header exists both in kernel and uapi headers, so
    we can remove the kernel one completely. Everyone includeing kd.h will
    now automatically get the uapi one.
    
    There are now unused definitions of the ioctl numbers and "struct
    consolefontdesc" in kd.h, but as it is a uapi header, I am not touching
    these.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210105120239.28031-8-jslaby@suse.cz
    Cc: guodaxing <guodaxing@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
