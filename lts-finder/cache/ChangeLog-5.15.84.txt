commit d68f50bfb00f6288e812be895ea5c77932a4b9dd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Dec 19 12:36:45 2022 +0100

    Linux 5.15.84
    
    Link: https://lore.kernel.org/r/20221215172906.338769943@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Allen Pais <apais@linux.microsoft.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Ron Economos <re@w6rz.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 972707bae3d7f70b897e893f35cae69030283752
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Mon Dec 5 21:46:04 2022 +0100

    net: fec: properly guard irq coalesce setup
    
    commit 7e6303567ce3ca506e4a2704e4baa86f1d8bde02 upstream.
    
    Prior to the Fixes: commit, the initialization code went through the
    same fec_enet_set_coalesce() function as used by ethtool, and that
    function correctly checks whether the current variant has support for
    irq coalescing.
    
    Now that the initialization code instead calls fec_enet_itr_coal_set()
    directly, that call needs to be guarded by a check for the
    FEC_QUIRK_HAS_COALESCE bit.
    
    Fixes: df727d4547de (net: fec: don't reset irq coalesce settings to defaults on "ip link up")
    Reported-by: Greg Ungerer <gregungerer@westnet.com.au>
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20221205204604.869853-1-linux@rasmusvillemoes.dk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 289721fe0993b1a1f28c751c6d56fabedb25cf64
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Fri Nov 25 16:23:47 2022 +0000

    ASoC: ops: Correct bounds check for second channel on SX controls
    
    commit f33bcc506050f89433a52a3052054d4ebd37b1c1 upstream.
    
    Currently the check against the max value for the control is being
    applied after the value has had the minimum applied and been masked. But
    the max value simply indicates the number of volume levels on an SX
    control, and as such should just be applied on the raw value.
    
    Fixes: 97eea946b939 ("ASoC: ops: Check bounds for second channel in snd_soc_put_volsw_sx()")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20221125162348.1288005-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de0866b94a646da85c9c55a4109bfcd94d2a38a0
Author: Lei Rao <lei.rao@intel.com>
Date:   Tue Nov 29 17:48:11 2022 +0800

    nvme-pci: clear the prp2 field when not used
    
    [ Upstream commit a56ea6147facce4ac1fc38675455f9733d96232b ]
    
    If the prp2 field is not filled in nvme_setup_prp_simple(), the prp2
    field is garbage data. According to nvme spec, the prp2 is reserved if
    the data transfer does not cross a memory page boundary, so clear it to
    zero if it is not used.
    
    Signed-off-by: Lei Rao <lei.rao@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bffa95ac19ff27c8261904f89d36c7fcf215d59
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Nov 24 12:49:12 2022 +0100

    perf: Fix perf_pending_task() UaF
    
    [ Upstream commit 517e6a301f34613bff24a8e35b5455884f2d83d8 ]
    
    Per syzbot it is possible for perf_pending_task() to run after the
    event is free()'d. There are two related but distinct cases:
    
     - the task_work was already queued before destroying the event;
     - destroying the event itself queues the task_work.
    
    The first cannot be solved using task_work_cancel() since
    perf_release() itself might be called from a task_work (____fput),
    which means the current->task_works list is already empty and
    task_work_cancel() won't be able to find the perf_pending_task()
    entry.
    
    The simplest alternative is extending the perf_event lifetime to cover
    the task_work.
    
    The second is just silly, queueing a task_work while you know the
    event is going away makes no sense and is easily avoided by
    re-arranging how the event is marked STATE_DEAD and ensuring it goes
    through STATE_OFF on the way down.
    
    Reported-by: syzbot+9228d6098455bb209ec8@syzkaller.appspotmail.com
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Marco Elver <elver@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 825bd2af4227b35017a0e0be19dcc308b32f126c
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Fri Nov 25 16:23:48 2022 +0000

    ASoC: cs42l51: Correct PGA Volume minimum value
    
    [ Upstream commit 3d1bb6cc1a654c8693a85b1d262e610196edec8b ]
    
    The table in the datasheet actually shows the volume values in the wrong
    order, with the two -3dB values being reversed. This appears to have
    caused the lower of the two values to be used in the driver when the
    higher should have been, correct this mixup.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20221125162348.1288005-2-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91582b3a1ab222c459da7600290f5b8f1b9f570f
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Wed Nov 23 14:38:52 2022 +0100

    net: fec: don't reset irq coalesce settings to defaults on "ip link up"
    
    [ Upstream commit df727d4547de568302b0ed15b0d4e8a469bdb456 ]
    
    Currently, when a FEC device is brought up, the irq coalesce settings
    are reset to their default values (1000us, 200 frames). That's
    unexpected, and breaks for example use of an appropriate .link file to
    make systemd-udev apply the desired
    settings (https://www.freedesktop.org/software/systemd/man/systemd.link.html),
    or any other method that would do a one-time setup during early boot.
    
    Refactor the code so that fec_restart() instead uses
    fec_enet_itr_coal_set(), which simply applies the settings that are
    stored in the private data, and initialize that private data with the
    default values.
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c772dab247f1a5cacc109c4e09ae6e0843a73445
Author: Yasushi SHOJI <yasushi.shoji@gmail.com>
Date:   Fri Nov 25 00:25:03 2022 +0900

    can: mcba_usb: Fix termination command argument
    
    [ Upstream commit 1a8e3bd25f1e789c8154e11ea24dc3ec5a4c1da0 ]
    
    Microchip USB Analyzer can activate the internal termination resistors
    by setting the "termination" option ON, or OFF to to deactivate them.
    As I've observed, both with my oscilloscope and captured USB packets
    below, you must send "0" to turn it ON, and "1" to turn it OFF.
    
    From the schematics in the user's guide, I can confirm that you must
    drive the CAN_RES signal LOW "0" to activate the resistors.
    
    Reverse the argument value of usb_msg.termination to fix this.
    
    These are the two commands sequence, ON then OFF.
    
    > No.     Time           Source                Destination           Protocol Length Info
    >       1 0.000000       host                  1.3.1                 USB      46     URB_BULK out
    >
    > Frame 1: 46 bytes on wire (368 bits), 46 bytes captured (368 bits)
    > USB URB
    > Leftover Capture Data: a80000000000000000000000000000000000a8
    >
    > No.     Time           Source                Destination           Protocol Length Info
    >       2 4.372547       host                  1.3.1                 USB      46     URB_BULK out
    >
    > Frame 2: 46 bytes on wire (368 bits), 46 bytes captured (368 bits)
    > USB URB
    > Leftover Capture Data: a80100000000000000000000000000000000a9
    
    Signed-off-by: Yasushi SHOJI <yashi@spacecubics.com>
    Link: https://lore.kernel.org/all/20221124152504.125994-1-yashi@spacecubics.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa822de7de3beb28eaf1e7a633754e5173d358fe
Author: Heiko Schocher <hs@denx.de>
Date:   Wed Nov 23 08:16:36 2022 +0100

    can: sja1000: fix size of OCR_MODE_MASK define
    
    [ Upstream commit 26e8f6a75248247982458e8237b98c9fb2ffcf9d ]
    
    bitfield mode in ocr register has only 2 bits not 3, so correct
    the OCR_MODE_MASK define.
    
    Signed-off-by: Heiko Schocher <hs@denx.de>
    Link: https://lore.kernel.org/all/20221123071636.2407823-1-hs@denx.de
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09e08740d78cfa1ed75c73184c41a04af2b860ff
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Tue Nov 22 00:38:55 2022 +0100

    pinctrl: meditatek: Startup with the IRQs disabled
    
    [ Upstream commit 11780e37565db4dd064d3243ca68f755c13f65b4 ]
    
    If the system is restarted via kexec(), the peripherals do not start
    with a known state.
    
    If the previous system had enabled an IRQs we will receive unexected
    IRQs that can lock the system.
    
    [   28.109251] watchdog: BUG: soft lockup - CPU#0 stuck for 26s!
    [swapper/0:0]
    [   28.109263] Modules linked in:
    [   28.109273] CPU: 0 PID: 0 Comm: swapper/0 Not tainted
    5.15.79-14458-g4b9edf7b1ac6 #1 9f2e76613148af94acccd64c609a552fb4b4354b
    [   28.109284] Hardware name: Google Elm (DT)
    [   28.109290] pstate: 40400005 (nZcv daif +PAN -UAO -TCO -DIT -SSBS
                    BTYPE=--)
    [   28.109298] pc : __do_softirq+0xa0/0x388
    [   28.109309] lr : __do_softirq+0x70/0x388
    [   28.109316] sp : ffffffc008003ee0
    [   28.109321] x29: ffffffc008003f00 x28: 000000000000000a x27:
    0000000000000080
    [   28.109334] x26: 0000000000000001 x25: ffffffefa7b350c0 x24:
    ffffffefa7b47480
    [   28.109346] x23: ffffffefa7b3d000 x22: 0000000000000000 x21:
    ffffffefa7b0fa40
    [   28.109358] x20: ffffffefa7b005b0 x19: ffffffefa7b47480 x18:
    0000000000065b6b
    [   28.109370] x17: ffffffefa749c8b0 x16: 000000000000018c x15:
    00000000000001b8
    [   28.109382] x14: 00000000000d3b6b x13: 0000000000000006 x12:
    0000000000057e91
    [   28.109394] x11: 0000000000000000 x10: 0000000000000000 x9 :
    ffffffefa7b47480
    [   28.109406] x8 : 00000000000000e0 x7 : 000000000f424000 x6 :
    0000000000000000
    [   28.109418] x5 : ffffffefa7dfaca0 x4 : ffffffefa7dfadf0 x3 :
    000000000000000f
    [   28.109429] x2 : 0000000000000000 x1 : 0000000000000100 x0 :
    0000000001ac65c5
    [   28.109441] Call trace:
    [   28.109447]  __do_softirq+0xa0/0x388
    [   28.109454]  irq_exit+0xc0/0xe0
    [   28.109464]  handle_domain_irq+0x68/0x90
    [   28.109473]  gic_handle_irq+0xac/0xf0
    [   28.109480]  call_on_irq_stack+0x28/0x50
    [   28.109488]  do_interrupt_handler+0x44/0x58
    [   28.109496]  el1_interrupt+0x30/0x58
    [   28.109506]  el1h_64_irq_handler+0x18/0x24
    [   28.109512]  el1h_64_irq+0x7c/0x80
    [   28.109519]  arch_local_irq_enable+0xc/0x18
    [   28.109529]  default_idle_call+0x40/0x140
    [   28.109539]  do_idle+0x108/0x290
    [   28.109547]  cpu_startup_entry+0x2c/0x30
    [   28.109554]  rest_init+0xe8/0xf8
    [   28.109562]  arch_call_rest_init+0x18/0x24
    [   28.109571]  start_kernel+0x338/0x42c
    [   28.109578]  __primary_switched+0xbc/0xc4
    [   28.109588] Kernel panic - not syncing: softlockup: hung tasks
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Link: https://lore.kernel.org/r/20221122-mtk-pinctrl-v1-1-bedf5655a3d2@chromium.org
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 172a95026f0617b593dc001d7001e2edcfe0e4aa
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Nov 16 15:23:48 2022 +0800

    libbpf: Use page size as max_entries when probing ring buffer map
    
    [ Upstream commit 689eb2f1ba46b4b02195ac2a71c55b96d619ebf8 ]
    
    Using page size as max_entries when probing ring buffer map, else the
    probe may fail on host with 64KB page size (e.g., an ARM64 host).
    
    After the fix, the output of "bpftool feature" on above host will be
    correct.
    
    Before :
        eBPF map_type ringbuf is NOT available
        eBPF map_type user_ringbuf is NOT available
    
    After :
        eBPF map_type ringbuf is available
        eBPF map_type user_ringbuf is available
    
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20221116072351.1168938-2-houtao@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf611d786796ec33da09d8c83d7d7f4e557b27de
Author: Mark Brown <broonie@kernel.org>
Date:   Wed May 11 14:41:37 2022 +0100

    ASoC: ops: Check bounds for second channel in snd_soc_put_volsw_sx()
    
    [ Upstream commit 97eea946b93961fffd29448dcda7398d0d51c4b2 ]
    
    The bounds checks in snd_soc_put_volsw_sx() are only being applied to the
    first channel, meaning it is possible to write out of bounds values to the
    second channel in stereo controls. Add appropriate checks.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20220511134137.169575-2-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a74b88e1702537303999efb32d3cd6702121d9b1
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Sat May 7 20:14:14 2022 +0800

    ASoC: fsl_micfil: explicitly clear CHnF flags
    
    [ Upstream commit b776c4a4618ec1b5219d494c423dc142f23c4e8f ]
    
    There may be failure when start 1 channel recording after
    8 channels recording. The reason is that the CHnF
    flags are not cleared successfully by software reset.
    
    This issue is triggerred by the change of clearing
    software reset bit.
    
    CHnF flags are write 1 clear bits. Clear them by force
    write.
    
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1651925654-32060-2-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afac1e7d78eba52c1aa0bb496509f795e545ea82
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Sat May 7 20:14:13 2022 +0800

    ASoC: fsl_micfil: explicitly clear software reset bit
    
    [ Upstream commit 292709b9cf3ba470af94b62c9bb60284cc581b79 ]
    
    SRES is self-cleared bit, but REG_MICFIL_CTRL1 is defined as
    non volatile register, it still remain in regmap cache after set,
    then every update of REG_MICFIL_CTRL1, software reset happens.
    to avoid this, clear it explicitly.
    
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1651925654-32060-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d933af8fef33c32799b9f2d3ff6bf58a63d7f24
Author: Jialiang Wang <wangjialiang0806@163.com>
Date:   Wed Aug 10 15:30:57 2022 +0800

    nfp: fix use-after-free in area_cache_get()
    
    commit 02e1a114fdb71e59ee6770294166c30d437bf86a upstream.
    
    area_cache_get() is used to distribute cache->area and set cache->id,
     and if cache->id is not 0 and cache->area->kref refcount is 0, it will
     release the cache->area by nfp_cpp_area_release(). area_cache_get()
     set cache->id before cpp->op->area_init() and nfp_cpp_area_acquire().
    
    But if area_init() or nfp_cpp_area_acquire() fails, the cache->id is
     is already set but the refcount is not increased as expected. At this
     time, calling the nfp_cpp_area_release() will cause use-after-free.
    
    To avoid the use-after-free, set cache->id after area_init() and
     nfp_cpp_area_acquire() complete successfully.
    
    Note: This vulnerability is triggerable by providing emulated device
     equipped with specified configuration.
    
     BUG: KASAN: use-after-free in nfp6000_area_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:760)
      Write of size 4 at addr ffff888005b7f4a0 by task swapper/0/1
    
     Call Trace:
      <TASK>
     nfp6000_area_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:760)
     area_cache_get.constprop.8 (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:884)
    
     Allocated by task 1:
     nfp_cpp_area_alloc_with_name (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:303)
     nfp_cpp_area_cache_add (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:802)
     nfp6000_init (drivers/net/ethernet/netronome/nfp/nfpcore/nfp6000_pcie.c:1230)
     nfp_cpp_from_operations (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:1215)
     nfp_pci_probe (drivers/net/ethernet/netronome/nfp/nfp_main.c:744)
    
     Freed by task 1:
     kfree (mm/slub.c:4562)
     area_cache_get.constprop.8 (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:873)
     nfp_cpp_read (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:924 drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cppcore.c:973)
     nfp_cpp_readl (drivers/net/ethernet/netronome/nfp/nfpcore/nfp_cpplib.c:48)
    
    Signed-off-by: Jialiang Wang <wangjialiang0806@163.com>
    Reviewed-by: Yinjun Zhang <yinjun.zhang@corigine.com>
    Acked-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20220810073057.4032-1-wangjialiang0806@163.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1a4f5880d007addb2cad88db5c4c196db625eca
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Thu Nov 17 22:52:49 2022 +0200

    vfs: fix copy_file_range() averts filesystem freeze protection
    
    commit 10bc8e4af65946b727728d7479c028742321b60a upstream.
    
    Commit 868f9f2f8e00 ("vfs: fix copy_file_range() regression in cross-fs
    copies") removed fallback to generic_copy_file_range() for cross-fs
    cases inside vfs_copy_file_range().
    
    To preserve behavior of nfsd and ksmbd server-side-copy, the fallback to
    generic_copy_file_range() was added in nfsd and ksmbd code, but that
    call is missing sb_start_write(), fsnotify hooks and more.
    
    Ideally, nfsd and ksmbd would pass a flag to vfs_copy_file_range() that
    will take care of the fallback, but that code would be subtle and we got
    vfs_copy_file_range() logic wrong too many times already.
    
    Instead, add a flag to explicitly request vfs_copy_file_range() to
    perform only generic_copy_file_range() and let nfsd and ksmbd use this
    flag only in the fallback path.
    
    This choise keeps the logic changes to minimum in the non-nfsd/ksmbd code
    paths to reduce the risk of further regressions.
    
    Fixes: 868f9f2f8e00 ("vfs: fix copy_file_range() regression in cross-fs copies")
    Tested-by: Namjae Jeon <linkinjeon@kernel.org>
    Tested-by: Luis Henriques <lhenriques@suse.de>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    [backport comments for v5.15: - sb_write_started() is missing - assert was dropped ]
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86e28ed25b0005f318a9db09659bc8e4e208b2c3
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Nov 8 17:03:07 2022 -0700

    x86/vdso: Conditionally export __vdso_sgx_enter_enclave()
    
    commit 45be2ad007a9c6bea70249c4cf3e4905afe4caeb upstream.
    
    Recently, ld.lld moved from '--undefined-version' to
    '--no-undefined-version' as the default, which breaks building the vDSO
    when CONFIG_X86_SGX is not set:
    
      ld.lld: error: version script assignment of 'LINUX_2.6' to symbol '__vdso_sgx_enter_enclave' failed: symbol not defined
    
    __vdso_sgx_enter_enclave is only included in the vDSO when
    CONFIG_X86_SGX is set. Only export it if it will be present in the final
    object, which clears up the error.
    
    Fixes: 8466436952017 ("x86/vdso: Implement a vDSO for Intel SGX enclave call")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://github.com/ClangBuiltLinux/linux/issues/1756
    Link: https://lore.kernel.org/r/20221109000306.1407357-1-nathan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
