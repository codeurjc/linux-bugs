commit e7f5213d755bc34f366d36f08825c0b446117d96
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 15 14:18:42 2022 +0200

    Linux 5.4.189
    
    Link: https://lore.kernel.org/r/20220414110855.141582785@linuxfoundation.org
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b15feb09a32eca01b24b7d03cf85b5170f2fc38e
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Fri Feb 25 13:06:46 2022 -0600

    ACPI: processor idle: Check for architectural support for LPI
    
    commit eb087f305919ee8169ad65665610313e74260463 upstream.
    
    When `osc_pc_lpi_support_confirmed` is set through `_OSC` and `_LPI` is
    populated then the cpuidle driver assumes that LPI is fully functional.
    
    However currently the kernel only provides architectural support for LPI
    on ARM.  This leads to high power consumption on X86 platforms that
    otherwise try to enable LPI.
    
    So probe whether or not LPI support is implemented before enabling LPI in
    the kernel.  This is done by overloading `acpi_processor_ffh_lpi_probe` to
    check whether it returns `-EOPNOTSUPP`. It also means that all future
    implementations of `acpi_processor_ffh_lpi_probe` will need to follow
    these semantics as well.
    
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60b6aae072494917807be8366a013a7bc3a18d7b
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Fri Feb 25 13:06:45 2022 -0600

    cpuidle: PSCI: Move the `has_lpi` check to the beginning of the function
    
    commit 01f6c7338ce267959975da65d86ba34f44d54220 upstream.
    
    Currently the first thing checked is whether the PCSI cpu_suspend function
    has been initialized.
    
    Another change will be overloading `acpi_processor_ffh_lpi_probe` and
    calling it sooner.  So make the `has_lpi` check the first thing checked
    to prepare for that change.
    
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 598a22a077a8edb95a4cf45ba64bcc5ab7c2e01f
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Apr 14 11:44:50 2022 +0300

    selftests: cgroup: Test open-time cgroup namespace usage for migration checks
    
    commit bf35a7879f1dfb0d050fe779168bcf25c7de66f5 upstream.
    
    When a task is writing to an fd opened by a different task, the perm check
    should use the cgroup namespace of the latter task. Add a test for it.
    
    Tested-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [OP: backport to v5.4: adjust context, add wait.h and fcntl.h includes]
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3f6c5949f66578b5f2d433b13409db5b94c695c
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Apr 14 11:44:49 2022 +0300

    selftests: cgroup: Test open-time credential usage for migration checks
    
    commit 613e040e4dc285367bff0f8f75ea59839bc10947 upstream.
    
    When a task is writing to an fd opened by a different task, the perm check
    should use the credentials of the latter task. Add a test for it.
    
    Tested-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [OP: backport to v5.4: adjust context]
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48848242d37842a6187782a7434d1918280c3019
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Apr 14 11:44:48 2022 +0300

    selftests: cgroup: Make cg_create() use 0755 for permission instead of 0644
    
    commit b09c2baa56347ae65795350dfcc633dedb1c2970 upstream.
    
    0644 is an odd perm to create a cgroup which is a directory. Use the regular
    0755 instead. This is necessary for euid switching test case.
    
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a887060af61b451c46938149c426defe16add77
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Apr 14 11:44:47 2022 +0300

    cgroup: Use open-time cgroup namespace for process migration perm checks
    
    commit e57457641613fef0d147ede8bd6a3047df588b95 upstream.
    
    cgroup process migration permission checks are performed at write time as
    whether a given operation is allowed or not is dependent on the content of
    the write - the PID. This currently uses current's cgroup namespace which is
    a potential security weakness as it may allow scenarios where a less
    privileged process tricks a more privileged one into writing into a fd that
    it created.
    
    This patch makes cgroup remember the cgroup namespace at the time of open
    and uses it for migration permission checks instad of current's. Note that
    this only applies to cgroup2 as cgroup1 doesn't have namespace support.
    
    This also fixes a use-after-free bug on cgroupns reported in
    
     https://lore.kernel.org/r/00000000000048c15c05d0083397@google.com
    
    Note that backporting this fix also requires the preceding patch.
    
    Reported-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Suggested-by: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Michal Koutný <mkoutny@suse.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Reported-by: syzbot+50f5cf33a284ce738b62@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/00000000000048c15c05d0083397@google.com
    Fixes: 5136f6365ce3 ("cgroup: implement "nsdelegate" mount option")
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [mkoutny: v5.10: duplicate ns check in procs/threads write handler, adjust context]
    Signed-off-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [OP: backport to v5.4: drop changes to cgroup_attach_permissions() and
    cgroup_css_set_fork(), adjust cgroup_procs_write_permission() calls]
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bd1ced6466e71dcb08b24b59b8dd87bb2369d07
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Apr 14 11:44:46 2022 +0300

    cgroup: Allocate cgroup_file_ctx for kernfs_open_file->priv
    
    commit 0d2b5955b36250a9428c832664f2079cbf723bec upstream.
    
    of->priv is currently used by each interface file implementation to store
    private information. This patch collects the current two private data usages
    into struct cgroup_file_ctx which is allocated and freed by the common path.
    This allows generic private data which applies to multiple files, which will
    be used to in the following patch.
    
    Note that cgroup_procs iterator is now embedded as procs.iter in the new
    cgroup_file_ctx so that it doesn't need to be allocated and freed
    separately.
    
    v2: union dropped from cgroup_file_ctx and the procs iterator is embedded in
        cgroup_file_ctx as suggested by Linus.
    
    v3: Michal pointed out that cgroup1's procs pidlist uses of->priv too.
        Converted. Didn't change to embedded allocation as cgroup1 pidlists get
        stored for caching.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    [mkoutny: v5.10: modify cgroup.pressure handlers, adjust context]
    Signed-off-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 691a0fd625e06c138f7662286a87ffba48773f34
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Apr 14 11:44:45 2022 +0300

    cgroup: Use open-time credentials for process migraton perm checks
    
    commit 1756d7994ad85c2479af6ae5a9750b92324685af upstream.
    
    cgroup process migration permission checks are performed at write time as
    whether a given operation is allowed or not is dependent on the content of
    the write - the PID. This currently uses current's credentials which is a
    potential security weakness as it may allow scenarios where a less
    privileged process tricks a more privileged one into writing into a fd that
    it created.
    
    This patch makes both cgroup2 and cgroup1 process migration interfaces to
    use the credentials saved at the time of open (file->f_cred) instead of
    current's.
    
    Reported-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Suggested-by: Linus Torvalds <torvalds@linuxfoundation.org>
    Fixes: 187fe84067bd ("cgroup: require write perm on common ancestor when moving processes on the default hierarchy")
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    [OP: backport to 5.4: apply original __cgroup_procs_write() changes to
    cgroup_threads_write() and cgroup_procs_write()]
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a623d361ffe5cecd4244a02f449528416360038
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Thu Apr 14 08:50:50 2022 +0100

    io_uring: fix fs->users overflow
    
    There is a bunch of cases where we can grab req->fs but not put it, this
    can be used to cause a controllable overflow with further implications.
    Release req->fs in the request free path and make sure we zero the field
    to be sure we don't do it twice.
    
    Fixes: cac68d12c531 ("io_uring: grab ->fs as part of async offload")
    Reported-by: Bing-Jhong Billy Jheng <billy@starlabs.sg>
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33fcb359a64213bea0510770abc761de9780ca89
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Mon Apr 11 09:43:08 2022 -0700

    drm/amdkfd: Fix -Wstrict-prototypes from amdgpu_amdkfd_gfx_10_0_get_functions()
    
    This patch is for linux-5.4.y only, it has no equivalent change
    upstream.
    
    When building x86_64 allmodconfig with tip of tree clang, there is an
    instance of -Wstrict-prototypes:
    
      drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v10.c:168:59: error: a function declaration without a prototype is deprecated in all versions of C [-Werror,-Wstrict-prototypes]
      struct kfd2kgd_calls *amdgpu_amdkfd_gfx_10_0_get_functions()
                                                                ^
                                                                 void
      1 error generated.
    
    amdgpu_amdkfd_gfx_10_0_get_functions() is prototyped properly in
    drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.h but its definition in
    amdgpu_amdkfd_gfx_v10.c does not have the argument types specified,
    which causes the warning. GCC does not warn because it permits an
    old-style definition if the prototype has the argument types.
    
    This code was eliminated by commit e392c887df97 ("drm/amdkfd: Use array
    to probe kfd2kgd_calls"), which was a part of a larger series that does
    not look very suitable for stable. Just fix this one location, as it was
    the only instance of this new warning across a variety of builds.
    
    Fixes: 6bdadb207224 ("drm/amdgpu: Add navi10 kfd support for amdgpu (v3)")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1549bc8cc165800842f281a48a28ae7087e1053e
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Mon Apr 11 09:43:07 2022 -0700

    drm/amdkfd: add missing void argument to function kgd2kfd_init
    
    From: Colin Ian King <colin.king@canonical.com>
    
    commit 63617d8b125ed9f674133dd000b6df58d6b2965a upstream.
    
    Function kgd2kfd_init is missing a void argument, add it
    to clean up the non-ANSI function declaration.
    
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdfb9ae26161606952f4cc3c4e0c0984d5c81cb6
Author: Waiman Long <longman@redhat.com>
Date:   Fri Apr 8 13:09:01 2022 -0700

    mm/sparsemem: fix 'mem_section' will never be NULL gcc 12 warning
    
    commit a431dbbc540532b7465eae4fc8b56a85a9fc7d17 upstream.
    
    The gcc 12 compiler reports a "'mem_section' will never be NULL" warning
    on the following code:
    
        static inline struct mem_section *__nr_to_section(unsigned long nr)
        {
        #ifdef CONFIG_SPARSEMEM_EXTREME
            if (!mem_section)
                    return NULL;
        #endif
            if (!mem_section[SECTION_NR_TO_ROOT(nr)])
                    return NULL;
           :
    
    It happens with CONFIG_SPARSEMEM_EXTREME off.  The mem_section definition
    is
    
        #ifdef CONFIG_SPARSEMEM_EXTREME
        extern struct mem_section **mem_section;
        #else
        extern struct mem_section mem_section[NR_SECTION_ROOTS][SECTIONS_PER_ROOT];
        #endif
    
    In the !CONFIG_SPARSEMEM_EXTREME case, mem_section is a static
    2-dimensional array and so the check "!mem_section[SECTION_NR_TO_ROOT(nr)]"
    doesn't make sense.
    
    Fix this warning by moving the "!mem_section[SECTION_NR_TO_ROOT(nr)]"
    check up inside the CONFIG_SPARSEMEM_EXTREME block and adding an
    explicit NR_SECTION_ROOTS check to make sure that there is no
    out-of-bound array access.
    
    Link: https://lkml.kernel.org/r/20220331180246.2746210-1-longman@redhat.com
    Fixes: 3e347261a80b ("sparsemem extreme implementation")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Reported-by: Justin Forbes <jforbes@redhat.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Rafael Aquini <aquini@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0c0867f06b9c8bae2b8164fe7b581c250a1c9c6
Author: Fangrui Song <maskray@google.com>
Date:   Fri Feb 18 00:12:09 2022 -0800

    arm64: module: remove (NOLOAD) from linker script
    
    commit 4013e26670c590944abdab56c4fa797527b74325 upstream.
    
    On ELF, (NOLOAD) sets the section type to SHT_NOBITS[1]. It is conceptually
    inappropriate for .plt and .text.* sections which are always
    SHT_PROGBITS.
    
    In GNU ld, if PLT entries are needed, .plt will be SHT_PROGBITS anyway
    and (NOLOAD) will be essentially ignored. In ld.lld, since
    https://reviews.llvm.org/D118840 ("[ELF] Support (TYPE=<value>) to
    customize the output section type"), ld.lld will report a `section type
    mismatch` error. Just remove (NOLOAD) to fix the error.
    
    [1] https://lld.llvm.org/ELF/linker_script.html As of today, "The
    section should be marked as not loadable" on
    https://sourceware.org/binutils/docs/ld/Output-Section-Type.html is
    outdated for ELF.
    
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Link: https://lore.kernel.org/r/20220218081209.354383-1-maskray@google.com
    Signed-off-by: Will Deacon <will@kernel.org>
    [nathan: Fix conflicts due to lack of 596b0474d3d9]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bd5b0d56d7b4ab904fa0f8d50f6a2d339ed40dc
Author: Peter Xu <peterx@redhat.com>
Date:   Tue Mar 22 14:42:15 2022 -0700

    mm: don't skip swap entry even if zap_details specified
    
    commit 5abfd71d936a8aefd9f9ccd299dea7a164a5d455 upstream.
    
    Patch series "mm: Rework zap ptes on swap entries", v5.
    
    Patch 1 should fix a long standing bug for zap_pte_range() on
    zap_details usage.  The risk is we could have some swap entries skipped
    while we should have zapped them.
    
    Migration entries are not the major concern because file backed memory
    always zap in the pattern that "first time without page lock, then
    re-zap with page lock" hence the 2nd zap will always make sure all
    migration entries are already recovered.
    
    However there can be issues with real swap entries got skipped
    errornoously.  There's a reproducer provided in commit message of patch
    1 for that.
    
    Patch 2-4 are cleanups that are based on patch 1.  After the whole
    patchset applied, we should have a very clean view of zap_pte_range().
    
    Only patch 1 needs to be backported to stable if necessary.
    
    This patch (of 4):
    
    The "details" pointer shouldn't be the token to decide whether we should
    skip swap entries.
    
    For example, when the callers specified details->zap_mapping==NULL, it
    means the user wants to zap all the pages (including COWed pages), then
    we need to look into swap entries because there can be private COWed
    pages that was swapped out.
    
    Skipping some swap entries when details is non-NULL may lead to wrongly
    leaving some of the swap entries while we should have zapped them.
    
    A reproducer of the problem:
    
    ===8<===
            #define _GNU_SOURCE         /* See feature_test_macros(7) */
            #include <stdio.h>
            #include <assert.h>
            #include <unistd.h>
            #include <sys/mman.h>
            #include <sys/types.h>
    
            int page_size;
            int shmem_fd;
            char *buffer;
    
            void main(void)
            {
                    int ret;
                    char val;
    
                    page_size = getpagesize();
                    shmem_fd = memfd_create("test", 0);
                    assert(shmem_fd >= 0);
    
                    ret = ftruncate(shmem_fd, page_size * 2);
                    assert(ret == 0);
    
                    buffer = mmap(NULL, page_size * 2, PROT_READ | PROT_WRITE,
                                    MAP_PRIVATE, shmem_fd, 0);
                    assert(buffer != MAP_FAILED);
    
                    /* Write private page, swap it out */
                    buffer[page_size] = 1;
                    madvise(buffer, page_size * 2, MADV_PAGEOUT);
    
                    /* This should drop private buffer[page_size] already */
                    ret = ftruncate(shmem_fd, page_size);
                    assert(ret == 0);
                    /* Recover the size */
                    ret = ftruncate(shmem_fd, page_size * 2);
                    assert(ret == 0);
    
                    /* Re-read the data, it should be all zero */
                    val = buffer[page_size];
                    if (val == 0)
                            printf("Good\n");
                    else
                            printf("BUG\n");
            }
    ===8<===
    
    We don't need to touch up the pmd path, because pmd never had a issue with
    swap entries.  For example, shmem pmd migration will always be split into
    pte level, and same to swapping on anonymous.
    
    Add another helper should_zap_cows() so that we can also check whether we
    should zap private mappings when there's no page pointer specified.
    
    This patch drops that trick, so we handle swap ptes coherently.  Meanwhile
    we should do the same check upon migration entry, hwpoison entry and
    genuine swap entries too.
    
    To be explicit, we should still remember to keep the private entries if
    even_cows==false, and always zap them when even_cows==true.
    
    The issue seems to exist starting from the initial commit of git.
    
    [peterx@redhat.com: comment tweaks]
      Link: https://lkml.kernel.org/r/20220217060746.71256-2-peterx@redhat.com
    
    Link: https://lkml.kernel.org/r/20220217060746.71256-1-peterx@redhat.com
    Link: https://lkml.kernel.org/r/20220216094810.60572-1-peterx@redhat.com
    Link: https://lkml.kernel.org/r/20220216094810.60572-2-peterx@redhat.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Peter Xu <peterx@redhat.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: "Kirill A . Shutemov" <kirill@shutemov.name>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfa87d9a5db308acb07e6055b34946ba5bb394ae
Author: Yann Gautier <yann.gautier@foss.st.com>
Date:   Thu Mar 17 12:19:43 2022 +0100

    mmc: mmci: stm32: correctly check all elements of sg list
    
    commit 0d319dd5a27183b75d984e3dc495248e59f99334 upstream.
    
    Use sg and not data->sg when checking sg list elements. Else only the
    first element alignment is checked.
    The last element should be checked the same way, for_each_sg already set
    sg to sg_next(sg).
    
    Fixes: 46b723dd867d ("mmc: mmci: add stm32 sdmmc variant")
    Cc: stable@vger.kernel.org
    Signed-off-by: Yann Gautier <yann.gautier@foss.st.com>
    Link: https://lore.kernel.org/r/20220317111944.116148-2-yann.gautier@foss.st.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c645de49e9714bf843d95ed3a2babcea35e58201
Author: Ludovic Barre <ludovic.barre@st.com>
Date:   Tue Jan 28 10:06:28 2020 +0100

    mmc: mmci_sdmmc: Replace sg_dma_xxx macros
    
    commit 127e6e98ca9b8ac4f87698ebce1508e3449bb791 upstream.
    
    sg_dma_xxx should be used after a dma_map_sg call has been done to get bus
    addresses of each of the SG entries and their lengths.  But mmci_host_ops
    validate_data can be called before dma_map_sg.  This patch replaces theses
    macros by sg->offset and sg->length which are always defined.
    
    Signed-off-by: Ludovic Barre <ludovic.barre@st.com>
    Link: https://lore.kernel.org/r/20200128090636.13689-2-ludovic.barre@st.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d99cce85e34a91b384a1b1d1f3a77d2bb656842
Author: Vinod Koul <vkoul@kernel.org>
Date:   Thu Mar 10 10:13:20 2022 +0530

    dmaengine: Revert "dmaengine: shdma: Fix runtime PM imbalance on error"
    
    commit d143f939a95696d38ff800ada14402fa50ebbd6c upstream.
    
    This reverts commit 455896c53d5b ("dmaengine: shdma: Fix runtime PM
    imbalance on error") as the patch wrongly reduced the count on error and
    did not bail out. So drop the count by reverting the patch .
    
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e6980c68cbf194e690aa3dae8029bde8507db9e
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Apr 4 17:28:48 2022 -0300

    tools build: Use $(shell ) instead of `` to get embedded libperl's ccopts
    
    commit 541f695cbcb6932c22638b06e0cbe1d56177e2e9 upstream.
    
    Just like its done for ldopts and for both in tools/perf/Makefile.config.
    
    Using `` to initialize PERL_EMBED_CCOPTS somehow precludes using:
    
      $(filter-out SOMETHING_TO_FILTER,$(PERL_EMBED_CCOPTS))
    
    And we need to do it to allow for building with versions of clang where
    some gcc options selected by distros are not available.
    
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com> # Debian/Selfmade LLVM-14 (x86-64)
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Fangrui Song <maskray@google.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: John Keeping <john@metanate.com>
    Cc: Leo Yan <leo.yan@linaro.org>
    Cc: Michael Petlan <mpetlan@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Link: http://lore.kernel.org/lkml/YktYX2OnLtyobRYD@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0752ee5efdcd0890da73635c2c0bdb0d9161746
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Tue Apr 5 10:33:21 2022 -0300

    tools build: Filter out options and warnings not supported by clang
    
    commit 41caff459a5b956b3e23ba9ca759dd0629ad3dda upstream.
    
    These make the feature check fail when using clang, so remove them just
    like is done in tools/perf/Makefile.config to build perf itself.
    
    Adding -Wno-compound-token-split-by-macro to tools/perf/Makefile.config
    when building with clang is also necessary to avoid these warnings
    turned into errors (-Werror):
    
        CC      /tmp/build/perf/util/scripting-engines/trace-event-perl.o
      In file included from util/scripting-engines/trace-event-perl.c:35:
      In file included from /usr/lib64/perl5/CORE/perl.h:4085:
      In file included from /usr/lib64/perl5/CORE/hv.h:659:
      In file included from /usr/lib64/perl5/CORE/hv_func.h:34:
      In file included from /usr/lib64/perl5/CORE/sbox32_hash.h:4:
      /usr/lib64/perl5/CORE/zaphod32_hash.h:150:5: error: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Werror,-Wcompound-token-split-by-macro]
          ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /usr/lib64/perl5/CORE/zaphod32_hash.h:80:38: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
      #define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                           ^~~~~~~~~~
      /usr/lib64/perl5/CORE/perl.h:737:29: note: expanded from macro 'STMT_START'
      #   define STMT_START   (void)( /* gcc supports "({ STATEMENTS; })" */
                                    ^
      /usr/lib64/perl5/CORE/zaphod32_hash.h:150:5: note: '{' token is here
          ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /usr/lib64/perl5/CORE/zaphod32_hash.h:80:49: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
      #define ZAPHOD32_SCRAMBLE32(v,prime) STMT_START {  \
                                                      ^
      /usr/lib64/perl5/CORE/zaphod32_hash.h:150:5: error: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Werror,-Wcompound-token-split-by-macro]
          ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /usr/lib64/perl5/CORE/zaphod32_hash.h:87:41: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
          v ^= (v>>23);                       \
                                              ^
      /usr/lib64/perl5/CORE/zaphod32_hash.h:150:5: note: ')' token is here
          ZAPHOD32_SCRAMBLE32(state[0],0x9fade23b);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /usr/lib64/perl5/CORE/zaphod32_hash.h:88:3: note: expanded from macro 'ZAPHOD32_SCRAMBLE32'
      } STMT_END
        ^~~~~~~~
      /usr/lib64/perl5/CORE/perl.h:738:21: note: expanded from macro 'STMT_END'
      #   define STMT_END     )
                              ^
    
    Please refer to the discussion on the Link: tag below, where Nathan
    clarifies the situation:
    
    <quote>
    acme> And then get to the problems at the end of this message, which seem
    acme> similar to the problem described here:
    acme>
    acme> From  Nathan Chancellor <>
    acme> Subject   [PATCH] mwifiex: Remove unnecessary braces from HostCmd_SET_SEQ_NO_BSS_INFO
    acme>
    acme> https://lkml.org/lkml/2020/9/1/135
    acme>
    acme> So perhaps in this case its better to disable that
    acme> -Werror,-Wcompound-token-split-by-macro when building with clang?
    
    Yes, I think that is probably the best solution. As far as I can tell,
    at least in this file and context, the warning appears harmless, as the
    "create a GNU C statement expression from two different macros" is very
    much intentional, based on the presence of PERL_USE_GCC_BRACE_GROUPS.
    The warning is fixed in upstream Perl by just avoiding creating GNU C
    statement expressions using STMT_START and STMT_END:
    
      https://github.com/Perl/perl5/issues/18780
      https://github.com/Perl/perl5/pull/18984
    
    If I am reading the source code correctly, an alternative to disabling
    the warning would be specifying -DPERL_GCC_BRACE_GROUPS_FORBIDDEN but it
    seems like that might end up impacting more than just this site,
    according to the issue discussion above.
    </quote>
    
    Based-on-a-patch-by: Sedat Dilek <sedat.dilek@gmail.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com> # Debian/Selfmade LLVM-14 (x86-64)
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Fangrui Song <maskray@google.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: John Keeping <john@metanate.com>
    Cc: Leo Yan <leo.yan@linaro.org>
    Cc: Michael Petlan <mpetlan@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Link: http://lore.kernel.org/lkml/YkxWcYzph5pC1EK8@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c07cc242baf83f0bddbbd9d7945d0bee56d8b57
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Mar 15 16:50:32 2022 +0000

    irqchip/gic-v3: Fix GICR_CTLR.RWP polling
    
    commit 0df6664531a12cdd8fc873f0cac0dcb40243d3e9 upstream.
    
    It turns out that our polling of RWP is totally wrong when checking
    for it in the redistributors, as we test the *distributor* bit index,
    whereas it is a different bit number in the RDs... Oopsie boo.
    
    This is embarassing. Not only because it is wrong, but also because
    it took *8 years* to notice the blunder...
    
    Just fix the damn thing.
    
    Fixes: 021f653791ad ("irqchip: gic-v3: Initial support for GICv3")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: stable@vger.kernel.org
    Reviewed-by: Andre Przywara <andre.przywara@arm.com>
    Reviewed-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Link: https://lore.kernel.org/r/20220315165034.794482-2-maz@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e44d6af17b15e883ee48a3c436fdf31be0f92ec3
Author: Xiaomeng Tong <xiam0nd.tong@gmail.com>
Date:   Sun Mar 27 13:57:33 2022 +0800

    perf: qcom_l2_pmu: fix an incorrect NULL check on list iterator
    
    commit 2012a9e279013933885983cbe0a5fe828052563b upstream.
    
    The bug is here:
            return cluster;
    
    The list iterator value 'cluster' will *always* be set and non-NULL
    by list_for_each_entry(), so it is incorrect to assume that the
    iterator value will be NULL if the list is empty or no element
    is found.
    
    To fix the bug, return 'cluster' when found, otherwise return NULL.
    
    Cc: stable@vger.kernel.org
    Fixes: 21bdbb7102ed ("perf: add qcom l2 cache perf events driver")
    Signed-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Link: https://lore.kernel.org/r/20220327055733.4070-1-xiam0nd.tong@gmail.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55e1465ba79562a191708a40eeae3f8082a209e3
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Sat Mar 19 21:11:02 2022 +0100

    ata: sata_dwc_460ex: Fix crash due to OOB write
    
    commit 7aa8104a554713b685db729e66511b93d989dd6a upstream.
    
    the driver uses libata's "tag" values from in various arrays.
    Since the mentioned patch bumped the ATA_TAG_INTERNAL to 32,
    the value of the SATA_DWC_QCMD_MAX needs to account for that.
    
    Otherwise ATA_TAG_INTERNAL usage cause similar crashes like
    this as reported by Tice Rex on the OpenWrt Forum and
    reproduced (with symbols) here:
    
    | BUG: Kernel NULL pointer dereference at 0x00000000
    | Faulting instruction address: 0xc03ed4b8
    | Oops: Kernel access of bad area, sig: 11 [#1]
    | BE PAGE_SIZE=4K PowerPC 44x Platform
    | CPU: 0 PID: 362 Comm: scsi_eh_1 Not tainted 5.4.163 #0
    | NIP:  c03ed4b8 LR: c03d27e8 CTR: c03ed36c
    | REGS: cfa59950 TRAP: 0300   Not tainted  (5.4.163)
    | MSR:  00021000 <CE,ME>  CR: 42000222  XER: 00000000
    | DEAR: 00000000 ESR: 00000000
    | GPR00: c03d27e8 cfa59a08 cfa55fe0 00000000 0fa46bc0 [...]
    | [..]
    | NIP [c03ed4b8] sata_dwc_qc_issue+0x14c/0x254
    | LR [c03d27e8] ata_qc_issue+0x1c8/0x2dc
    | Call Trace:
    | [cfa59a08] [c003f4e0] __cancel_work_timer+0x124/0x194 (unreliable)
    | [cfa59a78] [c03d27e8] ata_qc_issue+0x1c8/0x2dc
    | [cfa59a98] [c03d2b3c] ata_exec_internal_sg+0x240/0x524
    | [cfa59b08] [c03d2e98] ata_exec_internal+0x78/0xe0
    | [cfa59b58] [c03d30fc] ata_read_log_page.part.38+0x1dc/0x204
    | [cfa59bc8] [c03d324c] ata_identify_page_supported+0x68/0x130
    | [...]
    
    This is because sata_dwc_dma_xfer_complete() NULLs the
    dma_pending's next neighbour "chan" (a *dma_chan struct) in
    this '32' case right here (line ~735):
    > hsdevp->dma_pending[tag] = SATA_DWC_DMA_PENDING_NONE;
    
    Then the next time, a dma gets issued; dma_dwc_xfer_setup() passes
    the NULL'd hsdevp->chan to the dmaengine_slave_config() which then
    causes the crash.
    
    With this patch, SATA_DWC_QCMD_MAX is now set to ATA_MAX_QUEUE + 1.
    This avoids the OOB. But please note, there was a worthwhile discussion
    on what ATA_TAG_INTERNAL and ATA_MAX_QUEUE is. And why there should not
    be a "fake" 33 command-long queue size.
    
    Ideally, the dw driver should account for the ATA_TAG_INTERNAL.
    In Damien Le Moal's words: "... having looked at the driver, it
    is a bigger change than just faking a 33rd "tag" that is in fact
    not a command tag at all."
    
    Fixes: 28361c403683c ("libata: add extra internal command")
    Cc: stable@kernel.org # 4.18+
    BugLink: https://github.com/openwrt/openwrt/issues/9505
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0c4b3fc01aed49a2bffc4be5f4b1918587fa0c9
Author: Guo Ren <guoren@kernel.org>
Date:   Thu Apr 7 15:33:20 2022 +0800

    arm64: patch_text: Fixup last cpu should be master
    
    commit 31a099dbd91e69fcab55eef4be15ed7a8c984918 upstream.
    
    These patch_text implementations are using stop_machine_cpuslocked
    infrastructure with atomic cpu_count. The original idea: When the
    master CPU patch_text, the others should wait for it. But current
    implementation is using the first CPU as master, which couldn't
    guarantee the remaining CPUs are waiting. This patch changes the
    last CPU as the master to solve the potential risk.
    
    Fixes: ae16480785de ("arm64: introduce interfaces to hotpatch kernel and module code")
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Signed-off-by: Guo Ren <guoren@kernel.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220407073323.743224-2-guoren@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44277c50fdba5019ca25bfad1b71e2561b0de11b
Author: Ethan Lien <ethanlien@synology.com>
Date:   Mon Mar 7 18:00:04 2022 +0800

    btrfs: fix qgroup reserve overflow the qgroup limit
    
    commit b642b52d0b50f4d398cb4293f64992d0eed2e2ce upstream.
    
    We use extent_changeset->bytes_changed in qgroup_reserve_data() to record
    how many bytes we set for EXTENT_QGROUP_RESERVED state. Currently the
    bytes_changed is set as "unsigned int", and it will overflow if we try to
    fallocate a range larger than 4GiB. The result is we reserve less bytes
    and eventually break the qgroup limit.
    
    Unlike regular buffered/direct write, which we use one changeset for
    each ordered extent, which can never be larger than 256M.  For
    fallocate, we use one changeset for the whole range, thus it no longer
    respects the 256M per extent limit, and caused the problem.
    
    The following example test script reproduces the problem:
    
      $ cat qgroup-overflow.sh
      #!/bin/bash
    
      DEV=/dev/sdj
      MNT=/mnt/sdj
    
      mkfs.btrfs -f $DEV
      mount $DEV $MNT
    
      # Set qgroup limit to 2GiB.
      btrfs quota enable $MNT
      btrfs qgroup limit 2G $MNT
    
      # Try to fallocate a 3GiB file. This should fail.
      echo
      echo "Try to fallocate a 3GiB file..."
      fallocate -l 3G $MNT/3G.file
    
      # Try to fallocate a 5GiB file.
      echo
      echo "Try to fallocate a 5GiB file..."
      fallocate -l 5G $MNT/5G.file
    
      # See we break the qgroup limit.
      echo
      sync
      btrfs qgroup show -r $MNT
    
      umount $MNT
    
    When running the test:
    
      $ ./qgroup-overflow.sh
      (...)
    
      Try to fallocate a 3GiB file...
      fallocate: fallocate failed: Disk quota exceeded
    
      Try to fallocate a 5GiB file...
    
      qgroupid         rfer         excl     max_rfer
      --------         ----         ----     --------
      0/5           5.00GiB      5.00GiB      2.00GiB
    
    Since we have no control of how bytes_changed is used, it's better to
    set it to u64.
    
    CC: stable@vger.kernel.org # 4.14+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Ethan Lien <ethanlien@synology.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17f3e31c860371ff72db7f9b2fb44ab008a133e0
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Mon Apr 4 17:35:45 2022 -0700

    x86/speculation: Restore speculation related MSRs during S3 resume
    
    commit e2a1256b17b16f9b9adf1b6fea56819e7b68e463 upstream.
    
    After resuming from suspend-to-RAM, the MSRs that control CPU's
    speculative execution behavior are not being restored on the boot CPU.
    
    These MSRs are used to mitigate speculative execution vulnerabilities.
    Not restoring them correctly may leave the CPU vulnerable.  Secondary
    CPU's MSRs are correctly being restored at S3 resume by
    identify_secondary_cpu().
    
    During S3 resume, restore these MSRs for boot CPU when restoring its
    processor state.
    
    Fixes: 772439717dbf ("x86/bugs/intel: Set proper CPU features and setup RDS")
    Reported-by: Neelima Krishnan <neelima.krishnan@intel.com>
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Tested-by: Neelima Krishnan <neelima.krishnan@intel.com>
    Acked-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b8043e0fceabbb1925a90f02cdd5ed43ac66687
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Mon Apr 4 17:34:19 2022 -0700

    x86/pm: Save the MSR validity status at context setup
    
    commit 73924ec4d560257004d5b5116b22a3647661e364 upstream.
    
    The mechanism to save/restore MSRs during S3 suspend/resume checks for
    the MSR validity during suspend, and only restores the MSR if its a
    valid MSR.  This is not optimal, as an invalid MSR will unnecessarily
    throw an exception for every suspend cycle.  The more invalid MSRs,
    higher the impact will be.
    
    Check and save the MSR validity at setup.  This ensures that only valid
    MSRs that are guaranteed to not throw an exception will be attempted
    during suspend.
    
    Fixes: 7a9c2dd08ead ("x86/pm: Introduce quirk framework to save/restore extra MSR registers around suspend/resume")
    Suggested-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
    Acked-by: Borislav Petkov <bp@suse.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25f506273b6ae806fd46bfcb6fdaa5b9ec81a05b
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Fri Apr 8 13:09:07 2022 -0700

    mm/mempolicy: fix mpol_new leak in shared_policy_replace
    
    commit 4ad099559b00ac01c3726e5c95dc3108ef47d03e upstream.
    
    If mpol_new is allocated but not used in restart loop, mpol_new will be
    freed via mpol_put before returning to the caller.  But refcnt is not
    initialized yet, so mpol_put could not do the right things and might
    leak the unused mpol_new.  This would happen if mempolicy was updated on
    the shared shmem file while the sp->lock has been dropped during the
    memory allocation.
    
    This issue could be triggered easily with the below code snippet if
    there are many processes doing the below work at the same time:
    
      shmid = shmget((key_t)5566, 1024 * PAGE_SIZE, 0666|IPC_CREAT);
      shm = shmat(shmid, 0, 0);
      loop many times {
        mbind(shm, 1024 * PAGE_SIZE, MPOL_LOCAL, mask, maxnode, 0);
        mbind(shm + 128 * PAGE_SIZE, 128 * PAGE_SIZE, MPOL_DEFAULT, mask,
              maxnode, 0);
      }
    
    Link: https://lkml.kernel.org/r/20220329111416.27954-1-linmiaohe@huawei.com
    Fixes: 42288fe366c4 ("mm: mempolicy: Convert shared_policy mutex to spinlock")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: <stable@vger.kernel.org>    [3.8]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c19d8de4e682ec4b0ea2b04a832cd8cc0be3bb31
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Apr 8 13:09:04 2022 -0700

    mmmremap.c: avoid pointless invalidate_range_start/end on mremap(old_size=0)
    
    commit 01e67e04c28170c47700c2c226d732bbfedb1ad0 upstream.
    
    If an mremap() syscall with old_size=0 ends up in move_page_tables(), it
    will call invalidate_range_start()/invalidate_range_end() unnecessarily,
    i.e.  with an empty range.
    
    This causes a WARN in KVM's mmu_notifier.  In the past, empty ranges
    have been diagnosed to be off-by-one bugs, hence the WARNing.  Given the
    low (so far) number of unique reports, the benefits of detecting more
    buggy callers seem to outweigh the cost of having to fix cases such as
    this one, where userspace is doing something silly.  In this particular
    case, an early return from move_page_tables() is enough to fix the
    issue.
    
    Link: https://lkml.kernel.org/r/20220329173155.172439-1-pbonzini@redhat.com
    Reported-by: syzbot+6bde52d89cfdf9f61425@syzkaller.appspotmail.com
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Sean Christopherson <seanjc@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73953dfa9d50e5c9fe98ee13fd1d3427aa12a0a3
Author: Guo Xuenan <guoxuenan@huawei.com>
Date:   Fri Apr 8 13:08:58 2022 -0700

    lz4: fix LZ4_decompress_safe_partial read out of bound
    
    commit eafc0a02391b7b36617b36c97c4b5d6832cf5e24 upstream.
    
    When partialDecoding, it is EOF if we've either filled the output buffer
    or can't proceed with reading an offset for following match.
    
    In some extreme corner cases when compressed data is suitably corrupted,
    UAF will occur.  As reported by KASAN [1], LZ4_decompress_safe_partial
    may lead to read out of bound problem during decoding.  lz4 upstream has
    fixed it [2] and this issue has been disscussed here [3] before.
    
    current decompression routine was ported from lz4 v1.8.3, bumping
    lib/lz4 to v1.9.+ is certainly a huge work to be done later, so, we'd
    better fix it first.
    
    [1] https://lore.kernel.org/all/000000000000830d1205cf7f0477@google.com/
    [2] https://github.com/lz4/lz4/commit/c5d6f8a8be3927c0bec91bcc58667a6cfad244ad#
    [3] https://lore.kernel.org/all/CC666AE8-4CA4-4951-B6FB-A2EFDE3AC03B@fb.com/
    
    Link: https://lkml.kernel.org/r/20211111105048.2006070-1-guoxuenan@huawei.com
    Reported-by: syzbot+63d688f1d899c588fb71@syzkaller.appspotmail.com
    Signed-off-by: Guo Xuenan <guoxuenan@huawei.com>
    Reviewed-by: Nick Terrell <terrelln@fb.com>
    Acked-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Cc: Yann Collet <cyan@fb.com>
    Cc: Chengyang Fan <cy.fan@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b3514388895a939a3aa200e0467de40cfb45781
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon Apr 4 13:49:02 2022 +0200

    mmc: renesas_sdhi: don't overwrite TAP settings when HS400 tuning is complete
    
    commit 03e59b1e2f56245163b14c69e0a830c24b1a3a47 upstream.
    
    When HS400 tuning is complete and HS400 is going to be activated, we
    have to keep the current number of TAPs and should not overwrite them
    with a hardcoded value. This was probably a copy&paste mistake when
    upporting HS400 support from the BSP.
    
    Fixes: 26eb2607fa28 ("mmc: renesas_sdhi: add eMMC HS400 mode support")
    Reported-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220404114902.12175-1-wsa+renesas@sang-engineering.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0869cb9f62350ac7a392fd28062a0095652c3b6e
Author: Pali Rohár <pali@kernel.org>
Date:   Fri Mar 18 15:14:41 2022 +0100

    Revert "mmc: sdhci-xenon: fix annoying 1.8V regulator warning"
    
    commit 7e2646ed47542123168d43916b84b954532e5386 upstream.
    
    This reverts commit bb32e1987bc55ce1db400faf47d85891da3c9b9f.
    
    Commit 1a3ed0dc3594 ("mmc: sdhci-xenon: fix 1.8v regulator stabilization")
    contains proper fix for the issue described in commit bb32e1987bc5 ("mmc:
    sdhci-xenon: fix annoying 1.8V regulator warning").
    
    Fixes: 8d876bf472db ("mmc: sdhci-xenon: wait 5ms after set 1.8V signal enable")
    Cc: stable@vger.kernel.org # 1a3ed0dc3594 ("mmc: sdhci-xenon: fix 1.8v regulator stabilization")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Reviewed-by: Marcin Wojtas <mw@semihalf.com>
    Link: https://lore.kernel.org/r/20220318141441.32329-1-pali@kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c79c1846bdd7d699d1b566b58a927e21148a82c7
Author: Denis Nikitin <denik@chromium.org>
Date:   Tue Mar 29 20:11:30 2022 -0700

    perf session: Remap buf if there is no space for event
    
    [ Upstream commit bc21e74d4775f883ae1f542c1f1dc7205b15d925 ]
    
    If a perf event doesn't fit into remaining buffer space return NULL to
    remap buf and fetch the event again.
    
    Keep the logic to error out on inadequate input from fuzzing.
    
    This fixes perf failing on ChromeOS (with 32b userspace):
    
      $ perf report -v -i perf.data
      ...
      prefetch_event: head=0x1fffff8 event->header_size=0x30, mmap_size=0x2000000: fuzzed or compressed perf.data?
      Error:
      failed to process sample
    
    Fixes: 57fc032ad643ffd0 ("perf session: Avoid infinite loop when seeing invalid header.size")
    Reviewed-by: James Clark <james.clark@arm.com>
    Signed-off-by: Denis Nikitin <denik@chromium.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20220330031130.2152327-1-denik@chromium.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b6894db7c462cb2a0e3e18237025afc7faa32ea
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Fri Apr 8 16:26:25 2022 +0300

    perf tools: Fix perf's libperf_print callback
    
    [ Upstream commit aeee9dc53ce405d2161f9915f553114e94e5b677 ]
    
    eprintf() does not expect va_list as the type of the 4th parameter.
    
    Use veprintf() because it does.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: 428dab813a56ce94 ("libperf: Merge libperf_set_print() into libperf_init()")
    Cc: Jiri Olsa <jolsa@kernel.org>
    Link: https://lore.kernel.org/r/20220408132625.2451452-1-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ecef6f28aa1ed76b70f27252d3d5febe1e63c8b
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Apr 7 09:50:19 2022 -0400

    SUNRPC: Handle low memory situations in call_status()
    
    [ Upstream commit 9d82819d5b065348ce623f196bf601028e22ed00 ]
    
    We need to handle ENFILE, ENOBUFS, and ENOMEM, because
    xprt_wake_pending_tasks() can be called with any one of these due to
    socket creation failures.
    
    Fixes: b61d59fffd3e ("SUNRPC: xs_tcp_connect_worker{4,6}: merge common code")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a0da98a36b4bf04774a1b97e1ce538629b44920
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Apr 6 23:18:57 2022 -0400

    SUNRPC: Handle ENOMEM in call_transmit_status()
    
    [ Upstream commit d3c15033b240767d0287f1c4a529cbbe2d5ded8a ]
    
    Both call_transmit() and call_bc_transmit() can now return ENOMEM, so
    let's make sure that we handle the errors gracefully.
    
    Fixes: 0472e4766049 ("SUNRPC: Convert socket page send code to use iov_iter()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6a4055036eed1f5e239ce3d8b0db1ce38bba447
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Wed Apr 6 21:04:43 2022 +0200

    drbd: Fix five use after free bugs in get_initial_state
    
    [ Upstream commit aadb22ba2f656581b2f733deb3a467c48cc618f6 ]
    
    In get_initial_state, it calls notify_initial_state_done(skb,..) if
    cb->args[5]==1. If genlmsg_put() failed in notify_initial_state_done(),
    the skb will be freed by nlmsg_free(skb).
    Then get_initial_state will goto out and the freed skb will be used by
    return value skb->len, which is a uaf bug.
    
    What's worse, the same problem goes even further: skb can also be
    freed in the notify_*_state_change -> notify_*_state calls below.
    Thus 4 additional uaf bugs happened.
    
    My patch lets the problem callee functions: notify_initial_state_done
    and notify_*_state_change return an error code if errors happen.
    So that the error codes could be propagated and the uaf bugs can be avoid.
    
    v2 reports a compilation warning. This v3 fixed this warning and built
    successfully in my local environment with no additional warnings.
    v2: https://lore.kernel.org/patchwork/patch/1435218/
    
    Fixes: a29728463b254 ("drbd: Backport the "events2" command")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Reviewed-by: Christoph Böhmwalder <christoph.boehmwalder@linbit.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a581b089216d871fbc8c49e6ff3dac6da6539868
Author: Maxim Mikityanskiy <maximmi@nvidia.com>
Date:   Wed Apr 6 15:41:12 2022 +0300

    bpf: Support dual-stack sockets in bpf_tcp_check_syncookie
    
    [ Upstream commit 2e8702cc0cfa1080f29fd64003c00a3e24ac38de ]
    
    bpf_tcp_gen_syncookie looks at the IP version in the IP header and
    validates the address family of the socket. It supports IPv4 packets in
    AF_INET6 dual-stack sockets.
    
    On the other hand, bpf_tcp_check_syncookie looks only at the address
    family of the socket, ignoring the real IP version in headers, and
    validates only the packet size. This implementation has some drawbacks:
    
    1. Packets are not validated properly, allowing a BPF program to trick
       bpf_tcp_check_syncookie into handling an IPv6 packet on an IPv4
       socket.
    
    2. Dual-stack sockets fail the checks on IPv4 packets. IPv4 clients end
       up receiving a SYNACK with the cookie, but the following ACK gets
       dropped.
    
    This patch fixes these issues by changing the checks in
    bpf_tcp_check_syncookie to match the ones in bpf_tcp_gen_syncookie. IP
    version from the header is taken into account, and it is validated
    properly with address family.
    
    Fixes: 399040847084 ("bpf: add helper to check for a valid SYN cookie")
    Signed-off-by: Maxim Mikityanskiy <maximmi@nvidia.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Acked-by: Arthur Fabre <afabre@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20220406124113.2795730-1-maximmi@nvidia.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb175e06069913d5530e95500c5da27548f68527
Author: Kamal Dasu <kdasu.kdev@gmail.com>
Date:   Mon Mar 28 10:24:42 2022 -0400

    spi: bcm-qspi: fix MSPI only access with bcm_qspi_exec_mem_op()
    
    [ Upstream commit 2c7d1b281286c46049cd22b43435cecba560edde ]
    
    This fixes case where MSPI controller is used to access spi-nor
    flash and BSPI block is not present.
    
    Fixes: 5f195ee7d830 ("spi: bcm-qspi: Implement the spi_mem interface")
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220328142442.7553-1-kdasu.kdev@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 034a92c6a81048128fc7b18d278d52438a13902a
Author: Jamie Bainbridge <jamie.bainbridge@gmail.com>
Date:   Wed Apr 6 21:19:19 2022 +1000

    qede: confirm skb is allocated before using
    
    [ Upstream commit 4e910dbe36508654a896d5735b318c0b88172570 ]
    
    qede_build_skb() assumes build_skb() always works and goes straight
    to skb_reserve(). However, build_skb() can fail under memory pressure.
    This results in a kernel panic because the skb to reserve is NULL.
    
    Add a check in case build_skb() failed to allocate and return NULL.
    
    The NULL return is handled correctly in callers to qede_build_skb().
    
    Fixes: 8a8633978b842 ("qede: Add build_skb() support.")
    Signed-off-by: Jamie Bainbridge <jamie.bainbridge@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ee84d29f22de6f6c63fad6c54690517659862f1
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Apr 4 11:34:39 2022 -0700

    rxrpc: fix a race in rxrpc_exit_net()
    
    [ Upstream commit 1946014ca3b19be9e485e780e862c375c6f98bad ]
    
    Current code can lead to the following race:
    
    CPU0                                                 CPU1
    
    rxrpc_exit_net()
                                                         rxrpc_peer_keepalive_worker()
                                                           if (rxnet->live)
    
      rxnet->live = false;
      del_timer_sync(&rxnet->peer_keepalive_timer);
    
                                                                 timer_reduce(&rxnet->peer_keepalive_timer, jiffies + delay);
    
      cancel_work_sync(&rxnet->peer_keepalive_work);
    
    rxrpc_exit_net() exits while peer_keepalive_timer is still armed,
    leading to use-after-free.
    
    syzbot report was:
    
    ODEBUG: free active (active state 0) object type: timer_list hint: rxrpc_peer_keepalive_timeout+0x0/0xb0
    WARNING: CPU: 0 PID: 3660 at lib/debugobjects.c:505 debug_print_object+0x16e/0x250 lib/debugobjects.c:505
    Modules linked in:
    CPU: 0 PID: 3660 Comm: kworker/u4:6 Not tainted 5.17.0-syzkaller-13993-g88e6c0207623 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Workqueue: netns cleanup_net
    RIP: 0010:debug_print_object+0x16e/0x250 lib/debugobjects.c:505
    Code: ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 af 00 00 00 48 8b 14 dd 00 1c 26 8a 4c 89 ee 48 c7 c7 00 10 26 8a e8 b1 e7 28 05 <0f> 0b 83 05 15 eb c5 09 01 48 83 c4 18 5b 5d 41 5c 41 5d 41 5e c3
    RSP: 0018:ffffc9000353fb00 EFLAGS: 00010082
    RAX: 0000000000000000 RBX: 0000000000000003 RCX: 0000000000000000
    RDX: ffff888029196140 RSI: ffffffff815efad8 RDI: fffff520006a7f52
    RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff815ea4ae R11: 0000000000000000 R12: ffffffff89ce23e0
    R13: ffffffff8a2614e0 R14: ffffffff816628c0 R15: dffffc0000000000
    FS:  0000000000000000(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fe1f2908924 CR3: 0000000043720000 CR4: 00000000003506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     __debug_check_no_obj_freed lib/debugobjects.c:992 [inline]
     debug_check_no_obj_freed+0x301/0x420 lib/debugobjects.c:1023
     kfree+0xd6/0x310 mm/slab.c:3809
     ops_free_list.part.0+0x119/0x370 net/core/net_namespace.c:176
     ops_free_list net/core/net_namespace.c:174 [inline]
     cleanup_net+0x591/0xb00 net/core/net_namespace.c:598
     process_one_work+0x996/0x1610 kernel/workqueue.c:2289
     worker_thread+0x665/0x1080 kernel/workqueue.c:2436
     kthread+0x2e9/0x3a0 kernel/kthread.c:376
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:298
     </TASK>
    
    Fixes: ace45bec6d77 ("rxrpc: Fix firewall route keepalive")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Marc Dionne <marc.dionne@auristor.com>
    Cc: linux-afs@lists.infradead.org
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fee500c3353462d0f54703a3456da33203807b9e
Author: Ilya Maximets <i.maximets@ovn.org>
Date:   Mon Apr 4 12:41:50 2022 +0200

    net: openvswitch: don't send internal clone attribute to the userspace.
    
    [ Upstream commit 3f2a3050b4a3e7f32fc0ea3c9b0183090ae00522 ]
    
    'OVS_CLONE_ATTR_EXEC' is an internal attribute that is used for
    performance optimization inside the kernel.  It's added by the kernel
    while parsing user-provided actions and should not be sent during the
    flow dump as it's not part of the uAPI.
    
    The issue doesn't cause any significant problems to the ovs-vswitchd
    process, because reported actions are not really used in the
    application lifecycle and only supposed to be shown to a human via
    ovs-dpctl flow dump.  However, the action list is still incorrect
    and causes the following error if the user wants to look at the
    datapath flows:
    
      # ovs-dpctl add-dp system@ovs-system
      # ovs-dpctl add-flow "<flow match>" "clone(ct(commit),0)"
      # ovs-dpctl dump-flows
      <flow match>, packets:0, bytes:0, used:never,
        actions:clone(bad length 4, expected -1 for: action0(01 00 00 00),
                      ct(commit),0)
    
    With the fix:
    
      # ovs-dpctl dump-flows
      <flow match>, packets:0, bytes:0, used:never,
        actions:clone(ct(commit),0)
    
    Additionally fixed an incorrect attribute name in the comment.
    
    Fixes: b233504033db ("openvswitch: kernel datapath clone action")
    Signed-off-by: Ilya Maximets <i.maximets@ovn.org>
    Acked-by: Aaron Conole <aconole@redhat.com>
    Link: https://lore.kernel.org/r/20220404104150.2865736-1-i.maximets@ovn.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c154cf184b2c6f1ccad2ceb87b4a29c7ea7dd516
Author: David Ahern <dsahern@kernel.org>
Date:   Mon Apr 4 09:09:08 2022 -0600

    ipv6: Fix stats accounting in ip6_pkt_drop
    
    [ Upstream commit 1158f79f82d437093aeed87d57df0548bdd68146 ]
    
    VRF devices are the loopbacks for VRFs, and a loopback can not be
    assigned to a VRF. Accordingly, the condition in ip6_pkt_drop should
    be '||' not '&&'.
    
    Fixes: 1d3fd8a10bed ("vrf: Use orig netdev to count Ip6InNoRoutes and a fresh route lookup when sending dest unreach")
    Reported-by: Pudak, Filip <Filip.Pudak@windriver.com>
    Reported-by: Xiao, Jiguang <Jiguang.Xiao@windriver.com>
    Signed-off-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20220404150908.2937-1-dsahern@kernel.org
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbe5f4c0dd3475178f17ddd8b8d5044ebeae0be7
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Apr 4 12:53:36 2022 +0000

    dpaa2-ptp: Fix refcount leak in dpaa2_ptp_probe
    
    [ Upstream commit 2b04bd4f03bba021959ca339314f6739710f0954 ]
    
    This node pointer is returned by of_find_compatible_node() with
    refcount incremented. Calling of_node_put() to aovid the refcount leak.
    
    Fixes: d346c9e86d86 ("dpaa2-ptp: reuse ptp_qoriq driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220404125336.13427-1-linmq006@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a50937227c385a477177c9ffa122b4230e40666
Author: Niels Dossche <dossche.niels@gmail.com>
Date:   Mon Feb 28 17:53:30 2022 +0100

    IB/rdmavt: add lock to call to rvt_error_qp to prevent a race condition
    
    [ Upstream commit 4d809f69695d4e7d1378b3a072fa9aef23123018 ]
    
    The documentation of the function rvt_error_qp says both r_lock and s_lock
    need to be held when calling that function.  It also asserts using lockdep
    that both of those locks are held.  However, the commit I referenced in
    Fixes accidentally makes the call to rvt_error_qp in rvt_ruc_loopback no
    longer covered by r_lock.  This results in the lockdep assertion failing
    and also possibly in a race condition.
    
    Fixes: d757c60eca9b ("IB/rdmavt: Fix concurrency panics in QP post_send and modify to error")
    Link: https://lore.kernel.org/r/20220228165330.41546-1-dossche.niels@gmail.com
    Signed-off-by: Niels Dossche <dossche.niels@gmail.com>
    Acked-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ef586a864df94ac4d4beddd2e84261fc122e557
Author: Andy Gospodarek <gospo@broadcom.com>
Date:   Fri Apr 1 20:21:11 2022 -0400

    bnxt_en: reserve space inside receive page for skb_shared_info
    
    [ Upstream commit facc173cf700e55b2ad249ecbd3a7537f7315691 ]
    
    Insufficient space was being reserved in the page used for packet
    reception, so the interface MTU could be set too large to still have
    room for the contents of the packet when doing XDP redirect.  This
    resulted in the following message when redirecting a packet between
    3520 and 3822 bytes with an MTU of 3822:
    
    [311815.561880] XDP_WARN: xdp_update_frame_from_buff(line:200): Driver BUG: missing reserved tailroom
    
    Fixes: f18c2b77b2e4 ("bnxt_en: optimized XDP_REDIRECT support")
    Reviewed-by: Somnath Kotur <somnath.kotur@broadcom.com>
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Andy Gospodarek <gospo@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c539a6a5896ed92bfb91494e46996d013f3d5967
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Sat Jan 8 17:52:30 2022 +0100

    drm/imx: Fix memory leak in imx_pd_connector_get_modes
    
    [ Upstream commit bce81feb03a20fca7bbdd1c4af16b4e9d5c0e1d3 ]
    
    Avoid leaking the display mode variable if of_get_drm_display_mode
    fails.
    
    Fixes: 76ecd9c9fb24 ("drm/imx: parallel-display: check return code from of_get_drm_display_mode()")
    Addresses-Coverity-ID: 1443943 ("Resource leak")
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Link: https://lore.kernel.org/r/20220108165230.44610-1-jose.exposito89@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc9c2f51cd48437b7107de11da14eef554ea076b
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Apr 1 02:48:32 2022 +0800

    net: stmmac: Fix unset max_speed difference between DT and non-DT platforms
    
    [ Upstream commit c21cabb0fd0b54b8b54235fc1ecfe1195a23bcb2 ]
    
    In commit 9cbadf094d9d ("net: stmmac: support max-speed device tree
    property"), when DT platforms don't set "max-speed", max_speed is set to
    -1; for non-DT platforms, it stays the default 0.
    
    Prior to commit eeef2f6b9f6e ("net: stmmac: Start adding phylink support"),
    the check for a valid max_speed setting was to check if it was greater
    than zero. This commit got it right, but subsequent patches just checked
    for non-zero, which is incorrect for DT platforms.
    
    In commit 92c3807b9ac3 ("net: stmmac: convert to phylink_get_linkmodes()")
    the conversion switched completely to checking for non-zero value as a
    valid value, which caused 1000base-T to stop getting advertised by
    default.
    
    Instead of trying to fix all the checks, simply leave max_speed alone if
    DT property parsing fails.
    
    Fixes: 9cbadf094d9d ("net: stmmac: support max-speed device tree property")
    Fixes: 92c3807b9ac3 ("net: stmmac: convert to phylink_get_linkmodes()")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20220331184832.16316-1-wens@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5064531c23ad646da7be8b938292b00a7e61438
Author: Nikolay Aleksandrov <razor@blackwall.org>
Date:   Fri Apr 1 10:33:42 2022 +0300

    net: ipv4: fix route with nexthop object delete warning
    
    [ Upstream commit 6bf92d70e690b7ff12b24f4bfff5e5434d019b82 ]
    
    FRR folks have hit a kernel warning[1] while deleting routes[2] which is
    caused by trying to delete a route pointing to a nexthop id without
    specifying nhid but matching on an interface. That is, a route is found
    but we hit a warning while matching it. The warning is from
    fib_info_nh() in include/net/nexthop.h because we run it on a fib_info
    with nexthop object. The call chain is:
     inet_rtm_delroute -> fib_table_delete -> fib_nh_match (called with a
    nexthop fib_info and also with fc_oif set thus calling fib_info_nh on
    the fib_info and triggering the warning). The fix is to not do any
    matching in that branch if the fi has a nexthop object because those are
    managed separately. I.e. we should match when deleting without nh spec and
    should fail when deleting a nexthop route with old-style nh spec because
    nexthop objects are managed separately, e.g.:
     $ ip r show 1.2.3.4/32
     1.2.3.4 nhid 12 via 192.168.11.2 dev dummy0
    
     $ ip r del 1.2.3.4/32
     $ ip r del 1.2.3.4/32 nhid 12
     <both should work>
    
     $ ip r del 1.2.3.4/32 dev dummy0
     <should fail with ESRCH>
    
    [1]
     [  523.462226] ------------[ cut here ]------------
     [  523.462230] WARNING: CPU: 14 PID: 22893 at include/net/nexthop.h:468 fib_nh_match+0x210/0x460
     [  523.462236] Modules linked in: dummy rpcsec_gss_krb5 xt_socket nf_socket_ipv4 nf_socket_ipv6 ip6table_raw iptable_raw bpf_preload xt_statistic ip_set ip_vs_sh ip_vs_wrr ip_vs_rr ip_vs xt_mark nf_tables xt_nat veth nf_conntrack_netlink nfnetlink xt_addrtype br_netfilter overlay dm_crypt nfsv3 nfs fscache netfs vhost_net vhost vhost_iotlb tap tun xt_CHECKSUM xt_MASQUERADE xt_conntrack 8021q garp mrp ipt_REJECT nf_reject_ipv4 ip6table_mangle ip6table_nat iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bridge stp llc rfcomm snd_seq_dummy snd_hrtimer rpcrdma rdma_cm iw_cm ib_cm ib_core ip6table_filter xt_comment ip6_tables vboxnetadp(OE) vboxnetflt(OE) vboxdrv(OE) qrtr bnep binfmt_misc xfs vfat fat squashfs loop nvidia_drm(POE) nvidia_modeset(POE) nvidia_uvm(POE) nvidia(POE) intel_rapl_msr intel_rapl_common snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio snd_hda_codec_hdmi btusb btrtl iwlmvm uvcvideo btbcm snd_hda_intel edac_mce_amd
     [  523.462274]  videobuf2_vmalloc videobuf2_memops btintel snd_intel_dspcfg videobuf2_v4l2 snd_intel_sdw_acpi bluetooth snd_usb_audio snd_hda_codec mac80211 snd_usbmidi_lib joydev snd_hda_core videobuf2_common kvm_amd snd_rawmidi snd_hwdep snd_seq videodev ccp snd_seq_device libarc4 ecdh_generic mc snd_pcm kvm iwlwifi snd_timer drm_kms_helper snd cfg80211 cec soundcore irqbypass rapl wmi_bmof i2c_piix4 rfkill k10temp pcspkr acpi_cpufreq nfsd auth_rpcgss nfs_acl lockd grace sunrpc drm zram ip_tables crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel nvme sp5100_tco r8169 nvme_core wmi ipmi_devintf ipmi_msghandler fuse
     [  523.462300] CPU: 14 PID: 22893 Comm: ip Tainted: P           OE     5.16.18-200.fc35.x86_64 #1
     [  523.462302] Hardware name: Micro-Star International Co., Ltd. MS-7C37/MPG X570 GAMING EDGE WIFI (MS-7C37), BIOS 1.C0 10/29/2020
     [  523.462303] RIP: 0010:fib_nh_match+0x210/0x460
     [  523.462304] Code: 7c 24 20 48 8b b5 90 00 00 00 e8 bb ee f4 ff 48 8b 7c 24 20 41 89 c4 e8 ee eb f4 ff 45 85 e4 0f 85 2e fe ff ff e9 4c ff ff ff <0f> 0b e9 17 ff ff ff 3c 0a 0f 85 61 fe ff ff 48 8b b5 98 00 00 00
     [  523.462306] RSP: 0018:ffffaa53d4d87928 EFLAGS: 00010286
     [  523.462307] RAX: 0000000000000000 RBX: ffffaa53d4d87a90 RCX: ffffaa53d4d87bb0
     [  523.462308] RDX: ffff9e3d2ee6be80 RSI: ffffaa53d4d87a90 RDI: ffffffff920ed380
     [  523.462309] RBP: ffff9e3d2ee6be80 R08: 0000000000000064 R09: 0000000000000000
     [  523.462310] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000031
     [  523.462310] R13: 0000000000000020 R14: 0000000000000000 R15: ffff9e3d331054e0
     [  523.462311] FS:  00007f245517c1c0(0000) GS:ffff9e492ed80000(0000) knlGS:0000000000000000
     [  523.462313] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     [  523.462313] CR2: 000055e5dfdd8268 CR3: 00000003ef488000 CR4: 0000000000350ee0
     [  523.462315] Call Trace:
     [  523.462316]  <TASK>
     [  523.462320]  fib_table_delete+0x1a9/0x310
     [  523.462323]  inet_rtm_delroute+0x93/0x110
     [  523.462325]  rtnetlink_rcv_msg+0x133/0x370
     [  523.462327]  ? _copy_to_iter+0xb5/0x6f0
     [  523.462330]  ? rtnl_calcit.isra.0+0x110/0x110
     [  523.462331]  netlink_rcv_skb+0x50/0xf0
     [  523.462334]  netlink_unicast+0x211/0x330
     [  523.462336]  netlink_sendmsg+0x23f/0x480
     [  523.462338]  sock_sendmsg+0x5e/0x60
     [  523.462340]  ____sys_sendmsg+0x22c/0x270
     [  523.462341]  ? import_iovec+0x17/0x20
     [  523.462343]  ? sendmsg_copy_msghdr+0x59/0x90
     [  523.462344]  ? __mod_lruvec_page_state+0x85/0x110
     [  523.462348]  ___sys_sendmsg+0x81/0xc0
     [  523.462350]  ? netlink_seq_start+0x70/0x70
     [  523.462352]  ? __dentry_kill+0x13a/0x180
     [  523.462354]  ? __fput+0xff/0x250
     [  523.462356]  __sys_sendmsg+0x49/0x80
     [  523.462358]  do_syscall_64+0x3b/0x90
     [  523.462361]  entry_SYSCALL_64_after_hwframe+0x44/0xae
     [  523.462364] RIP: 0033:0x7f24552aa337
     [  523.462365] Code: 0e 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b9 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 2e 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 89 54 24 1c 48 89 74 24 10
     [  523.462366] RSP: 002b:00007fff7f05a838 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
     [  523.462368] RAX: ffffffffffffffda RBX: 000000006245bf91 RCX: 00007f24552aa337
     [  523.462368] RDX: 0000000000000000 RSI: 00007fff7f05a8a0 RDI: 0000000000000003
     [  523.462369] RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
     [  523.462370] R10: 0000000000000008 R11: 0000000000000246 R12: 0000000000000001
     [  523.462370] R13: 00007fff7f05ce08 R14: 0000000000000000 R15: 000055e5dfdd1040
     [  523.462373]  </TASK>
     [  523.462374] ---[ end trace ba537bc16f6bf4ed ]---
    
    [2] https://github.com/FRRouting/frr/issues/6412
    
    Fixes: 4c7e8084fd46 ("ipv4: Plumb support for nexthop object in a fib_info")
    Signed-off-by: Nikolay Aleksandrov <razor@blackwall.org>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b7d14c105dd8f6412eda5a91e1e6154653731e3
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Thu Mar 31 15:04:28 2022 +0800

    net/tls: fix slab-out-of-bounds bug in decrypt_internal
    
    [ Upstream commit 9381fe8c849cfbe50245ac01fc077554f6eaa0e2 ]
    
    The memory size of tls_ctx->rx.iv for AES128-CCM is 12 setting in
    tls_set_sw_offload(). The return value of crypto_aead_ivsize()
    for "ccm(aes)" is 16. So memcpy() require 16 bytes from 12 bytes
    memory space will trigger slab-out-of-bounds bug as following:
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in decrypt_internal+0x385/0xc40 [tls]
    Read of size 16 at addr ffff888114e84e60 by task tls/10911
    
    Call Trace:
     <TASK>
     dump_stack_lvl+0x34/0x44
     print_report.cold+0x5e/0x5db
     ? decrypt_internal+0x385/0xc40 [tls]
     kasan_report+0xab/0x120
     ? decrypt_internal+0x385/0xc40 [tls]
     kasan_check_range+0xf9/0x1e0
     memcpy+0x20/0x60
     decrypt_internal+0x385/0xc40 [tls]
     ? tls_get_rec+0x2e0/0x2e0 [tls]
     ? process_rx_list+0x1a5/0x420 [tls]
     ? tls_setup_from_iter.constprop.0+0x2e0/0x2e0 [tls]
     decrypt_skb_update+0x9d/0x400 [tls]
     tls_sw_recvmsg+0x3c8/0xb50 [tls]
    
    Allocated by task 10911:
     kasan_save_stack+0x1e/0x40
     __kasan_kmalloc+0x81/0xa0
     tls_set_sw_offload+0x2eb/0xa20 [tls]
     tls_setsockopt+0x68c/0x700 [tls]
     __sys_setsockopt+0xfe/0x1b0
    
    Replace the crypto_aead_ivsize() with prot->iv_size + prot->salt_size
    when memcpy() iv value in TLS_1_3_VERSION scenario.
    
    Fixes: f295b3ae9f59 ("net/tls: Add support of AES128-CCM based ciphers")
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34a47f7ddb4fd1cbd12397aa6f7dad1de08b4050
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Mar 19 08:01:24 2022 +0100

    scsi: zorro7xx: Fix a resource leak in zorro7xx_remove_one()
    
    [ Upstream commit 16ed828b872d12ccba8f07bcc446ae89ba662f9c ]
    
    The error handling path of the probe releases a resource that is not freed
    in the remove function. In some cases, a ioremap() must be undone.
    
    Add the missing iounmap() call in the remove function.
    
    Link: https://lore.kernel.org/r/247066a3104d25f9a05de8b3270fc3c848763bcc.1647673264.git.christophe.jaillet@wanadoo.fr
    Fixes: 45804fbb00ee ("[SCSI] 53c700: Amiga Zorro NCR53c710 SCSI")
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2133c422a103cf7c7768c37b9ac382e73b691892
Author: Guilherme G. Piccoli <gpiccoli@igalia.com>
Date:   Tue Mar 15 17:35:35 2022 -0300

    Drivers: hv: vmbus: Fix potential crash on module unload
    
    [ Upstream commit 792f232d57ff28bbd5f9c4abe0466b23d5879dc8 ]
    
    The vmbus driver relies on the panic notifier infrastructure to perform
    some operations when a panic event is detected. Since vmbus can be built
    as module, it is required that the driver handles both registering and
    unregistering such panic notifier callback.
    
    After commit 74347a99e73a ("x86/Hyper-V: Unload vmbus channel in hv panic callback")
    though, the panic notifier registration is done unconditionally in the module
    initialization routine whereas the unregistering procedure is conditionally
    guarded and executes only if HV_FEATURE_GUEST_CRASH_MSR_AVAILABLE capability
    is set.
    
    This patch fixes that by unconditionally unregistering the panic notifier
    in the module's exit routine as well.
    
    Fixes: 74347a99e73a ("x86/Hyper-V: Unload vmbus channel in hv panic callback")
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/20220315203535.682306-1-gpiccoli@igalia.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5e12c3a47db6f307483645baaab3776dff71a70
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Mar 16 11:41:48 2022 +0300

    drm/amdgpu: fix off by one in amdgpu_gfx_kiq_acquire()
    
    [ Upstream commit 1647b54ed55d4d48c7199d439f8834626576cbe9 ]
    
    This post-op should be a pre-op so that we do not pass -1 as the bit
    number to test_bit().  The current code will loop downwards from 63 to
    -1.  After changing to a pre-op, it loops from 63 to 0.
    
    Fixes: 71c37505e7ea ("drm/amdgpu/gfx: move more common KIQ code to amdgpu_gfx.c")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00914290958d6f458fe118f2fe2451799f92c0a5
Author: James Morse <james.morse@arm.com>
Date:   Fri Apr 8 18:22:19 2022 +0100

    KVM: arm64: Check arm64_get_bp_hardening_data() didn't return NULL
    
    Will reports that with CONFIG_EXPERT=y and CONFIG_HARDEN_BRANCH_PREDICTOR=n,
    the kernel dereferences a NULL pointer during boot:
    
    [    2.384444] Internal error: Oops: 96000004 [#1] PREEMPT SMP
    [    2.384461] pstate: 20400085 (nzCv daIf +PAN -UAO)
    [    2.384472] pc : cpu_hyp_reinit+0x114/0x30c
    [    2.384476] lr : cpu_hyp_reinit+0x80/0x30c
    
    [    2.384529] Call trace:
    [    2.384533]  cpu_hyp_reinit+0x114/0x30c
    [    2.384537]  _kvm_arch_hardware_enable+0x30/0x54
    [    2.384541]  flush_smp_call_function_queue+0xe4/0x154
    [    2.384544]  generic_smp_call_function_single_interrupt+0x10/0x18
    [    2.384549]  ipi_handler+0x170/0x2b0
    [    2.384555]  handle_percpu_devid_fasteoi_ipi+0x120/0x1cc
    [    2.384560]  __handle_domain_irq+0x9c/0xf4
    [    2.384563]  gic_handle_irq+0x6c/0xe4
    [    2.384566]  el1_irq+0xf0/0x1c0
    [    2.384570]  arch_cpu_idle+0x28/0x44
    [    2.384574]  do_idle+0x100/0x2a8
    [    2.384577]  cpu_startup_entry+0x20/0x24
    [    2.384581]  secondary_start_kernel+0x1b0/0x1cc
    [    2.384589] Code: b9469d08 7100011f 540003ad 52800208 (f9400108)
    [    2.384600] ---[ end trace 266d08dbf96ff143 ]---
    [    2.385171] Kernel panic - not syncing: Fatal exception in interrupt
    
    In this configuration arm64_get_bp_hardening_data() returns NULL.
    Add a check in kvm_get_hyp_vector().
    
    Cc: Will Deacon <will@kernel.org>
    Link: https://lore.kernel.org/linux-arm-kernel/20220408120041.GB27685@willie-the-truck/
    Fixes: 26129ea2953b ("KVM: arm64: Add templates for BHB mitigation sequences")
    Cc: stable@vger.kernel.org # 5.4.x
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18e0097daf8c0d7897b2847d06f06b3bf44dd59e
Author: Mauricio Faria de Oliveira <mfo@canonical.com>
Date:   Thu Apr 7 16:14:29 2022 -0300

    mm: fix race between MADV_FREE reclaim and blkdev direct IO read
    
    commit 6c8e2a256915a223f6289f651d6b926cd7135c9e upstream.
    
    Problem:
    =======
    
    Userspace might read the zero-page instead of actual data from a direct IO
    read on a block device if the buffers have been called madvise(MADV_FREE)
    on earlier (this is discussed below) due to a race between page reclaim on
    MADV_FREE and blkdev direct IO read.
    
    - Race condition:
      ==============
    
    During page reclaim, the MADV_FREE page check in try_to_unmap_one() checks
    if the page is not dirty, then discards its rmap PTE(s) (vs.  remap back
    if the page is dirty).
    
    However, after try_to_unmap_one() returns to shrink_page_list(), it might
    keep the page _anyway_ if page_ref_freeze() fails (it expects exactly
    _one_ page reference, from the isolation for page reclaim).
    
    Well, blkdev_direct_IO() gets references for all pages, and on READ
    operations it only sets them dirty _later_.
    
    So, if MADV_FREE'd pages (i.e., not dirty) are used as buffers for direct
    IO read from block devices, and page reclaim happens during
    __blkdev_direct_IO[_simple]() exactly AFTER bio_iov_iter_get_pages()
    returns, but BEFORE the pages are set dirty, the situation happens.
    
    The direct IO read eventually completes.  Now, when userspace reads the
    buffers, the PTE is no longer there and the page fault handler
    do_anonymous_page() services that with the zero-page, NOT the data!
    
    A synthetic reproducer is provided.
    
    - Page faults:
      ===========
    
    If page reclaim happens BEFORE bio_iov_iter_get_pages() the issue doesn't
    happen, because that faults-in all pages as writeable, so
    do_anonymous_page() sets up a new page/rmap/PTE, and that is used by
    direct IO.  The userspace reads don't fault as the PTE is there (thus
    zero-page is not used/setup).
    
    But if page reclaim happens AFTER it / BEFORE setting pages dirty, the PTE
    is no longer there; the subsequent page faults can't help:
    
    The data-read from the block device probably won't generate faults due to
    DMA (no MMU) but even in the case it wouldn't use DMA, that happens on
    different virtual addresses (not user-mapped addresses) because `struct
    bio_vec` stores `struct page` to figure addresses out (which are different
    from user-mapped addresses) for the read.
    
    Thus userspace reads (to user-mapped addresses) still fault, then
    do_anonymous_page() gets another `struct page` that would address/ map to
    other memory than the `struct page` used by `struct bio_vec` for the read.
    (The original `struct page` is not available, since it wasn't freed, as
    page_ref_freeze() failed due to more page refs.  And even if it were
    available, its data cannot be trusted anymore.)
    
    Solution:
    ========
    
    One solution is to check for the expected page reference count in
    try_to_unmap_one().
    
    There should be one reference from the isolation (that is also checked in
    shrink_page_list() with page_ref_freeze()) plus one or more references
    from page mapping(s) (put in discard: label).  Further references mean
    that rmap/PTE cannot be unmapped/nuked.
    
    (Note: there might be more than one reference from mapping due to
    fork()/clone() without CLONE_VM, which use the same `struct page` for
    references, until the copy-on-write page gets copied.)
    
    So, additional page references (e.g., from direct IO read) now prevent the
    rmap/PTE from being unmapped/dropped; similarly to the page is not freed
    per shrink_page_list()/page_ref_freeze()).
    
    - Races and Barriers:
      ==================
    
    The new check in try_to_unmap_one() should be safe in races with
    bio_iov_iter_get_pages() in get_user_pages() fast and slow paths, as it's
    done under the PTE lock.
    
    The fast path doesn't take the lock, but it checks if the PTE has changed
    and if so, it drops the reference and leaves the page for the slow path
    (which does take that lock).
    
    The fast path requires synchronization w/ full memory barrier: it writes
    the page reference count first then it reads the PTE later, while
    try_to_unmap() writes PTE first then it reads page refcount.
    
    And a second barrier is needed, as the page dirty flag should not be read
    before the page reference count (as in __remove_mapping()).  (This can be
    a load memory barrier only; no writes are involved.)
    
    Call stack/comments:
    
    - try_to_unmap_one()
      - page_vma_mapped_walk()
        - map_pte()                 # see pte_offset_map_lock():
            pte_offset_map()
            spin_lock()
    
      - ptep_get_and_clear()        # write PTE
      - smp_mb()                    # (new barrier) GUP fast path
      - page_ref_count()            # (new check) read refcount
    
      - page_vma_mapped_walk_done() # see pte_unmap_unlock():
          pte_unmap()
          spin_unlock()
    
    - bio_iov_iter_get_pages()
      - __bio_iov_iter_get_pages()
        - iov_iter_get_pages()
          - get_user_pages_fast()
            - internal_get_user_pages_fast()
    
              # fast path
              - lockless_pages_from_mm()
                - gup_{pgd,p4d,pud,pmd,pte}_range()
                    ptep = pte_offset_map()         # not _lock()
                    pte = ptep_get_lockless(ptep)
    
                    page = pte_page(pte)
                    try_grab_compound_head(page)    # inc refcount
                                                    # (RMW/barrier
                                                    #  on success)
    
                    if (pte_val(pte) != pte_val(*ptep)) # read PTE
                            put_compound_head(page) # dec refcount
                                                    # go slow path
    
              # slow path
              - __gup_longterm_unlocked()
                - get_user_pages_unlocked()
                  - __get_user_pages_locked()
                    - __get_user_pages()
                      - follow_{page,p4d,pud,pmd}_mask()
                        - follow_page_pte()
                            ptep = pte_offset_map_lock()
                            pte = *ptep
                            page = vm_normal_page(pte)
                            try_grab_page(page)     # inc refcount
                            pte_unmap_unlock()
    
    - Huge Pages:
      ==========
    
    Regarding transparent hugepages, that logic shouldn't change, as MADV_FREE
    (aka lazyfree) pages are PageAnon() && !PageSwapBacked()
    (madvise_free_pte_range() -> mark_page_lazyfree() -> lru_lazyfree_fn())
    thus should reach shrink_page_list() -> split_huge_page_to_list() before
    try_to_unmap[_one](), so it deals with normal pages only.
    
    (And in case unlikely/TTU_SPLIT_HUGE_PMD/split_huge_pmd_address() happens,
    which should not or be rare, the page refcount should be greater than
    mapcount: the head page is referenced by tail pages.  That also prevents
    checking the head `page` then incorrectly call page_remove_rmap(subpage)
    for a tail page, that isn't even in the shrink_page_list()'s page_list (an
    effect of split huge pmd/pmvw), as it might happen today in this unlikely
    scenario.)
    
    MADV_FREE'd buffers:
    ===================
    
    So, back to the "if MADV_FREE pages are used as buffers" note.  The case
    is arguable, and subject to multiple interpretations.
    
    The madvise(2) manual page on the MADV_FREE advice value says:
    
    1) 'After a successful MADV_FREE ... data will be lost when
       the kernel frees the pages.'
    2) 'the free operation will be canceled if the caller writes
       into the page' / 'subsequent writes ... will succeed and
       then [the] kernel cannot free those dirtied pages'
    3) 'If there is no subsequent write, the kernel can free the
       pages at any time.'
    
    Thoughts, questions, considerations... respectively:
    
    1) Since the kernel didn't actually free the page (page_ref_freeze()
       failed), should the data not have been lost? (on userspace read.)
    2) Should writes performed by the direct IO read be able to cancel
       the free operation?
       - Should the direct IO read be considered as 'the caller' too,
         as it's been requested by 'the caller'?
       - Should the bio technique to dirty pages on return to userspace
         (bio_check_pages_dirty() is called/used by __blkdev_direct_IO())
         be considered in another/special way here?
    3) Should an upcoming write from a previously requested direct IO
       read be considered as a subsequent write, so the kernel should
       not free the pages? (as it's known at the time of page reclaim.)
    
    And lastly:
    
    Technically, the last point would seem a reasonable consideration and
    balance, as the madvise(2) manual page apparently (and fairly) seem to
    assume that 'writes' are memory access from the userspace process (not
    explicitly considering writes from the kernel or its corner cases; again,
    fairly)..  plus the kernel fix implementation for the corner case of the
    largely 'non-atomic write' encompassed by a direct IO read operation, is
    relatively simple; and it helps.
    
    Reproducer:
    ==========
    
    @ test.c (simplified, but works)
    
            #define _GNU_SOURCE
            #include <fcntl.h>
            #include <stdio.h>
            #include <unistd.h>
            #include <sys/mman.h>
    
            int main() {
                    int fd, i;
                    char *buf;
    
                    fd = open(DEV, O_RDONLY | O_DIRECT);
    
                    buf = mmap(NULL, BUF_SIZE, PROT_READ | PROT_WRITE,
                               MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
    
                    for (i = 0; i < BUF_SIZE; i += PAGE_SIZE)
                            buf[i] = 1; // init to non-zero
    
                    madvise(buf, BUF_SIZE, MADV_FREE);
    
                    read(fd, buf, BUF_SIZE);
    
                    for (i = 0; i < BUF_SIZE; i += PAGE_SIZE)
                            printf("%p: 0x%x\n", &buf[i], buf[i]);
    
                    return 0;
            }
    
    @ block/fops.c (formerly fs/block_dev.c)
    
            +#include <linux/swap.h>
            ...
            ... __blkdev_direct_IO[_simple](...)
            {
            ...
            +       if (!strcmp(current->comm, "good"))
            +               shrink_all_memory(ULONG_MAX);
            +
                    ret = bio_iov_iter_get_pages(...);
            +
            +       if (!strcmp(current->comm, "bad"))
            +               shrink_all_memory(ULONG_MAX);
            ...
            }
    
    @ shell
    
            # NUM_PAGES=4
            # PAGE_SIZE=$(getconf PAGE_SIZE)
    
            # yes | dd of=test.img bs=${PAGE_SIZE} count=${NUM_PAGES}
            # DEV=$(losetup -f --show test.img)
    
            # gcc -DDEV=\"$DEV\" \
                  -DBUF_SIZE=$((PAGE_SIZE * NUM_PAGES)) \
                  -DPAGE_SIZE=${PAGE_SIZE} \
                   test.c -o test
    
            # od -tx1 $DEV
            0000000 79 0a 79 0a 79 0a 79 0a 79 0a 79 0a 79 0a 79 0a
            *
            0040000
    
            # mv test good
            # ./good
            0x7f7c10418000: 0x79
            0x7f7c10419000: 0x79
            0x7f7c1041a000: 0x79
            0x7f7c1041b000: 0x79
    
            # mv good bad
            # ./bad
            0x7fa1b8050000: 0x0
            0x7fa1b8051000: 0x0
            0x7fa1b8052000: 0x0
            0x7fa1b8053000: 0x0
    
    Note: the issue is consistent on v5.17-rc3, but it's intermittent with the
    support of MADV_FREE on v4.5 (60%-70% error; needs swap).  [wrap
    do_direct_IO() in do_blockdev_direct_IO() @ fs/direct-io.c].
    
    - v5.17-rc3:
    
            # for i in {1..1000}; do ./good; done \
                | cut -d: -f2 | sort | uniq -c
               4000  0x79
    
            # mv good bad
            # for i in {1..1000}; do ./bad; done \
                | cut -d: -f2 | sort | uniq -c
               4000  0x0
    
            # free | grep Swap
            Swap:             0           0           0
    
    - v4.5:
    
            # for i in {1..1000}; do ./good; done \
                | cut -d: -f2 | sort | uniq -c
               4000  0x79
    
            # mv good bad
            # for i in {1..1000}; do ./bad; done \
                | cut -d: -f2 | sort | uniq -c
               2702  0x0
               1298  0x79
    
            # swapoff -av
            swapoff /swap
    
            # for i in {1..1000}; do ./bad; done \
                | cut -d: -f2 | sort | uniq -c
               4000  0x79
    
    Ceph/TCMalloc:
    =============
    
    For documentation purposes, the use case driving the analysis/fix is Ceph
    on Ubuntu 18.04, as the TCMalloc library there still uses MADV_FREE to
    release unused memory to the system from the mmap'ed page heap (might be
    committed back/used again; it's not munmap'ed.) - PageHeap::DecommitSpan()
    -> TCMalloc_SystemRelease() -> madvise() - PageHeap::CommitSpan() ->
    TCMalloc_SystemCommit() -> do nothing.
    
    Note: TCMalloc switched back to MADV_DONTNEED a few commits after the
    release in Ubuntu 18.04 (google-perftools/gperftools 2.5), so the issue
    just 'disappeared' on Ceph on later Ubuntu releases but is still present
    in the kernel, and can be hit by other use cases.
    
    The observed issue seems to be the old Ceph bug #22464 [1], where checksum
    mismatches are observed (and instrumentation with buffer dumps shows
    zero-pages read from mmap'ed/MADV_FREE'd page ranges).
    
    The issue in Ceph was reasonably deemed a kernel bug (comment #50) and
    mostly worked around with a retry mechanism, but other parts of Ceph could
    still hit that (rocksdb).  Anyway, it's less likely to be hit again as
    TCMalloc switched out of MADV_FREE by default.
    
    (Some kernel versions/reports from the Ceph bug, and relation with
    the MADV_FREE introduction/changes; TCMalloc versions not checked.)
    - 4.4 good
    - 4.5 (madv_free: introduction)
    - 4.9 bad
    - 4.10 good? maybe a swapless system
    - 4.12 (madv_free: no longer free instantly on swapless systems)
    - 4.13 bad
    
    [1] https://tracker.ceph.com/issues/22464
    
    Thanks:
    ======
    
    Several people contributed to analysis/discussions/tests/reproducers in
    the first stages when drilling down on ceph/tcmalloc/linux kernel:
    
    - Dan Hill
    - Dan Streetman
    - Dongdong Tao
    - Gavin Guo
    - Gerald Yang
    - Heitor Alves de Siqueira
    - Ioanna Alifieraki
    - Jay Vosburgh
    - Matthew Ruffell
    - Ponnuvel Palaniyappan
    
    Reviews, suggestions, corrections, comments:
    
    - Minchan Kim
    - Yu Zhao
    - Huang, Ying
    - John Hubbard
    - Christoph Hellwig
    
    [mfo@canonical.com: v4]
      Link: https://lkml.kernel.org/r/20220209202659.183418-1-mfo@canonical.comLink: https://lkml.kernel.org/r/20220131230255.789059-1-mfo@canonical.com
    
    Fixes: 802a3a92ad7a ("mm: reclaim MADV_FREE pages")
    Signed-off-by: Mauricio Faria de Oliveira <mfo@canonical.com>
    Reviewed-by: "Huang, Ying" <ying.huang@intel.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Yu Zhao <yuzhao@google.com>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Dan Hill <daniel.hill@canonical.com>
    Cc: Dan Streetman <dan.streetman@canonical.com>
    Cc: Dongdong Tao <dongdong.tao@canonical.com>
    Cc: Gavin Guo <gavin.guo@canonical.com>
    Cc: Gerald Yang <gerald.yang@canonical.com>
    Cc: Heitor Alves de Siqueira <halves@canonical.com>
    Cc: Ioanna Alifieraki <ioanna-maria.alifieraki@canonical.com>
    Cc: Jay Vosburgh <jay.vosburgh@canonical.com>
    Cc: Matthew Ruffell <matthew.ruffell@canonical.com>
    Cc: Ponnuvel Palaniyappan <ponnuvel.palaniyappan@canonical.com>
    Cc: <stable@vger.kernel.org>
    Cc: Christoph Hellwig <hch@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [mfo: backport: replace folio/test_flag with page/flag equivalents;
     real Fixes: 854e9ed09ded ("mm: support madvise(MADV_FREE)") in v4.]
    Signed-off-by: Mauricio Faria de Oliveira <mfo@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abb1f310e7f02bb8d7ab5a85df1706c027473377
Author: John David Anglin <dave.anglin@bell.net>
Date:   Tue Mar 29 18:54:36 2022 +0000

    parisc: Fix patch code locking and flushing
    
    [ Upstream commit a9fe7fa7d874a536e0540469f314772c054a0323 ]
    
    This change fixes the following:
    
    1) The flags variable is not initialized. Always use raw_spin_lock_irqsave
    and raw_spin_unlock_irqrestore to serialize patching.
    
    2) flush_kernel_vmap_range is primarily intended for DMA flushes. Since
    __patch_text_multiple is often called with interrupts disabled, it is
    better to directly call flush_kernel_dcache_range_asm and
    flush_kernel_icache_range_asm. This avoids an extra call.
    
    3) The final call to flush_icache_range is unnecessary.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bab8e3b4f68ac393c42da73d0bce891d281ded55
Author: Helge Deller <deller@gmx.de>
Date:   Sun Mar 27 15:46:26 2022 +0200

    parisc: Fix CPU affinity for Lasi, WAX and Dino chips
    
    [ Upstream commit 939fc856676c266c3bc347c1c1661872a3725c0f ]
    
    Add the missing logic to allow Lasi, WAX and Dino to set the
    CPU affinity. This fixes IRQ migration to other CPUs when a
    CPU is shutdown which currently holds the IRQs for one of those
    chips.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b8a6d1bdac5a701de35a852cea5b78dc65f7da8
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Mar 14 21:02:10 2022 -0400

    SUNRPC: Fix socket waits for write buffer space
    
    [ Upstream commit 7496b59f588dd52886fdbac7633608097543a0a5 ]
    
    The socket layer requires that we use the socket lock to protect changes
    to the sock->sk_write_pending field and others.
    
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e19c3149a80e4fc8df298d6546640e01601f3758
Author: Haimin Zhang <tcs_kernel@tencent.com>
Date:   Tue Mar 22 21:59:17 2022 +0800

    jfs: prevent NULL deref in diFree
    
    [ Upstream commit a53046291020ec41e09181396c1e829287b48d47 ]
    
    Add validation check for JFS_IP(ipimap)->i_imap to prevent a NULL deref
    in diFree since diFree uses it without do any validations.
    When function jfs_mount calls diMount to initialize fileset inode
    allocation map, it can fail and JFS_IP(ipimap)->i_imap won't be
    initialized. Then it calls diFreeSpecial to close fileset inode allocation
    map inode and it will flow into jfs_evict_inode. Function jfs_evict_inode
    just validates JFS_SBI(inode->i_sb)->ipimap, then calls diFree. diFree use
    JFS_IP(ipimap)->i_imap directly, then it will cause a NULL deref.
    
    Reported-by: TCS Robot <tcs_robot@tencent.com>
    Signed-off-by: Haimin Zhang <tcs_kernel@tencent.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3504b0a177208eda85bf472bbf7c9aa77d2b8343
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Mar 16 12:20:03 2022 -0700

    virtio_console: eliminate anonymous module_init & module_exit
    
    [ Upstream commit fefb8a2a941338d871e2d83fbd65fbfa068857bd ]
    
    Eliminate anonymous module_init() and module_exit(), which can lead to
    confusion or ambiguity when reading System.map, crashes/oops/bugs,
    or an initcall_debug log.
    
    Give each of these init and exit functions unique driver-specific
    names to eliminate the anonymous names.
    
    Example 1: (System.map)
     ffffffff832fc78c t init
     ffffffff832fc79e t init
     ffffffff832fc8f8 t init
    
    Example 2: (initcall_debug log)
     calling  init+0x0/0x12 @ 1
     initcall init+0x0/0x12 returned 0 after 15 usecs
     calling  init+0x0/0x60 @ 1
     initcall init+0x0/0x60 returned 0 after 2 usecs
     calling  init+0x0/0x9a @ 1
     initcall init+0x0/0x9a returned 0 after 74 usecs
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Amit Shah <amit@kernel.org>
    Cc: virtualization@lists.linux-foundation.org
    Cc: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20220316192010.19001-3-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60ade478c965dc3b087166b1bd9c0b66e730d0af
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Mar 8 12:51:53 2022 +0100

    serial: samsung_tty: do not unlock port->lock for uart_write_wakeup()
    
    [ Upstream commit 988c7c00691008ea1daaa1235680a0da49dab4e8 ]
    
    The commit c15c3747ee32 (serial: samsung: fix potential soft lockup
    during uart write) added an unlock of port->lock before
    uart_write_wakeup() and a lock after it. It was always problematic to
    write data from tty_ldisc_ops::write_wakeup and it was even documented
    that way. We fixed the line disciplines to conform to this recently.
    So if there is still a missed one, we should fix them instead of this
    workaround.
    
    On the top of that, s3c24xx_serial_tx_dma_complete() in this driver
    still holds the port->lock while calling uart_write_wakeup().
    
    So revert the wrap added by the commit above.
    
    Cc: Thomas Abraham <thomas.abraham@linaro.org>
    Cc: Kyungmin Park <kyungmin.park@samsung.com>
    Cc: Hyeonkook Kim <hk619.kim@samsung.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20220308115153.4225-1-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14e6bab37373feec34b4dc952763b4e003ae1e1e
Author: NeilBrown <neilb@suse.de>
Date:   Mon Mar 7 10:41:44 2022 +1100

    NFS: swap-out must always use STABLE writes.
    
    [ Upstream commit c265de257f558a05c1859ee9e3fed04883b9ec0e ]
    
    The commit handling code is not safe against memory-pressure deadlocks
    when writing to swap.  In particular, nfs_commitdata_alloc() blocks
    indefinitely waiting for memory, and this can consume all available
    workqueue threads.
    
    swap-out most likely uses STABLE writes anyway as COND_STABLE indicates
    that a stable write should be used if the write fits in a single
    request, and it normally does.  However if we ever swap with a small
    wsize, or gather unusually large numbers of pages for a single write,
    this might change.
    
    For safety, make it explicit in the code that direct writes used for swap
    must always use FLUSH_STABLE.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66cf5de08460c93964bac7e2ce868ea8ea3f7909
Author: NeilBrown <neilb@suse.de>
Date:   Mon Mar 7 10:41:44 2022 +1100

    NFS: swap IO handling is slightly different for O_DIRECT IO
    
    [ Upstream commit 64158668ac8b31626a8ce48db4cad08496eb8340 ]
    
    1/ Taking the i_rwsem for swap IO triggers lockdep warnings regarding
       possible deadlocks with "fs_reclaim".  These deadlocks could, I believe,
       eventuate if a buffered read on the swapfile was attempted.
    
       We don't need coherence with the page cache for a swap file, and
       buffered writes are forbidden anyway.  There is no other need for
       i_rwsem during direct IO.  So never take it for swap_rw()
    
    2/ generic_write_checks() explicitly forbids writes to swap, and
       performs checks that are not needed for swap.  So bypass it
       for swap_rw().
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa47286c010a5bc23781855ce70f86f1c6768ade
Author: NeilBrown <neilb@suse.de>
Date:   Mon Mar 7 10:41:44 2022 +1100

    SUNRPC/call_alloc: async tasks mustn't block waiting for memory
    
    [ Upstream commit c487216bec83b0c5a8803e5c61433d33ad7b104d ]
    
    When memory is short, new worker threads cannot be created and we depend
    on the minimum one rpciod thread to be able to handle everything.
    So it must not block waiting for memory.
    
    mempools are particularly a problem as memory can only be released back
    to the mempool by an async rpc task running.  If all available
    workqueue threads are waiting on the mempool, no thread is available to
    return anything.
    
    rpc_malloc() can block, and this might cause deadlocks.
    So check RPC_IS_ASYNC(), rather than RPC_IS_SWAPPER() to determine if
    blocking is acceptable.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e427cd0ad55937c9ac2d86b53da6a149e9b3eb61
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Fri Feb 25 15:35:25 2022 +0100

    clk: Enforce that disjoints limits are invalid
    
    [ Upstream commit 10c46f2ea914202482d19cf80dcc9c321c9ff59b ]
    
    If we were to have two users of the same clock, doing something like:
    
    clk_set_rate_range(user1, 1000, 2000);
    clk_set_rate_range(user2, 3000, 4000);
    
    The second call would fail with -EINVAL, preventing from getting in a
    situation where we end up with impossible limits.
    
    However, this is never explicitly checked against and enforced, and
    works by relying on an undocumented behaviour of clk_set_rate().
    
    Indeed, on the first clk_set_rate_range will make sure the current clock
    rate is within the new range, so it will be between 1000 and 2000Hz. On
    the second clk_set_rate_range(), it will consider (rightfully), that our
    current clock is outside of the 3000-4000Hz range, and will call
    clk_core_set_rate_nolock() to set it to 3000Hz.
    
    clk_core_set_rate_nolock() will then call clk_calc_new_rates() that will
    eventually check that our rate 3000Hz rate is outside the min 3000Hz max
    2000Hz range, will bail out, the error will propagate and we'll
    eventually return -EINVAL.
    
    This solely relies on the fact that clk_calc_new_rates(), and in
    particular clk_core_determine_round_nolock(), won't modify the new rate
    allowing the error to be reported. That assumption won't be true for all
    drivers, and most importantly we'll break that assumption in a later
    patch.
    
    It can also be argued that we shouldn't even reach the point where we're
    calling clk_core_set_rate_nolock().
    
    Let's make an explicit check for disjoints range before we're doing
    anything.
    
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220225143534.405820-4-maxime@cerno.tech
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a7462b5211cd5b74b8815034d038e28cbd96d52
Author: Dongli Zhang <dongli.zhang@oracle.com>
Date:   Wed Mar 2 08:40:32 2022 -0800

    xen: delay xen_hvm_init_time_ops() if kdump is boot on vcpu>=32
    
    [ Upstream commit eed05744322da07dd7e419432dcedf3c2e017179 ]
    
    The sched_clock() can be used very early since commit 857baa87b642
    ("sched/clock: Enable sched clock early"). In addition, with commit
    38669ba205d1 ("x86/xen/time: Output xen sched_clock time from 0"), kdump
    kernel in Xen HVM guest may panic at very early stage when accessing
    &__this_cpu_read(xen_vcpu)->time as in below:
    
    setup_arch()
     -> init_hypervisor_platform()
         -> x86_init.hyper.init_platform = xen_hvm_guest_init()
             -> xen_hvm_init_time_ops()
                 -> xen_clocksource_read()
                     -> src = &__this_cpu_read(xen_vcpu)->time;
    
    This is because Xen HVM supports at most MAX_VIRT_CPUS=32 'vcpu_info'
    embedded inside 'shared_info' during early stage until xen_vcpu_setup() is
    used to allocate/relocate 'vcpu_info' for boot cpu at arbitrary address.
    
    However, when Xen HVM guest panic on vcpu >= 32, since
    xen_vcpu_info_reset(0) would set per_cpu(xen_vcpu, cpu) = NULL when
    vcpu >= 32, xen_clocksource_read() on vcpu >= 32 would panic.
    
    This patch calls xen_hvm_init_time_ops() again later in
    xen_hvm_smp_prepare_boot_cpu() after the 'vcpu_info' for boot vcpu is
    registered when the boot vcpu is >= 32.
    
    This issue can be reproduced on purpose via below command at the guest
    side when kdump/kexec is enabled:
    
    "taskset -c 33 echo c > /proc/sysrq-trigger"
    
    The bugfix for PVM is not implemented due to the lack of testing
    environment.
    
    [boris: xen_hvm_init_time_ops() returns on errors instead of jumping to end]
    
    Cc: Joe Jin <joe.jin@oracle.com>
    Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20220302164032.14569-3-dongli.zhang@oracle.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f8f3a1c10e268df53b201a344b3277e0527ae3b
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sat Jan 29 13:32:45 2022 -0500

    NFSv4: Protect the state recovery thread against direct reclaim
    
    [ Upstream commit 3e17898aca293a24dae757a440a50aa63ca29671 ]
    
    If memory allocation triggers a direct reclaim from the state recovery
    thread, then we can deadlock. Use memalloc_nofs_save/restore to ensure
    that doesn't happen.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96cdf2fdbe89150fbdadccc62b4937accef701fa
Author: Lucas Denefle <lucas.denefle@converge.io>
Date:   Wed Feb 23 11:35:55 2022 +0000

    w1: w1_therm: fixes w1_seq for ds28ea00 sensors
    
    [ Upstream commit 41a92a89eee819298f805c40187ad8b02bb53426 ]
    
    w1_seq was failing due to several devices responding to the
    CHAIN_DONE at the same time. Now properly selects the current
    device in the chain with MATCH_ROM. Also acknowledgment was
    read twice.
    
    Signed-off-by: Lucas Denefle <lucas.denefle@converge.io>
    Link: https://lore.kernel.org/r/20220223113558.232750-1-lucas.denefle@converge.io
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 823f0364d4a4472a1083b47357c4c45b97bce4af
Author: Adam Wujek <dev_public@wujek.eu>
Date:   Fri Dec 3 14:12:07 2021 +0000

    clk: si5341: fix reported clk_rate when output divider is 2
    
    [ Upstream commit 2a8b539433e111c4de364237627ef219d2f6350a ]
    
    SI5341_OUT_CFG_RDIV_FORCE2 shall be checked first to distinguish whether
    a divider for a given output is set to 2 (SI5341_OUT_CFG_RDIV_FORCE2
    is set) or the output is disabled (SI5341_OUT_CFG_RDIV_FORCE2 not set,
    SI5341_OUT_R_REG is set 0).
    Before the change, divider set to 2 (SI5341_OUT_R_REG set to 0) was
    interpreted as output is disabled.
    
    Signed-off-by: Adam Wujek <dev_public@wujek.eu>
    Link: https://lore.kernel.org/r/20211203141125.2447520-1-dev_public@wujek.eu
    Reviewed-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4e16d12bc7c3fa481e0b9d53e57447d84e8dbde
Author: Qinghua Jin <qhjin.dev@gmail.com>
Date:   Wed Mar 23 16:06:23 2022 -0700

    minix: fix bug when opening a file with O_DIRECT
    
    [ Upstream commit 9ce3c0d26c42d279b6c378a03cd6a61d828f19ca ]
    
    Testcase:
    1. create a minix file system and mount it
    2. open a file on the file system with O_RDWR|O_CREAT|O_TRUNC|O_DIRECT
    3. open fails with -EINVAL but leaves an empty file behind. All other
       open() failures don't leave the failed open files behind.
    
    It is hard to check the direct_IO op before creating the inode.  Just as
    ext4 and btrfs do, this patch will resolve the issue by allowing to
    create the file with O_DIRECT but returning error when writing the file.
    
    Link: https://lkml.kernel.org/r/20220107133626.413379-1-qhjin.dev@gmail.com
    Signed-off-by: Qinghua Jin <qhjin.dev@gmail.com>
    Reported-by: Colin Ian King <colin.king@intel.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a95bbfea8f7061eb4b3fecf766cb24d4688d112c
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Mar 23 16:06:14 2022 -0700

    init/main.c: return 1 from handled __setup() functions
    
    [ Upstream commit f9a40b0890658330c83c95511f9d6b396610defc ]
    
    initcall_blacklist() should return 1 to indicate that it handled its
    cmdline arguments.
    
    set_debug_rodata() should return 1 to indicate that it handled its
    cmdline arguments.  Print a warning if the option string is invalid.
    
    This prevents these strings from being added to the 'init' program's
    environment as they are not init arguments/parameters.
    
    Link: https://lkml.kernel.org/r/20220221050901.23985-1-rdunlap@infradead.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4be80aa4bdac8a8107e990225a5e79935246c5a
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Mar 18 14:35:08 2022 +0800

    netlabel: fix out-of-bounds memory accesses
    
    [ Upstream commit f22881de730ebd472e15bcc2c0d1d46e36a87b9c ]
    
    In calipso_map_cat_ntoh(), in the for loop, if the return value of
    netlbl_bitmap_walk() is equal to (net_clen_bits - 1), when
    netlbl_bitmap_walk() is called next time, out-of-bounds memory accesses
    of bitmap[byte_offset] occurs.
    
    The bug was found during fuzzing. The following is the fuzzing report
     BUG: KASAN: slab-out-of-bounds in netlbl_bitmap_walk+0x3c/0xd0
     Read of size 1 at addr ffffff8107bf6f70 by task err_OH/252
    
     CPU: 7 PID: 252 Comm: err_OH Not tainted 5.17.0-rc7+ #17
     Hardware name: linux,dummy-virt (DT)
     Call trace:
      dump_backtrace+0x21c/0x230
      show_stack+0x1c/0x60
      dump_stack_lvl+0x64/0x7c
      print_address_description.constprop.0+0x70/0x2d0
      __kasan_report+0x158/0x16c
      kasan_report+0x74/0x120
      __asan_load1+0x80/0xa0
      netlbl_bitmap_walk+0x3c/0xd0
      calipso_opt_getattr+0x1a8/0x230
      calipso_sock_getattr+0x218/0x340
      calipso_sock_getattr+0x44/0x60
      netlbl_sock_getattr+0x44/0x80
      selinux_netlbl_socket_setsockopt+0x138/0x170
      selinux_socket_setsockopt+0x4c/0x60
      security_socket_setsockopt+0x4c/0x90
      __sys_setsockopt+0xbc/0x2b0
      __arm64_sys_setsockopt+0x6c/0x84
      invoke_syscall+0x64/0x190
      el0_svc_common.constprop.0+0x88/0x200
      do_el0_svc+0x88/0xa0
      el0_svc+0x128/0x1b0
      el0t_64_sync_handler+0x9c/0x120
      el0t_64_sync+0x16c/0x170
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3803d896ddd97c7c16689a5381c0960040727647
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Fri Mar 11 13:19:33 2022 -0800

    Bluetooth: Fix use after free in hci_send_acl
    
    [ Upstream commit f63d24baff787e13b723d86fe036f84bdbc35045 ]
    
    This fixes the following trace caused by receiving
    HCI_EV_DISCONN_PHY_LINK_COMPLETE which does call hci_conn_del without
    first checking if conn->type is in fact AMP_LINK and in case it is
    do properly cleanup upper layers with hci_disconn_cfm:
    
     ==================================================================
        BUG: KASAN: use-after-free in hci_send_acl+0xaba/0xc50
        Read of size 8 at addr ffff88800e404818 by task bluetoothd/142
    
        CPU: 0 PID: 142 Comm: bluetoothd Not tainted
        5.17.0-rc5-00006-gda4022eeac1a #7
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
        rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
        Call Trace:
         <TASK>
         dump_stack_lvl+0x45/0x59
         print_address_description.constprop.0+0x1f/0x150
         kasan_report.cold+0x7f/0x11b
         hci_send_acl+0xaba/0xc50
         l2cap_do_send+0x23f/0x3d0
         l2cap_chan_send+0xc06/0x2cc0
         l2cap_sock_sendmsg+0x201/0x2b0
         sock_sendmsg+0xdc/0x110
         sock_write_iter+0x20f/0x370
         do_iter_readv_writev+0x343/0x690
         do_iter_write+0x132/0x640
         vfs_writev+0x198/0x570
         do_writev+0x202/0x280
         do_syscall_64+0x38/0x90
         entry_SYSCALL_64_after_hwframe+0x44/0xae
        RSP: 002b:00007ffce8a099b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000014
        Code: 0f 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3
        0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 14 00 00 00 0f 05
        <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 89 54 24 1c 48 89 74 24 10
        RDX: 0000000000000001 RSI: 00007ffce8a099e0 RDI: 0000000000000015
        RAX: ffffffffffffffda RBX: 00007ffce8a099e0 RCX: 00007f788fc3cf77
        R10: 00007ffce8af7080 R11: 0000000000000246 R12: 000055e4ccf75580
        RBP: 0000000000000015 R08: 0000000000000002 R09: 0000000000000001
        </TASK>
        R13: 000055e4ccf754a0 R14: 000055e4ccf75cd0 R15: 000055e4ccf4a6b0
    
        Allocated by task 45:
            kasan_save_stack+0x1e/0x40
            __kasan_kmalloc+0x81/0xa0
            hci_chan_create+0x9a/0x2f0
            l2cap_conn_add.part.0+0x1a/0xdc0
            l2cap_connect_cfm+0x236/0x1000
            le_conn_complete_evt+0x15a7/0x1db0
            hci_le_conn_complete_evt+0x226/0x2c0
            hci_le_meta_evt+0x247/0x450
            hci_event_packet+0x61b/0xe90
            hci_rx_work+0x4d5/0xc50
            process_one_work+0x8fb/0x15a0
            worker_thread+0x576/0x1240
            kthread+0x29d/0x340
            ret_from_fork+0x1f/0x30
    
        Freed by task 45:
            kasan_save_stack+0x1e/0x40
            kasan_set_track+0x21/0x30
            kasan_set_free_info+0x20/0x30
            __kasan_slab_free+0xfb/0x130
            kfree+0xac/0x350
            hci_conn_cleanup+0x101/0x6a0
            hci_conn_del+0x27e/0x6c0
            hci_disconn_phylink_complete_evt+0xe0/0x120
            hci_event_packet+0x812/0xe90
            hci_rx_work+0x4d5/0xc50
            process_one_work+0x8fb/0x15a0
            worker_thread+0x576/0x1240
            kthread+0x29d/0x340
            ret_from_fork+0x1f/0x30
    
        The buggy address belongs to the object at ffff88800c0f0500
        The buggy address is located 24 bytes inside of
        which belongs to the cache kmalloc-128 of size 128
        The buggy address belongs to the page:
        128-byte region [ffff88800c0f0500, ffff88800c0f0580)
        flags: 0x100000000000200(slab|node=0|zone=1)
        page:00000000fe45cd86 refcount:1 mapcount:0
        mapping:0000000000000000 index:0x0 pfn:0xc0f0
        raw: 0000000000000000 0000000080100010 00000001ffffffff
        0000000000000000
        raw: 0100000000000200 ffffea00003a2c80 dead000000000004
        ffff8880078418c0
        page dumped because: kasan: bad access detected
        ffff88800c0f0400: 00 00 00 00 00 00 00 00 00 00 00 00 00 fc fc fc
        Memory state around the buggy address:
        >ffff88800c0f0500: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
        ffff88800c0f0480: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
        ffff88800c0f0580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                                    ^
        ==================================================================
        ffff88800c0f0600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    
    Reported-by: Sönke Huster <soenke.huster@eknoes.de>
    Tested-by: Sönke Huster <soenke.huster@eknoes.de>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8beb760f634ecedad36d4efdcd2a7a39fce9a0b5
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Thu Mar 17 02:49:41 2022 -0700

    xtensa: fix DTC warning unit_address_format
    
    [ Upstream commit e85d29ba4b24f68e7a78cb85c55e754362eeb2de ]
    
    DTC issues the following warnings when building xtfpga device trees:
    
     /soc/flash@00000000/partition@0x0: unit name should not have leading "0x"
     /soc/flash@00000000/partition@0x6000000: unit name should not have leading "0x"
     /soc/flash@00000000/partition@0x6800000: unit name should not have leading "0x"
     /soc/flash@00000000/partition@0x7fe0000: unit name should not have leading "0x"
    
    Drop leading 0x from flash partition unit names.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d41bdccb3c299054af4f4afec54409a155281509
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Tue Mar 8 14:03:37 2022 +0100

    usb: dwc3: omap: fix "unbalanced disables for smps10_out1" on omap5evm
    
    [ Upstream commit ac01df343e5a6c6bcead2ed421af1fde30f73e7e ]
    
    Usually, the vbus_regulator (smps10 on omap5evm) boots up disabled.
    
    Hence calling regulator_disable() indirectly through dwc3_omap_set_mailbox()
    during probe leads to:
    
    [   10.332764] WARNING: CPU: 0 PID: 1628 at drivers/regulator/core.c:2853 _regulator_disable+0x40/0x164
    [   10.351919] unbalanced disables for smps10_out1
    [   10.361298] Modules linked in: dwc3_omap(+) clk_twl6040 at24 gpio_twl6040 palmas_gpadc palmas_pwrbutton
    industrialio snd_soc_omap_mcbsp(+) snd_soc_ti_sdma display_connector ti_tpd12s015 drm leds_gpio
    drm_panel_orientation_quirks ip_tables x_tables ipv6 autofs4
    [   10.387818] CPU: 0 PID: 1628 Comm: systemd-udevd Not tainted 5.17.0-rc1-letux-lpae+ #8139
    [   10.405129] Hardware name: Generic OMAP5 (Flattened Device Tree)
    [   10.411455]  unwind_backtrace from show_stack+0x10/0x14
    [   10.416970]  show_stack from dump_stack_lvl+0x40/0x4c
    [   10.422313]  dump_stack_lvl from __warn+0xb8/0x170
    [   10.427377]  __warn from warn_slowpath_fmt+0x70/0x9c
    [   10.432595]  warn_slowpath_fmt from _regulator_disable+0x40/0x164
    [   10.439037]  _regulator_disable from regulator_disable+0x30/0x64
    [   10.445382]  regulator_disable from dwc3_omap_set_mailbox+0x8c/0xf0 [dwc3_omap]
    [   10.453116]  dwc3_omap_set_mailbox [dwc3_omap] from dwc3_omap_probe+0x2b8/0x394 [dwc3_omap]
    [   10.467021]  dwc3_omap_probe [dwc3_omap] from platform_probe+0x58/0xa8
    [   10.481762]  platform_probe from really_probe+0x168/0x2fc
    [   10.481782]  really_probe from __driver_probe_device+0xc4/0xd8
    [   10.481782]  __driver_probe_device from driver_probe_device+0x24/0xa4
    [   10.503762]  driver_probe_device from __driver_attach+0xc4/0xd8
    [   10.510018]  __driver_attach from bus_for_each_dev+0x64/0xa0
    [   10.516001]  bus_for_each_dev from bus_add_driver+0x148/0x1a4
    [   10.524880]  bus_add_driver from driver_register+0xb4/0xf8
    [   10.530678]  driver_register from do_one_initcall+0x90/0x1c4
    [   10.536661]  do_one_initcall from do_init_module+0x4c/0x200
    [   10.536683]  do_init_module from load_module+0x13dc/0x1910
    [   10.551159]  load_module from sys_finit_module+0xc8/0xd8
    [   10.561319]  sys_finit_module from __sys_trace_return+0x0/0x18
    [   10.561336] Exception stack(0xc344bfa8 to 0xc344bff0)
    [   10.561341] bfa0:                   b6fb5778 b6fab8d8 00000007 b6ecfbb8 00000000 b6ed0398
    [   10.561341] bfc0: b6fb5778 b6fab8d8 855c0500 0000017b 00020000 b6f9a3cc 00000000 b6fb5778
    [   10.595500] bfe0: bede18f8 bede18e8 b6ec9aeb b6dda1c2
    [   10.601345] ---[ end trace 0000000000000000 ]---
    
    Fix this unnecessary warning by checking if the regulator is enabled.
    
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Link: https://lore.kernel.org/r/af3b750dc2265d875deaabcf5f80098c9645da45.1646744616.git.hns@goldelico.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cf2ce8967b0d98c8cfa4dc42ef4fcf080f5c836
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Thu Mar 3 09:51:15 2022 +0800

    scsi: libfc: Fix use after free in fc_exch_abts_resp()
    
    [ Upstream commit 271add11994ba1a334859069367e04d2be2ebdd4 ]
    
    fc_exch_release(ep) will decrease the ep's reference count. When the
    reference count reaches zero, it is freed. But ep is still used in the
    following code, which will lead to a use after free.
    
    Return after the fc_exch_release() call to avoid use after free.
    
    Link: https://lore.kernel.org/r/20220303015115.459778-1-niejianglei2021@163.com
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0aeaadc52b05b976c587182d234e3f18e8fce389
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Wed Feb 23 01:30:23 2022 +0000

    MIPS: fix fortify panic when copying asm exception handlers
    
    [ Upstream commit d17b66417308996e7e64b270a3c7f3c1fbd4cfc8 ]
    
    With KCFLAGS="-O3", I was able to trigger a fortify-source
    memcpy() overflow panic on set_vi_srs_handler().
    Although O3 level is not supported in the mainline, under some
    conditions that may've happened with any optimization settings,
    it's just a matter of inlining luck. The panic itself is correct,
    more precisely, 50/50 false-positive and not at the same time.
    From the one side, no real overflow happens. Exception handler
    defined in asm just gets copied to some reserved places in the
    memory.
    But the reason behind is that C code refers to that exception
    handler declares it as `char`, i.e. something of 1 byte length.
    It's obvious that the asm function itself is way more than 1 byte,
    so fortify logics thought we are going to past the symbol declared.
    The standard way to refer to asm symbols from C code which is not
    supposed to be called from C is to declare them as
    `extern const u8[]`. This is fully correct from any point of view,
    as any code itself is just a bunch of bytes (including 0 as it is
    for syms like _stext/_etext/etc.), and the exact size is not known
    at the moment of compilation.
    Adjust the type of the except_vec_vi_*() and related variables.
    Make set_handler() take `const` as a second argument to avoid
    cast-away warnings and give a little more room for optimization.
    
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c871b837489644673cbde4e0a5d7486d100099dc
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Sat Mar 5 03:54:39 2022 -0500

    bnxt_en: Eliminate unintended link toggle during FW reset
    
    [ Upstream commit 7c492a2530c1f05441da541307c2534230dfd59b ]
    
    If the flow control settings have been changed, a subsequent FW reset
    may cause the ethernet link to toggle unnecessarily.  This link toggle
    will increase the down time by a few seconds.
    
    The problem is caused by bnxt_update_phy_setting() detecting a false
    mismatch in the flow control settings between the stored software
    settings and the current FW settings after the FW reset.  This mismatch
    is caused by the AUTONEG bit added to link_info->req_flow_ctrl in an
    inconsistent way in bnxt_set_pauseparam() in autoneg mode.  The AUTONEG
    bit should not be added to link_info->req_flow_ctrl.
    
    Reviewed-by: Colin Winegarden <colin.winegarden@broadcom.com>
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1166f5c139d5f683735e23f00299f07fe116e83e
Author: Harold Huang <baymaxhuang@gmail.com>
Date:   Thu Mar 3 10:24:40 2022 +0800

    tuntap: add sanity checks about msg_controllen in sendmsg
    
    [ Upstream commit 74a335a07a17d131b9263bfdbdcb5e40673ca9ca ]
    
    In patch [1], tun_msg_ctl was added to allow pass batched xdp buffers to
    tun_sendmsg. Although we donot use msg_controllen in this path, we should
    check msg_controllen to make sure the caller pass a valid msg_ctl.
    
    [1]: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=fe8dd45bb7556246c6b76277b1ba4296c91c2505
    
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Suggested-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Harold Huang <baymaxhuang@gmail.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Link: https://lore.kernel.org/r/20220303022441.383865-1-baymaxhuang@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c68dd44fb896b7fee2b135cfe45ca554a29554d1
Author: Sven Eckelmann <sven@narfation.org>
Date:   Mon Feb 28 01:32:40 2022 +0100

    macvtap: advertise link netns via netlink
    
    [ Upstream commit a02192151b7dbf855084c38dca380d77c7658353 ]
    
    Assign rtnl_link_ops->get_link_net() callback so that IFLA_LINK_NETNSID is
    added to rtnetlink messages. This fixes iproute2 which otherwise resolved
    the link interface to an interface in the wrong namespace.
    
    Test commands:
    
      ip netns add nst
      ip link add dummy0 type dummy
      ip link add link macvtap0 link dummy0 type macvtap
      ip link set macvtap0 netns nst
      ip -netns nst link show macvtap0
    
    Before:
    
      10: macvtap0@gre0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 500
          link/ether 5e:8f:ae:1d:60:50 brd ff:ff:ff:ff:ff:ff
    
    After:
    
      10: macvtap0@if2: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 500
          link/ether 5e:8f:ae:1d:60:50 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    
    Reported-by: Leonardo Mörlein <freifunk@irrelefant.net>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Link: https://lore.kernel.org/r/20220228003240.1337426-1-sven@narfation.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 060a485df4ec1183d543317511cb4caa43468b5d
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Mon Feb 28 15:35:37 2022 +0800

    mips: ralink: fix a refcount leak in ill_acc_of_setup()
    
    [ Upstream commit 4a0a1436053b17e50b7c88858fb0824326641793 ]
    
    of_node_put(np) needs to be called when pdev == NULL.
    
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1dd7569b8c707af787872c893dcd948d2d1d8fb2
Author: Dust Li <dust.li@linux.alibaba.com>
Date:   Tue Mar 1 17:44:00 2022 +0800

    net/smc: correct settings of RMB window update limit
    
    [ Upstream commit 6bf536eb5c8ca011d1ff57b5c5f7c57ceac06a37 ]
    
    rmbe_update_limit is used to limit announcing receive
    window updating too frequently. RFC7609 request a minimal
    increase in the window size of 10% of the receive buffer
    space. But current implementation used:
    
      min_t(int, rmbe_size / 10, SOCK_MIN_SNDBUF / 2)
    
    and SOCK_MIN_SNDBUF / 2 == 2304 Bytes, which is almost
    always less then 10% of the receive buffer space.
    
    This causes the receiver always sending CDC message to
    update its consumer cursor when it consumes more then 2K
    of data. And as a result, we may encounter something like
    "TCP silly window syndrome" when sending 2.5~8K message.
    
    This patch fixes this using max(rmbe_size / 10, SOCK_MIN_SNDBUF / 2).
    
    With this patch and SMC autocorking enabled, qperf 2K/4K/8K
    tcp_bw test shows 45%/75%/40% increase in throughput respectively.
    
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fda284a3acbcc44bdfb5c39860fee6a92107525
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Feb 22 16:06:23 2022 -0800

    scsi: aha152x: Fix aha152x_setup() __setup handler return value
    
    [ Upstream commit cc8294ec4738d25e2bb2d71f7d82a9bf7f4a157b ]
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; doing so just pollutes init's
    environment with strings that are not init arguments/parameters).
    
    Return 1 from aha152x_setup() to indicate that the boot option has been
    handled.
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Link: https://lore.kernel.org/r/20220223000623.5920-1-rdunlap@infradead.org
    Cc: "Juergen E. Fischer" <fischer@norbit.de>
    Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0ef536256c95cec0596073d1447262bf9cc1d80
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:57 2022 +0900

    scsi: pm8001: Fix pm8001_mpi_task_abort_resp()
    
    [ Upstream commit 7e6b7e740addcea450041b5be8e42f0a4ceece0f ]
    
    The call to pm8001_ccb_task_free() at the end of
    pm8001_mpi_task_abort_resp() already frees the ccb tag. So when the device
    NCQ_ABORT_ALL_FLAG is set, the tag should not be freed again.  Also change
    the hardcoded 0xBFFFFFFF value to ~NCQ_ABORT_ALL_FLAG as it ought to be.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-19-damien.lemoal@opensource.wdc.com
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a45af7e34091abfd4a20dbc6b5b7ea790215fbd6
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Feb 18 15:40:12 2022 -0500

    drm/amdkfd: make CRAT table missing message informational only
    
    [ Upstream commit 9dff13f9edf755a15f6507874185a3290c1ae8bb ]
    
    The driver has a fallback so make the message informational
    rather than a warning. The driver has a fallback if the
    Component Resource Association Table (CRAT) is missing, so
    make this informational now.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1906
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0320bac5801b31407200227173205d017488f140
Author: Jordy Zomer <jordy@jordyzomer.github.io>
Date:   Sat Jan 29 15:58:39 2022 +0100

    dm ioctl: prevent potential spectre v1 gadget
    
    [ Upstream commit cd9c88da171a62c4b0f1c70e50c75845969fbc18 ]
    
    It appears like cmd could be a Spectre v1 gadget as it's supplied by a
    user and used as an array index. Prevent the contents of kernel memory
    from being leaked to userspace via speculative execution by using
    array_index_nospec.
    
    Signed-off-by: Jordy Zomer <jordy@pwning.systems>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73dd98ac192d9116e7966e068a4368057df2ea55
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Sat Feb 19 17:45:19 2022 +0200

    ipv4: Invalidate neighbour for broadcast address upon address addition
    
    [ Upstream commit 0c51e12e218f20b7d976158fdc18019627326f7a ]
    
    In case user space sends a packet destined to a broadcast address when a
    matching broadcast route is not configured, the kernel will create a
    unicast neighbour entry that will never be resolved [1].
    
    When the broadcast route is configured, the unicast neighbour entry will
    not be invalidated and continue to linger, resulting in packets being
    dropped.
    
    Solve this by invalidating unresolved neighbour entries for broadcast
    addresses after routes for these addresses are internally configured by
    the kernel. This allows the kernel to create a broadcast neighbour entry
    following the next route lookup.
    
    Another possible solution that is more generic but also more complex is
    to have the ARP code register a listener to the FIB notification chain
    and invalidate matching neighbour entries upon the addition of broadcast
    routes.
    
    It is also possible to wave off the issue as a user space problem, but
    it seems a bit excessive to expect user space to be that intimately
    familiar with the inner workings of the FIB/neighbour kernel code.
    
    [1] https://lore.kernel.org/netdev/55a04a8f-56f3-f73c-2aea-2195923f09d1@huawei.com/
    
    Reported-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Tested-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5e4f728d5c959f5a8ea3a5a83cb32f44abbb493
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 8 13:51:47 2022 +0100

    power: supply: axp288-charger: Set Vhold to 4.4V
    
    [ Upstream commit 5ac121b81b4051e7fc83d5b3456a5e499d5bd147 ]
    
    The AXP288's recommended and factory default Vhold value (minimum
    input voltage below which the input current draw will be reduced)
    is 4.4V. This lines up with other charger IC's such as the TI
    bq2419x/bq2429x series which use 4.36V or 4.44V.
    
    For some reason some BIOS-es initialize Vhold to 4.6V or even 4.7V
    which combined with the typical voltage drop over typically low
    wire gauge micro-USB cables leads to the input-current getting
    capped below 1A (with a 2A capable dedicated charger) based on Vhold.
    
    This leads to slow charging, or even to the device slowly discharging
    if the device is in heavy use.
    
    As the Linux AXP288 drivers use the builtin BC1.2 charger detection
    and send the input-current-limit according to the detected charger
    there really is no reason not to use the recommended 4.4V Vhold.
    
    Set Vhold to 4.4V to fix the slow charging issue on various devices.
    
    There is one exception, the special-case of the HP X2 2-in-1s which
    combine this BC1.2 capable PMIC with a Type-C port and a 5V/3A factory
    provided charger with a Type-C plug which does not do BC1.2. These
    have their input-current-limit hardcoded to 3A (like under Windows)
    and use a higher Vhold on purpose to limit the current when used
    with other chargers. To avoid touching Vhold on these HP X2 laptops
    the code setting Vhold is added to an else branch of the if checking
    for these models.
    
    Note this also fixes the sofar unused VBUS_ISPOUT_VHOLD_SET_MASK
    define, which was wrong.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e2dff272cb4244e5abb1f6afd93e1a5379c85ae
Author: Manivannan Sadhasivam <mani@kernel.org>
Date:   Thu Feb 10 20:20:03 2022 +0530

    PCI: pciehp: Add Qualcomm quirk for Command Completed erratum
    
    [ Upstream commit 9f72d4757cbe4d1ed669192f6d23817c9e437c4b ]
    
    The Qualcomm PCI bridge device (Device ID 0x0110) found in chipsets such as
    SM8450 does not set the Command Completed bit unless writes to the Slot
    Command register change "Control" bits.
    
    This results in timeouts like below:
    
      pcieport 0001:00:00.0: pciehp: Timeout on hotplug command 0x03c0 (issued 2020 msec ago)
    
    Add the device to the Command Completed quirk to mark commands "completed"
    immediately unless they change the "Control" bits.
    
    Link: https://lore.kernel.org/r/20220210145003.135907-1-manivannan.sadhasivam@linaro.org
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4225947957f8b1cfe817114e1f89ca996c5f44ce
Author: Neal Liu <neal_liu@aspeedtech.com>
Date:   Tue Feb 8 18:16:57 2022 +0800

    usb: ehci: add pci device support for Aspeed platforms
    
    [ Upstream commit c3c9cee592828528fd228b01d312c7526c584a42 ]
    
    Enable Aspeed quirks in commit 7f2d73788d90 ("usb: ehci:
    handshake CMD_RUN instead of STS_HALT") to support Aspeed
    ehci-pci device.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Neal Liu <neal_liu@aspeedtech.com>
    Link: https://lore.kernel.org/r/20220208101657.76459-1-neal_liu@aspeedtech.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea057ac8c9427bc01271ccbb86fed69a793d3d64
Author: Zhou Guanghui <zhouguanghui1@huawei.com>
Date:   Wed Jan 19 07:07:54 2022 +0000

    iommu/arm-smmu-v3: fix event handling soft lockup
    
    [ Upstream commit 30de2b541af98179780054836b48825fcfba4408 ]
    
    During event processing, events are read from the event queue one
    by one until the queue is empty.If the master device continuously
    requests address access at the same time and the SMMU generates
    events, the cyclic processing of the event takes a long time and
    softlockup warnings may be reported.
    
    arm-smmu-v3 arm-smmu-v3.34.auto: event 0x0a received:
    arm-smmu-v3 arm-smmu-v3.34.auto:        0x00007f220000280a
    arm-smmu-v3 arm-smmu-v3.34.auto:        0x000010000000007e
    arm-smmu-v3 arm-smmu-v3.34.auto:        0x00000000034e8670
    watchdog: BUG: soft lockup - CPU#0 stuck for 22s! [irq/268-arm-smm:247]
    Call trace:
     _dev_info+0x7c/0xa0
     arm_smmu_evtq_thread+0x1c0/0x230
     irq_thread_fn+0x30/0x80
     irq_thread+0x128/0x210
     kthread+0x134/0x138
     ret_from_fork+0x10/0x1c
    Kernel panic - not syncing: softlockup: hung tasks
    
    Fix this by calling cond_resched() after the event information is
    printed.
    
    Signed-off-by: Zhou Guanghui <zhouguanghui1@huawei.com>
    Link: https://lore.kernel.org/r/20220119070754.26528-1-zhouguanghui1@huawei.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e85f5ab589da9b6a3693852e9d60d79b1f6d9e3
Author: Pali Rohár <pali@kernel.org>
Date:   Mon Jan 10 02:49:58 2022 +0100

    PCI: aardvark: Fix support for MSI interrupts
    
    [ Upstream commit b0b0b8b897f8e12b2368e868bd7cdc5742d5c5a9 ]
    
    Aardvark hardware supports Multi-MSI and MSI_FLAG_MULTI_PCI_MSI is already
    set for the MSI chip. But when allocating MSI interrupt numbers for
    Multi-MSI, the numbers need to be properly aligned, otherwise endpoint
    devices send MSI interrupt with incorrect numbers.
    
    Fix this issue by using function bitmap_find_free_region() instead of
    bitmap_find_next_zero_area().
    
    To ensure that aligned MSI interrupt numbers are used by endpoint devices,
    we cannot use Linux virtual irq numbers (as they are random and not
    properly aligned). Instead we need to use the aligned hwirq numbers.
    
    This change fixes receiving MSI interrupts on Armada 3720 boards and
    allows using NVMe disks which use Multi-MSI feature with 3 interrupts.
    
    Without this NVMe disks freeze booting as linux nvme-core.c is waiting
    60s for an interrupt.
    
    Link: https://lore.kernel.org/r/20220110015018.26359-4-kabel@kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0e9d868a1e03b120562da0abb5bfa2c47f3f9fa
Author: Rajneesh Bhardwaj <rajneesh.bhardwaj@amd.com>
Date:   Thu Feb 3 21:18:21 2022 -0500

    drm/amdgpu: Fix recursive locking warning
    
    [ Upstream commit 447c7997b62a5115ba4da846dcdee4fc12298a6a ]
    
    Noticed the below warning while running a pytorch workload on vega10
    GPUs. Change to trylock to avoid conflicts with already held reservation
    locks.
    
    [  +0.000003] WARNING: possible recursive locking detected
    [  +0.000003] 5.13.0-kfd-rajneesh #1030 Not tainted
    [  +0.000004] --------------------------------------------
    [  +0.000002] python/4822 is trying to acquire lock:
    [  +0.000004] ffff932cd9a259f8 (reservation_ww_class_mutex){+.+.}-{3:3},
    at: amdgpu_bo_release_notify+0xc4/0x160 [amdgpu]
    [  +0.000203]
                  but task is already holding lock:
    [  +0.000003] ffff932cbb7181f8 (reservation_ww_class_mutex){+.+.}-{3:3},
    at: ttm_eu_reserve_buffers+0x270/0x470 [ttm]
    [  +0.000017]
                  other info that might help us debug this:
    [  +0.000002]  Possible unsafe locking scenario:
    
    [  +0.000003]        CPU0
    [  +0.000002]        ----
    [  +0.000002]   lock(reservation_ww_class_mutex);
    [  +0.000004]   lock(reservation_ww_class_mutex);
    [  +0.000003]
                   *** DEADLOCK ***
    
    [  +0.000002]  May be due to missing lock nesting notation
    
    [  +0.000003] 7 locks held by python/4822:
    [  +0.000003]  #0: ffff932c4ac028d0 (&process->mutex){+.+.}-{3:3}, at:
    kfd_ioctl_map_memory_to_gpu+0x10b/0x320 [amdgpu]
    [  +0.000232]  #1: ffff932c55e830a8 (&info->lock#2){+.+.}-{3:3}, at:
    amdgpu_amdkfd_gpuvm_map_memory_to_gpu+0x64/0xf60 [amdgpu]
    [  +0.000241]  #2: ffff932cc45b5e68 (&(*mem)->lock){+.+.}-{3:3}, at:
    amdgpu_amdkfd_gpuvm_map_memory_to_gpu+0xdf/0xf60 [amdgpu]
    [  +0.000236]  #3: ffffb2b35606fd28
    (reservation_ww_class_acquire){+.+.}-{0:0}, at:
    amdgpu_amdkfd_gpuvm_map_memory_to_gpu+0x232/0xf60 [amdgpu]
    [  +0.000235]  #4: ffff932cbb7181f8
    (reservation_ww_class_mutex){+.+.}-{3:3}, at:
    ttm_eu_reserve_buffers+0x270/0x470 [ttm]
    [  +0.000015]  #5: ffffffffc045f700 (*(sspp++)){....}-{0:0}, at:
    drm_dev_enter+0x5/0xa0 [drm]
    [  +0.000038]  #6: ffff932c52da7078 (&vm->eviction_lock){+.+.}-{3:3},
    at: amdgpu_vm_bo_update_mapping+0xd5/0x4f0 [amdgpu]
    [  +0.000195]
                  stack backtrace:
    [  +0.000003] CPU: 11 PID: 4822 Comm: python Not tainted
    5.13.0-kfd-rajneesh #1030
    [  +0.000005] Hardware name: GIGABYTE MZ01-CE0-00/MZ01-CE0-00, BIOS F02
    08/29/2018
    [  +0.000003] Call Trace:
    [  +0.000003]  dump_stack+0x6d/0x89
    [  +0.000010]  __lock_acquire+0xb93/0x1a90
    [  +0.000009]  lock_acquire+0x25d/0x2d0
    [  +0.000005]  ? amdgpu_bo_release_notify+0xc4/0x160 [amdgpu]
    [  +0.000184]  ? lock_is_held_type+0xa2/0x110
    [  +0.000006]  ? amdgpu_bo_release_notify+0xc4/0x160 [amdgpu]
    [  +0.000184]  __ww_mutex_lock.constprop.17+0xca/0x1060
    [  +0.000007]  ? amdgpu_bo_release_notify+0xc4/0x160 [amdgpu]
    [  +0.000183]  ? lock_release+0x13f/0x270
    [  +0.000005]  ? lock_is_held_type+0xa2/0x110
    [  +0.000006]  ? amdgpu_bo_release_notify+0xc4/0x160 [amdgpu]
    [  +0.000183]  amdgpu_bo_release_notify+0xc4/0x160 [amdgpu]
    [  +0.000185]  ttm_bo_release+0x4c6/0x580 [ttm]
    [  +0.000010]  amdgpu_bo_unref+0x1a/0x30 [amdgpu]
    [  +0.000183]  amdgpu_vm_free_table+0x76/0xa0 [amdgpu]
    [  +0.000189]  amdgpu_vm_free_pts+0xb8/0xf0 [amdgpu]
    [  +0.000189]  amdgpu_vm_update_ptes+0x411/0x770 [amdgpu]
    [  +0.000191]  amdgpu_vm_bo_update_mapping+0x324/0x4f0 [amdgpu]
    [  +0.000191]  amdgpu_vm_bo_update+0x251/0x610 [amdgpu]
    [  +0.000191]  update_gpuvm_pte+0xcc/0x290 [amdgpu]
    [  +0.000229]  ? amdgpu_vm_bo_map+0xd7/0x130 [amdgpu]
    [  +0.000190]  amdgpu_amdkfd_gpuvm_map_memory_to_gpu+0x912/0xf60
    [amdgpu]
    [  +0.000234]  kfd_ioctl_map_memory_to_gpu+0x182/0x320 [amdgpu]
    [  +0.000218]  kfd_ioctl+0x2b9/0x600 [amdgpu]
    [  +0.000216]  ? kfd_ioctl_unmap_memory_from_gpu+0x270/0x270 [amdgpu]
    [  +0.000216]  ? lock_release+0x13f/0x270
    [  +0.000006]  ? __fget_files+0x107/0x1e0
    [  +0.000007]  __x64_sys_ioctl+0x8b/0xd0
    [  +0.000007]  do_syscall_64+0x36/0x70
    [  +0.000004]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  +0.000007] RIP: 0033:0x7fbff90a7317
    [  +0.000004] Code: b3 66 90 48 8b 05 71 4b 2d 00 64 c7 00 26 00 00 00
    48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f
    05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 41 4b 2d 00 f7 d8 64 89 01 48
    [  +0.000005] RSP: 002b:00007fbe301fe648 EFLAGS: 00000246 ORIG_RAX:
    0000000000000010
    [  +0.000006] RAX: ffffffffffffffda RBX: 00007fbcc402d820 RCX:
    00007fbff90a7317
    [  +0.000003] RDX: 00007fbe301fe690 RSI: 00000000c0184b18 RDI:
    0000000000000004
    [  +0.000003] RBP: 00007fbe301fe690 R08: 0000000000000000 R09:
    00007fbcc402d880
    [  +0.000003] R10: 0000000002001000 R11: 0000000000000246 R12:
    00000000c0184b18
    [  +0.000003] R13: 0000000000000004 R14: 00007fbf689593a0 R15:
    00007fbcc402d820
    
    Cc: Christian König <christian.koenig@amd.com>
    Cc: Felix Kuehling <Felix.Kuehling@amd.com>
    Cc: Alex Deucher <Alexander.Deucher@amd.com>
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Rajneesh Bhardwaj <rajneesh.bhardwaj@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cee00fd8004f73ec6c84183dd95ce7ed5e94ef0c
Author: Sourabh Jain <sourabhjain@linux.ibm.com>
Date:   Fri Feb 4 14:26:01 2022 +0530

    powerpc: Set crashkernel offset to mid of RMA region
    
    [ Upstream commit 7c5ed82b800d8615cdda00729e7b62e5899f0b13 ]
    
    On large config LPARs (having 192 and more cores), Linux fails to boot
    due to insufficient memory in the first memblock. It is due to the
    memory reservation for the crash kernel which starts at 128MB offset of
    the first memblock. This memory reservation for the crash kernel doesn't
    leave enough space in the first memblock to accommodate other essential
    system resources.
    
    The crash kernel start address was set to 128MB offset by default to
    ensure that the crash kernel get some memory below the RMA region which
    is used to be of size 256MB. But given that the RMA region size can be
    512MB or more, setting the crash kernel offset to mid of RMA size will
    leave enough space for the kernel to allocate memory for other system
    resources.
    
    Since the above crash kernel offset change is only applicable to the LPAR
    platform, the LPAR feature detection is pushed before the crash kernel
    reservation. The rest of LPAR specific initialization will still
    be done during pseries_probe_fw_features as usual.
    
    This patch is dependent on changes to paca allocation for boot CPU. It
    expect boot CPU to discover 1T segment support which is introduced by
    the patch posted here:
    https://lists.ozlabs.org/pipermail/linuxppc-dev/2022-January/239175.html
    
    Reported-by: Abdul haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Sourabh Jain <sourabhjain@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220204085601.107257-1-sourabhjain@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbb7b033209c35479d2006fceefcf9bb465e1030
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Feb 4 12:15:45 2022 -0800

    ipv6: make mc_forwarding atomic
    
    [ Upstream commit 145c7a793838add5e004e7d49a67654dc7eba147 ]
    
    This fixes minor data-races in ip6_mc_input() and
    batadv_mcast_mla_rtr_flags_softif_get_ipv6()
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f24efe239dfe520d44013e48e1b1b43aa6ad096
Author: Evgeny Boger <boger@wirenboard.com>
Date:   Wed Jan 12 11:47:27 2022 +0300

    power: supply: axp20x_battery: properly report current when discharging
    
    [ Upstream commit d4f408cdcd26921c1268cb8dcbe8ffb6faf837f3 ]
    
    As stated in [1], negative current values are used for discharging
    batteries.
    
    AXP PMICs internally have two different ADC channels for shunt current
    measurement: one used during charging and one during discharging.
    The values reported by these ADCs are unsigned.
    While the driver properly selects ADC channel to get the data from,
    it doesn't apply negative sign when reporting discharging current.
    
    [1] Documentation/ABI/testing/sysfs-class-power
    
    Signed-off-by: Evgeny Boger <boger@wirenboard.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3575fa75da6ccf979b9c09312e85282299782d9c
Author: Yang Guang <yang.guang5@zte.com.cn>
Date:   Thu Jan 27 08:03:46 2022 +0800

    scsi: bfa: Replace snprintf() with sysfs_emit()
    
    [ Upstream commit 2245ea91fd3a04cafbe2f54911432a8657528c3b ]
    
    coccinelle report:
    ./drivers/scsi/bfa/bfad_attr.c:908:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:860:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:888:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:853:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:808:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:728:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:822:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:927:9-17:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:900:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:874:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:714:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/bfa/bfad_attr.c:839:8-16:
    WARNING: use scnprintf or sprintf
    
    Use sysfs_emit() instead of scnprintf() or sprintf().
    
    Link: https://lore.kernel.org/r/def83ff75faec64ba592b867a8499b1367bae303.1643181468.git.yang.guang5@zte.com.cn
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Yang Guang <yang.guang5@zte.com.cn>
    Signed-off-by: David Yang <davidcomponentone@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cd46ee37456555117bcde0e0a5a81d59f0a714d
Author: Yang Guang <yang.guang5@zte.com.cn>
Date:   Thu Jan 27 08:00:59 2022 +0800

    scsi: mvsas: Replace snprintf() with sysfs_emit()
    
    [ Upstream commit 0ad3867b0f13e45cfee5a1298bfd40eef096116c ]
    
    coccinelle report:
    ./drivers/scsi/mvsas/mv_init.c:699:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/scsi/mvsas/mv_init.c:747:8-16:
    WARNING: use scnprintf or sprintf
    
    Use sysfs_emit() instead of scnprintf() or sprintf().
    
    Link: https://lore.kernel.org/r/c1711f7cf251730a8ceb5bdfc313bf85662b3395.1643182948.git.yang.guang5@zte.com.cn
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Yang Guang <yang.guang5@zte.com.cn>
    Signed-off-by: David Yang <davidcomponentone@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca5da71a5838366a4b45052928d350d0fb9e9e64
Author: Jakub Sitnicki <jakub@cloudflare.com>
Date:   Sun Jan 30 12:55:17 2022 +0100

    bpf: Make dst_port field in struct bpf_sock 16-bit wide
    
    [ Upstream commit 4421a582718ab81608d8486734c18083b822390d ]
    
    Menglong Dong reports that the documentation for the dst_port field in
    struct bpf_sock is inaccurate and confusing. From the BPF program PoV, the
    field is a zero-padded 16-bit integer in network byte order. The value
    appears to the BPF user as if laid out in memory as so:
    
      offsetof(struct bpf_sock, dst_port) + 0  <port MSB>
                                          + 8  <port LSB>
                                          +16  0x00
                                          +24  0x00
    
    32-, 16-, and 8-bit wide loads from the field are all allowed, but only if
    the offset into the field is 0.
    
    32-bit wide loads from dst_port are especially confusing. The loaded value,
    after converting to host byte order with bpf_ntohl(dst_port), contains the
    port number in the upper 16-bits.
    
    Remove the confusion by splitting the field into two 16-bit fields. For
    backward compatibility, allow 32-bit wide loads from offsetof(struct
    bpf_sock, dst_port).
    
    While at it, allow loads 8-bit loads at offset [0] and [1] from dst_port.
    
    Reported-by: Menglong Dong <imagedong@tencent.com>
    Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/r/20220130115518.213259-2-jakub@cloudflare.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90dbc4c6649fc1ace269ce0401ecae2050e0a004
Author: Maxim Kiselev <bigunclemax@gmail.com>
Date:   Thu Dec 30 18:11:21 2021 +0300

    powerpc: dts: t104xrdb: fix phy type for FMAN 4/5
    
    [ Upstream commit 17846485dff91acce1ad47b508b633dffc32e838 ]
    
    T1040RDB has two RTL8211E-VB phys which requires setting
    of internal delays for correct work.
    
    Changing the phy-connection-type property to `rgmii-id`
    will fix this issue.
    
    Signed-off-by: Maxim Kiselev <bigunclemax@gmail.com>
    Reviewed-by: Maxim Kochetkov <fido_max@inbox.ru>
    Reviewed-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211230151123.1258321-1-bigunclemax@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9388d876099710da96a0e64b512b08c019d7fc19
Author: Yang Guang <yang.guang5@zte.com.cn>
Date:   Thu Jan 27 08:02:36 2022 +0800

    ptp: replace snprintf with sysfs_emit
    
    [ Upstream commit e2cf07654efb0fd7bbcb475c6f74be7b5755a8fd ]
    
    coccinelle report:
    ./drivers/ptp/ptp_sysfs.c:17:8-16:
    WARNING: use scnprintf or sprintf
    ./drivers/ptp/ptp_sysfs.c:390:8-16:
    WARNING: use scnprintf or sprintf
    
    Use sysfs_emit instead of scnprintf or sprintf makes more sense.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Yang Guang <yang.guang5@zte.com.cn>
    Signed-off-by: David Yang <davidcomponentone@gmail.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4009f104b02b223d1a11d74b36b1cc083bc37028
Author: Xin Xiong <xiongx18@fudan.edu.cn>
Date:   Fri Jan 21 15:46:23 2022 -0500

    drm/amd/amdgpu/amdgpu_cs: fix refcount leak of a dma_fence obj
    
    [ Upstream commit dfced44f122c500004a48ecc8db516bb6a295a1b ]
    
    This issue takes place in an error path in
    amdgpu_cs_fence_to_handle_ioctl(). When `info->in.what` falls into
    default case, the function simply returns -EINVAL, forgetting to
    decrement the reference count of a dma_fence obj, which is bumped
    earlier by amdgpu_cs_get_fence(). This may result in reference count
    leaks.
    
    Fix it by decreasing the refcount of specific object before returning
    the error code.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4e2f577271e158d87a916afb4e87415a88ce856
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Sun Dec 26 22:12:13 2021 -0500

    ath5k: fix OOB in ath5k_eeprom_read_pcal_info_5111
    
    [ Upstream commit 564d4eceb97eaf381dd6ef6470b06377bb50c95a ]
    
    The bug was found during fuzzing. Stacktrace locates it in
    ath5k_eeprom_convert_pcal_info_5111.
    When none of the curve is selected in the loop, idx can go
    up to AR5K_EEPROM_N_PD_CURVES. The line makes pd out of bound.
    pd = &chinfo[pier].pd_curves[idx];
    
    There are many OOB writes using pd later in the code. So I
    added a sanity check for idx. Checks for other loops involving
    AR5K_EEPROM_N_PD_CURVES are not needed as the loop index is not
    used outside the loops.
    
    The patch is NOT tested with real device.
    
    The following is the fuzzing report
    
    BUG: KASAN: slab-out-of-bounds in ath5k_eeprom_read_pcal_info_5111+0x126a/0x1390 [ath5k]
    Write of size 1 at addr ffff8880174a4d60 by task modprobe/214
    
    CPU: 0 PID: 214 Comm: modprobe Not tainted 5.6.0 #1
    Call Trace:
     dump_stack+0x76/0xa0
     print_address_description.constprop.0+0x16/0x200
     ? ath5k_eeprom_read_pcal_info_5111+0x126a/0x1390 [ath5k]
     ? ath5k_eeprom_read_pcal_info_5111+0x126a/0x1390 [ath5k]
     __kasan_report.cold+0x37/0x7c
     ? ath5k_eeprom_read_pcal_info_5111+0x126a/0x1390 [ath5k]
     kasan_report+0xe/0x20
     ath5k_eeprom_read_pcal_info_5111+0x126a/0x1390 [ath5k]
     ? apic_timer_interrupt+0xa/0x20
     ? ath5k_eeprom_init_11a_pcal_freq+0xbc0/0xbc0 [ath5k]
     ? ath5k_pci_eeprom_read+0x228/0x3c0 [ath5k]
     ath5k_eeprom_init+0x2513/0x6290 [ath5k]
     ? ath5k_eeprom_init_11a_pcal_freq+0xbc0/0xbc0 [ath5k]
     ? usleep_range+0xb8/0x100
     ? apic_timer_interrupt+0xa/0x20
     ? ath5k_eeprom_read_pcal_info_2413+0x2f20/0x2f20 [ath5k]
     ath5k_hw_init+0xb60/0x1970 [ath5k]
     ath5k_init_ah+0x6fe/0x2530 [ath5k]
     ? kasprintf+0xa6/0xe0
     ? ath5k_stop+0x140/0x140 [ath5k]
     ? _dev_notice+0xf6/0xf6
     ? apic_timer_interrupt+0xa/0x20
     ath5k_pci_probe.cold+0x29a/0x3d6 [ath5k]
     ? ath5k_pci_eeprom_read+0x3c0/0x3c0 [ath5k]
     ? mutex_lock+0x89/0xd0
     ? ath5k_pci_eeprom_read+0x3c0/0x3c0 [ath5k]
     local_pci_probe+0xd3/0x160
     pci_device_probe+0x23f/0x3e0
     ? pci_device_remove+0x280/0x280
     ? pci_device_remove+0x280/0x280
     really_probe+0x209/0x5d0
    
    Reported-by: Brendan Dolan-Gavitt <brendandg@nyu.edu>
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/YckvDdj3mtCkDRIt@a-10-27-26-18.dynapool.vpn.nyu.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61ffe2183351cf41ea131d08fa26dac2e1432081
Author: Anisse Astier <anisse@astier.eu>
Date:   Wed Dec 29 23:22:00 2021 +0100

    drm: Add orientation quirk for GPD Win Max
    
    [ Upstream commit 0b464ca3e0dd3cec65f28bc6d396d82f19080f69 ]
    
    Panel is 800x1280, but mounted on a laptop form factor, sideways.
    
    Signed-off-by: Anisse Astier <anisse@astier.eu>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211229222200.53128-3-anisse@astier.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01f700bae439fdfc56f0e2c0d0f56b0d20aaa999
Author: Jim Mattson <jmattson@google.com>
Date:   Sat Feb 26 15:41:31 2022 -0800

    KVM: x86/svm: Clear reserved bits written to PerfEvtSeln MSRs
    
    [ Upstream commit 9b026073db2f1ad0e4d8b61c83316c8497981037 ]
    
    AMD EPYC CPUs never raise a #GP for a WRMSR to a PerfEvtSeln MSR. Some
    reserved bits are cleared, and some are not. Specifically, on
    Zen3/Milan, bits 19 and 42 are not cleared.
    
    When emulating such a WRMSR, KVM should not synthesize a #GP,
    regardless of which bits are set. However, undocumented bits should
    not be passed through to the hardware MSR. So, rather than checking
    for reserved bits and synthesizing a #GP, just clear the reserved
    bits.
    
    This may seem pedantic, but since KVM currently does not support the
    "Host/Guest Only" bits (41:40), it is necessary to clear these bits
    rather than synthesizing #GP, because some popular guests (e.g Linux)
    will set the "Host Only" bit even on CPUs that don't support
    EFER.SVME, and they don't expect a #GP.
    
    For example,
    
    root@Ubuntu1804:~# perf stat -e r26 -a sleep 1
    
     Performance counter stats for 'system wide':
    
                     0      r26
    
           1.001070977 seconds time elapsed
    
    Feb 23 03:59:58 Ubuntu1804 kernel: [  405.379957] unchecked MSR access error: WRMSR to 0xc0010200 (tried to write 0x0000020000130026) at rIP: 0xffffffff9b276a28 (native_write_msr+0x8/0x30)
    Feb 23 03:59:58 Ubuntu1804 kernel: [  405.379958] Call Trace:
    Feb 23 03:59:58 Ubuntu1804 kernel: [  405.379963]  amd_pmu_disable_event+0x27/0x90
    
    Fixes: ca724305a2b0 ("KVM: x86/vPMU: Implement AMD vPMU code for KVM")
    Reported-by: Lotus Fenn <lotusf@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Like Xu <likexu@tencent.com>
    Reviewed-by: David Dunn <daviddunn@google.com>
    Message-Id: <20220226234131.2167175-1-jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5476f8d359fc2137ea4eb11d3b22c89f03a1529
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Mar 12 07:36:09 2022 +0100

    ARM: 9187/1: JIVE: fix return value of __setup handler
    
    [ Upstream commit 8b2360c7157b462c4870d447d1e65d30ef31f9aa ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) argument or environment
    strings. Also, error return codes don't mean anything to
    obsolete_checksetup() -- only non-zero (usually 1) or zero.
    So return 1 from jive_mtdset().
    
    Fixes: 9db829f485c5 ("[ARM] JIVE: Initial machine support for Logitech Jive")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Ben Dooks <ben-linux@fluff.org>
    Cc: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: Alim Akhtar <alim.akhtar@samsung.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-samsung-soc@vger.kernel.org
    Cc: patches@armlinux.org.uk
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63efb9003069811e82cb2f3f4a50de34021c5544
Author: Fangrui Song <maskray@google.com>
Date:   Mon Mar 21 18:26:17 2022 -0700

    riscv module: remove (NOLOAD)
    
    [ Upstream commit 60210a3d86dc57ce4a76a366e7841dda746a33f7 ]
    
    On ELF, (NOLOAD) sets the section type to SHT_NOBITS[1]. It is conceptually
    inappropriate for .plt, .got, and .got.plt sections which are always
    SHT_PROGBITS.
    
    In GNU ld, if PLT entries are needed, .plt will be SHT_PROGBITS anyway
    and (NOLOAD) will be essentially ignored. In ld.lld, since
    https://reviews.llvm.org/D118840 ("[ELF] Support (TYPE=<value>) to
    customize the output section type"), ld.lld will report a `section type
    mismatch` error (later changed to a warning). Just remove (NOLOAD) to
    fix the warning.
    
    [1] https://lld.llvm.org/ELF/linker_script.html As of today, "The
    section should be marked as not loadable" on
    https://sourceware.org/binutils/docs/ld/Output-Section-Type.html is
    outdated for ELF.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1597
    Fixes: ab1ef68e5401 ("RISC-V: Add sections of PLT and GOT for kernel module")
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68a7bb69486e679fc48ca67c9abf167fcdf60645
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Mar 3 16:50:30 2022 +0800

    rtc: wm8350: Handle error for wm8350_register_irq
    
    [ Upstream commit 43f0269b6b89c1eec4ef83c48035608f4dcdd886 ]
    
    As the potential failure of the wm8350_register_irq(),
    it should be better to check it and return error if fails.
    Also, it need not free 'wm_rtc->rtc' since it will be freed
    automatically.
    
    Fixes: 077eaf5b40ec ("rtc: rtc-wm8350: add support for WM8350 RTC")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20220303085030.291793-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d95e0367fdc52a4e117926b80528a8146a63eb6f
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:38 2021 +0800

    ubifs: Rectify space amount budget for mkdir/tmpfile operations
    
    [ Upstream commit a6dab6607d4681d227905d5198710b575dbdb519 ]
    
    UBIFS should make sure the flash has enough space to store dirty (Data
    that is newer than disk) data (in memory), space budget is exactly
    designed to do that. If space budget calculates less data than we need,
    'make_reservation()' will do more work(return -ENOSPC if no free space
    lelf, sometimes we can see "cannot reserve xxx bytes in jhead xxx, error
    -28" in ubifs error messages) with ubifs inodes locked, which may effect
    other syscalls.
    
    A simple way to decide how much space do we need when make a budget:
    See how much space is needed by 'make_reservation()' in ubifs_jnl_xxx()
    function according to corresponding operation.
    
    It's better to report ENOSPC in ubifs_budget_space(), as early as we can.
    
    Fixes: 474b93704f32163 ("ubifs: Implement O_TMPFILE")
    Fixes: 1e51764a3c2ac05 ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e24d03dd4fee589da500861967d9fd9c0e6276d
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Mar 25 14:21:40 2022 +0100

    KVM: x86: Forbid VMM to set SYNIC/STIMER MSRs when SynIC wasn't activated
    
    commit b1e34d325397a33d97d845e312d7cf2a8b646b44 upstream.
    
    Setting non-zero values to SYNIC/STIMER MSRs activates certain features,
    this should not happen when KVM_CAP_HYPERV_SYNIC{,2} was not activated.
    
    Note, it would've been better to forbid writing anything to SYNIC/STIMER
    MSRs, including zeroes, however, at least QEMU tries clearing
    HV_X64_MSR_STIMER0_CONFIG without SynIC. HV_X64_MSR_EOM MSR is somewhat
    'special' as writing zero there triggers an action, this also should not
    happen when SynIC wasn't activated.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20220325132140.25650-4-vkuznets@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1553126eccf4fad17afaeaed08db9e5944aa2d55
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Mar 29 12:56:24 2022 -0400

    KVM: x86/mmu: do compare-and-exchange of gPTE via the user address
    
    commit 2a8859f373b0a86f0ece8ec8312607eacf12485d upstream.
    
    FNAME(cmpxchg_gpte) is an inefficient mess.  It is at least decent if it
    can go through get_user_pages_fast(), but if it cannot then it tries to
    use memremap(); that is not just terribly slow, it is also wrong because
    it assumes that the VM_PFNMAP VMA is contiguous.
    
    The right way to do it would be to do the same thing as
    hva_to_pfn_remapped() does since commit add6a0cd1c5b ("KVM: MMU: try to
    fix up page faults before giving up", 2016-07-05), using follow_pte()
    and fixup_user_fault() to determine the correct address to use for
    memremap().  To do this, one could for example extract hva_to_pfn()
    for use outside virt/kvm/kvm_main.c.  But really there is no reason to
    do that either, because there is already a perfectly valid address to
    do the cmpxchg() on, only it is a userspace address.  That means doing
    user_access_begin()/user_access_end() and writing the code in assembly
    to handle exceptions correctly.  Worse, the guest PTE can be 8-byte
    even on i686 so there is the extra complication of using cmpxchg8b to
    account for.  But at least it is an efficient mess.
    
    (Thanks to Linus for suggesting improvement on the inline assembly).
    
    Reported-by: Qiuhao Li <qiuhao@sysec.org>
    Reported-by: Gaoning Pan <pgn@zju.edu.cn>
    Reported-by: Yongkang Jia <kangel@zju.edu.cn>
    Reported-by: syzbot+6cde2282daa792c49ab8@syzkaller.appspotmail.com
    Debugged-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Tested-by: Maxim Levitsky <mlevitsk@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: bd53cb35a3e9 ("X86/KVM: Handle PFNs outside of kernel reach when touching GPTEs")
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb05ef70b621a481a6030c3ce97ea8db164b7e07
Author: Martin Varghese <martin.varghese@nokia.com>
Date:   Mon Mar 28 11:11:48 2022 +0530

    openvswitch: Fixed nd target mask field in the flow dump.
    
    commit f19c44452b58a84d95e209b847f5495d91c9983a upstream.
    
    IPv6 nd target mask was not getting populated in flow dump.
    
    In the function __ovs_nla_put_key the icmp code mask field was checked
    instead of icmp code key field to classify the flow as neighbour discovery.
    
    ufid:bdfbe3e5-60c2-43b0-a5ff-dfcac1c37328, recirc_id(0),dp_hash(0/0),
    skb_priority(0/0),in_port(ovs-nm1),skb_mark(0/0),ct_state(0/0),
    ct_zone(0/0),ct_mark(0/0),ct_label(0/0),
    eth(src=00:00:00:00:00:00/00:00:00:00:00:00,
    dst=00:00:00:00:00:00/00:00:00:00:00:00),
    eth_type(0x86dd),
    ipv6(src=::/::,dst=::/::,label=0/0,proto=58,tclass=0/0,hlimit=0/0,frag=no),
    icmpv6(type=135,code=0),
    nd(target=2001::2/::,
    sll=00:00:00:00:00:00/00:00:00:00:00:00,
    tll=00:00:00:00:00:00/00:00:00:00:00:00),
    packets:10, bytes:860, used:0.504s, dp:ovs, actions:ovs-nm2
    
    Fixes: e64457191a25 (openvswitch: Restructure datapath.c and flow.c)
    Signed-off-by: Martin Varghese <martin.varghese@nokia.com>
    Link: https://lore.kernel.org/r/20220328054148.3057-1-martinvarghesenokia@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce8043771fcda5572fc6ee6cc857fe12e310bed3
Author: Anton Ivanov <anton.ivanov@cambridgegreys.com>
Date:   Tue Feb 22 12:44:10 2022 +0000

    um: Fix uml_mconsole stop/go
    
    commit 1a3a6a2a035bb6c3a7ef4c788d8fd69a7b2d6284 upstream.
    
    Moving to an EPOLL based IRQ controller broke uml_mconsole stop/go
    commands. This fixes it and restores stop/go functionality.
    
    Fixes: ff6a17989c08 ("Epoll based IRQ controller")
    Signed-off-by: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 337eb9557035b7019549353e41f86eb9165f14d5
Author: Kuldeep Singh <singh.kuldeep87k@gmail.com>
Date:   Sat Mar 26 09:53:09 2022 +0530

    ARM: dts: spear13xx: Update SPI dma properties
    
    commit 31d3687d6017c7ce6061695361598d9cda70807a upstream.
    
    Reorder dmas and dma-names property for spi controller node to make it
    compliant with bindings.
    
    Fixes: 6e8887f60f60 ("ARM: SPEAr13xx: Pass generic DW DMAC platform data from DT")
    Signed-off-by: Kuldeep Singh <singh.kuldeep87k@gmail.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Link: https://lore.kernel.org/r/20220326042313.97862-2-singh.kuldeep87k@gmail.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e48a6662356dc03d991fa749d0f5285f88f1cfd
Author: Kuldeep Singh <singh.kuldeep87k@gmail.com>
Date:   Sat Mar 26 09:53:10 2022 +0530

    ARM: dts: spear1340: Update serial node properties
    
    commit 583d6b0062640def86f3265aa1042ecb6672516e upstream.
    
    Reorder dma and dma-names property for serial node to make it compliant
    with bindings.
    
    Fixes: 6e8887f60f60 ("ARM: SPEAr13xx: Pass generic DW DMAC platform data from DT")
    Signed-off-by: Kuldeep Singh <singh.kuldeep87k@gmail.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Link: https://lore.kernel.org/r/20220326042313.97862-3-singh.kuldeep87k@gmail.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f19400e595784b263ea9e188d61ec028ac313a3
Author: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Date:   Wed Jan 12 18:00:29 2022 +0100

    ASoC: topology: Allow TLV control to be either read or write
    
    commit feb00b736af64875560f371fe7f58b0b7f239046 upstream.
    
    There is no reason to force readwrite access on TLV controls. It can be
    either read, write or both. This is further evidenced in code where it
    performs following checks:
                    if ((k->access & SNDRV_CTL_ELEM_ACCESS_TLV_READ) && !sbe->get)
                            return -EINVAL;
                    if ((k->access & SNDRV_CTL_ELEM_ACCESS_TLV_WRITE) && !sbe->put)
                            return -EINVAL;
    
    Fixes: 1a3232d2f61d ("ASoC: topology: Add support for TLV bytes controls")
    Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20220112170030.569712-3-amadeuszx.slawinski@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32a76a5574949a190a0fc32afa9bba0f08771109
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:42 2021 +0800

    ubi: fastmap: Return error code if memory allocation fails in add_aeb()
    
    commit c3c07fc25f37c157fde041b3a0c3dfcb1590cbce upstream.
    
    Abort fastmap scanning and return error code if memory allocation fails
    in add_aeb(). Otherwise ubi will get wrong peb statistics information
    after scanning.
    
    Fixes: dbb7d2a88d2a7b ("UBI: Add fastmap core")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c1a26c3d32560af30af6fc42159844a18e590a0
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Dec 16 12:16:33 2021 +0100

    dt-bindings: spi: mxic: The interrupt property is not mandatory
    
    commit 90c204d3195a795f77f5bce767e311dd1c59ca17 upstream.
    
    The interrupt property is not mandatory at all, this property should not
    be part of the required properties list, so move it into the optional
    properties list.
    
    Fixes: 326e5c8d4a87 ("dt-binding: spi: Document Macronix controller bindings")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20211216111654.238086-8-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97ba943e9940998a866423d053820baec77ac589
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Dec 16 12:16:28 2021 +0100

    dt-bindings: mtd: nand-controller: Fix a comment in the examples
    
    commit 0e7f1b557974ce297e5e4c9d4245720fbb489886 upstream.
    
    The controller properties should be in the controller 'parent' node,
    while properties in the children nodes are specific to the NAND
    *chip*. This error was already present during the yaml conversion.
    
    Fixes: 2d472aba15ff ("mtd: nand: document the NAND controller/NAND chip DT representation")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20211216111654.238086-3-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a42ab650d33ba77a535d6b5e49ef747fb339bf36
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Dec 16 12:16:27 2021 +0100

    dt-bindings: mtd: nand-controller: Fix the reg property description
    
    commit 93f2ec9e401276fb4ea9903194a5bfcf175f9a2c upstream.
    
    The reg property of a NAND device always references the chip-selects.
    The ready/busy lines are described in the nand-rb property. I believe
    this was a harmless copy/paste error during the conversion to yaml.
    
    Fixes: 212e49693592 ("dt-bindings: mtd: Add YAML schemas for the generic NAND options")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20211216111654.238086-2-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d418a0a5626ced5e4770f33aee8ab42771a488e
Author: Hengqi Chen <hengqi.chen@gmail.com>
Date:   Thu Mar 10 23:53:35 2022 +0800

    bpf: Fix comment for helper bpf_current_task_under_cgroup()
    
    commit 58617014405ad5c9f94f464444f4972dabb71ca7 upstream.
    
    Fix the descriptions of the return values of helper bpf_current_task_under_cgroup().
    
    Fixes: c6b5fb8690fa ("bpf: add documentation for eBPF helpers (42-50)")
    Signed-off-by: Hengqi Chen <hengqi.chen@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20220310155335.1278783-1-hengqi.chen@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a075e95614f083f96bded59a2fdfc1ad6ce01238
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 22 14:47:52 2022 -0700

    mm/usercopy: return 1 from hardened_usercopy __setup() handler
    
    commit 05fe3c103f7e6b8b4fca8a7001dfc9ed4628085b upstream.
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; it just pollutes init's
    environment).  This prevents:
    
      Unknown kernel command line parameters \
      "BOOT_IMAGE=/boot/bzImage-517rc5 hardened_usercopy=off", will be \
      passed to user space.
    
      Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         hardened_usercopy=off
    or
         hardened_usercopy=on
    but when "hardened_usercopy=foo" is used, there is no Unknown kernel
    command line parameter.
    
    Return 1 to indicate that the boot option has been handled.
    Print a warning if strtobool() returns an error on the option string,
    but do not mark this as in unknown command line option and do not cause
    init's environment to be polluted with this string.
    
    Link: https://lkml.kernel.org/r/20220222034249.14795-1-rdunlap@infradead.org
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: b5cb15d9372ab ("usercopy: Allow boot cmdline disabling of hardening")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Acked-by: Chris von Recklinghausen <crecklin@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abc0b4ea02f664c720a1b47cd0a86a8f7f051515
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 22 14:40:31 2022 -0700

    mm/memcontrol: return 1 from cgroup.memory __setup() handler
    
    commit 460a79e18842caca6fa0c415de4a3ac1e671ac50 upstream.
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; it just pollutes init's
    environment).
    
    The only reason that this particular __setup handler does not pollute
    init's environment is that the setup string contains a '.', as in
    "cgroup.memory".  This causes init/main.c::unknown_boottoption() to
    consider it to be an "Unused module parameter" and ignore it.  (This is
    for parsing of loadable module parameters any time after kernel init.)
    Otherwise the string "cgroup.memory=whatever" would be added to init's
    environment strings.
    
    Instead of relying on this '.' quirk, just return 1 to indicate that the
    boot option has been handled.
    
    Note that there is no warning message if someone enters:
            cgroup.memory=anything_invalid
    
    Link: https://lkml.kernel.org/r/20220222005811.10672-1-rdunlap@infradead.org
    Fixes: f7e1cb6ec51b0 ("mm: memcontrol: account socket memory in unified hierarchy memory controller")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Roman Gushchin <roman.gushchin@linux.dev>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e16f48838fca1f5e2a5ac6d24024f50ca4e5bc3
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 22 14:42:27 2022 -0700

    mm/mmap: return 1 from stack_guard_gap __setup() handler
    
    commit e6d094936988910ce6e8197570f2753898830081 upstream.
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; it just pollutes init's
    environment).  This prevents:
    
      Unknown kernel command line parameters \
      "BOOT_IMAGE=/boot/bzImage-517rc5 stack_guard_gap=100", will be \
      passed to user space.
    
      Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         stack_guard_gap=100
    
    Return 1 to indicate that the boot option has been handled.
    
    Note that there is no warning message if someone enters:
            stack_guard_gap=anything_invalid
    and 'val' and stack_guard_gap are both set to 0 due to the use of
    simple_strtoul(). This could be improved by using kstrtoxxx() and
    checking for an error.
    
    It appears that having stack_guard_gap == 0 is valid (if unexpected) since
    using "stack_guard_gap=0" on the kernel command line does that.
    
    Link: https://lkml.kernel.org/r/20220222005817.11087-1-rdunlap@infradead.org
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 1be7107fbe18e ("mm: larger stack guard gap, between vmas")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Cc: Hugh Dickins <hughd@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d650ed0617e0158d8622ffc3b221ba9576bdb125
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Mar 10 11:00:41 2022 +0800

    ASoC: soc-compress: Change the check for codec_dai
    
    commit ccb4214f7f2a8b75acf493f31128e464ee1a3536 upstream.
    
    It should be better to reverse the check on codec_dai
    and returned early in order to be easier to understand.
    
    Fixes: de2c6f98817f ("ASoC: soc-compress: prevent the potentially use of null pointer")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20220310030041.1556323-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f19245c3647afea8c7c41f795506ef70f64b9f2
Author: Chen Jingwen <chenjingwen6@huawei.com>
Date:   Wed Dec 29 11:52:26 2021 +0800

    powerpc/kasan: Fix early region not updated correctly
    
    commit dd75080aa8409ce10d50fb58981c6b59bf8707d3 upstream.
    
    The shadow's page table is not updated when PTE_RPN_SHIFT is 24
    and PAGE_SHIFT is 12. It not only causes false positives but
    also false negative as shown the following text.
    
    Fix it by bringing the logic of kasan_early_shadow_page_entry here.
    
    1. False Positive:
    ==================================================================
    BUG: KASAN: vmalloc-out-of-bounds in pcpu_alloc+0x508/0xa50
    Write of size 16 at addr f57f3be0 by task swapper/0/1
    
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.15.0-12267-gdebe436e77c7 #1
    Call Trace:
    [c80d1c20] [c07fe7b8] dump_stack_lvl+0x4c/0x6c (unreliable)
    [c80d1c40] [c02ff668] print_address_description.constprop.0+0x88/0x300
    [c80d1c70] [c02ff45c] kasan_report+0x1ec/0x200
    [c80d1cb0] [c0300b20] kasan_check_range+0x160/0x2f0
    [c80d1cc0] [c03018a4] memset+0x34/0x90
    [c80d1ce0] [c0280108] pcpu_alloc+0x508/0xa50
    [c80d1d40] [c02fd7bc] __kmem_cache_create+0xfc/0x570
    [c80d1d70] [c0283d64] kmem_cache_create_usercopy+0x274/0x3e0
    [c80d1db0] [c2036580] init_sd+0xc4/0x1d0
    [c80d1de0] [c00044a0] do_one_initcall+0xc0/0x33c
    [c80d1eb0] [c2001624] kernel_init_freeable+0x2c8/0x384
    [c80d1ef0] [c0004b14] kernel_init+0x24/0x170
    [c80d1f10] [c001b26c] ret_from_kernel_thread+0x5c/0x64
    
    Memory state around the buggy address:
     f57f3a80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
     f57f3b00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
    >f57f3b80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
                                                   ^
     f57f3c00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
     f57f3c80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
    ==================================================================
    
    2. False Negative (with KASAN tests):
    ==================================================================
    Before fix:
        ok 45 - kmalloc_double_kzfree
        # vmalloc_oob: EXPECTATION FAILED at lib/test_kasan.c:1039
        KASAN failure expected in "((volatile char *)area)[3100]", but none occurred
        not ok 46 - vmalloc_oob
        not ok 1 - kasan
    
    ==================================================================
    After fix:
        ok 1 - kasan
    
    Fixes: cbd18991e24fe ("powerpc/mm: Fix an Oops in kasan_mmu_init()")
    Cc: stable@vger.kernel.org # 5.4.x
    Signed-off-by: Chen Jingwen <chenjingwen6@huawei.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211229035226.59159-1-chenjingwen6@huawei.com
    [chleroy: Backport for 5.4]
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb249f8c00f40dba83b7da8207ac14ca46e9ec9e
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Mar 22 17:02:05 2022 +0100

    ACPI: CPPC: Avoid out of bounds access when parsing _CPC data
    
    commit 40d8abf364bcab23bc715a9221a3c8623956257b upstream.
    
    If the NumEntries field in the _CPC return package is less than 2, do
    not attempt to access the "Revision" element of that package, because
    it may not be present then.
    
    Fixes: 337aadff8e45 ("ACPI: Introduce CPU performance controls using CPPC")
    BugLink: https://lore.kernel.org/lkml/20220322143534.GC32582@xsang-OptiPlex-9020/
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d4a3c930d1d52eb27b8a112435c7d8568ed4f0d
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Nov 30 11:16:41 2021 +0100

    ARM: iop32x: offset IRQ numbers by 1
    
    commit 9d67412f24cc3a2c05f35f7c856addb07a2960ce upstream.
    
    iop32x is one of the last platforms to use IRQ 0, and this has apparently
    stopped working in a 2014 cleanup without anyone noticing. This interrupt
    is used for the DMA engine, so most likely this has not actually worked
    in the past 7 years, but it's also not essential for using this board.
    
    I'm splitting out this change from my GENERIC_IRQ_MULTI_HANDLER
    conversion so it can be backported if anyone cares.
    
    Fixes: a71b092a9c68 ("ARM: Convert handle_IRQ to use __handle_domain_irq")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    [ardb: take +1 offset into account in mask/unmask and init as well]
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Tested-by: Marc Zyngier <maz@kernel.org>
    Tested-by: Vladimir Murzin <vladimir.murzin@arm.com> # ARMv7M
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d727fd32cbd1abf3465f607021bc9c746f17b5a8
Author: Baokun Li <libaokun1@huawei.com>
Date:   Fri Nov 5 17:30:22 2021 +0800

    ubi: Fix race condition between ctrl_cdev_ioctl and ubi_cdev_ioctl
    
    commit 3cbf0e392f173ba0ce425968c8374a6aa3e90f2e upstream.
    
    Hulk Robot reported a KASAN report about use-after-free:
     ==================================================================
     BUG: KASAN: use-after-free in __list_del_entry_valid+0x13d/0x160
     Read of size 8 at addr ffff888035e37d98 by task ubiattach/1385
     [...]
     Call Trace:
      klist_dec_and_del+0xa7/0x4a0
      klist_put+0xc7/0x1a0
      device_del+0x4d4/0xed0
      cdev_device_del+0x1a/0x80
      ubi_attach_mtd_dev+0x2951/0x34b0 [ubi]
      ctrl_cdev_ioctl+0x286/0x2f0 [ubi]
    
     Allocated by task 1414:
      device_add+0x60a/0x18b0
      cdev_device_add+0x103/0x170
      ubi_create_volume+0x1118/0x1a10 [ubi]
      ubi_cdev_ioctl+0xb7f/0x1ba0 [ubi]
    
     Freed by task 1385:
      cdev_device_del+0x1a/0x80
      ubi_remove_volume+0x438/0x6c0 [ubi]
      ubi_cdev_ioctl+0xbf4/0x1ba0 [ubi]
     [...]
     ==================================================================
    
    The lock held by ctrl_cdev_ioctl is ubi_devices_mutex, but the lock held
    by ubi_cdev_ioctl is ubi->device_mutex. Therefore, the two locks can be
    concurrent.
    
    ctrl_cdev_ioctl contains two operations: ubi_attach and ubi_detach.
    ubi_detach is bug-free because it uses reference counting to prevent
    concurrency. However, uif_init and uif_close in ubi_attach may race with
    ubi_cdev_ioctl.
    
    uif_init will race with ubi_cdev_ioctl as in the following stack.
               cpu1                   cpu2                  cpu3
    _______________________|________________________|______________________
    ctrl_cdev_ioctl
     ubi_attach_mtd_dev
      uif_init
                               ubi_cdev_ioctl
                                ubi_create_volume
                                 cdev_device_add
       ubi_add_volume
       // sysfs exist
       kill_volumes
                                                        ubi_cdev_ioctl
                                                         ubi_remove_volume
                                                          cdev_device_del
                                                           // first free
        ubi_free_volume
         cdev_del
         // double free
       cdev_device_del
    
    And uif_close will race with ubi_cdev_ioctl as in the following stack.
               cpu1                   cpu2                  cpu3
    _______________________|________________________|______________________
    ctrl_cdev_ioctl
     ubi_attach_mtd_dev
      uif_init
                               ubi_cdev_ioctl
                                ubi_create_volume
                                 cdev_device_add
      ubi_debugfs_init_dev
      //error goto out_uif;
      uif_close
       kill_volumes
                                                        ubi_cdev_ioctl
                                                         ubi_remove_volume
                                                          cdev_device_del
                                                           // first free
        ubi_free_volume
        // double free
    
    The cause of this problem is that commit 714fb87e8bc0 make device
    "available" before it becomes accessible via sysfs. Therefore, we
    roll back the modification. We will fix the race condition between
    ubi device creation and udev by removing ubi_get_device in
    vol_attribute_show and dev_attribute_show.This avoids accessing
    uninitialized ubi_devices[ubi_num].
    
    ubi_get_device is used to prevent devices from being deleted during
    sysfs execution. However, now kernfs ensures that devices will not
    be deleted before all reference counting are released.
    The key process is shown in the following stack.
    
    device_del
      device_remove_attrs
        device_remove_groups
          sysfs_remove_groups
            sysfs_remove_group
              remove_files
                kernfs_remove_by_name
                  kernfs_remove_by_name_ns
                    __kernfs_remove
                      kernfs_drain
    
    Fixes: 714fb87e8bc0 ("ubi: Fix race condition between ubi device creation and udev")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f9a59cf842a3700169ad0ba99ba971874311f69
Author: Jiaxin Yu <jiaxin.yu@mediatek.com>
Date:   Sat Mar 19 20:03:25 2022 +0800

    ASoC: mediatek: mt6358: add missing EXPORT_SYMBOLs
    
    commit a7663c89f4193dbf717572e46e5a3251940dbdc8 upstream.
    
    Fixes the following build errors when mt6358 is configured as module:
    
    >> ERROR: modpost: "mt6358_set_mtkaif_protocol"
    >> [sound/soc/mediatek/mt8186/mt8186-mt6366-rt1019-rt5682s.ko] undefined!
    >> ERROR: modpost: "mt6358_set_mtkaif_protocol"
    >> [sound/soc/mediatek/mt8186/mt8186-mt6366-da7219-max98357.ko] undefined!
    
    Fixes: 6a8d4198ca80 ("ASoC: mediatek: mt6358: add codec driver")
    Signed-off-by: Jiaxin Yu <jiaxin.yu@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220319120325.11882-1-jiaxin.yu@mediatek.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 230987c2bbc532a2bb66e2bc76781d13aaae2ec0
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Sat Feb 5 16:53:30 2022 +0100

    pinctrl: nuvoton: npcm7xx: Use %zu printk format for ARRAY_SIZE()
    
    commit 9d0f18bca3b557ae5d2128661ac06d33b3f45c0a upstream.
    
    When compile-testing on 64-bit architectures, GCC complains about the
    mismatch of types between the %d format specifier and value returned by
    ARRAY_LENGTH(). Use %zu, which is correct everywhere.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 3b588e43ee5c7 ("pinctrl: nuvoton: add NPCM7xx pinctrl and GPIO driver")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220205155332.1308899-2-j.neuschaefer@gmx.net
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18455cc74e95bd8c0553ca63fd685245eb097fd2
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Sat Feb 5 16:53:31 2022 +0100

    pinctrl: nuvoton: npcm7xx: Rename DS() macro to DSTR()
    
    commit 603501c16431c56f74eaef1ee1390f60a30c2187 upstream.
    
    The name "DS" is defined in arch/x86/um/shared/sysdep/ptrace_64.h,
    which results in a compiler warning when build-testing on ARCH=um.
    Rename this driver's "DS" macro to DSTR so avoid this collision.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 3b588e43ee5c7 ("pinctrl: nuvoton: add NPCM7xx pinctrl and GPIO driver")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220205155332.1308899-3-j.neuschaefer@gmx.net
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9611d8ef6829ecab4df8fcd28b5e4ef845e76c17
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:46 2022 +0800

    pinctrl: pinconf-generic: Print arguments for bias-pull-*
    
    commit 188e5834b930acd03ad3cf7c5e7aa24db9665a29 upstream.
    
    The bias-pull-* properties, or PIN_CONFIG_BIAS_PULL_* pin config
    parameters, accept optional arguments in ohms denoting the strength of
    the pin bias.
    
    Print these values out in debugfs as well.
    
    Fixes: eec450713e5c ("pinctrl: pinconf-generic: Add flag to print arguments")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Tested-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-2-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0c0f40570202b55baad408dc61a41effa2210cf
Author: Guangbin Huang <huangguangbin2@huawei.com>
Date:   Wed Mar 30 21:45:06 2022 +0800

    net: hns3: fix software vlan talbe of vlan 0 inconsistent with hardware
    
    commit 7ed258f12ec5ce855f15cdfb5710361dc82fe899 upstream.
    
    When user delete vlan 0, as driver will not delete vlan 0 for hardware in
    function hclge_set_vlan_filter_hw(), so vlan 0 in software vlan talbe should
    not be deleted.
    
    Fixes: fe4144d47eef ("net: hns3: sync VLAN filter entries when kill VLAN ID failed")
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a548fbf09f3110ee7c4f4ae971f01f5e4ba5f6a
Author: Andrew Price <anprice@redhat.com>
Date:   Tue Mar 22 19:05:51 2022 +0000

    gfs2: Make sure FITRIM minlen is rounded up to fs block size
    
    commit 27ca8273fda398638ca994a207323a85b6d81190 upstream.
    
    Per fstrim(8) we must round up the minlen argument to the fs block size.
    The current calculation doesn't take into account devices that have a
    discard granularity and requested minlen less than 1 fs block, so the
    value can get shifted away to zero in the translation to fs blocks.
    
    The zero minlen passed to gfs2_rgrp_send_discards() then allows
    sb_issue_discard() to be called with nr_sects == 0 which returns -EINVAL
    and results in gfs2_rgrp_send_discards() returning -EIO.
    
    Make sure minlen is never < 1 fs block by taking the max of the
    requested minlen and the fs block size before comparing to the device's
    discard granularity and shifting to fs blocks.
    
    Fixes: 076f0faa764ab ("GFS2: Fix FITRIM argument handling")
    Signed-off-by: Andrew Price <anprice@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d67f67361c0c797c47593abbc0bd8de5b06f914
Author: Tom Rix <trix@redhat.com>
Date:   Sat Mar 26 12:42:36 2022 -0700

    rtc: check if __rtc_read_time was successful
    
    commit 915593a7a663b2ad08b895a5f3ba8b19d89d4ebf upstream.
    
    Clang static analysis reports this issue
    interface.c:810:8: warning: Passed-by-value struct
      argument contains uninitialized data
      now = rtc_tm_to_ktime(tm);
          ^~~~~~~~~~~~~~~~~~~
    
    tm is set by a successful call to __rtc_read_time()
    but its return status is not checked.  Check if
    it was successful before setting the enabled flag.
    Move the decl of err to function scope.
    
    Fixes: 2b2f5ff00f63 ("rtc: interface: ignore expired timers when enqueuing new timers")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20220326194236.2916310-1-trix@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a8835902eb66efa716e86aae853ae3122dc0ba5
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Thu Mar 31 08:27:09 2022 -0400

    XArray: Update the LRU list in xas_split()
    
    commit 3ed4bb77156da0bc732847c8c9df92454c1fbeea upstream.
    
    When splitting a value entry, we may need to add the new nodes to the LRU
    list and remove the parent node from the LRU list.  The WARN_ON checks
    in shadow_lru_isolate() catch this oversight.  This bug was latent
    until we stopped splitting folios in shrink_page_list() with commit
    820c4e2e6f51 ("mm/vmscan: Free non-shmem folios without splitting them").
    That allows the creation of large shadow entries, and subsequently when
    trying to page in a small page, we will split the large shadow entry
    in __filemap_add_folio().
    
    Fixes: 8fc75643c5e1 ("XArray: add xas_split")
    Reported-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbd110b8dd7ad763bf413f71c0484116ae9302d4
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Mar 13 13:09:03 2022 +0300

    can: mcba_usb: properly check endpoint type
    
    commit 136bed0bfd3bc9c95c88aafff2d22ecb3a919f23 upstream.
    
    Syzbot reported warning in usb_submit_urb() which is caused by wrong
    endpoint type. We should check that in endpoint is actually present to
    prevent this warning.
    
    Found pipes are now saved to struct mcba_priv and code uses them
    directly instead of making pipes in place.
    
    Fail log:
    
    | usb 5-1: BOGUS urb xfer, pipe 3 != type 1
    | WARNING: CPU: 1 PID: 49 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502
    | Modules linked in:
    | CPU: 1 PID: 49 Comm: kworker/1:2 Not tainted 5.17.0-rc6-syzkaller-00184-g38f80f42147f #0
    | Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014
    | Workqueue: usb_hub_wq hub_event
    | RIP: 0010:usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502
    | ...
    | Call Trace:
    |  <TASK>
    |  mcba_usb_start drivers/net/can/usb/mcba_usb.c:662 [inline]
    |  mcba_usb_probe+0x8a3/0xc50 drivers/net/can/usb/mcba_usb.c:858
    |  usb_probe_interface+0x315/0x7f0 drivers/usb/core/driver.c:396
    |  call_driver_probe drivers/base/dd.c:517 [inline]
    
    Fixes: 51f3baad7de9 ("can: mcba_usb: Add support for Microchip CAN BUS Analyzer")
    Link: https://lore.kernel.org/all/20220313100903.10868-1-paskripkin@gmail.com
    Reported-and-tested-by: syzbot+3bc1dce0cc0052d60fde@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reviewed-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dfe9422d528630e2ce0d454147230cce113f814
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Fri Mar 11 16:02:08 2022 +0800

    can: mcba_usb: mcba_usb_start_xmit(): fix double dev_kfree_skb in error path
    
    commit 04c9b00ba83594a29813d6b1fb8fdc93a3915174 upstream.
    
    There is no need to call dev_kfree_skb() when usb_submit_urb() fails
    because can_put_echo_skb() deletes original skb and
    can_free_echo_skb() deletes the cloned skb.
    
    Fixes: 51f3baad7de9 ("can: mcba_usb: Add support for Microchip CAN BUS Analyzer")
    Link: https://lore.kernel.org/all/20220311080208.45047-1-hbh25y@gmail.com
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e2852eda19ee1a400cd809d7a9322680f34a262
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Mon Mar 28 19:25:11 2022 -0400

    XArray: Fix xas_create_range() when multi-order entry present
    
    commit 3e3c658055c002900982513e289398a1aad4a488 upstream.
    
    If there is already an entry present that is of order >= XA_CHUNK_SHIFT
    when we call xas_create_range(), xas_create_range() will misinterpret
    that entry as a node and dereference xa_node->parent, generally leading
    to a crash that looks something like this:
    
    general protection fault, probably for non-canonical address 0xdffffc0000000001:
    0000 [#1] PREEMPT SMP KASAN
    KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
    CPU: 0 PID: 32 Comm: khugepaged Not tainted 5.17.0-rc8-syzkaller-00003-g56e337f2cf13 #0
    RIP: 0010:xa_parent_locked include/linux/xarray.h:1207 [inline]
    RIP: 0010:xas_create_range+0x2d9/0x6e0 lib/xarray.c:725
    
    It's deterministically reproducable once you know what the problem is,
    but producing it in a live kernel requires khugepaged to hit a race.
    While the problem has been present since xas_create_range() was
    introduced, I'm not aware of a way to hit it before the page cache was
    converted to use multi-index entries.
    
    Fixes: 6b24ca4a1a8d ("mm: Use multi-index entries in the page cache")
    Reported-by: syzbot+0d2b0bf32ca5cfd09f2e@syzkaller.appspotmail.com
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a840286f13df95f9d701e9c5b0547a84dae8ba8c
Author: Baokun Li <libaokun1@huawei.com>
Date:   Tue Feb 15 12:07:36 2022 +0800

    ubifs: rename_whiteout: correct old_dir size computing
    
    commit 705757274599e2e064dd3054aabc74e8af31a095 upstream.
    
    When renaming the whiteout file, the old whiteout file is not deleted.
    Therefore, we add the old dentry size to the old dir like XFS.
    Otherwise, an error may be reported due to `fscki->calc_sz != fscki->size`
    in check_indes.
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Reported-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b80ccbec0e4804436c382d7dd60e943c386ed83a
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:40 2021 +0800

    ubifs: Fix read out-of-bounds in ubifs_wbuf_write_nolock()
    
    commit 4f2262a334641e05f645364d5ade1f565c85f20b upstream.
    
    Function ubifs_wbuf_write_nolock() may access buf out of bounds in
    following process:
    
    ubifs_wbuf_write_nolock():
      aligned_len = ALIGN(len, 8);   // Assume len = 4089, aligned_len = 4096
      if (aligned_len <= wbuf->avail) ... // Not satisfy
      if (wbuf->used) {
        ubifs_leb_write()  // Fill some data in avail wbuf
        len -= wbuf->avail;   // len is still not 8-bytes aligned
        aligned_len -= wbuf->avail;
      }
      n = aligned_len >> c->max_write_shift;
      if (n) {
        n <<= c->max_write_shift;
        err = ubifs_leb_write(c, wbuf->lnum, buf + written,
                              wbuf->offs, n);
        // n > len, read out of bounds less than 8(n-len) bytes
      }
    
    , which can be catched by KASAN:
      =========================================================
      BUG: KASAN: slab-out-of-bounds in ecc_sw_hamming_calculate+0x1dc/0x7d0
      Read of size 4 at addr ffff888105594ff8 by task kworker/u8:4/128
      Workqueue: writeback wb_workfn (flush-ubifs_0_0)
      Call Trace:
        kasan_report.cold+0x81/0x165
        nand_write_page_swecc+0xa9/0x160
        ubifs_leb_write+0xf2/0x1b0 [ubifs]
        ubifs_wbuf_write_nolock+0x421/0x12c0 [ubifs]
        write_head+0xdc/0x1c0 [ubifs]
        ubifs_jnl_write_inode+0x627/0x960 [ubifs]
        wb_workfn+0x8af/0xb80
    
    Function ubifs_wbuf_write_nolock() accepts that parameter 'len' is not 8
    bytes aligned, the 'len' represents the true length of buf (which is
    allocated in 'ubifs_jnl_xxx', eg. ubifs_jnl_write_inode), so
    ubifs_wbuf_write_nolock() must handle the length read from 'buf' carefully
    to write leb safely.
    
    Fetch a reproducer in [Link].
    
    Fixes: 1e51764a3c2ac0 ("UBIFS: add new flash file system")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214785
    Reported-by: Chengsong Ke <kechengsong@huawei.com>
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1afe219e4a665f96792c7b0047703c2e23448b3c
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:39 2021 +0800

    ubifs: setflags: Make dirtied_ino_d 8 bytes aligned
    
    commit 1b83ec057db16b4d0697dc21ef7a9743b6041f72 upstream.
    
    Make 'ui->data_len' aligned with 8 bytes before it is assigned to
    dirtied_ino_d. Since 8871d84c8f8b0c6b("ubifs: convert to fileattr")
    applied, 'setflags()' only affects regular files and directories, only
    xattr inode, symlink inode and special inode(pipe/char_dev/block_dev)
    have none- zero 'ui->data_len' field, so assertion
    '!(req->dirtied_ino_d & 7)' cannot fail in ubifs_budget_space().
    To avoid assertion fails in future evolution(eg. setflags can operate
    special inodes), it's better to make dirtied_ino_d 8 bytes aligned,
    after all aligned size is still zero for regular files.
    
    Fixes: 1e51764a3c2ac05a ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 786013ecbaed3b739d85d1bac0df50f26732f205
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:35 2021 +0800

    ubifs: Add missing iput if do_tmpfile() failed in rename whiteout
    
    commit 716b4573026bcbfa7b58ed19fe15554bac66b082 upstream.
    
    whiteout inode should be put when do_tmpfile() failed if inode has been
    initialized. Otherwise we will get following warning during umount:
      UBIFS error (ubi0:0 pid 1494): ubifs_assert_failed [ubifs]: UBIFS
      assert failed: c->bi.dd_growth == 0, in fs/ubifs/super.c:1930
      VFS: Busy inodes after unmount of ubifs. Self-destruct in 5 seconds.
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Suggested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37bdf1ad592555ecda1d55b89f6e393e4c0589d1
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:33 2021 +0800

    ubifs: Fix deadlock in concurrent rename whiteout and inode writeback
    
    commit afd427048047e8efdedab30e8888044e2be5aa9c upstream.
    
    Following hung tasks:
    [   77.028764] task:kworker/u8:4    state:D stack:    0 pid:  132
    [   77.028820] Call Trace:
    [   77.029027]  schedule+0x8c/0x1b0
    [   77.029067]  mutex_lock+0x50/0x60
    [   77.029074]  ubifs_write_inode+0x68/0x1f0 [ubifs]
    [   77.029117]  __writeback_single_inode+0x43c/0x570
    [   77.029128]  writeback_sb_inodes+0x259/0x740
    [   77.029148]  wb_writeback+0x107/0x4d0
    [   77.029163]  wb_workfn+0x162/0x7b0
    
    [   92.390442] task:aa              state:D stack:    0 pid: 1506
    [   92.390448] Call Trace:
    [   92.390458]  schedule+0x8c/0x1b0
    [   92.390461]  wb_wait_for_completion+0x82/0xd0
    [   92.390469]  __writeback_inodes_sb_nr+0xb2/0x110
    [   92.390472]  writeback_inodes_sb_nr+0x14/0x20
    [   92.390476]  ubifs_budget_space+0x705/0xdd0 [ubifs]
    [   92.390503]  do_rename.cold+0x7f/0x187 [ubifs]
    [   92.390549]  ubifs_rename+0x8b/0x180 [ubifs]
    [   92.390571]  vfs_rename+0xdb2/0x1170
    [   92.390580]  do_renameat2+0x554/0x770
    
    , are caused by concurrent rename whiteout and inode writeback processes:
            rename_whiteout(Thread 1)               wb_workfn(Thread2)
    ubifs_rename
      do_rename
        lock_4_inodes (Hold ui_mutex)
        ubifs_budget_space
          make_free_space
            shrink_liability
              __writeback_inodes_sb_nr
                bdi_split_work_to_wbs (Queue new wb work)
                                                  wb_do_writeback(wb work)
                                                    __writeback_single_inode
                                                      ubifs_write_inode
                                                        LOCK(ui_mutex)
                                                               ↑
                  wb_wait_for_completion (Wait wb work) <-- deadlock!
    
    Reproducer (Detail program in [Link]):
      1. SYS_renameat2("/mp/dir/file", "/mp/dir/whiteout", RENAME_WHITEOUT)
      2. Consume out of space before kernel(mdelay) doing budget for whiteout
    
    Fix it by doing whiteout space budget before locking ubifs inodes.
    BTW, it also fixes wrong goto tag 'out_release' in whiteout budget
    error handling path(It should at least recover dir i_size and unlock
    4 ubifs inodes).
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214733
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14276d38c89a170363e90b6ac0a53c3cf61b87fc
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:32 2021 +0800

    ubifs: rename_whiteout: Fix double free for whiteout_ui->data
    
    commit 40a8f0d5e7b3999f096570edab71c345da812e3e upstream.
    
    'whiteout_ui->data' will be freed twice if space budget fail for
    rename whiteout operation as following process:
    
    rename_whiteout
      dev = kmalloc
      whiteout_ui->data = dev
      kfree(whiteout_ui->data)  // Free first time
      iput(whiteout)
        ubifs_free_inode
          kfree(ui->data)       // Double free!
    
    KASAN reports:
    ==================================================================
    BUG: KASAN: double-free or invalid-free in ubifs_free_inode+0x4f/0x70
    Call Trace:
      kfree+0x117/0x490
      ubifs_free_inode+0x4f/0x70 [ubifs]
      i_callback+0x30/0x60
      rcu_do_batch+0x366/0xac0
      __do_softirq+0x133/0x57f
    
    Allocated by task 1506:
      kmem_cache_alloc_trace+0x3c2/0x7a0
      do_rename+0x9b7/0x1150 [ubifs]
      ubifs_rename+0x106/0x1f0 [ubifs]
      do_syscall_64+0x35/0x80
    
    Freed by task 1506:
      kfree+0x117/0x490
      do_rename.cold+0x53/0x8a [ubifs]
      ubifs_rename+0x106/0x1f0 [ubifs]
      do_syscall_64+0x35/0x80
    
    The buggy address belongs to the object at ffff88810238bed8 which
    belongs to the cache kmalloc-8 of size 8
    ==================================================================
    
    Let ubifs_free_inode() free 'whiteout_ui->data'. BTW, delete unused
    assignment 'whiteout_ui->data_len = 0', process 'ubifs_evict_inode()
    -> ubifs_jnl_delete_inode() -> ubifs_jnl_write_inode()' doesn't need it
    (because 'inc_nlink(whiteout)' won't be excuted by 'goto out_release',
     and the nlink of whiteout inode is 0).
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01df5f7627f1624d6bb0b8c0870a569b32adfbf8
Author: Ammar Faizi <ammarfaizi2@gnuweeb.org>
Date:   Fri Feb 25 01:58:36 2022 +0700

    ASoC: SOF: Intel: Fix NULL ptr dereference when ENOMEM
    
    commit b7fb0ae09009d076964afe4c1a2bde1ee2bd88a9 upstream.
    
    Do not call snd_dma_free_pages() when snd_dma_alloc_pages() returns
    -ENOMEM because it leads to a NULL pointer dereference bug.
    
    The dmesg says:
    
      [ T1387] sof-audio-pci-intel-tgl 0000:00:1f.3: error: memory alloc failed: -12
      [ T1387] BUG: kernel NULL pointer dereference, address: 0000000000000000
      [ T1387] #PF: supervisor read access in kernel mode
      [ T1387] #PF: error_code(0x0000) - not-present page
      [ T1387] PGD 0 P4D 0
      [ T1387] Oops: 0000 [#1] PREEMPT SMP NOPTI
      [ T1387] CPU: 6 PID: 1387 Comm: alsa-sink-HDA A Tainted: G        W         5.17.0-rc4-superb-owl-00055-g80d47f5de5e3
      [ T1387] Hardware name: HP HP Laptop 14s-dq2xxx/87FD, BIOS F.15 09/15/2021
      [ T1387] RIP: 0010:dma_free_noncontiguous+0x37/0x80
      [ T1387] Code: [... snip ...]
      [ T1387] RSP: 0000:ffffc90002b87770 EFLAGS: 00010246
      [ T1387] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
      [ T1387] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888101db30d0
      [ T1387] RBP: 00000000fffffff4 R08: 0000000000000000 R09: 0000000000000000
      [ T1387] R10: 0000000000000000 R11: ffffc90002b874d0 R12: 0000000000000001
      [ T1387] R13: 0000000000058000 R14: ffff888105260c68 R15: ffff888105260828
      [ T1387] FS:  00007f42e2ffd640(0000) GS:ffff888466b80000(0000) knlGS:0000000000000000
      [ T1387] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [ T1387] CR2: 0000000000000000 CR3: 000000014acf0003 CR4: 0000000000770ee0
      [ T1387] PKRU: 55555554
      [ T1387] Call Trace:
      [ T1387]  <TASK>
      [ T1387]  cl_stream_prepare+0x10a/0x120 [snd_sof_intel_hda_common 146addf995b9279ae7f509621078cccbe4f875e1]
      [... snip ...]
      [ T1387]  </TASK>
    
    Cc: Daniel Baluta <daniel.baluta@nxp.com>
    Cc: Jaroslav Kysela <perex@perex.cz>
    Cc: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Cc: Keyon Jie <yang.jie@linux.intel.com>
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Rander Wang <rander.wang@intel.com>
    Cc: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Cc: Takashi Iwai <tiwai@suse.com>
    Cc: sound-open-firmware@alsa-project.org
    Cc: alsa-devel@alsa-project.org
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org # v5.2+
    Fixes: d16046ffa6de040bf580a64d5f4d0aa18258a854 ("ASoC: SOF: Intel: Add Intel specific HDA firmware loader")
    Link: https://lore.kernel.org/lkml/20220224145124.15985-1-ammarfaizi2@gnuweeb.org/ # v1
    Link: https://lore.kernel.org/lkml/20220224180850.34592-1-ammarfaizi2@gnuweeb.org/ # v2
    Link: https://lore.kernel.org/lkml/20220224182818.40301-1-ammarfaizi2@gnuweeb.org/ # v3
    Reviewed-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Ammar Faizi <ammarfaizi2@gnuweeb.org>
    Link: https://lore.kernel.org/r/20220224185836.44907-1-ammarfaizi2@gnuweeb.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    [ammarfaizi2: Backport to Linux 5.4 LTS]
    Signed-off-by: Ammar Faizi <ammarfaizi2@gnuweeb.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c277c846a21e5be8afc5f75b33d2d546502458f
Author: Li RongQing <lirongqing@baidu.com>
Date:   Wed Mar 9 16:35:44 2022 +0800

    KVM: x86: fix sending PV IPI
    
    commit c15e0ae42c8e5a61e9aca8aac920517cf7b3e94e upstream.
    
    If apic_id is less than min, and (max - apic_id) is greater than
    KVM_IPI_CLUSTER_SIZE, then the third check condition is satisfied but
    the new apic_id does not fit the bitmask.  In this case __send_ipi_mask
    should send the IPI.
    
    This is mostly theoretical, but it can happen if the apic_ids on three
    iterations of the loop are for example 1, KVM_IPI_CLUSTER_SIZE, 0.
    
    Fixes: aaffcfd1e82 ("KVM: X86: Implement PV IPIs in linux guest")
    Signed-off-by: Li RongQing <lirongqing@baidu.com>
    Message-Id: <1646814944-51801-1-git-send-email-lirongqing@baidu.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1c03f11cc3c703fa39691d2dab98a5f5543326c
Author: David Matlack <dmatlack@google.com>
Date:   Thu Mar 3 18:33:27 2022 +0000

    KVM: Prevent module exit until all VMs are freed
    
    commit 5f6de5cbebee925a612856fce6f9182bb3eee0db upstream.
    
    Tie the lifetime the KVM module to the lifetime of each VM via
    kvm.users_count. This way anything that grabs a reference to the VM via
    kvm_get_kvm() cannot accidentally outlive the KVM module.
    
    Prior to this commit, the lifetime of the KVM module was tied to the
    lifetime of /dev/kvm file descriptors, VM file descriptors, and vCPU
    file descriptors by their respective file_operations "owner" field.
    This approach is insufficient because references grabbed via
    kvm_get_kvm() do not prevent closing any of the aforementioned file
    descriptors.
    
    This fixes a long standing theoretical bug in KVM that at least affects
    async page faults. kvm_setup_async_pf() grabs a reference via
    kvm_get_kvm(), and drops it in an asynchronous work callback. Nothing
    prevents the VM file descriptor from being closed and the KVM module
    from being unloaded before this callback runs.
    
    Fixes: af585b921e5d ("KVM: Halt vcpu if page it tries to access is swapped out")
    Fixes: 3d3aab1b973b ("KVM: set owner of cpu and vm file operations")
    Cc: stable@vger.kernel.org
    Suggested-by: Ben Gardon <bgardon@google.com>
    [ Based on a patch from Ben implemented for Google's kernel. ]
    Signed-off-by: David Matlack <dmatlack@google.com>
    Message-Id: <20220303183328.1499189-2-dmatlack@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f608ee87ebf25faa99bcdcf4dd662cd3a79f2d4
Author: Manish Rangankar <mrangankar@marvell.com>
Date:   Thu Mar 10 01:26:02 2022 -0800

    scsi: qla2xxx: Use correct feature type field during RFF_ID processing
    
    commit a7e05f7a1bcbe4ee055479242de46c5c16ab03b1 upstream.
    
    During SNS Register FC-4 Features (RFF_ID) the initiator driver was sending
    incorrect type field for NVMe supported device. Use correct feature type
    field.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-12-njavali@marvell.com
    Fixes: e374f9f59281 ("scsi: qla2xxx: Migrate switch registration commands away from mailbox interface")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af744ef8f18e26c5652541f44c923a567400b927
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:26:00 2022 -0800

    scsi: qla2xxx: Reduce false trigger to login
    
    commit d2646eed7b19a206912f49101178cbbaa507256c upstream.
    
    While a session is in the middle of a relogin, a late RSCN can be delivered
    from switch. RSCN trigger fabric scan where the scan logic can trigger
    another session login while a login is in progress.  Reduce the extra
    trigger to prevent multiple logins to the same session.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-10-njavali@marvell.com
    Fixes: bee8b84686c4 ("scsi: qla2xxx: Reduce redundant ADISC command for RSCNs")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f9ce17a1d1bd3914881c08bf022526e72a9f62f
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:57 2022 -0800

    scsi: qla2xxx: Fix N2N inconsistent PLOGI
    
    commit c13ce47c64ea8f14e77eecb40d1e7c2ac667f898 upstream.
    
    For N2N topology, ELS Passthrough is used to send PLOGI. On failure of ELS
    pass through PLOGI, driver flipped over to using LLIOCB PLOGI for N2N. This
    is not consistent. Delete the session to restart the connection where ELS
    pass through PLOGI would be used consistently.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-7-njavali@marvell.com
    Fixes: c76ae845ea83 ("scsi: qla2xxx: Add error handling for PLOGI ELS passthrough")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d087c7e55db420107c3ea97b228e067a7b488a1
Author: Arun Easi <aeasi@marvell.com>
Date:   Thu Mar 10 01:25:55 2022 -0800

    scsi: qla2xxx: Fix missed DMA unmap for NVMe ls requests
    
    commit c85ab7d9e27a80e48d5b7d7fb2fe2b0fdb2de523 upstream.
    
    At NVMe ELS request time, request structure is DMA mapped and never
    unmapped. Fix this by calling the unmap on ELS completion.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-5-njavali@marvell.com
    Fixes: e84067d74301 ("scsi: qla2xxx: Add FC-NVMe F/W initialization and transport registration")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a0a3c66a58efe2ec5da291104776aefc8cb2cf7
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:58 2022 -0800

    scsi: qla2xxx: Fix hang due to session stuck
    
    commit c02aada06d19a215c8291bd968a99a270e96f734 upstream.
    
    User experienced device lost. The log shows Get port data base command was
    queued up, failed, and requeued again. Every time it is requeued, it set
    the FCF_ASYNC_ACTIVE. This prevents any recovery code from occurring
    because driver thinks a recovery is in progress for this session. In
    essence, this session is hung.  The reason it gets into this place is the
    session deletion got in front of this call due to link perturbation.
    
    Break the requeue cycle and exit.  The session deletion code will trigger a
    session relogin.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-8-njavali@marvell.com
    Fixes: 726b85487067 ("qla2xxx: Add framework for async fabric discovery")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d1651c8a40d782aa06a7c6ef04f80dae59681ef
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:52 2022 -0800

    scsi: qla2xxx: Fix incorrect reporting of task management failure
    
    commit 58ca5999e0367d131de82a75257fbfd5aed0195d upstream.
    
    User experienced no task management error while target device is responding
    with error. The RSP_CODE field in the status IOCB is in little endian.
    Driver assumes it's big endian and it picked up erroneous data.
    
    Convert the data back to big endian as is on the wire.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-2-njavali@marvell.com
    Fixes: faef62d13463 ("[SCSI] qla2xxx: Fix Task Management command asynchronous handling")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2eb127417609a39586fda83dcc33a9b563e33e48
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:53 2022 -0800

    scsi: qla2xxx: Fix disk failure to rediscover
    
    commit 6a45c8e137d4e2c72eecf1ac7cf64f2fdfcead99 upstream.
    
    User experienced some of the LUN failed to get rediscovered after long
    cable pull test. The issue is triggered by a race condition between driver
    setting session online state vs starting the LUN scan process at the same
    time. Current code set the online state after notifying the session is
    available. In this case, trigger to start the LUN scan process happened
    before driver could set the session in online state.  LUN scan ends up with
    failure due to the session online check was failing.
    
    Set the online state before reporting of the availability of the session.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-3-njavali@marvell.com
    Fixes: aecf043443d3 ("scsi: qla2xxx: Fix Remote port registration")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8077a7162bc3cf658dd9ff112bc77716c08458c5
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Sun Jan 9 21:02:15 2022 -0800

    scsi: qla2xxx: Suppress a kernel complaint in qla_create_qpair()
    
    commit a60447e7d451df42c7bde43af53b34f10f34f469 upstream.
    
    [   12.323788] BUG: using smp_processor_id() in preemptible [00000000] code: systemd-udevd/1020
    [   12.332297] caller is qla2xxx_create_qpair+0x32a/0x5d0 [qla2xxx]
    [   12.338417] CPU: 7 PID: 1020 Comm: systemd-udevd Tainted: G          I      --------- ---  5.14.0-29.el9.x86_64 #1
    [   12.348827] Hardware name: Dell Inc. PowerEdge R610/0F0XJ6, BIOS 6.6.0 05/22/2018
    [   12.356356] Call Trace:
    [   12.358821]  dump_stack_lvl+0x34/0x44
    [   12.362514]  check_preemption_disabled+0xd9/0xe0
    [   12.367164]  qla2xxx_create_qpair+0x32a/0x5d0 [qla2xxx]
    [   12.372481]  qla2x00_probe_one+0xa3a/0x1b80 [qla2xxx]
    [   12.377617]  ? _raw_spin_lock_irqsave+0x19/0x40
    [   12.384284]  local_pci_probe+0x42/0x80
    [   12.390162]  ? pci_match_device+0xd7/0x110
    [   12.396366]  pci_device_probe+0xfd/0x1b0
    [   12.402372]  really_probe+0x1e7/0x3e0
    [   12.408114]  __driver_probe_device+0xfe/0x180
    [   12.414544]  driver_probe_device+0x1e/0x90
    [   12.420685]  __driver_attach+0xc0/0x1c0
    [   12.426536]  ? __device_attach_driver+0xe0/0xe0
    [   12.433061]  ? __device_attach_driver+0xe0/0xe0
    [   12.439538]  bus_for_each_dev+0x78/0xc0
    [   12.445294]  bus_add_driver+0x12b/0x1e0
    [   12.451021]  driver_register+0x8f/0xe0
    [   12.456631]  ? 0xffffffffc07bc000
    [   12.461773]  qla2x00_module_init+0x1be/0x229 [qla2xxx]
    [   12.468776]  do_one_initcall+0x44/0x200
    [   12.474401]  ? load_module+0xad3/0xba0
    [   12.479908]  ? kmem_cache_alloc_trace+0x45/0x410
    [   12.486268]  do_init_module+0x5c/0x280
    [   12.491730]  __do_sys_init_module+0x12e/0x1b0
    [   12.497785]  do_syscall_64+0x3b/0x90
    [   12.503029]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [   12.509764] RIP: 0033:0x7f554f73ab2e
    
    Link: https://lore.kernel.org/r/20220110050218.3958-15-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c478b2cde9b5ae4f796e2060faec910337ba3f2b
Author: Joe Carnuccio <joe.carnuccio@cavium.com>
Date:   Sun Jan 9 21:02:17 2022 -0800

    scsi: qla2xxx: Check for firmware dump already collected
    
    commit cfbafad7c6032d449a5a07f2d273acd2437bbc6a upstream.
    
    While allocating firmware dump, check if dump is already collected and do
    not re-allocate the buffer.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-17-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96391480abfe4af94860f1fb2b4f4d641082e678
Author: Joe Carnuccio <joe.carnuccio@cavium.com>
Date:   Sun Jan 9 21:02:16 2022 -0800

    scsi: qla2xxx: Add devids and conditionals for 28xx
    
    commit 0d6a536cb1fcabb6c3e9c94871c8d0b29bb5813b upstream.
    
    This is an update to the original 28xx adapter enablement. Add a bunch of
    conditionals that are applicable for 28xx.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-16-njavali@marvell.com
    Fixes: ecc89f25e225 ("scsi: qla2xxx: Add Device ID for ISP28XX")
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08d04784ccc5d367a6754a4054554baf34d4a511
Author: Arun Easi <aeasi@marvell.com>
Date:   Sun Jan 9 21:02:11 2022 -0800

    scsi: qla2xxx: Fix device reconnect in loop topology
    
    commit 8ad4be3d15cf144b5834bdb00d5bbe4050938dc7 upstream.
    
    A device logout in loop topology initiates a device connection teardown
    which loses the FW device handle. In loop topo, the device handle is not
    regrabbed leading to device login failures and eventually to loss of the
    device. Fix this by taking the main login path that does it.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-11-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 167debaeaaca728b597d94e1f5456db56d24c306
Author: Nilesh Javali <njavali@marvell.com>
Date:   Sun Jan 9 21:02:12 2022 -0800

    scsi: qla2xxx: Fix warning for missing error code
    
    commit 14cb838d245ae0d523b2f7804af5a02c22e79f5a upstream.
    
    Fix smatch-reported warning message:
    
    drivers/scsi/qla2xxx/qla_target.c:3324 qlt_xmit_response() warn: missing error
    code 'res'
    
    Link: https://lore.kernel.org/r/20220110050218.3958-12-njavali@marvell.com
    Fixes: 4a8f71014b4d ("scsi: qla2xxx: Fix unmap of already freed sgl")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e67e9620a09cf61f4e3342eb6972d0448f5c95f1
Author: Bikash Hazarika <bhazarika@marvell.com>
Date:   Sun Jan 9 21:02:09 2022 -0800

    scsi: qla2xxx: Fix wrong FDMI data for 64G adapter
    
    commit 1cfbbacbee2d6ea3816386a483e3c7a96e5bd657 upstream.
    
    Corrected transmission speed mask values for FC.
    
    Supported Speed: 16 32 20 Gb/s ===> Should be 64 instead of 20
    Supported Speed: 16G 32G 48G   ===> Should be 64G instead of 48G
    
    Link: https://lore.kernel.org/r/20220110050218.3958-9-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bikash Hazarika <bhazarika@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e561cbb7863904b0b97bb409e4af2cd77adcafd
Author: Quinn Tran <qutran@marvell.com>
Date:   Sun Jan 9 21:02:04 2022 -0800

    scsi: qla2xxx: Fix stuck session in gpdb
    
    commit 725d3a0d31a51c0debf970011e05f585e805165b upstream.
    
    Fix stuck sessions in get port database. When a thread is in the process of
    re-establishing a session, a flag is set to prevent multiple threads /
    triggers from doing the same task. This flag was left on, where any attempt
    to relogin was locked out. Clear this flag, if the attempt has failed.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-4-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f196d94cc7c2a29183645fd8ab0668c122bbd28f
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Thu Feb 24 17:22:14 2022 +0100

    powerpc: Fix build errors with newer binutils
    
    commit 8667d0d64dd1f84fd41b5897fd87fa9113ae05e3 upstream.
    
    Building tinyconfig with gcc (Debian 11.2.0-16) and assembler (Debian
    2.37.90.20220207) the following build error shows up:
    
      {standard input}: Assembler messages:
      {standard input}:1190: Error: unrecognized opcode: `stbcix'
      {standard input}:1433: Error: unrecognized opcode: `lwzcix'
      {standard input}:1453: Error: unrecognized opcode: `stbcix'
      {standard input}:1460: Error: unrecognized opcode: `stwcix'
      {standard input}:1596: Error: unrecognized opcode: `stbcix'
      ...
    
    Rework to add assembler directives [1] around the instruction. Going
    through them one by one shows that the changes should be safe.  Like
    __get_user_atomic_128_aligned() is only called in p9_hmi_special_emu(),
    which according to the name is specific to power9.  And __raw_rm_read*()
    are only called in things that are powernv or book3s_hv specific.
    
    [1] https://sourceware.org/binutils/docs/as/PowerPC_002dPseudo.html#PowerPC_002dPseudo
    
    Cc: stable@vger.kernel.org
    Co-developed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Reviewed-by: Segher Boessenkool <segher@kernel.crashing.org>
    [mpe: Make commit subject more descriptive]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220224162215.3406642-2-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71ca99a50960efe95e048d5ef786df593aa79d86
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Thu Feb 24 17:22:15 2022 +0100

    powerpc/lib/sstep: Fix build errors with newer binutils
    
    commit 8219d31effa7be5dbc7ff915d7970672e028c701 upstream.
    
    Building tinyconfig with gcc (Debian 11.2.0-16) and assembler (Debian
    2.37.90.20220207) the following build error shows up:
    
      {standard input}: Assembler messages:
      {standard input}:10576: Error: unrecognized opcode: `stbcx.'
      {standard input}:10680: Error: unrecognized opcode: `lharx'
      {standard input}:10694: Error: unrecognized opcode: `lbarx'
    
    Rework to add assembler directives [1] around the instruction.  The
    problem with this might be that we can trick a power6 into
    single-stepping through an stbcx. for instance, and it will execute that
    in kernel mode.
    
    [1] https://sourceware.org/binutils/docs/as/PowerPC_002dPseudo.html#PowerPC_002dPseudo
    
    Fixes: 350779a29f11 ("powerpc: Handle most loads and stores in instruction emulation code")
    Cc: stable@vger.kernel.org # v4.14+
    Co-developed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Reviewed-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220224162215.3406642-3-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d42b045e92c23ed139fbdbbf13837945227f7f8b
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Thu Feb 24 17:22:13 2022 +0100

    powerpc/lib/sstep: Fix 'sthcx' instruction
    
    commit a633cb1edddaa643fadc70abc88f89a408fa834a upstream.
    
    Looks like there been a copy paste mistake when added the instruction
    'stbcx' twice and one was probably meant to be 'sthcx'. Changing to
    'sthcx' from 'stbcx'.
    
    Fixes: 350779a29f11 ("powerpc: Handle most loads and stores in instruction emulation code")
    Cc: stable@vger.kernel.org # v4.14+
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220224162215.3406642-1-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0af21531f5ed983cc00a66cfcf054194a5fdf7da
Author: Matt Kramer <mccleetus@gmail.com>
Date:   Tue Mar 22 13:48:17 2022 -0700

    ALSA: hda/realtek: Add alc256-samsung-headphone fixup
    
    [ Upstream commit ef248d9bd616b04df8be25539a4dc5db4b6c56f4 ]
    
    This fixes the near-silence of the headphone jack on the ALC256-based
    Samsung Galaxy Book Flex Alpha (NP730QCJ). The magic verbs were found
    through trial and error, using known ALC298 hacks as inspiration. The
    fixup is auto-enabled only when the NP730QCJ is detected. It can be
    manually enabled using model=alc256-samsung-headphone.
    
    Signed-off-by: Matt Kramer <mccleetus@gmail.com>
    Link: https://lore.kernel.org/r/3168355.aeNJFYEL58@linus
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95d65bca6eb9967aa5f6ed7a32e041b4f11ffbc2
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Thu Mar 3 17:51:42 2022 +0100

    mmc: host: Return an error when ->enable_sdio_irq() ops is missing
    
    [ Upstream commit d6c9219ca1139b74541b2a98cee47a3426d754a9 ]
    
    Even if the current WARN() notifies the user that something is severely
    wrong, we can still end up in a PANIC() when trying to invoke the missing
    ->enable_sdio_irq() ops. Therefore, let's also return an error code and
    prevent the host from being added.
    
    While at it, move the code into a separate function to prepare for
    subsequent changes and for further host caps validations.
    
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Link: https://lore.kernel.org/r/20220303165142.129745-1-ulf.hansson@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 813553e4a91f7444433914db524822bf976beebb
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Fri Feb 18 10:41:30 2022 +0100

    media: hdpvr: initialize dev->worker at hdpvr_register_videodev
    
    [ Upstream commit 07922937e9a580825f9965c46fd15e23ba5754b6 ]
    
    hdpvr_register_videodev is responsible to initialize a worker in
    hdpvr_device. However, the worker is only initialized at
    hdpvr_start_streaming other than hdpvr_register_videodev.
    When hdpvr_probe does not initialize its worker, the hdpvr_disconnect
    will encounter one WARN in flush_work.The stack trace is as follows:
    
     hdpvr_disconnect+0xb8/0xf2 drivers/media/usb/hdpvr/hdpvr-core.c:425
     usb_unbind_interface+0xbf/0x3a0 drivers/usb/core/driver.c:458
     __device_release_driver drivers/base/dd.c:1206 [inline]
     device_release_driver_internal+0x22a/0x230 drivers/base/dd.c:1237
     bus_remove_device+0x108/0x160 drivers/base/bus.c:529
     device_del+0x1fe/0x510 drivers/base/core.c:3592
     usb_disable_device+0xd1/0x1d0 drivers/usb/core/message.c:1419
     usb_disconnect+0x109/0x330 drivers/usb/core/hub.c:2228
    
    Fix this by moving the initialization of dev->worker to the starting of
    hdpvr_register_videodev
    
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 236311be097639b1eda819d3cdaf53f6005b18ac
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Jan 20 20:37:30 2022 +0100

    media: Revert "media: em28xx: add missing em28xx_close_extension"
    
    [ Upstream commit fde18c3bac3f964d8333ae53b304d8fee430502b ]
    
    This reverts commit 2c98b8a3458df03abdc6945bbef67ef91d181938.
    
    Reverted patch causes problems with Hauppauge WinTV dualHD as Maximilian
    reported [1]. Since quick solution didn't come up let's just revert it
    to make this device work with upstream kernels.
    
    Link: https://lore.kernel.org/all/6a72a37b-e972-187d-0322-16336e12bdc5@elbmurf.de/ [1]
    
    Reported-by: Maximilian Böhm <maximilian.boehm@elbmurf.de>
    Tested-by: Maximilian Böhm <maximilian.boehm@elbmurf.de>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b36c05f68ba32d0dfb63abc9016d6fe9117829f
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Mar 2 22:33:11 2022 +0800

    video: fbdev: sm712fb: Fix crash in smtcfb_write()
    
    [ Upstream commit 4f01d09b2bbfbcb47b3eb305560a7f4857a32260 ]
    
    When the sm712fb driver writes three bytes to the framebuffer, the
    driver will crash:
    
        BUG: unable to handle page fault for address: ffffc90001ffffff
        RIP: 0010:smtcfb_write+0x454/0x5b0
        Call Trace:
         vfs_write+0x291/0xd60
         ? do_sys_openat2+0x27d/0x350
         ? __fget_light+0x54/0x340
         ksys_write+0xce/0x190
         do_syscall_64+0x43/0x90
         entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fix it by removing the open-coded endianness fixup-code.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11186875ba8fcfeec7ece310871f5ffbde20a556
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Jul 26 22:01:58 2021 +0200

    ARM: mmp: Fix failure to remove sram device
    
    [ Upstream commit 4036b29a146b2749af3bb213b003eb69f3e5ecc4 ]
    
    Make sure in .probe() to set driver data before the function is left to
    make it possible in .remove() to undo the actions done.
    
    This fixes a potential memory leak and stops returning an error code in
    .remove() that is ignored by the driver core anyhow.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc958cd4c88ce86d2c8653be05978c0303346e66
Author: Richard Leitner <richard.leitner@skidata.com>
Date:   Wed Dec 1 17:11:48 2021 +0100

    ARM: tegra: tamonten: Fix I2C3 pad setting
    
    [ Upstream commit 0092c25b541a5422d7e71892a13c55ee91abc34b ]
    
    This patch fixes the tristate configuration for i2c3 function assigned
    to the dtf pins on the Tamonten Tegra20 SoM.
    
    Signed-off-by: Richard Leitner <richard.leitner@skidata.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 691b0c0cb6df114c91eaebcded59f143a568fba6
Author: Daniel González Cabanelas <dgcbueu@gmail.com>
Date:   Sun Feb 20 19:19:50 2022 +0100

    media: cx88-mpeg: clear interrupt status register before streaming video
    
    [ Upstream commit 56cb61f70e547e1b0cdfe6ff5a1f1ce6242e6d96 ]
    
    Some cx88 video cards may have transport stream status interrupts set
    to 1 from cold start, causing errors like this:
    
      cx88xx: cx88_print_irqbits: core:irq mpeg  [0x100000] ts_err?*
      cx8802: cx8802_mpeg_irq: mpeg:general errors: 0x00100000
    
    According to CX2388x datasheet, the interrupt status register should be
    cleared before enabling IRQs to stream video.
    
    Fix it by clearing the Transport Stream Interrupt Status register.
    
    Signed-off-by: Daniel González Cabanelas <dgcbueu@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b239e9d52dbe8e3b9588672ced59464c2a9ed997
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Thu Feb 10 19:19:12 2022 +0800

    ASoC: soc-core: skip zero num_dai component in searching dai name
    
    [ Upstream commit f7d344a2bd5ec81fbd1ce76928fd059e57ec9bea ]
    
    In the case like dmaengine which's not a dai but as a component, the
    num_dai is zero, dmaengine component has the same component_of_node
    as cpu dai, when cpu dai component is not ready, but dmaengine component
    is ready, try to get cpu dai name, the snd_soc_get_dai_name() return
    -EINVAL, not -EPROBE_DEFER, that cause below error:
    
    asoc-simple-card <card name>: parse error -22
    asoc-simple-card: probe of <card name> failed with error -22
    
    The sound card failed to probe.
    
    So this patch fixes the issue above by skipping the zero num_dai
    component in searching dai name.
    
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1644491952-7457-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d0afbc41b8974fcb45c32e96b2cd433a2fdd190
Author: Jing Yao <yao.jing2@zte.com.cn>
Date:   Thu Nov 4 11:52:29 2021 +0000

    video: fbdev: udlfb: replace snprintf in show functions with sysfs_emit
    
    [ Upstream commit 81a998288956d09d7a7a2303d47e4d60ad55c401 ]
    
    Use sysfs_emit instead of scnprintf, snprintf or sprintf.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Jing Yao <yao.jing2@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efe9631a76e684d57300e0acf98b882aef3df77d
Author: Jing Yao <yao.jing2@zte.com.cn>
Date:   Fri Nov 5 08:20:44 2021 +0000

    video: fbdev: omapfb: panel-tpo-td043mtea1: Use sysfs_emit() instead of snprintf()
    
    [ Upstream commit c07a039cbb96748f54c02995bae8131cc9a73b0a ]
    
    Use sysfs_emit instead of scnprintf, snprintf or sprintf.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Jing Yao <yao.jing2@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee7ce43367f37af0a70ece6d32ba8f778351f6b5
Author: Jing Yao <yao.jing2@zte.com.cn>
Date:   Fri Nov 5 08:13:33 2021 +0000

    video: fbdev: omapfb: panel-dsi-cm: Use sysfs_emit() instead of snprintf()
    
    [ Upstream commit f63658a59c3d439c8ad7b290f8ec270980e0f384 ]
    
    Use sysfs_emit instead of scnprintf, snprintf or sprintf.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Jing Yao <yao.jing2@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 046d9fd86bd851456c0230f84e15d5f5505e8030
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Thu Feb 3 11:50:25 2022 +0000

    ASoC: madera: Add dependencies on MFD
    
    [ Upstream commit ec29170c724ca30305fc3a19ba2ee73ecac65509 ]
    
    The Madera CODECs use regmap_irq functions but nothing ensures that
    regmap_irq is built into the kernel. Add dependencies on the ASoC
    symbols for the relevant MFD component. There is no point in building
    the ASoC driver if the MFD doesn't support it and the MFD part contains
    the necessary dependencies to ensure everything is built into the
    kernel.
    
    Reported-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20220203115025.16464-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46ac0e768dc7c78033da7d691071f8c26ce49ec3
Author: Richard Schleich <rs@noreya.tech>
Date:   Sat Dec 18 21:00:09 2021 +0100

    ARM: dts: bcm2837: Add the missing L1/L2 cache information
    
    [ Upstream commit bdf8762da268d2a34abf517c36528413906e9cd5 ]
    
    This patch fixes the kernel warning
    "cacheinfo: Unable to detect cache hierarchy for CPU 0"
    for the bcm2837 on newer kernel versions.
    
    Signed-off-by: Richard Schleich <rs@noreya.tech>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    [florian: Align and remove comments matching property values]
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf27f5dfcf826a2292b48e8b3645e680b6a4bdbc
Author: David Heidelberg <david@ixit.cz>
Date:   Sat Jan 8 18:42:28 2022 +0100

    ARM: dts: qcom: fix gic_irq_domain_translate warnings for msm8960
    
    [ Upstream commit 6f7e221e7a5cfc3299616543fce42b36e631497b ]
    
    IRQ types blindly copied from very similar APQ8064.
    
    Fixes warnings as:
    WARNING: CPU: 0 PID: 1 at drivers/irqchip/irq-gic.c:1080 gic_irq_domain_translate+0x118/0x120
    ...
    
    Tested-by: LogicalErzor <logicalerzor@gmail.com> # boot-tested on Samsung S3
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220108174229.60384-1-david@ixit.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3856562e940cc2c6c2d88ebf75e4169d3fad2f57
Author: Yang Guang <yang.guang5@zte.com.cn>
Date:   Tue Nov 30 08:06:03 2021 +0800

    video: fbdev: omapfb: acx565akm: replace snprintf with sysfs_emit
    
    [ Upstream commit 24565bc4115961db7ee64fcc7ad2a7437c0d0a49 ]
    
    coccinelle report:
    ./drivers/video/fbdev/omap2/omapfb/displays/panel-sony-acx565akm.c:
    479:9-17: WARNING: use scnprintf or sprintf
    
    Use sysfs_emit instead of scnprintf or sprintf makes more sense.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Yang Guang <yang.guang5@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53a2088a396cfa1da92690a1da289634cd73bf0d
Author: George Kennedy <george.kennedy@oracle.com>
Date:   Wed Oct 27 15:30:13 2021 -0500

    video: fbdev: cirrusfb: check pixclock to avoid divide by zero
    
    [ Upstream commit 5c6f402bdcf9e7239c6bc7087eda71ac99b31379 ]
    
    Do a sanity check on pixclock value to avoid divide by zero.
    
    If the pixclock value is zero, the cirrusfb driver will round up
    pixclock to get the derived frequency as close to maxclock as
    possible.
    
    Syzkaller reported a divide error in cirrusfb_check_pixclock.
    
    divide error: 0000 [#1] SMP KASAN PTI
    CPU: 0 PID: 14938 Comm: cirrusfb_test Not tainted 5.15.0-rc6 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2
    RIP: 0010:cirrusfb_check_var+0x6f1/0x1260
    
    Call Trace:
     fb_set_var+0x398/0xf90
     do_fb_ioctl+0x4b8/0x6f0
     fb_ioctl+0xeb/0x130
     __x64_sys_ioctl+0x19d/0x220
     do_syscall_64+0x3a/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: George Kennedy <george.kennedy@oracle.com>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b19c7df304f5fb587af68579bfd7a13d570fcd1b
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Wed Aug 11 19:58:26 2021 +0300

    video: fbdev: w100fb: Reset global state
    
    [ Upstream commit 8738ddcac644964ae128ccd3d80d48773c8d528e ]
    
    w100fb_probe() did not reset the global state to its initial state. This
    can result in invocation of iounmap() even when there was not the
    appropriate successful call of ioremap(). For instance, this may be the
    case if first probe fails after two successful ioremap() while second
    probe fails when first ioremap() fails. The similar issue is with
    w100fb_remove(). The patch fixes both bugs.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Co-developed-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Signed-off-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 055cdd2e7b992921424d4daaa285ced787fb205f
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Mon Sep 27 09:45:02 2021 -0600

    video: fbdev: nvidiafb: Use strscpy() to prevent buffer overflow
    
    [ Upstream commit 37a1a2e6eeeb101285cd34e12e48a881524701aa ]
    
    Coverity complains of a possible buffer overflow. However,
    given the 'static' scope of nvidia_setup_i2c_bus() it looks
    like that can't happen after examiniing the call sites.
    
    CID 19036 (#1 of 1): Copy into fixed size buffer (STRING_OVERFLOW)
    1. fixed_size_dest: You might overrun the 48-character fixed-size string
      chan->adapter.name by copying name without checking the length.
    2. parameter_as_source: Note: This defect has an elevated risk because the
      source argument is a parameter of the current function.
     89        strcpy(chan->adapter.name, name);
    
    Fix this warning by using strscpy() which will silence the warning and
    prevent any future buffer overflows should the names used to identify the
    channel become much longer.
    
    Cc: Antonino Daplas <adaplas@gmail.com>
    Cc: linux-fbdev@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe41ad8be036a3de3e4bdde709551aeb4de2fe7d
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Tue Mar 22 14:38:39 2022 -0700

    ntfs: add sanity check on allocation size
    
    [ Upstream commit 714fbf2647b1a33d914edd695d4da92029c7e7c0 ]
    
    ntfs_read_inode_mount invokes ntfs_malloc_nofs with zero allocation
    size.  It triggers one BUG in the __ntfs_malloc function.
    
    Fix this by adding sanity check on ni->attr_list_size.
    
    Link: https://lkml.kernel.org/r/20220120094914.47736-1-dzm91@hust.edu.cn
    Reported-by: syzbot+3c765c5248797356edaa@syzkaller.appspotmail.com
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Acked-by: Anton Altaparmakov <anton@tuxera.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a016c053f426a73752c3b41b60b497b58694d48
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Mar 3 09:38:47 2022 -0500

    ext4: don't BUG if someone dirty pages without asking ext4 first
    
    [ Upstream commit cc5095747edfb054ca2068d01af20be3fcc3634f ]
    
    [un]pin_user_pages_remote is dirtying pages without properly warning
    the file system in advance.  A related race was noted by Jan Kara in
    2018[1]; however, more recently instead of it being a very hard-to-hit
    race, it could be reliably triggered by process_vm_writev(2) which was
    discovered by Syzbot[2].
    
    This is technically a bug in mm/gup.c, but arguably ext4 is fragile in
    that if some other kernel subsystem dirty pages without properly
    notifying the file system using page_mkwrite(), ext4 will BUG, while
    other file systems will not BUG (although data will still be lost).
    
    So instead of crashing with a BUG, issue a warning (since there may be
    potential data loss) and just mark the page as clean to avoid
    unprivileged denial of service attacks until the problem can be
    properly fixed.  More discussion and background can be found in the
    thread starting at [2].
    
    [1] https://lore.kernel.org/linux-mm/20180103100430.GE4911@quack2.suse.cz
    [2] https://lore.kernel.org/r/Yg0m6IjcNmfaSokM@google.com
    
    Reported-by: syzbot+d59332e2db681cf18f0318a06e994ebbb529a8db@syzkaller.appspotmail.com
    Reported-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/YiDS9wVfq4mM2jGK@mit.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07150842fac9e93c2aeb2800b5a8e76c74fc5951
Author: Minghao Chi <chi.minghao@zte.com.cn>
Date:   Tue Mar 15 02:31:38 2022 +0000

    spi: tegra20: Use of_device_get_match_data()
    
    [ Upstream commit c9839acfcbe20ce43d363c2a9d0772472d9921c0 ]
    
    Use of_device_get_match_data() to simplify the code.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Minghao Chi <chi.minghao@zte.com.cn>
    Link: https://lore.kernel.org/r/20220315023138.2118293-1-chi.minghao@zte.com.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cccf9d4fb45f1acbc0bbf6d7e4d8d0fb7a10416
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sat Mar 5 14:02:14 2022 +0300

    PM: core: keep irq flags in device_pm_check_callbacks()
    
    [ Upstream commit 524bb1da785a7ae43dd413cd392b5071c6c367f8 ]
    
    The function device_pm_check_callbacks() can be called under the spin
    lock (in the reported case it happens from genpd_add_device() ->
    dev_pm_domain_set(), when the genpd uses spinlocks rather than mutexes.
    
    However this function uncoditionally uses spin_lock_irq() /
    spin_unlock_irq(), thus not preserving the CPU flags. Use the
    irqsave/irqrestore instead.
    
    The backtrace for the reference:
    [    2.752010] ------------[ cut here ]------------
    [    2.756769] raw_local_irq_restore() called with IRQs enabled
    [    2.762596] WARNING: CPU: 4 PID: 1 at kernel/locking/irqflag-debug.c:10 warn_bogus_irq_restore+0x34/0x50
    [    2.772338] Modules linked in:
    [    2.775487] CPU: 4 PID: 1 Comm: swapper/0 Tainted: G S                5.17.0-rc6-00384-ge330d0d82eff-dirty #684
    [    2.781384] Freeing initrd memory: 46024K
    [    2.785839] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [    2.785841] pc : warn_bogus_irq_restore+0x34/0x50
    [    2.785844] lr : warn_bogus_irq_restore+0x34/0x50
    [    2.785846] sp : ffff80000805b7d0
    [    2.785847] x29: ffff80000805b7d0 x28: 0000000000000000 x27: 0000000000000002
    [    2.785850] x26: ffffd40e80930b18 x25: ffff7ee2329192b8 x24: ffff7edfc9f60800
    [    2.785853] x23: ffffd40e80930b18 x22: ffffd40e80930d30 x21: ffff7edfc0dffa00
    [    2.785856] x20: ffff7edfc09e3768 x19: 0000000000000000 x18: ffffffffffffffff
    [    2.845775] x17: 6572206f74206465 x16: 6c696166203a3030 x15: ffff80008805b4f7
    [    2.853108] x14: 0000000000000000 x13: ffffd40e809550b0 x12: 00000000000003d8
    [    2.860441] x11: 0000000000000148 x10: ffffd40e809550b0 x9 : ffffd40e809550b0
    [    2.867774] x8 : 00000000ffffefff x7 : ffffd40e809ad0b0 x6 : ffffd40e809ad0b0
    [    2.875107] x5 : 000000000000bff4 x4 : 0000000000000000 x3 : 0000000000000000
    [    2.882440] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff7edfc03a8000
    [    2.889774] Call trace:
    [    2.892290]  warn_bogus_irq_restore+0x34/0x50
    [    2.896770]  _raw_spin_unlock_irqrestore+0x94/0xa0
    [    2.901690]  genpd_unlock_spin+0x20/0x30
    [    2.905724]  genpd_add_device+0x100/0x2d0
    [    2.909850]  __genpd_dev_pm_attach+0xa8/0x23c
    [    2.914329]  genpd_dev_pm_attach_by_id+0xc4/0x190
    [    2.919167]  genpd_dev_pm_attach_by_name+0x3c/0xd0
    [    2.924086]  dev_pm_domain_attach_by_name+0x24/0x30
    [    2.929102]  psci_dt_attach_cpu+0x24/0x90
    [    2.933230]  psci_cpuidle_probe+0x2d4/0x46c
    [    2.937534]  platform_probe+0x68/0xe0
    [    2.941304]  really_probe.part.0+0x9c/0x2fc
    [    2.945605]  __driver_probe_device+0x98/0x144
    [    2.950085]  driver_probe_device+0x44/0x15c
    [    2.954385]  __device_attach_driver+0xb8/0x120
    [    2.958950]  bus_for_each_drv+0x78/0xd0
    [    2.962896]  __device_attach+0xd8/0x180
    [    2.966843]  device_initial_probe+0x14/0x20
    [    2.971144]  bus_probe_device+0x9c/0xa4
    [    2.975092]  device_add+0x380/0x88c
    [    2.978679]  platform_device_add+0x114/0x234
    [    2.983067]  platform_device_register_full+0x100/0x190
    [    2.988344]  psci_idle_init+0x6c/0xb0
    [    2.992113]  do_one_initcall+0x74/0x3a0
    [    2.996060]  kernel_init_freeable+0x2fc/0x384
    [    3.000543]  kernel_init+0x28/0x130
    [    3.004132]  ret_from_fork+0x10/0x20
    [    3.007817] irq event stamp: 319826
    [    3.011404] hardirqs last  enabled at (319825): [<ffffd40e7eda0268>] __up_console_sem+0x78/0x84
    [    3.020332] hardirqs last disabled at (319826): [<ffffd40e7fd6d9d8>] el1_dbg+0x24/0x8c
    [    3.028458] softirqs last  enabled at (318312): [<ffffd40e7ec90410>] _stext+0x410/0x588
    [    3.036678] softirqs last disabled at (318299): [<ffffd40e7ed1bf68>] __irq_exit_rcu+0x158/0x174
    [    3.045607] ---[ end trace 0000000000000000 ]---
    
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f24e2362d66702477bba2dceca437c2ffafde5ec
Author: Darren Hart <darren@os.amperecomputing.com>
Date:   Tue Mar 8 10:50:48 2022 -0800

    ACPI/APEI: Limit printable size of BERT table data
    
    [ Upstream commit 3f8dec116210ca649163574ed5f8df1e3b837d07 ]
    
    Platforms with large BERT table data can trigger soft lockup errors
    while attempting to print the entire BERT table data to the console at
    boot:
    
      watchdog: BUG: soft lockup - CPU#160 stuck for 23s! [swapper/0:1]
    
    Observed on Ampere Altra systems with a single BERT record of ~250KB.
    
    The original bert driver appears to have assumed relatively small table
    data. Since it is impractical to reassemble large table data from
    interwoven console messages, and the table data is available in
    
      /sys/firmware/acpi/tables/data/BERT
    
    limit the size for tables printed to the console to 1024 (for no reason
    other than it seemed like a good place to kick off the discussion, would
    appreciate feedback from existing users in terms of what size would
    maintain their current usage model).
    
    Alternatively, we could make printing a CONFIG option, use the
    bert_disable boot arg (or something similar), or use a debug log level.
    However, all those solutions require extra steps or change the existing
    behavior for small table data. Limiting the size preserves existing
    behavior on existing platforms with small table data, and eliminates the
    soft lockups for platforms with large table data, while still making it
    available.
    
    Signed-off-by: Darren Hart <darren@os.amperecomputing.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 931aff627469a75c77b9fd3823146d0575afffd6
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Thu Nov 25 19:15:10 2021 +0100

    Revert "Revert "block, bfq: honor already-setup queue merges""
    
    [ Upstream commit 15729ff8143f8135b03988a100a19e66d7cb7ecd ]
    
    A crash [1] happened to be triggered in conjunction with commit
    2d52c58b9c9b ("block, bfq: honor already-setup queue merges"). The
    latter was then reverted by commit ebc69e897e17 ("Revert "block, bfq:
    honor already-setup queue merges""). Yet, the reverted commit was not
    the one introducing the bug. In fact, it actually triggered a UAF
    introduced by a different commit, and now fixed by commit d29bd41428cf
    ("block, bfq: reset last_bfqq_created on group change").
    
    So, there is no point in keeping commit 2d52c58b9c9b ("block, bfq:
    honor already-setup queue merges") out. This commit restores it.
    
    [1] https://bugzilla.kernel.org/show_bug.cgi?id=214503
    
    Reported-by: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Link: https://lore.kernel.org/r/20211125181510.15004-1-paolo.valente@linaro.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a7b11d694eda5059bca2017e0afe7df0a13f4db
Author: Paul Menzel <pmenzel@molgen.mpg.de>
Date:   Tue Feb 8 16:21:48 2022 +0100

    lib/raid6/test/Makefile: Use $(pound) instead of \# for Make 4.3
    
    [ Upstream commit 633174a7046ec3b4572bec24ef98e6ee89bce14b ]
    
    Buidling raid6test on Ubuntu 21.10 (ppc64le) with GNU Make 4.3 shows the
    errors below:
    
        $ cd lib/raid6/test/
        $ make
        <stdin>:1:1: error: stray ‘\’ in program
        <stdin>:1:2: error: stray ‘#’ in program
        <stdin>:1:11: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ \
            before ‘<’ token
    
        [...]
    
    The errors come from the HAS_ALTIVEC test, which fails, and the POWER
    optimized versions are not built. That’s also reason nobody noticed on the
    other architectures.
    
    GNU Make 4.3 does not remove the backslash anymore. From the 4.3 release
    announcment:
    
    > * WARNING: Backward-incompatibility!
    >   Number signs (#) appearing inside a macro reference or function invocation
    >   no longer introduce comments and should not be escaped with backslashes:
    >   thus a call such as:
    >     foo := $(shell echo '#')
    >   is legal.  Previously the number sign needed to be escaped, for example:
    >     foo := $(shell echo '\#')
    >   Now this latter will resolve to "\#".  If you want to write makefiles
    >   portable to both versions, assign the number sign to a variable:
    >     H := \#
    >     foo := $(shell echo '$H')
    >   This was claimed to be fixed in 3.81, but wasn't, for some reason.
    >   To detect this change search for 'nocomment' in the .FEATURES variable.
    
    So, do the same as commit 9564a8cf422d ("Kbuild: fix # escaping in .cmd
    files for future Make") and commit 929bef467771 ("bpf: Use $(pound) instead
    of \# in Makefiles") and define and use a $(pound) variable.
    
    Reference for the change in make:
    https://git.savannah.gnu.org/cgit/make.git/commit/?id=c6966b323811c37acedff05b57
    
    Cc: Matt Brown <matthew.brown.dev@gmail.com>
    Signed-off-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7f6ae51b1b4e1723cf2e6a6ebf482759a2d1983
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Mar 7 20:28:26 2022 +0100

    ACPICA: Avoid walking the ACPI Namespace if it is not there
    
    [ Upstream commit 0c9992315e738e7d6e927ef36839a466b080dba6 ]
    
    ACPICA commit b1c3656ef4950098e530be68d4b589584f06cddc
    
    Prevent acpi_ns_walk_namespace() from crashing when called with
    start_node equal to ACPI_ROOT_OBJECT if the Namespace has not been
    instantiated yet and acpi_gbl_root_node is NULL.
    
    For instance, this can happen if the kernel is run with "acpi=off"
    in the command line.
    
    Link: https://github.com/acpica/acpica/commit/b1c3656ef4950098e530be68d4b589584f06cddc
    Link: https://lore.kernel.org/linux-acpi/CAJZ5v0hJWW_vZ3wwajE7xT38aWjY7cZyvqMJpXHzUL98-SiCVQ@mail.gmail.com/
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5117c9ff4c2ebae0f5c2c262d42a25a8fbc086e6
Author: Zhang Wensheng <zhangwensheng5@huawei.com>
Date:   Thu Mar 3 15:03:34 2022 +0800

    bfq: fix use-after-free in bfq_dispatch_request
    
    [ Upstream commit ab552fcb17cc9e4afe0e4ac4df95fc7b30e8490a ]
    
    KASAN reports a use-after-free report when doing normal scsi-mq test
    
    [69832.239032] ==================================================================
    [69832.241810] BUG: KASAN: use-after-free in bfq_dispatch_request+0x1045/0x44b0
    [69832.243267] Read of size 8 at addr ffff88802622ba88 by task kworker/3:1H/155
    [69832.244656]
    [69832.245007] CPU: 3 PID: 155 Comm: kworker/3:1H Not tainted 5.10.0-10295-g576c6382529e #8
    [69832.246626] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
    [69832.249069] Workqueue: kblockd blk_mq_run_work_fn
    [69832.250022] Call Trace:
    [69832.250541]  dump_stack+0x9b/0xce
    [69832.251232]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.252243]  print_address_description.constprop.6+0x3e/0x60
    [69832.253381]  ? __cpuidle_text_end+0x5/0x5
    [69832.254211]  ? vprintk_func+0x6b/0x120
    [69832.254994]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.255952]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.256914]  kasan_report.cold.9+0x22/0x3a
    [69832.257753]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.258755]  check_memory_region+0x1c1/0x1e0
    [69832.260248]  bfq_dispatch_request+0x1045/0x44b0
    [69832.261181]  ? bfq_bfqq_expire+0x2440/0x2440
    [69832.262032]  ? blk_mq_delay_run_hw_queues+0xf9/0x170
    [69832.263022]  __blk_mq_do_dispatch_sched+0x52f/0x830
    [69832.264011]  ? blk_mq_sched_request_inserted+0x100/0x100
    [69832.265101]  __blk_mq_sched_dispatch_requests+0x398/0x4f0
    [69832.266206]  ? blk_mq_do_dispatch_ctx+0x570/0x570
    [69832.267147]  ? __switch_to+0x5f4/0xee0
    [69832.267898]  blk_mq_sched_dispatch_requests+0xdf/0x140
    [69832.268946]  __blk_mq_run_hw_queue+0xc0/0x270
    [69832.269840]  blk_mq_run_work_fn+0x51/0x60
    [69832.278170]  process_one_work+0x6d4/0xfe0
    [69832.278984]  worker_thread+0x91/0xc80
    [69832.279726]  ? __kthread_parkme+0xb0/0x110
    [69832.280554]  ? process_one_work+0xfe0/0xfe0
    [69832.281414]  kthread+0x32d/0x3f0
    [69832.282082]  ? kthread_park+0x170/0x170
    [69832.282849]  ret_from_fork+0x1f/0x30
    [69832.283573]
    [69832.283886] Allocated by task 7725:
    [69832.284599]  kasan_save_stack+0x19/0x40
    [69832.285385]  __kasan_kmalloc.constprop.2+0xc1/0xd0
    [69832.286350]  kmem_cache_alloc_node+0x13f/0x460
    [69832.287237]  bfq_get_queue+0x3d4/0x1140
    [69832.287993]  bfq_get_bfqq_handle_split+0x103/0x510
    [69832.289015]  bfq_init_rq+0x337/0x2d50
    [69832.289749]  bfq_insert_requests+0x304/0x4e10
    [69832.290634]  blk_mq_sched_insert_requests+0x13e/0x390
    [69832.291629]  blk_mq_flush_plug_list+0x4b4/0x760
    [69832.292538]  blk_flush_plug_list+0x2c5/0x480
    [69832.293392]  io_schedule_prepare+0xb2/0xd0
    [69832.294209]  io_schedule_timeout+0x13/0x80
    [69832.295014]  wait_for_common_io.constprop.1+0x13c/0x270
    [69832.296137]  submit_bio_wait+0x103/0x1a0
    [69832.296932]  blkdev_issue_discard+0xe6/0x160
    [69832.297794]  blk_ioctl_discard+0x219/0x290
    [69832.298614]  blkdev_common_ioctl+0x50a/0x1750
    [69832.304715]  blkdev_ioctl+0x470/0x600
    [69832.305474]  block_ioctl+0xde/0x120
    [69832.306232]  vfs_ioctl+0x6c/0xc0
    [69832.306877]  __se_sys_ioctl+0x90/0xa0
    [69832.307629]  do_syscall_64+0x2d/0x40
    [69832.308362]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [69832.309382]
    [69832.309701] Freed by task 155:
    [69832.310328]  kasan_save_stack+0x19/0x40
    [69832.311121]  kasan_set_track+0x1c/0x30
    [69832.311868]  kasan_set_free_info+0x1b/0x30
    [69832.312699]  __kasan_slab_free+0x111/0x160
    [69832.313524]  kmem_cache_free+0x94/0x460
    [69832.314367]  bfq_put_queue+0x582/0x940
    [69832.315112]  __bfq_bfqd_reset_in_service+0x166/0x1d0
    [69832.317275]  bfq_bfqq_expire+0xb27/0x2440
    [69832.318084]  bfq_dispatch_request+0x697/0x44b0
    [69832.318991]  __blk_mq_do_dispatch_sched+0x52f/0x830
    [69832.319984]  __blk_mq_sched_dispatch_requests+0x398/0x4f0
    [69832.321087]  blk_mq_sched_dispatch_requests+0xdf/0x140
    [69832.322225]  __blk_mq_run_hw_queue+0xc0/0x270
    [69832.323114]  blk_mq_run_work_fn+0x51/0x60
    [69832.323942]  process_one_work+0x6d4/0xfe0
    [69832.324772]  worker_thread+0x91/0xc80
    [69832.325518]  kthread+0x32d/0x3f0
    [69832.326205]  ret_from_fork+0x1f/0x30
    [69832.326932]
    [69832.338297] The buggy address belongs to the object at ffff88802622b968
    [69832.338297]  which belongs to the cache bfq_queue of size 512
    [69832.340766] The buggy address is located 288 bytes inside of
    [69832.340766]  512-byte region [ffff88802622b968, ffff88802622bb68)
    [69832.343091] The buggy address belongs to the page:
    [69832.344097] page:ffffea0000988a00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88802622a528 pfn:0x26228
    [69832.346214] head:ffffea0000988a00 order:2 compound_mapcount:0 compound_pincount:0
    [69832.347719] flags: 0x1fffff80010200(slab|head)
    [69832.348625] raw: 001fffff80010200 ffffea0000dbac08 ffff888017a57650 ffff8880179fe840
    [69832.354972] raw: ffff88802622a528 0000000000120008 00000001ffffffff 0000000000000000
    [69832.356547] page dumped because: kasan: bad access detected
    [69832.357652]
    [69832.357970] Memory state around the buggy address:
    [69832.358926]  ffff88802622b980: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [69832.360358]  ffff88802622ba00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [69832.361810] >ffff88802622ba80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [69832.363273]                       ^
    [69832.363975]  ffff88802622bb00: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc
    [69832.375960]  ffff88802622bb80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [69832.377405] ==================================================================
    
    In bfq_dispatch_requestfunction, it may have function call:
    
    bfq_dispatch_request
            __bfq_dispatch_request
                    bfq_select_queue
                            bfq_bfqq_expire
                                    __bfq_bfqd_reset_in_service
                                            bfq_put_queue
                                                    kmem_cache_free
    In this function call, in_serv_queue has beed expired and meet the
    conditions to free. In the function bfq_dispatch_request, the address
    of in_serv_queue pointing to has been released. For getting the value
    of idle_timer_disabled, it will get flags value from the address which
    in_serv_queue pointing to, then the problem of use-after-free happens;
    
    Fix the problem by check in_serv_queue == bfqd->in_service_queue, to
    get the value of idle_timer_disabled if in_serve_queue is equel to
    bfqd->in_service_queue. If the space of in_serv_queue pointing has
    been released, this judge will aviod use-after-free problem.
    And if in_serv_queue may be expired or finished, the idle_timer_disabled
    will be false which would not give effects to bfq_update_dispatch_stats.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Wensheng <zhangwensheng5@huawei.com>
    Link: https://lore.kernel.org/r/20220303070334.3020168-1-zhangwensheng5@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e464aafd3537eb14cc5430f83db2f4594bd61f14
Author: Souptick Joarder (HPE) <jrdr.linux@gmail.com>
Date:   Fri Feb 18 22:03:03 2022 +0530

    irqchip/nvic: Release nvic_base upon failure
    
    [ Upstream commit e414c25e3399b2b3d7337dc47abccab5c71b7c8f ]
    
    smatch warning was reported as below ->
    
    smatch warnings:
    drivers/irqchip/irq-nvic.c:131 nvic_of_init()
    warn: 'nvic_base' not released on lines: 97.
    
    Release nvic_base upon failure.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Souptick Joarder (HPE) <jrdr.linux@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220218163303.33344-1-jrdr.linux@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c159eb634e528313639ef098cb8f4898bfc5cf79
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Feb 24 10:12:25 2022 +0000

    irqchip/qcom-pdc: Fix broken locking
    
    [ Upstream commit a6aca2f460e203781dc41391913cc5b54f4bc0ce ]
    
    pdc_enable_intr() serves as a primitive to qcom_pdc_gic_{en,dis}able,
    and has a raw spinlock for mutual exclusion, which is uses with
    interruptible primitives.
    
    This means that this critical section can itself be interrupted.
    Should the interrupt also be a PDC interrupt, and the endpoint driver
    perform an irq_disable() on that interrupt, we end-up in a deadlock.
    
    Fix this by using the irqsave/irqrestore variants of the locking
    primitives.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Maulik Shah <quic_mkshah@quicinc.com>
    Link: https://lore.kernel.org/r/20220224101226.88373-5-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c345724f2b793adfdcf1facee513956056c1f9ca
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Feb 28 15:45:32 2022 -0800

    Fix incorrect type in assignment of ipv6 port for audit
    
    [ Upstream commit a5cd1ab7ab679d252a6d2f483eee7d45ebf2040c ]
    
    Remove inappropriate use of ntohs() and assign the
    port value directly.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 927649f3f379168703813cd32e14fcec5ef46b67
Author: Chaitanya Kulkarni <kch@nvidia.com>
Date:   Tue Feb 15 13:33:07 2022 -0800

    loop: use sysfs_emit() in the sysfs xxx show()
    
    [ Upstream commit b27824d31f09ea7b4a6ba2c1b18bd328df3e8bed ]
    
    sprintf does not know the PAGE_SIZE maximum of the temporary buffer
    used for outputting sysfs content and it's possible to overrun the
    PAGE_SIZE buffer length.
    
    Use a generic sysfs_emit function that knows the size of the
    temporary buffer and ensures that no overrun is done for offset
    attribute in
    loop_attr_[offset|sizelimit|autoclear|partscan|dio]_show() callbacks.
    
    Signed-off-by: Chaitanya Kulkarni <kch@nvidia.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Link: https://lore.kernel.org/r/20220215213310.7264-2-kch@nvidia.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 799f22279e11b67023b0ce547e6518dbcb4508e7
Author: Christian Göttsche <cgzones@googlemail.com>
Date:   Thu Feb 17 15:21:25 2022 +0100

    selinux: use correct type for context length
    
    [ Upstream commit b97df7c098c531010e445da88d02b7bf7bf59ef6 ]
    
    security_sid_to_context() expects a pointer to an u32 as the address
    where to store the length of the computed context.
    
    Reported by sparse:
    
        security/selinux/xfrm.c:359:39: warning: incorrect type in arg 4
                                        (different signedness)
        security/selinux/xfrm.c:359:39:    expected unsigned int
                                           [usertype] *scontext_len
        security/selinux/xfrm.c:359:39:    got int *
    
    Signed-off-by: Christian Göttsche <cgzones@googlemail.com>
    [PM: wrapped commit description]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4f5a678add58a8a0e7ee5e038496b376ea6d205
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Sat Jan 29 09:59:24 2022 +0800

    block, bfq: don't move oom_bfqq
    
    [ Upstream commit 8410f70977734f21b8ed45c37e925d311dfda2e7 ]
    
    Our test report a UAF:
    
    [ 2073.019181] ==================================================================
    [ 2073.019188] BUG: KASAN: use-after-free in __bfq_put_async_bfqq+0xa0/0x168
    [ 2073.019191] Write of size 8 at addr ffff8000ccf64128 by task rmmod/72584
    [ 2073.019192]
    [ 2073.019196] CPU: 0 PID: 72584 Comm: rmmod Kdump: loaded Not tainted 4.19.90-yk #5
    [ 2073.019198] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015
    [ 2073.019200] Call trace:
    [ 2073.019203]  dump_backtrace+0x0/0x310
    [ 2073.019206]  show_stack+0x28/0x38
    [ 2073.019210]  dump_stack+0xec/0x15c
    [ 2073.019216]  print_address_description+0x68/0x2d0
    [ 2073.019220]  kasan_report+0x238/0x2f0
    [ 2073.019224]  __asan_store8+0x88/0xb0
    [ 2073.019229]  __bfq_put_async_bfqq+0xa0/0x168
    [ 2073.019233]  bfq_put_async_queues+0xbc/0x208
    [ 2073.019236]  bfq_pd_offline+0x178/0x238
    [ 2073.019240]  blkcg_deactivate_policy+0x1f0/0x420
    [ 2073.019244]  bfq_exit_queue+0x128/0x178
    [ 2073.019249]  blk_mq_exit_sched+0x12c/0x160
    [ 2073.019252]  elevator_exit+0xc8/0xd0
    [ 2073.019256]  blk_exit_queue+0x50/0x88
    [ 2073.019259]  blk_cleanup_queue+0x228/0x3d8
    [ 2073.019267]  null_del_dev+0xfc/0x1e0 [null_blk]
    [ 2073.019274]  null_exit+0x90/0x114 [null_blk]
    [ 2073.019278]  __arm64_sys_delete_module+0x358/0x5a0
    [ 2073.019282]  el0_svc_common+0xc8/0x320
    [ 2073.019287]  el0_svc_handler+0xf8/0x160
    [ 2073.019290]  el0_svc+0x10/0x218
    [ 2073.019291]
    [ 2073.019294] Allocated by task 14163:
    [ 2073.019301]  kasan_kmalloc+0xe0/0x190
    [ 2073.019305]  kmem_cache_alloc_node_trace+0x1cc/0x418
    [ 2073.019308]  bfq_pd_alloc+0x54/0x118
    [ 2073.019313]  blkcg_activate_policy+0x250/0x460
    [ 2073.019317]  bfq_create_group_hierarchy+0x38/0x110
    [ 2073.019321]  bfq_init_queue+0x6d0/0x948
    [ 2073.019325]  blk_mq_init_sched+0x1d8/0x390
    [ 2073.019330]  elevator_switch_mq+0x88/0x170
    [ 2073.019334]  elevator_switch+0x140/0x270
    [ 2073.019338]  elv_iosched_store+0x1a4/0x2a0
    [ 2073.019342]  queue_attr_store+0x90/0xe0
    [ 2073.019348]  sysfs_kf_write+0xa8/0xe8
    [ 2073.019351]  kernfs_fop_write+0x1f8/0x378
    [ 2073.019359]  __vfs_write+0xe0/0x360
    [ 2073.019363]  vfs_write+0xf0/0x270
    [ 2073.019367]  ksys_write+0xdc/0x1b8
    [ 2073.019371]  __arm64_sys_write+0x50/0x60
    [ 2073.019375]  el0_svc_common+0xc8/0x320
    [ 2073.019380]  el0_svc_handler+0xf8/0x160
    [ 2073.019383]  el0_svc+0x10/0x218
    [ 2073.019385]
    [ 2073.019387] Freed by task 72584:
    [ 2073.019391]  __kasan_slab_free+0x120/0x228
    [ 2073.019394]  kasan_slab_free+0x10/0x18
    [ 2073.019397]  kfree+0x94/0x368
    [ 2073.019400]  bfqg_put+0x64/0xb0
    [ 2073.019404]  bfqg_and_blkg_put+0x90/0xb0
    [ 2073.019408]  bfq_put_queue+0x220/0x228
    [ 2073.019413]  __bfq_put_async_bfqq+0x98/0x168
    [ 2073.019416]  bfq_put_async_queues+0xbc/0x208
    [ 2073.019420]  bfq_pd_offline+0x178/0x238
    [ 2073.019424]  blkcg_deactivate_policy+0x1f0/0x420
    [ 2073.019429]  bfq_exit_queue+0x128/0x178
    [ 2073.019433]  blk_mq_exit_sched+0x12c/0x160
    [ 2073.019437]  elevator_exit+0xc8/0xd0
    [ 2073.019440]  blk_exit_queue+0x50/0x88
    [ 2073.019443]  blk_cleanup_queue+0x228/0x3d8
    [ 2073.019451]  null_del_dev+0xfc/0x1e0 [null_blk]
    [ 2073.019459]  null_exit+0x90/0x114 [null_blk]
    [ 2073.019462]  __arm64_sys_delete_module+0x358/0x5a0
    [ 2073.019467]  el0_svc_common+0xc8/0x320
    [ 2073.019471]  el0_svc_handler+0xf8/0x160
    [ 2073.019474]  el0_svc+0x10/0x218
    [ 2073.019475]
    [ 2073.019479] The buggy address belongs to the object at ffff8000ccf63f00
     which belongs to the cache kmalloc-1024 of size 1024
    [ 2073.019484] The buggy address is located 552 bytes inside of
     1024-byte region [ffff8000ccf63f00, ffff8000ccf64300)
    [ 2073.019486] The buggy address belongs to the page:
    [ 2073.019492] page:ffff7e000333d800 count:1 mapcount:0 mapping:ffff8000c0003a00 index:0x0 compound_mapcount: 0
    [ 2073.020123] flags: 0x7ffff0000008100(slab|head)
    [ 2073.020403] raw: 07ffff0000008100 ffff7e0003334c08 ffff7e00001f5a08 ffff8000c0003a00
    [ 2073.020409] raw: 0000000000000000 00000000001c001c 00000001ffffffff 0000000000000000
    [ 2073.020411] page dumped because: kasan: bad access detected
    [ 2073.020412]
    [ 2073.020414] Memory state around the buggy address:
    [ 2073.020420]  ffff8000ccf64000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020424]  ffff8000ccf64080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020428] >ffff8000ccf64100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020430]                                   ^
    [ 2073.020434]  ffff8000ccf64180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020438]  ffff8000ccf64200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020439] ==================================================================
    
    The same problem exist in mainline as well.
    
    This is because oom_bfqq is moved to a non-root group, thus root_group
    is freed earlier.
    
    Thus fix the problem by don't move oom_bfqq.
    
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Acked-by: Paolo Valente <paolo.valente@linaro.org>
    Link: https://lore.kernel.org/r/20220129015924.3958918-4-yukuai3@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f409e9d1780bf422549b97c11de544760f186620
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Feb 1 12:03:08 2022 +0000

    pinctrl: npcm: Fix broken references to chip->parent_device
    
    [ Upstream commit f7e53e2255808ca3abcc8f38d18ad0823425e771 ]
    
    The npcm driver has a bunch of references to the irq_chip parent_device
    field, but never sets it.
    
    Fix it by fishing that reference from somewhere else, but it is
    obvious that these debug statements were never used. Also remove
    an unused field in a local data structure.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Acked-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Link: https://lore.kernel.org/r/20220201120310.878267-11-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f36dd10d1b9533129c86bc9b4f707fda1abfee06
Author: Kees Cook <keescook@chromium.org>
Date:   Sun Feb 6 09:08:20 2022 -0800

    gcc-plugins/stackleak: Exactly match strings instead of prefixes
    
    [ Upstream commit 27e9faf415dbf94af19b9c827842435edbc1fbbc ]
    
    Since STRING_CST may not be NUL terminated, strncmp() was used for check
    for equality. However, this may lead to mismatches for longer section
    names where the start matches the tested-for string. Test for exact
    equality by checking for the presences of NUL termination.
    
    Cc: Alexander Popov <alex.popov@linux.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddcdda888e14ca451b3ee83d11b65b2a9c8e783b
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Jan 27 04:51:00 2022 +0000

    LSM: general protection fault in legacy_parse_param
    
    [ Upstream commit ecff30575b5ad0eda149aadad247b7f75411fd47 ]
    
    The usual LSM hook "bail on fail" scheme doesn't work for cases where
    a security module may return an error code indicating that it does not
    recognize an input.  In this particular case Smack sees a mount option
    that it recognizes, and returns 0. A call to a BPF hook follows, which
    returns -ENOPARAM, which confuses the caller because Smack has processed
    its data.
    
    The SELinux hook incorrectly returns 1 on success. There was a time
    when this was correct, however the current expectation is that it
    return 0 on success. This is repaired.
    
    Reported-by: syzbot+d1e3b1d92d25abf97943@syzkaller.appspotmail.com
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Acked-by: James Morris <jamorris@linux.microsoft.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f316b42a8e30ccb6524d2f3812b122f46a6e40d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Mar 24 08:52:07 2022 +0300

    lib/test: use after free in register_test_dev_kmod()
    
    [ Upstream commit dc0ce6cc4b133f5f2beb8b47dacae13a7d283c2c ]
    
    The "test_dev" pointer is freed but then returned to the caller.
    
    Fixes: d9c6a72d6fa2 ("kmod: add test driver to stress test the module loader")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a2ba24cee9ad56d749f364a11610e262bba9dbf
Author: Xiaomeng Tong <xiam0nd.tong@gmail.com>
Date:   Mon Mar 28 11:24:31 2022 +0800

    net: dsa: bcm_sf2_cfp: fix an incorrect NULL check on list iterator
    
    [ Upstream commit 6da69b1da130e7d96766042750cd9f902e890eba ]
    
    The bug is here:
            return rule;
    
    The list iterator value 'rule' will *always* be set and non-NULL
    by list_for_each_entry(), so it is incorrect to assume that the
    iterator value will be NULL if the list is empty or no element
    is found.
    
    To fix the bug, return 'rule' when found, otherwise return NULL.
    
    Fixes: ae7a5aff783c7 ("net: dsa: bcm_sf2: Keep copy of inserted rules")
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Link: https://lore.kernel.org/r/20220328032431.22538-1-xiam0nd.tong@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 910a98e5c1e5c8113e4ef179b44bbfe5df9d6a25
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Mar 28 08:36:34 2022 -0400

    NFSv4/pNFS: Fix another issue with a list iterator pointing to the head
    
    [ Upstream commit 7c9d845f0612e5bcd23456a2ec43be8ac43458f1 ]
    
    In nfs4_callback_devicenotify(), if we don't find a matching entry for
    the deviceid, we're left with a pointer to 'struct nfs_server' that
    actually points to the list of super blocks associated with our struct
    nfs_client.
    Furthermore, even if we have a valid pointer, nothing pins the super
    block, and so the struct nfs_server could end up getting freed while
    we're using it.
    
    Since all we want is a pointer to the struct pnfs_layoutdriver_type,
    let's skip all the iteration over super blocks, and just use APIs to
    find the layout driver directly.
    
    Reported-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Fixes: 1be5683b03a7 ("pnfs: CB_NOTIFY_DEVICEID")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9acf05b4e7b55fdb712ef7b331dbce5bcd391d0f
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Sat Mar 26 18:43:46 2022 +0800

    net/x25: Fix null-ptr-deref caused by x25_disconnect
    
    [ Upstream commit 7781607938c8371d4c2b243527430241c62e39c2 ]
    
    When the link layer is terminating, x25->neighbour will be set to NULL
    in x25_disconnect(). As a result, it could cause null-ptr-deref bugs in
    x25_sendmsg(),x25_recvmsg() and x25_connect(). One of the bugs is
    shown below.
    
        (Thread 1)                 |  (Thread 2)
    x25_link_terminated()          | x25_recvmsg()
     x25_kill_by_neigh()           |  ...
      x25_disconnect()             |  lock_sock(sk)
       ...                         |  ...
       x25->neighbour = NULL //(1) |
       ...                         |  x25->neighbour->extended //(2)
    
    The code sets NULL to x25->neighbour in position (1) and dereferences
    x25->neighbour in position (2), which could cause null-ptr-deref bug.
    
    This patch adds lock_sock() in x25_kill_by_neigh() in order to synchronize
    with x25_sendmsg(), x25_recvmsg() and x25_connect(). What`s more, the
    sock held by lock_sock() is not NULL, because it is extracted from x25_list
    and uses x25_list_lock to synchronize.
    
    Fixes: 4becb7ee5b3d ("net/x25: Fix x25_neigh refcnt leak when x25 disconnect")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Reviewed-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d15a70fcda7b78b3e7ed539aa559e9bd04a11848
Author: Tom Rix <trix@redhat.com>
Date:   Sat Mar 26 10:20:03 2022 -0700

    qlcnic: dcb: default to returning -EOPNOTSUPP
    
    [ Upstream commit 1521db37f0d42334a88e8ff28198a27d1ed5cd7b ]
    
    Clang static analysis reports this issue
    qlcnic_dcb.c:382:10: warning: Assigned value is
      garbage or undefined
      mbx_out = *val;
              ^ ~~~~
    
    val is set in the qlcnic_dcb_query_hw_capability() wrapper.
    If there is no query_hw_capability op in dcp, success is
    returned without setting the val.
    
    For this and similar wrappers, return -EOPNOTSUPP.
    
    Fixes: 14d385b99059 ("qlcnic: dcb: Query adapter DCB capabilities.")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ba93ab509ecdc68d451061a8770b30f8d0c359d
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Thu Mar 24 22:05:14 2022 +0200

    selftests: test_vxlan_under_vrf: Fix broken test case
    
    [ Upstream commit b50d3b46f84282d795ae3076111acb75ae1031f3 ]
    
    The purpose of the last test case is to test VXLAN encapsulation and
    decapsulation when the underlay lookup takes place in a non-default VRF.
    This is achieved by enslaving the physical device of the tunnel to a
    VRF.
    
    The binding of the VXLAN UDP socket to the VRF happens when the VXLAN
    device itself is opened, not when its physical device is opened. This
    was also mentioned in the cited commit ("tests that moving the underlay
    from a VRF to another works when down/up the VXLAN interface"), but the
    test did something else.
    
    Fix it by reopening the VXLAN device instead of its physical device.
    
    Before:
    
     # ./test_vxlan_under_vrf.sh
     Checking HV connectivity                                           [ OK ]
     Check VM connectivity through VXLAN (underlay in the default VRF)  [ OK ]
     Check VM connectivity through VXLAN (underlay in a VRF)            [FAIL]
    
    After:
    
     # ./test_vxlan_under_vrf.sh
     Checking HV connectivity                                           [ OK ]
     Check VM connectivity through VXLAN (underlay in the default VRF)  [ OK ]
     Check VM connectivity through VXLAN (underlay in a VRF)            [ OK ]
    
    Fixes: 03f1c26b1c56 ("test/net: Add script for VXLAN underlay in a VRF")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20220324200514.1638326-1-idosch@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae713d7d9987635b86d3a14d0675c994bd821193
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Mar 24 16:24:38 2022 -0700

    net: phy: broadcom: Fix brcm_fet_config_init()
    
    [ Upstream commit bf8bfc4336f7a34e48b3bbd19b1542bf085bdc3d ]
    
    A Broadcom AC201 PHY (same entry as 5241) would be flagged by the
    Broadcom UniMAC MDIO controller as not completing the turn around
    properly since the PHY expects 65 MDC clock cycles to complete a write
    cycle, and the MDIO controller was only sending 64 MDC clock cycles as
    determined by looking at a scope shot.
    
    This would make the subsequent read fail with the UniMAC MDIO controller
    command field having MDIO_READ_FAIL set and we would abort the
    brcm_fet_config_init() function and thus not probe the PHY at all.
    
    After issuing a software reset, wait for at least 1ms which is well
    above the 1us reset delay advertised by the datasheet and issue a dummy
    read to let the PHY turn around the line properly. This read
    specifically ignores -EIO which would be returned by MDIO controllers
    checking for the line being turned around.
    
    If we have a genuine reaad failure, the next read of the interrupt
    status register would pick it up anyway.
    
    Fixes: d7a2ed9248a3 ("broadcom: Add AC131 phy support")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220324232438.1156812-1-f.fainelli@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab2c789d1c0a3d0a682f7aa287754193471ff9f8
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Mar 25 15:20:02 2022 +0100

    xen: fix is_xen_pmu()
    
    [ Upstream commit de2ae403b4c0e79a3410e63bc448542fbb9f9bfc ]
    
    is_xen_pmu() is taking the cpu number as parameter, but it is not using
    it. Instead it just tests whether the Xen PMU initialization on the
    current cpu did succeed. As this test is done by checking a percpu
    pointer, preemption needs to be disabled in order to avoid switching
    the cpu while doing the test. While resuming from suspend() this seems
    not to be the case:
    
    [   88.082751] ACPI: PM: Low-level resume complete
    [   88.087933] ACPI: EC: EC started
    [   88.091464] ACPI: PM: Restoring platform NVS memory
    [   88.097166] xen_acpi_processor: Uploading Xen processor PM info
    [   88.103850] Enabling non-boot CPUs ...
    [   88.108128] installing Xen timer for CPU 1
    [   88.112763] BUG: using smp_processor_id() in preemptible [00000000] code: systemd-sleep/7138
    [   88.122256] caller is is_xen_pmu+0x12/0x30
    [   88.126937] CPU: 0 PID: 7138 Comm: systemd-sleep Tainted: G        W         5.16.13-2.fc32.qubes.x86_64 #1
    [   88.137939] Hardware name: Star Labs StarBook/StarBook, BIOS 7.97 03/21/2022
    [   88.145930] Call Trace:
    [   88.148757]  <TASK>
    [   88.151193]  dump_stack_lvl+0x48/0x5e
    [   88.155381]  check_preemption_disabled+0xde/0xe0
    [   88.160641]  is_xen_pmu+0x12/0x30
    [   88.164441]  xen_smp_intr_init_pv+0x75/0x100
    
    Fix that by replacing is_xen_pmu() by a simple boolean variable which
    reflects the Xen PMU initialization state on cpu 0.
    
    Modify xen_pmu_init() to return early in case it is being called for a
    cpu other than cpu 0 and the boolean variable not being set.
    
    Fixes: bf6dfb154d93 ("xen/PMU: PMU emulation code")
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20220325142002.31789-1-jgross@suse.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d85841e4b2ff129061874466b8e0108b84da155c
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Fri Mar 25 17:11:42 2022 +0100

    clk: Initialize orphan req_rate
    
    [ Upstream commit 5f7e2af00807f2117650e711a58b7f0e986ce1df ]
    
    When registering a clock that doesn't have a recalc_rate implementation,
    and doesn't have its parent registered yet, we initialize the clk_core
    rate and 'req_rate' fields to 0.
    
    The rate field is later updated when the parent is registered in
    clk_core_reparent_orphans_nolock() using __clk_recalc_rates(), but the
    'req_rate' field is never updated.
    
    This leads to an issue in clk_set_rate_range() and clk_put(), since
    those functions will call clk_set_rate() with the content of 'req_rate'
    to provide drivers with the opportunity to change the rate based on the
    new boundaries. In this case, we would call clk_set_rate() with a rate
    of 0, effectively enforcing the minimum allowed for this clock whenever
    we would call one of those two functions, even though the actual rate
    might be within range.
    
    Let's fix this by setting 'req_rate' in
    clk_core_reparent_orphans_nolock() with the rate field content just
    updated by the call to __clk_recalc_rates().
    
    Fixes: 1c8e600440c7 ("clk: Add rate constraints to clocks")
    Reported-by: Dmitry Osipenko <dmitry.osipenko@collabora.com>
    Tested-by: Dmitry Osipenko <dmitry.osipenko@collabora.com> # T30 Nexus7
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220325161144.1901695-2-maxime@cerno.tech
    [sboyd@kernel.org: Reword comment]
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 025c75ba3811de195b7c1ec60cf0f60ff7145649
Author: Konrad Dybcio <konrad.dybcio@somainline.org>
Date:   Sat Mar 19 18:49:40 2022 +0100

    clk: qcom: gcc-msm8994: Fix gpll4 width
    
    [ Upstream commit 71021db1c532c2545ae53b9ee85b37b7154f51d4 ]
    
    The gpll4 postdiv is actually a div4, so make sure that Linux is aware of
    this.
    
    This fixes the following error messages:
    
     mmc1: Card appears overclocked; req 200000000 Hz, actual 343999999 Hz
     mmc1: Card appears overclocked; req 400000000 Hz, actual 687999999 Hz
    
    Fixes: aec89f78cf01 ("clk: qcom: Add support for msm8994 global clock controller")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Link: https://lore.kernel.org/r/20220319174940.341137-1-konrad.dybcio@somainline.org
    Tested-by: Petr Vorel <petr.vorel@gmail.com>
    Reviewed-by: Petr Vorel <petr.vorel@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6f1c9a51e281afc186c16d0102d40866f4ab264
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Mar 24 10:38:42 2022 -0400

    NFSv4.1: don't retry BIND_CONN_TO_SESSION on session error
    
    [ Upstream commit 1d15d121cc2ad4d016a7dc1493132a9696f91fc5 ]
    
    There is no reason to retry the operation if a session error had
    occurred in such case result structure isn't filled out.
    
    Fixes: dff58530c4ca ("NFSv4.1: fix handling of backchannel binding in BIND_CONN_TO_SESSION")
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 806ef544cf1ac6697654b2c3579119acae1415b9
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Mar 21 11:38:32 2022 +0100

    netfilter: nf_conntrack_tcp: preserve liberal flag in tcp options
    
    [ Upstream commit f2dd495a8d589371289981d5ed33e6873df94ecc ]
    
    Do not reset IP_CT_TCP_FLAG_BE_LIBERAL flag in out-of-sync scenarios
    coming before the TCP window tracking, otherwise such connections will
    fail in the window check.
    
    Update tcp_options() to leave this flag in place and add a new helper
    function to reset the tcp window state.
    
    Based on patch from Sven Auhagen.
    
    Fixes: c4832c7bbc3f ("netfilter: nf_ct_tcp: improve out-of-sync situation in TCP tracking")
    Tested-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cec71a718ce1263aa968d761bed2f8875edd5bc3
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sat Mar 19 22:30:00 2022 +0300

    jfs: fix divide error in dbNextAG
    
    [ Upstream commit 2cc7cc01c15f57d056318c33705647f87dcd4aab ]
    
    Syzbot reported divide error in dbNextAG(). The problem was in missing
    validation check for malicious image.
    
    Syzbot crafted an image with bmp->db_numag equal to 0. There wasn't any
    validation checks, but dbNextAG() blindly use bmp->db_numag in divide
    expression
    
    Fix it by validating bmp->db_numag in dbMount() and return an error if
    image is malicious
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-and-tested-by: syzbot+46f5c25af73eb8330eb6@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3ac1e01963ddbc024ceb67ad9cada0e2fe85bbf
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 20:18:29 2022 -0800

    driver core: dd: fix return value of __setup handler
    
    [ Upstream commit f2aad54703dbe630f9d8b235eb58e8c8cc78f37d ]
    
    When "driver_async_probe=nulltty" is used on the kernel boot command line,
    it causes an Unknown parameter message and the string is added to init's
    environment strings, polluting them.
    
      Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc6
      driver_async_probe=nulltty", will be passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc6
         driver_async_probe=nulltty
    
    Change the return value of the __setup function to 1 to indicate
    that the __setup option has been handled.
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 1ea61b68d0f8 ("async: Add cmdline option to specify drivers to be async probed")
    Cc: Feng Tang <feng.tang@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "Rafael J. Wysocki" <rafael@kernel.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Reviewed-by: Feng Tang <feng.tang@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220301041829.15137-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bb231de81fced226db5b610c07f0fc9f149189f
Author: David Gow <davidgow@google.com>
Date:   Fri Feb 25 12:15:02 2022 +0800

    firmware: google: Properly state IOMEM dependency
    
    [ Upstream commit 37fd83916da2e4cae03d350015c82a67b1b334c4 ]
    
    The Google Coreboot implementation requires IOMEM functions
    (memmremap, memunmap, devm_memremap), but does not specify this is its
    Kconfig. This results in build errors when HAS_IOMEM is not set, such as
    on some UML configurations:
    
    /usr/bin/ld: drivers/firmware/google/coreboot_table.o: in function `coreboot_table_probe':
    coreboot_table.c:(.text+0x311): undefined reference to `memremap'
    /usr/bin/ld: coreboot_table.c:(.text+0x34e): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/memconsole-coreboot.o: in function `memconsole_probe':
    memconsole-coreboot.c:(.text+0x12d): undefined reference to `memremap'
    /usr/bin/ld: memconsole-coreboot.c:(.text+0x17e): undefined reference to `devm_memremap'
    /usr/bin/ld: memconsole-coreboot.c:(.text+0x191): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/vpd.o: in function `vpd_section_destroy.isra.0':
    vpd.c:(.text+0x300): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/vpd.o: in function `vpd_section_init':
    vpd.c:(.text+0x382): undefined reference to `memremap'
    /usr/bin/ld: vpd.c:(.text+0x459): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/vpd.o: in function `vpd_probe':
    vpd.c:(.text+0x59d): undefined reference to `memremap'
    /usr/bin/ld: vpd.c:(.text+0x5d3): undefined reference to `memunmap'
    collect2: error: ld returned 1 exit status
    
    Fixes: a28aad66da8b ("firmware: coreboot: Collapse platform drivers into bus core")
    Acked-By: anton ivanov <anton.ivanov@cambridgegreys.com>
    Acked-By: Julius Werner <jwerner@chromium.org>
    Signed-off-by: David Gow <davidgow@google.com>
    Link: https://lore.kernel.org/r/20220225041502.1901806-1-davidgow@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9f2a8c6428d097b619163d8aed35ee89b6f55cc
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Mar 7 19:32:55 2022 -0800

    kgdbts: fix return value of __setup handler
    
    [ Upstream commit 96c9e802c64014a7716865332d732cc9c7f24593 ]
    
    __setup() handlers should return 1 to indicate that the boot option
    has been handled. A return of 0 causes the boot option/value to be
    listed as an Unknown kernel parameter and added to init's (limited)
    environment strings. So return 1 from kgdbts_option_setup().
    
    Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc7
      kgdboc=kbd kgdbts=", will be passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc7
         kgdboc=kbd
         kgdbts=
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: e8d31c204e36 ("kgdb: add kgdb internal test suite")
    Cc: kgdb-bugreport@lists.sourceforge.net
    Cc: Jason Wessel <jason.wessel@windriver.com>
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220308033255.22118-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16fe77f86aa58418f20de13d614db88d608537bb
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 8 19:30:18 2022 -0800

    kgdboc: fix return value of __setup handler
    
    [ Upstream commit ab818c7aa7544bf8d2dd4bdf68878b17a02eb332 ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) environment strings.
    So return 1 from kgdboc_option_setup().
    
    Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc7
      kgdboc=kbd kgdbts=", will be passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc7
         kgdboc=kbd
         kgdbts=
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 1bd54d851f50 ("kgdboc: Passing ekgdboc to command line causes panic")
    Fixes: f2d937f3bf00 ("consoles: polling support, kgdboc")
    Cc: He Zhe <zhe.he@windriver.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: kgdb-bugreport@lists.sourceforge.net
    Cc: Jason Wessel <jason.wessel@windriver.com>
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: linux-serial@vger.kernel.org
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220309033018.17936-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c617cb38c192ab86526613444bdffe9b21e9085
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Mar 7 18:42:28 2022 -0800

    tty: hvc: fix return value of __setup handler
    
    [ Upstream commit 53819a0d97aace1425bb042829e3446952a9e8a9 ]
    
    __setup() handlers should return 1 to indicate that the boot option
    has been handled or 0 to indicate that it was not handled.
    Add a pr_warn() message if the option value is invalid and then
    always return 1.
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 86b40567b917 ("tty: replace strict_strtoul() with kstrtoul()")
    Cc: Jingoo Han <jg1.han@samsung.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Julian Wiedmann <jwi@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: linuxppc-dev@lists.ozlabs.org
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220308024228.20477-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0615a444c5dd955db6cc7bd96292a21d40bf321c
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 12:02:34 2022 +0000

    pinctrl/rockchip: Add missing of_node_put() in rockchip_pinctrl_probe
    
    [ Upstream commit 89388f8730699c259f8090ec435fb43569efe4ac ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: 1e747e59cc4d ("pinctrl: rockchip: base regmap supplied by a syscon")
    Fixes: 14dee8677e19 ("pinctrl: rockchip: let pmu registers be supplied by a syscon")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220307120234.28657-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc1e29a35147c1ba6ea2b06a16cb0028f7c852d2
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 11:51:16 2022 +0000

    pinctrl: nomadik: Add missing of_node_put() in nmk_pinctrl_probe
    
    [ Upstream commit c09ac191b1f97cfa06f394dbfd7a5db07986cefc ]
    
    This node pointer is returned by of_parse_phandle() with refcount
    incremented in this function. Calling of_node_put() to avoid
    the refcount leak.
    
    Fixes: 32e67eee670e ("pinctrl: nomadik: Allow prcm_base to be extracted from Device Tree")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220307115116.25316-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27681f9e02e7c84b09378cb86e57238422907bec
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:49 2022 +0800

    pinctrl: mediatek: paris: Fix pingroup pin config state readback
    
    [ Upstream commit 54fe55fb384ade630ef20b9a8b8f3b2a89ad97f2 ]
    
    mtk_pconf_group_get(), used to read back pingroup pin config state,
    simply returns a set of configs saved from a previous invocation of
    mtk_pconf_group_set(). This is an unfiltered, unvalidated set passed
    in from the pinconf core, which does not match the current hardware
    state.
    
    Since the driver library is designed to have one pin per group, pass
    through mtk_pconf_group_get() to mtk_pinconf_get(), to read back the
    current pin config state of the only pin in the group.
    
    Also drop the assignment of pin config state to the group.
    
    Fixes: 805250982bb5 ("pinctrl: mediatek: add pinctrl-paris that implements the vendor dt-bindings")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-5-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9eacc8952ea8572a6c44d9f5273d53fdf5b7a58
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:48 2022 +0800

    pinctrl: mediatek: paris: Fix "argument" argument type for mtk_pinconf_get()
    
    [ Upstream commit 19bce7ce0a593c7024030a0cda9e23facea3c93d ]
    
    For mtk_pinconf_get(), the "argument" argument is typically returned by
    pinconf_to_config_argument(), which holds the value for a given pinconf
    parameter. It certainly should not have the type of "enum pin_config_param",
    which describes the type of the pinconf parameter itself.
    
    Change the type to u32, which matches the return type of
    pinconf_to_config_argument().
    
    Fixes: 805250982bb5 ("pinctrl: mediatek: add pinctrl-paris that implements the vendor dt-bindings")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-4-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b348618c175e2cef6571c1a3a25b26a6810cfcc2
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 07:11:54 2022 +0000

    pinctrl: mediatek: Fix missing of_node_put() in mtk_pctrl_init
    
    [ Upstream commit dab4df9ca919f59e5b9dd84385eaf34d4f20dbb0 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: a6df410d420a ("pinctrl: mediatek: Add Pinctrl/GPIO driver for mt8135.")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308071155.21114-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e0d6961886394504df645d1ae760c44a15ce78b
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Fri Mar 11 12:03:19 2022 +0300

    staging: mt7621-dts: fix LEDs and pinctrl on GB-PC1 devicetree
    
    [ Upstream commit 6256e18686158fa49e019297f990f1c1817aabf1 ]
    
    Fix LED and pinctrl definitions on the GB-PC1 devicetree. Refer to the
    schematics of the device for more information.
    
    LED fixes:
    - Change GPIO6 LED label from system to power as GPIO6 is connected to
    PLED.
    - Add default-on default-trigger to power LED.
    - Change GPIO8 LED label from status to system as GPIO8 is connected to
    SYS_LED.
    - Add disk-activity default-trigger to system LED.
    - Switch to the color:function naming scheme.
    - Remove lan1 and lan2 LEDs as they don't exist.
    
    Pinctrl fixes:
    - Claim state_default node under pinctrl node.
    - Change pinctrl0 node name to state-default.
    - Change gpio node name to gpio-pinmux to respect
    Documentation/devicetree/bindings/pinctrl/ralink,rt2880-pinmux.yaml.
    - Sort pin groups alphabetically.
    
    Misc fixes:
    - Fix formatting.
    - Use the status value "okay".
    - Define hexadecimal addresses in lower case.
    - Make hexadecimal addresses for memory easier to read.
    
    Link: https://github.com/ngiger/GnuBee_Docs/blob/master/GB-PCx/Documents/GB-PC1_V1.0_Schematic.pdf
    Tested-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Link: https://lore.kernel.org/r/20220311090320.3068-1-arinc.unal@arinc9.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efc605469e4773690bfd09aee946ebd62bde7609
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Tue Feb 15 13:17:04 2022 +0300

    NFS: remove unneeded check in decode_devicenotify_args()
    
    [ Upstream commit cb8fac6d2727f79f211e745b16c9abbf4d8be652 ]
    
    [You don't often get email from khoroshilov@ispras.ru. Learn why this is important at http://aka.ms/LearnAboutSenderIdentification.]
    
    Overflow check in not needed anymore after we switch to kmalloc_array().
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: a4f743a6bb20 ("NFSv4.1: Convert open-coded array allocation calls to kmalloc_array()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 110c038779ccafc0ed7283fa32436c10507a5334
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 12 10:45:01 2022 +0000

    clk: tegra: tegra124-emc: Fix missing put_device() call in emc_ensure_emc_driver
    
    [ Upstream commit 6d6ef58c2470da85a99119f74d34216c8074b9f0 ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore.
    Add the corresponding 'put_device()' in the error handling path.
    
    Fixes: 2db04f16b589 ("clk: tegra: Add EMC clock driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Link: https://lore.kernel.org/r/20220112104501.30655-1-linmq006@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b5e68095c4353627d34fdacdd4b9e0dcc78cdfe
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Fri Feb 18 01:09:20 2022 +0100

    clk: clps711x: Terminate clk_div_table with sentinel element
    
    [ Upstream commit 8bed4ed5aa3431085d9d27afc35d684856460eda ]
    
    In order that the end of a clk_div_table can be detected, it must be
    terminated with a sentinel element (.div = 0).
    
    Fixes: 631c53478973d ("clk: Add CLPS711X clk driver")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Link: https://lore.kernel.org/r/20220218000922.134857-5-j.neuschaefer@gmx.net
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 166c0185f32fd2b4cc2fc2a46dfc3ed723e53802
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Fri Feb 18 01:09:18 2022 +0100

    clk: loongson1: Terminate clk_div_table with sentinel element
    
    [ Upstream commit 3eb00f89162e80083dfcaa842468b510462cfeaa ]
    
    In order that the end of a clk_div_table can be detected, it must be
    terminated with a sentinel element (.div = 0).
    
    Fixes: b4626a7f4892 ("CLK: Add Loongson1C clock support")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Philippe Mathieu-Daudé <f4bug@amsat.org>
    Link: https://lore.kernel.org/r/20220218000922.134857-3-j.neuschaefer@gmx.net
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d04467bbbd0b3317231daa57341709b71aae626
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Fri Feb 18 01:09:17 2022 +0100

    clk: actions: Terminate clk_div_table with sentinel element
    
    [ Upstream commit d8a441e53e2434b1401e52dfd66b05263e442edc ]
    
    In order that the end of a clk_div_table can be detected, it must be
    terminated with a sentinel element (.div = 0).
    
    In owl-s900.s, the { 0, 8 } element was probably meant to be just that,
    so this patch changes { 0, 8 } to { 0, 0 }.
    
    Fixes: d47317ca4ade1 ("clk: actions: Add S700 SoC clock support")
    Fixes: d85d20053e195 ("clk: actions: Add S900 SoC clock support")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Manivannan Sadhasivam <mani@kernel.org>
    Link: https://lore.kernel.org/r/20220218000922.134857-2-j.neuschaefer@gmx.net
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50b48ba439bc355f649930a8412210b7c876dd31
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 06:31:02 2022 +0000

    remoteproc: qcom_wcnss: Add missing of_node_put() in wcnss_alloc_memory_region
    
    [ Upstream commit 8f90161a66bc3d6b9fe8dde4d9028d20eae1b62a ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: aed361adca9f ("remoteproc: qcom: Introduce WCNSS peripheral image loader")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220308063102.10049-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5625e7a16e3d0f4df727e919f8b252490bb2880
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 03:12:19 2022 +0000

    remoteproc: qcom: Fix missing of_node_put in adsp_alloc_memory_region
    
    [ Upstream commit 505b5b1616e200042999de715dbe7c1e2735cd65 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: dc160e449122 ("remoteproc: qcom: Introduce Non-PAS ADSP PIL driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220308031219.4718-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16ad029942bd775a9632ac01e857987764605365
Author: Taniya Das <tdas@codeaurora.org>
Date:   Sun Feb 27 23:25:36 2022 +0530

    clk: qcom: clk-rcg2: Update the frac table for pixel clock
    
    [ Upstream commit b527358cb4cd58a8279c9062b0786f1fab628fdc ]
    
    Support the new numerator and denominator for pixel clock on SM8350 and
    support rgb101010, RGB888 use cases on SM8450.
    
    Fixes: 99cbd064b059f ("clk: qcom: Support display RCG clocks")
    Signed-off-by: Taniya Das <tdas@codeaurora.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220227175536.3131-2-tdas@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52592f9afbfe01bce8f8953e4f19cbe3bcbdbd3a
Author: Taniya Das <tdas@codeaurora.org>
Date:   Sun Feb 27 23:25:35 2022 +0530

    clk: qcom: clk-rcg2: Update logic to calculate D value for RCG
    
    [ Upstream commit 58922910add18583d5273c2edcdb9fd7bf4eca02 ]
    
    The display pixel clock has a requirement on certain newer platforms to
    support M/N as (2/3) and the final D value calculated results in
    underflow errors.
    As the current implementation does not check for D value is within
    the accepted range for a given M & N value. Update the logic to
    calculate the final D value based on the range.
    
    Fixes: 99cbd064b059f ("clk: qcom: Support display RCG clocks")
    Signed-off-by: Taniya Das <tdas@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220227175536.3131-1-tdas@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b576488fa3b5715a1ef3eafc0b1c1d3514345613
Author: Abel Vesa <abel.vesa@nxp.com>
Date:   Thu Jan 27 16:10:52 2022 +0200

    clk: imx7d: Remove audio_mclk_root_clk
    
    [ Upstream commit eccac77ede3946c90143447cdc785dc16aec4b24 ]
    
    The audio_mclk_root_clk was added as a gate with the CCGR121 (0x4790),
    but according to the reference manual, there is no such gate. The
    CCGR121 belongs to ECSPI2 and it is not shared.
    
    Fixes: 8f6d8094b215b57 ("ARM: imx: add imx7d clk tree support")
    Reported-by: David Wolfe <david.wolfe@nxp.com>
    Signed-off-by: Abel Vesa <abel.vesa@nxp.com>
    Reviewed-by: Peng Fan <peng.fan@nxp.com>
    Link: https://lore.kernel.org/r/20220127141052.1900174-2-abel.vesa@nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79467b9563331e95faae5a549be050304e7bf8e6
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:04:53 2022 -0800

    dma-debug: fix return value of __setup handlers
    
    [ Upstream commit 80e4390981618e290616dbd06ea190d4576f219d ]
    
    When valid kernel command line parameters
      dma_debug=off dma_debug_entries=100
    are used, they are reported as Unknown parameters and added to init's
    environment strings, polluting it.
    
      Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc5
        dma_debug=off dma_debug_entries=100", will be passed to user space.
    
    and
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         dma_debug=off
         dma_debug_entries=100
    
    Return 1 from these __setup handlers to indicate that the command line
    option has been handled.
    
    Fixes: 59d3daafa1726 ("dma-debug: add kernel command line parameters")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: iommu@lists.linux-foundation.org
    Cc: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe334765e4bbaf1b32004f202f9f5a6e96f3a964
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Feb 24 10:59:37 2022 -0500

    NFS: Return valid errors from nfs2/3_decode_dirent()
    
    [ Upstream commit 64cfca85bacde54caa64e0ab855c48734894fa37 ]
    
    Valid return values for decode_dirent() callback functions are:
     0: Success
     -EBADCOOKIE: End of directory
     -EAGAIN: End of xdr_stream
    
    All errors need to map into one of those three values.
    
    Fixes: 573c4e1ef53a ("NFS: Simplify ->decode_dirent() calling sequence")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 546604de8acc4ab7846b4fcc6283c7003be280e4
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 24 14:28:49 2022 +0800

    iio: adc: Add check for devm_request_threaded_irq
    
    [ Upstream commit b30537a4cedcacf0ade2f33ebb7610178ed1e7d7 ]
    
    As the potential failure of the devm_request_threaded_irq(),
    it should be better to check the return value and return
    error if fails.
    
    Fixes: fa659a40b80b ("iio: adc: twl6030-gpadc: Use devm_* API family")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220224062849.3280966-1-jiasheng@iscas.ac.cn
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1da082f728c72737c08ee38a4ae70f408dca67cc
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Feb 15 17:02:36 2022 +0100

    serial: 8250: Fix race condition in RTS-after-send handling
    
    [ Upstream commit dedab69fd650ea74710b2e626e63fd35584ef773 ]
    
    Set em485->active_timer = NULL isn't always enough to take out the stop
    timer. While there is a check that it acts in the right state (i.e.
    waiting for RTS-after-send to pass after sending some chars) but the
    following might happen:
    
     - CPU1: some chars send, shifter becomes empty, stop tx timer armed
     - CPU0: more chars send before RTS-after-send expired
     - CPU0: shifter empty irq, port lock taken
     - CPU1: tx timer triggers, waits for port lock
     - CPU0: em485->active_timer = &em485->stop_tx_timer, hrtimer_start(),
       releases lock()
     - CPU1: get lock, see em485->active_timer == &em485->stop_tx_timer,
       tear down RTS too early
    
    This fix bases on research done by Steffen Trumtrar.
    
    Fixes: b86f86e8e7c5 ("serial: 8250: fix potential deadlock in rs485-mode")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20220215160236.344236-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 617d9c0b98063e6be8d81bada85969874cf43404
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Feb 15 12:09:20 2022 +0200

    serial: 8250_mid: Balance reference count for PCI DMA device
    
    [ Upstream commit 67ec6dd0b257bd81b4e9fcac89b29da72f6265e5 ]
    
    The pci_get_slot() increases its reference count, the caller
    must decrement the reference count by calling pci_dev_put().
    
    Fixes: 90b9aacf912a ("serial: 8250_pci: add Intel Tangier support")
    Fixes: f549e94effa1 ("serial: 8250_pci: add Intel Penwell ports")
    Reported-by: Qing Wang <wangqing@vivo.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Depends-on: d9eda9bab237 ("serial: 8250_pci: Intel MID UART support to its own driver")
    Link: https://lore.kernel.org/r/20220215100920.41984-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61d3fdef61b918a668ac08ff2e9260d442a4fd20
Author: Liu Ying <victor.liu@nxp.com>
Date:   Wed Feb 16 15:12:57 2022 +0800

    phy: dphy: Correct lpx parameter and its derivatives(ta_{get,go,sure})
    
    [ Upstream commit 3153fa38e38af566cf6454a03b1dbadaf6f323c0 ]
    
    According to the comment of the function phy_mipi_dphy_get_default_config(),
    it uses minimum D-PHY timings based on MIPI D-PHY specification.  They are
    derived from the valid ranges specified in Section 6.9, Table 14, Page 41
    of the D-PHY specification (v1.2).  The table 14 explicitly mentions that
    the minimum T-LPX parameter is 50 nanoseconds and the minimum TA-SURE
    parameter is T-LPX nanoseconds.  Likewise, the kernel doc of the 'lpx' and
    'ta_sure' members of struct phy_configure_opts_mipi_dphy mentions that
    the minimum values are 50000 picoseconds and @lpx picoseconds respectively.
    Also, the function phy_mipi_dphy_config_validate() checks if cfg->lpx is
    less than 50000 picoseconds and if cfg->ta_sure is less than cfg->lpx,
    which hints the same minimum values.
    
    Without this patch, the function phy_mipi_dphy_get_default_config()
    wrongly sets cfg->lpx to 60000 picoseconds and cfg->ta_sure to 2 * cfg->lpx.
    So, let's correct them to 50000 picoseconds and cfg->lpx respectively.
    
    Note that I've only tested the patch with RM67191 DSI panel on i.MX8mq EVK.
    Help is needed to test with other i.MX8mq, Meson and Rockchip platforms,
    as I don't have the hardwares.
    
    Fixes: dddc97e82303 ("phy: dphy: Add configuration helpers")
    Cc: Andrzej Hajda <andrzej.hajda@intel.com>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Kishon Vijay Abraham I <kishon@ti.com>
    Cc: Vinod Koul <vkoul@kernel.org>
    Cc: Heiko Stuebner <heiko@sntech.de>
    Cc: Maxime Ripard <mripard@kernel.org>
    Cc: Guido Günther <agx@sigxcpu.org>
    Signed-off-by: Liu Ying <victor.liu@nxp.com>
    Link: https://lore.kernel.org/r/20220216071257.1647703-1-victor.liu@nxp.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84ee0c81dd28410aaa03c6a504b7c59224990fbd
Author: Dirk Buchwalder <buchwalder@posteo.de>
Date:   Thu Feb 10 18:31:00 2022 +0100

    clk: qcom: ipq8074: Use floor ops for SDCC1 clock
    
    [ Upstream commit b77d8306d84f83d1da68028a68c91da9c867b6f6 ]
    
    Use floor ops on SDCC1 APPS clock in order to round down selected clock
    frequency and avoid overclocking SD/eMMC cards.
    
    For example, currently HS200 cards were failling tuning as they were
    actually being clocked at 384MHz instead of 192MHz.
    This caused some boards to disable 1.8V I/O and force the eMMC into the
    standard HS mode (50MHz) and that appeared to work despite the eMMC being
    overclocked to 96Mhz in that case.
    
    There was a previous commit to use floor ops on SDCC clocks, but it looks
    to have only covered SDCC2 clock.
    
    Fixes: 9607f6224b39 ("clk: qcom: ipq8074: add PCIE, USB and SDCC clocks")
    
    Signed-off-by: Dirk Buchwalder <buchwalder@posteo.de>
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220210173100.505128-1-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd719fca42e455bc6ddc7e9f49b3d63a66aa7c61
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 23 15:41:11 2021 +0100

    pinctrl: renesas: r8a77470: Reduce size for narrow VIN1 channel
    
    [ Upstream commit 9e04a0eda84fccab0ac22a33825ad53f47c968c7 ]
    
    The second video-in channel on RZ/G1C has only 12 data lanes, but the
    pin control driver uses the vin_data union, which is meant for 24 data
    lanes, thus wasting space.
    
    Fix this by using the vin_data12 union instead.
    
    This reduces kernel size by 96 bytes.
    
    Fixes: 50f3f2d73e3426ba ("pinctrl: sh-pfc: Reduce kernel size for narrow VIN channels")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/52716fa89139f6f92592633edb52804d4c5e18f0.1640269757.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b82465c1ff4a89ed54bdb438090f069ddea4ba47
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Feb 6 19:03:09 2022 +0000

    staging:iio:adc:ad7280a: Fix handing of device address bit reversing.
    
    [ Upstream commit f281e4ddbbc0b60f061bc18a2834e9363ba85f9f ]
    
    The bit reversal was wrong for bits 1 and 3 of the 5 bits.
    Result is driver failure to probe if you have more than 2 daisy-chained
    devices.  Discovered via QEMU based device emulation.
    
    Fixes tag is for when this moved from a macro to a function, but it
    was broken before that.
    
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Fixes: 065a7c0b1fec ("Staging: iio: adc: ad7280a.c: Fixed Macro argument reuse")
    Reviewed-by: Marcelo Schmitt <marcelo.schmitt1@gmail.com>
    Link: https://lore.kernel.org/r/20220206190328.333093-2-jic23@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ba0143128eec9407cfc901412ee8239c429d5c1
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Feb 6 09:39:54 2022 +0100

    misc: alcor_pci: Fix an error handling path
    
    [ Upstream commit 5b3dc949f554379edcb8ef6111aa5ecb78feb798 ]
    
    A successful ida_simple_get() should be balanced by a corresponding
    ida_simple_remove().
    
    Add the missing call in the error handling path of the probe.
    
    While at it, switch to ida_alloc()/ida_free() instead to
    ida_simple_get()/ida_simple_remove().
    The latter is deprecated and more verbose.
    
    Fixes: 4f556bc04e3c ("misc: cardreader: add new Alcor Micro Cardreader PCI driver")
    Reviewed-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/918a9875b7f67b7f8f123c4446452603422e8c5e.1644136776.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af1fdbbb7b221678a8c7b3151b46e7c2be5e8fe2
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Nov 10 09:49:48 2021 +0100

    pwm: lpc18xx-sct: Initialize driver data and hardware before pwmchip_add()
    
    [ Upstream commit 0401f24cd238ae200a23a13925f98de3d2c883b8 ]
    
    When a driver calls pwmchip_add() it has to be prepared to immediately
    get its callbacks called. So move allocation of driver data and hardware
    initialization before the call to pwmchip_add().
    
    This fixes a potential NULL pointer exception and a race condition on
    register writes.
    
    Fixes: 841e6f90bb78 ("pwm: NXP LPC18xx PWM/SCT driver")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 996291d06851a26678a0fab488b6e1f0677c0576
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Mon Jan 24 08:14:24 2022 +0100

    mxser: fix xmit_buf leak in activate when LSR == 0xff
    
    [ Upstream commit cd3a4907ee334b40d7aa880c7ab310b154fd5cd4 ]
    
    When LSR is 0xff in ->activate() (rather unlike), we return an error.
    Provided ->shutdown() is not called when ->activate() fails, nothing
    actually frees the buffer in this case.
    
    Fix this by properly freeing the buffer in a designated label. We jump
    there also from the "!info->type" if now too.
    
    Fixes: 6769140d3047 ("tty: mxser: use the tty_port_open method")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20220124071430.14907-6-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58200dedbd10847d2e320dfd50762b2704fc2824
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 07:29:47 2022 +0000

    mfd: asic3: Add missing iounmap() on error asic3_mfd_probe
    
    [ Upstream commit e84ee1a75f944a0fe3c277aaa10c426603d2b0bc ]
    
    Add the missing iounmap() before return from asic3_mfd_probe
    in the error handling case.
    
    Fixes: 64e8867ba809 ("mfd: tmio_mmc hardware abstraction for CNF area")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20220307072947.5369-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 043b1970133290cae3eef1bf8caa2a8f5f3fb500
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Mon Mar 21 11:22:29 2022 +0700

    tipc: fix the timer expires after interval 100ms
    
    [ Upstream commit 6a7d8cff4a3301087dd139293e9bddcf63827282 ]
    
    In the timer callback function tipc_sk_timeout(), we're trying to
    reschedule another timeout to retransmit a setup request if destination
    link is congested. But we use the incorrect timeout value
    (msecs_to_jiffies(100)) instead of (jiffies + msecs_to_jiffies(100)),
    so that the timer expires immediately, it's irrelevant for original
    description.
    
    In this commit we correct the timeout value in sk_reset_timer()
    
    Fixes: 6787927475e5 ("tipc: buffer overflow handling in listener socket")
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Link: https://lore.kernel.org/r/20220321042229.314288-1-hoang.h.le@dektech.com.au
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e2e80b2e9bed5aceb50c2a844b20462dfff5751
Author: Aaron Conole <aconole@redhat.com>
Date:   Fri Mar 18 08:43:19 2022 -0400

    openvswitch: always update flow key after nat
    
    [ Upstream commit 60b44ca6bd7518dd38fa2719bc9240378b6172c3 ]
    
    During NAT, a tuple collision may occur.  When this happens, openvswitch
    will make a second pass through NAT which will perform additional packet
    modification.  This will update the skb data, but not the flow key that
    OVS uses.  This means that future flow lookups, and packet matches will
    have incorrect data.  This has been supported since
    5d50aa83e2c8 ("openvswitch: support asymmetric conntrack").
    
    That commit failed to properly update the sw_flow_key attributes, since
    it only called the ovs_ct_nat_update_key once, rather than each time
    ovs_ct_nat_execute was called.  As these two operations are linked, the
    ovs_ct_nat_execute() function should always make sure that the
    sw_flow_key is updated after a successful call through NAT infrastructure.
    
    Fixes: 5d50aa83e2c8 ("openvswitch: support asymmetric conntrack")
    Cc: Dumitru Ceara <dceara@redhat.com>
    Cc: Numan Siddique <nusiddiq@redhat.com>
    Signed-off-by: Aaron Conole <aconole@redhat.com>
    Acked-by: Eelco Chaudron <echaudro@redhat.com>
    Link: https://lore.kernel.org/r/20220318124319.3056455-1-aconole@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a970dbb7d16084c4aea5907760e6b337cfd4cee
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Mar 21 09:59:57 2022 -0700

    tcp: ensure PMTU updates are processed during fastopen
    
    [ Upstream commit ed0c99dc0f499ff8b6e75b5ae6092ab42be1ad39 ]
    
    tp->rx_opt.mss_clamp is not populated, yet, during TFO send so we
    rise it to the local MSS. tp->mss_cache is not updated, however:
    
    tcp_v6_connect():
      tp->rx_opt.mss_clamp = IPV6_MIN_MTU - headers;
      tcp_connect():
         tcp_connect_init():
           tp->mss_cache = min(mtu, tp->rx_opt.mss_clamp)
         tcp_send_syn_data():
           tp->rx_opt.mss_clamp = tp->advmss
    
    After recent fixes to ICMPv6 PTB handling we started dropping
    PMTU updates higher than tp->mss_cache. Because of the stale
    tp->mss_cache value PMTU updates during TFO are always dropped.
    
    Thanks to Wei for helping zero in on the problem and the fix!
    
    Fixes: c7bb4b89033b ("ipv6: tcp: drop silly ICMPv6 packet too big messages")
    Reported-by: Andre Nash <alnash@fb.com>
    Reported-by: Neil Spring <ntspring@fb.com>
    Reviewed-by: Wei Wang <weiwan@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20220321165957.1769954-1-kuba@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4725ad1e45997f8c61e131dd4b7d6e429c8b8a4
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Mon Mar 21 10:41:49 2022 +0800

    selftests/bpf/test_lirc_mode2.sh: Exit with proper code
    
    [ Upstream commit ec80906b0fbd7be11e3e960813b977b1ffe5f8fe ]
    
    When test_lirc_mode2_user exec failed, the test report failed but still
    exit with 0. Fix it by exiting with an error code.
    
    Another issue is for the LIRCDEV checking. With bash -n, we need to quote
    the variable, or it will always be true. So if test_lirc_mode2_user was
    not run, just exit with skip code.
    
    Fixes: 6bdd533cee9a ("bpf: add selftest for lirc_mode2 type program")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220321024149.157861-1-liuhangbin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c7b252a60539f6533fa9394f7f234783254725e
Author: Peter Rosin <peda@axentia.se>
Date:   Wed Mar 2 12:22:35 2022 +0100

    i2c: mux: demux-pinctrl: do not deactivate a master that is not active
    
    [ Upstream commit 1a22aabf20adf89cb216f566913196128766f25b ]
    
    Attempting to rollback the activation of the current master when
    the current master has not been activated is bad. priv->cur_chan
    and priv->cur_adap are both still zeroed out and the rollback
    may result in attempts to revert an of changeset that has not been
    applied and do result in calls to both del and put the zeroed out
    i2c_adapter. Maybe it crashes, or whatever, but it's bad in any
    case.
    
    Fixes: e9d1a0a41d44 ("i2c: mux: demux-pinctrl: Fix an error handling path in 'i2c_demux_pinctrl_probe()'")
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41249fff507387c3323b198d0052faed08b14de4
Author: Petr Machata <petrm@nvidia.com>
Date:   Thu Mar 17 15:53:06 2022 +0100

    af_netlink: Fix shift out of bounds in group mask calculation
    
    [ Upstream commit 0caf6d9922192dd1afa8dc2131abfb4df1443b9f ]
    
    When a netlink message is received, netlink_recvmsg() fills in the address
    of the sender. One of the fields is the 32-bit bitfield nl_groups, which
    carries the multicast group on which the message was received. The least
    significant bit corresponds to group 1, and therefore the highest group
    that the field can represent is 32. Above that, the UB sanitizer flags the
    out-of-bounds shift attempts.
    
    Which bits end up being set in such case is implementation defined, but
    it's either going to be a wrong non-zero value, or zero, which is at least
    not misleading. Make the latter choice deterministic by always setting to 0
    for higher-numbered multicast groups.
    
    To get information about membership in groups >= 32, userspace is expected
    to use nl_pktinfo control messages[0], which are enabled by NETLINK_PKTINFO
    socket option.
    [0] https://lwn.net/Articles/147608/
    
    The way to trigger this issue is e.g. through monitoring the BRVLAN group:
    
            # bridge monitor vlan &
            # ip link add name br type bridge
    
    Which produces the following citation:
    
            UBSAN: shift-out-of-bounds in net/netlink/af_netlink.c:162:19
            shift exponent 32 is too large for 32-bit type 'int'
    
    Fixes: f7fa9b10edbb ("[NETLINK]: Support dynamic number of multicast groups per netlink family")
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Link: https://lore.kernel.org/r/2bef6aabf201d1fc16cca139a744700cff9dcb04.1647527635.git.petrm@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 874eca93966a786eace87fa6dfb206c2dd9519b1
Author: Yake Yang <yake.yang@mediatek.com>
Date:   Thu Mar 17 07:15:19 2022 +0800

    Bluetooth: btmtksdio: Fix kernel oops in btmtksdio_interrupt
    
    [ Upstream commit b062a0b9c1dc1ff63094337dccfe1568d5b62023 ]
    
    Fix the following kernel oops in btmtksdio_interrrupt
    
    [   14.339134]  btmtksdio_interrupt+0x28/0x54
    [   14.339139]  process_sdio_pending_irqs+0x68/0x1a0
    [   14.339144]  sdio_irq_work+0x40/0x70
    [   14.339154]  process_one_work+0x184/0x39c
    [   14.339160]  worker_thread+0x228/0x3e8
    [   14.339168]  kthread+0x148/0x3ac
    [   14.339176]  ret_from_fork+0x10/0x30
    
    That happened because hdev->power_on is already called before
    sdio_set_drvdata which btmtksdio_interrupt handler relies on is not
    properly set up.
    
    The details are shown as the below: hci_register_dev would run
    queue_work(hdev->req_workqueue, &hdev->power_on) as WQ_HIGHPRI
    workqueue_struct to complete the power-on sequeunce and thus hci_power_on
    may run before sdio_set_drvdata is done in btmtksdio_probe.
    
    The hci_dev_do_open in hci_power_on would initialize the device and enable
    the interrupt and thus it is possible that btmtksdio_interrupt is being
    called right before sdio_set_drvdata is filled out.
    
    When btmtksdio_interrupt is being called and sdio_set_drvdata is not filled
    , the kernel oops is going to happen because btmtksdio_interrupt access an
    uninitialized pointer.
    
    Fixes: 9aebfd4a2200 ("Bluetooth: mediatek: add support for MediaTek MT7663S and MT7668S SDIO devices")
    Reviewed-by: Mark Chen <markyawenchen@gmail.com>
    Co-developed-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Yake Yang <yake.yang@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fe415601b2db40e8c1f3d0772f14fe3e328ae3e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 4 10:35:04 2022 +0300

    USB: storage: ums-realtek: fix error code in rts51x_read_mem()
    
    [ Upstream commit b07cabb8361dc692522538205552b1b9dab134be ]
    
    The rts51x_read_mem() function should return negative error codes.
    Currently if the kmalloc() fails it returns USB_STOR_TRANSPORT_ERROR (3)
    which is treated as success by the callers.
    
    Fixes: 065e60964e29 ("ums_realtek: do not use stack memory for DMA")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20220304073504.GA26464@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94c6ac22abcdede72bfaa0f4c22fb370891f4002
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Mar 4 16:11:45 2022 +0800

    bpf, sockmap: Fix double uncharge the mem of sk_msg
    
    [ Upstream commit 2486ab434b2c2a14e9237296db00b1e1b7ae3273 ]
    
    If tcp_bpf_sendmsg is running during a tear down operation, psock may be
    freed.
    
    tcp_bpf_sendmsg()
     tcp_bpf_send_verdict()
      sk_msg_return()
      tcp_bpf_sendmsg_redir()
       unlikely(!psock))
         sk_msg_free()
    
    The mem of msg has been uncharged in tcp_bpf_send_verdict() by
    sk_msg_return(), and would be uncharged by sk_msg_free() again. When psock
    is null, we can simply returning an error code, this would then trigger
    the sk_msg_free_nocharge in the error path of __SK_REDIRECT and would have
    the side effect of throwing an error up to user space. This would be a
    slight change in behavior from user side but would look the same as an
    error if the redirect on the socket threw an error.
    
    This issue can cause the following info:
    WARNING: CPU: 0 PID: 2136 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260
    Call Trace:
     <TASK>
     __sk_destruct+0x24/0x1f0
     sk_psock_destroy+0x19b/0x1c0
     process_one_work+0x1b3/0x3c0
     worker_thread+0x30/0x350
     ? process_one_work+0x3c0/0x3c0
     kthread+0xe6/0x110
     ? kthread_complete_and_exit+0x20/0x20
     ret_from_fork+0x22/0x30
     </TASK>
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220304081145.2037182-5-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 244ce90c8d0bd10ebf957da02c6f3fcd5d920bdf
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Mar 4 16:11:44 2022 +0800

    bpf, sockmap: Fix more uncharged while msg has more_data
    
    [ Upstream commit 84472b436e760ba439e1969a9e3c5ae7c86de39d ]
    
    In tcp_bpf_send_verdict(), if msg has more data after
    tcp_bpf_sendmsg_redir():
    
    tcp_bpf_send_verdict()
     tosend = msg->sg.size  //msg->sg.size = 22220
     case __SK_REDIRECT:
      sk_msg_return()  //uncharged msg->sg.size(22220) sk->sk_forward_alloc
      tcp_bpf_sendmsg_redir() //after tcp_bpf_sendmsg_redir, msg->sg.size=11000
     goto more_data;
     tosend = msg->sg.size  //msg->sg.size = 11000
     case __SK_REDIRECT:
      sk_msg_return()  //uncharged msg->sg.size(11000) to sk->sk_forward_alloc
    
    The msg->sg.size(11000) has been uncharged twice, to fix we can charge the
    remaining msg->sg.size before goto more data.
    
    This issue can cause the following info:
    WARNING: CPU: 0 PID: 9860 at net/core/stream.c:208 sk_stream_kill_queues+0xd4/0x1a0
    Call Trace:
     <TASK>
     inet_csk_destroy_sock+0x55/0x110
     __tcp_close+0x279/0x470
     tcp_close+0x1f/0x60
     inet_release+0x3f/0x80
     __sock_release+0x3d/0xb0
     sock_close+0x11/0x20
     __fput+0x92/0x250
     task_work_run+0x6a/0xa0
     do_exit+0x33b/0xb60
     do_group_exit+0x2f/0xa0
     get_signal+0xb6/0x950
     arch_do_signal_or_restart+0xac/0x2a0
     ? vfs_write+0x237/0x290
     exit_to_user_mode_prepare+0xa9/0x200
     syscall_exit_to_user_mode+0x12/0x30
     do_syscall_64+0x46/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
     </TASK>
    
    WARNING: CPU: 0 PID: 2136 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260
    Call Trace:
     <TASK>
     __sk_destruct+0x24/0x1f0
     sk_psock_destroy+0x19b/0x1c0
     process_one_work+0x1b3/0x3c0
     worker_thread+0x30/0x350
     ? process_one_work+0x3c0/0x3c0
     kthread+0xe6/0x110
     ? kthread_complete_and_exit+0x20/0x20
     ret_from_fork+0x22/0x30
     </TASK>
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220304081145.2037182-4-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d03722c34d9603df325f67c6d30dc1b7b3c6067
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Mar 4 16:11:43 2022 +0800

    bpf, sockmap: Fix memleak in tcp_bpf_sendmsg while sk msg is full
    
    [ Upstream commit 9c34e38c4a870eb30b13f42f5b44f42e9d19ccb8 ]
    
    If tcp_bpf_sendmsg() is running while sk msg is full. When sk_msg_alloc()
    returns -ENOMEM error, tcp_bpf_sendmsg() goes to wait_for_memory. If partial
    memory has been alloced by sk_msg_alloc(), that is, msg_tx->sg.size is
    greater than osize after sk_msg_alloc(), memleak occurs. To fix we use
    sk_msg_trim() to release the allocated memory, then goto wait for memory.
    
    Other call paths of sk_msg_alloc() have the similar issue, such as
    tls_sw_sendmsg(), so handle sk_msg_trim logic inside sk_msg_alloc(),
    as Cong Wang suggested.
    
    This issue can cause the following info:
    WARNING: CPU: 3 PID: 7950 at net/core/stream.c:208 sk_stream_kill_queues+0xd4/0x1a0
    Call Trace:
     <TASK>
     inet_csk_destroy_sock+0x55/0x110
     __tcp_close+0x279/0x470
     tcp_close+0x1f/0x60
     inet_release+0x3f/0x80
     __sock_release+0x3d/0xb0
     sock_close+0x11/0x20
     __fput+0x92/0x250
     task_work_run+0x6a/0xa0
     do_exit+0x33b/0xb60
     do_group_exit+0x2f/0xa0
     get_signal+0xb6/0x950
     arch_do_signal_or_restart+0xac/0x2a0
     exit_to_user_mode_prepare+0xa9/0x200
     syscall_exit_to_user_mode+0x12/0x30
     do_syscall_64+0x46/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
     </TASK>
    
    WARNING: CPU: 3 PID: 2094 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260
    Call Trace:
     <TASK>
     __sk_destruct+0x24/0x1f0
     sk_psock_destroy+0x19b/0x1c0
     process_one_work+0x1b3/0x3c0
     kthread+0xe6/0x110
     ret_from_fork+0x22/0x30
     </TASK>
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220304081145.2037182-3-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0174a89663a5ef83617da15bf24c0af2f62b6c7f
Author: Yongzhi Liu <lyz_cs@pku.edu.cn>
Date:   Fri Mar 11 09:06:01 2022 -0800

    RDMA/mlx5: Fix memory leak in error flow for subscribe event routine
    
    [ Upstream commit 087f9c3f2309ed183f7e4b85ae57121d8663224d ]
    
    In case the second xa_insert() fails, the obj_event is not released.  Fix
    the error unwind flow to free that memory to avoid a memory leak.
    
    Fixes: 759738537142 ("IB/mlx5: Enable subscription for device events over DEVX")
    Link: https://lore.kernel.org/r/1647018361-18266-1-git-send-email-lyz_cs@pku.edu.cn
    Signed-off-by: Yongzhi Liu <lyz_cs@pku.edu.cn>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b08d211db4c447eb1a07df65e45e0aa772e0fa6
Author: Xin Xiong <xiongx18@fudan.edu.cn>
Date:   Fri Mar 4 16:53:32 2022 +0800

    mtd: rawnand: atmel: fix refcount issue in atmel_nand_controller_init
    
    [ Upstream commit fecbd4a317c95d73c849648c406bcf1b6a0ec1cf ]
    
    The reference counting issue happens in several error handling paths
    on a refcounted object "nc->dmac". In these paths, the function simply
    returns the error code, forgetting to balance the reference count of
    "nc->dmac", increased earlier by dma_request_channel(), which may
    cause refcount leaks.
    
    Fix it by decrementing the refcount of specific object in those error
    paths.
    
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Co-developed-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Co-developed-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220304085330.3610-1-xiongx18@fudan.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 443121c9948df67db5e3fee8d3df16ddb180fbc3
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Mar 11 20:20:26 2022 -0800

    MIPS: RB532: fix return value of __setup handler
    
    [ Upstream commit 8755d57ba1ff910666572fab9e32890e8cc6ed3b ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) argument or environment
    strings. Also, error return codes don't mean anything to
    obsolete_checksetup() -- only non-zero (usually 1) or zero.
    So return 1 from setup_kmac().
    
    Fixes: 9e21c7e40b7e ("MIPS: RB532: Replace parse_mac_addr() with mac_pton().")
    Fixes: 73b4390fb234 ("[MIPS] Routerboard 532: Support for base system")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    From: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: linux-mips@vger.kernel.org
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Phil Sutter <n0-1@freewrt.org>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Daniel Walter <dwalter@google.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a9a62846c158256db1fe0355c8db7424cd8d503
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Mar 9 13:04:16 2022 +0100

    vxcan: enable local echo for sent CAN frames
    
    [ Upstream commit 259bdba27e32368b4404f69d613b1c1014c07cbf ]
    
    The vxcan driver provides a pair of virtual CAN interfaces to exchange
    CAN traffic between different namespaces - analogue to veth.
    
    In opposite to the vcan driver the local sent CAN traffic on this interface
    is not echo'ed back but only sent to the remote peer. This is unusual and
    can be easily fixed by removing IFF_ECHO from the netdevice flags that
    are set for vxcan interfaces by default at startup.
    
    Without IFF_ECHO set on driver level, the local sent CAN frames are echo'ed
    in af_can.c in can_send(). This patch makes vxcan interfaces adopt the
    same local echo behavior and procedures as known from the vcan interfaces.
    
    Fixes: a8f820a380a2 ("can: add Virtual CAN Tunnel driver (vxcan)")
    Link: https://lore.kernel.org/all/20220309120416.83514-5-socketcan@hartkopp.net
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f259b1a4ab04261d9a471c9cc9ab8cd8d53007f
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Wed Feb 23 15:02:23 2022 +0800

    powerpc: 8xx: fix a return value error in mpc8xx_pic_init
    
    [ Upstream commit 3fd46e551f67f4303c3276a0d6cd20baf2d192c4 ]
    
    mpc8xx_pic_init() should return -ENOMEM instead of 0 when
    irq_domain_add_linear() return NULL. This cause mpc8xx_pics_init to continue
    executing even if mpc8xx_pic_host is NULL.
    
    Fixes: cc76404feaed ("powerpc/8xx: Fix possible device node reference leak")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220223070223.26845-1-hbh25y@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d87803ba6be8ae8fcc27fa14312523f66c3f86ea
Author: Felix Maurer <fmaurer@redhat.com>
Date:   Thu Mar 3 12:15:26 2022 +0100

    selftests/bpf: Make test_lwt_ip_encap more stable and faster
    
    [ Upstream commit d23a8720327d33616f584d76c80824bfa4699be6 ]
    
    In test_lwt_ip_encap, the ingress IPv6 encap test failed from time to
    time. The failure occured when an IPv4 ping through the IPv6 GRE
    encapsulation did not receive a reply within the timeout. The IPv4 ping
    and the IPv6 ping in the test used different timeouts (1 sec for IPv4
    and 6 sec for IPv6), probably taking into account that IPv6 might need
    longer to successfully complete. However, when IPv4 pings (with the
    short timeout) are encapsulated into the IPv6 tunnel, the delays of IPv6
    apply.
    
    The actual reason for the long delays with IPv6 was that the IPv6
    neighbor discovery sometimes did not complete in time. This was caused
    by the outgoing interface only having a tentative link local address,
    i.e., not having completed DAD for that lladdr. The ND was successfully
    retried after 1 sec but that was too late for the ping timeout.
    
    The IPv6 addresses for the test were already added with nodad. However,
    for the lladdrs, DAD was still performed. We now disable DAD in the test
    netns completely and just assume that the two lladdrs on each veth pair
    do not collide. This removes all the delays for IPv6 traffic in the
    test.
    
    Without the delays, we can now also reduce the delay of the IPv6 ping to
    1 sec. This makes the whole test complete faster because we don't need
    to wait for the excessive timeout for each IPv6 ping that is supposed
    to fail.
    
    Fixes: 0fde56e4385b0 ("selftests: bpf: add test_lwt_ip_encap selftest")
    Signed-off-by: Felix Maurer <fmaurer@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/4987d549d48b4e316cd5b3936de69c8d4bc75a4f.1646305899.git.fmaurer@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac6edd6fcbf59a6c1caafc912fb719dcfd1012d8
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 24 10:23:31 2022 +0800

    mfd: mc13xxx: Add check for mc13xxx_irq_request
    
    [ Upstream commit e477e51a41cb5d6034f3c5ea85a71ad4613996b9 ]
    
    As the potential failure of the devm_request_threaded_irq(),
    it should be better to check the return value of the
    mc13xxx_irq_request() and return error if fails.
    
    Fixes: 8e00593557c3 ("mfd: Add mc13892 support to mc13xxx")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20220224022331.3208275-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2577dc2b3c3d03b18ab253cec159d37b24f7042
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Mon Feb 28 15:24:33 2022 +0100

    powerpc/sysdev: fix incorrect use to determine if list is empty
    
    [ Upstream commit fa1321b11bd01752f5be2415e74a0e1a7c378262 ]
    
    'gtm' will *always* be set by list_for_each_entry().
    It is incorrect to assume that the iterator value will be NULL if the
    list is empty.
    
    Instead of checking the pointer it should be checked if
    the list is empty.
    
    Fixes: 83ff9dcf375c ("powerpc/sysdev: implement FSL GTM support")
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220228142434.576226-1-jakobkoschel@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7192df97a0182054dde7e46cd1413320db301fce
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Mar 4 08:24:27 2022 -0800

    mips: DEC: honor CONFIG_MIPS_FP_SUPPORT=n
    
    [ Upstream commit 97bf0395c226907e1a9b908511a35192bf1e09bb ]
    
    Include the DECstation interrupt handler in opting out of
    FPU support.
    
    Fixes a linker error:
    
    mips-linux-ld: arch/mips/dec/int-handler.o: in function `fpu':
    (.text+0x148): undefined reference to `handle_fpe_int'
    
    Fixes: 183b40f992c8 ("MIPS: Allow FP support to be disabled")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Paul Burton <paulburton@kernel.org>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Maciej W. Rozycki <macro@orcam.me.uk>
    Cc: linux-mips@vger.kernel.org
    Acked-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10705a4305579518da06662c045a90a4bcdd15f7
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Thu Aug 6 16:14:55 2020 +1200

    PCI: Reduce warnings on possible RW1C corruption
    
    [ Upstream commit 92c45b63ce22c8898aa41806e8d6692bcd577510 ]
    
    For hardware that only supports 32-bit writes to PCI there is the
    possibility of clearing RW1C (write-one-to-clear) bits. A rate-limited
    messages was introduced by fb2659230120, but rate-limiting is not the best
    choice here. Some devices may not show the warnings they should if another
    device has just produced a bunch of warnings. Also, the number of messages
    can be a nuisance on devices which are otherwise working fine.
    
    Change the ratelimit to a single warning per bus. This ensures no bus is
    'starved' of emitting a warning and also that there isn't a continuous
    stream of warnings. It would be preferable to have a warning per device,
    but the pci_dev structure is not available here, and a lookup from devfn
    would be far too slow.
    
    Suggested-by: Bjorn Helgaas <helgaas@kernel.org>
    Fixes: fb2659230120 ("PCI: Warn on possible RW1C corruption for sub-32 bit config writes")
    Link: https://lore.kernel.org/r/20200806041455.11070-1-mark.tomlinson@alliedtelesis.co.nz
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Acked-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90bec38f6a4c81814775c7f3dfc9acf281d5dcfa
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Mar 3 17:43:22 2022 +0800

    power: supply: wm8350-power: Add missing free in free_charger_irq
    
    [ Upstream commit 6dee930f6f6776d1e5a7edf542c6863b47d9f078 ]
    
    In free_charger_irq(), there is no free for 'WM8350_IRQ_CHG_FAST_RDY'.
    Therefore, it should be better to add it in order to avoid the memory leak.
    
    Fixes: 14431aa0c5a4 ("power_supply: Add support for WM8350 PMU")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a16d8f4191a72e78f1825cabb97cd433350ee558
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Mar 4 09:57:51 2022 +0800

    power: supply: wm8350-power: Handle error for wm8350_register_irq
    
    [ Upstream commit b0b14b5ba11bec56fad344a4a0b2e16449cc8b94 ]
    
    As the potential failure of the wm8350_register_irq(),
    it should be better to check it and return error if fails.
    Also, use 'free_' in order to avoid same code.
    
    Fixes: 14431aa0c5a4 ("power_supply: Add support for WM8350 PMU")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7032923159c5483dcb6ffa85bafa25522157b87
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Thu Jan 27 11:50:13 2022 -0600

    i2c: xiic: Make bus names unique
    
    [ Upstream commit 1d366c2f9df8279df2adbb60471f86fc40a1c39e ]
    
    This driver is for an FPGA logic core, so there can be arbitrarily many
    instances of the bus on a given system. Previously all of the I2C bus
    names were "xiic-i2c" which caused issues with lm_sensors when trying to
    map human-readable names to sensor inputs because it could not properly
    distinguish the busses, for example. Append the platform device name to
    the I2C bus name so it is unique between different instances.
    
    Fixes: e1d5b6598cdc ("i2c: Add support for Xilinx XPS IIC Bus Interface")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Tested-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f41e4a69ba350704a07ac681c3fd8ab20666f63
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Tue Feb 22 16:14:00 2022 +0200

    hv_balloon: rate-limit "Unhandled message" warning
    
    [ Upstream commit 1d7286729aa616772be334eb908e11f527e1e291 ]
    
    For a couple of times I have encountered a situation where
    
      hv_balloon: Unhandled message: type: 12447
    
    is being flooded over 1 million times per second with various values,
    filling the log and consuming cycles, making debugging difficult.
    
    Add rate limiting to the message.
    
    Most other Hyper-V drivers already have similar rate limiting in their
    message callbacks.
    
    The cause of the floods in my case was probably fixed by 96d9d1fa5cd5
    ("Drivers: hv: balloon: account for vmbus packet header in
    max_pkt_size").
    
    Fixes: 9aa8b50b2b3d ("Drivers: hv: Add Hyper-V balloon driver")
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/20220222141400.98160-1-anssi.hannula@bitwise.fi
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c00a91aca23726ee54e6cb5f8e9e79c1a77b9f68
Author: Hou Wenlong <houwenlong.hwl@antgroup.com>
Date:   Tue Feb 8 17:34:03 2022 +0800

    KVM: x86/emulator: Defer not-present segment check in __load_segment_descriptor()
    
    [ Upstream commit ca85f002258fdac3762c57d12d5e6e401b6a41af ]
    
    Per Intel's SDM on the "Instruction Set Reference", when
    loading segment descriptor, not-present segment check should
    be after all type and privilege checks. But the emulator checks
    it first, then #NP is triggered instead of #GP if privilege fails
    and segment is not present. Put not-present segment check after
    type and privilege checks in __load_segment_descriptor().
    
    Fixes: 38ba30ba51a00 (KVM: x86 emulator: Emulate task switch in emulator.c)
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Hou Wenlong <houwenlong.hwl@antgroup.com>
    Message-Id: <52573c01d369f506cadcf7233812427cf7db81a7.1644292363.git.houwenlong.hwl@antgroup.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f43ec383ebaf7f92010f6623654eda1f87f67e1
Author: Zhenzhong Duan <zhenzhong.duan@intel.com>
Date:   Thu Feb 10 17:45:06 2022 +0800

    KVM: x86: Fix emulation in writing cr8
    
    [ Upstream commit f66af9f222f08d5b11ea41c1bd6c07a0f12daa07 ]
    
    In emulation of writing to cr8, one of the lowest four bits in TPR[3:0]
    is kept.
    
    According to Intel SDM 10.8.6.1(baremetal scenario):
    "APIC.TPR[bits 7:4] = CR8[bits 3:0], APIC.TPR[bits 3:0] = 0";
    
    and SDM 28.3(use TPR shadow):
    "MOV to CR8. The instruction stores bits 3:0 of its source operand into
    bits 7:4 of VTPR; the remainder of VTPR (bits 3:0 and bits 31:8) are
    cleared.";
    
    and AMD's APM 16.6.4:
    "Task Priority Sub-class (TPS)-Bits 3 : 0. The TPS field indicates the
    current sub-priority to be used when arbitrating lowest-priority messages.
    This field is written with zero when TPR is written using the architectural
    CR8 register.";
    
    so in KVM emulated scenario, clear TPR[3:0] to make a consistent behavior
    as in other scenarios.
    
    This doesn't impact evaluation and delivery of pending virtual interrupts
    because processor does not use the processor-priority sub-class to
    determine which interrupts to delivery and which to inhibit.
    
    Sub-class is used by hardware to arbitrate lowest priority interrupts,
    but KVM just does a round-robin style delivery.
    
    Fixes: b93463aa59d6 ("KVM: Accelerated apic support")
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@intel.com>
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220210094506.20181-1-zhenzhong.duan@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e91ba23f55cf499afe8e008bd75818c511ddb389
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Feb 15 22:28:58 2022 +1100

    powerpc/Makefile: Don't pass -mcpu=powerpc64 when building 32-bit
    
    [ Upstream commit 2863dd2db23e0407f6c50b8ba5c0e55abef894f1 ]
    
    When CONFIG_GENERIC_CPU=y (true for all our defconfigs) we pass
    -mcpu=powerpc64 to the compiler, even when we're building a 32-bit
    kernel.
    
    This happens because we have an ifdef CONFIG_PPC_BOOK3S_64/else block in
    the Makefile that was written before 32-bit supported GENERIC_CPU. Prior
    to that the else block only applied to 64-bit Book3E.
    
    The GCC man page says -mcpu=powerpc64 "[specifies] a pure ... 64-bit big
    endian PowerPC ... architecture machine [type], with an appropriate,
    generic processor model assumed for scheduling purposes."
    
    It's unclear how that interacts with -m32, which we are also passing,
    although obviously -m32 is taking precedence in some sense, as the
    32-bit kernel only contains 32-bit instructions.
    
    This was noticed by inspection, not via any bug reports, but it does
    affect code generation. Comparing before/after code generation, there
    are some changes to instruction scheduling, and the after case (with
    -mcpu=powerpc64 removed) the compiler seems more keen to use r8.
    
    Fix it by making the else case only apply to Book3E 64, which excludes
    32-bit.
    
    Fixes: 0e00a8c9fd92 ("powerpc: Allow CPU selection also on PPC32")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220215112858.304779-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c660fa0f9052b9b0b3e4b804920011cb7caea9c
Author: Xu Kuohai <xukuohai@huawei.com>
Date:   Tue Mar 1 00:32:49 2022 -0500

    libbpf: Skip forward declaration when counting duplicated type names
    
    [ Upstream commit 4226961b0019b2e1612029e8950a9e911affc995 ]
    
    Currently if a declaration appears in the BTF before the definition, the
    definition is dumped as a conflicting name, e.g.:
    
        $ bpftool btf dump file vmlinux format raw | grep "'unix_sock'"
        [81287] FWD 'unix_sock' fwd_kind=struct
        [89336] STRUCT 'unix_sock' size=1024 vlen=14
    
        $ bpftool btf dump file vmlinux format c | grep "struct unix_sock"
        struct unix_sock;
        struct unix_sock___2 {      <--- conflict, the "___2" is unexpected
                        struct unix_sock___2 *unix_sk;
    
    This causes a compilation error if the dump output is used as a header file.
    
    Fix it by skipping declaration when counting duplicated type names.
    
    Fixes: 351131b51c7a ("libbpf: add btf_dump API for BTF-to-C conversion")
    Signed-off-by: Xu Kuohai <xukuohai@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20220301053250.1464204-2-xukuohai@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b62e615a619d7311eaf9276bbb70430ad9444b27
Author: Hou Tao <houtao1@huawei.com>
Date:   Sat Feb 26 20:19:06 2022 +0800

    bpf, arm64: Feed byte-offset into bpf line info
    
    [ Upstream commit dda7596c109fc382876118627e29db7607cde35d ]
    
    insn_to_jit_off passed to bpf_prog_fill_jited_linfo() is calculated in
    instruction granularity instead of bytes granularity, but BPF line info
    requires byte offset.
    
    bpf_prog_fill_jited_linfo() will be the last user of ctx.offset before
    it is freed, so convert the offset into byte-offset before calling into
    bpf_prog_fill_jited_linfo() in order to fix the line info dump on arm64.
    
    Fixes: 37ab566c178d ("bpf: arm64: Enable arm64 jit to provide bpf_line_info")
    Suggested-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220226121906.5709-3-houtao1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f3192a241d1964742448f557a4d549a6a4a6b1d
Author: Hou Tao <houtao1@huawei.com>
Date:   Sat Feb 26 20:19:05 2022 +0800

    bpf, arm64: Call build_prologue() first in first JIT pass
    
    [ Upstream commit 68e4f238b0e9d3670a1612ad900a6e98b2b3f7dd ]
    
    BPF line info needs ctx->offset to be the instruction offset in the whole JITed
    image instead of the body itself, so also call build_prologue() first in first
    JIT pass.
    
    Fixes: 37ab566c178d ("bpf: arm64: Enable arm64 jit to provide bpf_line_info")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220226121906.5709-2-houtao1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54bc98a0ab2b230907dd764bd8764068eb9c0c06
Author: Nishanth Menon <nm@ti.com>
Date:   Tue Sep 21 12:40:59 2021 -0500

    drm/bridge: cdns-dsi: Make sure to to create proper aliases for dt
    
    [ Upstream commit ffb5c099aaa13ab7f73c29ea6ae26bce8d7575ae ]
    
    Add MODULE_DEVICE_TABLE to the device tree table to create required
    aliases needed for module to be loaded with device tree based platform.
    
    Fixes: e19233955d9e ("drm/bridge: Add Cadence DSI driver")
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210921174059.17946-1-nm@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30c5cf4bf219834e9d321e9c9c3d16d77e8f2c18
Author: Xiang Chen <chenxiang66@hisilicon.com>
Date:   Thu Feb 24 19:51:24 2022 +0800

    scsi: hisi_sas: Change permission of parameter prot_mask
    
    [ Upstream commit c4e070457a93705e56ed06b3910d9e5fe56d3be3 ]
    
    Currently the permission of parameter prot_mask is 0x0, which means that
    the member does not appear in sysfs. Change it as other module parameters
    to 0444 for world-readable.
    
    [mkp: s/v3/v2/]
    
    Link: https://lore.kernel.org/r/1645703489-87194-2-git-send-email-john.garry@huawei.com
    Fixes: d6a9000b81be ("scsi: hisi_sas: Add support for DIF feature for v2 hw")
    Reported-by: Yihang Li <liyihang6@hisilicon.com>
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2cd206815a68c159f32a545be94013018c0131b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Feb 12 17:48:16 2022 +0100

    power: supply: bq24190_charger: Fix bq24190_vbus_is_enabled() wrong false return
    
    [ Upstream commit f7731754fdce33dad19be746f647d6ac47c5d695 ]
    
    The datasheet says that the BQ24190_REG_POC_CHG_CONFIG bits can
    have a value of either 10(0x2) or 11(0x3) for OTG (5V boost regulator)
    mode.
    
    Sofar bq24190_vbus_is_enabled() was only checking for 10 but some BIOS-es
    uses 11 when enabling the regulator at boot.
    
    Make bq24190_vbus_is_enabled() also check for 11 so that it does not
    wrongly returns false when the bits are set to 11.
    
    Fixes: 66b6bef2c4e0 ("power: supply: bq24190_charger: Export 5V boost converter as regulator")
    Cc: Bastien Nocera <hadess@hadess.net>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a725070701883fe62266ee6d2f31d67e6cdd31df
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 10 06:53:16 2022 +0000

    drm/tegra: Fix reference leak in tegra_dsi_ganged_probe
    
    [ Upstream commit 221e3638feb8bc42143833c9a704fa89b6c366bb ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore. Add put_device() call to fix this.
    
    Fixes: e94236cde4d5 ("drm/tegra: dsi: Add ganged mode support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc16d0bc1c695645a5c1426e81d33931cc32f558
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Sat Feb 12 13:05:32 2022 +0800

    ext2: correct max file size computing
    
    [ Upstream commit 50b3a818991074177a56c87124c7a7bdf5fa4f67 ]
    
    We need to calculate the max file size accurately if the total blocks
    that can address by block tree exceed the upper_limit. But this check is
    not correct now, it only compute the total data blocks but missing
    metadata blocks are needed. So in the case of "data blocks < upper_limit
    && total blocks > upper_limit", we will get wrong result. Fortunately,
    this case could not happen in reality, but it's confused and better to
    correct the computing.
    
      bits   data blocks   metadatablocks   upper_limit
      10        16843020            66051    2147483647
      11       134480396           263171    1073741823
      12      1074791436          1050627     536870911 (*)
      13      8594130956          4198403     268435455 (*)
      14     68736258060         16785411     134217727 (*)
      15    549822930956         67125251      67108863 (*)
      16   4398314962956        268468227      33554431 (*)
    
      [*] Need to calculate in depth.
    
    Fixes: 1c2d14212b15 ("ext2: Fix underflow in ext2_max_size()")
    Link: https://lore.kernel.org/r/20220212050532.179055-1-yi.zhang@huawei.com
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b689622cc42a2e2443a9cfb6eba39c6e3c4473fe
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Feb 22 13:45:33 2022 -0800

    TOMOYO: fix __setup handlers return values
    
    [ Upstream commit 39844b7e3084baecef52d1498b5fa81afa2cefa9 ]
    
    __setup() handlers should return 1 if the parameter is handled.
    Returning 0 causes the entire string to be added to init's
    environment strings (limited to 32 strings), unnecessarily polluting it.
    
    Using the documented strings "TOMOYO_loader=string1" and
    "TOMOYO_trigger=string2" causes an Unknown parameter message:
      Unknown kernel command line parameters
        "BOOT_IMAGE=/boot/bzImage-517rc5 TOMOYO_loader=string1 \
         TOMOYO_trigger=string2", will be passed to user space.
    
    and these strings are added to init's environment string space:
      Run /sbin/init as init process
        with arguments:
         /sbin/init
        with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         TOMOYO_loader=string1
         TOMOYO_trigger=string2
    
    With this change, these __setup handlers act as expected,
    and init's environment is not polluted with these strings.
    
    Fixes: 0e4ae0e0dec63 ("TOMOYO: Make several options configurable.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: https://lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: James Morris <jmorris@namei.org>
    Cc: Kentaro Takeda <takedakn@nttdata.co.jp>
    Cc: tomoyo-dev-en@lists.osdn.me
    Cc: "Serge E. Hallyn" <serge@hallyn.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa7981012a98602d4cf11e5ca7839c184bfc7c47
Author: Maíra Canal <maira.canal@usp.br>
Date:   Tue Feb 22 10:16:57 2022 -0300

    drm/amd/display: Remove vupdate_int_entry definition
    
    [ Upstream commit 3679b8518cd213c25d555553ef212e233faf698c ]
    
    Remove the vupdate_int_entry definition and utilization to avoid the
    following warning by Clang:
    
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:410:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(0),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:404:2:
    note: previous initialization is here
        vupdate_int_entry(0),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:411:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(1),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:405:2:
    note: previous initialization is here
        vupdate_int_entry(1),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:412:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(2),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:406:2:
    note: previous initialization is here
        vupdate_int_entry(2),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:413:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(3),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:407:2:
    note: previous initialization is here
        vupdate_int_entry(3),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:414:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(4),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:408:2:
    note: previous initialization is here
        vupdate_int_entry(4),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:415:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(5),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:409:2:
    note: previous initialization is here
        vupdate_int_entry(5),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
            [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
            ^~
    6 warnings generated.
    
    Fixes: 688f97ed3f5e ("drm/amd/display: Add vupdate_no_lock interrupts for DCN2.1")
    Signed-off-by: Maíra Canal <maira.canal@usp.br>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 765674e3b30121782a2b792684554baa48c61f5e
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:55 2022 +0900

    scsi: pm8001: Fix abort all task initialization
    
    [ Upstream commit 7f12845c8389855dbcc67baa068b6832dc4a396e ]
    
    In pm80xx_send_abort_all(), the n_elem field of the ccb used is not
    initialized to 0. This missing initialization sometimes lead to the task
    completion path seeing the ccb with a non-zero n_elem resulting in the
    execution of invalid dma_unmap_sg() calls in pm8001_ccb_task_free(),
    causing a crash such as:
    
    [  197.676341] RIP: 0010:iommu_dma_unmap_sg+0x6d/0x280
    [  197.700204] RSP: 0018:ffff889bbcf89c88 EFLAGS: 00010012
    [  197.705485] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff83d0bda0
    [  197.712687] RDX: 0000000000000002 RSI: 0000000000000000 RDI: ffff88810dffc0d0
    [  197.719887] RBP: 0000000000000000 R08: 0000000000000000 R09: ffff8881c790098b
    [  197.727089] R10: ffffed1038f20131 R11: 0000000000000001 R12: 0000000000000000
    [  197.734296] R13: ffff88810dffc0d0 R14: 0000000000000010 R15: 0000000000000000
    [  197.741493] FS:  0000000000000000(0000) GS:ffff889bbcf80000(0000) knlGS:0000000000000000
    [  197.749659] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  197.755459] CR2: 00007f16c1b42734 CR3: 0000000004814000 CR4: 0000000000350ee0
    [  197.762656] Call Trace:
    [  197.765127]  <IRQ>
    [  197.767162]  pm8001_ccb_task_free+0x5f1/0x820 [pm80xx]
    [  197.772364]  ? do_raw_spin_unlock+0x54/0x220
    [  197.776680]  pm8001_mpi_task_abort_resp+0x2ce/0x4f0 [pm80xx]
    [  197.782406]  process_oq+0xe85/0x7890 [pm80xx]
    [  197.786817]  ? lock_acquire+0x194/0x490
    [  197.790697]  ? handle_irq_event+0x10e/0x1b0
    [  197.794920]  ? mpi_sata_completion+0x2d70/0x2d70 [pm80xx]
    [  197.800378]  ? __wake_up_bit+0x100/0x100
    [  197.804340]  ? lock_is_held_type+0x98/0x110
    [  197.808565]  pm80xx_chip_isr+0x94/0x130 [pm80xx]
    [  197.813243]  tasklet_action_common.constprop.0+0x24b/0x2f0
    [  197.818785]  __do_softirq+0x1b5/0x82d
    [  197.822485]  ? do_raw_spin_unlock+0x54/0x220
    [  197.826799]  __irq_exit_rcu+0x17e/0x1e0
    [  197.830678]  irq_exit_rcu+0xa/0x20
    [  197.834114]  common_interrupt+0x78/0x90
    [  197.840051]  </IRQ>
    [  197.844236]  <TASK>
    [  197.848397]  asm_common_interrupt+0x1e/0x40
    
    Avoid this issue by always initializing the ccb n_elem field to 0 in
    pm8001_send_abort_all(), pm8001_send_read_log() and
    pm80xx_send_abort_all().
    
    Link: https://lore.kernel.org/r/20220220031810.738362-17-damien.lemoal@opensource.wdc.com
    Fixes: c6b9ef5779c3 ("[SCSI] pm80xx: NCQ error handling changes")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 442685f95296fc97b20a74c8d5e28ffe0d4596db
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:46 2022 +0900

    scsi: pm8001: Fix payload initialization in pm80xx_set_thermal_config()
    
    [ Upstream commit bb225b12dbcc82d53d637d10b8d70b64494f8c16 ]
    
    The fields of the set_ctrl_cfg_req structure have the __le32 type, so use
    cpu_to_le32() to assign them. This removes the sparse warnings:
    
    warning: incorrect type in assignment (different base types)
        expected restricted __le32
        got unsigned int
    
    Link: https://lore.kernel.org/r/20220220031810.738362-8-damien.lemoal@opensource.wdc.com
    Fixes: 842784e0d15b ("pm80xx: Update For Thermal Page Code")
    Fixes: f5860992db55 ("[SCSI] pm80xx: Added SPCv/ve specific hardware functionalities and relevant changes in common files")
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7336d47759d997a99456a1dadd3a23842e2e7c7
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:45 2022 +0900

    scsi: pm8001: Fix command initialization in pm8001_chip_ssp_tm_req()
    
    [ Upstream commit cd2268a180117aa8ebb23e090ba204324b2d0e93 ]
    
    The ds_ads_m field of struct ssp_ini_tm_start_req has the type __le32.
    Assigning a value to it should thus use cpu_to_le32(). This fixes the
    sparse warning:
    
    warning: incorrect type in assignment (different base types)
       expected restricted __le32 [addressable] [assigned] [usertype] ds_ads_m
       got int
    
    Link: https://lore.kernel.org/r/20220220031810.738362-7-damien.lemoal@opensource.wdc.com
    Fixes: dbf9bfe61571 ("[SCSI] pm8001: add SAS/SATA HBA driver")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 898c73387e8fd5a7f3b11218e07342f207f36cd8
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:43 2022 +0900

    scsi: pm8001: Fix command initialization in pm80XX_send_read_log()
    
    [ Upstream commit 1a37b6738b58d86f6b144b3fc754ace0f2e0166d ]
    
    Since the sata_cmd struct is zeroed out before its fields are initialized,
    there is no need for using "|=" to initialize the ncqtag_atap_dir_m
    field. Using a standard assignment removes the sparse warning:
    
    warning: invalid assignment: |=
    
    Also, since the ncqtag_atap_dir_m field has type __le32, use cpu_to_le32()
    to generate the assigned value.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-5-damien.lemoal@opensource.wdc.com
    Fixes: c6b9ef5779c3 ("[SCSI] pm80xx: NCQ error handling changes")
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e3359ed09441108178fc542f97dc95a25a79411
Author: Aashish Sharma <shraash@google.com>
Date:   Fri Feb 11 12:15:38 2022 +0000

    dm crypt: fix get_key_size compiler warning if !CONFIG_KEYS
    
    [ Upstream commit 6fc51504388c1a1a53db8faafe9fff78fccc7c87 ]
    
    Explicitly convert unsigned int in the right of the conditional
    expression to int to match the left side operand and the return type,
    fixing the following compiler warning:
    
    drivers/md/dm-crypt.c:2593:43: warning: signed and unsigned
    type in conditional expression [-Wsign-compare]
    
    Fixes: c538f6ec9f56 ("dm crypt: add ability to use keys from the kernel key retention service")
    Signed-off-by: Aashish Sharma <shraash@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37e847b674f1049923fc815d31be5e434f6a4b17
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Aug 16 21:39:30 2021 +0300

    iwlwifi: mvm: Fix an error code in iwl_mvm_up()
    
    [ Upstream commit 583d18336abdfb1b355270289ff8f6a2608ba905 ]
    
    Return -ENODEV instead of success on this error path.
    
    Fixes: dd36a507c806 ("iwlwifi: mvm: look for the first supported channel when add/remove phy ctxt")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210816183930.GA2068@kili
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ad7d29ee42c247692a76011a92c7fefb52fb296
Author: Colin Ian King <colin.king@intel.com>
Date:   Tue Sep 7 11:46:58 2021 +0100

    iwlwifi: Fix -EIO error code that is never returned
    
    [ Upstream commit c305c94bdc18e45b5ad1db54da4269f8cbfdff6b ]
    
    Currently the error -EIO is being assinged to variable ret when
    the READY_BIT is not set but the function iwlagn_mac_start returns
    0 rather than ret. Fix this by returning ret instead of 0.
    
    Addresses-Coverity: ("Unused value")
    Fixes: 7335613ae27a ("iwlwifi: move all mac80211 related functions to one place")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210907104658.14706-1-colin.king@canonical.com
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 770d42fff12d8595adda9025a0b92091f543e775
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Fri Feb 11 23:11:11 2022 -0800

    dax: make sure inodes are flushed before destroy cache
    
    [ Upstream commit a7e8de822e0b1979f08767c751f6c8a9c1d4ad86 ]
    
    A bug can be triggered by following command
    
    $ modprobe nd_pmem && modprobe -r nd_pmem
    
    [   10.060014] BUG dax_cache (Not tainted): Objects remaining in dax_cache on __kmem_cache_shutdown()
    [   10.060938] Slab 0x0000000085b729ac objects=9 used=1 fp=0x000000004f5ae469 flags=0x200000000010200(slab|head|node)
    [   10.062433] Call Trace:
    [   10.062673]  dump_stack_lvl+0x34/0x44
    [   10.062865]  slab_err+0x90/0xd0
    [   10.063619]  __kmem_cache_shutdown+0x13b/0x2f0
    [   10.063848]  kmem_cache_destroy+0x4a/0x110
    [   10.064058]  __x64_sys_delete_module+0x265/0x300
    
    This is caused by dax_fs_exit() not flushing inodes before destroy cache.
    To fix this issue, call rcu_barrier() before destroy cache.
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20220212071111.148575-1-ztong0001@gmail.com
    Fixes: 7b6be8444e0f ("dax: refactor dax-fs into a generic provider of 'struct dax_device' instances")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c10980c522d8e62c3ef99752a45a80d3d36527eb
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Wed Feb 9 16:39:35 2022 +0100

    IB/cma: Allow XRC INI QPs to set their local ACK timeout
    
    [ Upstream commit 748663c8ccf6b2e5a800de19127c2cc1c4423fd2 ]
    
    XRC INI QPs should be able to adjust their local ACK timeout.
    
    Fixes: 2c1619edef61 ("IB/cma: Define option to set ack timeout and pack tos_set")
    Link: https://lore.kernel.org/r/1644421175-31943-1-git-send-email-haakon.bugge@oracle.com
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Suggested-by: Avneesh Pant <avneesh.pant@oracle.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2eaa9d86e00713587635c7c9d9b4576d746ae101
Author: Roman Li <Roman.Li@amd.com>
Date:   Thu Dec 23 17:39:57 2021 -0500

    drm/amd/display: Add affected crtcs to atomic state for dsc mst unplug
    
    [ Upstream commit 128f8ed5902a287a6bb4afe0ffdae8a80b2a64ec ]
    
    [Why]
    When display topology changed on DSC hub we add all crtcs with dsc support to
    atomic state.
    Refer to patch:"drm/amd/display: Trigger modesets on MST DSC connectors"
    However the original implementation may skip crtc if the topology change
    caused by unplug.
    That potentially could lead to no-lightup or corruption on DSC hub after
    unplug event on one of the connectors.
    
    [How]
    Update add_affected_mst_dsc_crtcs() to use old connector state
    if new connector state has no crtc (undergoes modeset due to unplug)
    
    Fixes: 44be939ff7ac58 ("drm/amd/display: Trigger modesets on MST DSC connectors")
    
    Reviewed-by: Hersen Wu <hersenwu@amd.com>
    Acked-by: Jasdeep Dhillon <jdhillon@amd.com>
    Signed-off-by: Roman Li <Roman.Li@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ae97a595b8470ac1376e037cb2fd7f421d4e1c6
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Jan 6 10:43:02 2022 +0800

    iommu/ipmmu-vmsa: Check for error num after setting mask
    
    [ Upstream commit 1fdbbfd5099f797a4dac05e7ef0192ba4a9c39b4 ]
    
    Because of the possible failure of the dma_supported(), the
    dma_set_mask_and_coherent() may return error num.
    Therefore, it should be better to check it and return the error if
    fails.
    
    Fixes: 1c894225bf5b ("iommu/ipmmu-vmsa: IPMMU device is 40-bit bus master")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Link: https://lore.kernel.org/r/20220106024302.2574180-1-jiasheng@iscas.ac.cn
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a29ce9592cf621f496bc22819c4e368f36c215e0
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Jan 17 23:26:18 2022 -0800

    HID: i2c-hid: fix GET/SET_REPORT for unnumbered reports
    
    [ Upstream commit a5e5e03e94764148a01757b2fa4737d3445c13a6 ]
    
    Internally kernel prepends all report buffers, for both numbered and
    unnumbered reports, with report ID, therefore to properly handle unnumbered
    reports we should prepend it ourselves.
    
    For the same reason we should skip the first byte of the buffer when
    calling i2c_hid_set_or_send_report() which then will take care of properly
    formatting the transfer buffer based on its separate report ID argument
    along with report payload.
    
    [jkosina@suse.cz: finalize trimmed sentence in changelog as spotted by Benjamin]
    Fixes: 9b5a9ae88573 ("HID: i2c-hid: implement ll_driver transport-layer callbacks")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Tested-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41ed61364285ff38bbbe9ca8a45c8372ba72921d
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 24 13:13:46 2022 +0000

    power: supply: ab8500: Fix memory leak in ab8500_fg_sysfs_init
    
    [ Upstream commit 6a4760463dbc6b603690938c468839985189ce0a ]
    
    kobject_init_and_add() takes reference even when it fails.
    According to the doc of kobject_init_and_add()：
    
       If this function returns an error, kobject_put() must be called to
       properly clean up the memory associated with the object.
    
    Fix memory leak by calling kobject_put().
    
    Fixes: 8c0984e5a753 ("power: move power supply drivers to power/supply")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af5ad6e8370bd5d3790130cf58ac79d911742e2a
Author: Pali Rohár <pali@kernel.org>
Date:   Mon Jan 10 02:50:09 2022 +0100

    PCI: aardvark: Fix reading PCI_EXP_RTSTA_PME bit on emulated bridge
    
    [ Upstream commit 735f5ae49e1b44742cc63ca9b5c1ffde3e94ba91 ]
    
    The emulated bridge returns incorrect value for PCI_EXP_RTSTA register
    during readout in advk_pci_bridge_emul_pcie_conf_read() function: the
    correct bit is BIT(16), but we are setting BIT(23), because the code
    does
      *value = (isr0 & PCIE_MSG_PM_PME_MASK) << 16
    where
      PCIE_MSG_PM_PME_MASK
    is
      BIT(7).
    
    The code should probably have been something like
      *value = (!!(isr0 & PCIE_MSG_PM_PME_MASK)) << 16,
    but we are better of using an if() and using the proper macro for this
    bit.
    
    Link: https://lore.kernel.org/r/20220110015018.26359-15-kabel@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93b47d22d6a9776d21dc5d055b8b2de359935b6e
Author: Tobias Waldekranz <tobias@waldekranz.com>
Date:   Thu Feb 3 11:16:55 2022 +0100

    net: dsa: mv88e6xxx: Enable port policy support on 6097
    
    [ Upstream commit 585d42bb57bb358d48906660a8de273b078810b1 ]
    
    This chip has support for the same per-port policy actions found in
    later versions of LinkStreet devices.
    
    Fixes: f3a2cd326e44 ("net: dsa: mv88e6xxx: introduce .port_set_policy")
    Signed-off-by: Tobias Waldekranz <tobias@waldekranz.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b03c06171b6e3ebd0f299c291a01b4dd1177cf15
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Jan 22 15:58:58 2022 +0100

    mt76: mt7615: check sta_rates pointer in mt7615_sta_rate_tbl_update
    
    [ Upstream commit 6a6f457ed5fdf6777536c20644a9e42128a50ec2 ]
    
    Check sta_rates pointer value in mt7615_sta_rate_tbl_update routine
    since minstrel_ht_update_rates can fail allocating rates array.
    
    Fixes: 04b8e65922f63 ("mt76: add mac80211 driver for MT7615 PCIe-based chipsets")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb5932160e371bd8fbec5afe975435cfe748a4d5
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Jan 22 15:58:57 2022 +0100

    mt76: mt7603: check sta_rates pointer in mt7603_sta_rate_tbl_update
    
    [ Upstream commit fc8e2c707ce11c8ec2e992885b0d53a5e04031ac ]
    
    Check sta_rates pointer value in mt7603_sta_rate_tbl_update routine
    since minstrel_ht_update_rates can fail allocating rates array.
    
    Fixes: c8846e1015022 ("mt76: add driver for MT7603E and MT7628/7688")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2ee8da9f72d768acc7dc264d373070d403b5ed9
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Wed Feb 2 09:48:37 2022 +0530

    powerpc/perf: Don't use perf_hw_context for trace IMC PMU
    
    [ Upstream commit 0198322379c25215b2778482bf1221743a76e2b5 ]
    
    Trace IMC (In-Memory collection counters) in powerpc is useful for
    application level profiling.
    
    For trace_imc, presently task context (task_ctx_nr) is set to
    perf_hw_context. But perf_hw_context should only be used for CPU PMU.
    See commit 26657848502b ("perf/core: Verify we have a single
    perf_hw_context PMU").
    
    So for trace_imc, even though it is per thread PMU, it is preferred to
    use sw_context in order to be able to do application level monitoring.
    Hence change the task_ctx_nr to use perf_sw_context.
    
    Fixes: 012ae244845f ("powerpc/perf: Trace imc PMU functions")
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Reviewed-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    [mpe: Update subject & incorporate notes into change log, reflow comment]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220202041837.65968-1-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 135eb4e2bed1c6a84cc705055f9f5ea1bb21e669
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Dec 30 10:29:26 2021 +0800

    ray_cs: Check ioremap return value
    
    [ Upstream commit 7e4760713391ee46dc913194b33ae234389a174e ]
    
    As the possible failure of the ioremap(), the 'local->sram' and other
    two could be NULL.
    Therefore it should be better to check it in order to avoid the later
    dev_dbg.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20211230022926.1846757-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3be1bb175f2c0660de67a9213a8ae34e1e91bb72
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jan 20 10:46:54 2022 +0000

    power: reset: gemini-poweroff: Fix IRQ check in gemini_poweroff_probe
    
    [ Upstream commit ba18dad0fb880cd29aa97b6b75560ef14d1061ba ]
    
    platform_get_irq() returns negative error number instead 0 on failure.
    And the doc of platform_get_irq() provides a usage example:
    
        int irq = platform_get_irq(pdev, 0);
        if (irq < 0)
            return irq;
    
    Fix the check of return value to catch errors correctly.
    
    Fixes: f7a388d6cd1c ("power: reset: Add a driver for the Gemini poweroff")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a0e270c40aeb561d3c5ca1316c6eb48e9b6cc6c
Author: Alexander Lobakin <alexandr.lobakin@intel.com>
Date:   Wed Dec 8 15:06:54 2021 +0100

    i40e: don't reserve excessive XDP_PACKET_HEADROOM on XSK Rx to skb
    
    [ Upstream commit bc97f9c6f988b31b728eb47a94ca825401dbeffe ]
    
    {__,}napi_alloc_skb() allocates and reserves additional NET_SKB_PAD
    + NET_IP_ALIGN for any skb.
    OTOH, i40e_construct_skb_zc() currently allocates and reserves
    additional `xdp->data - xdp->data_hard_start`, which is
    XDP_PACKET_HEADROOM for XSK frames.
    There's no need for that at all as the frame is post-XDP and will
    go only to the networking stack core.
    Pass the size of the actual data only to __napi_alloc_skb() and
    don't reserve anything. This will give enough headroom for stack
    processing.
    
    Fixes: 0a714186d3c0 ("i40e: add AF_XDP zero-copy Rx support")
    Signed-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Tested-by: Kiran Bhandare <kiranx.bhandare@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5607badbb145a580e821473c4631630200e2cd7f
Author: Fabiano Rosas <farosas@linux.ibm.com>
Date:   Tue Jan 25 18:56:52 2022 -0300

    KVM: PPC: Fix vmx/vsx mixup in mmio emulation
    
    [ Upstream commit b99234b918c6e36b9aa0a5b2981e86b6bd11f8e2 ]
    
    The MMIO emulation code for vector instructions is duplicated between
    VSX and VMX. When emulating VMX we should check the VMX copy size
    instead of the VSX one.
    
    Fixes: acc9eb9305fe ("KVM: PPC: Reimplement LOAD_VMX/STORE_VMX instruction ...")
    Signed-off-by: Fabiano Rosas <farosas@linux.ibm.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220125215655.1026224-3-farosas@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d244b731188e0b63fc40a9d2dec72e9181fb37c
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Wed Jan 19 10:52:37 2022 +0200

    ath9k_htc: fix uninit value bugs
    
    [ Upstream commit d1e0df1c57bd30871dd1c855742a7c346dbca853 ]
    
    Syzbot reported 2 KMSAN bugs in ath9k. All of them are caused by missing
    field initialization.
    
    In htc_connect_service() svc_meta_len and pad are not initialized. Based
    on code it looks like in current skb there is no service data, so simply
    initialize svc_meta_len to 0.
    
    htc_issue_send() does not initialize htc_frame_hdr::control array. Based
    on firmware code, it will initialize it by itself, so simply zero whole
    array to make KMSAN happy
    
    Fail logs:
    
    BUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     hif_usb_send_regout drivers/net/wireless/ath/ath9k/hif_usb.c:127 [inline]
     hif_usb_send+0x5f0/0x16f0 drivers/net/wireless/ath/ath9k/hif_usb.c:479
     htc_issue_send drivers/net/wireless/ath/ath9k/htc_hst.c:34 [inline]
     htc_connect_service+0x143e/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:275
    ...
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:524 [inline]
     slab_alloc_node mm/slub.c:3251 [inline]
     __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974
     kmalloc_reserve net/core/skbuff.c:354 [inline]
     __alloc_skb+0x545/0xf90 net/core/skbuff.c:426
     alloc_skb include/linux/skbuff.h:1126 [inline]
     htc_connect_service+0x1029/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:258
    ...
    
    Bytes 4-7 of 18 are uninitialized
    Memory access of size 18 starts at ffff888027377e00
    
    BUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     hif_usb_send_regout drivers/net/wireless/ath/ath9k/hif_usb.c:127 [inline]
     hif_usb_send+0x5f0/0x16f0 drivers/net/wireless/ath/ath9k/hif_usb.c:479
     htc_issue_send drivers/net/wireless/ath/ath9k/htc_hst.c:34 [inline]
     htc_connect_service+0x143e/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:275
    ...
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:524 [inline]
     slab_alloc_node mm/slub.c:3251 [inline]
     __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974
     kmalloc_reserve net/core/skbuff.c:354 [inline]
     __alloc_skb+0x545/0xf90 net/core/skbuff.c:426
     alloc_skb include/linux/skbuff.h:1126 [inline]
     htc_connect_service+0x1029/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:258
    ...
    
    Bytes 16-17 of 18 are uninitialized
    Memory access of size 18 starts at ffff888027377e00
    
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Reported-by: syzbot+f83a1df1ed4f67e8d8ad@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220115122733.11160-1-paskripkin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57f4ad5e286fe4599c8fc63cf89f85f9eec7f9c9
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Tue Jan 25 00:57:29 2022 +0800

    drm/amd/display: Fix a NULL pointer dereference in amdgpu_dm_connector_add_common_modes()
    
    [ Upstream commit 588a70177df3b1777484267584ef38ab2ca899a2 ]
    
    In amdgpu_dm_connector_add_common_modes(), amdgpu_dm_create_common_mode()
    is assigned to mode and is passed to drm_mode_probed_add() directly after
    that. drm_mode_probed_add() passes &mode->head to list_add_tail(), and
    there is a dereference of it in list_add_tail() without recoveries, which
    could lead to NULL pointer dereference on failure of
    amdgpu_dm_create_common_mode().
    
    Fix this by adding a NULL check of mode.
    
    This bug was found by a static analyzer.
    
    Builds with 'make allyesconfig' show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: e7b07ceef2a6 ("drm/amd/display: Merge amdgpu_dm_types and amdgpu_dm")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1feb6ff89d7f057a9f620e671bb42bbb4fbb65e5
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Jan 20 16:16:11 2022 +0100

    drm/edid: Don't clear formats if using deep color
    
    [ Upstream commit 75478b3b393bcbdca4e6da76fe3a9f1a4133ec5d ]
    
    The current code, when parsing the EDID Deep Color depths, that the
    YUV422 cannot be used, referring to the HDMI 1.3 Specification.
    
    This specification, in its section 6.2.4, indeed states:
    
      For each supported Deep Color mode, RGB 4:4:4 shall be supported and
      optionally YCBCR 4:4:4 may be supported.
    
      YCBCR 4:2:2 is not permitted for any Deep Color mode.
    
    This indeed can be interpreted like the code does, but the HDMI 1.4
    specification further clarifies that statement in its section 6.2.4:
    
      For each supported Deep Color mode, RGB 4:4:4 shall be supported and
      optionally YCBCR 4:4:4 may be supported.
    
      YCBCR 4:2:2 is also 36-bit mode but does not require the further use
      of the Deep Color modes described in section 6.5.2 and 6.5.3.
    
    This means that, even though YUV422 can be used with 12 bit per color,
    it shouldn't be treated as a deep color mode.
    
    This is also broken with YUV444 if it's supported by the display, but
    DRM_EDID_HDMI_DC_Y444 isn't set. In such a case, the code will clear
    color_formats of the YUV444 support set previously in
    drm_parse_cea_ext(), but will not set it back.
    
    Since the formats supported are already setup properly in
    drm_parse_cea_ext(), let's just remove the code modifying the formats in
    drm_parse_hdmi_deep_color_info()
    
    Fixes: d0c94692e0a3 ("drm/edid: Parse and handle HDMI deep color modes.")
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220120151625.594595-3-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d0ee651e72c0c81798346aa59e229c63fbcbdcf
Author: Dario Binacchi <dario.binacchi@amarulasolutions.com>
Date:   Tue Jan 18 10:54:32 2022 +0100

    mtd: rawnand: gpmi: fix controller timings setting
    
    [ Upstream commit 2970bf5a32f079e1e9197411db4fe9faccb1503a ]
    
    Set the controller registers according to the real clock rate. The
    controller registers configuration (setup, hold, timeout, ... cycles)
    depends on the clock rate of the GPMI. Using the real rate instead of
    the ideal one, avoids that this inaccuracy (required_rate - real_rate)
    affects the registers setting.
    
    This patch has been tested on two custom boards with i.MX28 and i.MX6
    SOCs:
    - i.MX28:
      required rate 100MHz, real rate 99.3MHz
    - i.MX6
      required rate 100MHz, real rate 99MHz
    
    Fixes: b1206122069a ("mtd: rawnand: gpmi: use core timings instead of an empirical derivation")
    Co-developed-by: Michael Trimarchi <michael@amarulasolutions.com>
    Signed-off-by: Michael Trimarchi <michael@amarulasolutions.com>
    Signed-off-by: Dario Binacchi <dario.binacchi@amarulasolutions.com>
    Tested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Reviewed-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220118095434.35081-3-dario.binacchi@amarulasolutions.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 750d2dc19f2559f6449876678b059c910f48b379
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Jan 5 00:26:58 2022 +0800

    mtd: onenand: Check for error irq
    
    [ Upstream commit 3e68f331c8c759c0daa31cc92c3449b23119a215 ]
    
    For the possible failure of the platform_get_irq(), the returned irq
    could be error number and will finally cause the failure of the
    request_irq().
    Consider that platform_get_irq() can now in certain cases return
    -EPROBE_DEFER, and the consequences of letting request_irq() effectively
    convert that into -EINVAL, even at probe time rather than later on.
    So it might be better to check just now.
    
    Fixes: 2c22120fbd01 ("MTD: OneNAND: interrupt based wait support")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220104162658.1988142-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d58d281d6a3f49ce83b82f8211c396ba34c0304f
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Jan 13 16:27:04 2022 +0300

    Bluetooth: hci_serdev: call init_rwsem() before p->open()
    
    [ Upstream commit 9d7cbe2b9cf5f650067df4f402fdd799d4bbb4e1 ]
    
    kvartet reported, that hci_uart_tx_wakeup() uses uninitialized rwsem.
    The problem was in wrong place for percpu_init_rwsem() call.
    
    hci_uart_proto::open() may register a timer whose callback may call
    hci_uart_tx_wakeup(). There is a chance, that hci_uart_register_device()
    thread won't be fast enough to call percpu_init_rwsem().
    
    Fix it my moving percpu_init_rwsem() call before p->open().
    
    INFO: trying to register non-static key.
    The code is fine but needs lockdep annotation, or maybe
    you didn't initialize this object before use?
    turning off the locking correctness validator.
    CPU: 2 PID: 18524 Comm: syz-executor.5 Not tainted 5.16.0-rc6 #9
    ...
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     assign_lock_key kernel/locking/lockdep.c:951 [inline]
     register_lock_class+0x148d/0x1950 kernel/locking/lockdep.c:1263
     __lock_acquire+0x106/0x57e0 kernel/locking/lockdep.c:4906
     lock_acquire kernel/locking/lockdep.c:5637 [inline]
     lock_acquire+0x1ab/0x520 kernel/locking/lockdep.c:5602
     percpu_down_read_trylock include/linux/percpu-rwsem.h:92 [inline]
     hci_uart_tx_wakeup+0x12e/0x490 drivers/bluetooth/hci_ldisc.c:124
     h5_timed_event+0x32f/0x6a0 drivers/bluetooth/hci_h5.c:188
     call_timer_fn+0x1a5/0x6b0 kernel/time/timer.c:1421
    
    Fixes: d73e17281665 ("Bluetooth: hci_serdev: Init hci_uart proto_lock to avoid oops")
    Reported-by: Yiru Xu <xyru1999@gmail.com>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d50f851dd307c07ca5591297093f19967c834a9
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Dec 30 17:26:49 2021 +0300

    udmabuf: validate ubuf->pagecount
    
    [ Upstream commit 2b6dd600dd72573c23ea180b5b0b2f1813405882 ]
    
    Syzbot has reported GPF in sg_alloc_append_table_from_pages(). The
    problem was in ubuf->pages == ZERO_PTR.
    
    ubuf->pagecount is calculated from arguments passed from user-space. If
    user creates udmabuf with list.size == 0 then ubuf->pagecount will be
    also equal to zero; it causes kmalloc_array() to return ZERO_PTR.
    
    Fix it by validating ubuf->pagecount before passing it to
    kmalloc_array().
    
    Fixes: fbb0de795078 ("Add udmabuf misc device")
    Reported-and-tested-by: syzbot+2c56b725ec547fa9cb29@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20211230142649.23022-1-paskripkin@gmail.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cf7d537d330f6d9112926d73c87fc71b14d4470
Author: Wen Gong <quic_wgong@quicinc.com>
Date:   Mon Jan 10 16:24:13 2022 +0200

    ath10k: fix memory overwrite of the WoWLAN wakeup packet pattern
    
    [ Upstream commit e3fb3d4418fce5484dfe7995fcd94c18b10a431a ]
    
    In function ath10k_wow_convert_8023_to_80211(), it will do memcpy for
    the new->pattern, and currently the new->pattern and new->mask is same
    with the old, then the memcpy of new->pattern will also overwrite the
    old->pattern, because the header format of new->pattern is 802.11,
    its length is larger than the old->pattern which is 802.3. Then the
    operation of "Copy frame body" will copy a mistake value because the
    body memory has been overwrite when memcpy the new->pattern.
    
    Assign another empty value to new_pattern to avoid the overwrite issue.
    
    Tested-on: QCA6174 hw3.2 SDIO WLAN.RMH.4.4.1-00049
    
    Fixes: fa3440fa2fa1 ("ath10k: convert wow pattern from 802.3 to 802.11")
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20211222031347.25463-1-quic_wgong@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 820e469a2f37e45cca520315b097bf4085ec456c
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 5 10:41:09 2022 +0000

    drm/bridge: Add missing pm_runtime_disable() in __dw_mipi_dsi_probe
    
    [ Upstream commit 96211b7c56b109a52768e6cc5e23a1f79316eca0 ]
    
    If the probe fails, we should use pm_runtime_disable() to balance
    pm_runtime_enable().
    Add missing pm_runtime_disable() for __dw_mipi_dsi_probe.
    
    Fixes: 46fc51546d44 ("drm/bridge/synopsys: Add MIPI DSI host controller bridge")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220105104113.31415-1-linmq006@gmail.com
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7a0c8546f74113ea69391b04ac47eea7e380c03
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Dec 27 09:25:22 2021 +0000

    drm/bridge: Fix free wrong object in sii8620_init_rcp_input_dev
    
    [ Upstream commit 7c442e76c06cb1bef16a6c523487438175584eea ]
    
    rc_dev is allocated by rc_allocate_device(), and doesn't assigned to
    ctx->rc_dev before calling  rc_free_device(ctx->rc_dev).
    So it should call rc_free_device(rc_dev);
    
    Fixes: e25f1f7c94e1 ("drm/bridge/sii8620: add remote control support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211227092522.21755-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f419751373a522a2067b12b805f9a3fb84f5321a
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Mar 16 04:19:24 2022 +0000

    ASoC: msm8916-wcd-analog: Fix error handling in pm8916_wcd_analog_spmi_probe
    
    [ Upstream commit 9ebd62d60edcd4d9c75485e5ccd0b79581ad3c49 ]
    
    In the error handling path, the clk_prepare_enable() function
    call should be balanced by a corresponding 'clk_disable_unprepare()'
    call , as already done in the remove function.
    
    Fixes: de66b3455023 ("ASoC: codecs: msm8916-wcd-analog: add MBHC support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220316041924.17560-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f31073b7772b351c44b49eed50487b18cd8e285
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 8 15:14:15 2022 +0800

    mmc: davinci_mmc: Handle error for clk_enable
    
    [ Upstream commit 09e7af76db02c74f2a339b3cb2d95460fa2ddbe4 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: bbce5802afc5 ("davinci: mmc: updates to suspend/resume implementation")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220308071415.1093393-1-jiasheng@iscas.ac.cn
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93476f9f827737753972268fdf49677f57bb699d
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 08:45:22 2022 +0000

    ASoC: msm8916-wcd-digital: Fix missing clk_disable_unprepare() in msm8916_wcd_digital_probe
    
    [ Upstream commit 375a347da4889f64d86e1ab7f4e6702b6e9bf299 ]
    
    Fix the missing clk_disable_unprepare() before return
    from msm8916_wcd_digital_probe in the error handling case.
    
    Fixes: 150db8c5afa1 ("ASoC: codecs: Add msm8916-wcd digital codec")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220307084523.28687-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e1fdf18fecb69e3e85333e5be7444754579c152
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Thu Mar 10 09:19:02 2022 +0000

    ASoC: imx-es8328: Fix error return code in imx_es8328_probe()
    
    [ Upstream commit 3b891513f95cba3944e72c1139ea706d04f3781b ]
    
    Fix to return a negative error code from the error handling case instead
    of 0, as done elsewhere in this function.
    
    Fixes: 7e7292dba215 ("ASoC: fsl: add imx-es8328 machine driver")
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Link: https://lore.kernel.org/r/20220310091902.129299-1-wangwensheng4@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67e12f1cb2f97468c12b59e21975eaa0f332e7d2
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 02:01:44 2022 +0000

    ASoC: mxs: Fix error handling in mxs_sgtl5000_probe
    
    [ Upstream commit 6ae0a4d8fec551ec581d620f0eb1fe31f755551c ]
    
    This function only calls of_node_put() in the regular path.
    And it will cause refcount leak in error paths.
    For example, when codec_np is NULL, saif_np[0] and saif_np[1]
    are not NULL, it will cause leaks.
    
    of_node_put() will check if the node pointer is NULL, so we can
    call it directly to release the refcount of regular pointers.
    
    Fixes: e968194b45c4 ("ASoC: mxs: add device tree support for mxs-sgtl5000")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220308020146.26496-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed41d104be5453042bf11de4cd8924ea8f309f75
Author: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
Date:   Mon Mar 7 14:21:57 2022 +0200

    ASoC: dmaengine: do not use a NULL prepare_slave_config() callback
    
    [ Upstream commit 9a1e13440a4f2e7566fd4c5eae6a53e6400e08a4 ]
    
    Even if struct snd_dmaengine_pcm_config is used, prepare_slave_config()
    callback might not be set. Check if this callback is set before using it.
    
    Fixes: fa654e085300 ("ASoC: dmaengine-pcm: Provide default config")
    Signed-off-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Link: https://lore.kernel.org/r/20220307122202.2251639-2-codrin.ciubotariu@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29e91a49b6fb92832f07b732282f9001a4aeb173
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Sun Mar 6 12:29:11 2022 +0100

    ivtv: fix incorrect device_caps for ivtvfb
    
    [ Upstream commit 25e94139218c0293b4375233c14f2256d7dcfaa8 ]
    
    The VIDIOC_G_FBUF and related overlay ioctls no longer worked (-ENOTTY was
    returned).
    
    The root cause was the introduction of the caps field in ivtv-driver.h.
    While loading the ivtvfb module would update the video_device device_caps
    field with V4L2_CAP_VIDEO_OUTPUT_OVERLAY it would not update that caps
    field, and that's what the overlay ioctls would look at.
    
    It's a bad idea to keep information in two places, so drop the caps field
    and only use vdev.device_caps.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: Martin Dauskardt <martin.dauskardt@gmx.de>
    Fixes: 2161536516ed (media: media/pci: set device_caps in struct video_device)
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0342da635054c58095bb21fec5efd0b8f04591df
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 12:38:12 2022 +0000

    video: fbdev: omapfb: Add missing of_node_put() in dvic_probe_of
    
    [ Upstream commit a58c22cfbbf62fefca090334bbd35fd132e92a23 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: f76ee892a99e ("omapfb: copy omapdss & displays for omapfb")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58e42ee4a0220449d03d149971c654c8d7a2de0e
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Mar 2 14:28:44 2022 +0800

    ASoC: fsi: Add check for clk_enable
    
    [ Upstream commit 405afed8a728f23cfaa02f75bbc8bdd6b7322123 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: ab6f6d85210c ("ASoC: fsi: add master clock control functions")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220302062844.46869-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea9adaa598ec657a3b5bdfa6953523f3b2cee6a0
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Mar 4 10:38:21 2022 +0800

    ASoC: wm8350: Handle error for wm8350_register_irq
    
    [ Upstream commit db0350da8084ad549bca16cc0486c11cc70a1f9b ]
    
    As the potential failure of the wm8350_register_irq(),
    it should be better to check it and return error if fails.
    Also, use 'free_' in order to avoid the same code.
    
    Fixes: a6ba2b2dabb5 ("ASoC: Implement WM8350 headphone jack detection")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20220304023821.391936-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0325193cf40dc3a6e27d55a5b98680936deebcd0
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 12:45:39 2022 +0000

    ASoC: atmel: Add missing of_node_put() in at91sam9g20ek_audio_probe
    
    [ Upstream commit f590797fa3c1bccdd19e55441592a23b46aef449 ]
    
    This node pointer is returned by of_parse_phandle() with refcount
    incremented in this function.
    Calling of_node_put() to avoid the refcount leak.
    
    Fixes: 531f67e41dcd ("ASoC: at91sam9g20ek-wm8731: convert to dt support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Link: https://lore.kernel.org/r/20220307124539.1743-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3cc050df73e3d973f1870a8dc0e177e77670bc7f
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Tue Jan 25 09:02:11 2022 +0100

    media: stk1160: If start stream fails, return buffers with VB2_BUF_STATE_QUEUED
    
    [ Upstream commit fbe04b49a54e31f4321d632270207f0e6304cd16 ]
    
    If the callback 'start_streaming' fails, then all
    queued buffers in the driver should be returned with
    state 'VB2_BUF_STATE_QUEUED'. Currently, they are
    returned with 'VB2_BUF_STATE_ERROR' which is wrong.
    Fix this. This also fixes the warning:
    
    [   65.583633] WARNING: CPU: 5 PID: 593 at drivers/media/common/videobuf2/videobuf2-core.c:1612 vb2_start_streaming+0xd4/0x160 [videobuf2_common]
    [   65.585027] Modules linked in: snd_usb_audio snd_hwdep snd_usbmidi_lib snd_rawmidi snd_soc_hdmi_codec dw_hdmi_i2s_audio saa7115 stk1160 videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_common videodev mc crct10dif_ce panfrost snd_soc_simple_card snd_soc_audio_graph_card snd_soc_spdif_tx snd_soc_simple_card_utils gpu_sched phy_rockchip_pcie snd_soc_rockchip_i2s rockchipdrm analogix_dp dw_mipi_dsi dw_hdmi cec drm_kms_helper drm rtc_rk808 rockchip_saradc industrialio_triggered_buffer kfifo_buf rockchip_thermal pcie_rockchip_host ip_tables x_tables ipv6
    [   65.589383] CPU: 5 PID: 593 Comm: v4l2src0:src Tainted: G        W         5.16.0-rc4-62408-g32447129cb30-dirty #14
    [   65.590293] Hardware name: Radxa ROCK Pi 4B (DT)
    [   65.590696] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [   65.591304] pc : vb2_start_streaming+0xd4/0x160 [videobuf2_common]
    [   65.591850] lr : vb2_start_streaming+0x6c/0x160 [videobuf2_common]
    [   65.592395] sp : ffff800012bc3ad0
    [   65.592685] x29: ffff800012bc3ad0 x28: 0000000000000000 x27: ffff800012bc3cd8
    [   65.593312] x26: 0000000000000000 x25: ffff00000d8a7800 x24: 0000000040045612
    [   65.593938] x23: ffff800011323000 x22: ffff800012bc3cd8 x21: ffff00000908a8b0
    [   65.594562] x20: ffff00000908a8c8 x19: 00000000fffffff4 x18: ffffffffffffffff
    [   65.595188] x17: 000000040044ffff x16: 00400034b5503510 x15: ffff800011323f78
    [   65.595813] x14: ffff000013163886 x13: ffff000013163885 x12: 00000000000002ce
    [   65.596439] x11: 0000000000000028 x10: 0000000000000001 x9 : 0000000000000228
    [   65.597064] x8 : 0101010101010101 x7 : 7f7f7f7f7f7f7f7f x6 : fefefeff726c5e78
    [   65.597690] x5 : ffff800012bc3990 x4 : 0000000000000000 x3 : ffff000009a34880
    [   65.598315] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000007cd99f0
    [   65.598940] Call trace:
    [   65.599155]  vb2_start_streaming+0xd4/0x160 [videobuf2_common]
    [   65.599672]  vb2_core_streamon+0x17c/0x1a8 [videobuf2_common]
    [   65.600179]  vb2_streamon+0x54/0x88 [videobuf2_v4l2]
    [   65.600619]  vb2_ioctl_streamon+0x54/0x60 [videobuf2_v4l2]
    [   65.601103]  v4l_streamon+0x3c/0x50 [videodev]
    [   65.601521]  __video_do_ioctl+0x1a4/0x428 [videodev]
    [   65.601977]  video_usercopy+0x320/0x828 [videodev]
    [   65.602419]  video_ioctl2+0x3c/0x58 [videodev]
    [   65.602830]  v4l2_ioctl+0x60/0x90 [videodev]
    [   65.603227]  __arm64_sys_ioctl+0xa8/0xe0
    [   65.603576]  invoke_syscall+0x54/0x118
    [   65.603911]  el0_svc_common.constprop.3+0x84/0x100
    [   65.604332]  do_el0_svc+0x34/0xa0
    [   65.604625]  el0_svc+0x1c/0x50
    [   65.604897]  el0t_64_sync_handler+0x88/0xb0
    [   65.605264]  el0t_64_sync+0x16c/0x170
    [   65.605587] ---[ end trace 578e0ba07742170d ]---
    
    Fixes: 8ac456495a33d ("[media] stk1160: Stop device and unqueue buffers when start_streaming() fails")
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97398470c9b6fc89aaff137decfdd2673257b0ad
Author: Rob Herring <robh@kernel.org>
Date:   Fri Mar 4 14:25:58 2022 -0600

    arm64: dts: rockchip: Fix SDIO regulator supply properties on rk3399-firefly
    
    [ Upstream commit 37cbd3c522869247ed4525b5042ff4c6a276c813 ]
    
    A label reference without brackets is a path string, not a phandle as
    intended. Add the missing brackets.
    
    Fixes: a5002c41c383 ("arm64: dts: rockchip: add WiFi module support for Firefly-RK3399")
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20220304202559.317749-1-robh@kernel.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7025f40690a235a118c87674cfb93072694aa66d
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Mar 4 21:56:47 2022 +0900

    ALSA: firewire-lib: fix uninitialized flag for AV/C deferred transaction
    
    [ Upstream commit bf0cd60b7e33cf221fbe1114e4acb2c828b0af0d ]
    
    AV/C deferred transaction was supported at a commit 00a7bb81c20f ("ALSA:
    firewire-lib: Add support for deferred transaction") while 'deferrable'
    flag can be uninitialized for non-control/notify AV/C transactions.
    UBSAN reports it:
    
    kernel: ================================================================================
    kernel: UBSAN: invalid-load in /build/linux-aa0B4d/linux-5.15.0/sound/firewire/fcp.c:363:9
    kernel: load of value 158 is not a valid value for type '_Bool'
    kernel: CPU: 3 PID: 182227 Comm: irq/35-firewire Tainted: P           OE     5.15.0-18-generic #18-Ubuntu
    kernel: Hardware name: Gigabyte Technology Co., Ltd. AX370-Gaming 5/AX370-Gaming 5, BIOS F42b 08/01/2019
    kernel: Call Trace:
    kernel:  <IRQ>
    kernel:  show_stack+0x52/0x58
    kernel:  dump_stack_lvl+0x4a/0x5f
    kernel:  dump_stack+0x10/0x12
    kernel:  ubsan_epilogue+0x9/0x45
    kernel:  __ubsan_handle_load_invalid_value.cold+0x44/0x49
    kernel:  fcp_response.part.0.cold+0x1a/0x2b [snd_firewire_lib]
    kernel:  fcp_response+0x28/0x30 [snd_firewire_lib]
    kernel:  fw_core_handle_request+0x230/0x3d0 [firewire_core]
    kernel:  handle_ar_packet+0x1d9/0x200 [firewire_ohci]
    kernel:  ? handle_ar_packet+0x1d9/0x200 [firewire_ohci]
    kernel:  ? transmit_complete_callback+0x9f/0x120 [firewire_core]
    kernel:  ar_context_tasklet+0xa8/0x2e0 [firewire_ohci]
    kernel:  tasklet_action_common.constprop.0+0xea/0xf0
    kernel:  tasklet_action+0x22/0x30
    kernel:  __do_softirq+0xd9/0x2e3
    kernel:  ? irq_finalize_oneshot.part.0+0xf0/0xf0
    kernel:  do_softirq+0x75/0xa0
    kernel:  </IRQ>
    kernel:  <TASK>
    kernel:  __local_bh_enable_ip+0x50/0x60
    kernel:  irq_forced_thread_fn+0x7e/0x90
    kernel:  irq_thread+0xba/0x190
    kernel:  ? irq_thread_fn+0x60/0x60
    kernel:  kthread+0x11e/0x140
    kernel:  ? irq_thread_check_affinity+0xf0/0xf0
    kernel:  ? set_kthread_struct+0x50/0x50
    kernel:  ret_from_fork+0x22/0x30
    kernel:  </TASK>
    kernel: ================================================================================
    
    This commit fixes the bug. The bug has no disadvantage for the non-
    control/notify AV/C transactions since the flag has an effect for AV/C
    response with INTERIM (0x0f) status which is not used for the transactions
    in AV/C general specification.
    
    Fixes: 00a7bb81c20f ("ALSA: firewire-lib: Add support for deferred transaction")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20220304125647.78430-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd5dda439e1cd609526a019a16d9e537b52b9d46
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Feb 25 05:25:52 2022 -0800

    memory: emif: check the pointer temp in get_device_details()
    
    [ Upstream commit 5b5ab1bfa1898c6d52936a57c25c5ceba2cb2f87 ]
    
    The pointer temp is allocated by devm_kzalloc(), so it should be
    checked for error handling.
    
    Fixes: 7ec944538dde ("memory: emif: add basic infrastructure for EMIF driver")
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Link: https://lore.kernel.org/r/20220225132552.27894-1-baijiaju1990@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ead05f7218fc0811e09adf4b0e66f96e90828b8
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 24 10:54:44 2022 +0800

    memory: emif: Add check for setup_interrupts
    
    [ Upstream commit fd7bd80b46373887b390852f490f21b07e209498 ]
    
    As the potential failure of the devm_request_threaded_irq(),
    it should be better to check the return value of the
    setup_interrupts() and return error if fails.
    
    Fixes: 68b4aee35d1f ("memory: emif: add interrupt and temperature handling")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220224025444.3256530-1-jiasheng@iscas.ac.cn
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68a69ad8df959e5211ed4a8e120783b2d352ea74
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Oct 15 08:13:53 2021 +0000

    ASoC: soc-compress: prevent the potentially use of null pointer
    
    [ Upstream commit de2c6f98817fa5decb9b7d3b3a8a3ab864c10588 ]
    
    There is one call trace that snd_soc_register_card()
    ->snd_soc_bind_card()->soc_init_pcm_runtime()
    ->snd_soc_dai_compress_new()->snd_soc_new_compress().
    In the trace the 'codec_dai' transfers from card->dai_link,
    and we can see from the snd_soc_add_pcm_runtime() in
    snd_soc_bind_card() that, if value of card->dai_link->num_codecs
    is 0, then 'codec_dai' could be null pointer caused
    by index out of bound in 'asoc_rtd_to_codec(rtd, 0)'.
    And snd_soc_register_card() is called by various platforms.
    Therefore, it is better to add the check in the case of misusing.
    And because 'cpu_dai' has already checked in soc_init_pcm_runtime(),
    there is no need to check again.
    Adding the check as follow, then if 'codec_dai' is null,
    snd_soc_new_compress() will not pass through the check
    'if (playback + capture != 1)', avoiding the leftover use of
    'codec_dai'.
    
    Fixes: 467fece ("ASoC: soc-dai: move snd_soc_dai_stream_valid() to soc-dai.c")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/1634285633-529368-1-git-send-email-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af6e1d11f758c0ccfdfd5becd3ce961e215c4bf9
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 1 17:06:37 2022 +0800

    ASoC: atmel_ssc_dai: Handle errors for clk_enable
    
    [ Upstream commit f9e2ca0640e59d19af0ff285ee5591ed39069b09 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error if fals.
    
    Fixes: cbaadf0f90d6 ("ASoC: atmel_ssc_dai: refactor the startup and shutdown")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220301090637.3776558-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd0c4082fd1402fcb4f3c0f964f534aedc65f733
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 1 16:17:17 2022 +0800

    ASoC: mxs-saif: Handle errors for clk_enable
    
    [ Upstream commit 2ecf362d220317debf5da376e0390e9f7a3f7b29 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it, like mxs_saif_trigger().
    
    Fixes: d0ba4c014934 ("ASoC: mxs-saif: set a base clock rate for EXTMASTER mode work")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220301081717.3727190-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5847873140e6dc2799045f7a1e5eddc6d22b9b55
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:05:56 2022 -0800

    printk: fix return value of printk.devkmsg __setup handler
    
    [ Upstream commit b665eae7a788c5e2bc10f9ac3c0137aa0ad1fc97 ]
    
    If an invalid option value is used with "printk.devkmsg=<value>",
    it is silently ignored.
    If a valid option value is used, it is honored but the wrong return
    value (0) is used, indicating that the command line option had an
    error and was not handled. This string is not added to init's
    environment strings due to init/main.c::unknown_bootoption()
    checking for a '.' in the boot option string and then considering
    that string to be an "Unused module parameter".
    
    Print a warning message if a bad option string is used.
    Always return 1 from the __setup handler to indicate that the command
    line option has been handled.
    
    Fixes: 750afe7babd1 ("printk: add kernel parameter to control writes to /dev/kmsg")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Sergey Senozhatsky <senozhatsky@chromium.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20220228220556.23484-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38bc92ae39b1471e6644e4cd5ce8cc8970cf2696
Author: Frank Wunderlich <frank-w@public-files.de>
Date:   Tue Mar 1 16:24:18 2022 +0100

    arm64: dts: broadcom: Fix sata nodename
    
    [ Upstream commit 55927cb44db43a57699fa652e2437a91620385dc ]
    
    After converting ahci-platform txt binding to yaml nodename is reported
    as not matching the standard:
    
    arch/arm64/boot/dts/broadcom/northstar2/ns2-svk.dt.yaml:
    ahci@663f2000: $nodename:0: 'ahci@663f2000' does not match '^sata(@.*)?$'
    
    Fix it to match binding.
    
    Fixes: ac9aae00f0fc ("arm64: dts: Add SATA3 AHCI and SATA3 PHY DT nodes for NS2")
    Signed-off-by: Frank Wunderlich <frank-w@public-files.de>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9873232fde53e98cf9dd5ecc8779897319ee9273
Author: Kuldeep Singh <singh.kuldeep87k@gmail.com>
Date:   Mon Feb 28 16:39:03 2022 +0530

    arm64: dts: ns2: Fix spi-cpol and spi-cpha property
    
    [ Upstream commit c953c764e505428f59ffe6afb1c73b89b5b1ac35 ]
    
    Broadcom ns2 platform has spi-cpol and spi-cpho properties set
    incorrectly. As per spi-slave-peripheral-prop.yaml, these properties are
    of flag or boolean type and not integer type. Fix the values.
    
    Fixes: d69dbd9f41a7c (arm64: dts: Add ARM PL022 SPI DT nodes for NS2)
    Signed-off-by: Kuldeep Singh <singh.kuldeep87k@gmail.com>
    CC: Ray Jui <rjui@broadcom.com>
    CC: Scott Branden <sbranden@broadcom.com>
    CC: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6475df1e7bfef989c75a4dc4945c993ec6e063b
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Mon Feb 28 10:28:39 2022 +0800

    ALSA: spi: Add check for clk_enable()
    
    [ Upstream commit ca1697eb09208f0168d94b88b72f57505339cbe5 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: 3568459a5113 ("ALSA: at73c213: manage SSC clock")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220228022839.3547266-1-jiasheng@iscas.ac.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0cfb41d4635df9b340a9bb8ad82f674b2bd06fa
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Mon Feb 28 11:15:40 2022 +0800

    ASoC: ti: davinci-i2s: Add check for clk_enable()
    
    [ Upstream commit ed7c9fef11931fc5d32a83d68017ff390bf5c280 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: 5f9a50c3e55e ("ASoC: Davinci: McBSP: add device tree support for McBSP")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@gmail.com>
    Link: https://lore.kernel.org/r/20220228031540.3571959-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3905742f93b4c7232aab30e7b8c6ad7b9efc2d64
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Feb 25 05:10:30 2022 -0800

    ASoC: rt5663: check the return value of devm_kzalloc() in rt5663_parse_dp()
    
    [ Upstream commit 4d06f92f38b799295ae22c98be7a20cac3e2a1a7 ]
    
    The function devm_kzalloc() in rt5663_parse_dp() can fail, so its return
    value should be checked.
    
    Fixes: 457c25efc592 ("ASoC: rt5663: Add the function of impedance sensing")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Link: https://lore.kernel.org/r/20220225131030.27248-1-baijiaju1990@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a975000e7aa358801ec64899b51a764ffe64501f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 15 15:37:37 2022 +0100

    uaccess: fix nios2 and microblaze get_user_8()
    
    [ Upstream commit a97b693c3712f040c5802f32b2d685352e08cefa ]
    
    These two architectures implement 8-byte get_user() through
    a memcpy() into a four-byte variable, which won't fit.
    
    Use a temporary 64-bit variable instead here, and use a double
    cast the way that risc-v and openrisc do to avoid compile-time
    warnings.
    
    Fixes: 6a090e97972d ("arch/microblaze: support get_user() of size 8 bytes")
    Fixes: 5ccc6af5e88e ("nios2: Memory management")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14cd5a8e61c654828a1f1056d56f0b0a524d2c69
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 2 20:52:01 2022 +0300

    media: usb: go7007: s2250-board: fix leak in probe()
    
    [ Upstream commit 67e4550ecd6164bfbdff54c169e5bbf9ccfaf14d ]
    
    Call i2c_unregister_device(audio) on this error path.
    
    Fixes: d3b2ccd9e307 ("[media] s2250: convert to the control framework")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92f84aa82dfaa8382785874277b0c4bedec89a68
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Sat Jan 22 15:44:59 2022 +0800

    media: em28xx: initialize refcount before kref_get
    
    [ Upstream commit c08eadca1bdfa099e20a32f8fa4b52b2f672236d ]
    
    The commit 47677e51e2a4("[media] em28xx: Only deallocate struct
    em28xx after finishing all extensions") adds kref_get to many init
    functions (e.g., em28xx_audio_init). However, kref_init is called too
    late in em28xx_usb_probe, since em28xx_init_dev before will invoke
    those init functions and call kref_get function. Then refcount bug
    occurs in my local syzkaller instance.
    
    Fix it by moving kref_init before em28xx_init_dev. This issue occurs
    not only in dev but also dev->dev_next.
    
    Fixes: 47677e51e2a4 ("[media] em28xx: Only deallocate struct em28xx after finishing all extensions")
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6f0999461e6fe9582cb3a32796bd94ae924a96a
Author: Tom Rix <trix@redhat.com>
Date:   Thu Aug 12 19:01:46 2021 +0200

    media: video/hdmi: handle short reads of hdmi info frame.
    
    [ Upstream commit 4a92fc6e55da5b87cecb572275deaff6ac9dd27e ]
    
    Calling hdmi_infoframe_unpack() with static sizeof(buffer) skips all
    the size checking done later in hdmi_infoframe_unpack().  A better
    value is the amount of data read into buffer.
    
    Fixes: 480b8b3e42c3 ("video/hdmi: Pass buffer size to infoframe unpack functions")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9d0bb298880d3fac869bbb5160c334bd71a7f32
Author: Marek Vasut <marex@denx.de>
Date:   Sun Feb 6 23:11:23 2022 +0100

    ARM: dts: imx: Add missing LVDS decoder on M53Menlo
    
    [ Upstream commit 0c6f71176ea43d6f4003a4d57f7bb518c5ad6145 ]
    
    The M53Menlo display unit uses an LVDS-to-DPI bridge, TI DS90CF364A.
    Describe this bridge in DT, otherwise the DT incorrectly describes
    DPI panel attached directly to LVDS source.
    
    Fixes: 716be61d1869 ("ARM: dts: imx53: Add Menlosystems M53 board")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cac1473d83e49a1e07e1557b99337f6691bf8eb2
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jan 14 06:28:40 2022 +0000

    soc: ti: wkup_m3_ipc: Fix IRQ check in wkup_m3_ipc_probe
    
    [ Upstream commit c3d66a164c726cc3b072232d3b6d87575d194084 ]
    
    platform_get_irq() returns negative error number instead 0 on failure.
    And the doc of platform_get_irq() provides a usage example:
    
        int irq = platform_get_irq(pdev, 0);
        if (irq < 0)
            return irq;
    
    Fix the check of return value to catch errors correctly.
    
    Fixes: cdd5de500b2c ("soc: ti: Add wkup_m3_ipc driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Acked-by: Dave Gerlach <d-gerlach@ti.com>
    Link: https://lore.kernel.org/r/20220114062840.16620-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb7f2eabfe1805f54b86965bc3fb50a02c28ef25
Author: Maulik Shah <quic_mkshah@quicinc.com>
Date:   Sun Jan 9 22:54:58 2022 +0530

    arm64: dts: qcom: sm8150: Correct TCS configuration for apps rsc
    
    [ Upstream commit 17ac8af678b6da6a8f1df7da8ebf2c5198741827 ]
    
    Correct the TCS config by updating the number of TCSes for each type.
    
    Cc: devicetree@vger.kernel.org
    Fixes: d8cf9372b654 ("arm64: dts: qcom: sm8150: Add apps shared nodes")
    Signed-off-by: Maulik Shah <quic_mkshah@quicinc.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/1641749107-31979-2-git-send-email-quic_mkshah@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 583fcb66ab17ff576fe95d20629257df939d1599
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Thu Jan 27 17:35:54 2022 +0000

    soc: qcom: aoss: remove spurious IRQF_ONESHOT flags
    
    [ Upstream commit 8030cb9a55688c1339edd284d9d6ce5f9fc75160 ]
    
    Quoting the header comments, IRQF_ONESHOT is "Used by threaded interrupts
    which need to keep the irq line disabled until the threaded handler has
    been run.". When applied to an interrupt that doesn't request a threaded
    irq then IRQF_ONESHOT has a lesser known (undocumented?) side effect,
    which it to disable the forced threading of the irq. For "normal" kernels
    (without forced threading) then, if there is no thread_fn, then
    IRQF_ONESHOT is a nop.
    
    In this case disabling forced threading is not appropriate for this driver
    because it calls wake_up_all() and this API cannot be called from
    no-thread interrupt handlers on PREEMPT_RT systems (deadlock risk, triggers
    sleeping-while-atomic warnings).
    
    Fix this by removing IRQF_ONESHOT.
    
    Fixes: 2209481409b7 ("soc: qcom: Add AOSS QMP driver")
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    [bjorn: Added Fixes tag]
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220127173554.158111-1-daniel.thompson@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 755dbc3d73789ac9f0017c729abf5e4b153bf799
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Dec 31 17:44:19 2021 +0800

    soc: qcom: rpmpd: Check for null return of devm_kcalloc
    
    [ Upstream commit 5a811126d38f9767a20cc271b34db7c8efc5a46c ]
    
    Because of the possible failure of the allocation, data->domains might
    be NULL pointer and will cause the dereference of the NULL pointer
    later.
    Therefore, it might be better to check it and directly return -ENOMEM
    without releasing data manually if fails, because the comment of the
    devm_kmalloc() says "Memory allocated with this function is
    automatically freed on driver detach.".
    
    Fixes: bbe3a66c3f5a ("soc: qcom: rpmpd: Add a Power domain driver to model corners")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211231094419.1941054-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12081a152046bb591b3704593ad29424d26a6048
Author: Pavel Kubelun <be.dissent@gmail.com>
Date:   Mon Dec 20 18:03:52 2021 +0100

    ARM: dts: qcom: ipq4019: fix sleep clock
    
    [ Upstream commit 3d7e7980993d2c1ae42d3d314040fc2de6a9c45f ]
    
    It seems like sleep_clk was copied from ipq806x.
    Fix ipq40xx sleep_clk to the value QSDK defines.
    
    Link: https://source.codeaurora.org/quic/qsdk/oss/kernel/linux-msm/commit/?id=d92ec59973484acc86dd24b67f10f8911b4b4b7d
    Link: https://patchwork.kernel.org/comment/22721613/
    Fixes: bec6ba4cdf2a ("qcom: ipq4019: Add basic board/dts support for IPQ4019 SoC")
    Suggested-by: Bjorn Andersson <bjorn.andersson@linaro.org> (clock-output-names)
    Signed-off-by: Pavel Kubelun <be.dissent@gmail.com>
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com> (removed clock rename)
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211220170352.34591-1-chunkeey@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 547d36fa4100764a2b03c59301c4fab7cedfda4c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:29:19 2021 +0300

    video: fbdev: fbcvt.c: fix printing in fb_cvt_print_name()
    
    [ Upstream commit 78482af095abd9f4f29f1aa3fe575d25c6ae3028 ]
    
    This code has two bugs:
    1) "cnt" is 255 but the size of the buffer is 256 so the last byte is
       not used.
    2) If we try to print more than 255 characters then "cnt" will be
       negative and that will trigger a WARN() in snprintf(). The fix for
       this is to use scnprintf() instead of snprintf().
    
    We can re-write this code to be cleaner:
    1) Rename "offset" to "off" because that's shorter.
    2) Get rid of the "cnt" variable and just use "size - off" directly.
    3) Get rid of the "read" variable and just increment "off" directly.
    
    Fixes: 96fe6a2109db ("fbdev: Add VESA Coordinated Video Timings (CVT) support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 125d10f0bef82f85f024127dfcc2269adac2450b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 3 12:58:08 2021 +0300

    video: fbdev: atmel_lcdfb: fix an error code in atmel_lcdfb_probe()
    
    [ Upstream commit fee5c1e4b789e41719af9fee0e2dd397cd31988f ]
    
    If "sinfo->config" is not found, then return -ENODEV.  Don't
    return success.
    
    Fixes: b985172b328a ("video: atmel_lcdfb: add device tree suport")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da8b269cc0a2526ebeaccbe2484c999eb0f822cf
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Oct 14 21:22:31 2021 +0800

    video: fbdev: smscufx: Fix null-ptr-deref in ufx_usb_probe()
    
    [ Upstream commit 1791f487f877a9e83d81c8677bd3e7b259e7cb27 ]
    
    I got a null-ptr-deref report:
    
    BUG: kernel NULL pointer dereference, address: 0000000000000000
    ...
    RIP: 0010:fb_destroy_modelist+0x38/0x100
    ...
    Call Trace:
     ufx_usb_probe.cold+0x2b5/0xac1 [smscufx]
     usb_probe_interface+0x1aa/0x3c0 [usbcore]
     really_probe+0x167/0x460
    ...
     ret_from_fork+0x1f/0x30
    
    If fb_alloc_cmap() fails in ufx_usb_probe(), fb_destroy_modelist() will
    be called to destroy modelist in the error handling path. But modelist
    has not been initialized yet, so it will result in null-ptr-deref.
    
    Initialize modelist before calling fb_alloc_cmap() to fix this bug.
    
    Fixes: 3c8a63e22a08 ("Add support for SMSC UFX6000/7000 USB display adapters")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d847e455d0bd7be1ca80ab498cbced16ba133ca
Author: Jammy Huang <jammy_huang@aspeedtech.com>
Date:   Tue Jan 25 07:44:07 2022 +0100

    media: aspeed: Correct value for h-total-pixels
    
    [ Upstream commit 4b732a0016853eaff35944f900b0db66f3914374 ]
    
    Previous reg-field, 0x98[11:0], stands for the period of the detected
    hsync signal.
    Use the correct reg, 0xa0, to get h-total in pixels.
    
    Fixes: d2b4387f3bdf ("media: platform: Add Aspeed Video Engine driver")
    Signed-off-by: Jammy Huang <jammy_huang@aspeedtech.com>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd342c7bef23042f1d98c487128c837f4ee0f191
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Fri Jan 7 10:34:49 2022 +0100

    media: hantro: Fix overfill bottom register field name
    
    [ Upstream commit 89d78e0133e71ba324fb67ca776223fba4353418 ]
    
    The Hantro H1 hardware can crop off pixels from the right and bottom of
    the source frame. These are controlled with the H1_REG_IN_IMG_CTRL_OVRFLB
    and H1_REG_IN_IMG_CTRL_OVRFLR in the H1_REG_IN_IMG_CTRL register.
    
    The ChromeOS kernel driver that this was based on incorrectly added the
    _D4 suffix H1_REG_IN_IMG_CTRL_OVRFLB. This field crops the bottom of the
    input frame, and the number is _not_ divided by 4. [1]
    
    Correct the name to avoid confusion when crop support with the selection
    API is added.
    
    [1] https://chromium.googlesource.com/chromiumos/third_party/kernel/+/refs/ \
            heads/chromeos-4.19/drivers/staging/media/hantro/hantro_h1_vp8_enc.c#377
    
    Fixes: 775fec69008d ("media: add Rockchip VPU JPEG encoder driver")
    Fixes: a29add8c9bb2 ("media: rockchip/vpu: rename from rockchip to hantro")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db1b3b99d6105c508c0a42dd2d1ce3d57a0ce2e8
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 12 12:05:54 2022 +0100

    media: coda: Fix missing put_device() call in coda_get_vdoa_data
    
    [ Upstream commit ca85d271531a1e1c86f24b892f57b7d0a3ddb5a6 ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore.
    Add the corresponding 'put_device()' in the error handling path.
    
    Fixes: e7f3c5481035 ("[media] coda: use VDOA for un-tiling custom macroblock format")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0f6b41490a7cd03a08f8bf9b7a7bceda11eb32c
Author: Ondrej Zary <linux@zary.sk>
Date:   Sat Dec 25 22:58:44 2021 +0100

    media: bttv: fix WARNING regression on tunerless devices
    
    [ Upstream commit ef058cc8b7193d15a771272359c7454839ae74ee ]
    
    Commit 2161536516ed ("media: media/pci: set device_caps in struct video_device")
    introduced a regression: V4L2_CAP_TUNER is always present in device_caps,
    even when the device has no tuner.
    
    This causes a warning:
    WARNING: CPU: 0 PID: 249 at drivers/media/v4l2-core/v4l2-ioctl.c:1102 v4l_querycap+0xa0/0xb0 [videodev]
    
    Fixes: 2161536516ed ("media: media/pci: set device_caps in struct video_device")
    Signed-off-by: Ondrej Zary <linux@zary.sk>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0478ccdc8ea016de1ebaf6fe6da0275c2b258c5b
Author: Chao Yu <chao@kernel.org>
Date:   Thu Jan 27 13:44:49 2022 +0800

    f2fs: fix to avoid potential deadlock
    
    [ Upstream commit df77fbd8c5b222c680444801ffd20e8bbc90a56e ]
    
    Using f2fs_trylock_op() in f2fs_write_compressed_pages() to avoid potential
    deadlock like we did in f2fs_write_single_data_page().
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 005f9cdab70c915702254c5eb67a8efced80e821
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Fri Feb 11 18:56:46 2022 -0800

    f2fs: fix missing free nid in f2fs_handle_failed_inode
    
    [ Upstream commit 2fef99b8372c1ae3d8445ab570e888b5a358dbe9 ]
    
    This patch fixes xfstests/generic/475 failure.
    
    [  293.680694] F2FS-fs (dm-1): May loss orphan inode, run fsck to fix.
    [  293.685358] Buffer I/O error on dev dm-1, logical block 8388592, async page read
    [  293.691527] Buffer I/O error on dev dm-1, logical block 8388592, async page read
    [  293.691764] sh (7615): drop_caches: 3
    [  293.691819] sh (7616): drop_caches: 3
    [  293.694017] Buffer I/O error on dev dm-1, logical block 1, async page read
    [  293.695659] sh (7618): drop_caches: 3
    [  293.696979] sh (7617): drop_caches: 3
    [  293.700290] sh (7623): drop_caches: 3
    [  293.708621] sh (7626): drop_caches: 3
    [  293.711386] sh (7628): drop_caches: 3
    [  293.711825] sh (7627): drop_caches: 3
    [  293.716738] sh (7630): drop_caches: 3
    [  293.719613] sh (7632): drop_caches: 3
    [  293.720971] sh (7633): drop_caches: 3
    [  293.727741] sh (7634): drop_caches: 3
    [  293.730783] sh (7636): drop_caches: 3
    [  293.732681] sh (7635): drop_caches: 3
    [  293.732988] sh (7637): drop_caches: 3
    [  293.738836] sh (7639): drop_caches: 3
    [  293.740568] sh (7641): drop_caches: 3
    [  293.743053] sh (7640): drop_caches: 3
    [  293.821889] ------------[ cut here ]------------
    [  293.824654] kernel BUG at fs/f2fs/node.c:3334!
    [  293.826226] invalid opcode: 0000 [#1] PREEMPT SMP PTI
    [  293.828713] CPU: 0 PID: 7653 Comm: umount Tainted: G           OE     5.17.0-rc1-custom #1
    [  293.830946] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
    [  293.832526] RIP: 0010:f2fs_destroy_node_manager+0x33f/0x350 [f2fs]
    [  293.833905] Code: e8 d6 3d f9 f9 48 8b 45 d0 65 48 2b 04 25 28 00 00 00 75 1a 48 81 c4 28 03 00 00 5b 41 5c 41 5d 41 5e 41 5f 5d c3 0f 0b
    [  293.837783] RSP: 0018:ffffb04ec31e7a20 EFLAGS: 00010202
    [  293.839062] RAX: 0000000000000001 RBX: ffff9df947db2eb8 RCX: 0000000080aa0072
    [  293.840666] RDX: 0000000000000000 RSI: ffffe86c0432a140 RDI: ffffffffc0b72a21
    [  293.842261] RBP: ffffb04ec31e7d70 R08: ffff9df94ca85780 R09: 0000000080aa0072
    [  293.843909] R10: ffff9df94ca85700 R11: ffff9df94e1ccf58 R12: ffff9df947db2e00
    [  293.845594] R13: ffff9df947db2ed0 R14: ffff9df947db2eb8 R15: ffff9df947db2eb8
    [  293.847855] FS:  00007f5a97379800(0000) GS:ffff9dfa77c00000(0000) knlGS:0000000000000000
    [  293.850647] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  293.852940] CR2: 00007f5a97528730 CR3: 000000010bc76005 CR4: 0000000000370ef0
    [  293.854680] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  293.856423] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  293.858380] Call Trace:
    [  293.859302]  <TASK>
    [  293.860311]  ? ttwu_do_wakeup+0x1c/0x170
    [  293.861800]  ? ttwu_do_activate+0x6d/0xb0
    [  293.863057]  ? _raw_spin_unlock_irqrestore+0x29/0x40
    [  293.864411]  ? try_to_wake_up+0x9d/0x5e0
    [  293.865618]  ? debug_smp_processor_id+0x17/0x20
    [  293.866934]  ? debug_smp_processor_id+0x17/0x20
    [  293.868223]  ? free_unref_page+0xbf/0x120
    [  293.869470]  ? __free_slab+0xcb/0x1c0
    [  293.870614]  ? preempt_count_add+0x7a/0xc0
    [  293.871811]  ? __slab_free+0xa0/0x2d0
    [  293.872918]  ? __wake_up_common_lock+0x8a/0xc0
    [  293.874186]  ? __slab_free+0xa0/0x2d0
    [  293.875305]  ? free_inode_nonrcu+0x20/0x20
    [  293.876466]  ? free_inode_nonrcu+0x20/0x20
    [  293.877650]  ? debug_smp_processor_id+0x17/0x20
    [  293.878949]  ? call_rcu+0x11a/0x240
    [  293.880060]  ? f2fs_destroy_stats+0x59/0x60 [f2fs]
    [  293.881437]  ? kfree+0x1fe/0x230
    [  293.882674]  f2fs_put_super+0x160/0x390 [f2fs]
    [  293.883978]  generic_shutdown_super+0x7a/0x120
    [  293.885274]  kill_block_super+0x27/0x50
    [  293.886496]  kill_f2fs_super+0x7f/0x100 [f2fs]
    [  293.887806]  deactivate_locked_super+0x35/0xa0
    [  293.889271]  deactivate_super+0x40/0x50
    [  293.890513]  cleanup_mnt+0x139/0x190
    [  293.891689]  __cleanup_mnt+0x12/0x20
    [  293.892850]  task_work_run+0x64/0xa0
    [  293.894035]  exit_to_user_mode_prepare+0x1b7/0x1c0
    [  293.895409]  syscall_exit_to_user_mode+0x27/0x50
    [  293.896872]  do_syscall_64+0x48/0xc0
    [  293.898090]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  293.899517] RIP: 0033:0x7f5a975cd25b
    
    Fixes: 7735730d39d7 ("f2fs: fix to propagate error from __get_meta_page()")
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2e534c6a06fc601f3aa63649510f12bbd9e346c
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jan 31 09:24:52 2022 +0200

    perf/x86/intel/pt: Fix address filter config for 32-bit kernel
    
    [ Upstream commit e5524bf1047eb3b3f3f33b5f59897ba67b3ade87 ]
    
    Change from shifting 'unsigned long' to 'u64' to prevent the config bits
    being lost on a 32-bit kernel.
    
    Fixes: eadf48cab4b6b0 ("perf/x86/intel/pt: Add support for address range filtering in PT")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220131072453.2839535-5-adrian.hunter@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 015d31165da3d820af0a0ce71022a7a715977e9c
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jan 31 09:24:51 2022 +0200

    perf/core: Fix address filter parser for multiple filters
    
    [ Upstream commit d680ff24e9e14444c63945b43a37ede7cd6958f9 ]
    
    Reset appropriate variables in the parser loop between parsing separate
    filters, so that they do not interfere with parsing the next filter.
    
    Fixes: 375637bc524952 ("perf/core: Introduce address range filtering")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220131072453.2839535-4-adrian.hunter@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 841f5b235d69336577373040a20072fb17dde7c9
Author: Bharata B Rao <bharata@amd.com>
Date:   Tue Jan 18 10:35:15 2022 +0530

    sched/debug: Remove mpol_get/put and task_lock/unlock from sched_show_numa
    
    [ Upstream commit 28c988c3ec29db74a1dda631b18785958d57df4f ]
    
    The older format of /proc/pid/sched printed home node info which
    required the mempolicy and task lock around mpol_get(). However
    the format has changed since then and there is no need for
    sched_show_numa() any more to have mempolicy argument,
    asssociated mpol_get/put and task_lock/unlock. Remove them.
    
    Fixes: 397f2378f1361 ("sched/numa: Fix numa balancing stats in /proc/pid/sched")
    Signed-off-by: Bharata B Rao <bharata@amd.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Link: https://lore.kernel.org/r/20220118050515.2973-1-bharata@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 715a34317255d66d9bcd03cf4ae898a0c3c76f66
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Mar 17 08:39:39 2022 -0700

    clocksource: acpi_pm: fix return value of __setup handler
    
    [ Upstream commit 6a861abceecb68497dd82a324fee45a5332dcece ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) environment strings.
    
    The __setup() handler interface isn't meant to handle negative return
    values -- they are non-zero, so they mean "handled" (like a return
    value of 1 does), but that's just a quirk. So return 1 from
    parse_pmtmr(). Also print a warning message if kstrtouint() returns
    an error.
    
    Fixes: 6b148507d3d0 ("pmtmr: allow command line override of ioport")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c0173521db1a0cd290e0e8326fade686ffc77da
Author: Brandon Wyman <bjwyman@gmail.com>
Date:   Thu Mar 17 23:21:23 2022 +0000

    hwmon: (pmbus) Add Vin unit off handling
    
    [ Upstream commit a5436af598779219b375c1977555c82def1c35d0 ]
    
    If there is an input undervoltage fault, reported in STATUS_INPUT
    command response, there is quite likely a "Unit Off For Insufficient
    Input Voltage" condition as well.
    
    Add a constant for bit 3 of STATUS_INPUT. Update the Vin limit
    attributes to include both bits in the mask for clearing faults.
    
    If an input undervoltage fault occurs, causing a unit off for
    insufficient input voltage, but the unit is off bit is not cleared, the
    STATUS_WORD will not be updated to clear the input fault condition.
    Including the unit is off bit (bit 3) allows for the input fault
    condition to completely clear.
    
    Signed-off-by: Brandon Wyman <bjwyman@gmail.com>
    Link: https://lore.kernel.org/r/20220317232123.2103592-1-bjwyman@gmail.com
    Fixes: b4ce237b7f7d3 ("hwmon: (pmbus) Introduce infrastructure to detect sensors and limit registers")
    [groeck: Dropped unnecessary ()]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acba286182032f30a61c82c24e423fa3a28948e2
Author: Dāvis Mosāns <davispuh@gmail.com>
Date:   Mon Feb 28 05:15:45 2022 +0200

    crypto: ccp - ccp_dmaengine_unregister release dma channels
    
    [ Upstream commit 54cce8ecb9254f971b40a72911c6da403720a2d2 ]
    
    ccp_dmaengine_register adds dma_chan->device_node to dma_dev->channels list
    but ccp_dmaengine_unregister didn't remove them.
    That can cause crashes in various dmaengine methods that tries to use dma_dev->channels
    
    Fixes: 58ea8abf4904 ("crypto: ccp - Register the CCP as a DMA...")
    Signed-off-by: Dāvis Mosāns <davispuh@gmail.com>
    Acked-by: John Allen <john.allen@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39a521faf426d496ebc029f9e8cb509aa2db318b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Mar 5 18:46:20 2022 -0800

    ACPI: APEI: fix return value of __setup handlers
    
    [ Upstream commit f3303ff649dbf7dcdc6a6e1a922235b12b3028f4 ]
    
    __setup() handlers should return 1 to indicate that the boot option
    has been handled. Returning 0 causes a boot option to be listed in
    the Unknown kernel command line parameters and also added to init's
    arg list (if no '=' sign) or environment list (if of the form 'a=b').
    
    Unknown kernel command line parameters "erst_disable
      bert_disable hest_disable BOOT_IMAGE=/boot/bzImage-517rc6", will be
      passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
         erst_disable
         bert_disable
         hest_disable
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc6
    
    Fixes: a3e2acc5e37b ("ACPI / APEI: Add Boot Error Record Table (BERT) support")
    Fixes: a08f82d08053 ("ACPI, APEI, Error Record Serialization Table (ERST) support")
    Fixes: 9dc966641677 ("ACPI, APEI, HEST table parsing")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Reviewed-by: "Huang, Ying" <ying.huang@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dc887ae33d2d9b70e5e73f0963c7e46bb010795
Author: Guillaume Ranquet <granquet@baylibre.com>
Date:   Mon Mar 7 18:26:56 2022 +0100

    clocksource/drivers/timer-of: Check return value of of_iomap in timer_of_base_init()
    
    [ Upstream commit 4467b8bad2401794fb89a0268c8c8257180bf60f ]
    
    of_base->base can either be iomapped using of_io_request_and_map() or
    of_iomap() depending whether or not an of_base->name has been set.
    
    Thus check of_base->base against NULL as of_iomap() does not return a
    PTR_ERR() in case of error.
    
    Fixes: 9aea417afa6b ("clocksource/drivers/timer-of: Don't request the resource by name")
    Signed-off-by: Guillaume Ranquet <granquet@baylibre.com>
    Link: https://lore.kernel.org/r/20220307172656.4836-1-granquet@baylibre.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b305975a66250d2bb53c45c8e215850c09295170
Author: Petr Vorel <pvorel@suse.cz>
Date:   Wed Feb 23 16:11:15 2022 +0100

    crypto: vmx - add missing dependencies
    
    [ Upstream commit 647d41d3952d726d4ae49e853a9eff68ebad3b3f ]
    
    vmx-crypto module depends on CRYPTO_AES, CRYPTO_CBC, CRYPTO_CTR or
    CRYPTO_XTS, thus add them.
    
    These dependencies are likely to be enabled, but if
    CRYPTO_DEV_VMX=y && !CRYPTO_MANAGER_DISABLE_TESTS
    and either of CRYPTO_AES, CRYPTO_CBC, CRYPTO_CTR or CRYPTO_XTS is built
    as module or disabled, alg_test() from crypto/testmgr.c complains during
    boot about failing to allocate the generic fallback implementations
    (2 == ENOENT):
    
    [    0.540953] Failed to allocate xts(aes) fallback: -2
    [    0.541014] alg: skcipher: failed to allocate transform for p8_aes_xts: -2
    [    0.541120] alg: self-tests for p8_aes_xts (xts(aes)) failed (rc=-2)
    [    0.544440] Failed to allocate ctr(aes) fallback: -2
    [    0.544497] alg: skcipher: failed to allocate transform for p8_aes_ctr: -2
    [    0.544603] alg: self-tests for p8_aes_ctr (ctr(aes)) failed (rc=-2)
    [    0.547992] Failed to allocate cbc(aes) fallback: -2
    [    0.548052] alg: skcipher: failed to allocate transform for p8_aes_cbc: -2
    [    0.548156] alg: self-tests for p8_aes_cbc (cbc(aes)) failed (rc=-2)
    [    0.550745] Failed to allocate transformation for 'aes': -2
    [    0.550801] alg: cipher: Failed to load transform for p8_aes: -2
    [    0.550892] alg: self-tests for p8_aes (aes) failed (rc=-2)
    
    Fixes: c07f5d3da643 ("crypto: vmx - Adding support for XTS")
    Fixes: d2e3ae6f3aba ("crypto: vmx - Enabling VMX module for PPC64")
    
    Suggested-by: Nicolai Stange <nstange@suse.de>
    Signed-off-by: Petr Vorel <pvorel@suse.cz>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7f3e230ca452f0c233793c924ba1136fd13a977
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Feb 21 09:59:23 2022 +0200

    hwrng: atmel - disable trng on failure path
    
    [ Upstream commit a223ea9f89ab960eb254ba78429efd42eaf845eb ]
    
    Call atmel_trng_disable() on failure path of probe.
    
    Fixes: a1fa98d8116f ("hwrng: atmel - disable TRNG during suspend")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63266a14888887dcfd9d5590d26e8e5f71489fd8
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:05:44 2022 -0800

    PM: suspend: fix return value of __setup handler
    
    [ Upstream commit 7a64ca17e4dd50d5f910769167f3553902777844 ]
    
    If an invalid option is given for "test_suspend=<option>", the entire
    string is added to init's environment, so return 1 instead of 0 from
    the __setup handler.
    
      Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc5
        test_suspend=invalid"
    
    and
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         test_suspend=invalid
    
    Fixes: 2ce986892faf ("PM / sleep: Enhance test_suspend option with repeat capability")
    Fixes: 27ddcc6596e5 ("PM / sleep: Add state field to pm_states[] entries")
    Fixes: a9d7052363a6 ("PM: Separate suspend to RAM functionality from core")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c4c026c3d9175ca9bb038f0ef7817bfca2ae25b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:05:32 2022 -0800

    PM: hibernate: fix __setup handler error handling
    
    [ Upstream commit ba7ffcd4c4da374b0f64666354eeeda7d3827131 ]
    
    If an invalid value is used in "resumedelay=<seconds>", it is
    silently ignored. Add a warning message and then let the __setup
    handler return 1 to indicate that the kernel command line option
    has been handled.
    
    Fixes: 317cf7e5e85e3 ("PM / hibernate: convert simple_strtoul to kstrtoul")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84fe3ca6e7910beb47ec13509d484f84fa2a41ad
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jan 24 13:59:37 2022 -0800

    block: don't delete queue kobject before its children
    
    [ Upstream commit 0f69288253e9fc7c495047720e523b9f1aba5712 ]
    
    kobjects aren't supposed to be deleted before their child kobjects are
    deleted.  Apparently this is usually benign; however, a WARN will be
    triggered if one of the child kobjects has a named attribute group:
    
        sysfs group 'modes' not found for kobject 'crypto'
        WARNING: CPU: 0 PID: 1 at fs/sysfs/group.c:278 sysfs_remove_group+0x72/0x80
        ...
        Call Trace:
          sysfs_remove_groups+0x29/0x40 fs/sysfs/group.c:312
          __kobject_del+0x20/0x80 lib/kobject.c:611
          kobject_cleanup+0xa4/0x140 lib/kobject.c:696
          kobject_release lib/kobject.c:736 [inline]
          kref_put include/linux/kref.h:65 [inline]
          kobject_put+0x53/0x70 lib/kobject.c:753
          blk_crypto_sysfs_unregister+0x10/0x20 block/blk-crypto-sysfs.c:159
          blk_unregister_queue+0xb0/0x110 block/blk-sysfs.c:962
          del_gendisk+0x117/0x250 block/genhd.c:610
    
    Fix this by moving the kobject_del() and the corresponding
    kobject_uevent() to the correct place.
    
    Fixes: 2c2086afc2b8 ("block: Protect less code with sysfs_lock in blk_{un,}register_queue()")
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20220124215938.2769-3-ebiggers@kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b68d1742f4207738e107764fb202145297896261
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Mon Jan 31 22:19:35 2022 +0100

    hwmon: (sch56xx-common) Replace WDOG_ACTIVE with WDOG_HW_RUNNING
    
    [ Upstream commit 647d6f09bea7dacf4cdb6d4ea7e3051883955297 ]
    
    If the watchdog was already enabled by the BIOS after booting, the
    watchdog infrastructure needs to regularly send keepalives to
    prevent a unexpected reset.
    WDOG_ACTIVE only serves as an status indicator for userspace,
    we want to use WDOG_HW_RUNNING instead.
    
    Since my Fujitsu Esprimo P720 does not support the watchdog,
    this change is compile-tested only.
    
    Suggested-by: Guenter Roeck <linux@roeck-us.net>
    Fixes: fb551405c0f8 (watchdog: sch56xx: Use watchdog core)
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Link: https://lore.kernel.org/r/20220131211935.3656-5-W_Armin@gmx.de
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf78aca8e41daafd21ed54e6f222ed788ec2b17c
Author: Patrick Rudolph <patrick.rudolph@9elements.com>
Date:   Fri Feb 25 17:06:09 2022 +0100

    hwmon: (pmbus) Add mutex to regulator ops
    
    [ Upstream commit 686d303ee6301261b422ea51e64833d7909a2c36 ]
    
    On PMBUS devices with multiple pages, the regulator ops need to be
    protected with the update mutex. This prevents accidentally changing
    the page in a separate thread while operating on the PMBUS_OPERATION
    register.
    
    Tested on Infineon xdpe11280 while a separate thread polls for sensor
    data.
    
    Signed-off-by: Patrick Rudolph <patrick.rudolph@9elements.com>
    Signed-off-by: Marcello Sylvester Bauer <sylv@sylv.io>
    Link: https://lore.kernel.org/r/b991506bcbf665f7af185945f70bf9d5cf04637c.1645804976.git.sylv@sylv.io
    Fixes: ddbb4db4ced1b ("hwmon: (pmbus) Add regulator support")
    Cc: Alan Tull <atull@opensource.altera.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00d67f54b8306dc0ee9de4ceed47368680e856db
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Feb 23 21:16:37 2022 +0200

    spi: pxa2xx-pci: Balance reference count for PCI DMA device
    
    [ Upstream commit 609d7ffdc42199a0ec949db057e3b4be6745d6c5 ]
    
    The pci_get_slot() increases its reference count, the caller
    must decrement the reference count by calling pci_dev_put().
    
    Fixes: 743485ea3bee ("spi: pxa2xx-pci: Do a specific setup in a separate function")
    Fixes: 25014521603f ("spi: pxa2xx-pci: Enable DMA for Intel Merrifield")
    Reported-by: Wang Qing <wangqing@vivo.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20220223191637.31147-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40e6d5d1de0614d6c687ace4e72d8d50cd78c3e8
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Feb 17 21:27:26 2022 +0200

    crypto: ccree - don't attempt 0 len DMA mappings
    
    [ Upstream commit 1fb37b5692c915edcc2448a6b37255738c7c77e0 ]
    
    Refuse to try mapping zero bytes as this may cause a fault
    on some configurations / platforms and it seems the prev.
    attempt is not enough and we need to be more explicit.
    
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Reported-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Fixes: ce0fc6db38de ("crypto: ccree - protect against empty or NULL
    scatterlists")
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3a5acf91cb96ab5cde317fe37dd5e95a12734ed
Author: Richard Guy Briggs <rgb@redhat.com>
Date:   Tue Feb 22 11:44:51 2022 -0500

    audit: log AUDIT_TIME_* records only from rules
    
    [ Upstream commit 272ceeaea355214b301530e262a0df8600bfca95 ]
    
    AUDIT_TIME_* events are generated when there are syscall rules present
    that are not related to time keeping.  This will produce noisy log
    entries that could flood the logs and hide events we really care about.
    
    Rather than immediately produce the AUDIT_TIME_* records, store the data
    in the context and log it at syscall exit time respecting the filter
    rules.
    
    Note: This eats the audit_buffer, unlike any others in show_special().
    
    Please see https://bugzilla.redhat.com/show_bug.cgi?id=1991919
    
    Fixes: 7e8eda734d30 ("ntp: Audit NTP parameters adjustment")
    Fixes: 2d87a0674bd6 ("timekeeping: Audit clock adjustments")
    Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
    [PM: fixed style/whitespace issues]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 152ebc0ee9b4e48b1c21f7fe783dc91b93164557
Author: Muhammad Usama Anjum <usama.anjum@collabora.com>
Date:   Mon Feb 14 23:41:08 2022 +0500

    selftests/x86: Add validity check and allow field splitting
    
    [ Upstream commit b06e15ebd5bfb670f93c7f11a29b8299c1178bc6 ]
    
    Add check to test if CC has a string. CC can have multiple sub-strings
    like "ccache gcc". Erorr pops up if it is treated as single string and
    double quotes are used around it. This can be fixed by removing the
    quotes and not treating CC as a single string.
    
    Fixes: e9886ace222e ("selftests, x86: Rework x86 target architecture detection")
    Reported-by: "kernelci.org bot" <bot@kernelci.org>
    Signed-off-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20220214184109.3739179-2-usama.anjum@collabora.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8a3de8d7c2f5df50290561016f4839dbb8cd1a5
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jan 28 16:52:38 2022 +0000

    spi: tegra114: Add missing IRQ check in tegra_spi_probe
    
    [ Upstream commit 4f92724d4b92c024e721063f520d66e11ca4b54b ]
    
    This func misses checking for platform_get_irq()'s call and may passes the
    negative error codes to request_threaded_irq(), which takes unsigned IRQ #,
    causing it to fail with -EINVAL, overriding an original error code.
    Stop calling request_threaded_irq() with invalid IRQ #s.
    
    Fixes: f333a331adfa ("spi/tegra114: add spi driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220128165238.25615-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5e748a6ff11f8c0fe3d10c4d5ff7e0997f312bd
Author: Tomas Paukrt <tomaspaukrt@email.cz>
Date:   Sat Jan 22 18:07:53 2022 +0100

    crypto: mxs-dcp - Fix scatterlist processing
    
    [ Upstream commit 28e9b6d8199a3f124682b143800c2dacdc3d70dd ]
    
    This patch fixes a bug in scatterlist processing that may cause incorrect AES block encryption/decryption.
    
    Fixes: 2e6d793e1bf0 ("crypto: mxs-dcp - Use sg_mapping_iter to copy data")
    Signed-off-by: Tomas Paukrt <tomaspaukrt@email.cz>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30d3f45bcfa7670ce29751527cc5d6930a8f13aa
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed Jan 19 17:58:40 2022 +1100

    crypto: authenc - Fix sleep in atomic context in decrypt_tail
    
    [ Upstream commit 66eae850333d639fc278d6f915c6fc01499ea893 ]
    
    The function crypto_authenc_decrypt_tail discards its flags
    argument and always relies on the flags from the original request
    when starting its sub-request.
    
    This is clearly wrong as it may cause the SLEEPABLE flag to be
    set when it shouldn't.
    
    Fixes: 92d95ba91772 ("crypto: authenc - Convert to new AEAD interface")
    Reported-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b19022137e8fa10ba419ec96b9405cb82fae800
Author: kernel test robot <lkp@intel.com>
Date:   Sat Jan 15 12:11:38 2022 +0100

    regulator: qcom_smd: fix for_each_child.cocci warnings
    
    [ Upstream commit 6390d42c21efff0b4c10956a38e341f4e84ecd3d ]
    
    drivers/regulator/qcom_smd-regulator.c:1318:1-33: WARNING: Function "for_each_available_child_of_node" should have of_node_put() before return around line 1321.
    
    Semantic patch information:
     False positives can be due to function calls within the for_each
     loop that may encapsulate an of_node_put.
    
    Generated by: scripts/coccinelle/iterators/for_each_child.cocci
    
    Fixes: 14e2976fbabd ("regulator: qcom_smd: Align probe function with rpmh-regulator")
    CC: Konrad Dybcio <konrad.dybcio@somainline.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Julia Lawall <julia.lawall@inria.fr>
    Link: https://lore.kernel.org/r/alpine.DEB.2.22.394.2201151210170.3051@hadrien
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit accf175d0c54e20f1cf8e8c294503f07dfbdff34
Author: Liguang Zhang <zhangliguang@linux.alibaba.com>
Date:   Thu Nov 11 13:42:58 2021 +0800

    PCI: pciehp: Clear cmd_busy bit in polling mode
    
    commit 92912b175178c7e895f5e5e9f1e30ac30319162b upstream.
    
    Writes to a Downstream Port's Slot Control register are PCIe hotplug
    "commands."  If the Port supports Command Completed events, software must
    wait for a command to complete before writing to Slot Control again.
    
    pcie_do_write_cmd() sets ctrl->cmd_busy when it writes to Slot Control.  If
    software notification is enabled, i.e., PCI_EXP_SLTCTL_HPIE and
    PCI_EXP_SLTCTL_CCIE are set, ctrl->cmd_busy is cleared by pciehp_isr().
    
    But when software notification is disabled, as it is when pcie_init()
    powers off an empty slot, pcie_wait_cmd() uses pcie_poll_cmd() to poll for
    command completion, and it neglects to clear ctrl->cmd_busy, which leads to
    spurious timeouts:
    
      pcieport 0000:00:03.0: pciehp: Timeout on hotplug command 0x01c0 (issued 2264 msec ago)
      pcieport 0000:00:03.0: pciehp: Timeout on hotplug command 0x05c0 (issued 2288 msec ago)
    
    Clear ctrl->cmd_busy in pcie_poll_cmd() when it detects a Command Completed
    event (PCI_EXP_SLTSTA_CC).
    
    [bhelgaas: commit log]
    Fixes: a5dd4b4b0570 ("PCI: pciehp: Wait for hotplug command completion where necessary")
    Link: https://lore.kernel.org/r/20211111054258.7309-1-zhangliguang@linux.alibaba.com
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215143
    Link: https://lore.kernel.org/r/20211126173309.GA12255@wunner.de
    Signed-off-by: Liguang Zhang <zhangliguang@linux.alibaba.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org      # v4.19+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a92f7205548637b03b23f0f95371cb3d2421a2bc
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:10 2022 +0900

    brcmfmac: pcie: Fix crashes due to early IRQs
    
    commit b50255c83b914defd61a57fbc81d452334b63f4c upstream.
    
    The driver was enabling IRQs before the message processing was
    initialized. This could cause IRQs to come in too early and crash the
    driver. Instead, move the IRQ enable and hostready to a bus preinit
    function, at which point everything is properly initialized.
    
    Fixes: 9e37f045d5e7 ("brcmfmac: Adding PCIe bus layer support.")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-7-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51fffd722ef05fcd58ab3303ff78b649b993aeac
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:09 2022 +0900

    brcmfmac: pcie: Replace brcmf_pcie_copy_mem_todev with memcpy_toio
    
    commit 9466987f246758eb7e9071ae58005253f631271e upstream.
    
    The alignment check was wrong (e.g. & 4 instead of & 3), and the logic
    was also inefficient if the length was not a multiple of 4, since it
    would needlessly fall back to copying the entire buffer bytewise.
    
    We already have a perfectly good memcpy_toio function, so just call that
    instead of rolling our own copy logic here. brcmf_pcie_init_ringbuffers
    was already using it anyway.
    
    Fixes: 9e37f045d5e7 ("brcmfmac: Adding PCIe bus layer support.")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-6-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0ab87f8dcdfe72dc1d763be3392c1fc51a1ace2
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:05 2022 +0900

    brcmfmac: pcie: Release firmwares in the brcmf_pcie_setup error path
    
    commit 5e90f0f3ead014867dade7a22f93958119f5efab upstream.
    
    This avoids leaking memory if brcmf_chip_get_raminfo fails. Note that
    the CLM blob is released in the device remove path.
    
    Fixes: 82f93cf46d60 ("brcmfmac: get chip's default RAM info during PCIe setup")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-2-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c894b12b2063ff379634f881f27726eb84eb203
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:06 2022 +0900

    brcmfmac: firmware: Allocate space for default boardrev in nvram
    
    commit d19d8e3ba256f81ea4a27209dbbd1f0a00ef1903 upstream.
    
    If boardrev is missing from the NVRAM we add a default one, but this
    might need more space in the output buffer than was allocated. Ensure
    we have enough padding for this in the buffer.
    
    Fixes: 46f2b38a91b0 ("brcmfmac: insert default boardrev in nvram data if missing")
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-3-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34a57be0f9f0c21c8bba72236dd9d69e0063522c
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Sun Mar 20 09:40:14 2022 -0700

    xtensa: fix xtensa_wsr always writing 0
    
    commit a3d0245c58f962ee99d4440ea0eaf45fb7f5a5cc upstream.
    
    The commit cad6fade6e78 ("xtensa: clean up WSR*/RSR*/get_sr/set_sr")
    replaced 'WSR' macro in the function xtensa_wsr with 'xtensa_set_sr',
    but variable 'v' in the xtensa_set_sr body shadowed the argument 'v'
    passed to it, resulting in wrong value written to debug registers.
    
    Fix that by removing intermediate variable from the xtensa_set_sr
    macro body.
    
    Cc: stable@vger.kernel.org
    Fixes: cad6fade6e78 ("xtensa: clean up WSR*/RSR*/get_sr/set_sr")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54c9fb17bef1bf69551671d36e54cba5ac9bb3d1
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Mar 16 02:04:17 2022 -0700

    xtensa: fix stop_machine_cpuslocked call in patch_text
    
    commit f406f2d03e07afc199dd8cf501f361dde6be8a69 upstream.
    
    patch_text must invoke patch_text_stop_machine on all online CPUs, but
    it calls stop_machine_cpuslocked with NULL cpumask. As a result only one
    CPU runs patch_text_stop_machine potentially leaving stale icache
    entries on other CPUs. Fix that by calling stop_machine_cpuslocked with
    cpu_online_mask as the last argument.
    
    Cc: stable@vger.kernel.org
    Fixes: 64711f9a47d4 ("xtensa: implement jump_label support")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4df9d88a9c547b11d957fc90e7709a6680689c68
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Dec 22 15:20:22 2021 +0100

    media: davinci: vpif: fix unbalanced runtime PM get
    
    commit 4a321de239213300a714fa0353a5f1272d381a44 upstream.
    
    Make sure to balance the runtime PM usage counter on driver unbind.
    
    Fixes: 407ccc65bfd2 ("[media] davinci: vpif: add pm_runtime support")
    Cc: stable@vger.kernel.org      # 3.9
    Cc: Lad, Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Lad Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28859c3a77821e55452fba2628514d2baad6bb12
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Fri Mar 4 20:16:23 2022 +0000

    DEC: Limit PMAX memory probing to R3k systems
    
    commit 244eae91a94c6dab82b3232967d10eeb9dfa21c6 upstream.
    
    Recent tightening of the opcode table in binutils so as to consistently
    disallow the assembly or disassembly of CP0 instructions not supported
    by the processor architecture chosen has caused a regression like below:
    
    arch/mips/dec/prom/locore.S: Assembler messages:
    arch/mips/dec/prom/locore.S:29: Error: opcode not supported on this processor: r4600 (mips3) `rfe'
    
    in a piece of code used to probe for memory with PMAX DECstation models,
    which have non-REX firmware.  Those computers always have an R2000 CPU
    and consequently the exception handler used in memory probing uses the
    RFE instruction, which those processors use.
    
    While adding 64-bit support this code was correctly excluded for 64-bit
    configurations, however it should have also been excluded for irrelevant
    32-bit configurations.  Do this now then, and only enable PMAX memory
    probing for R3k systems.
    
    Reported-by: Jan-Benedict Glaw <jbglaw@lug-owl.de>
    Reported-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org # v2.6.12+
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baa4aa800d32fea18d93374bd9dc185b203fe655
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 18 16:13:05 2022 -0800

    crypto: rsa-pkcs1pad - fix buffer overread in pkcs1pad_verify_complete()
    
    commit a24611ea356c7f3f0ec926da11b9482ac1f414fd upstream.
    
    Before checking whether the expected digest_info is present, we need to
    check that there are enough bytes remaining.
    
    Fixes: a49de377e051 ("crypto: Add hash param to pkcs1pad")
    Cc: <stable@vger.kernel.org> # v4.6+
    Cc: Tadeusz Struk <tadeusz.struk@linaro.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 058b2e59dbf505a3392a8892c171dbf5e89f7a3f
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 18 16:13:04 2022 -0800

    crypto: rsa-pkcs1pad - restore signature length check
    
    commit d3481accd974541e6a5d6a1fb588924a3519c36e upstream.
    
    RSA PKCS#1 v1.5 signatures are required to be the same length as the RSA
    key size.  RFC8017 specifically requires the verifier to check this
    (https://datatracker.ietf.org/doc/html/rfc8017#section-8.2.2).
    
    Commit a49de377e051 ("crypto: Add hash param to pkcs1pad") changed the
    kernel to allow longer signatures, but didn't explain this part of the
    change; it seems to be unrelated to the rest of the commit.
    
    Revert this change, since it doesn't appear to be correct.
    
    We can be pretty sure that no one is relying on overly-long signatures
    (which would have to be front-padded with zeroes) being supported, given
    that they would have been broken since commit c7381b012872
    ("crypto: akcipher - new verify API for public key algorithms").
    
    Fixes: a49de377e051 ("crypto: Add hash param to pkcs1pad")
    Cc: <stable@vger.kernel.org> # v4.6+
    Cc: Tadeusz Struk <tadeusz.struk@linaro.org>
    Suggested-by: Vitaly Chikunov <vt@altlinux.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7973dc9118ba14ce16a7085290b321a703aca98c
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 18 16:13:03 2022 -0800

    crypto: rsa-pkcs1pad - correctly get hash from source scatterlist
    
    commit e316f7179be22912281ce6331d96d7c121fb2b17 upstream.
    
    Commit c7381b012872 ("crypto: akcipher - new verify API for public key
    algorithms") changed akcipher_alg::verify to take in both the signature
    and the actual hash and do the signature verification, rather than just
    return the hash expected by the signature as was the case before.  To do
    this, it implemented a hack where the signature and hash are
    concatenated with each other in one scatterlist.
    
    Obviously, for this to work correctly, akcipher_alg::verify needs to
    correctly extract the two items from the scatterlist it is given.
    Unfortunately, it doesn't correctly extract the hash in the case where
    the signature is longer than the RSA key size, as it assumes that the
    signature's length is equal to the RSA key size.  This causes a prefix
    of the hash, or even the entire hash, to be taken from the *signature*.
    
    (Note, the case of a signature longer than the RSA key size should not
    be allowed in the first place; a separate patch will fix that.)
    
    It is unclear whether the resulting scheme has any useful security
    properties.
    
    Fix this by correctly extracting the hash from the scatterlist.
    
    Fixes: c7381b012872 ("crypto: akcipher - new verify API for public key algorithms")
    Cc: <stable@vger.kernel.org> # v5.2+
    Reviewed-by: Vitaly Chikunov <vt@altlinux.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 002288800e1035868fb20c7ca7c1e01fd8bb25f5
Author: Dirk Müller <dmueller@suse.de>
Date:   Tue Feb 8 17:50:50 2022 +0100

    lib/raid6/test: fix multiple definition linking error
    
    commit a5359ddd052860bacf957e65fe819c63e974b3a6 upstream.
    
    GCC 10+ defaults to -fno-common, which enforces proper declaration of
    external references using "extern". without this change a link would
    fail with:
    
      lib/raid6/test/algos.c:28: multiple definition of `raid6_call';
      lib/raid6/test/test.c:22: first defined here
    
    the pq.h header that is included already includes an extern declaration
    so we can just remove the redundant one here.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Dirk Müller <dmueller@suse.de>
    Reviewed-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e73efa5ad5d25e21e69098dd2749998bfb3622a4
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Mon Mar 14 15:08:55 2022 -0700

    thermal: int340x: Increase bitmap size
    
    commit 668f69a5f863b877bc3ae129efe9a80b6f055141 upstream.
    
    The number of policies are 10, so can't be supported by the bitmap size
    of u8.
    
    Even though there are no platfoms with these many policies, but
    for correctness increase to u32.
    
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Fixes: 16fc8eca1975 ("thermal/int340x_thermal: Add additional UUIDs")
    Cc: 5.1+ <stable@vger.kernel.org> # 5.1+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d553ed5c5d4cd9818493e53df70628ac541aa06
Author: Colin Ian King <colin.king@intel.com>
Date:   Tue Jan 25 00:44:06 2022 +0000

    carl9170: fix missing bit-wise or operator for tx_params
    
    commit 02a95374b5eebdbd3b6413fd7ddec151d2ea75a1 upstream.
    
    Currently tx_params is being re-assigned with a new value and the
    previous setting IEEE80211_HT_MCS_TX_RX_DIFF is being overwritten.
    The assignment operator is incorrect, the original intent was to
    bit-wise or the value in. Fix this by replacing the = operator
    with |= instead.
    
    Kudos to Christian Lamparter for suggesting the correct fix.
    
    Fixes: fe8ee9ad80b2 ("carl9170: mac80211 glue and command interface")
    Signed-off-by: Colin Ian King <colin.i.king@gmail.com>
    Cc: <Stable@vger.kernel.org>
    Acked-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220125004406.344422-1-colin.i.king@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55f078dc66200445bb200f1c6ae55ed806053c7f
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Feb 8 18:18:15 2022 +0100

    ARM: dts: exynos: add missing HDMI supplies on SMDK5420
    
    commit 453a24ded415f7fce0499c6b0a2c7b28f84911f2 upstream.
    
    Add required VDD supplies to HDMI block on SMDK5420.  Without them, the
    HDMI driver won't probe.  Because of lack of schematics, use same
    supplies as on Arndale Octa and Odroid XU3 boards (voltage matches).
    
    Cc: <stable@vger.kernel.org> # v3.15+
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Link: https://lore.kernel.org/r/20220208171823.226211-3-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e0d9bd6be8d65b4d57a69454c15787f9ed43efd
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Feb 8 18:18:14 2022 +0100

    ARM: dts: exynos: add missing HDMI supplies on SMDK5250
    
    commit 60a9914cb2061ba612a3f14f6ad329912b486360 upstream.
    
    Add required VDD supplies to HDMI block on SMDK5250.  Without them, the
    HDMI driver won't probe.  Because of lack of schematics, use same
    supplies as on Arndale 5250 board (voltage matches).
    
    Cc: <stable@vger.kernel.org> # v3.15+
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Link: https://lore.kernel.org/r/20220208171823.226211-2-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a77dd759bd71092dcd8ef9a13862dfd3a7936fef
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 30 20:53:23 2021 +0100

    ARM: dts: exynos: fix UART3 pins configuration in Exynos5250
    
    commit 372d7027fed43c8570018e124cf78b89523a1f8e upstream.
    
    The gpa1-4 pin was put twice in UART3 pin configuration of Exynos5250,
    instead of proper pin gpa1-5.
    
    Fixes: f8bfe2b050f3 ("ARM: dts: add pin state information in client nodes for Exynos5 platforms")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Link: https://lore.kernel.org/r/20211230195325.328220-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fafe8b57c0d29b5a11224085aa879770d187aab
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Tue Jan 11 15:23:01 2022 +0200

    ARM: dts: at91: sama5d2: Fix PMERRLOC resource size
    
    commit 0fb578a529ac7aca326a9fa475b4a6f58a756fda upstream.
    
    PMERRLOC resource size was set to 0x100, which resulted in HSMC_ERRLOCx
    register being truncated to offset x = 21, causing error correction to
    fail if more than 22 bit errors and if 24 or 32 bit error correction
    was supported.
    
    Fixes: d9c41bf30cf8 ("ARM: dts: at91: Declare EBI/NAND controllers")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Cc: <stable@vger.kernel.org> # 4.13.x
    Acked-by: Alexander Dahl <ada@thorsis.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Link: https://lore.kernel.org/r/20220111132301.906712-1-tudor.ambarus@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51186190c4e846bf8a53f4ffed9c2889725e6f64
Author: Michael Schmitz <schmitzmic@gmail.com>
Date:   Wed Feb 16 20:26:25 2022 +1300

    video: fbdev: atari: Atari 2 bpp (STe) palette bugfix
    
    commit c8be5edbd36ceed2ff3d6b8f8e40643c3f396ea3 upstream.
    
    The code to set the shifter STe palette registers has a long
    standing operator precedence bug, manifesting as colors set
    on a 2 bits per pixel frame buffer coming up with a distinctive
    blue tint.
    
    Add parentheses around the calculation of the per-color palette
    data before shifting those into their respective bit field position.
    
    This bug goes back a long way (2.4 days at the very least) so there
    won't be a Fixes: tag.
    
    Tested on ARAnyM as well on Falcon030 hardware.
    
    Cc: stable@vger.kernel.org
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Link: https://lore.kernel.org/all/CAMuHMdU3ievhXxKR_xi_v3aumnYW7UNUO6qMdhgfyWTyVSsCkQ@mail.gmail.com
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Tested-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 478154be3a8c21ff106310bb1037b1fc9d81dc62
Author: Helge Deller <deller@gmx.de>
Date:   Sun Feb 27 08:43:56 2022 +0100

    video: fbdev: sm712fb: Fix crash in smtcfb_read()
    
    commit bd771cf5c4254511cc4abb88f3dab3bd58bdf8e8 upstream.
    
    Zheyu Ma reported this crash in the sm712fb driver when reading
    three bytes from the framebuffer:
    
     BUG: unable to handle page fault for address: ffffc90001ffffff
     RIP: 0010:smtcfb_read+0x230/0x3e0
     Call Trace:
      vfs_read+0x198/0xa00
      ? do_sys_openat2+0x27d/0x350
      ? __fget_light+0x54/0x340
      ksys_read+0xce/0x190
      do_syscall_64+0x43/0x90
    
    Fix it by removing the open-coded endianess fixup-code and
    by moving the pointer post decrement out the fb_readl() function.
    
    Reported-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Tested-by: Zheyu Ma <zheyuma97@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67643b89fbe5d1c6a3f67611ade6effd88b0f641
Author: Cooper Chiou <cooper.chiou@intel.com>
Date:   Thu Mar 24 14:12:18 2022 +0800

    drm/edid: check basic audio support on CEA extension block
    
    commit 5662abf6e21338be6d085d6375d3732ac6147fd2 upstream.
    
    Tag code stored in bit7:5 for CTA block byte[3] is not the same as
    CEA extension block definition. Only check CEA block has
    basic audio support.
    
    v3: update commit message.
    
    Cc: stable@vger.kernel.org
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Shawn C Lee <shawn.c.lee@intel.com>
    Cc: intel-gfx <intel-gfx@lists.freedesktop.org>
    Signed-off-by: Cooper Chiou <cooper.chiou@intel.com>
    Signed-off-by: Lee Shawn C <shawn.c.lee@intel.com>
    Fixes: e28ad544f462 ("drm/edid: parse CEA blocks embedded in DisplayID")
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220324061218.32739-1-shawn.c.lee@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f91687e6e5d0171768f3234405f7b568958c47c
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 14 14:30:11 2022 -1000

    block: don't merge across cgroup boundaries if blkcg is enabled
    
    commit 6b2b04590b51aa4cf395fcd185ce439cab5961dc upstream.
    
    blk-iocost and iolatency are cgroup aware rq-qos policies but they didn't
    disable merges across different cgroups. This obviously can lead to
    accounting and control errors but more importantly to priority inversions -
    e.g. an IO which belongs to a higher priority cgroup or IO class may end up
    getting throttled incorrectly because it gets merged to an IO issued from a
    low priority cgroup.
    
    Fix it by adding blk_cgroup_mergeable() which is called from merge paths and
    rejects cross-cgroup and cross-issue_as_root merges.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: d70675121546 ("block: introduce blk-iolatency io controller")
    Cc: stable@vger.kernel.org # v4.19+
    Cc: Josef Bacik <jbacik@fb.com>
    Link: https://lore.kernel.org/r/Yi/eE/6zFNyWJ+qd@slm.duckdns.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d3a7b206458801eb842f97c5d4ba59fd911c71d
Author: Pekka Pessi <ppessi@nvidia.com>
Date:   Wed Mar 2 16:04:24 2022 +0100

    mailbox: tegra-hsp: Flush whole channel
    
    commit 60de2d2dc284e0dd1c2c897d08625bde24ef3454 upstream.
    
    The txdone can re-fill the mailbox. Keep polling the mailbox during the
    flush until all the messages have been delivered.
    
    This fixes an issue with the Tegra Combined UART (TCU) where output can
    get truncated under high traffic load.
    
    Signed-off-by: Pekka Pessi <ppessi@nvidia.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Fixes: 91b1b1c3da8a ("mailbox: tegra-hsp: Add support for shared mailboxes")
    Cc: stable@vger.kernel.org
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28c8fd84bea13cbf238d7b19d392de2fcc31331c
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Thu Feb 17 09:43:03 2022 +0800

    drivers: hamradio: 6pack: fix UAF bug caused by mod_timer()
    
    commit efe4186e6a1b54bf38b9e05450d43b0da1fd7739 upstream.
    
    When a 6pack device is detaching, the sixpack_close() will act to cleanup
    necessary resources. Although del_timer_sync() in sixpack_close()
    won't return if there is an active timer, one could use mod_timer() in
    sp_xmit_on_air() to wake up timer again by calling userspace syscall such
    as ax25_sendmsg(), ax25_connect() and ax25_ioctl().
    
    This unexpected waked handler, sp_xmit_on_air(), realizes nothing about
    the undergoing cleanup and may still call pty_write() to use driver layer
    resources that have already been released.
    
    One of the possible race conditions is shown below:
    
          (USE)                      |      (FREE)
    ax25_sendmsg()                   |
     ax25_queue_xmit()               |
      ...                            |
      sp_xmit()                      |
       sp_encaps()                   | sixpack_close()
        sp_xmit_on_air()             |  del_timer_sync(&sp->tx_t)
         mod_timer(&sp->tx_t,...)    |  ...
                                     |  unregister_netdev()
                                     |  ...
         (wait a while)              | tty_release()
                                     |  tty_release_struct()
                                     |   release_tty()
        sp_xmit_on_air()             |    tty_kref_put(tty_struct) //FREE
         pty_write(tty_struct) //USE |    ...
    
    The corresponding fail log is shown below:
    ===============================================================
    BUG: KASAN: use-after-free in __run_timers.part.0+0x170/0x470
    Write of size 8 at addr ffff88800a652ab8 by task swapper/2/0
    ...
    Call Trace:
      ...
      queue_work_on+0x3f/0x50
      pty_write+0xcd/0xe0pty_write+0xcd/0xe0
      sp_xmit_on_air+0xb2/0x1f0
      call_timer_fn+0x28/0x150
      __run_timers.part.0+0x3c2/0x470
      run_timer_softirq+0x3b/0x80
      __do_softirq+0xf1/0x380
      ...
    
    This patch reorders the del_timer_sync() after the unregister_netdev()
    to avoid UAF bugs. Because the unregister_netdev() is well synchronized,
    it flushs out any pending queues, waits the refcount of net_device
    decreases to zero and removes net_device from kernel. There is not any
    running routines after executing unregister_netdev(). Therefore, we could
    not arouse timer from userspace again.
    
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Reviewed-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5217ae080efdb8c5bef89b907908a6e6132c7c06
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Fri Jan 14 13:24:49 2022 +0200

    ACPI: properties: Consistently return -ENOENT if there are no more references
    
    commit babc92da5928f81af951663fc436997352e02d3a upstream.
    
    __acpi_node_get_property_reference() is documented to return -ENOENT if
    the caller requests a property reference at an index that does not exist,
    not -EINVAL which it actually does.
    
    Fix this by returning -ENOENT consistenly, independently of whether the
    property value is a plain reference or a package.
    
    Fixes: c343bc2ce2c6 ("ACPI: properties: Align return codes of __acpi_node_get_property_reference()")
    Cc: 4.14+ <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3ec0c9db5d3ca938c1b1a2a1c0d38b647d7b85f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Feb 3 16:54:22 2021 +0800

    udp: call udp_encap_enable for v6 sockets when enabling encap
    
    commit a4a600dd301ccde6ea239804ec1f19364a39d643 upstream.
    
    When enabling encap for a ipv6 socket without udp_encap_needed_key
    increased, UDP GRO won't work for v4 mapped v6 address packets as
    sk will be NULL in udp4_gro_receive().
    
    This patch is to enable it by increasing udp_encap_needed_key for
    v6 sockets in udp_tunnel_encap_enable(), and correspondingly
    decrease udp_encap_needed_key in udpv6_destroy_sock().
    
    v1->v2:
      - add udp_encap_disable() and export it.
    v2->v3:
      - add the change for rxrpc and bareudp into one patch, as Alex
        suggested.
    v3->v4:
      - move rxrpc part to another patch.
    
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Tested-by: Antonio Quartulli <antonio@openvpn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11dc8286f9f61cd046402ce352a188200ce7dd66
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Aug 2 13:46:19 2021 +0200

    powerpc/kvm: Fix kvm_use_magic_page
    
    commit 0c8eb2884a42d992c7726539328b7d3568f22143 upstream.
    
    When switching from __get_user to fault_in_pages_readable, commit
    9f9eae5ce717 broke kvm_use_magic_page: like __get_user,
    fault_in_pages_readable returns 0 on success.
    
    Fixes: 9f9eae5ce717 ("powerpc/kvm: Prefer fault_in_pages_readable function")
    Cc: stable@vger.kernel.org # v4.18+
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ded62776302663332a1e7a561649cfb39632cb72
Author: Lars Ellenberg <lars.ellenberg@linbit.com>
Date:   Wed Mar 30 20:55:51 2022 +0200

    drbd: fix potential silent data corruption
    
    commit f4329d1f848ac35757d9cc5487669d19dfc5979c upstream.
    
    Scenario:
    ---------
    
    bio chain generated by blk_queue_split().
    Some split bio fails and propagates its error status to the "parent" bio.
    But then the (last part of the) parent bio itself completes without error.
    
    We would clobber the already recorded error status with BLK_STS_OK,
    causing silent data corruption.
    
    Reproducer:
    -----------
    
    How to trigger this in the real world within seconds:
    
    DRBD on top of degraded parity raid,
    small stripe_cache_size, large read_ahead setting.
    Drop page cache (sysctl vm.drop_caches=1, fadvise "DONTNEED",
    umount and mount again, "reboot").
    
    Cause significant read ahead.
    
    Large read ahead request is split by blk_queue_split().
    Parts of the read ahead that are already in the stripe cache,
    or find an available stripe cache to use, can be serviced.
    Parts of the read ahead that would need "too much work",
    would need to wait for a "stripe_head" to become available,
    are rejected immediately.
    
    For larger read ahead requests that are split in many pieces, it is very
    likely that some "splits" will be serviced, but then the stripe cache is
    exhausted/busy, and the remaining ones will be rejected.
    
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Christoph Böhmwalder <christoph.boehmwalder@linbit.com>
    Cc: <stable@vger.kernel.org> # 4.13.x
    Link: https://lore.kernel.org/r/20220330185551.3553196-1-christoph.boehmwalder@linbit.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35b72d8e2c8e324d26a06149e45416a02aa7aec8
Author: Kuan-Ying Lee <Kuan-Ying.Lee@mediatek.com>
Date:   Fri Apr 1 11:28:54 2022 -0700

    mm/kmemleak: reset tag when compare object pointer
    
    commit bfc8089f00fa526dea983844c880fa8106c33ac4 upstream.
    
    When we use HW-tag based kasan and enable vmalloc support, we hit the
    following bug.  It is due to comparison between tagged object and
    non-tagged pointer.
    
    We need to reset the kasan tag when we need to compare tagged object and
    non-tagged pointer.
    
      kmemleak: [name:kmemleak&]Scan area larger than object 0xffffffe77076f440
      CPU: 4 PID: 1 Comm: init Tainted: G S      W         5.15.25-android13-0-g5cacf919c2bc #1
      Hardware name: MT6983(ENG) (DT)
      Call trace:
       add_scan_area+0xc4/0x244
       kmemleak_scan_area+0x40/0x9c
       layout_and_allocate+0x1e8/0x288
       load_module+0x2c8/0xf00
       __se_sys_finit_module+0x190/0x1d0
       __arm64_sys_finit_module+0x20/0x30
       invoke_syscall+0x60/0x170
       el0_svc_common+0xc8/0x114
       do_el0_svc+0x28/0xa0
       el0_svc+0x60/0xf8
       el0t_64_sync_handler+0x88/0xec
       el0t_64_sync+0x1b4/0x1b8
      kmemleak: [name:kmemleak&]Object 0xf5ffffe77076b000 (size 32768):
      kmemleak: [name:kmemleak&]  comm "init", pid 1, jiffies 4294894197
      kmemleak: [name:kmemleak&]  min_count = 0
      kmemleak: [name:kmemleak&]  count = 0
      kmemleak: [name:kmemleak&]  flags = 0x1
      kmemleak: [name:kmemleak&]  checksum = 0
      kmemleak: [name:kmemleak&]  backtrace:
           module_alloc+0x9c/0x120
           move_module+0x34/0x19c
           layout_and_allocate+0x1c4/0x288
           load_module+0x2c8/0xf00
           __se_sys_finit_module+0x190/0x1d0
           __arm64_sys_finit_module+0x20/0x30
           invoke_syscall+0x60/0x170
           el0_svc_common+0xc8/0x114
           do_el0_svc+0x28/0xa0
           el0_svc+0x60/0xf8
           el0t_64_sync_handler+0x88/0xec
           el0t_64_sync+0x1b4/0x1b8
    
    Link: https://lkml.kernel.org/r/20220318034051.30687-1-Kuan-Ying.Lee@mediatek.com
    Signed-off-by: Kuan-Ying Lee <Kuan-Ying.Lee@mediatek.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Matthias Brugger <matthias.bgg@gmail.com>
    Cc: Chinwen Chang <chinwen.chang@mediatek.com>
    Cc: Nicholas Tang <nicholas.tang@mediatek.com>
    Cc: Yee Lee <yee.lee@mediatek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d102fcacfcf35d137d07127e223bed8cf0de17a2
Author: Rik van Riel <riel@surriel.com>
Date:   Fri Apr 1 11:28:42 2022 -0700

    mm,hwpoison: unmap poisoned page before invalidation
    
    commit 3149c79f3cb0e2e3bafb7cfadacec090cbd250d3 upstream.
    
    In some cases it appears the invalidation of a hwpoisoned page fails
    because the page is still mapped in another process.  This can cause a
    program to be continuously restarted and die when it page faults on the
    page that was not invalidated.  Avoid that problem by unmapping the
    hwpoisoned page when we find it.
    
    Another issue is that sometimes we end up oopsing in finish_fault, if
    the code tries to do something with the now-NULL vmf->page.  I did not
    hit this error when submitting the previous patch because there are
    several opportunities for alloc_set_pte to bail out before accessing
    vmf->page, and that apparently happened on those systems, and most of
    the time on other systems, too.
    
    However, across several million systems that error does occur a handful
    of times a day.  It can be avoided by returning VM_FAULT_NOPAGE which
    will cause do_read_fault to return before calling finish_fault.
    
    Link: https://lkml.kernel.org/r/20220325161428.5068d97e@imladris.surriel.com
    Fixes: e53ac7374e64 ("mm: invalidate hwpoison page cache page in fault path")
    Signed-off-by: Rik van Riel <riel@surriel.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Tested-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 099553a1a87f611d3a4d6dc7dae0cc826f46ea02
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Mar 30 14:13:33 2022 +0800

    ALSA: hda/realtek: Fix audio regression on Mi Notebook Pro 2020
    
    commit f30741cded62f87bb4b1cc58bc627f076abcaba8 upstream.
    
    Commit 5aec98913095 ("ALSA: hda/realtek - ALC236 headset MIC recording
    issue") is to solve recording issue met on AL236, by matching codec
    variant ALC269_TYPE_ALC257 and ALC269_TYPE_ALC256.
    
    This match can be too broad and Mi Notebook Pro 2020 is broken by the
    patch.
    
    Instead, use codec ID to be narrow down the scope, in order to make
    ALC256 unaffected.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215484
    Fixes: 5aec98913095 ("ALSA: hda/realtek - ALC236 headset MIC recording issue")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20220330061335.1015533-1-kai.heng.feng@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a86bde89304a7a426258df6d6fd4a273fe338fa8
Author: Xiaomeng Tong <xiam0nd.tong@gmail.com>
Date:   Sun Mar 27 14:08:22 2022 +0800

    ALSA: cs4236: fix an incorrect NULL check on list iterator
    
    commit 0112f822f8a6d8039c94e0bc9b264d7ffc5d4704 upstream.
    
    The bug is here:
            err = snd_card_cs423x_pnp(dev, card->private_data, pdev, cdev);
    
    The list iterator value 'cdev' will *always* be set and non-NULL
    by list_for_each_entry(), so it is incorrect to assume that the
    iterator value will be NULL if the list is empty or no element
    is found.
    
    To fix the bug, use a new variable 'iter' as the list iterator,
    while use the original variable 'cdev' as a dedicated pointer
    to point to the found element. And snd_card_cs423x_pnp() itself
    has NULL check for cdev.
    
    Cc: stable@vger.kernel.org
    Fixes: c2b73d1458014 ("ALSA: cs4236: cs4232 and cs4236 driver merge to solve PnP BIOS detection")
    Signed-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Link: https://lore.kernel.org/r/20220327060822.4735-1-xiam0nd.tong@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 848977412065d310780af4dfe07360c41b373f06
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Thu Mar 31 21:15:36 2022 -0700

    Revert "Input: clear BTN_RIGHT/MIDDLE on buttonpads"
    
    commit 8b188fba75195745026e11d408e4a7e94e01d701 upstream.
    
    This reverts commit 37ef4c19b4c659926ce65a7ac709ceaefb211c40.
    
    The touchpad present in the Dell Precision 7550 and 7750 laptops
    reports a HID_DG_BUTTONTYPE of type MT_BUTTONTYPE_CLICKPAD. However,
    the device is not a clickpad, it is a touchpad with physical buttons.
    
    In order to fix this issue, a quirk for the device was introduced in
    libinput [1] [2] to disable the INPUT_PROP_BUTTONPAD property:
    
            [Precision 7x50 Touchpad]
            MatchBus=i2c
            MatchUdevType=touchpad
            MatchDMIModalias=dmi:*svnDellInc.:pnPrecision7?50*
            AttrInputPropDisable=INPUT_PROP_BUTTONPAD
    
    However, because of the change introduced in 37ef4c19b4 ("Input: clear
    BTN_RIGHT/MIDDLE on buttonpads") the BTN_RIGHT key bit is not mapped
    anymore breaking the device right click button and making impossible to
    workaround it in user space.
    
    In order to avoid breakage on other present or future devices, revert
    the patch causing the issue.
    
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Peter Hutterer <peter.hutterer@who-t.net>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220321184404.20025-1-jose.exposito89@gmail.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 097479aeb2140cf48bc89190423114a545d27fca
Author: Nikita Shubin <n.shubin@yadro.com>
Date:   Fri Mar 11 09:58:15 2022 +0300

    riscv: Fix fill_callchain return value
    
    commit 2b2b574ac587ec5bd7716a356492a85ab8b0ce9f upstream.
    
    perf_callchain_store return 0 on success, -1 otherwise,
    fix fill_callchain to return correct bool value.
    
    Fixes: dbeb90b0c1eb ("riscv: Add perf callchain support")
    Signed-off-by: Nikita Shubin <n.shubin@yadro.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c82cbbefc6e6cecfb6e65972fdd1d4896156e6cb
Author: Manish Chopra <manishc@marvell.com>
Date:   Wed Mar 2 02:52:22 2022 -0800

    qed: validate and restrict untrusted VFs vlan promisc mode
    
    commit cbcc44db2cf7b836896733acc0e5ea966136ed22 upstream.
    
    Today when VFs are put in promiscuous mode, they can request PF
    to configure device for them to receive all VLANs traffic regardless
    of what vlan is configured by the PF (via ip link) and PF allows this
    config request regardless of whether VF is trusted or not.
    
    From security POV, when VLAN is configured for VF through PF (via ip link),
    honour such config requests from VF only when they are configured to be
    trusted, otherwise restrict such VFs vlan promisc mode config.
    
    Cc: stable@vger.kernel.org
    Fixes: f990c82c385b ("qed*: Add support for ndo_set_vf_trust")
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5081cbfb62d29c75ed07509600ebc803750a23fd
Author: Manish Chopra <manishc@marvell.com>
Date:   Wed Mar 2 02:52:21 2022 -0800

    qed: display VF trust config
    
    commit 4e6e6bec7440b9b76f312f28b1f4e944eebb3abc upstream.
    
    Driver does support SR-IOV VFs trust configuration but
    it does not display it when queried via ip link utility.
    
    Cc: stable@vger.kernel.org
    Fixes: f990c82c385b ("qed*: Add support for ndo_set_vf_trust")
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 930a3ed5d8d0623dac942f3678c0ffc1ac8317a1
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:40 2022 +0900

    scsi: libsas: Fix sas_ata_qc_issue() handling of NCQ NON DATA commands
    
    commit 8454563e4c2aafbfb81a383ab423ea8b9b430a25 upstream.
    
    To detect for the DMA_NONE (no data transfer) DMA direction,
    sas_ata_qc_issue() tests if the command protocol is ATA_PROT_NODATA.  This
    test does not include the ATA_CMD_NCQ_NON_DATA command as this command
    protocol is defined as ATA_PROT_NCQ_NODATA (equal to ATA_PROT_FLAG_NCQ) and
    not as ATA_PROT_NODATA.
    
    To include both NCQ and non-NCQ commands when testing for the DMA_NONE DMA
    direction, use "!ata_is_data()".
    
    Link: https://lore.kernel.org/r/20220220031810.738362-2-damien.lemoal@opensource.wdc.com
    Fixes: 176ddd89171d ("scsi: libsas: Reset num_scatter if libata marks qc as NODATA")
    Cc: stable@vger.kernel.org
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae2a271ed562cb73e107b912bd69456085410da8
Author: Hugh Dickins <hughd@google.com>
Date:   Tue Mar 22 14:45:59 2022 -0700

    mempolicy: mbind_range() set_policy() after vma_merge()
    
    commit 4e0906008cdb56381638aa17d9c32734eae6d37a upstream.
    
    v2.6.34 commit 9d8cebd4bcd7 ("mm: fix mbind vma merge problem") introduced
    vma_merge() to mbind_range(); but unlike madvise, mlock and mprotect, it
    put a "continue" to next vma where its precedents go to update flags on
    current vma before advancing: that left vma with the wrong setting in the
    infamous vma_merge() case 8.
    
    v3.10 commit 1444f92c8498 ("mm: merging memory blocks resets mempolicy")
    tried to fix that in vma_adjust(), without fully understanding the issue.
    
    v3.11 commit 3964acd0dbec ("mm: mempolicy: fix mbind_range() &&
    vma_adjust() interaction") reverted that, and went about the fix in the
    right way, but chose to optimize out an unnecessary mpol_dup() with a
    prior mpol_equal() test.  But on tmpfs, that also pessimized out the vital
    call to its ->set_policy(), leaving the new mbind unenforced.
    
    The user visible effect was that the pages got allocated on the local
    node (happened to be 0), after the mbind() caller had specifically
    asked for them to be allocated on node 1.  There was not any page
    migration involved in the case reported: the pages simply got allocated
    on the wrong node.
    
    Just delete that optimization now (though it could be made conditional on
    vma not having a set_policy).  Also remove the "next" variable: it turned
    out to be blameless, but also pointless.
    
    Link: https://lkml.kernel.org/r/319e4db9-64ae-4bca-92f0-ade85d342ff@google.com
    Fixes: 3964acd0dbec ("mm: mempolicy: fix mbind_range() && vma_adjust() interaction")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Reviewed-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1313f5e8fe50ce84ec3eac162873ee028a30631
Author: Rik van Riel <riel@surriel.com>
Date:   Tue Mar 22 14:44:09 2022 -0700

    mm: invalidate hwpoison page cache page in fault path
    
    commit e53ac7374e64dede04d745ff0e70ff5048378d1f upstream.
    
    Sometimes the page offlining code can leave behind a hwpoisoned clean
    page cache page.  This can lead to programs being killed over and over
    and over again as they fault in the hwpoisoned page, get killed, and
    then get re-spawned by whatever wanted to run them.
    
    This is particularly embarrassing when the page was offlined due to
    having too many corrected memory errors.  Now we are killing tasks due
    to them trying to access memory that probably isn't even corrupted.
    
    This problem can be avoided by invalidating the page from the page fault
    handler, which already has a branch for dealing with these kinds of
    pages.  With this patch we simply pretend the page fault was successful
    if the page was invalidated, return to userspace, incur another page
    fault, read in the file from disk (to a new memory page), and then
    everything works again.
    
    Link: https://lkml.kernel.org/r/20220212213740.423efcea@imladris.surriel.com
    Signed-off-by: Rik van Riel <riel@surriel.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Acked-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2efe956a74dc9c214237e3d470ca598a1e0fa8af
Author: Alistair Popple <apopple@nvidia.com>
Date:   Tue Mar 22 14:43:26 2022 -0700

    mm/pages_alloc.c: don't create ZONE_MOVABLE beyond the end of a node
    
    commit ddbc84f3f595cf1fc8234a191193b5d20ad43938 upstream.
    
    ZONE_MOVABLE uses the remaining memory in each node.  Its starting pfn
    is also aligned to MAX_ORDER_NR_PAGES.  It is possible for the remaining
    memory in a node to be less than MAX_ORDER_NR_PAGES, meaning there is
    not enough room for ZONE_MOVABLE on that node.
    
    Unfortunately this condition is not checked for.  This leads to
    zone_movable_pfn[] getting set to a pfn greater than the last pfn in a
    node.
    
    calculate_node_totalpages() then sets zone->present_pages to be greater
    than zone->spanned_pages which is invalid, as spanned_pages represents
    the maximum number of pages in a zone assuming no holes.
    
    Subsequently it is possible free_area_init_core() will observe a zone of
    size zero with present pages.  In this case it will skip setting up the
    zone, including the initialisation of free_lists[].
    
    However populated_zone() checks zone->present_pages to see if a zone has
    memory available.  This is used by iterators such as
    walk_zones_in_node().  pagetypeinfo_showfree() uses this to walk the
    free_list of each zone in each node, which are assumed to be initialised
    due to the zone not being empty.
    
    As free_area_init_core() never initialised the free_lists[] this results
    in the following kernel crash when trying to read /proc/pagetypeinfo:
    
      BUG: kernel NULL pointer dereference, address: 0000000000000000
      #PF: supervisor read access in kernel mode
      #PF: error_code(0x0000) - not-present page
      PGD 0 P4D 0
      Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC NOPTI
      CPU: 0 PID: 456 Comm: cat Not tainted 5.16.0 #461
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014
      RIP: 0010:pagetypeinfo_show+0x163/0x460
      Code: 9e 82 e8 80 57 0e 00 49 8b 06 b9 01 00 00 00 4c 39 f0 75 16 e9 65 02 00 00 48 83 c1 01 48 81 f9 a0 86 01 00 0f 84 48 02 00 00 <48> 8b 00 4c 39 f0 75 e7 48 c7 c2 80 a2 e2 82 48 c7 c6 79 ef e3 82
      RSP: 0018:ffffc90001c4bd10 EFLAGS: 00010003
      RAX: 0000000000000000 RBX: ffff88801105f638 RCX: 0000000000000001
      RDX: 0000000000000001 RSI: 000000000000068b RDI: ffff8880163dc68b
      RBP: ffffc90001c4bd90 R08: 0000000000000001 R09: ffff8880163dc67e
      R10: 656c6261766f6d6e R11: 6c6261766f6d6e55 R12: ffff88807ffb4a00
      R13: ffff88807ffb49f8 R14: ffff88807ffb4580 R15: ffff88807ffb3000
      FS:  00007f9c83eff5c0(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000000 CR3: 0000000013c8e000 CR4: 0000000000350ef0
      Call Trace:
       seq_read_iter+0x128/0x460
       proc_reg_read_iter+0x51/0x80
       new_sync_read+0x113/0x1a0
       vfs_read+0x136/0x1d0
       ksys_read+0x70/0xf0
       __x64_sys_read+0x1a/0x20
       do_syscall_64+0x3b/0xc0
       entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fix this by checking that the aligned zone_movable_pfn[] does not exceed
    the end of the node, and if it does skip creating a movable zone on this
    node.
    
    Link: https://lkml.kernel.org/r/20220215025831.2113067-1-apopple@nvidia.com
    Fixes: 2a1e274acf0b ("Create the ZONE_MOVABLE zone")
    Signed-off-by: Alistair Popple <apopple@nvidia.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 455f4a23490bfcbedc8e5c245c463a59b19e5ddd
Author: Baokun Li <libaokun1@huawei.com>
Date:   Fri Jan 14 18:28:54 2022 +0800

    jffs2: fix memory leak in jffs2_scan_medium
    
    commit 9cdd3128874f5fe759e2c4e1360ab7fb96a8d1df upstream.
    
    If an error is returned in jffs2_scan_eraseblock() and some memory
    has been added to the jffs2_summary *s, we can observe the following
    kmemleak report:
    
    --------------------------------------------
    unreferenced object 0xffff88812b889c40 (size 64):
      comm "mount", pid 692, jiffies 4294838325 (age 34.288s)
      hex dump (first 32 bytes):
        40 48 b5 14 81 88 ff ff 01 e0 31 00 00 00 50 00  @H........1...P.
        00 00 01 00 00 00 01 00 00 00 02 00 00 00 09 08  ................
      backtrace:
        [<ffffffffae93a3a3>] __kmalloc+0x613/0x910
        [<ffffffffaf423b9c>] jffs2_sum_add_dirent_mem+0x5c/0xa0
        [<ffffffffb0f3afa8>] jffs2_scan_medium.cold+0x36e5/0x4794
        [<ffffffffb0f3dbe1>] jffs2_do_mount_fs.cold+0xa7/0x2267
        [<ffffffffaf40acf3>] jffs2_do_fill_super+0x383/0xc30
        [<ffffffffaf40c00a>] jffs2_fill_super+0x2ea/0x4c0
        [<ffffffffb0315d64>] mtd_get_sb+0x254/0x400
        [<ffffffffb0315f5f>] mtd_get_sb_by_nr+0x4f/0xd0
        [<ffffffffb0316478>] get_tree_mtd+0x498/0x840
        [<ffffffffaf40bd15>] jffs2_get_tree+0x25/0x30
        [<ffffffffae9f358d>] vfs_get_tree+0x8d/0x2e0
        [<ffffffffaea7a98f>] path_mount+0x50f/0x1e50
        [<ffffffffaea7c3d7>] do_mount+0x107/0x130
        [<ffffffffaea7c5c5>] __se_sys_mount+0x1c5/0x2f0
        [<ffffffffaea7c917>] __x64_sys_mount+0xc7/0x160
        [<ffffffffb10142f5>] do_syscall_64+0x45/0x70
    unreferenced object 0xffff888114b54840 (size 32):
      comm "mount", pid 692, jiffies 4294838325 (age 34.288s)
      hex dump (first 32 bytes):
        c0 75 b5 14 81 88 ff ff 02 e0 02 00 00 00 02 00  .u..............
        00 00 84 00 00 00 44 00 00 00 6b 6b 6b 6b 6b a5  ......D...kkkkk.
      backtrace:
        [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffaf423b04>] jffs2_sum_add_inode_mem+0x54/0x90
        [<ffffffffb0f3bd44>] jffs2_scan_medium.cold+0x4481/0x4794
        [...]
    unreferenced object 0xffff888114b57280 (size 32):
      comm "mount", pid 692, jiffies 4294838393 (age 34.357s)
      hex dump (first 32 bytes):
        10 d5 6c 11 81 88 ff ff 08 e0 05 00 00 00 01 00  ..l.............
        00 00 38 02 00 00 28 00 00 00 6b 6b 6b 6b 6b a5  ..8...(...kkkkk.
      backtrace:
        [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffaf423c34>] jffs2_sum_add_xattr_mem+0x54/0x90
        [<ffffffffb0f3a24f>] jffs2_scan_medium.cold+0x298c/0x4794
        [...]
    unreferenced object 0xffff8881116cd510 (size 16):
      comm "mount", pid 692, jiffies 4294838395 (age 34.355s)
      hex dump (first 16 bytes):
        00 00 00 00 00 00 00 00 09 e0 60 02 00 00 6b a5  ..........`...k.
      backtrace:
        [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffaf423cc4>] jffs2_sum_add_xref_mem+0x54/0x90
        [<ffffffffb0f3b2e3>] jffs2_scan_medium.cold+0x3a20/0x4794
        [...]
    --------------------------------------------
    
    Therefore, we should call jffs2_sum_reset_collected(s) on exit to
    release the memory added in s. In addition, a new tag "out_buf" is
    added to prevent the NULL pointer reference caused by s being NULL.
    (thanks to Zhang Yi for this analysis)
    
    Fixes: e631ddba5887 ("[JFFS2] Add erase block summary support (mount time improvement)")
    Cc: stable@vger.kernel.org
    Co-developed-with: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0978e9af4559a171ac7a74a1b3ef21804b0a0fa9
Author: Baokun Li <libaokun1@huawei.com>
Date:   Fri Jan 14 18:28:53 2022 +0800

    jffs2: fix memory leak in jffs2_do_mount_fs
    
    commit d051cef784de4d54835f6b6836d98a8f6935772c upstream.
    
    If jffs2_build_filesystem() in jffs2_do_mount_fs() returns an error,
    we can observe the following kmemleak report:
    
    --------------------------------------------
    unreferenced object 0xffff88811b25a640 (size 64):
      comm "mount", pid 691, jiffies 4294957728 (age 71.952s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffffa493be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffa5423a06>] jffs2_sum_init+0x86/0x130
        [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798/0xac0
        [<ffffffffa540acf3>] jffs2_do_fill_super+0x383/0xc30
        [<ffffffffa540c00a>] jffs2_fill_super+0x2ea/0x4c0
        [...]
    unreferenced object 0xffff88812c760000 (size 65536):
      comm "mount", pid 691, jiffies 4294957728 (age 71.952s)
      hex dump (first 32 bytes):
        bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................
        bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................
      backtrace:
        [<ffffffffa493a449>] __kmalloc+0x6b9/0x910
        [<ffffffffa5423a57>] jffs2_sum_init+0xd7/0x130
        [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798/0xac0
        [<ffffffffa540acf3>] jffs2_do_fill_super+0x383/0xc30
        [<ffffffffa540c00a>] jffs2_fill_super+0x2ea/0x4c0
        [...]
    --------------------------------------------
    
    This is because the resources allocated in jffs2_sum_init() are not
    released. Call jffs2_sum_exit() to release these resources to solve
    the problem.
    
    Fixes: e631ddba5887 ("[JFFS2] Add erase block summary support (mount time improvement)")
    Cc: stable@vger.kernel.org
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30bf7244acf32f19cb722c39f7bc1c2a9f300422
Author: Baokun Li <libaokun1@huawei.com>
Date:   Tue Dec 28 20:54:30 2021 +0800

    jffs2: fix use-after-free in jffs2_clear_xattr_subsystem
    
    commit 4c7c44ee1650677fbe89d86edbad9497b7679b5c upstream.
    
    When we mount a jffs2 image, assume that the first few blocks of
    the image are normal and contain at least one xattr-related inode,
    but the next block is abnormal. As a result, an error is returned
    in jffs2_scan_eraseblock(). jffs2_clear_xattr_subsystem() is then
    called in jffs2_build_filesystem() and then again in
    jffs2_do_fill_super().
    
    Finally we can observe the following report:
     ==================================================================
     BUG: KASAN: use-after-free in jffs2_clear_xattr_subsystem+0x95/0x6ac
     Read of size 8 at addr ffff8881243384e0 by task mount/719
    
     Call Trace:
      dump_stack+0x115/0x16b
      jffs2_clear_xattr_subsystem+0x95/0x6ac
      jffs2_do_fill_super+0x84f/0xc30
      jffs2_fill_super+0x2ea/0x4c0
      mtd_get_sb+0x254/0x400
      mtd_get_sb_by_nr+0x4f/0xd0
      get_tree_mtd+0x498/0x840
      jffs2_get_tree+0x25/0x30
      vfs_get_tree+0x8d/0x2e0
      path_mount+0x50f/0x1e50
      do_mount+0x107/0x130
      __se_sys_mount+0x1c5/0x2f0
      __x64_sys_mount+0xc7/0x160
      do_syscall_64+0x45/0x70
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
     Allocated by task 719:
      kasan_save_stack+0x23/0x60
      __kasan_kmalloc.constprop.0+0x10b/0x120
      kasan_slab_alloc+0x12/0x20
      kmem_cache_alloc+0x1c0/0x870
      jffs2_alloc_xattr_ref+0x2f/0xa0
      jffs2_scan_medium.cold+0x3713/0x4794
      jffs2_do_mount_fs.cold+0xa7/0x2253
      jffs2_do_fill_super+0x383/0xc30
      jffs2_fill_super+0x2ea/0x4c0
     [...]
    
     Freed by task 719:
      kmem_cache_free+0xcc/0x7b0
      jffs2_free_xattr_ref+0x78/0x98
      jffs2_clear_xattr_subsystem+0xa1/0x6ac
      jffs2_do_mount_fs.cold+0x5e6/0x2253
      jffs2_do_fill_super+0x383/0xc30
      jffs2_fill_super+0x2ea/0x4c0
     [...]
    
     The buggy address belongs to the object at ffff8881243384b8
      which belongs to the cache jffs2_xattr_ref of size 48
     The buggy address is located 40 bytes inside of
      48-byte region [ffff8881243384b8, ffff8881243384e8)
     [...]
     ==================================================================
    
    The triggering of the BUG is shown in the following stack:
    -----------------------------------------------------------
    jffs2_fill_super
      jffs2_do_fill_super
        jffs2_do_mount_fs
          jffs2_build_filesystem
            jffs2_scan_medium
              jffs2_scan_eraseblock        <--- ERROR
            jffs2_clear_xattr_subsystem    <--- free
        jffs2_clear_xattr_subsystem        <--- free again
    -----------------------------------------------------------
    
    An error is returned in jffs2_do_mount_fs(). If the error is returned
    by jffs2_sum_init(), the jffs2_clear_xattr_subsystem() does not need to
    be executed. If the error is returned by jffs2_build_filesystem(), the
    jffs2_clear_xattr_subsystem() also does not need to be executed again.
    So move jffs2_clear_xattr_subsystem() from 'out_inohash' to 'out_root'
    to fix this UAF problem.
    
    Fixes: aa98d7cf59b5 ("[JFFS2][XATTR] XATTR support on JFFS2 (version. 5)")
    Cc: stable@vger.kernel.org
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e27caad38b59b5b00b9c5228d04c13111229deec
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Mon Feb 28 16:36:39 2022 +0800

    can: ems_usb: ems_usb_start_xmit(): fix double dev_kfree_skb() in error path
    
    commit c70222752228a62135cee3409dccefd494a24646 upstream.
    
    There is no need to call dev_kfree_skb() when usb_submit_urb() fails
    beacause can_put_echo_skb() deletes the original skb and
    can_free_echo_skb() deletes the cloned skb.
    
    Link: https://lore.kernel.org/all/20220228083639.38183-1-hbh25y@gmail.com
    Fixes: 702171adeed3 ("ems_usb: Added support for EMS CPC-USB/ARM7 CAN/USB interface")
    Cc: stable@vger.kernel.org
    Cc: Sebastian Haas <haas@ems-wuensche.com>
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00a856fa697624b36407739de656a0e8e3566e17
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Jan 27 10:18:04 2022 +0100

    spi: mxic: Fix the transmit path
    
    commit 5fd6739e0df7e320bcac103dfb95fe75941fea17 upstream.
    
    By working with external hardware ECC engines, we figured out that
    Under certain circumstances, it is needed for the SPI controller to
    check INT_TX_EMPTY and INT_RX_NOT_EMPTY in both receive and transmit
    path (not only in the receive path). The delay penalty being
    negligible, move this code in the common path.
    
    Fixes: b942d80b0a39 ("spi: Add MXIC controller driver")
    Cc: stable@vger.kernel.org
    Suggested-by: Mason Yang <masonccyang@mxic.com.tw>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Reviewed-by: Zhengxun Li <zhengxunli@mxic.com.tw>
    Reviewed-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20220127091808.1043392-10-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e05221d20153383cca49d93f976edd1ede249b4a
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Jan 11 21:13:59 2022 +0100

    pinctrl: samsung: drop pin banks references on error paths
    
    commit 50ebd19e3585b9792e994cfa8cbee8947fe06371 upstream.
    
    The driver iterates over its devicetree children with
    for_each_child_of_node() and stores for later found node pointer.  This
    has to be put in error paths to avoid leak during re-probing.
    
    Fixes: ab663789d697 ("pinctrl: samsung: Match pin banks with their device nodes")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Sam Protsenko <semen.protsenko@linaro.org>
    Reviewed-by: Chanho Park <chanho61.park@samsung.com>
    Link: https://lore.kernel.org/r/20220111201426.326777-2-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0996eaaddfe4af7101edd667f34bd04c3b368d8f
Author: Chao Yu <chao@kernel.org>
Date:   Mon Mar 21 23:22:11 2022 +0800

    f2fs: fix to do sanity check on .cp_pack_total_block_count
    
    commit 5b5b4f85b01604389f7a0f11ef180a725bf0e2d4 upstream.
    
    As bughunter reported in bugzilla:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=215709
    
    f2fs may hang when mounting a fuzzed image, the dmesg shows as below:
    
    __filemap_get_folio+0x3a9/0x590
    pagecache_get_page+0x18/0x60
    __get_meta_page+0x95/0x460 [f2fs]
    get_checkpoint_version+0x2a/0x1e0 [f2fs]
    validate_checkpoint+0x8e/0x2a0 [f2fs]
    f2fs_get_valid_checkpoint+0xd0/0x620 [f2fs]
    f2fs_fill_super+0xc01/0x1d40 [f2fs]
    mount_bdev+0x18a/0x1c0
    f2fs_mount+0x15/0x20 [f2fs]
    legacy_get_tree+0x28/0x50
    vfs_get_tree+0x27/0xc0
    path_mount+0x480/0xaa0
    do_mount+0x7c/0xa0
    __x64_sys_mount+0x8b/0xe0
    do_syscall_64+0x38/0xc0
    entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    The root cause is cp_pack_total_block_count field in checkpoint was fuzzed
    to one, as calcuated, two cp pack block locates in the same block address,
    so then read latter cp pack block, it will block on the page lock due to
    the lock has already held when reading previous cp pack block, fix it by
    adding sanity check for cp_pack_total_block_count.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chao Yu <chao.yu@oppo.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1d5946d47c0827bae39e1537959ce8d6f0224c5
Author: Juhyung Park <qkrwngud825@gmail.com>
Date:   Tue Feb 15 17:27:21 2022 +0900

    f2fs: quota: fix loop condition at f2fs_quota_sync()
    
    commit 680af5b824a52faa819167628665804a14f0e0df upstream.
    
    cnt should be passed to sb_has_quota_active() instead of type to check
    active quota properly.
    
    Moreover, when the type is -1, the compiler with enough inline knowledge
    can discard sb_has_quota_active() check altogether, causing a NULL pointer
    dereference at the following inode_lock(dqopt->files[cnt]):
    
    [    2.796010] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0
    [    2.796024] Mem abort info:
    [    2.796025]   ESR = 0x96000005
    [    2.796028]   EC = 0x25: DABT (current EL), IL = 32 bits
    [    2.796029]   SET = 0, FnV = 0
    [    2.796031]   EA = 0, S1PTW = 0
    [    2.796032] Data abort info:
    [    2.796034]   ISV = 0, ISS = 0x00000005
    [    2.796035]   CM = 0, WnR = 0
    [    2.796046] user pgtable: 4k pages, 39-bit VAs, pgdp=00000003370d1000
    [    2.796048] [00000000000000a0] pgd=0000000000000000, pud=0000000000000000
    [    2.796051] Internal error: Oops: 96000005 [#1] PREEMPT SMP
    [    2.796056] CPU: 7 PID: 640 Comm: f2fs_ckpt-259:7 Tainted: G S                5.4.179-arter97-r8-64666-g2f16e087f9d8 #1
    [    2.796057] Hardware name: Qualcomm Technologies, Inc. Lahaina MTP lemonadep (DT)
    [    2.796059] pstate: 80c00005 (Nzcv daif +PAN +UAO)
    [    2.796065] pc : down_write+0x28/0x70
    [    2.796070] lr : f2fs_quota_sync+0x100/0x294
    [    2.796071] sp : ffffffa3f48ffc30
    [    2.796073] x29: ffffffa3f48ffc30 x28: 0000000000000000
    [    2.796075] x27: ffffffa3f6d718b8 x26: ffffffa415fe9d80
    [    2.796077] x25: ffffffa3f7290048 x24: 0000000000000001
    [    2.796078] x23: 0000000000000000 x22: ffffffa3f7290000
    [    2.796080] x21: ffffffa3f72904a0 x20: ffffffa3f7290110
    [    2.796081] x19: ffffffa3f77a9800 x18: ffffffc020aae038
    [    2.796083] x17: ffffffa40e38e040 x16: ffffffa40e38e6d0
    [    2.796085] x15: ffffffa40e38e6cc x14: ffffffa40e38e6d0
    [    2.796086] x13: 00000000000004f6 x12: 00162c44ff493000
    [    2.796088] x11: 0000000000000400 x10: ffffffa40e38c948
    [    2.796090] x9 : 0000000000000000 x8 : 00000000000000a0
    [    2.796091] x7 : 0000000000000000 x6 : 0000d1060f00002a
    [    2.796093] x5 : ffffffa3f48ff718 x4 : 000000000000000d
    [    2.796094] x3 : 00000000060c0000 x2 : 0000000000000001
    [    2.796096] x1 : 0000000000000000 x0 : 00000000000000a0
    [    2.796098] Call trace:
    [    2.796100]  down_write+0x28/0x70
    [    2.796102]  f2fs_quota_sync+0x100/0x294
    [    2.796104]  block_operations+0x120/0x204
    [    2.796106]  f2fs_write_checkpoint+0x11c/0x520
    [    2.796107]  __checkpoint_and_complete_reqs+0x7c/0xd34
    [    2.796109]  issue_checkpoint_thread+0x6c/0xb8
    [    2.796112]  kthread+0x138/0x414
    [    2.796114]  ret_from_fork+0x10/0x18
    [    2.796117] Code: aa0803e0 aa1f03e1 52800022 aa0103e9 (c8e97d02)
    [    2.796120] ---[ end trace 96e942e8eb6a0b53 ]---
    [    2.800116] Kernel panic - not syncing: Fatal exception
    [    2.800120] SMP: stopping secondary CPUs
    
    Fixes: 9de71ede81e6 ("f2fs: quota: fix potential deadlock")
    Cc: <stable@vger.kernel.org> # v5.15+
    Signed-off-by: Juhyung Park <qkrwngud825@gmail.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 947ca26390d21af3d45e8bcf6d2114d730787cd4
Author: Chao Yu <chao@kernel.org>
Date:   Fri Feb 4 11:21:14 2022 +0800

    f2fs: fix to unlock page correctly in error path of is_alive()
    
    commit 6d18762ed5cd549fde74fd0e05d4d87bac5a3beb upstream.
    
    As Pavel Machek reported in below link [1]:
    
    After commit 77900c45ee5c ("f2fs: fix to do sanity check in is_alive()"),
    node page should be unlock via calling f2fs_put_page() in the error path
    of is_alive(), otherwise, f2fs may hang when it tries to lock the node
    page, fix it.
    
    [1] https://lore.kernel.org/stable/20220124203637.GA19321@duo.ucw.cz/
    
    Fixes: 77900c45ee5c ("f2fs: fix to do sanity check in is_alive()")
    Cc: <stable@vger.kernel.org>
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce1aa09cc14ed625104acc2d487bd92b9a88efe2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 15 18:34:06 2022 +0300

    NFSD: prevent integer overflow on 32 bit systems
    
    commit 23a9dbbe0faf124fc4c139615633b9d12a3a89ef upstream.
    
    On a 32 bit system, the "len * sizeof(*p)" operation can have an
    integer overflow.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85259340fc9bd54e3d567b41b881ecb4d0055da1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 15 13:30:09 2022 +0300

    NFSD: prevent underflow in nfssvc_decode_writeargs()
    
    commit 184416d4b98509fb4c3d8fc3d6dc1437896cc159 upstream.
    
    Smatch complains:
    
            fs/nfsd/nfsxdr.c:341 nfssvc_decode_writeargs()
            warn: no lower bound on 'args->len'
    
    Change the type to unsigned to prevent this issue.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cfeeeee8cf007a65a264e414ee0e5a4815550f4
Author: NeilBrown <neilb@suse.de>
Date:   Tue Mar 8 13:42:17 2022 +1100

    SUNRPC: avoid race between mod_timer() and del_timer_sync()
    
    commit 3848e96edf4788f772d83990022fa7023a233d83 upstream.
    
    xprt_destory() claims XPRT_LOCKED and then calls del_timer_sync().
    Both xprt_unlock_connect() and xprt_release() call
     ->release_xprt()
    which drops XPRT_LOCKED and *then* xprt_schedule_autodisconnect()
    which calls mod_timer().
    
    This may result in mod_timer() being called *after* del_timer_sync().
    When this happens, the timer may fire long after the xprt has been freed,
    and run_timer_softirq() will probably crash.
    
    The pairing of ->release_xprt() and xprt_schedule_autodisconnect() is
    always called under ->transport_lock.  So if we take ->transport_lock to
    call del_timer_sync(), we can be sure that mod_timer() will run first
    (if it runs at all).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a1e73e9add747671b1e6828500459695bd8c1d2
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Tue Feb 8 21:09:47 2022 -0800

    HID: intel-ish-hid: Use dma_alloc_coherent for firmware update
    
    commit f97ec5d75e9261a5da78dc28a8955b7cc0c4468b upstream.
    
    Allocating memory with kmalloc and GPF_DMA32 is not allowed, the
    allocator will ignore the attribute.
    
    Instead, use dma_alloc_coherent() API as we allocate a small amount of
    memory to transfer firmware fragment to the ISH.
    
    On Arcada chromebook, after the patch the warning:
    "Unexpected gfp: 0x4 (GFP_DMA32). Fixing up to gfp: 0xcc0 (GFP_KERNEL).  Fix your code!"
    is gone. The ISH firmware is loaded properly and we can interact with
    the ISH:
    > ectool  --name cros_ish version
    ...
    Build info:    arcada_ish_v2.0.3661+3c1a1c1ae0 2022-02-08 05:37:47 @localhost
    Tool version:  v2.0.12300-900b03ec7f 2022-02-08 10:01:48 @localhost
    
    Fixes: commit 91b228107da3 ("HID: intel-ish-hid: ISH firmware loader client driver")
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beb7d969063a6d4d66645f3bb1f8eeecf20e7e30
Author: Bagas Sanjaya <bagasdotme@gmail.com>
Date:   Mon Mar 14 18:33:29 2022 +0700

    Documentation: update stable tree link
    
    commit 555d44932c67e617d89bc13c81c7efac5b51fcfa upstream.
    
    The link to stable tree is redirected to
    https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git. Update
    accordingly.
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: stable@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Link: https://lore.kernel.org/r/20220314113329.485372-6-bagasdotme@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20de1038e245589ad450edd53331bb6b03531362
Author: Bagas Sanjaya <bagasdotme@gmail.com>
Date:   Mon Mar 14 18:33:28 2022 +0700

    Documentation: add link to stable release candidate tree
    
    commit 587d39b260c4d090166314d64be70b1f6a26b0b5 upstream.
    
    There is also stable release candidate tree. Mention it, however with a
    warning that the tree is for testing purposes.
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: stable@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Link: https://lore.kernel.org/r/20220314113329.485372-5-bagasdotme@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d312c0035eb4fbeff2ff8ba2614b223a5b39b4ce
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jan 13 12:04:54 2022 -0800

    KEYS: fix length validation in keyctl_pkey_params_get_2()
    
    commit c51abd96837f600d8fd940b6ab8e2da578575504 upstream.
    
    In many cases, keyctl_pkey_params_get_2() is validating the user buffer
    lengths against the wrong algorithm properties.  Fix it to check against
    the correct properties.
    
    Probably this wasn't noticed before because for all asymmetric keys of
    the "public_key" subtype, max_data_size == max_sig_size == max_enc_size
    == max_dec_size.  However, this isn't necessarily true for the
    "asym_tpm" subtype (it should be, but it's not strictly validated).  Of
    course, future key types could have different values as well.
    
    Fixes: 00d60fd3b932 ("KEYS: Provide keyctls to drive the new key type ops for asymmetric keys [ver #2]")
    Cc: <stable@vger.kernel.org> # v4.20+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2458ecd21f29a3e5571d7d97764c043083deed5e
Author: Jann Horn <jannh@google.com>
Date:   Sat Mar 19 02:08:37 2022 +0100

    ptrace: Check PTRACE_O_SUSPEND_SECCOMP permission on PTRACE_SEIZE
    
    commit ee1fee900537b5d9560e9f937402de5ddc8412f3 upstream.
    
    Setting PTRACE_O_SUSPEND_SECCOMP is supposed to be a highly privileged
    operation because it allows the tracee to completely bypass all seccomp
    filters on kernels with CONFIG_CHECKPOINT_RESTORE=y. It is only supposed to
    be settable by a process with global CAP_SYS_ADMIN, and only if that
    process is not subject to any seccomp filters at all.
    
    However, while these permission checks were done on the PTRACE_SETOPTIONS
    path, they were missing on the PTRACE_SEIZE path, which also sets
    user-specified ptrace flags.
    
    Move the permissions checks out into a helper function and let both
    ptrace_attach() and ptrace_setoptions() call it.
    
    Cc: stable@kernel.org
    Fixes: 13c4a90119d2 ("seccomp: add ptrace options for suspend/resume")
    Signed-off-by: Jann Horn <jannh@google.com>
    Link: https://lkml.kernel.org/r/20220319010838.1386861-1-jannh@google.com
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a609c88fe3ca3eaaed23bcd6fb023074c090f6d
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Wed Mar 9 15:55:18 2022 +0900

    clk: uniphier: Fix fixed-rate initialization
    
    commit ca85a66710a8a1f6b0719397225c3e9ee0abb692 upstream.
    
    Fixed-rate clocks in UniPhier don't have any parent clocks, however,
    initial data "init.flags" isn't initialized, so it might be determined
    that there is a parent clock for fixed-rate clock.
    
    This sets init.flags to zero as initialization.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 734d82f4a678 ("clk: uniphier: add core support code for UniPhier clock driver")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Link: https://lore.kernel.org/r/1646808918-30899-1-git-send-email-hayashi.kunihiko@socionext.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d97610e74e482d876f547a8406a503e38f64292
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 2 12:33:45 2022 +0100

    greybus: svc: fix an error handling bug in gb_svc_hello()
    
    commit 5f8583a3b7552092582a92e7bbd2153319929ad7 upstream.
    
    Cleanup if gb_svc_queue_deferred_request() fails.
    
    Link: https://lore.kernel.org/r/20220202072016.GA6748@kili
    Fixes: ee2f2074fdb2 ("greybus: svc: reconfig APBridgeA-Switch link to handle required load")
    Cc: stable@vger.kernel.org      # 4.9
    [johan: fix commit summary prefix and rename label ]
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20220202113347.1288-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 468757502e2fb74672045c5f6230c9634f740cc6
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:06 2022 -0500

    iio: inkern: make a best effort on offset calculation
    
    commit ca85123354e1a65a22170286387b4791997fe864 upstream.
    
    iio_convert_raw_to_processed_unlocked() assumes the offset is an
    integer. Make a best effort to get a valid offset value for fractional
    cases without breaking implicit truncations.
    
    Fixes: 48e44ce0f881 ("iio:inkern: Add function to read the processed value")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-4-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be2b89a909b307087938b3167cc267a0ce1087fb
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:05 2022 -0500

    iio: inkern: apply consumer scale when no channel scale is available
    
    commit 14b457fdde38de594a4bc4bd9075019319d978da upstream.
    
    When a consumer calls iio_read_channel_processed() and no channel scale
    is available, it's assumed that the scale is one and the raw value is
    returned as expected.
    
    On the other hand, if the consumer calls iio_convert_raw_to_processed()
    the scaling factor requested by the consumer is not applied.
    
    This for example causes the consumer to process mV when expecting uV.
    Make sure to always apply the scaling factor requested by the consumer.
    
    Fixes: adc8ec5ff183 ("iio: inkern: pass through raw values if no scaling")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-3-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5be8a07b9574d95ced6c532775c0727dae318929
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:04 2022 -0500

    iio: inkern: apply consumer scale on IIO_VAL_INT cases
    
    commit 1bca97ff95c732a516ebb68da72814194980e0a5 upstream.
    
    When a consumer calls iio_read_channel_processed() and the channel has
    an integer scale, the scale channel scale is applied and the processed
    value is returned as expected.
    
    On the other hand, if the consumer calls iio_convert_raw_to_processed()
    the scaling factor requested by the consumer is not applied.
    
    This for example causes the consumer to process mV when expecting uV.
    Make sure to always apply the scaling factor requested by the consumer.
    
    Fixes: 48e44ce0f881 ("iio:inkern: Add function to read the processed value")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-2-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c459b27945978d3affb01e8c251c991adc045c19
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:07 2022 -0500

    iio: afe: rescale: use s64 for temporary scale calculations
    
    commit 51593106b608ae4247cc8da928813347da16d025 upstream.
    
    All four scaling coefficients can take signed values.
    Make tmp a signed 64-bit integer and switch to div_s64() to preserve
    signs during 64-bit divisions.
    
    Fixes: 8b74816b5a9a ("iio: afe: rescale: new driver")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-5-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 576a1ce64c62ab210f88d12ecaaa90bda66bc193
Author: James Clark <james.clark@arm.com>
Date:   Thu Jan 20 11:30:47 2022 +0000

    coresight: Fix TRCCONFIGR.QE sysfs interface
    
    commit ea75a342aed5ed72c87f38fbe0df2f5df7eae374 upstream.
    
    It's impossible to program a valid value for TRCCONFIGR.QE
    when TRCIDR0.QSUPP==0b10. In that case the following is true:
    
      Q element support is implemented, and only supports Q elements without
      instruction counts. TRCCONFIGR.QE can only take the values 0b00 or 0b11.
    
    Currently the low bit of QSUPP is checked to see if the low bit of QE can
    be written to, but as you can see when QSUPP==0b10 the low bit is cleared
    making it impossible to ever write the only valid value of 0b11 to QE.
    0b10 would be written instead, which is a reserved QE value even for all
    values of QSUPP.
    
    The fix is to allow writing the low bit of QE for any non zero value of
    QSUPP.
    
    This change also ensures that the low bit is always set, even when the
    user attempts to only set the high bit.
    
    Signed-off-by: James Clark <james.clark@arm.com>
    Reviewed-by: Mike Leach <mike.leach@linaro.org>
    Fixes: d8c66962084f ("coresight-etm4x: Controls pertaining to the reset, mode, pe and events")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220120113047.2839622-2-james.clark@arm.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8f98a23b4adf82ad4cf1a14f080f93cff06af93
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Thu Mar 3 13:08:57 2022 +0200

    xhci: fix uninitialized string returned by xhci_decode_ctrl_ctx()
    
    commit 05519b8589a679edb8fa781259893d20bece04ad upstream.
    
    xhci_decode_ctrl_ctx() returns the untouched buffer as-is if both "drop"
    and "add" parameters are zero.
    
    Fix the function to return an empty string in that case.
    
    It was not immediately clear from the possible call chains whether this
    issue is currently actually triggerable or not.
    
    Note that before commit 4843b4b5ec64 ("xhci: fix even more unsafe memory
    usage in xhci tracing") the result effect in the failure case was different
    as a static buffer was used here, but the code still worked incorrectly.
    
    Fixes: 90d6d5731da7 ("xhci: Add tracing for input control context")
    Cc: stable@vger.kernel.org
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    commit 4843b4b5ec64 ("xhci: fix even more unsafe memory usage in xhci tracing")
    Link: https://lore.kernel.org/r/20220303110903.1662404-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b310e82e779f1ed2ec1f4df4af17e7ede0ad8fed
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu Mar 3 13:08:55 2022 +0200

    xhci: make xhci_handshake timeout for xhci_reset() adjustable
    
    commit 14073ce951b5919da450022c050772902f24f054 upstream.
    
    xhci_reset() timeout was increased from 250ms to 10 seconds in order to
    give Renesas 720201 xHC enough time to get ready in probe.
    
    xhci_reset() is called with interrupts disabled in other places, and
    waiting for 10 seconds there is not acceptable.
    
    Add a timeout parameter to xhci_reset(), and adjust it back to 250ms
    when called from xhci_stop() or xhci_shutdown() where interrupts are
    disabled, and successful reset isn't that critical.
    This solves issues when deactivating host mode on platforms like SM8450.
    
    For now don't change the timeout if xHC is reset in xhci_resume().
    No issues are reported for it, and we need the reset to succeed.
    Locking around that reset needs to be revisited later.
    
    Additionally change the signed integer timeout parameter in
    xhci_handshake() to a u64 to match the timeout value we pass to
    readl_poll_timeout_atomic()
    
    Fixes: 22ceac191211 ("xhci: Increase reset timeout for Renesas 720201 host.")
    Cc: stable@vger.kernel.org
    Reported-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Reported-by: Pavan Kondeti <quic_pkondeti@quicinc.com>
    Tested-by: Pavan Kondeti <quic_pkondeti@quicinc.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220303110903.1662404-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a771cc784a9cb04297dfc2c9c8bbd168bcfdf62b
Author: Henry Lin <henryl@nvidia.com>
Date:   Thu Mar 3 13:08:58 2022 +0200

    xhci: fix runtime PM imbalance in USB2 resume
    
    commit 70c05e4cf63054cd755ca66c1819327b22cb085f upstream.
    
    A race between system resume and device-initiated resume may result in
    runtime PM imbalance on USB2 root hub. If a device-initiated resume
    starts and system resume xhci_bus_resume() directs U0 before hub driver
    sees the resuming device in RESUME state, device-initiated resume will
    not be finished in xhci_handle_usb2_port_link_resume(). In this case,
    usb_hcd_end_port_resume() call is missing.
    
    This changes calls usb_hcd_end_port_resume() if resuming device reaches
    U0 to keep runtime PM balance.
    
    Fixes: a231ec41e6f6 ("xhci: refactor U0 link state handling in get_port_status")
    Cc: stable@vger.kernel.org
    Signed-off-by: Henry Lin <henryl@nvidia.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220303110903.1662404-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5a7ab0e1a668dc0d4d6aea7935404e1636a4c40
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Mar 17 16:39:10 2022 -0400

    USB: usb-storage: Fix use of bitfields for hardware data in ene_ub6250.c
    
    commit 1892bf90677abcad7f06e897e308f5c3e3618dd4 upstream.
    
    The kernel test robot found a problem with the ene_ub6250 subdriver in
    usb-storage: It uses structures containing bitfields to represent
    hardware bits in its SD_STATUS, MS_STATUS, and SM_STATUS bytes.  This
    is not safe; it presumes a particular bit ordering and it assumes the
    compiler will not insert padding, neither of which is guaranteed.
    
    This patch fixes the problem by changing the structures to simple u8
    values, with the bitfields replaced by bitmask constants.
    
    CC: <stable@vger.kernel.org>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/YjOcbuU106UpJ/V8@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 212765c94fc97c6addd7bbe945907c37f25701e1
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Tue Oct 26 22:40:15 2021 +0800

    virtio-blk: Use blk_validate_block_size() to validate block size
    
    commit 57a13a5b8157d9a8606490aaa1b805bafe6c37e1 upstream.
    
    The block layer can't support a block size larger than
    page size yet. And a block size that's too small or
    not a power of two won't work either. If a misconfigured
    device presents an invalid block size in configuration space,
    it will result in the kernel crash something like below:
    
    [  506.154324] BUG: kernel NULL pointer dereference, address: 0000000000000008
    [  506.160416] RIP: 0010:create_empty_buffers+0x24/0x100
    [  506.174302] Call Trace:
    [  506.174651]  create_page_buffers+0x4d/0x60
    [  506.175207]  block_read_full_page+0x50/0x380
    [  506.175798]  ? __mod_lruvec_page_state+0x60/0xa0
    [  506.176412]  ? __add_to_page_cache_locked+0x1b2/0x390
    [  506.177085]  ? blkdev_direct_IO+0x4a0/0x4a0
    [  506.177644]  ? scan_shadow_nodes+0x30/0x30
    [  506.178206]  ? lru_cache_add+0x42/0x60
    [  506.178716]  do_read_cache_page+0x695/0x740
    [  506.179278]  ? read_part_sector+0xe0/0xe0
    [  506.179821]  read_part_sector+0x36/0xe0
    [  506.180337]  adfspart_check_ICS+0x32/0x320
    [  506.180890]  ? snprintf+0x45/0x70
    [  506.181350]  ? read_part_sector+0xe0/0xe0
    [  506.181906]  bdev_disk_changed+0x229/0x5c0
    [  506.182483]  blkdev_get_whole+0x6d/0x90
    [  506.183013]  blkdev_get_by_dev+0x122/0x2d0
    [  506.183562]  device_add_disk+0x39e/0x3c0
    [  506.184472]  virtblk_probe+0x3f8/0x79b [virtio_blk]
    [  506.185461]  virtio_dev_probe+0x15e/0x1d0 [virtio]
    
    So let's use a block layer helper to validate the block size.
    
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/r/20211026144015.188-5-xieyongji@bytedance.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40f282870d6cf8be6a03575acb1cf9f631498a05
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Tue Oct 26 22:40:12 2021 +0800

    block: Add a helper to validate the block size
    
    commit 570b1cac477643cbf01a45fa5d018430a1fddbce upstream.
    
    There are some duplicated codes to validate the block
    size in block drivers. This limitation actually comes
    from block layer, so this patch tries to add a new block
    layer helper for that.
    
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Link: https://lore.kernel.org/r/20211026144015.188-2-xieyongji@bytedance.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a27ed2f3695baf15f9b34d2d7a1f9fc105539a81
Author: Lino Sanfilippo <LinoSanfilippo@gmx.de>
Date:   Wed Mar 2 10:43:53 2022 +0100

    tpm: fix reference counting for struct tpm_chip
    
    commit 7e0438f83dc769465ee663bb5dcf8cc154940712 upstream.
    
    The following sequence of operations results in a refcount warning:
    
    1. Open device /dev/tpmrm.
    2. Remove module tpm_tis_spi.
    3. Write a TPM command to the file descriptor opened at step 1.
    
    ------------[ cut here ]------------
    WARNING: CPU: 3 PID: 1161 at lib/refcount.c:25 kobject_get+0xa0/0xa4
    refcount_t: addition on 0; use-after-free.
    Modules linked in: tpm_tis_spi tpm_tis_core tpm mdio_bcm_unimac brcmfmac
    sha256_generic libsha256 sha256_arm hci_uart btbcm bluetooth cfg80211 vc4
    brcmutil ecdh_generic ecc snd_soc_core crc32_arm_ce libaes
    raspberrypi_hwmon ac97_bus snd_pcm_dmaengine bcm2711_thermal snd_pcm
    snd_timer genet snd phy_generic soundcore [last unloaded: spi_bcm2835]
    CPU: 3 PID: 1161 Comm: hold_open Not tainted 5.10.0ls-main-dirty #2
    Hardware name: BCM2711
    [<c0410c3c>] (unwind_backtrace) from [<c040b580>] (show_stack+0x10/0x14)
    [<c040b580>] (show_stack) from [<c1092174>] (dump_stack+0xc4/0xd8)
    [<c1092174>] (dump_stack) from [<c0445a30>] (__warn+0x104/0x108)
    [<c0445a30>] (__warn) from [<c0445aa8>] (warn_slowpath_fmt+0x74/0xb8)
    [<c0445aa8>] (warn_slowpath_fmt) from [<c08435d0>] (kobject_get+0xa0/0xa4)
    [<c08435d0>] (kobject_get) from [<bf0a715c>] (tpm_try_get_ops+0x14/0x54 [tpm])
    [<bf0a715c>] (tpm_try_get_ops [tpm]) from [<bf0a7d6c>] (tpm_common_write+0x38/0x60 [tpm])
    [<bf0a7d6c>] (tpm_common_write [tpm]) from [<c05a7ac0>] (vfs_write+0xc4/0x3c0)
    [<c05a7ac0>] (vfs_write) from [<c05a7ee4>] (ksys_write+0x58/0xcc)
    [<c05a7ee4>] (ksys_write) from [<c04001a0>] (ret_fast_syscall+0x0/0x4c)
    Exception stack(0xc226bfa8 to 0xc226bff0)
    bfa0:                   00000000 000105b4 00000003 beafe664 00000014 00000000
    bfc0: 00000000 000105b4 000103f8 00000004 00000000 00000000 b6f9c000 beafe684
    bfe0: 0000006c beafe648 0001056c b6eb6944
    ---[ end trace d4b8409def9b8b1f ]---
    
    The reason for this warning is the attempt to get the chip->dev reference
    in tpm_common_write() although the reference counter is already zero.
    
    Since commit 8979b02aaf1d ("tpm: Fix reference count to main device") the
    extra reference used to prevent a premature zero counter is never taken,
    because the required TPM_CHIP_FLAG_TPM2 flag is never set.
    
    Fix this by moving the TPM 2 character device handling from
    tpm_chip_alloc() to tpm_add_char_device() which is called at a later point
    in time when the flag has been set in case of TPM2.
    
    Commit fdc915f7f719 ("tpm: expose spaces via a device link /dev/tpmrm<n>")
    already introduced function tpm_devs_release() to release the extra
    reference but did not implement the required put on chip->devs that results
    in the call of this function.
    
    Fix this by putting chip->devs in tpm_chip_unregister().
    
    Finally move the new implementation for the TPM 2 handling into a new
    function to avoid multiple checks for the TPM_CHIP_FLAG_TPM2 flag in the
    good case and error cases.
    
    Cc: stable@vger.kernel.org
    Fixes: fdc915f7f719 ("tpm: expose spaces via a device link /dev/tpmrm<n>")
    Fixes: 8979b02aaf1d ("tpm: Fix reference count to main device")
    Co-developed-by: Jason Gunthorpe <jgg@ziepe.ca>
    Signed-off-by: Jason Gunthorpe <jgg@ziepe.ca>
    Signed-off-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Tested-by: Stefan Berger <stefanb@linux.ibm.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 631bb18e8371cc5e4113c9a0f8396c93e9a84acf
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Mar 3 14:40:08 2022 +0000

    iommu/iova: Improve 32-bit free space estimate
    
    commit 5b61343b50590fb04a3f6be2cdc4868091757262 upstream.
    
    For various reasons based on the allocator behaviour and typical
    use-cases at the time, when the max32_alloc_size optimisation was
    introduced it seemed reasonable to couple the reset of the tracked
    size to the update of cached32_node upon freeing a relevant IOVA.
    However, since subsequent optimisations focused on helping genuine
    32-bit devices make best use of even more limited address spaces, it
    is now a lot more likely for cached32_node to be anywhere in a "full"
    32-bit address space, and as such more likely for space to become
    available from IOVAs below that node being freed.
    
    At this point, the short-cut in __cached_rbnode_delete_update() really
    doesn't hold up any more, and we need to fix the logic to reliably
    provide the expected behaviour. We still want cached32_node to only move
    upwards, but we should reset the allocation size if *any* 32-bit space
    has become available.
    
    Reported-by: Yunfei Wang <yf.wang@mediatek.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed-by: Miles Chen <miles.chen@mediatek.com>
    Link: https://lore.kernel.org/r/033815732d83ca73b13c11485ac39336f15c3b40.1646318408.git.robin.murphy@arm.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Cc: Miles Chen <miles.chen@mediatek.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e2dee5e226b18132a20dfdbe40423cbcc4935b5
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Fri Mar 11 13:17:16 2022 +0200

    net: dsa: microchip: add spi_device_id tables
    
    [ Upstream commit e981bc74aefc6a177b50c16cfa7023599799cf74 ]
    
    Add spi_device_id tables to avoid logs like "SPI driver ksz9477-switch
    has no spi_device_id".
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef388db2fe351230ff7194b37d507784bef659ec
Author: Haimin Zhang <tcs_kernel@tencent.com>
Date:   Tue Mar 8 11:20:28 2022 +0800

    af_key: add __GFP_ZERO flag for compose_sadb_supported in function pfkey_register
    
    [ Upstream commit 9a564bccb78a76740ea9d75a259942df8143d02c ]
    
    Add __GFP_ZERO flag for compose_sadb_supported in function pfkey_register
    to initialize the buffer of supp_skb to fix a kernel-info-leak issue.
    1) Function pfkey_register calls compose_sadb_supported to request
    a sk_buff. 2) compose_sadb_supported calls alloc_sbk to allocate
    a sk_buff, but it doesn't zero it. 3) If auth_len is greater 0, then
    compose_sadb_supported treats the memory as a struct sadb_supported and
    begins to initialize. But it just initializes the field sadb_supported_len
    and field sadb_supported_exttype without field sadb_supported_reserved.
    
    Reported-by: TCS Robot <tcs_robot@tencent.com>
    Signed-off-by: Haimin Zhang <tcs_kernel@tencent.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cdb512da0726ebfc694156aad732093439b8c9d
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Wed Mar 16 17:53:17 2022 +0000

    spi: Fix erroneous sgs value with min_t()
    
    [ Upstream commit ebc4cb43ea5ada3db46c80156fca58a54b9bbca8 ]
    
    While computing sgs in spi_map_buf(), the data type
    used in min_t() for max_seg_size is 'unsigned int' where
    as that of ctlr->max_dma_len is 'size_t'.
    
    min_t(unsigned int,x,y) gives wrong results if one of x/y is
    'size_t'
    
    Consider the below examples on a 64-bit machine (ie size_t is
    64-bits, and unsigned int is 32-bit).
        case 1) min_t(unsigned int, 5, 0x100000001);
        case 2) min_t(size_t, 5, 0x100000001);
    
    Case 1 returns '1', where as case 2 returns '5'. As you can see
    the result from case 1 is wrong.
    
    This patch fixes the above issue by using the data type of the
    parameters that are used in min_t with maximum data length.
    
    Fixes: commit 1a4e53d2fc4f68aa ("spi: Fix invalid sgs value")
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Suggested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Link: https://lore.kernel.org/r/20220316175317.465-1-biju.das.jz@bp.renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab951c9c23a3a9ebc04f8d95f5c243759663892d
Author: Minghao Chi (CGEL ZTE) <chi.minghao@zte.com.cn>
Date:   Tue Mar 8 06:43:09 2022 +0000

    net:mcf8390: Use platform_get_irq() to get the interrupt
    
    [ Upstream commit 2a760554dcba450d3ad61b32375b50ed6d59a87c ]
    
    It is not recommened to use platform_get_resource(pdev, IORESOURCE_IRQ)
    for requesting IRQ's resources any more, as they can be not ready yet in
    case of DT-booting.
    
    platform_get_irq() instead is a recommended way for getting IRQ even if
    it was not retrieved earlier.
    
    It also makes code simpler because we're getting "int" value right away
    and no conversion from resource to int is required.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Minghao Chi (CGEL ZTE) <chi.minghao@zte.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e62e6c2d7aa8c81ef0d307b0c9eb0026d2a3fa5c
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Mon Mar 7 18:48:43 2022 +0000

    spi: Fix invalid sgs value
    
    [ Upstream commit 1a4e53d2fc4f68aa654ad96d13ad042e1a8e8a7d ]
    
    max_seg_size is unsigned int and it can have a value up to 2^32
    (for eg:-RZ_DMAC driver sets dma_set_max_seg_size as U32_MAX)
    When this value is used in min_t() as an integer type, it becomes
    -1 and the value of sgs becomes 0.
    
    Fix this issue by replacing the 'int' data type with 'unsigned int'
    in min_t().
    
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20220307184843.9994-1-biju.das.jz@bp.renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96f9c386fec27ad6561c82f336a0d0b6d29c5b71
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Mar 5 14:55:04 2022 +0000

    ethernet: sun: Free the coherent when failing in probing
    
    [ Upstream commit bb77bd31c281f70ec77c9c4f584950a779e05cf8 ]
    
    When the driver fails to register net device, it should free the DMA
    region first, and then do other cleanup.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa3c3746e7810b3e1ee6388cd9b9945f0e47d848
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Oct 5 03:04:10 2021 -0400

    virtio_console: break out of buf poll on remove
    
    [ Upstream commit 0e7174b9d5877130fec41fb4a16e0c2ee4958d44 ]
    
    A common pattern for device reset is currently:
    vdev->config->reset(vdev);
    .. cleanup ..
    
    reset prevents new interrupts from arriving and waits for interrupt
    handlers to finish.
    
    However if - as is common - the handler queues a work request which is
    flushed during the cleanup stage, we have code adding buffers / trying
    to get buffers while device is reset. Not good.
    
    This was reproduced by running
            modprobe virtio_console
            modprobe -r virtio_console
    in a loop.
    
    Fix this up by calling virtio_break_device + flush before reset.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1786239
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 291efbad3d6e86c003031373895110230733dbf7
Author: Lina Wang <lina.wang@mediatek.com>
Date:   Sat Feb 26 15:48:01 2022 +0800

    xfrm: fix tunnel model fragmentation behavior
    
    [ Upstream commit 4ff2980b6bd2aa6b4ded3ce3b7c0ccfab29980af ]
    
    in tunnel mode, if outer interface(ipv4) is less, it is easily to let
    inner IPV6 mtu be less than 1280. If so, a Packet Too Big ICMPV6 message
    is received. When send again, packets are fragmentized with 1280, they
    are still rejected with ICMPV6(Packet Too Big) by xfrmi_xmit2().
    
    According to RFC4213 Section3.2.2:
    if (IPv4 path MTU - 20) is less than 1280
            if packet is larger than 1280 bytes
                    Send ICMPv6 "packet too big" with MTU=1280
                    Drop packet
            else
                    Encapsulate but do not set the Don't Fragment
                    flag in the IPv4 header.  The resulting IPv4
                    packet might be fragmented by the IPv4 layer
                    on the encapsulator or by some router along
                    the IPv4 path.
            endif
    else
            if packet is larger than (IPv4 path MTU - 20)
                    Send ICMPv6 "packet too big" with
                    MTU = (IPv4 path MTU - 20).
                    Drop packet.
            else
                    Encapsulate and set the Don't Fragment flag
                    in the IPv4 header.
            endif
    endif
    Packets should be fragmentized with ipv4 outer interface, so change it.
    
    After it is fragemtized with ipv4, there will be double fragmenation.
    No.48 & No.51 are ipv6 fragment packets, No.48 is double fragmentized,
    then tunneled with IPv4(No.49& No.50), which obey spec. And received peer
    cannot decrypt it rightly.
    
    48              2002::10        2002::11 1296(length) IPv6 fragment (off=0 more=y ident=0xa20da5bc nxt=50)
    49   0x0000 (0) 2002::10        2002::11 1304         IPv6 fragment (off=0 more=y ident=0x7448042c nxt=44)
    50   0x0000 (0) 2002::10        2002::11 200          ESP (SPI=0x00035000)
    51              2002::10        2002::11 180          Echo (ping) request
    52   0x56dc     2002::10        2002::11 248          IPv6 fragment (off=1232 more=n ident=0xa20da5bc nxt=50)
    
    xfrm6_noneed_fragment has fixed above issues. Finally, it acted like below:
    1   0x6206 192.168.1.138   192.168.1.1 1316 Fragmented IP protocol (proto=Encap Security Payload 50, off=0, ID=6206) [Reassembled in #2]
    2   0x6206 2002::10        2002::11    88   IPv6 fragment (off=0 more=y ident=0x1f440778 nxt=50)
    3   0x0000 2002::10        2002::11    248  ICMPv6    Echo (ping) request
    
    Signed-off-by: Lina Wang <lina.wang@mediatek.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a83df90a3b61aa6114add75a9670a565b4856c22
Author: Lucas Zampieri <lzampier@redhat.com>
Date:   Wed Jan 26 11:44:00 2022 -0300

    HID: logitech-dj: add new lightspeed receiver id
    
    [ Upstream commit 25666e8ccd952627899b09b68f7c9b68cfeaf028 ]
    
    As of logitech lightspeed receiver fw version 04.02.B0009,
    HIDPP_PARAM_DEVICE_INFO is being reported as 0x11.
    
    With patch "HID: logitech-dj: add support for the new lightspeed receiver
    iteration", the mouse starts to error out with:
      logitech-djreceiver: unusable device of type UNKNOWN (0x011) connected on
      slot 1
    and becomes unusable.
    
    This has been noticed on a Logitech G Pro X Superlight fw MPM 25.01.B0018.
    
    Signed-off-by: Lucas Zampieri <lzampier@redhat.com>
    Acked-by: Nestor Lopez Casado <nlopezcasad@logitech.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c727ba42ca34b53aec44f7791c6083215911f5b
Author: Yajun Deng <yajun.deng@linux.dev>
Date:   Thu Aug 5 19:54:34 2021 +0800

    netdevice: add the case if dev is NULL
    
    commit b37a466837393af72fe8bcb8f1436410f3f173f3 upstream.
    
    Add the case if dev is NULL in dev_{put, hold}, so the caller doesn't
    need to care whether dev is NULL or not.
    
    Signed-off-by: Yajun Deng <yajun.deng@linux.dev>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Pavel Machek <pavel@denx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e9c9e3f626a0032c9d1f72aea1fe6517028a6bc
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Feb 28 09:49:19 2022 +0100

    USB: serial: simple: add Nokia phone driver
    
    commit c4b9c570965f75d0d55e639747f1e5ccdad2fae0 upstream.
    
    Add a new "simple" driver for certain Nokia phones, including Nokia 130
    (RM-1035) which exposes two serial ports in "charging only" mode:
    
    Bus 001 Device 009: ID 0421:069a Nokia Mobile Phones 130 [RM-1035] (Charging only)
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               2.00
      bDeviceClass            0
      bDeviceSubClass         0
      bDeviceProtocol         0
      bMaxPacketSize0         8
      idVendor           0x0421 Nokia Mobile Phones
      idProduct          0x069a 130 [RM-1035] (Charging only)
      bcdDevice            1.00
      iManufacturer           1 Nokia
      iProduct                2 Nokia 130 (RM-1035)
      iSerial                 0
      bNumConfigurations      1
      Configuration Descriptor:
        bLength                 9
        bDescriptorType         2
        wTotalLength       0x0037
        bNumInterfaces          2
        bConfigurationValue     1
        iConfiguration          0
        bmAttributes         0x80
          (Bus Powered)
        MaxPower              500mA
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        0
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass    255 Vendor Specific Subclass
          bInterfaceProtocol    255 Vendor Specific Protocol
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x81  EP 1 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x01  EP 1 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        1
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass    255 Vendor Specific Subclass
          bInterfaceProtocol    255 Vendor Specific Protocol
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x82  EP 2 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x02  EP 2 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
    Device Status:     0x0000
      (Bus Powered)
    
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220228084919.10656-1-johan@kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80e5bf89a895fa3273cac58369147a67eba5fcb3
Author: Eddie James <eajames@linux.ibm.com>
Date:   Tue Mar 1 16:44:46 2022 -0600

    USB: serial: pl2303: add IBM device IDs
    
    commit e1d15646565b284e9ef2433234d6cfdaf66695f1 upstream.
    
    IBM manufactures a PL2303 device for UPS communications. Add the vendor
    and product IDs so that the PL2303 driver binds to the device.
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Link: https://lore.kernel.org/r/20220301224446.21236-1-eajames@linux.ibm.com
    Cc: stable@vger.kernel.org
    [ johan: amend the SoB chain ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bfc5377a210dbda2a237f16d94d1bd4f1335026
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Fri Feb 11 02:12:52 2022 +0100

    swiotlb: fix info leak with DMA_FROM_DEVICE
    
    commit ddbd89deb7d32b1fbb879f48d68fda1a8ac58e8e upstream.
    
    The problem I'm addressing was discovered by the LTP test covering
    cve-2018-1000204.
    
    A short description of what happens follows:
    1) The test case issues a command code 00 (TEST UNIT READY) via the SG_IO
       interface with: dxfer_len == 524288, dxdfer_dir == SG_DXFER_FROM_DEV
       and a corresponding dxferp. The peculiar thing about this is that TUR
       is not reading from the device.
    2) In sg_start_req() the invocation of blk_rq_map_user() effectively
       bounces the user-space buffer. As if the device was to transfer into
       it. Since commit a45b599ad808 ("scsi: sg: allocate with __GFP_ZERO in
       sg_build_indirect()") we make sure this first bounce buffer is
       allocated with GFP_ZERO.
    3) For the rest of the story we keep ignoring that we have a TUR, so the
       device won't touch the buffer we prepare as if the we had a
       DMA_FROM_DEVICE type of situation. My setup uses a virtio-scsi device
       and the  buffer allocated by SG is mapped by the function
       virtqueue_add_split() which uses DMA_FROM_DEVICE for the "in" sgs (here
       scatter-gather and not scsi generics). This mapping involves bouncing
       via the swiotlb (we need swiotlb to do virtio in protected guest like
       s390 Secure Execution, or AMD SEV).
    4) When the SCSI TUR is done, we first copy back the content of the second
       (that is swiotlb) bounce buffer (which most likely contains some
       previous IO data), to the first bounce buffer, which contains all
       zeros.  Then we copy back the content of the first bounce buffer to
       the user-space buffer.
    5) The test case detects that the buffer, which it zero-initialized,
      ain't all zeros and fails.
    
    One can argue that this is an swiotlb problem, because without swiotlb
    we leak all zeros, and the swiotlb should be transparent in a sense that
    it does not affect the outcome (if all other participants are well
    behaved).
    
    Copying the content of the original buffer into the swiotlb buffer is
    the only way I can think of to make swiotlb transparent in such
    scenarios. So let's do just that if in doubt, but allow the driver
    to tell us that the whole mapped buffer is going to be overwritten,
    in which case we can preserve the old behavior and avoid the performance
    impact of the extra bounce.
    
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
