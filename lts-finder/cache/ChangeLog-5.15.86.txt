commit 90ffbb727c511c6de9c5905c8d5aba69e413bcba
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Dec 31 13:14:48 2022 +0100

    Linux 5.15.86
    
    Link: https://lore.kernel.org/r/20221228144256.536395940@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Thierry Reding <treding@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20221230094021.575121238@linuxfoundation.org
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Ron Economos <re@w6rz.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3082f8705e82bd388953f1db819a9ff7f0d8a7a6
Author: Steven Price <steven.price@arm.com>
Date:   Thu Nov 10 11:45:48 2022 +0000

    pwm: tegra: Fix 32 bit build
    
    [ Upstream commit dd1f1da4ada5d8ac774c2ebe97230637820b3323 ]
    
    The value of NSEC_PER_SEC << PWM_DUTY_WIDTH doesn't fix within a 32 bit
    integer causing a build warning/error (and the value truncated):
    
      drivers/pwm/pwm-tegra.c: In function ‘tegra_pwm_config’:
      drivers/pwm/pwm-tegra.c:148:53: error: result of ‘1000000000 << 8’ requires 39 bits to represent, but ‘long int’ only has 32 bits [-Werror=shift-overflow=]
        148 |   required_clk_rate = DIV_ROUND_UP_ULL(NSEC_PER_SEC << PWM_DUTY_WIDTH,
            |                                                     ^~
    
    Explicitly cast to a u64 to ensure the correct result.
    
    Fixes: cfcb68817fb3 ("pwm: tegra: Improve required rate calculation")
    Signed-off-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit caa40d1f8524d24c9a76d514805c56f618cd069d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Nov 20 14:01:43 2022 +0100

    mfd: qcom_rpm: Use devm_of_platform_populate() to simplify code
    
    [ Upstream commit e48dee96046246980d476714b3f6684d45f29c13 ]
    
    Use devm_of_platform_populate() instead of hand-writing it.
    This simplifies the code.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/fd997dc92b9cee219e9c55e22959a94f4bbf570b.1668949256.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 408dbaa0657861b1fe9feb95463d6f0fa661f6e4
Author: Yassine Oudjana <y.oudjana@protonmail.com>
Date:   Mon Nov 7 18:33:17 2022 +0300

    extcon: usbc-tusb320: Call the Type-C IRQ handler only if a port is registered
    
    commit 341fd15e2e18c24d5c738496cfc3d7a272241201 upstream.
    
    Commit bf7571c00dca ("extcon: usbc-tusb320: Add USB TYPE-C support")
    added an optional Type-C interface to the driver but missed to check
    if it is in use when calling the IRQ handler. This causes an oops on
    devices currently using the old extcon interface. Check if a Type-C
    port is registered before calling the Type-C IRQ handler.
    
    Fixes: bf7571c00dca ("extcon: usbc-tusb320: Add USB TYPE-C support")
    Signed-off-by: Yassine Oudjana <y.oudjana@protonmail.com>
    Reviewed-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20221107153317.657803-1-y.oudjana@protonmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2471a44769b53effd8f602ac87ca47a5d8710edb
Author: Lin Ma <linma@zju.edu.cn>
Date:   Mon Nov 28 16:21:59 2022 +0000

    media: dvbdev: fix refcnt bug
    
    commit 3a664569b71b0a52be5ffb9fb87cc4f83d29bd71 upstream.
    
    Previous commit initialize the dvbdev->ref before the template copy,
    which will overwrite the reference and cause refcnt bug.
    
    refcount_t: addition on 0; use-after-free.
    WARNING: CPU: 0 PID: 1 at lib/refcount.c:25 refcount_warn_saturate+0x17c/0x1f0 lib/refcount.c:25
    Modules linked in:
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 6.1.0-rc6-next-20221128-syzkaller #0
    ...
    RIP: 0010:refcount_warn_saturate+0x17c/0x1f0 lib/refcount.c:25
    RSP: 0000:ffffc900000678d0 EFLAGS: 00010282
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: ffff88813ff58000 RSI: ffffffff81660e7c RDI: fffff5200000cf0c
    RBP: ffff888022a45010 R08: 0000000000000005 R09: 0000000000000000
    R10: 0000000080000000 R11: 0000000000000000 R12: 0000000000000001
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000001
    FS:  0000000000000000(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffff88823ffff000 CR3: 000000000c48e000 CR4: 00000000003506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     __refcount_add include/linux/refcount.h:199 [inline]
     __refcount_inc include/linux/refcount.h:250 [inline]
     refcount_inc include/linux/refcount.h:267 [inline]
     kref_get include/linux/kref.h:45 [inline]
     dvb_device_get drivers/media/dvb-core/dvbdev.c:585 [inline]
     dvb_register_device+0xe83/0x16e0 drivers/media/dvb-core/dvbdev.c:517
    ...
    
    Just place the kref_init at correct position.
    
    Reported-by: syzbot+fce48a3dd3368645bd6c@syzkaller.appspotmail.com
    Fixes: 0fc044b2b5e2 ("media: dvbdev: adopts refcnt to avoid UAF")
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 579fb0a3320b44be9c2636161ea2a3472edd8290
Author: Lin Ma <linma@zju.edu.cn>
Date:   Mon Nov 28 08:39:03 2022 +0000

    media: dvbdev: fix build warning due to comments
    
    commit 3edfd14bb50fa6f94ed1a37bbb17d9f1c2793b57 upstream.
    
    Previous commit that introduces reference counter does not add proper
    comments, which will lead to warning when building htmldocs. Fix them.
    
    Reported-by: "Stephen Rothwell" <sfr@canb.auug.org.au>
    Fixes: 0fc044b2b5e2 ("media: dvbdev: adopts refcnt to avoid UAF")
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1115e77c4fddf73ab68349495be6cb5f0af096f9
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Wed Dec 14 16:01:17 2022 +0800

    net: stmmac: fix errno when create_singlethread_workqueue() fails
    
    commit 2cb815cfc78b137ee38bcd65e7c955d6cc2cc250 upstream.
    
    We should set the return value to -ENOMEM explicitly when
    create_singlethread_workqueue() fails in stmmac_dvr_probe(),
    otherwise we'll lose the error value.
    
    Fixes: a137f3f27f92 ("net: stmmac: fix possible memory leak in stmmac_dvr_probe()")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20221214080117.3514615-1-cuigaosheng1@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3871af13aa03fbbe7fbb812eaf140501229a72e
Author: Arun Easi <aeasi@marvell.com>
Date:   Tue Nov 29 01:26:34 2022 -0800

    scsi: qla2xxx: Fix crash when I/O abort times out
    
    commit 68ad83188d782b2ecef2e41ac245d27e0710fe8e upstream.
    
    While performing CPU hotplug, a crash with the following stack was seen:
    
    Call Trace:
         qla24xx_process_response_queue+0x42a/0x970 [qla2xxx]
         qla2x00_start_nvme_mq+0x3a2/0x4b0 [qla2xxx]
         qla_nvme_post_cmd+0x166/0x240 [qla2xxx]
         nvme_fc_start_fcp_op.part.0+0x119/0x2e0 [nvme_fc]
         blk_mq_dispatch_rq_list+0x17b/0x610
         __blk_mq_sched_dispatch_requests+0xb0/0x140
         blk_mq_sched_dispatch_requests+0x30/0x60
         __blk_mq_run_hw_queue+0x35/0x90
         __blk_mq_delay_run_hw_queue+0x161/0x180
         blk_execute_rq+0xbe/0x160
         __nvme_submit_sync_cmd+0x16f/0x220 [nvme_core]
         nvmf_connect_admin_queue+0x11a/0x170 [nvme_fabrics]
         nvme_fc_create_association.cold+0x50/0x3dc [nvme_fc]
         nvme_fc_connect_ctrl_work+0x19/0x30 [nvme_fc]
         process_one_work+0x1e8/0x3c0
    
    On abort timeout, completion was called without checking if the I/O was
    already completed.
    
    Verify that I/O and abort request are indeed outstanding before attempting
    completion.
    
    Fixes: 71c80b75ce8f ("scsi: qla2xxx: Do command completion on abort timeout")
    Reported-by: Marco Patalano <mpatalan@redhat.com>
    Tested-by: Marco Patalano <mpatalan@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20221129092634.15347-1-njavali@marvell.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50f993da945074b2a069da099a0331b23a0c89a0
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Nov 28 15:07:30 2022 +0000

    btrfs: do not BUG_ON() on ENOMEM when dropping extent items for a range
    
    commit 162d053e15fe985f754ef495a96eb3db970c43ed upstream.
    
    If we get -ENOMEM while dropping file extent items in a given range, at
    btrfs_drop_extents(), due to failure to allocate memory when attempting to
    increment the reference count for an extent or drop the reference count,
    we handle it with a BUG_ON(). This is excessive, instead we can simply
    abort the transaction and return the error to the caller. In fact most
    callers of btrfs_drop_extents(), directly or indirectly, already abort
    the transaction if btrfs_drop_extents() returns any error.
    
    Also, we already have error paths at btrfs_drop_extents() that may return
    -ENOMEM and in those cases we abort the transaction, like for example
    anything that changes the b+tree may return -ENOMEM due to a failure to
    allocate a new extent buffer when COWing an existing extent buffer, such
    as a call to btrfs_duplicate_item() for example.
    
    So replace the BUG_ON() calls with proper logic to abort the transaction
    and return the error.
    
    Reported-by: syzbot+0b1fb6b0108c27419f9f@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/linux-btrfs/00000000000089773e05ee4b9cb4@google.com/
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c65d50315dbe160ed483c68f0d044adb2630b47
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Mon Nov 28 11:33:05 2022 +0100

    ovl: fix use inode directly in rcu-walk mode
    
    commit 672e4268b2863d7e4978dfed29552b31c2f9bd4e upstream.
    
    ovl_dentry_revalidate_common() can be called in rcu-walk mode.  As document
    said, "in rcu-walk mode, d_parent and d_inode should not be used without
    care".
    
    Check inode here to protect access under rcu-walk mode.
    
    Fixes: bccece1ead36 ("ovl: allow remote upper")
    Reported-and-tested-by: syzbot+a4055c78774bbf3498bb@syzkaller.appspotmail.com
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Cc: <stable@vger.kernel.org> # v5.7
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88ec6d11052da527eb9268831e7a9bc5bbad02f6
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Tue Dec 6 07:10:31 2022 +0900

    fbdev: fbcon: release buffer when fbcon_do_set_font() failed
    
    commit 3c3bfb8586f848317ceba5d777e11204ba3e5758 upstream.
    
    syzbot is reporting memory leak at fbcon_do_set_font() [1], for
    commit a5a923038d70 ("fbdev: fbcon: Properly revert changes when
    vc_resize() failed") missed that the buffer might be newly allocated
    by fbcon_set_font().
    
    Link: https://syzkaller.appspot.com/bug?extid=25bdb7b1703639abd498 [1]
    Reported-by: syzbot <syzbot+25bdb7b1703639abd498@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Tested-by: syzbot <syzbot+25bdb7b1703639abd498@syzkaller.appspotmail.com>
    Fixes: a5a923038d70 ("fbdev: fbcon: Properly revert changes when vc_resize() failed")
    CC: stable@vger.kernel.org # 5.15+
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca8bcb348aa826bb5a3cb694636a6ac78a7aaee3
Author: Rickard x Andersson <rickaran@axis.com>
Date:   Tue Dec 20 11:23:18 2022 +0100

    gcov: add support for checksum field
    
    commit e96b95c2b7a63a454b6498e2df67aac14d046d13 upstream.
    
    In GCC version 12.1 a checksum field was added.
    
    This patch fixes a kernel crash occurring during boot when using
    gcov-kernel with GCC version 12.2.  The crash occurred on a system running
    on i.MX6SX.
    
    Link: https://lkml.kernel.org/r/20221220102318.3418501-1-rickaran@axis.com
    Fixes: 977ef30a7d88 ("gcov: support GCC 12.1 and newer compilers")
    Signed-off-by: Rickard x Andersson <rickaran@axis.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Tested-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Reviewed-by: Martin Liska <mliska@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f36d8c8651506aea5f09899f5356ece5d1384f50
Author: Yuan Can <yuancan@huawei.com>
Date:   Mon Oct 31 12:04:43 2022 +0000

    floppy: Fix memory leak in do_floppy_init()
    
    commit f8ace2e304c5dd8a7328db9cd2b8a4b1b98d83ec upstream.
    
    A memory leak was reported when floppy_alloc_disk() failed in
    do_floppy_init().
    
    unreferenced object 0xffff888115ed25a0 (size 8):
      comm "modprobe", pid 727, jiffies 4295051278 (age 25.529s)
      hex dump (first 8 bytes):
        00 ac 67 5b 81 88 ff ff                          ..g[....
      backtrace:
        [<000000007f457abb>] __kmalloc_node+0x4c/0xc0
        [<00000000a87bfa9e>] blk_mq_realloc_tag_set_tags.part.0+0x6f/0x180
        [<000000006f02e8b1>] blk_mq_alloc_tag_set+0x573/0x1130
        [<0000000066007fd7>] 0xffffffffc06b8b08
        [<0000000081f5ac40>] do_one_initcall+0xd0/0x4f0
        [<00000000e26d04ee>] do_init_module+0x1a4/0x680
        [<000000001bb22407>] load_module+0x6249/0x7110
        [<00000000ad31ac4d>] __do_sys_finit_module+0x140/0x200
        [<000000007bddca46>] do_syscall_64+0x35/0x80
        [<00000000b5afec39>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    unreferenced object 0xffff88810fc30540 (size 32):
      comm "modprobe", pid 727, jiffies 4295051278 (age 25.529s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<000000007f457abb>] __kmalloc_node+0x4c/0xc0
        [<000000006b91eab4>] blk_mq_alloc_tag_set+0x393/0x1130
        [<0000000066007fd7>] 0xffffffffc06b8b08
        [<0000000081f5ac40>] do_one_initcall+0xd0/0x4f0
        [<00000000e26d04ee>] do_init_module+0x1a4/0x680
        [<000000001bb22407>] load_module+0x6249/0x7110
        [<00000000ad31ac4d>] __do_sys_finit_module+0x140/0x200
        [<000000007bddca46>] do_syscall_64+0x35/0x80
        [<00000000b5afec39>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    If the floppy_alloc_disk() failed, disks of current drive will not be set,
    thus the lastest allocated set->tag cannot be freed in the error handling
    path. A simple call graph shown as below:
    
     floppy_module_init()
       floppy_init()
         do_floppy_init()
           for (drive = 0; drive < N_DRIVE; drive++)
             blk_mq_alloc_tag_set()
               blk_mq_alloc_tag_set_tags()
                 blk_mq_realloc_tag_set_tags() # set->tag allocated
             floppy_alloc_disk()
               blk_mq_alloc_disk() # error occurred, disks failed to allocated
    
           ->out_put_disk:
           for (drive = 0; drive < N_DRIVE; drive++)
             if (!disks[drive][0]) # the last disks is not set and loop break
               break;
             blk_mq_free_tag_set() # the latest allocated set->tag leaked
    
    Fix this problem by free the set->tag of current drive before jump to
    error handling path.
    
    Cc: stable@vger.kernel.org
    Fixes: 302cfee15029 ("floppy: use a separate gendisk for each media format")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    [efremov: added stable list, changed title]
    Signed-off-by: Denis Efremov <efremov@linux.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4193a6745b83a4ca3474e63037c7833ed3c4ff11
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Thu Dec 15 11:46:46 2022 +0100

    regulator: core: fix deadlock on regulator enable
    
    commit cb3543cff90a4448ed560ac86c98033ad5fecda9 upstream.
    
    When updating the operating mode as part of regulator enable, the caller
    has already locked the regulator tree and drms_uA_update() must not try
    to do the same in order not to trigger a deadlock.
    
    The lock inversion is reported by lockdep as:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      6.1.0-next-20221215 #142 Not tainted
      ------------------------------------------------------
      udevd/154 is trying to acquire lock:
      ffffc11f123d7e50 (regulator_list_mutex){+.+.}-{3:3}, at: regulator_lock_dependent+0x54/0x280
    
      but task is already holding lock:
      ffff80000e4c36e8 (regulator_ww_class_acquire){+.+.}-{0:0}, at: regulator_enable+0x34/0x80
    
      which lock already depends on the new lock.
    
      ...
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(regulator_ww_class_acquire);
                                     lock(regulator_list_mutex);
                                     lock(regulator_ww_class_acquire);
        lock(regulator_list_mutex);
    
       *** DEADLOCK ***
    
    just before probe of a Qualcomm UFS controller (occasionally) deadlocks
    when enabling one of its regulators.
    
    Fixes: 9243a195be7a ("regulator: core: Change voltage setting path")
    Fixes: f8702f9e4aa7 ("regulator: core: Use ww_mutex for regulators locking")
    Cc: stable@vger.kernel.org      # 5.0
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Link: https://lore.kernel.org/r/20221215104646.19818-1-johan+linaro@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce5d0ef1cf566724dbc16db45d60f60dd9ed0050
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Tue Nov 15 14:23:23 2022 +0100

    iio: adc128s052: add proper .data members in adc128_of_match table
    
    commit e2af60f5900c6ade53477b494ffb54690eee11f5 upstream.
    
    Prior to commit bd5d54e4d49d ("iio: adc128s052: add ACPI _HID
    AANT1280"), the driver unconditionally used spi_get_device_id() to get
    the index into the adc128_config array.
    
    However, with that commit, OF-based boards now incorrectly treat all
    supported sensors as if they are an adc128s052, because all the .data
    members of the adc128_of_match table are implicitly 0. Our board,
    which has an adc122s021, thus exposes 8 channels whereas it really
    only has two.
    
    Fixes: bd5d54e4d49d ("iio: adc128s052: add ACPI _HID AANT1280")
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20221115132324.1078169-1-linux@rasmusvillemoes.dk
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aec1058f2a92f1ab24eac96fc100df793e35a93f
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Tue Sep 20 13:28:07 2022 +0200

    iio: adc: ad_sigma_delta: do not use internal iio_dev lock
    
    commit 20228a1d5a55e7db0c6720840f2c7d2b48c55f69 upstream.
    
    Drop 'mlock' usage by making use of iio_device_claim_direct_mode().
    This change actually makes sure we cannot do a single conversion while
    buffering is enable. Note there was a potential race in the previous
    code since we were only acquiring the lock after checking if the bus is
    enabled.
    
    Fixes: af3008485ea0 ("iio:adc: Add common code for ADI Sigma Delta devices")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Reviewed-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Cc: <Stable@vger.kernel.org> #No rush as race is very old.
    Link: https://lore.kernel.org/r/20220920112821.975359-2-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc6afd6070f3a5b086c8c5cfa6ded63ae44494da
Author: Zeng Heng <zengheng4@huawei.com>
Date:   Tue Nov 15 10:37:12 2022 +0800

    iio: fix memory leak in iio_device_register_eventset()
    
    commit 86fdd15e10e404e70ecb2a3bff24d70356d42b36 upstream.
    
    When iio_device_register_sysfs_group() returns failed,
    iio_device_register_eventset() needs to free attrs array.
    
    Otherwise, kmemleak would scan & report memory leak as below:
    
    unreferenced object 0xffff88810a1cc3c0 (size 32):
      comm "100-i2c-vcnl302", pid 728, jiffies 4295052307 (age 156.027s)
      backtrace:
        __kmalloc+0x46/0x1b0
        iio_device_register_eventset at drivers/iio/industrialio-event.c:541
        __iio_device_register at drivers/iio/industrialio-core.c:1959
        __devm_iio_device_register at drivers/iio/industrialio-core.c:2040
    
    Fixes: 32f171724e5c ("iio: core: rework iio device group creation")
    Signed-off-by: Zeng Heng <zengheng4@huawei.com>
    Link: https://lore.kernel.org/r/20221115023712.3726854-1-zengheng4@huawei.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38c257ee6a5ae5be6d919d4458743195fd17db85
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Thu Nov 10 10:46:35 2022 +0100

    reiserfs: Add missing calls to reiserfs_security_free()
    
    commit 572302af1258459e124437b8f3369357447afac7 upstream.
    
    Commit 57fe60df6241 ("reiserfs: add atomic addition of selinux attributes
    during inode creation") defined reiserfs_security_free() to free the name
    and value of a security xattr allocated by the active LSM through
    security_old_inode_init_security(). However, this function is not called
    in the reiserfs code.
    
    Thus, add a call to reiserfs_security_free() whenever
    reiserfs_security_init() is called, and initialize value to NULL, to avoid
    to call kfree() on an uninitialized pointer.
    
    Finally, remove the kfree() for the xattr name, as it is not allocated
    anymore.
    
    Fixes: 57fe60df6241 ("reiserfs: add atomic addition of selinux attributes during inode creation")
    Cc: stable@vger.kernel.org
    Cc: Jeff Mahoney <jeffm@suse.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: Mimi Zohar <zohar@linux.ibm.com>
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Reviewed-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a4236456a3a402f6bb92aa7b75e7a3b4ef7a72c
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Dec 14 16:26:03 2022 -0700

    security: Restrict CONFIG_ZERO_CALL_USED_REGS to gcc or clang > 15.0.6
    
    commit d6a9fb87e9d18f3394a9845546bbe868efdccfd2 upstream.
    
    A bad bug in clang's implementation of -fzero-call-used-regs can result
    in NULL pointer dereferences (see the links above the check for more
    information). Restrict CONFIG_CC_HAS_ZERO_CALL_USED_REGS to either a
    supported GCC version or a clang newer than 15.0.6, which will catch
    both a theoretical 15.0.7 and the upcoming 16.0.0, which will both have
    the bug fixed.
    
    Cc: stable@vger.kernel.org # v5.15+
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221214232602.4118147-1-nathan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cabce56626a61f4f02452cba61ad4332a4b73f8
Author: Schspa Shi <schspa@gmail.com>
Date:   Thu Dec 1 11:33:10 2022 +0800

    9p: set req refcount to zero to avoid uninitialized usage
    
    commit 26273ade77f54716e30dfd40ac6e85ceb54ac0f9 upstream.
    
    When a new request is allocated, the refcount will be zero if it is
    reused, but if the request is newly allocated from slab, it is not fully
    initialized before being added to idr.
    
    If the p9_read_work got a response before the refcount initiated. It will
    use a uninitialized req, which will result in a bad request data struct.
    
    Here is the logs from syzbot.
    
    Corrupted memory at 0xffff88807eade00b [ 0xff 0x07 0x00 0x00 0x00 0x00
    0x00 0x00 . . . . . . . . ] (in kfence-#110):
     p9_fcall_fini net/9p/client.c:248 [inline]
     p9_req_put net/9p/client.c:396 [inline]
     p9_req_put+0x208/0x250 net/9p/client.c:390
     p9_client_walk+0x247/0x540 net/9p/client.c:1165
     clone_fid fs/9p/fid.h:21 [inline]
     v9fs_fid_xattr_set+0xe4/0x2b0 fs/9p/xattr.c:118
     v9fs_xattr_set fs/9p/xattr.c:100 [inline]
     v9fs_xattr_handler_set+0x6f/0x120 fs/9p/xattr.c:159
     __vfs_setxattr+0x119/0x180 fs/xattr.c:182
     __vfs_setxattr_noperm+0x129/0x5f0 fs/xattr.c:216
     __vfs_setxattr_locked+0x1d3/0x260 fs/xattr.c:277
     vfs_setxattr+0x143/0x340 fs/xattr.c:309
     setxattr+0x146/0x160 fs/xattr.c:617
     path_setxattr+0x197/0x1c0 fs/xattr.c:636
     __do_sys_setxattr fs/xattr.c:652 [inline]
     __se_sys_setxattr fs/xattr.c:648 [inline]
     __ia32_sys_setxattr+0xc0/0x160 fs/xattr.c:648
     do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]
     __do_fast_syscall_32+0x65/0xf0 arch/x86/entry/common.c:178
     do_fast_syscall_32+0x33/0x70 arch/x86/entry/common.c:203
     entry_SYSENTER_compat_after_hwframe+0x70/0x82
    
    Below is a similar scenario, the scenario in the syzbot log looks more
    complicated than this one, but this patch can fix it.
    
         T21124                   p9_read_work
    ======================== second trans =================================
    p9_client_walk
      p9_client_rpc
        p9_client_prepare_req
          p9_tag_alloc
            req = kmem_cache_alloc(p9_req_cache, GFP_NOFS);
            tag = idr_alloc
            << preempted >>
            req->tc.tag = tag;
                                /* req->[refcount/tag] == uninitialized */
                                m->rreq = p9_tag_lookup(m->client, m->rc.tag);
                                  /* increments uninitalized refcount */
    
            refcount_set(&req->refcount, 2);
                                /* cb drops one ref */
                                p9_client_cb(req)
                                /* reader thread drops its ref:
                                   request is incorrectly freed */
                                p9_req_put(req)
        /* use after free and ref underflow */
        p9_req_put(req)
    
    To fix it, we can initialize the refcount to zero before add to idr.
    
    Link: https://lkml.kernel.org/r/20221201033310.18589-1-schspa@gmail.com
    Cc: stable@vger.kernel.org # 6.0+ due to 6cda12864cb0 ("9p: Drop kref usage")
    Fixes: 728356dedeff ("9p: Add refcount to p9_req_t")
    Reported-by: syzbot+8f1060e2aaf8ca55220b@syzkaller.appspotmail.com
    Signed-off-by: Schspa Shi <schspa@gmail.com>
    Reviewed-by: Christian Schoenebeck <linux_oss@crudebyte.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd2157a98f9235f3d28210b10427f3c6d9751d6c
Author: Isaac J. Manjarres <isaacmanjarres@google.com>
Date:   Thu Dec 8 13:29:01 2022 -0800

    loop: Fix the max_loop commandline argument treatment when it is set to 0
    
    commit 85c50197716c60fe57f411339c579462e563ac57 upstream.
    
    Currently, the max_loop commandline argument can be used to specify how
    many loop block devices are created at init time. If it is not
    specified on the commandline, CONFIG_BLK_DEV_LOOP_MIN_COUNT loop block
    devices will be created.
    
    The max_loop commandline argument can be used to override the value of
    CONFIG_BLK_DEV_LOOP_MIN_COUNT. However, when max_loop is set to 0
    through the commandline, the current logic treats it as if it had not
    been set, and creates CONFIG_BLK_DEV_LOOP_MIN_COUNT devices anyway.
    
    Fix this by starting max_loop off as set to CONFIG_BLK_DEV_LOOP_MIN_COUNT.
    This preserves the intended behavior of creating
    CONFIG_BLK_DEV_LOOP_MIN_COUNT loop block devices if the max_loop
    commandline parameter is not specified, and allowing max_loop to
    be respected for all values, including 0.
    
    This allows environments that can create all of their required loop
    block devices on demand to not have to unnecessarily preallocate loop
    block devices.
    
    Fixes: 732850827450 ("remove artificial software max_loop limit")
    Cc: stable@vger.kernel.org
    Cc: Ken Chen <kenchen@google.com>
    Signed-off-by: Isaac J. Manjarres <isaacmanjarres@google.com>
    Link: https://lore.kernel.org/r/20221208212902.765781-1-isaacmanjarres@google.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd03bd4c7b0a5cf1f4fde3c1f367d4dd53891610
Author: Enrik Berkhan <Enrik.Berkhan@inka.de>
Date:   Thu Nov 3 23:27:12 2022 +0100

    HID: mcp2221: don't connect hidraw
    
    commit 67c90d14018775556d5420382ace86521421f9ff upstream.
    
    The MCP2221 driver should not connect to the hidraw userspace interface,
    as it needs exclusive access to the chip.
    
    If you want to use /dev/hidrawX with the MCP2221, you need to avoid
    binding this driver to the device and use the hid generic driver instead
    (e.g. using udev rules).
    
    Cc: stable@vger.kernel.org
    Reported-by: Sven Zühlsdorf <sven.zuehlsdorf@vigem.de>
    Signed-off-by: Enrik Berkhan <Enrik.Berkhan@inka.de>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20221103222714.21566-2-Enrik.Berkhan@inka.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c886be1ff76fae84a58c09af9e3c39d2a324372
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Thu Dec 1 15:11:41 2022 -0800

    HID: wacom: Ensure bootloader PID is usable in hidraw mode
    
    commit 1db1f392591aff13fd643f0ec7c1d5e27391d700 upstream.
    
    Some Wacom devices have a special "bootloader" mode that is used for
    firmware flashing. When operating in this mode, the device cannot be
    used for input, and the HID descriptor is not able to be processed by
    the driver. The driver generates an "Unknown device_type" warning and
    then returns an error code from wacom_probe(). This is a problem because
    userspace still needs to be able to interact with the device via hidraw
    to perform the firmware flash.
    
    This commit adds a non-generic device definition for 056a:0094 which
    is used when devices are in "bootloader" mode. It marks the devices
    with a special BOOTLOADER type that is recognized by wacom_probe() and
    wacom_raw_event(). When we see this type we ensure a hidraw device is
    created and otherwise keep our hands off so that userspace is in full
    control.
    
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Tested-by: Tatsunosuke Tobita <tatsunosuke.tobita@wacom.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d640eb1129dd0448044b29761512bba2dab2f21
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Wed Nov 30 11:19:43 2022 +0200

    xhci: Prevent infinite loop in transaction errors recovery for streams
    
    commit a1575120972ecd7baa6af6a69e4e7ea9213bde7c upstream.
    
    Make sure to also limit the amount of soft reset retries for transaction
    errors on streams in cases where the transaction error event doesn't point
    to any specific TRB.
    
    In these cases we don't know the TRB or stream ring, but we do know which
    endpoint had the error.
    
    To keep error counting simple and functional, move the current err_count
    from ring structure to endpoint structure.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20221130091944.2171610-6-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 936c5f96c896627310473374142ed766ae2cae9e
Author: Ferry Toth <ftoth@exalondelft.nl>
Date:   Mon Dec 5 21:15:27 2022 +0100

    usb: dwc3: core: defer probe on ulpi_read_id timeout
    
    commit 63130462c919ece0ad0d9bb5a1f795ef8d79687e upstream.
    
    Since commit 0f0101719138 ("usb: dwc3: Don't switch OTG -> peripheral
    if extcon is present"), Dual Role support on Intel Merrifield platform
    broke due to rearranging the call to dwc3_get_extcon().
    
    It appears to be caused by ulpi_read_id() masking the timeout on the first
    test write. In the past dwc3 probe continued by calling dwc3_core_soft_reset()
    followed by dwc3_get_extcon() which happend to return -EPROBE_DEFER.
    On deferred probe ulpi_read_id() finally succeeded. Due to above mentioned
    rearranging -EPROBE_DEFER is not returned and probe completes without phy.
    
    On Intel Merrifield the timeout on the first test write issue is reproducible
    but it is difficult to find the root cause. Using a mainline kernel and
    rootfs with buildroot ulpi_read_id() succeeds. As soon as adding
    ftrace / bootconfig to find out why, ulpi_read_id() fails and we can't
    analyze the flow. Using another rootfs ulpi_read_id() fails even without
    adding ftrace. We suspect the issue is some kind of timing / race, but
    merely retrying ulpi_read_id() does not resolve the issue.
    
    As we now changed ulpi_read_id() to return -ETIMEDOUT in this case, we
    need to handle the error by calling dwc3_core_soft_reset() and request
    -EPROBE_DEFER. On deferred probe ulpi_read_id() is retried and succeeds.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable@vger.kernel.org
    Acked-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Signed-off-by: Ferry Toth <ftoth@exalondelft.nl>
    Link: https://lore.kernel.org/r/20221205201527.13525-3-ftoth@exalondelft.nl
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6bf6c40225af4680305898b1e470154e043cc33
Author: Sven Peter <sven@svenpeter.dev>
Date:   Mon Nov 28 17:15:26 2022 +0100

    usb: dwc3: Fix race between dwc3_set_mode and __dwc3_set_mode
    
    commit 62c73bfea048e66168df09da6d3e4510ecda40bb upstream.
    
    dwc->desired_dr_role is changed by dwc3_set_mode inside a spinlock but
    then read by __dwc3_set_mode outside of that lock. This can lead to a
    race condition when very quick successive role switch events happen:
    
    CPU A
            dwc3_set_mode(DWC3_GCTL_PRTCAP_HOST) // first role switch event
                    spin_lock_irqsave(&dwc->lock, flags);
                    dwc->desired_dr_role = mode; // DWC3_GCTL_PRTCAP_HOST
                    spin_unlock_irqrestore(&dwc->lock, flags);
                    queue_work(system_freezable_wq, &dwc->drd_work);
    
    CPU B
            __dwc3_set_mode
                    // ....
                    spin_lock_irqsave(&dwc->lock, flags);
                    // desired_dr_role is DWC3_GCTL_PRTCAP_HOST
                    dwc3_set_prtcap(dwc, dwc->desired_dr_role);
                    spin_unlock_irqrestore(&dwc->lock, flags);
    
    CPU A
            dwc3_set_mode(DWC3_GCTL_PRTCAP_DEVICE) // second event
                    spin_lock_irqsave(&dwc->lock, flags);
                    dwc->desired_dr_role = mode; // DWC3_GCTL_PRTCAP_DEVICE
                    spin_unlock_irqrestore(&dwc->lock, flags);
    
    CPU B (continues running __dwc3_set_mode)
            switch (dwc->desired_dr_role) { // DWC3_GCTL_PRTCAP_DEVICE
            // ....
            case DWC3_GCTL_PRTCAP_DEVICE:
                    // ....
                    ret = dwc3_gadget_init(dwc);
    
    We then have DWC3_GCTL.DWC3_GCTL_PRTCAPDIR = DWC3_GCTL_PRTCAP_HOST and
    dwc->current_dr_role = DWC3_GCTL_PRTCAP_HOST but initialized the
    controller in device mode. It's also possible to get into a state
    where both host and device are intialized at the same time.
    Fix this race by creating a local copy of desired_dr_role inside
    __dwc3_set_mode while holding dwc->lock.
    
    Fixes: 41ce1456e1db ("usb: dwc3: core: make dwc3_set_mode() work properly")
    Cc: stable <stable@kernel.org>
    Acked-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Signed-off-by: Sven Peter <sven@svenpeter.dev>
    Link: https://lore.kernel.org/r/20221128161526.79730-1-sven@svenpeter.dev
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e883f3bc897695ccab2882797dcef5804e33b2b
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Fri Nov 11 10:47:29 2022 +0100

    arm64: dts: qcom: sm8250: fix USB-DP PHY registers
    
    commit f8d8840c72b3df61b5252052b79020dabec01ab5 upstream.
    
    When adding support for the DisplayPort part of the QMP PHY the binding
    (and devicetree parser) for the (USB) child node was simply reused and
    this has lead to some confusion.
    
    The third DP register region is really the DP_PHY region, not "PCS" as
    the binding claims, and lie at offset 0x2a00 (not 0x2c00).
    
    Similarly, there likely are no "RX", "RX2" or "PCS_MISC" regions as
    there are for the USB part of the PHY (and in any case the Linux driver
    does not use them).
    
    Note that the sixth "PCS_MISC" region is not even in the binding.
    
    Fixes: 5aa0d1becd5b ("arm64: dts: qcom: sm8250: switch usb1 qmp phy to USB3+DP mode")
    Cc: stable@vger.kernel.org      # 5.13
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221111094729.11842-3-johan+linaro@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffb14aac2658873050671198543b9b8194149c14
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Mon Nov 28 14:33:37 2022 +0800

    usb: xhci-mtk: fix leakage of shared hcd when fail to set wakeup irq
    
    commit 03a88b0bafbe3f548729d970d8366f48718c9b19 upstream.
    
    Can not set the @shared_hcd to NULL before decrease the usage count
    by usb_put_hcd(), this will cause the shared hcd not released.
    
    Fixes: 04284eb74e0c ("usb: xhci-mtk: add support runtime PM")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/20221128063337.18124-1-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcacd970e011c5801217f0d228523935f1d15865
Author: Pawel Laszczak <pawell@cadence.com>
Date:   Tue Nov 22 03:51:38 2022 -0500

    usb: cdnsp: fix lack of ZLP for ep0
    
    commit ae423ef5d095e09970f52c08020fdbf7f9d87c22 upstream.
    
    Patch implements the handling of ZLP for control transfer.
    To send the ZLP driver must prepare the extra TRB in TD with
    length set to zero and TRB type to TRB_NORMAL.
    The first TRB must have set TRB_CHAIN flag, TD_SIZE = 1
    and TRB type to TRB_DATA.
    
    Fixes: 3d82904559f4 ("usb: cdnsp: cdns3 Add main part of Cadence USBSSP DRD Driver")
    cc: <stable@vger.kernel.org>
    Reviewed-by: Peter Chen <peter.chen@kernel.org>
    Signed-off-by: Pawel Laszczak <pawell@cadence.com>
    Link: https://lore.kernel.org/r/20221122085138.332434-1-pawell@cadence.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcac79df08388a022a919b536a24fe801f316424
Author: Jiao Zhou <jiaozhou@google.com>
Date:   Tue Dec 6 13:53:11 2022 -0500

    ALSA: hda/hdmi: Add HP Device 0x8711 to force connect list
    
    commit 31b573946ea55e1ea0e08ae8e83bcf879b30f83a upstream.
    
    HDMI audio is not working on the HP EliteDesk 800 G6 because the pin is
    unconnected. This issue can be resolved by using the 'hdajackretask'
    tool to override the unconnected pin to force it to connect.
    
    Signed-off-by: Jiao Zhou <jiaozhou@google.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20221206185311.3669950-1-jiaozhou@google.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50c23a110779b0875936293ff63cffd0b026fa75
Author: Edward Pacman <edward@edward-p.xyz>
Date:   Wed Dec 7 21:32:18 2022 +0800

    ALSA: hda/realtek: Add quirk for Lenovo TianYi510Pro-14IOB
    
    commit 4bf5bf54476dffe60e6b6d8d539f67309ff599e2 upstream.
    
    Lenovo TianYi510Pro-14IOB (17aa:3742)
    require quirk for enabling headset-mic
    
    Signed-off-by: Edward Pacman <edward@edward-p.xyz>
    Cc: <stable@vger.kernel.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216756
    Link: https://lore.kernel.org/r/20221207133218.18989-1-edward@edward-p.xyz
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76574b34657e5c4e9f228565008d1396abcc8d20
Author: wangdicheng <wangdicheng@kylinos.cn>
Date:   Wed Dec 7 16:20:36 2022 +0800

    ALSA: usb-audio: add the quirk for KT0206 device
    
    commit 696b66ac26ef953aed5783ef26a252ec8f207013 upstream.
    
    Add relevant information to the quirks-table.h file.
    The test passes and the sound source file plays normally.
    
    Signed-off-by: wangdicheng <wangdicheng@kylinos.cn>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/SG2PR02MB587849631CB96809CF90DBED8A1A9@SG2PR02MB5878.apcprd02.prod.outlook.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e787dab98b64549b46ac54948e9af910f3f1b84
Author: GUO Zihua <guozihua@huawei.com>
Date:   Wed Sep 21 20:58:03 2022 +0800

    ima: Simplify ima_lsm_copy_rule
    
    [ Upstream commit d57378d3aa4d864d9e590482602068af1b20c0c5 ]
    
    Currently ima_lsm_copy_rule() set the arg_p field of the source rule to
    NULL, so that the source rule could be freed afterward. It does not make
    sense for this behavior to be inside a "copy" function. So move it
    outside and let the caller handle this field.
    
    ima_lsm_copy_rule() now produce a shallow copy of the original entry
    including args_p field. Meaning only the lsm.rule and the rule itself
    should be freed for the original rule. Thus, instead of calling
    ima_lsm_free_rule() which frees lsm.rule as well as args_p field, free
    the lsm.rule directly.
    
    Signed-off-by: GUO Zihua <guozihua@huawei.com>
    Reviewed-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cd365029c23b0bc529e1c516b6e3f39973b4d20
Author: John Stultz <jstultz@google.com>
Date:   Wed Dec 21 05:18:55 2022 +0000

    pstore: Make sure CONFIG_PSTORE_PMSG selects CONFIG_RT_MUTEXES
    
    [ Upstream commit 2f4fec5943407318b9523f01ce1f5d668c028332 ]
    
    In commit 76d62f24db07 ("pstore: Switch pmsg_lock to an rt_mutex
    to avoid priority inversion") I changed a lock to an rt_mutex.
    
    However, its possible that CONFIG_RT_MUTEXES is not enabled,
    which then results in a build failure, as the 0day bot detected:
      https://lore.kernel.org/linux-mm/202212211244.TwzWZD3H-lkp@intel.com/
    
    Thus this patch changes CONFIG_PSTORE_PMSG to select
    CONFIG_RT_MUTEXES, which ensures the build will not fail.
    
    Cc: Wei Wang <wvw@google.com>
    Cc: Midas Chien<midaschieh@google.com>
    Cc: Connor O'Brien <connoro@google.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Anton Vorontsov <anton@enomsg.org>
    Cc: Colin Cross <ccross@android.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: kernel test robot <lkp@intel.com>
    Cc: kernel-team@android.com
    Fixes: 76d62f24db07 ("pstore: Switch pmsg_lock to an rt_mutex to avoid priority inversion")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: John Stultz <jstultz@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221221051855.15761-1-jstultz@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2068d41a3de9132ab39ac82e292ae089bf9bb4ab
Author: David Howells <dhowells@redhat.com>
Date:   Wed Dec 21 14:30:48 2022 +0000

    afs: Fix lost servers_outstanding count
    
    [ Upstream commit 36f82c93ee0bd88f1c95a52537906b8178b537f1 ]
    
    The afs_fs_probe_dispatcher() work function is passed a count on
    net->servers_outstanding when it is scheduled (which may come via its
    timer).  This is passed back to the work_item, passed to the timer or
    dropped at the end of the dispatcher function.
    
    But, at the top of the dispatcher function, there are two checks which
    skip the rest of the function: if the network namespace is being destroyed
    or if there are no fileservers to probe.  These two return paths, however,
    do not drop the count passed to the dispatcher, and so, sometimes, the
    destruction of a network namespace, such as induced by rmmod of the kafs
    module, may get stuck in afs_purge_servers(), waiting for
    net->servers_outstanding to become zero.
    
    Fix this by adding the missing decrements in afs_fs_probe_dispatcher().
    
    Fixes: f6cbb368bcb0 ("afs: Actively poll fileservers to maintain NAT or firewall openings")
    Reported-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Tested-by: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Link: https://lore.kernel.org/r/167164544917.2072364.3759519569649459359.stgit@warthog.procyon.org.uk/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0def8af038c146cbc369379635ca4ba1d3ace2d9
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Tue Dec 20 11:57:00 2022 +0800

    perf debug: Set debug_peo_args and redirect_to_stderr variable to correct values in perf_quiet_option()
    
    [ Upstream commit 188ac720d364035008a54d249cf47b4cc100f819 ]
    
    When perf uses quiet mode, perf_quiet_option() sets the 'debug_peo_args'
    variable to -1, and display_attr() incorrectly determines the value of
    'debug_peo_args'.  As a result, unexpected information is displayed.
    
    Before:
    
      # perf record --quiet -- ls > /dev/null
      ------------------------------------------------------------
      perf_event_attr:
        size                             128
        { sample_period, sample_freq }   4000
        sample_type                      IP|TID|TIME|PERIOD
        read_format                      ID|LOST
        disabled                         1
        inherit                          1
        mmap                             1
        comm                             1
        freq                             1
        enable_on_exec                   1
        task                             1
        precise_ip                       3
        sample_id_all                    1
        exclude_guest                    1
        mmap2                            1
        comm_exec                        1
        ksymbol                          1
        bpf_event                        1
      ------------------------------------------------------------
      ...
    
    After:
      # perf record --quiet -- ls > /dev/null
      #
    
    redirect_to_stderr is a similar problem.
    
    Fixes: f78eaef0e0493f60 ("perf tools: Allow to force redirect pr_debug to stderr.")
    Fixes: ccd26741f5e6bdf2 ("perf tool: Provide an option to print perf_event_open args and return value")
    Suggested-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Carsten Haitzler <carsten.haitzler@arm.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Leo Yan <leo.yan@linaro.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: martin.lau@kernel.org
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Bangoria <ravi.bangoria@amd.com>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Link: https://lore.kernel.org/r/20221220035702.188413-2-yangjihong1@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41cccae10e10d8fbc47fc90f673473ab3a24c310
Author: John Stultz <jstultz@google.com>
Date:   Wed Dec 14 23:18:34 2022 +0000

    pstore: Switch pmsg_lock to an rt_mutex to avoid priority inversion
    
    [ Upstream commit 76d62f24db07f22ccf9bc18ca793c27d4ebef721 ]
    
    Wei Wang reported seeing priority inversion caused latencies
    caused by contention on pmsg_lock, and suggested it be switched
    to a rt_mutex.
    
    I was initially hesitant this would help, as the tasks in that
    trace all seemed to be SCHED_NORMAL, so the benefit would be
    limited to only nice boosting.
    
    However, another similar issue was raised where the priority
    inversion was seen did involve a blocked RT task so it is clear
    this would be helpful in that case.
    
    Cc: Wei Wang <wvw@google.com>
    Cc: Midas Chien<midaschieh@google.com>
    Cc: Connor O'Brien <connoro@google.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Anton Vorontsov <anton@enomsg.org>
    Cc: Colin Cross <ccross@android.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: kernel-team@android.com
    Fixes: 9d5438f462ab ("pstore: Add pmsg - user-space accessible pstore object")
    Reported-by: Wei Wang <wvw@google.com>
    Signed-off-by: John Stultz <jstultz@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221214231834.3711880-1-jstultz@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8877df8135b7ff3a6dafc64cad664fa2c1bc68da
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Dec 9 11:54:57 2022 -0800

    LoadPin: Ignore the "contents" argument of the LSM hooks
    
    [ Upstream commit 1a17e5b513ceebf21100027745b8731b4728edf7 ]
    
    LoadPin only enforces the read-only origin of kernel file reads. Whether
    or not it was a partial read isn't important. Remove the overly
    conservative checks so that things like partial firmware reads will
    succeed (i.e. reading a firmware header).
    
    Fixes: 2039bda1fa8d ("LSM: Add "contents" flag to kernel_read_file hook")
    Cc: Paul Moore <paul@paul-moore.com>
    Cc: James Morris <jmorris@namei.org>
    Cc: "Serge E. Hallyn" <serge@hallyn.com>
    Cc: linux-security-module@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Serge Hallyn <serge@hallyn.com>
    Tested-by: Ping-Ke Shih <pkshih@realtek.com>
    Link: https://lore.kernel.org/r/20221209195453.never.494-kees@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 584202b0f1a10cadebc0b224179c7237820503a4
Author: Khaled Almahallawy <khaled.almahallawy@intel.com>
Date:   Wed Nov 23 14:09:26 2022 -0800

    drm/i915/display: Don't disable DDI/Transcoder when setting phy test pattern
    
    [ Upstream commit 3153eebb7a76e663ac76d6670dc113296de96622 ]
    
    Bspecs has updated recently to remove the restriction to disable
    DDI/Transcoder before setting PHY test pattern. This update is to
    address PHY compliance test failures observed on a port with LTTPR.
    The issue is that when Transc. is disabled, the main link signals fed
    to LTTPR will be dropped invalidating link training, which will affect
    the quality of the phy test pattern when the transcoder is enabled again.
    
    v2: Update commit message (Clint)
    v3: Add missing Signed-off in v2
    v4: Update Bspec and commit message for pre-gen12 (Jani)
    
    Bspec: 50482, 7555
    Fixes: 8cdf72711928 ("drm/i915/dp: Program vswing, pre-emphasis, test-pattern")
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Clint Taylor <clinton.a.taylor@intel.com>
    CC: Jani Nikula <jani.nikula@intel.com>
    Tested-by: Khaled Almahallawy <khaled.almahallawy@intel.com>
    Reviewed-by: Clint Taylor <clinton.a.taylor@intel.com>
    Signed-off-by: Khaled Almahallawy <khaled.almahallawy@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221123220926.170034-1-khaled.almahallawy@intel.com
    (cherry picked from commit be4a847652056b067d6dc6fe0fc024a9e2e987ca)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b253e075b13dd12625279e0e8898fce34852a91d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Dec 13 13:33:19 2022 +0100

    ASoC: rt5670: Remove unbalanced pm_runtime_put()
    
    [ Upstream commit 6c900dcc3f7331a67ed29739d74524e428d137fb ]
    
    For some reason rt5670_i2c_probe() does a pm_runtime_put() at the end
    of a successful probe. But it has never done a pm_runtime_get() leading
    to the following error being logged into dmesg:
    
     rt5670 i2c-10EC5640:00: Runtime PM usage count underflow!
    
    Fix this by removing the unnecessary pm_runtime_put().
    
    Fixes: 64e89e5f5548 ("ASoC: rt5670: Add runtime PM support")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20221213123319.11285-1-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59f797a913dcfa109bedc0c84d66ca6f295dc0ee
Author: Wang Jingjin <wangjingjin1@huawei.com>
Date:   Thu Dec 8 14:39:00 2022 +0800

    ASoC: rockchip: spdif: Add missing clk_disable_unprepare() in rk_spdif_runtime_resume()
    
    [ Upstream commit 6d94d0090527b1763872275a7ccd44df7219b31e ]
    
    rk_spdif_runtime_resume() may have called clk_prepare_enable() before return
    from failed branches, add missing clk_disable_unprepare() in this case.
    
    Fixes: f874b80e1571 ("ASoC: rockchip: Add rockchip SPDIF transceiver driver")
    Signed-off-by: Wang Jingjin <wangjingjin1@huawei.com>
    Link: https://lore.kernel.org/r/20221208063900.4180790-1-wangjingjin1@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 132844d92fed1746302a9fbbe7238e124938c8d7
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri Dec 9 10:16:57 2022 +0100

    ASoC: wm8994: Fix potential deadlock
    
    [ Upstream commit 9529dc167ffcdfd201b9f0eda71015f174095f7e ]
    
    Fix this by dropping wm8994->accdet_lock while calling
    cancel_delayed_work_sync(&wm8994->mic_work) in wm1811_jackdet_irq().
    
    Fixes: c0cc3f166525 ("ASoC: wm8994: Allow a delay between jack insertion and microphone detect")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20221209091657.1183-1-m.szyprowski@samsung.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82f7c814edda353b4781f356d3ab90e943d5eac4
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Mon Dec 5 17:56:28 2022 +0800

    ASoC: mediatek: mt8183: fix refcount leak in mt8183_mt6358_ts3a227_max98357_dev_probe()
    
    [ Upstream commit 38eef3be38ab895959c442702864212cc3beb96c ]
    
    The node returned by of_parse_phandle() with refcount incremented,
    of_node_put() needs be called when finish using it. So add it in the
    error path in mt8183_mt6358_ts3a227_max98357_dev_probe().
    
    Fixes: 11c0269017b2 ("ASoC: Mediatek: MT8183: Add machine driver with TS3A227")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Link: https://lore.kernel.org/r/1670234188-23596-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5d6bf3e5ad03065f20935ff2ee29432e283fee7
Author: Wang Jingjin <wangjingjin1@huawei.com>
Date:   Mon Dec 5 11:28:02 2022 +0800

    ASoC: rockchip: pdm: Add missing clk_disable_unprepare() in rockchip_pdm_runtime_resume()
    
    [ Upstream commit ef0a098efb36660326c133af9b5a04a96a00e3ca ]
    
    The clk_disable_unprepare() should be called in the error handling of
    rockchip_pdm_runtime_resume().
    
    Fixes: fc05a5b22253 ("ASoC: rockchip: add support for pdm controller")
    Signed-off-by: Wang Jingjin <wangjingjin1@huawei.com>
    Link: https://lore.kernel.org/r/20221205032802.2422983-1-wangjingjin1@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85eb5c952b7fe2d2059beaa4a4dd26688b25547b
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Mon Dec 5 16:15:27 2022 +0800

    ASoC: audio-graph-card: fix refcount leak of cpu_ep in __graph_for_each_link()
    
    [ Upstream commit 8ab2d12c726f0fde0692fa5d81d8019b3dcd62d0 ]
    
    The of_get_next_child() returns a node with refcount incremented, and
    decrements the refcount of prev. So in the error path of the while loop,
    of_node_put() needs be called for cpu_ep.
    
    Fixes: fce9b90c1ab7 ("ASoC: audio-graph-card: cleanup DAI link loop method - step2")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/1670228127-13835-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ff07316cad22cdbead4dd223b049192fef81f51
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Mon Dec 5 18:04:24 2022 +0800

    ASoC: mediatek: mt8173-rt5650-rt5514: fix refcount leak in mt8173_rt5650_rt5514_dev_probe()
    
    [ Upstream commit 3327d721114c109ba0575f86f8fda3b525404054 ]
    
    The node returned by of_parse_phandle() with refcount incremented,
    of_node_put() needs be called when finish using it. So add it in the
    error path in mt8173_rt5650_rt5514_dev_probe().
    
    Fixes: 0d1d7a664288 ("ASoC: mediatek: Refine mt8173 driver and change config option")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Link: https://lore.kernel.org/r/1670234664-24246-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7643909cf06decf1ffe768b8ba2025044a161139
Author: Cezary Rojewski <cezary.rojewski@intel.com>
Date:   Mon Dec 5 09:53:29 2022 +0100

    ASoC: Intel: Skylake: Fix driver hang during shutdown
    
    [ Upstream commit 171107237246d66bce04f3769d33648f896b4ce3 ]
    
    AudioDSP cores and HDAudio links need to be turned off on shutdown to
    ensure no communication or data transfer occurs during the procedure.
    
    Fixes: c5a76a246989 ("ASoC: Intel: Skylake: Add shutdown callback")
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Tested-by: Lukasz Majczak <lma@semihlaf.com>
    Link: https://lore.kernel.org/r/20221205085330.857665-6-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33ff0f9f9cb5be558231db9b67896afbf61bfad2
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Mon Sep 19 14:10:38 2022 +0200

    ALSA: hda: add snd_hdac_stop_streams() helper
    
    [ Upstream commit 24ad3835a6db4f8857975effa6bf47730371a5ff ]
    
    Minor code reuse, no functionality change.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Reviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20220919121041.43463-6-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Stable-dep-of: 171107237246 ("ASoC: Intel: Skylake: Fix driver hang during shutdown")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78649a624dfa3e4b35ae215a555f8c551c58bf96
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Dec 16 17:11:27 2021 -0600

    ALSA/ASoC: hda: move/rename snd_hdac_ext_stop_streams to hdac_stream.c
    
    [ Upstream commit 12054f0ce8be7d2003ec068ab27c9eb608397b98 ]
    
    snd_hdac_ext_stop_streams() has really nothing to do with the
    extension, it just loops over the bus streams.
    
    Move it to the hdac_stream layer and rename to remove the 'ext'
    prefix and add the precision that the chip will also be stopped.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@intel.com>
    Reviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20211216231128.344321-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Stable-dep-of: 171107237246 ("ASoC: Intel: Skylake: Fix driver hang during shutdown")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98b0f50fec383b8da63d35972b56140ec78cb250
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Oct 27 14:29:31 2022 +0800

    hwmon: (jc42) Fix missing unlock on error in jc42_write()
    
    [ Upstream commit b744db17abf6a2efc2bfa80870cc88e9799a8ccc ]
    
    Add the missing unlock before return from function jc42_write()
    in the error handling case.
    
    Fixes: 37dedaee8bc6 ("hwmon: (jc42) Convert register access and caching to regmap/regcache")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Link: https://lore.kernel.org/r/20221027062931.598247-1-yangyingliang@huawei.com
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e6923350830a25870fbd7faaff72711d4857764
Author: Tyler Hicks <code@tyhicks.com>
Date:   Thu Dec 22 18:09:58 2022 -0600

    KVM: selftests: Fix build regression by using accessor function
    
    Fix the stable backport of commit 05c2224d4b04 ("KVM: selftests: Fix
    number of pages for memory slot in memslot_modification_stress_test"),
    which caused memslot_modification_stress_test.c build failures due to
    trying to access private members of struct kvm_vm.
    
    v6.0 commit b530eba14c70 ("KVM: selftests: Get rid of
    kvm_util_internal.h") and some other commits got rid of the accessors
    and made all of the KVM data structures public. Keep using the accessors
    in older kernels.
    
    There is no corresponding upstream commit for this change.
    
    Signed-off-by: Tyler Hicks (Microsoft) <code@tyhicks.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6215904fe29537067ff938fae1732b204abf8ea7
Author: Karolina Drobnik <karolinadrobnik@gmail.com>
Date:   Thu Dec 22 18:09:57 2022 -0600

    tools/include: Add _RET_IP_ and math definitions to kernel.h
    
    commit 5cf67a6051ea2558fd7c3d39c5a808db73073e9d upstream.
    
    Add max_t, min_t and clamp functions, together with _RET_IP_
    definition, so they can be used in testing.
    
    Signed-off-by: Karolina Drobnik <karolinadrobnik@gmail.com>
    Signed-off-by: Mike Rapoport <rppt@kernel.org>
    Link: https://lore.kernel.org/r/230fea382cb1e1659cdd52a55201854d38a0a149.1643796665.git.karolinadrobnik@gmail.com
    [tyhicks: Backport around contextual differences due to the lack of v5.16 commit
     d6e6a27d960f ("tools: Fix math.h breakage"). That commit fixed a commit
     that was merged in v5.16-rc1 and, therefore, doesn't need to go back to
     the stable branches.]
    Signed-off-by: Tyler Hicks (Microsoft) <code@tyhicks.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8853267289c55b1acbe4dc3641374887584834d
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Tue Oct 18 12:40:07 2022 +0800

    orangefs: Fix kmemleak in orangefs_{kernel,client}_debug_init()
    
    [ Upstream commit 31720a2b109b3080eb77e97b8f6f50a27b4ae599 ]
    
    When insert and remove the orangefs module, there are memory leaked
    as below:
    
    unreferenced object 0xffff88816b0cc000 (size 2048):
      comm "insmod", pid 783, jiffies 4294813439 (age 65.512s)
      hex dump (first 32 bytes):
        6e 6f 6e 65 0a 00 00 00 00 00 00 00 00 00 00 00  none............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<0000000031ab7788>] kmalloc_trace+0x27/0xa0
        [<000000005b405fee>] orangefs_debugfs_init.cold+0xaf/0x17f
        [<00000000e5a0085b>] 0xffffffffa02780f9
        [<000000004232d9f7>] do_one_initcall+0x87/0x2a0
        [<0000000054f22384>] do_init_module+0xdf/0x320
        [<000000003263bdea>] load_module+0x2f98/0x3330
        [<0000000052cd4153>] __do_sys_finit_module+0x113/0x1b0
        [<00000000250ae02b>] do_syscall_64+0x35/0x80
        [<00000000f11c03c7>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Use the golbal variable as the buffer rather than dynamic allocate to
    slove the problem.
    
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Mike Marshall <hubcap@omnibond.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39529b79b023713d4f2d3479dc0ca43ba99df726
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Tue Oct 18 12:40:05 2022 +0800

    orangefs: Fix kmemleak in orangefs_prepare_debugfs_help_string()
    
    [ Upstream commit d23417a5bf3a3afc55de5442eb46e1e60458b0a1 ]
    
    When insert and remove the orangefs module, then debug_help_string will
    be leaked:
    
      unreferenced object 0xffff8881652ba000 (size 4096):
        comm "insmod", pid 1701, jiffies 4294893639 (age 13218.530s)
        hex dump (first 32 bytes):
          43 6c 69 65 6e 74 20 44 65 62 75 67 20 4b 65 79  Client Debug Key
          77 6f 72 64 73 20 61 72 65 20 75 6e 6b 6e 6f 77  words are unknow
        backtrace:
          [<0000000004e6f8e3>] kmalloc_trace+0x27/0xa0
          [<0000000006f75d85>] orangefs_prepare_debugfs_help_string+0x5e/0x480 [orangefs]
          [<0000000091270a2a>] _sub_I_65535_1+0x57/0xf70 [crc_itu_t]
          [<000000004b1ee1a3>] do_one_initcall+0x87/0x2a0
          [<000000001d0614ae>] do_init_module+0xdf/0x320
          [<00000000efef068c>] load_module+0x2f98/0x3330
          [<000000006533b44d>] __do_sys_finit_module+0x113/0x1b0
          [<00000000a0da6f99>] do_syscall_64+0x35/0x80
          [<000000007790b19b>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    When remove the module, should always free debug_help_string. Should
    always free the allocated buffer when change the free_debug_help_string.
    
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Mike Marshall <hubcap@omnibond.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a075c21ee026f4a74f9fce5928ea3c8d18a8af13
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 08:56:23 2022 -0700

    drm/sti: Fix return type of sti_{dvo,hda,hdmi}_connector_mode_valid()
    
    [ Upstream commit 0ad811cc08a937d875cbad0149c1bab17f84ba05 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/gpu/drm/sti/sti_hda.c:637:16: error: incompatible function pointer types initializing 'enum drm_mode_status (*)(struct drm_connector *, struct drm_display_mode *)' with an expression of type 'int (struct drm_connector *, struct drm_display_mode *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .mode_valid = sti_hda_connector_mode_valid,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      drivers/gpu/drm/sti/sti_dvo.c:376:16: error: incompatible function pointer types initializing 'enum drm_mode_status (*)(struct drm_connector *, struct drm_display_mode *)' with an expression of type 'int (struct drm_connector *, struct drm_display_mode *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .mode_valid = sti_dvo_connector_mode_valid,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      drivers/gpu/drm/sti/sti_hdmi.c:1035:16: error: incompatible function pointer types initializing 'enum drm_mode_status (*)(struct drm_connector *, struct drm_display_mode *)' with an expression of type 'int (struct drm_connector *, struct drm_display_mode *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .mode_valid = sti_hdmi_connector_mode_valid,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    ->mode_valid() in 'struct drm_connector_helper_funcs' expects a return
    type of 'enum drm_mode_status', not 'int'. Adjust the return type of
    sti_{dvo,hda,hdmi}_connector_mode_valid() to match the prototype's to
    resolve the warning and CFI failure.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221102155623.3042869-1-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3c14b99f33a7fe6a8015a2086146928772947bf
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 08:42:15 2022 -0700

    drm/fsl-dcu: Fix return type of fsl_dcu_drm_connector_mode_valid()
    
    [ Upstream commit 96d845a67b7e406cfed7880a724c8ca6121e022e ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/gpu/drm/fsl-dcu/fsl_dcu_drm_rgb.c:74:16: error: incompatible function pointer types initializing 'enum drm_mode_status (*)(struct drm_connector *, struct drm_display_mode *)' with an expression of type 'int (struct drm_connector *, struct drm_display_mode *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .mode_valid = fsl_dcu_drm_connector_mode_valid,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      1 error generated.
    
    ->mode_valid() in 'struct drm_connector_helper_funcs' expects a return
    type of 'enum drm_mode_status', not 'int'. Adjust the return type of
    fsl_dcu_drm_connector_mode_valid() to match the prototype's to resolve
    the warning and CFI failure.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reported-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221102154215.78059-1-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a8862820cbf1f18dca4f3b4c289d88561b3a384
Author: Hawkins Jiawei <yin31149@gmail.com>
Date:   Fri Oct 21 07:16:08 2022 +0800

    hugetlbfs: fix null-ptr-deref in hugetlbfs_parse_param()
    
    [ Upstream commit 26215b7ee923b9251f7bb12c4e5f09dc465d35f2 ]
    
    Syzkaller reports a null-ptr-deref bug as follows:
    ======================================================
    KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
    RIP: 0010:hugetlbfs_parse_param+0x1dd/0x8e0 fs/hugetlbfs/inode.c:1380
    [...]
    Call Trace:
     <TASK>
     vfs_parse_fs_param fs/fs_context.c:148 [inline]
     vfs_parse_fs_param+0x1f9/0x3c0 fs/fs_context.c:129
     vfs_parse_fs_string+0xdb/0x170 fs/fs_context.c:191
     generic_parse_monolithic+0x16f/0x1f0 fs/fs_context.c:231
     do_new_mount fs/namespace.c:3036 [inline]
     path_mount+0x12de/0x1e20 fs/namespace.c:3370
     do_mount fs/namespace.c:3383 [inline]
     __do_sys_mount fs/namespace.c:3591 [inline]
     __se_sys_mount fs/namespace.c:3568 [inline]
     __x64_sys_mount+0x27f/0x300 fs/namespace.c:3568
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
     [...]
     </TASK>
    ======================================================
    
    According to commit "vfs: parse: deal with zero length string value",
    kernel will set the param->string to null pointer in vfs_parse_fs_string()
    if fs string has zero length.
    
    Yet the problem is that, hugetlbfs_parse_param() will dereference the
    param->string, without checking whether it is a null pointer.  To be more
    specific, if hugetlbfs_parse_param() parses an illegal mount parameter,
    such as "size=,", kernel will constructs struct fs_parameter with null
    pointer in vfs_parse_fs_string(), then passes this struct fs_parameter to
    hugetlbfs_parse_param(), which triggers the above null-ptr-deref bug.
    
    This patch solves it by adding sanity check on param->string
    in hugetlbfs_parse_param().
    
    Link: https://lkml.kernel.org/r/20221020231609.4810-1-yin31149@gmail.com
    Reported-by: syzbot+a3e6acd85ded5c16a709@syzkaller.appspotmail.com
    Tested-by: syzbot+a3e6acd85ded5c16a709@syzkaller.appspotmail.com
      Link: https://lore.kernel.org/all/0000000000005ad00405eb7148c6@google.com/
    Signed-off-by: Hawkins Jiawei <yin31149@gmail.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Hawkins Jiawei <yin31149@gmail.com>
    Cc: Muchun Song <songmuchun@bytedance.com>
    Cc: Ian Kent <raven@themaw.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f6b206998c52e4beadc39c3000e2cf8a6a61604
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 09:19:06 2022 -0700

    scsi: elx: libefc: Fix second parameter type in state callbacks
    
    [ Upstream commit 3d75e766b58a7410d4e835c534e1b4664a8f62d0 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function pointer
    prototype to make sure the call target is valid to help mitigate ROP
    attacks. If they are not identical, there is a failure at run time, which
    manifests as either a kernel panic or thread getting killed. A proposed
    warning in clang aims to catch these at compile time, which reveals:
    
      drivers/scsi/elx/libefc/efc_node.c:811:22: error: incompatible function pointer types assigning to 'void (*)(struct efc_sm_ctx *, u32, void *)' (aka 'void (*)(struct efc_sm_ctx *, unsigned int, void *)') from 'void (*)(struct efc_sm_ctx *, enum efc_sm_event, void *)' [-Werror,-Wincompatible-function-pointer-types-strict]
                      ctx->current_state = state;
                                        ^ ~~~~~
      drivers/scsi/elx/libefc/efc_node.c:878:21: error: incompatible function pointer types assigning to 'void (*)(struct efc_sm_ctx *, u32, void *)' (aka 'void (*)(struct efc_sm_ctx *, unsigned int, void *)') from 'void (*)(struct efc_sm_ctx *, enum efc_sm_event, void *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              node->nodedb_state = state;
                                ^ ~~~~~
      drivers/scsi/elx/libefc/efc_node.c:905:6: error: incompatible function pointer types assigning to 'void (*)(struct efc_sm_ctx *, enum efc_sm_event, void *)' from 'void (*)(struct efc_sm_ctx *, u32, void *)' (aka 'void (*)(struct efc_sm_ctx *, unsigned int, void *)') [-Werror,-Wincompatible-function-pointer-types-strict]
                      pf = node->nodedb_state;
                        ^ ~~~~~~~~~~~~~~~~~~
    
      drivers/scsi/elx/libefc/efc_device.c:455:22: error: incompatible function pointer types assigning to 'void (*)(struct efc_sm_ctx *, u32, void *)' (aka 'void (*)(struct efc_sm_ctx *, unsigned int, void *)') from 'void (struct efc_sm_ctx *, enum efc_sm_event, void *)' [-Werror,-Wincompatible-function-pointer-types-strict]
                      node->nodedb_state = __efc_d_init;
                                        ^ ~~~~~~~~~~~~
    
      drivers/scsi/elx/libefc/efc_sm.c:41:22: error: incompatible function pointer types assigning to 'void (*)(struct efc_sm_ctx *, u32, void *)' (aka 'void (*)(struct efc_sm_ctx *, unsigned int, void *)') from 'void (*)(struct efc_sm_ctx *, enum efc_sm_event, void *)' [-Werror,-Wincompatible-function-pointer-types-strict]
                      ctx->current_state = state;
                                        ^ ~~~~~
    
    The type of the second parameter in the prototypes of ->current_state() and
    ->nodedb_state() ('u32') does not match the implementations, which have a
    second parameter type of 'enum efc_sm_event'. Update the prototypes to have
    the correct second parameter type, clearing up all the warnings and CFI
    failures.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reported-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/r/20221102161906.2781508-1-nathan@kernel.org
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23f0e9f86303dcf4e7cce11b9c9f736db73d0436
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Oct 18 13:29:54 2022 -0700

    scsi: ufs: Reduce the START STOP UNIT timeout
    
    [ Upstream commit dcd5b7637c6d442d957f73780a03047413ed3a10 ]
    
    Reduce the START STOP UNIT command timeout to one second since on Android
    devices a kernel panic is triggered if an attempt to suspend the system
    takes more than 20 seconds. One second should be enough for the START STOP
    UNIT command since this command completes in less than a millisecond for
    the UFS devices I have access to.
    
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20221018202958.1902564-7-bvanassche@acm.org
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cf66428a2545bb33beb9624124a2377468bb478
Author: Justin Tee <justin.tee@broadcom.com>
Date:   Mon Oct 17 09:43:20 2022 -0700

    scsi: lpfc: Fix hard lockup when reading the rx_monitor from debugfs
    
    [ Upstream commit c44e50f4a0ec00c2298f31f91bc2c3e9bbd81c7e ]
    
    During I/O and simultaneous cat of /sys/kernel/debug/lpfc/fnX/rx_monitor, a
    hard lockup similar to the call trace below may occur.
    
    The spin_lock_bh in lpfc_rx_monitor_report is not protecting from timer
    interrupts as expected, so change the strength of the spin lock to _irq.
    
    Kernel panic - not syncing: Hard LOCKUP
    CPU: 3 PID: 110402 Comm: cat Kdump: loaded
    
    exception RIP: native_queued_spin_lock_slowpath+91
    
    [IRQ stack]
     native_queued_spin_lock_slowpath at ffffffffb814e30b
     _raw_spin_lock at ffffffffb89a667a
     lpfc_rx_monitor_record at ffffffffc0a73a36 [lpfc]
     lpfc_cmf_timer at ffffffffc0abbc67 [lpfc]
     __hrtimer_run_queues at ffffffffb8184250
     hrtimer_interrupt at ffffffffb8184ab0
     smp_apic_timer_interrupt at ffffffffb8a026ba
     apic_timer_interrupt at ffffffffb8a01c4f
    [End of IRQ stack]
    
     apic_timer_interrupt at ffffffffb8a01c4f
     lpfc_rx_monitor_report at ffffffffc0a73c80 [lpfc]
     lpfc_rx_monitor_read at ffffffffc0addde1 [lpfc]
     full_proxy_read at ffffffffb83e7fc3
     vfs_read at ffffffffb833fe71
     ksys_read at ffffffffb83402af
     do_syscall_64 at ffffffffb800430b
     entry_SYSCALL_64_after_hwframe at ffffffffb8a000ad
    
    Signed-off-by: Justin Tee <justin.tee@broadcom.com>
    Link: https://lore.kernel.org/r/20221017164323.14536-2-justintee8345@gmail.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b3e3ecdb402ff1053ee25b598ff21b9ddf4384f
Author: Zhiqi Song <songzhiqi1@huawei.com>
Date:   Sat Sep 24 15:38:31 2022 +0800

    crypto: hisilicon/hpre - fix resource leak in remove process
    
    [ Upstream commit 45e6319bd5f2154d8b8c9f1eaa4ac030ba0d330c ]
    
    In hpre_remove(), when the disable operation of qm sriov failed,
    the following logic should continue to be executed to release the
    remaining resources that have been allocated, instead of returning
    directly, otherwise there will be resource leakage.
    
    Signed-off-by: Zhiqi Song <songzhiqi1@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adf6a00859d014cecf046dc91f75c0e65a544360
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Tue Nov 22 21:36:14 2022 +0800

    clk: st: Fix memory leak in st_of_quadfs_setup()
    
    [ Upstream commit cfd3ffb36f0d566846163118651d868e607300ba ]
    
    If st_clk_register_quadfs_pll() fails, @lock should be freed before goto
    @err_exit, otherwise will cause meory leak issue, fix it.
    
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Link: https://lore.kernel.org/r/20221122133614.184910-1-xiujianfeng@huawei.com
    Reviewed-by: Patrice Chotard <patrice.chotard@foss.st.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c8aee0c8fcc6dda94315f7908e8fa9bc75abe75
Author: Shigeru Yoshida <syoshida@redhat.com>
Date:   Wed Nov 23 03:51:59 2022 +0900

    media: si470x: Fix use-after-free in si470x_int_in_callback()
    
    [ Upstream commit 7d21e0b1b41b21d628bf2afce777727bd4479aa5 ]
    
    syzbot reported use-after-free in si470x_int_in_callback() [1].  This
    indicates that urb->context, which contains struct si470x_device
    object, is freed when si470x_int_in_callback() is called.
    
    The cause of this issue is that si470x_int_in_callback() is called for
    freed urb.
    
    si470x_usb_driver_probe() calls si470x_start_usb(), which then calls
    usb_submit_urb() and si470x_start().  If si470x_start_usb() fails,
    si470x_usb_driver_probe() doesn't kill urb, but it just frees struct
    si470x_device object, as depicted below:
    
    si470x_usb_driver_probe()
      ...
      si470x_start_usb()
        ...
        usb_submit_urb()
        retval = si470x_start()
        return retval
      if (retval < 0)
        free struct si470x_device object, but don't kill urb
    
    This patch fixes this issue by killing urb when si470x_start_usb()
    fails and urb is submitted.  If si470x_start_usb() fails and urb is
    not submitted, i.e. submitting usb fails, it just frees struct
    si470x_device object.
    
    Reported-by: syzbot+9ca7a12fd736d93e0232@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=94ed6dddd5a55e90fd4bab942aa4bb297741d977 [1]
    Signed-off-by: Shigeru Yoshida <syoshida@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58b6496a745fc8d1773b3e0af615f0d57fd9ea43
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Sun Nov 20 12:34:55 2022 +0100

    mmc: renesas_sdhi: better reset from HS400 mode
    
    [ Upstream commit 0da69dd2155019ed4c444ede0e79ce7a4a6af627 ]
    
    Up to now, HS400 adjustment mode was only disabled on soft reset when a
    calibration table was in use. It is safer, though, to disable it as soon
    as the instance has an adjustment related quirk set, i.e. bad taps or a
    calibration table.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Tested-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/20221120113457.42010-3-wsa+renesas@sang-engineering.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c33c904124c48f284bfb58d4b1143b33de29d386
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Fri Nov 11 17:10:33 2022 +0900

    mmc: f-sdh30: Add quirks for broken timeout clock capability
    
    [ Upstream commit aae9d3a440736691b3c1cb09ae2c32c4f1ee2e67 ]
    
    There is a case where the timeout clock is not supplied to the capability.
    Add a quirk for that.
    
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Acked-by: Jassi Brar <jaswinder.singh@linaro.org>
    Link: https://lore.kernel.org/r/20221111081033.3813-7-hayashi.kunihiko@socionext.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69346de0eb956fb92949b9473de4647d9c34a54f
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Thu Oct 13 21:07:37 2022 +0200

    wifi: mt76: do not run mt76u_status_worker if the device is not running
    
    [ Upstream commit bd5dac7ced5a7c9faa4dc468ac9560c3256df845 ]
    
    Fix the following NULL pointer dereference avoiding to run
    mt76u_status_worker thread if the device is not running yet.
    
    KASAN: null-ptr-deref in range
    [0x0000000000000000-0x0000000000000007]
    CPU: 0 PID: 98 Comm: kworker/u2:2 Not tainted 5.14.0+ #78 Hardware
    name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    Workqueue: mt76 mt76u_tx_status_data
    RIP: 0010:mt76x02_mac_fill_tx_status.isra.0+0x82c/0x9e0
    Code: c5 48 b8 00 00 00 00 00 fc ff df 80 3c 02 00 0f 85 94 01 00 00
    48 b8 00 00 00 00 00 fc ff df 4d 8b 34 24 4c 89 f2 48 c1 ea 03 <0f>
    b6
    04 02 84 c0 74 08 3c 03 0f 8e 89 01 00 00 41 8b 16 41 0f b7
    RSP: 0018:ffffc900005af988 EFLAGS: 00010246
    RAX: dffffc0000000000 RBX: ffffc900005afae8 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffffff832fc661 RDI: ffffc900005afc2a
    RBP: ffffc900005afae0 R08: 0000000000000001 R09: fffff520000b5f3c
    R10: 0000000000000003 R11: fffff520000b5f3b R12: ffff88810b6132d8
    R13: 000000000000ffff R14: 0000000000000000 R15: ffffc900005afc28
    FS:  0000000000000000(0000) GS:ffff88811aa00000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fa0eda6a000 CR3: 0000000118f17000 CR4: 0000000000750ef0
    PKRU: 55555554
    Call Trace:
     mt76x02_send_tx_status+0x1d2/0xeb0
     mt76x02_tx_status_data+0x8e/0xd0
     mt76u_tx_status_data+0xe1/0x240
     process_one_work+0x92b/0x1460
     worker_thread+0x95/0xe00
     kthread+0x3a1/0x480
     ret_from_fork+0x1f/0x30
    Modules linked in:
    --[ end trace 8df5d20fc5040f65 ]--
    RIP: 0010:mt76x02_mac_fill_tx_status.isra.0+0x82c/0x9e0
    Code: c5 48 b8 00 00 00 00 00 fc ff df 80 3c 02 00 0f 85 94 01 00 00
    48 b8 00 00 00 00 00 fc ff df 4d 8b 34 24 4c 89 f2 48 c1 ea 03 <0f>
    b6
    04 02 84 c0 74 08 3c 03 0f 8e 89 01 00 00 41 8b 16 41 0f b7
    RSP: 0018:ffffc900005af988 EFLAGS: 00010246
    RAX: dffffc0000000000 RBX: ffffc900005afae8 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffffff832fc661 RDI: ffffc900005afc2a
    RBP: ffffc900005afae0 R08: 0000000000000001 R09: fffff520000b5f3c
    R10: 0000000000000003 R11: fffff520000b5f3b R12: ffff88810b6132d8
    R13: 000000000000ffff R14: 0000000000000000 R15: ffffc900005afc28
    FS:  0000000000000000(0000) GS:ffff88811aa00000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fa0eda6a000 CR3: 0000000118f17000 CR4: 0000000000750ef0
    PKRU: 55555554
    
    Moreover move stat_work schedule out of the for loop.
    
    Reported-by: Dokyung Song <dokyungs@yonsei.ac.kr>
    Co-developed-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit feb847e6591e8c7a09cc39721cc9ca74fd9a5d80
Author: Rui Zhang <zr.zhang@vivo.com>
Date:   Thu Dec 1 11:38:06 2022 +0800

    regulator: core: fix use_count leakage when handling boot-on
    
    [ Upstream commit 0591b14ce0398125439c759f889647369aa616a0 ]
    
    I found a use_count leakage towards supply regulator of rdev with
    boot-on option.
    
    ┌───────────────────┐           ┌───────────────────┐
    │  regulator_dev A  │           │  regulator_dev B  │
    │     (boot-on)     │           │     (boot-on)     │
    │    use_count=0    │◀──supply──│    use_count=1    │
    │                   │           │                   │
    └───────────────────┘           └───────────────────┘
    
    In case of rdev(A) configured with `regulator-boot-on', the use_count
    of supplying regulator(B) will increment inside
    regulator_enable(rdev->supply).
    
    Thus, B will acts like always-on, and further balanced
    regulator_enable/disable cannot actually disable it anymore.
    
    However, B was also configured with `regulator-boot-on', we wish it
    could be disabled afterwards.
    
    Signed-off-by: Rui Zhang <zr.zhang@vivo.com>
    Link: https://lore.kernel.org/r/20221201033806.2567812-1-zr.zhang@vivo.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 474e70bd90cf89116ae5f6b9c0e9a459626eaffe
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Wed Nov 30 12:00:12 2022 -0800

    libbpf: Avoid enum forward-declarations in public API in C++ mode
    
    [ Upstream commit b42693415b86f608049cf1b4870adc1dc65e58b0 ]
    
    C++ enum forward declarations are fundamentally not compatible with pure
    C enum definitions, and so libbpf's use of `enum bpf_stats_type;`
    forward declaration in libbpf/bpf.h public API header is causing C++
    compilation issues.
    
    More details can be found in [0], but it comes down to C++ supporting
    enum forward declaration only with explicitly specified backing type:
    
      enum bpf_stats_type: int;
    
    In C (and I believe it's a GCC extension also), such forward declaration
    is simply:
    
      enum bpf_stats_type;
    
    Further, in Linux UAPI this enum is defined in pure C way:
    
    enum bpf_stats_type { BPF_STATS_RUN_TIME = 0; }
    
    And even though in both cases backing type is int, which can be
    confirmed by looking at DWARF information, for C++ compiler actual enum
    definition and forward declaration are incompatible.
    
    To eliminate this problem, for C++ mode define input argument as int,
    which makes enum unnecessary in libbpf public header. This solves the
    issue and as demonstrated by next patch doesn't cause any unwanted
    compiler warnings, at least with default warnings setting.
    
      [0] https://stackoverflow.com/questions/42766839/c11-enum-forward-causes-underlying-type-mismatch
      [1] Closes: https://github.com/libbpf/libbpf/issues/249
    
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20221130200013.2997831-1-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62095428690c46a4121471df418c9efe061c4f82
Author: Wesley Chalmers <Wesley.Chalmers@amd.com>
Date:   Wed Nov 9 17:43:13 2022 -0500

    drm/amd/display: Use the largest vready_offset in pipe group
    
    [ Upstream commit 5842abd985b792a3b13a89b6dae4869b56656c92 ]
    
    [WHY]
    Corruption can occur in LB if vready_offset is not large enough.
    DML calculates vready_offset for each pipe, but we currently select the
    top pipe's vready_offset, which is not necessarily enough for all pipes
    in the group.
    
    [HOW]
    Wherever program_global_sync is currently called, iterate through the
    entire pipe group and find the highest vready_offset.
    
    Reviewed-by: Dillon Varone <Dillon.Varone@amd.com>
    Acked-by: Jasdeep Dhillon <jdhillon@amd.com>
    Signed-off-by: Wesley Chalmers <Wesley.Chalmers@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eff45bfbc25a2509a6362dea6e699e14083c693c
Author: Ye Bin <yebin10@huawei.com>
Date:   Thu Nov 17 10:29:40 2022 +0800

    blk-mq: fix possible memleak when register 'hctx' failed
    
    [ Upstream commit 4b7a21c57b14fbcd0e1729150189e5933f5088e9 ]
    
    There's issue as follows when do fault injection test:
    unreferenced object 0xffff888132a9f400 (size 512):
      comm "insmod", pid 308021, jiffies 4324277909 (age 509.733s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 08 f4 a9 32 81 88 ff ff  ...........2....
        08 f4 a9 32 81 88 ff ff 00 00 00 00 00 00 00 00  ...2............
      backtrace:
        [<00000000e8952bb4>] kmalloc_node_trace+0x22/0xa0
        [<00000000f9980e0f>] blk_mq_alloc_and_init_hctx+0x3f1/0x7e0
        [<000000002e719efa>] blk_mq_realloc_hw_ctxs+0x1e6/0x230
        [<000000004f1fda40>] blk_mq_init_allocated_queue+0x27e/0x910
        [<00000000287123ec>] __blk_mq_alloc_disk+0x67/0xf0
        [<00000000a2a34657>] 0xffffffffa2ad310f
        [<00000000b173f718>] 0xffffffffa2af824a
        [<0000000095a1dabb>] do_one_initcall+0x87/0x2a0
        [<00000000f32fdf93>] do_init_module+0xdf/0x320
        [<00000000cbe8541e>] load_module+0x3006/0x3390
        [<0000000069ed1bdb>] __do_sys_finit_module+0x113/0x1b0
        [<00000000a1a29ae8>] do_syscall_64+0x35/0x80
        [<000000009cd878b0>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Fault injection context as follows:
     kobject_add
     blk_mq_register_hctx
     blk_mq_sysfs_register
     blk_register_queue
     device_add_disk
     null_add_dev.part.0 [null_blk]
    
    As 'blk_mq_register_hctx' may already add some objects when failed halfway,
    but there isn't do fallback, caller don't know which objects add failed.
    To solve above issue just do fallback when add objects failed halfway in
    'blk_mq_register_hctx'.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Link: https://lore.kernel.org/r/20221117022940.873959-1-yebin@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0af6220bb1eed8225a5511de5a3bd386b94afa4
Author: Mazin Al Haddad <mazinalhaddad05@gmail.com>
Date:   Wed Aug 24 02:21:52 2022 +0100

    media: dvb-usb: fix memory leak in dvb_usb_adapter_init()
    
    [ Upstream commit 94d90fb06b94a90c176270d38861bcba34ce377d ]
    
    Syzbot reports a memory leak in "dvb_usb_adapter_init()".
    The leak is due to not accounting for and freeing current iteration's
    adapter->priv in case of an error. Currently if an error occurs,
    it will exit before incrementing "num_adapters_initalized",
    which is used as a reference counter to free all adap->priv
    in "dvb_usb_adapter_exit()". There are multiple error paths that
    can exit from before incrementing the counter. Including the
    error handling paths for "dvb_usb_adapter_stream_init()",
    "dvb_usb_adapter_dvb_init()" and "dvb_usb_adapter_frontend_init()"
    within "dvb_usb_adapter_init()".
    
    This means that in case of an error in any of these functions the
    current iteration is not accounted for and the current iteration's
    adap->priv is not freed.
    
    Fix this by freeing the current iteration's adap->priv in the
    "stream_init_err:" label in the error path. The rest of the
    (accounted for) adap->priv objects are freed in dvb_usb_adapter_exit()
    as expected using the num_adapters_initalized variable.
    
    Syzbot report:
    
    BUG: memory leak
    unreferenced object 0xffff8881172f1a00 (size 512):
      comm "kworker/0:2", pid 139, jiffies 4294994873 (age 10.960s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    backtrace:
        [<ffffffff844af012>] dvb_usb_adapter_init drivers/media/usb/dvb-usb/dvb-usb-init.c:75 [inline]
        [<ffffffff844af012>] dvb_usb_init drivers/media/usb/dvb-usb/dvb-usb-init.c:184 [inline]
        [<ffffffff844af012>] dvb_usb_device_init.cold+0x4e5/0x79e drivers/media/usb/dvb-usb/dvb-usb-init.c:308
        [<ffffffff830db21d>] dib0700_probe+0x8d/0x1b0 drivers/media/usb/dvb-usb/dib0700_core.c:883
        [<ffffffff82d3fdc7>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396
        [<ffffffff8274ab37>] call_driver_probe drivers/base/dd.c:542 [inline]
        [<ffffffff8274ab37>] really_probe.part.0+0xe7/0x310 drivers/base/dd.c:621
        [<ffffffff8274ae6c>] really_probe drivers/base/dd.c:583 [inline]
        [<ffffffff8274ae6c>] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:752
        [<ffffffff8274af6a>] driver_probe_device+0x2a/0x120 drivers/base/dd.c:782
        [<ffffffff8274b786>] __device_attach_driver+0xf6/0x140 drivers/base/dd.c:899
        [<ffffffff82747c87>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:427
        [<ffffffff8274b352>] __device_attach+0x122/0x260 drivers/base/dd.c:970
        [<ffffffff827498f6>] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:487
        [<ffffffff82745cdb>] device_add+0x5fb/0xdf0 drivers/base/core.c:3405
        [<ffffffff82d3d202>] usb_set_configuration+0x8f2/0xb80 drivers/usb/core/message.c:2170
        [<ffffffff82d4dbfc>] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238
        [<ffffffff82d3f49c>] usb_probe_device+0x5c/0x140 drivers/usb/core/driver.c:293
        [<ffffffff8274ab37>] call_driver_probe drivers/base/dd.c:542 [inline]
        [<ffffffff8274ab37>] really_probe.part.0+0xe7/0x310 drivers/base/dd.c:621
        [<ffffffff8274ae6c>] really_probe drivers/base/dd.c:583 [inline]
        [<ffffffff8274ae6c>] __driver_probe_device+0x10c/0x1e0 drivers/base/dd.c:752
    
    Link: https://syzkaller.appspot.com/bug?extid=f66dd31987e6740657be
    Reported-and-tested-by: syzbot+f66dd31987e6740657be@syzkaller.appspotmail.com
    
    Link: https://lore.kernel.org/linux-media/20220824012152.539788-1-mazinalhaddad05@gmail.com
    Signed-off-by: Mazin Al Haddad <mazinalhaddad05@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88a6f8a72d167294c0931c7874941bf37a41b6dd
Author: Lin Ma <linma@zju.edu.cn>
Date:   Sun Aug 7 15:59:52 2022 +0100

    media: dvbdev: adopts refcnt to avoid UAF
    
    [ Upstream commit 0fc044b2b5e2d05a1fa1fb0d7f270367a7855d79 ]
    
    dvb_unregister_device() is known that prone to use-after-free.
    That is, the cleanup from dvb_unregister_device() releases the dvb_device
    even if there are pointers stored in file->private_data still refer to it.
    
    This patch adds a reference counter into struct dvb_device and delays its
    deallocation until no pointer refers to the object.
    
    Link: https://lore.kernel.org/linux-media/20220807145952.10368-1-linma@zju.edu.cn
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 438cd29fec3ea09769639f6032687e0c1434dbe0
Author: Yan Lei <yan_lei@dahuatech.com>
Date:   Sun Apr 10 07:19:25 2022 +0100

    media: dvb-frontends: fix leak of memory fw
    
    [ Upstream commit a15fe8d9f1bf460a804bcf18a890bfd2cf0d5caa ]
    
    Link: https://lore.kernel.org/linux-media/20220410061925.4107-1-chinayanlei2002@163.com
    Signed-off-by: Yan Lei <yan_lei@dahuatech.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a96841f5aa4597e93c1f4d6fffb91a5ee344e6e6
Author: Maxim Korotkov <korotkov.maxim.s@gmail.com>
Date:   Tue Nov 22 15:29:01 2022 +0300

    ethtool: avoiding integer overflow in ethtool_phys_id()
    
    [ Upstream commit 64a8f8f7127da228d59a39e2c5e75f86590f90b4 ]
    
    The value of an arithmetic expression "n * id.data" is subject
    to possible overflow due to a failure to cast operands to a larger data
    type before performing arithmetic. Used macro for multiplication instead
    operator for avoiding overflow.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Signed-off-by: Maxim Korotkov <korotkov.maxim.s@gmail.com>
    Reviewed-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20221122122901.22294-1-korotkov.maxim.s@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b327c68ace71ba9cb3105ae6a5955a229e9bdca3
Author: Stanislav Fomichev <sdf@google.com>
Date:   Tue Nov 22 19:54:22 2022 -0800

    bpf: Prevent decl_tag from being referenced in func_proto arg
    
    [ Upstream commit f17472d4599697d701aa239b4c475a506bccfd19 ]
    
    Syzkaller managed to hit another decl_tag issue:
    
      btf_func_proto_check kernel/bpf/btf.c:4506 [inline]
      btf_check_all_types kernel/bpf/btf.c:4734 [inline]
      btf_parse_type_sec+0x1175/0x1980 kernel/bpf/btf.c:4763
      btf_parse kernel/bpf/btf.c:5042 [inline]
      btf_new_fd+0x65a/0xb00 kernel/bpf/btf.c:6709
      bpf_btf_load+0x6f/0x90 kernel/bpf/syscall.c:4342
      __sys_bpf+0x50a/0x6c0 kernel/bpf/syscall.c:5034
      __do_sys_bpf kernel/bpf/syscall.c:5093 [inline]
      __se_sys_bpf kernel/bpf/syscall.c:5091 [inline]
      __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5091
      do_syscall_64+0x54/0x70 arch/x86/entry/common.c:48
    
    This seems similar to commit ea68376c8bed ("bpf: prevent decl_tag from being
    referenced in func_proto") but for the argument.
    
    Reported-by: syzbot+8dd0551dda6020944c5d@syzkaller.appspotmail.com
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20221123035422.872531-2-sdf@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b8f3b939266c90f03b7cc7e26a4c28c7b64137b
Author: Stanislav Fomichev <sdf@google.com>
Date:   Mon Nov 21 10:29:13 2022 -0800

    ppp: associate skb with a device at tx
    
    [ Upstream commit 9f225444467b98579cf28d94f4ad053460dfdb84 ]
    
    Syzkaller triggered flow dissector warning with the following:
    
    r0 = openat$ppp(0xffffffffffffff9c, &(0x7f0000000000), 0xc0802, 0x0)
    ioctl$PPPIOCNEWUNIT(r0, 0xc004743e, &(0x7f00000000c0))
    ioctl$PPPIOCSACTIVE(r0, 0x40107446, &(0x7f0000000240)={0x2, &(0x7f0000000180)=[{0x20, 0x0, 0x0, 0xfffff034}, {0x6}]})
    pwritev(r0, &(0x7f0000000040)=[{&(0x7f0000000140)='\x00!', 0x2}], 0x1, 0x0, 0x0)
    
    [    9.485814] WARNING: CPU: 3 PID: 329 at net/core/flow_dissector.c:1016 __skb_flow_dissect+0x1ee0/0x1fa0
    [    9.485929]  skb_get_poff+0x53/0xa0
    [    9.485937]  bpf_skb_get_pay_offset+0xe/0x20
    [    9.485944]  ? ppp_send_frame+0xc2/0x5b0
    [    9.485949]  ? _raw_spin_unlock_irqrestore+0x40/0x60
    [    9.485958]  ? __ppp_xmit_process+0x7a/0xe0
    [    9.485968]  ? ppp_xmit_process+0x5b/0xb0
    [    9.485974]  ? ppp_write+0x12a/0x190
    [    9.485981]  ? do_iter_write+0x18e/0x2d0
    [    9.485987]  ? __import_iovec+0x30/0x130
    [    9.485997]  ? do_pwritev+0x1b6/0x240
    [    9.486016]  ? trace_hardirqs_on+0x47/0x50
    [    9.486023]  ? __x64_sys_pwritev+0x24/0x30
    [    9.486026]  ? do_syscall_64+0x3d/0x80
    [    9.486031]  ? entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Flow dissector tries to find skb net namespace either via device
    or via socket. Neigher is set in ppp_send_frame, so let's manually
    use ppp->dev.
    
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: linux-ppp@vger.kernel.org
    Reported-by: syzbot+41cab52ab62ee99ed24a@syzkaller.appspotmail.com
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d5a481a7fd0234f617535dc464ea010804a1129
Author: Schspa Shi <schspa@gmail.com>
Date:   Wed Nov 16 19:45:11 2022 +0800

    mrp: introduce active flags to prevent UAF when applicant uninit
    
    [ Upstream commit ab0377803dafc58f1e22296708c1c28e309414d6 ]
    
    The caller of del_timer_sync must prevent restarting of the timer, If
    we have no this synchronization, there is a small probability that the
    cancellation will not be successful.
    
    And syzbot report the fellowing crash:
    ==================================================================
    BUG: KASAN: use-after-free in hlist_add_head include/linux/list.h:929 [inline]
    BUG: KASAN: use-after-free in enqueue_timer+0x18/0xa4 kernel/time/timer.c:605
    Write at addr f9ff000024df6058 by task syz-fuzzer/2256
    Pointer tag: [f9], memory tag: [fe]
    
    CPU: 1 PID: 2256 Comm: syz-fuzzer Not tainted 6.1.0-rc5-syzkaller-00008-
    ge01d50cbd6ee #0
    Hardware name: linux,dummy-virt (DT)
    Call trace:
     dump_backtrace.part.0+0xe0/0xf0 arch/arm64/kernel/stacktrace.c:156
     dump_backtrace arch/arm64/kernel/stacktrace.c:162 [inline]
     show_stack+0x18/0x40 arch/arm64/kernel/stacktrace.c:163
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0x68/0x84 lib/dump_stack.c:106
     print_address_description mm/kasan/report.c:284 [inline]
     print_report+0x1a8/0x4a0 mm/kasan/report.c:395
     kasan_report+0x94/0xb4 mm/kasan/report.c:495
     __do_kernel_fault+0x164/0x1e0 arch/arm64/mm/fault.c:320
     do_bad_area arch/arm64/mm/fault.c:473 [inline]
     do_tag_check_fault+0x78/0x8c arch/arm64/mm/fault.c:749
     do_mem_abort+0x44/0x94 arch/arm64/mm/fault.c:825
     el1_abort+0x40/0x60 arch/arm64/kernel/entry-common.c:367
     el1h_64_sync_handler+0xd8/0xe4 arch/arm64/kernel/entry-common.c:427
     el1h_64_sync+0x64/0x68 arch/arm64/kernel/entry.S:576
     hlist_add_head include/linux/list.h:929 [inline]
     enqueue_timer+0x18/0xa4 kernel/time/timer.c:605
     mod_timer+0x14/0x20 kernel/time/timer.c:1161
     mrp_periodic_timer_arm net/802/mrp.c:614 [inline]
     mrp_periodic_timer+0xa0/0xc0 net/802/mrp.c:627
     call_timer_fn.constprop.0+0x24/0x80 kernel/time/timer.c:1474
     expire_timers+0x98/0xc4 kernel/time/timer.c:1519
    
    To fix it, we can introduce a new active flags to make sure the timer will
    not restart.
    
    Reported-by: syzbot+6fd64001c20aa99e34a4@syzkaller.appspotmail.com
    
    Signed-off-by: Schspa Shi <schspa@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 222cc04356984f3f98acfa756a69d4bed7c501ac
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 15 08:53:56 2022 +0000

    ipv6/sit: use DEV_STATS_INC() to avoid data-races
    
    [ Upstream commit cb34b7cf17ecf33499c9298943f85af247abc1e9 ]
    
    syzbot/KCSAN reported that multiple cpus are updating dev->stats.tx_error
    concurrently.
    
    This is because sit tunnels are NETIF_F_LLTX, meaning their ndo_start_xmit()
    is not protected by a spinlock.
    
    While original KCSAN report was about tx path, rx path has the same issue.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a3b0237107a85ae3aa105a340d155c24b793192
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 15 08:53:55 2022 +0000

    net: add atomic_long_t to net_device_stats fields
    
    [ Upstream commit 6c1c5097781f563b70a81683ea6fdac21637573b ]
    
    Long standing KCSAN issues are caused by data-race around
    some dev->stats changes.
    
    Most performance critical paths already use per-cpu
    variables, or per-queue ones.
    
    It is reasonable (and more correct) to use atomic operations
    for the slow paths.
    
    This patch adds an union for each field of net_device_stats,
    so that we can convert paths that are not yet protected
    by a spinlock or a mutex.
    
    netdev_stats_to_stats64() no longer has an #if BITS_PER_LONG==64
    
    Note that the memcpy() we were using on 64bit arches
    had no provision to avoid load-tearing,
    while atomic_long_read() is providing the needed protection
    at no cost.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58dd11f624277cae00551e69b34df7c995f04b9b
Author: Aurabindo Pillai <aurabindo.pillai@amd.com>
Date:   Wed Nov 2 15:35:53 2022 -0400

    drm/amd/display: fix array index out of bound error in bios parser
    
    [ Upstream commit 4fc1ba4aa589ca267468ad23fedef37562227d32 ]
    
    [Why&How]
    Firmware headers dictate that gpio_pin array only has a size of 8. The
    count returned from vbios however is greater than 8.
    
    Fix this by not using array indexing but incrementing the pointer since
    gpio_pin definition in atomfirmware.h is hardcoded to size 8
    
    Reviewed-by: Martin Leung <Martin.Leung@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3cc41e05e8af340a2a759b168c29fffdb9194eb
Author: Jiang Li <jiang.li@ugreen.com>
Date:   Mon Nov 7 22:16:59 2022 +0800

    md/raid1: stop mdx_raid1 thread when raid1 array run failed
    
    [ Upstream commit b611ad14006e5be2170d9e8e611bf49dff288911 ]
    
    fail run raid1 array when we assemble array with the inactive disk only,
    but the mdx_raid1 thread were not stop, Even if the associated resources
    have been released. it will caused a NULL dereference when we do poweroff.
    
    This causes the following Oops:
        [  287.587787] BUG: kernel NULL pointer dereference, address: 0000000000000070
        [  287.594762] #PF: supervisor read access in kernel mode
        [  287.599912] #PF: error_code(0x0000) - not-present page
        [  287.605061] PGD 0 P4D 0
        [  287.607612] Oops: 0000 [#1] SMP NOPTI
        [  287.611287] CPU: 3 PID: 5265 Comm: md0_raid1 Tainted: G     U            5.10.146 #0
        [  287.619029] Hardware name: xxxxxxx/To be filled by O.E.M, BIOS 5.19 06/16/2022
        [  287.626775] RIP: 0010:md_check_recovery+0x57/0x500 [md_mod]
        [  287.632357] Code: fe 01 00 00 48 83 bb 10 03 00 00 00 74 08 48 89 ......
        [  287.651118] RSP: 0018:ffffc90000433d78 EFLAGS: 00010202
        [  287.656347] RAX: 0000000000000000 RBX: ffff888105986800 RCX: 0000000000000000
        [  287.663491] RDX: ffffc90000433bb0 RSI: 00000000ffffefff RDI: ffff888105986800
        [  287.670634] RBP: ffffc90000433da0 R08: 0000000000000000 R09: c0000000ffffefff
        [  287.677771] R10: 0000000000000001 R11: ffffc90000433ba8 R12: ffff888105986800
        [  287.684907] R13: 0000000000000000 R14: fffffffffffffe00 R15: ffff888100b6b500
        [  287.692052] FS:  0000000000000000(0000) GS:ffff888277f80000(0000) knlGS:0000000000000000
        [  287.700149] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        [  287.705897] CR2: 0000000000000070 CR3: 000000000320a000 CR4: 0000000000350ee0
        [  287.713033] Call Trace:
        [  287.715498]  raid1d+0x6c/0xbbb [raid1]
        [  287.719256]  ? __schedule+0x1ff/0x760
        [  287.722930]  ? schedule+0x3b/0xb0
        [  287.726260]  ? schedule_timeout+0x1ed/0x290
        [  287.730456]  ? __switch_to+0x11f/0x400
        [  287.734219]  md_thread+0xe9/0x140 [md_mod]
        [  287.738328]  ? md_thread+0xe9/0x140 [md_mod]
        [  287.742601]  ? wait_woken+0x80/0x80
        [  287.746097]  ? md_register_thread+0xe0/0xe0 [md_mod]
        [  287.751064]  kthread+0x11a/0x140
        [  287.754300]  ? kthread_park+0x90/0x90
        [  287.757974]  ret_from_fork+0x1f/0x30
    
    In fact, when raid1 array run fail, we need to do
    md_unregister_thread() before raid1_free().
    
    Signed-off-by: Jiang Li <jiang.li@ugreen.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b621d17fe8b079574c773800148fb86907f3445d
Author: Li Zhong <floridsleeves@gmail.com>
Date:   Fri Sep 16 16:33:05 2022 -0700

    drivers/md/md-bitmap: check the return value of md_bitmap_get_counter()
    
    [ Upstream commit 3bd548e5b819b8c0f2c9085de775c5c7bff9052f ]
    
    Check the return value of md_bitmap_get_counter() in case it returns
    NULL pointer, which will result in a null pointer dereference.
    
    v2: update the check to include other dereference
    
    Signed-off-by: Li Zhong <floridsleeves@gmail.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5afac74f153bdc3b197b72b4c0736c1128804283
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 08:47:12 2022 -0700

    drm/mediatek: Fix return type of mtk_hdmi_bridge_mode_valid()
    
    [ Upstream commit 890d637523eec9d730e3885532fa1228ba678880 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/gpu/drm/mediatek/mtk_hdmi.c:1407:16: error: incompatible function pointer types initializing 'enum drm_mode_status (*)(struct drm_bridge *, const struct drm_display_info *, const struct drm_display_mode *)' with an expression of type 'int (struct drm_bridge *, const struct drm_display_info *, const struct drm_display_mode *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .mode_valid = mtk_hdmi_bridge_mode_valid,
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
      1 error generated.
    
    ->mode_valid() in 'struct drm_bridge_funcs' expects a return type of
    'enum drm_mode_status', not 'int'. Adjust the return type of
    mtk_hdmi_bridge_mode_valid() to match the prototype's to resolve the
    warning and CFI failure.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reported-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 072508e99dadcb65293c5a0d5df9993ad26f0459
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Nov 7 21:25:45 2022 +0200

    drm/sti: Use drm_mode_copy()
    
    [ Upstream commit 442cf8e22ba25a77cb9092d78733fdbac9844e50 ]
    
    struct drm_display_mode embeds a list head, so overwriting
    the full struct with another one will corrupt the list
    (if the destination mode is on a list). Use drm_mode_copy()
    instead which explicitly preserves the list head of
    the destination mode.
    
    Even if we know the destination mode is not on any list
    using drm_mode_copy() seems decent as it sets a good
    example. Bad examples of not using it might eventually
    get copied into code where preserving the list head
    actually matters.
    
    Obviously one case not covered here is when the mode
    itself is embedded in a larger structure and the whole
    structure is copied. But if we are careful when copying
    into modes embedded in structures I think we can be a
    little more reassured that bogus list heads haven't been
    propagated in.
    
    @is_mode_copy@
    @@
    drm_mode_copy(...)
    {
    ...
    }
    
    @depends on !is_mode_copy@
    struct drm_display_mode *mode;
    expression E, S;
    @@
    (
    - *mode = E
    + drm_mode_copy(mode, &E)
    |
    - memcpy(mode, E, S)
    + drm_mode_copy(mode, E)
    )
    
    @depends on !is_mode_copy@
    struct drm_display_mode mode;
    expression E;
    @@
    (
    - mode = E
    + drm_mode_copy(&mode, &E)
    |
    - memcpy(&mode, E, S)
    + drm_mode_copy(&mode, E)
    )
    
    @@
    struct drm_display_mode *mode;
    @@
    - &*mode
    + mode
    
    Cc: Alain Volmat <alain.volmat@foss.st.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221107192545.9896-8-ville.syrjala@linux.intel.com
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 673a3e019908a4c7441130c17a3b9a18eb130713
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Nov 7 21:25:44 2022 +0200

    drm/rockchip: Use drm_mode_copy()
    
    [ Upstream commit 2bfaa28000d2830d3209161a4541cce0660e1b84 ]
    
    struct drm_display_mode embeds a list head, so overwriting
    the full struct with another one will corrupt the list
    (if the destination mode is on a list). Use drm_mode_copy()
    instead which explicitly preserves the list head of
    the destination mode.
    
    Even if we know the destination mode is not on any list
    using drm_mode_copy() seems decent as it sets a good
    example. Bad examples of not using it might eventually
    get copied into code where preserving the list head
    actually matters.
    
    Obviously one case not covered here is when the mode
    itself is embedded in a larger structure and the whole
    structure is copied. But if we are careful when copying
    into modes embedded in structures I think we can be a
    little more reassured that bogus list heads haven't been
    propagated in.
    
    @is_mode_copy@
    @@
    drm_mode_copy(...)
    {
    ...
    }
    
    @depends on !is_mode_copy@
    struct drm_display_mode *mode;
    expression E, S;
    @@
    (
    - *mode = E
    + drm_mode_copy(mode, &E)
    |
    - memcpy(mode, E, S)
    + drm_mode_copy(mode, E)
    )
    
    @depends on !is_mode_copy@
    struct drm_display_mode mode;
    expression E;
    @@
    (
    - mode = E
    + drm_mode_copy(&mode, &E)
    |
    - memcpy(&mode, E, S)
    + drm_mode_copy(&mode, E)
    )
    
    @@
    struct drm_display_mode *mode;
    @@
    - &*mode
    + mode
    
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Sandy Huang <hjc@rock-chips.com>
    Cc: "Heiko Stübner" <heiko@sntech.de>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-rockchip@lists.infradead.org
    Link: https://patchwork.freedesktop.org/patch/msgid/20221107192545.9896-7-ville.syrjala@linux.intel.com
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9b07900d249139c20634d63fc16639369750e1b
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Nov 7 21:25:42 2022 +0200

    drm/msm: Use drm_mode_copy()
    
    [ Upstream commit b2a1c5ca50db22b3677676dd5bad5f6092429acf ]
    
    struct drm_display_mode embeds a list head, so overwriting
    the full struct with another one will corrupt the list
    (if the destination mode is on a list). Use drm_mode_copy()
    instead which explicitly preserves the list head of
    the destination mode.
    
    Even if we know the destination mode is not on any list
    using drm_mode_copy() seems decent as it sets a good
    example. Bad examples of not using it might eventually
    get copied into code where preserving the list head
    actually matters.
    
    Obviously one case not covered here is when the mode
    itself is embedded in a larger structure and the whole
    structure is copied. But if we are careful when copying
    into modes embedded in structures I think we can be a
    little more reassured that bogus list heads haven't been
    propagated in.
    
    @is_mode_copy@
    @@
    drm_mode_copy(...)
    {
    ...
    }
    
    @depends on !is_mode_copy@
    struct drm_display_mode *mode;
    expression E, S;
    @@
    (
    - *mode = E
    + drm_mode_copy(mode, &E)
    |
    - memcpy(mode, E, S)
    + drm_mode_copy(mode, E)
    )
    
    @depends on !is_mode_copy@
    struct drm_display_mode mode;
    expression E;
    @@
    (
    - mode = E
    + drm_mode_copy(&mode, &E)
    |
    - memcpy(&mode, E, S)
    + drm_mode_copy(&mode, E)
    )
    
    @@
    struct drm_display_mode *mode;
    @@
    - &*mode
    + mode
    
    Cc: Rob Clark <robdclark@gmail.com>
    Cc: Sean Paul <sean@poorly.run>
    Cc: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Cc: linux-arm-msm@vger.kernel.org
    Cc: freedreno@lists.freedesktop.org
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221107192545.9896-5-ville.syrjala@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ad774fb823c24bbeb21a15a67103ea7a6f5b928
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Thu Nov 3 10:01:30 2022 -0700

    s390/lcs: Fix return type of lcs_start_xmit()
    
    [ Upstream commit bb16db8393658e0978c3f0d30ae069e878264fa3 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/s390/net/lcs.c:2090:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .ndo_start_xmit         = lcs_start_xmit,
                                        ^~~~~~~~~~~~~~
      drivers/s390/net/lcs.c:2097:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .ndo_start_xmit         = lcs_start_xmit,
                                        ^~~~~~~~~~~~~~
    
    ->ndo_start_xmit() in 'struct net_device_ops' expects a return type of
    'netdev_tx_t', not 'int'. Adjust the return type of lcs_start_xmit() to
    match the prototype's to resolve the warning and potential CFI failure,
    should s390 select ARCH_SUPPORTS_CFI_CLANG in the future.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfbf0122ea1b9b3e73fa22c8ff6bd888935c54fc
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Thu Nov 3 10:01:29 2022 -0700

    s390/netiucv: Fix return type of netiucv_tx()
    
    [ Upstream commit 88d86d18d7cf7e9137c95f9d212bb9fff8a1b4be ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/s390/net/netiucv.c:1854:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .ndo_start_xmit         = netiucv_tx,
                                        ^~~~~~~~~~
    
    ->ndo_start_xmit() in 'struct net_device_ops' expects a return type of
    'netdev_tx_t', not 'int'. Adjust the return type of netiucv_tx() to
    match the prototype's to resolve the warning and potential CFI failure,
    should s390 select ARCH_SUPPORTS_CFI_CLANG in the future.
    
    Additionally, while in the area, remove a comment block that is no
    longer relevant.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8131d1880c094e1d9c320320350f0b7127e2e876
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Thu Nov 3 10:01:28 2022 -0700

    s390/ctcm: Fix return type of ctc{mp,}m_tx()
    
    [ Upstream commit aa5bf80c3c067b82b4362cd6e8e2194623bcaca6 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/s390/net/ctcm_main.c:1064:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .ndo_start_xmit         = ctcm_tx,
                                        ^~~~~~~
      drivers/s390/net/ctcm_main.c:1072:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .ndo_start_xmit         = ctcmpc_tx,
                                        ^~~~~~~~~
    
    ->ndo_start_xmit() in 'struct net_device_ops' expects a return type of
    'netdev_tx_t', not 'int'. Adjust the return type of ctc{mp,}m_tx() to
    match the prototype's to resolve the warning and potential CFI failure,
    should s390 select ARCH_SUPPORTS_CFI_CLANG in the future.
    
    Additionally, while in the area, remove a comment block that is no
    longer relevant.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9084e9930db562bdcd47fa199a66fb45e16dab5
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 08:25:40 2022 -0700

    drm/amdgpu: Fix type of second parameter in odn_edit_dpm_table() callback
    
    [ Upstream commit e4d0ef752081e7aa6ffb7ccac11c499c732a2e05 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/gpu/drm/amd/amdgpu/../pm/swsmu/amdgpu_smu.c:3008:29: error: incompatible function pointer types initializing 'int (*)(void *, uint32_t, long *, uint32_t)' (aka 'int (*)(void *, unsigned int, long *, unsigned int)') with an expression of type 'int (void *, enum PP_OD_DPM_TABLE_COMMAND, long *, uint32_t)' (aka 'int (void *, enum PP_OD_DPM_TABLE_COMMAND, long *, unsigned int)') [-Werror,-Wincompatible-function-pointer-types-strict]
              .odn_edit_dpm_table      = smu_od_edit_dpm_table,
                                         ^~~~~~~~~~~~~~~~~~~~~
      1 error generated.
    
    There are only two implementations of ->odn_edit_dpm_table() in 'struct
    amd_pm_funcs': smu_od_edit_dpm_table() and pp_odn_edit_dpm_table(). One
    has a second parameter type of 'enum PP_OD_DPM_TABLE_COMMAND' and the
    other uses 'u32'. Ultimately, smu_od_edit_dpm_table() calls
    ->od_edit_dpm_table() from 'struct pptable_funcs' and
    pp_odn_edit_dpm_table() calls ->odn_edit_dpm_table() from 'struct
    pp_hwmgr_func', which both have a second parameter type of 'enum
    PP_OD_DPM_TABLE_COMMAND'.
    
    Update the type parameter in both the prototype in 'struct amd_pm_funcs'
    and pp_odn_edit_dpm_table() to 'enum PP_OD_DPM_TABLE_COMMAND', which
    cleans up the warning.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reported-by: Sami Tolvanen <samitolvanen@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b74580d6184ecc73b0525643526c849cabadace3
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 08:25:39 2022 -0700

    drm/amdgpu: Fix type of second parameter in trans_msg() callback
    
    [ Upstream commit f0d0f1087333714ee683cc134a95afe331d7ddd9 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/gpu/drm/amd/amdgpu/mxgpu_ai.c:412:15: error: incompatible function pointer types initializing 'void (*)(struct amdgpu_device *, u32, u32, u32, u32)' (aka 'void (*)(struct amdgpu_device *, unsigned int, unsigned int, unsigned int, unsigned int)') with an expression of type 'void (struct amdgpu_device *, enum idh_request, u32, u32, u32)' (aka 'void (struct amdgpu_device *, enum idh_request, unsigned int, unsigned int, unsigned int)') [-Werror,-Wincompatible-function-pointer-types-strict]
              .trans_msg = xgpu_ai_mailbox_trans_msg,
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
      1 error generated.
    
      drivers/gpu/drm/amd/amdgpu/mxgpu_nv.c:435:15: error: incompatible function pointer types initializing 'void (*)(struct amdgpu_device *, u32, u32, u32, u32)' (aka 'void (*)(struct amdgpu_device *, unsigned int, unsigned int, unsigned int, unsigned int)') with an expression of type 'void (struct amdgpu_device *, enum idh_request, u32, u32, u32)' (aka 'void (struct amdgpu_device *, enum idh_request, unsigned int, unsigned int, unsigned int)') [-Werror,-Wincompatible-function-pointer-types-strict]
              .trans_msg = xgpu_nv_mailbox_trans_msg,
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
      1 error generated.
    
    The type of the second parameter in the prototype should be 'enum
    idh_request' instead of 'u32'. Update it to clear up the warnings.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Reported-by: Sami Tolvanen <samitolvanen@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 314f7092b27749bdde44c14095b5533afa2a3bc8
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Oct 18 02:25:24 2022 -0700

    igb: Do not free q_vector unless new one was allocated
    
    [ Upstream commit 0668716506ca66f90d395f36ccdaebc3e0e84801 ]
    
    Avoid potential use-after-free condition under memory pressure. If the
    kzalloc() fails, q_vector will be freed but left in the original
    adapter->q_vector[v_idx] array position.
    
    Cc: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Cc: Tony Nguyen <anthony.l.nguyen@intel.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Cc: intel-wired-lan@lists.osuosl.org
    Cc: netdev@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Gurucharan <gurucharanx.g@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b12d2aa264bac35bff9b5399bb162262b2b8949
Author: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
Date:   Mon Oct 24 16:13:29 2022 +0900

    wifi: brcmfmac: Fix potential shift-out-of-bounds in brcmf_fw_alloc_request()
    
    [ Upstream commit 81d17f6f3331f03c8eafdacea68ab773426c1e3c ]
    
    This patch fixes a shift-out-of-bounds in brcmfmac that occurs in
    BIT(chiprev) when a 'chiprev' provided by the device is too large.
    It should also not be equal to or greater than BITS_PER_TYPE(u32)
    as we do bitwise AND with a u32 variable and BIT(chiprev). The patch
    adds a check that makes the function return NULL if that is the case.
    Note that the NULL case is later handled by the bus-specific caller,
    brcmf_usb_probe_cb() or brcmf_usb_reset_resume(), for example.
    
    Found by a modified version of syzkaller.
    
    UBSAN: shift-out-of-bounds in drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c
    shift exponent 151055786 is too large for 64-bit type 'long unsigned int'
    CPU: 0 PID: 1885 Comm: kworker/0:2 Tainted: G           O      5.14.0+ #132
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    Workqueue: usb_hub_wq hub_event
    Call Trace:
     dump_stack_lvl+0x57/0x7d
     ubsan_epilogue+0x5/0x40
     __ubsan_handle_shift_out_of_bounds.cold+0x53/0xdb
     ? lock_chain_count+0x20/0x20
     brcmf_fw_alloc_request.cold+0x19/0x3ea
     ? brcmf_fw_get_firmwares+0x250/0x250
     ? brcmf_usb_ioctl_resp_wait+0x1a7/0x1f0
     brcmf_usb_get_fwname+0x114/0x1a0
     ? brcmf_usb_reset_resume+0x120/0x120
     ? number+0x6c4/0x9a0
     brcmf_c_process_clm_blob+0x168/0x590
     ? put_dec+0x90/0x90
     ? enable_ptr_key_workfn+0x20/0x20
     ? brcmf_common_pd_remove+0x50/0x50
     ? rcu_read_lock_sched_held+0xa1/0xd0
     brcmf_c_preinit_dcmds+0x673/0xc40
     ? brcmf_c_set_joinpref_default+0x100/0x100
     ? rcu_read_lock_sched_held+0xa1/0xd0
     ? rcu_read_lock_bh_held+0xb0/0xb0
     ? lock_acquire+0x19d/0x4e0
     ? find_held_lock+0x2d/0x110
     ? brcmf_usb_deq+0x1cc/0x260
     ? mark_held_locks+0x9f/0xe0
     ? lockdep_hardirqs_on_prepare+0x273/0x3e0
     ? _raw_spin_unlock_irqrestore+0x47/0x50
     ? trace_hardirqs_on+0x1c/0x120
     ? brcmf_usb_deq+0x1a7/0x260
     ? brcmf_usb_rx_fill_all+0x5a/0xf0
     brcmf_attach+0x246/0xd40
     ? wiphy_new_nm+0x1476/0x1d50
     ? kmemdup+0x30/0x40
     brcmf_usb_probe+0x12de/0x1690
     ? brcmf_usbdev_qinit.constprop.0+0x470/0x470
     usb_probe_interface+0x25f/0x710
     really_probe+0x1be/0xa90
     __driver_probe_device+0x2ab/0x460
     ? usb_match_id.part.0+0x88/0xc0
     driver_probe_device+0x49/0x120
     __device_attach_driver+0x18a/0x250
     ? driver_allows_async_probing+0x120/0x120
     bus_for_each_drv+0x123/0x1a0
     ? bus_rescan_devices+0x20/0x20
     ? lockdep_hardirqs_on_prepare+0x273/0x3e0
     ? trace_hardirqs_on+0x1c/0x120
     __device_attach+0x207/0x330
     ? device_bind_driver+0xb0/0xb0
     ? kobject_uevent_env+0x230/0x12c0
     bus_probe_device+0x1a2/0x260
     device_add+0xa61/0x1ce0
     ? __mutex_unlock_slowpath+0xe7/0x660
     ? __fw_devlink_link_to_suppliers+0x550/0x550
     usb_set_configuration+0x984/0x1770
     ? kernfs_create_link+0x175/0x230
     usb_generic_driver_probe+0x69/0x90
     usb_probe_device+0x9c/0x220
     really_probe+0x1be/0xa90
     __driver_probe_device+0x2ab/0x460
     driver_probe_device+0x49/0x120
     __device_attach_driver+0x18a/0x250
     ? driver_allows_async_probing+0x120/0x120
     bus_for_each_drv+0x123/0x1a0
     ? bus_rescan_devices+0x20/0x20
     ? lockdep_hardirqs_on_prepare+0x273/0x3e0
     ? trace_hardirqs_on+0x1c/0x120
     __device_attach+0x207/0x330
     ? device_bind_driver+0xb0/0xb0
     ? kobject_uevent_env+0x230/0x12c0
     bus_probe_device+0x1a2/0x260
     device_add+0xa61/0x1ce0
     ? __fw_devlink_link_to_suppliers+0x550/0x550
     usb_new_device.cold+0x463/0xf66
     ? hub_disconnect+0x400/0x400
     ? _raw_spin_unlock_irq+0x24/0x30
     hub_event+0x10d5/0x3330
     ? hub_port_debounce+0x280/0x280
     ? __lock_acquire+0x1671/0x5790
     ? wq_calc_node_cpumask+0x170/0x2a0
     ? lock_release+0x640/0x640
     ? rcu_read_lock_sched_held+0xa1/0xd0
     ? rcu_read_lock_bh_held+0xb0/0xb0
     ? lockdep_hardirqs_on_prepare+0x273/0x3e0
     process_one_work+0x873/0x13e0
     ? lock_release+0x640/0x640
     ? pwq_dec_nr_in_flight+0x320/0x320
     ? rwlock_bug.part.0+0x90/0x90
     worker_thread+0x8b/0xd10
     ? __kthread_parkme+0xd9/0x1d0
     ? process_one_work+0x13e0/0x13e0
     kthread+0x379/0x450
     ? _raw_spin_unlock_irq+0x24/0x30
     ? set_kthread_struct+0x100/0x100
     ret_from_fork+0x1f/0x30
    
    Reported-by: Dokyung Song <dokyungs@yonsei.ac.kr>
    Reported-by: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
    Reported-by: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
    Signed-off-by: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221024071329.504277-1-linuxlovemin@yonsei.ac.kr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19bb9e98e1035ac2916eb7d22c80a41ee0924f77
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 09:06:10 2022 -0700

    hamradio: baycom_epp: Fix return type of baycom_send_packet()
    
    [ Upstream commit c5733e5b15d91ab679646ec3149e192996a27d5d ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/net/hamradio/baycom_epp.c:1119:25: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .ndo_start_xmit      = baycom_send_packet,
                                    ^~~~~~~~~~~~~~~~~~
      1 error generated.
    
    ->ndo_start_xmit() in 'struct net_device_ops' expects a return type of
    'netdev_tx_t', not 'int'. Adjust the return type of baycom_send_packet()
    to match the prototype's to resolve the warning and CFI failure.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221102160610.1186145-1-nathan@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a413ebb6049edd881c6427cfa25a7efddd6a4f74
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Nov 2 09:09:33 2022 -0700

    net: ethernet: ti: Fix return type of netcp_ndo_start_xmit()
    
    [ Upstream commit 63fe6ff674a96cfcfc0fa8df1051a27aa31c70b4 ]
    
    With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
    indirect call targets are validated against the expected function
    pointer prototype to make sure the call target is valid to help mitigate
    ROP attacks. If they are not identical, there is a failure at run time,
    which manifests as either a kernel panic or thread getting killed. A
    proposed warning in clang aims to catch these at compile time, which
    reveals:
    
      drivers/net/ethernet/ti/netcp_core.c:1944:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
              .ndo_start_xmit         = netcp_ndo_start_xmit,
                                        ^~~~~~~~~~~~~~~~~~~~
      1 error generated.
    
    ->ndo_start_xmit() in 'struct net_device_ops' expects a return type of
    'netdev_tx_t', not 'int'. Adjust the return type of
    netcp_ndo_start_xmit() to match the prototype's to resolve the warning
    and CFI failure.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1750
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221102160933.1601260-1-nathan@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d3f4478d22b2cb1810f6fe0f797411e9d87b3e5
Author: Stanislav Fomichev <sdf@google.com>
Date:   Thu Oct 27 15:55:37 2022 -0700

    bpf: make sure skb->len != 0 when redirecting to a tunneling device
    
    [ Upstream commit 07ec7b502800ba9f7b8b15cb01dd6556bb41aaca ]
    
    syzkaller managed to trigger another case where skb->len == 0
    when we enter __dev_queue_xmit:
    
    WARNING: CPU: 0 PID: 2470 at include/linux/skbuff.h:2576 skb_assert_len include/linux/skbuff.h:2576 [inline]
    WARNING: CPU: 0 PID: 2470 at include/linux/skbuff.h:2576 __dev_queue_xmit+0x2069/0x35e0 net/core/dev.c:4295
    
    Call Trace:
     dev_queue_xmit+0x17/0x20 net/core/dev.c:4406
     __bpf_tx_skb net/core/filter.c:2115 [inline]
     __bpf_redirect_no_mac net/core/filter.c:2140 [inline]
     __bpf_redirect+0x5fb/0xda0 net/core/filter.c:2163
     ____bpf_clone_redirect net/core/filter.c:2447 [inline]
     bpf_clone_redirect+0x247/0x390 net/core/filter.c:2419
     bpf_prog_48159a89cb4a9a16+0x59/0x5e
     bpf_dispatcher_nop_func include/linux/bpf.h:897 [inline]
     __bpf_prog_run include/linux/filter.h:596 [inline]
     bpf_prog_run include/linux/filter.h:603 [inline]
     bpf_test_run+0x46c/0x890 net/bpf/test_run.c:402
     bpf_prog_test_run_skb+0xbdc/0x14c0 net/bpf/test_run.c:1170
     bpf_prog_test_run+0x345/0x3c0 kernel/bpf/syscall.c:3648
     __sys_bpf+0x43a/0x6c0 kernel/bpf/syscall.c:5005
     __do_sys_bpf kernel/bpf/syscall.c:5091 [inline]
     __se_sys_bpf kernel/bpf/syscall.c:5089 [inline]
     __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5089
     do_syscall_64+0x54/0x70 arch/x86/entry/common.c:48
     entry_SYSCALL_64_after_hwframe+0x61/0xc6
    
    The reproducer doesn't really reproduce outside of syzkaller
    environment, so I'm taking a guess here. It looks like we
    do generate correct ETH_HLEN-sized packet, but we redirect
    the packet to the tunneling device. Before we do so, we
    __skb_pull l2 header and arrive again at skb->len == 0.
    Doesn't seem like we can do anything better than having
    an explicit check after __skb_pull?
    
    Cc: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot+f635e86ec3fa0a37e019@syzkaller.appspotmail.com
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Link: https://lore.kernel.org/r/20221027225537.353077-1-sdf@google.com
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be2803dd29bdb4a450fd6b4adc5f4d28d61d00ec
Author: Jiri Slaby (SUSE) <jirislaby@kernel.org>
Date:   Mon Oct 31 12:43:54 2022 +0100

    qed (gcc13): use u16 for fid to be big enough
    
    [ Upstream commit 7d84118229bf7f7290438c85caa8e49de52d50c1 ]
    
    gcc 13 correctly reports overflow in qed_grc_dump_addr_range():
    In file included from drivers/net/ethernet/qlogic/qed/qed.h:23,
                     from drivers/net/ethernet/qlogic/qed/qed_debug.c:10:
    drivers/net/ethernet/qlogic/qed/qed_debug.c: In function 'qed_grc_dump_addr_range':
    include/linux/qed/qed_if.h:1217:9: error: overflow in conversion from 'int' to 'u8' {aka 'unsigned char'} changes value from '(int)vf_id << 8 | 128' to '128' [-Werror=overflow]
    
    We do:
      u8 fid;
      ...
      fid = vf_id << 8 | 128;
    
    Since fid is 16bit (and the stored value above too), fid should be u16,
    not u8. Fix that.
    
    Cc: Martin Liska <mliska@suse.cz>
    Cc: Ariel Elior <aelior@marvell.com>
    Cc: Manish Chopra <manishc@marvell.com>
    Signed-off-by: Jiri Slaby (SUSE) <jirislaby@kernel.org>
    Link: https://lore.kernel.org/r/20221031114354.10398-1-jirislaby@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8bc0ac43833ad072aa55fd7c23ebae779762fa6
Author: Hamza Mahfooz <hamza.mahfooz@amd.com>
Date:   Tue Oct 25 15:04:36 2022 -0400

    Revert "drm/amd/display: Limit max DSC target bpp for specific monitors"
    
    [ Upstream commit 6803dfd3a69ccb318772463a86e40929fd4fbac7 ]
    
    This reverts commit 55eea8ef98641f6e1e1c202bd3a49a57c1dd4059.
    
    This quirk is now handled in the DRM core, so we can drop all of
    the internal code that was added to handle it.
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc8deb82cca522275963b9f1a4739b58fa2a1506
Author: gehao <gehao@kylinos.cn>
Date:   Wed Oct 26 17:54:05 2022 +0800

    drm/amd/display: prevent memory leak
    
    [ Upstream commit d232afb1f3417ae8194ccf19ad3a8360e70e104e ]
    
    In dce6(0,1,4)_create_resource_pool and dce80_create_resource_pool
    the allocated memory should be released if construct pool fails.
    
    Reviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: gehao <gehao@kylinos.cn>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49dd0e8029e883563f3835a45ca0731f65b0b9a1
Author: Zhang Yuchen <zhangyuchen.lcr@bytedance.com>
Date:   Fri Oct 7 17:26:17 2022 +0800

    ipmi: fix memleak when unload ipmi driver
    
    [ Upstream commit 36992eb6b9b83f7f9cdc8e74fb5799d7b52e83e9 ]
    
    After the IPMI disconnect problem, the memory kept rising and we tried
    to unload the driver to free the memory. However, only part of the
    free memory is recovered after the driver is uninstalled. Using
    ebpf to hook free functions, we find that neither ipmi_user nor
    ipmi_smi_msg is free, only ipmi_recv_msg is free.
    
    We find that the deliver_smi_err_response call in clean_smi_msgs does
    the destroy processing on each message from the xmit_msg queue without
    checking the return value and free ipmi_smi_msg.
    
    deliver_smi_err_response is called only at this location. Adding the
    free handling has no effect.
    
    To verify, try using ebpf to trace the free function.
    
      $ bpftrace -e 'kretprobe:ipmi_alloc_recv_msg {printf("alloc rcv
          %p\n",retval);} kprobe:free_recv_msg {printf("free recv %p\n",
          arg0)} kretprobe:ipmi_alloc_smi_msg {printf("alloc smi %p\n",
            retval);} kprobe:free_smi_msg {printf("free smi  %p\n",arg0)}'
    
    Signed-off-by: Zhang Yuchen <zhangyuchen.lcr@bytedance.com>
    Message-Id: <20221007092617.87597-4-zhangyuchen.lcr@bytedance.com>
    [Fixed the comment above handle_one_recv_msg().]
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68871c005f3c9dced8c53161c61441712d0945a9
Author: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Date:   Mon Oct 10 14:19:43 2022 +0200

    ASoC: codecs: rt298: Add quirk for KBL-R RVP platform
    
    [ Upstream commit 953dbd1cef18ce9ac0d69c1bd735b929fe52a17e ]
    
    KBL-R RVP platforms also use combojack, so we need to enable that
    configuration for them.
    
    Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20221010121955.718168-4-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3eca9697c2f3905dea3ad2fc536ebaa1fbd735bd
Author: Shigeru Yoshida <syoshida@redhat.com>
Date:   Mon Oct 10 03:32:23 2022 +0900

    wifi: ar5523: Fix use-after-free on ar5523_cmd() timed out
    
    [ Upstream commit b6702a942a069c2a975478d719e98d83cdae1797 ]
    
    syzkaller reported use-after-free with the stack trace like below [1]:
    
    [   38.960489][    C3] ==================================================================
    [   38.963216][    C3] BUG: KASAN: use-after-free in ar5523_cmd_tx_cb+0x220/0x240
    [   38.964950][    C3] Read of size 8 at addr ffff888048e03450 by task swapper/3/0
    [   38.966363][    C3]
    [   38.967053][    C3] CPU: 3 PID: 0 Comm: swapper/3 Not tainted 6.0.0-09039-ga6afa4199d3d-dirty #18
    [   38.968464][    C3] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-1.fc36 04/01/2014
    [   38.969959][    C3] Call Trace:
    [   38.970841][    C3]  <IRQ>
    [   38.971663][    C3]  dump_stack_lvl+0xfc/0x174
    [   38.972620][    C3]  print_report.cold+0x2c3/0x752
    [   38.973626][    C3]  ? ar5523_cmd_tx_cb+0x220/0x240
    [   38.974644][    C3]  kasan_report+0xb1/0x1d0
    [   38.975720][    C3]  ? ar5523_cmd_tx_cb+0x220/0x240
    [   38.976831][    C3]  ar5523_cmd_tx_cb+0x220/0x240
    [   38.978412][    C3]  __usb_hcd_giveback_urb+0x353/0x5b0
    [   38.979755][    C3]  usb_hcd_giveback_urb+0x385/0x430
    [   38.981266][    C3]  dummy_timer+0x140c/0x34e0
    [   38.982925][    C3]  ? notifier_call_chain+0xb5/0x1e0
    [   38.984761][    C3]  ? rcu_read_lock_sched_held+0xb/0x60
    [   38.986242][    C3]  ? lock_release+0x51c/0x790
    [   38.987323][    C3]  ? _raw_read_unlock_irqrestore+0x37/0x70
    [   38.988483][    C3]  ? __wake_up_common_lock+0xde/0x130
    [   38.989621][    C3]  ? reacquire_held_locks+0x4a0/0x4a0
    [   38.990777][    C3]  ? lock_acquire+0x472/0x550
    [   38.991919][    C3]  ? rcu_read_lock_sched_held+0xb/0x60
    [   38.993138][    C3]  ? lock_acquire+0x472/0x550
    [   38.994890][    C3]  ? dummy_urb_enqueue+0x860/0x860
    [   38.996266][    C3]  ? do_raw_spin_unlock+0x16f/0x230
    [   38.997670][    C3]  ? dummy_urb_enqueue+0x860/0x860
    [   38.999116][    C3]  call_timer_fn+0x1a0/0x6a0
    [   39.000668][    C3]  ? add_timer_on+0x4a0/0x4a0
    [   39.002137][    C3]  ? reacquire_held_locks+0x4a0/0x4a0
    [   39.003809][    C3]  ? __next_timer_interrupt+0x226/0x2a0
    [   39.005509][    C3]  __run_timers.part.0+0x69a/0xac0
    [   39.007025][    C3]  ? dummy_urb_enqueue+0x860/0x860
    [   39.008716][    C3]  ? call_timer_fn+0x6a0/0x6a0
    [   39.010254][    C3]  ? cpuacct_percpu_seq_show+0x10/0x10
    [   39.011795][    C3]  ? kvm_sched_clock_read+0x14/0x40
    [   39.013277][    C3]  ? sched_clock_cpu+0x69/0x2b0
    [   39.014724][    C3]  run_timer_softirq+0xb6/0x1d0
    [   39.016196][    C3]  __do_softirq+0x1d2/0x9be
    [   39.017616][    C3]  __irq_exit_rcu+0xeb/0x190
    [   39.019004][    C3]  irq_exit_rcu+0x5/0x20
    [   39.020361][    C3]  sysvec_apic_timer_interrupt+0x8f/0xb0
    [   39.021965][    C3]  </IRQ>
    [   39.023237][    C3]  <TASK>
    
    In ar5523_probe(), ar5523_host_available() calls ar5523_cmd() as below
    (there are other functions which finally call ar5523_cmd()):
    
    ar5523_probe()
    -> ar5523_host_available()
       -> ar5523_cmd_read()
          -> ar5523_cmd()
    
    If ar5523_cmd() timed out, then ar5523_host_available() failed and
    ar5523_probe() freed the device structure.  So, ar5523_cmd_tx_cb()
    might touch the freed structure.
    
    This patch fixes this issue by canceling in-flight tx cmd if submitted
    urb timed out.
    
    Link: https://syzkaller.appspot.com/bug?id=9e12b2d54300842b71bdd18b54971385ff0d0d3a [1]
    Reported-by: syzbot+95001b1fd6dfcc716c29@syzkaller.appspotmail.com
    Signed-off-by: Shigeru Yoshida <syoshida@redhat.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20221009183223.420015-1-syoshida@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c319196a0e34ed2e66d6f876f58d8d446335c2a7
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Sun Oct 9 00:15:32 2022 +0300

    wifi: ath9k: verify the expected usb_endpoints are present
    
    [ Upstream commit 16ef02bad239f11f322df8425d302be62f0443ce ]
    
    The bug arises when a USB device claims to be an ATH9K but doesn't
    have the expected endpoints. (In this case there was an interrupt
    endpoint where the driver expected a bulk endpoint.) The kernel
    needs to be able to handle such devices without getting an internal error.
    
    usb 1-1: BOGUS urb xfer, pipe 3 != type 1
    WARNING: CPU: 3 PID: 500 at drivers/usb/core/urb.c:493 usb_submit_urb+0xce2/0x1430 drivers/usb/core/urb.c:493
    Modules linked in:
    CPU: 3 PID: 500 Comm: kworker/3:2 Not tainted 5.10.135-syzkaller #0
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
    Workqueue: events request_firmware_work_func
    RIP: 0010:usb_submit_urb+0xce2/0x1430 drivers/usb/core/urb.c:493
    Call Trace:
     ath9k_hif_usb_alloc_rx_urbs drivers/net/wireless/ath/ath9k/hif_usb.c:908 [inline]
     ath9k_hif_usb_alloc_urbs+0x75e/0x1010 drivers/net/wireless/ath/ath9k/hif_usb.c:1019
     ath9k_hif_usb_dev_init drivers/net/wireless/ath/ath9k/hif_usb.c:1109 [inline]
     ath9k_hif_usb_firmware_cb+0x142/0x530 drivers/net/wireless/ath/ath9k/hif_usb.c:1242
     request_firmware_work_func+0x12e/0x240 drivers/base/firmware_loader/main.c:1097
     process_one_work+0x9af/0x1600 kernel/workqueue.c:2279
     worker_thread+0x61d/0x12f0 kernel/workqueue.c:2425
     kthread+0x3b4/0x4a0 kernel/kthread.c:313
     ret_from_fork+0x22/0x30 arch/x86/entry/entry_64.S:299
    
    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.
    
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20221008211532.74583-1-pchelkin@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10c4b63d09a5b0ebf1b61af1dae7f25555cf58b6
Author: Wright Feng <wright.feng@cypress.com>
Date:   Wed Sep 28 22:10:00 2022 -0500

    brcmfmac: return error when getting invalid max_flowrings from dongle
    
    [ Upstream commit 2aca4f3734bd717e04943ddf340d49ab62299a00 ]
    
    When firmware hit trap at initialization, host will read abnormal
    max_flowrings number from dongle, and it will cause kernel panic when
    doing iowrite to initialize dongle ring.
    To detect this error at early stage, we directly return error when getting
    invalid max_flowrings(>256).
    
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Ian Lin <ian.lin@infineon.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220929031001.9962-3-ian.lin@infineon.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad31bc146f0e4521805695f4f99d8a3c3b2761f6
Author: Ming Qian <ming.qian@nxp.com>
Date:   Thu Aug 4 17:38:41 2022 +0800

    media: imx-jpeg: Disable useless interrupt to avoid kernel panic
    
    [ Upstream commit c3720e65c9013a7b2a5dbb63e6bf6d74a35dd894 ]
    
    There is a hardware bug that the interrupt STMBUF_HALF may be triggered
    after or when disable interrupt.
    It may led to unexpected kernel panic.
    And interrupt STMBUF_HALF and STMBUF_RTND have no other effect.
    So disable them and the unused interrupts.
    
    meanwhile clear the interrupt status when disable interrupt.
    
    Signed-off-by: Ming Qian <ming.qian@nxp.com>
    Reviewed-by: Mirela Rabulea <mirela.rabulea@nxp.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e1a6880e1e9b374ea0ac11a078d02726705ebf6
Author: Doug Brown <doug@schmorgal.com>
Date:   Sat Sep 10 13:29:38 2022 -0700

    drm/etnaviv: add missing quirks for GC300
    
    [ Upstream commit cc7d3fb446a91f24978a6aa59cbb578f92e22242 ]
    
    The GC300's features register doesn't specify that a 2D pipe is
    available, and like the GC600, its idle register reports zero bits where
    modules aren't present.
    
    Signed-off-by: Doug Brown <doug@schmorgal.com>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 367296925c7625c3969d2a78d7a3e1dee161beb5
Author: ZhangPeng <zhangpeng362@huawei.com>
Date:   Wed Nov 30 06:59:59 2022 +0000

    hfs: fix OOB Read in __hfs_brec_find
    
    [ Upstream commit 8d824e69d9f3fa3121b2dda25053bae71e2460d2 ]
    
    Syzbot reported a OOB read bug:
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in hfs_strcmp+0x117/0x190
    fs/hfs/string.c:84
    Read of size 1 at addr ffff88807eb62c4e by task kworker/u4:1/11
    CPU: 1 PID: 11 Comm: kworker/u4:1 Not tainted
    6.1.0-rc6-syzkaller-00308-g644e9524388a #0
    Workqueue: writeback wb_workfn (flush-7:0)
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0x1b1/0x28e lib/dump_stack.c:106
     print_address_description+0x74/0x340 mm/kasan/report.c:284
     print_report+0x107/0x1f0 mm/kasan/report.c:395
     kasan_report+0xcd/0x100 mm/kasan/report.c:495
     hfs_strcmp+0x117/0x190 fs/hfs/string.c:84
     __hfs_brec_find+0x213/0x5c0 fs/hfs/bfind.c:75
     hfs_brec_find+0x276/0x520 fs/hfs/bfind.c:138
     hfs_write_inode+0x34c/0xb40 fs/hfs/inode.c:462
     write_inode fs/fs-writeback.c:1440 [inline]
    
    If the input inode of hfs_write_inode() is incorrect:
    struct inode
      struct hfs_inode_info
        struct hfs_cat_key
          struct hfs_name
            u8 len # len is greater than HFS_NAMELEN(31) which is the
    maximum length of an HFS filename
    
    OOB read occurred:
    hfs_write_inode()
      hfs_brec_find()
        __hfs_brec_find()
          hfs_cat_keycmp()
            hfs_strcmp() # OOB read occurred due to len is too large
    
    Fix this by adding a Check on len in hfs_write_inode() before calling
    hfs_brec_find().
    
    Link: https://lkml.kernel.org/r/20221130065959.2168236-1-zhangpeng362@huawei.com
    Signed-off-by: ZhangPeng <zhangpeng362@huawei.com>
    Reported-by: <syzbot+e836ff7133ac02be825f@syzkaller.appspotmail.com>
    Cc: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Cc: Ira Weiny <ira.weiny@intel.com>
    Cc: Jeff Layton <jlayton@kernel.org>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Nanyong Sun <sunnanyong@huawei.com>
    Cc: Viacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebe16676e1dcaa4556ec4d36ca40c82e99e88cfa
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Sat May 15 22:06:31 2021 +0800

    acct: fix potential integer overflow in encode_comp_t()
    
    [ Upstream commit c5f31c655bcc01b6da53b836ac951c1556245305 ]
    
    The integer overflow is descripted with following codes:
      > 317 static comp_t encode_comp_t(u64 value)
      > 318 {
      > 319         int exp, rnd;
        ......
      > 341         exp <<= MANTSIZE;
      > 342         exp += value;
      > 343         return exp;
      > 344 }
    
    Currently comp_t is defined as type of '__u16', but the variable 'exp' is
    type of 'int', so overflow would happen when variable 'exp' in line 343 is
    greater than 65535.
    
    Link: https://lkml.kernel.org/r/20210515140631.369106-3-zhengyejian1@huawei.com
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Zhang Jinhao <zhangjinhao2@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b6ef451b5701b37d9a5905534595776a662edfc
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Thu Oct 27 13:43:06 2022 +0900

    nilfs2: fix shift-out-of-bounds due to too large exponent of block size
    
    [ Upstream commit ebeccaaef67a4895d2496ab8d9c2fb8d89201211 ]
    
    If field s_log_block_size of superblock data is corrupted and too large,
    init_nilfs() and load_nilfs() still can trigger a shift-out-of-bounds
    warning followed by a kernel panic (if panic_on_warn is set):
    
     shift exponent 38973 is too large for 32-bit type 'int'
     Call Trace:
      <TASK>
      dump_stack_lvl+0xcd/0x134
      ubsan_epilogue+0xb/0x50
      __ubsan_handle_shift_out_of_bounds.cold.12+0x17b/0x1f5
      init_nilfs.cold.11+0x18/0x1d [nilfs2]
      nilfs_mount+0x9b5/0x12b0 [nilfs2]
      ...
    
    This fixes the issue by adding and using a new helper function for getting
    block size with sanity check.
    
    Link: https://lkml.kernel.org/r/20221027044306.42774-3-konishi.ryusuke@gmail.com
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b47f5c579c8186f7f5ab5e4254e0734ea5b7bf7a
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Thu Oct 27 13:43:05 2022 +0900

    nilfs2: fix shift-out-of-bounds/overflow in nilfs_sb2_bad_offset()
    
    [ Upstream commit 610a2a3d7d8be3537458a378ec69396a76c385b6 ]
    
    Patch series "nilfs2: fix UBSAN shift-out-of-bounds warnings on mount
    time".
    
    The first patch fixes a bug reported by syzbot, and the second one fixes
    the remaining bug of the same kind.  Although they are triggered by the
    same super block data anomaly, I divided it into the above two because the
    details of the issues and how to fix it are different.
    
    Both are required to eliminate the shift-out-of-bounds issues at mount
    time.
    
    This patch (of 2):
    
    If the block size exponent information written in an on-disk superblock is
    corrupted, nilfs_sb2_bad_offset helper function can trigger
    shift-out-of-bounds warning followed by a kernel panic (if panic_on_warn
    is set):
    
     shift exponent 38983 is too large for 64-bit type 'unsigned long long'
     Call Trace:
      <TASK>
      __dump_stack lib/dump_stack.c:88 [inline]
      dump_stack_lvl+0x1b1/0x28e lib/dump_stack.c:106
      ubsan_epilogue lib/ubsan.c:151 [inline]
      __ubsan_handle_shift_out_of_bounds+0x33d/0x3b0 lib/ubsan.c:322
      nilfs_sb2_bad_offset fs/nilfs2/the_nilfs.c:449 [inline]
      nilfs_load_super_block+0xdf5/0xe00 fs/nilfs2/the_nilfs.c:523
      init_nilfs+0xb7/0x7d0 fs/nilfs2/the_nilfs.c:577
      nilfs_fill_super+0xb1/0x5d0 fs/nilfs2/super.c:1047
      nilfs_mount+0x613/0x9b0 fs/nilfs2/super.c:1317
      ...
    
    In addition, since nilfs_sb2_bad_offset() performs multiplication without
    considering the upper bound, the computation may overflow if the disk
    layout parameters are not normal.
    
    This fixes these issues by inserting preliminary sanity checks for those
    parameters and by converting the comparison from one involving
    multiplication and left bit-shifting to one using division and right
    bit-shifting.
    
    Link: https://lkml.kernel.org/r/20221027044306.42774-1-konishi.ryusuke@gmail.com
    Link: https://lkml.kernel.org/r/20221027044306.42774-2-konishi.ryusuke@gmail.com
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Reported-by: syzbot+e91619dd4c11c4960706@syzkaller.appspotmail.com
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5777432ebaaf797e24f059979b42df3139967163
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Nov 7 18:42:36 2022 +0100

    ACPICA: Fix error code path in acpi_ds_call_control_method()
    
    [ Upstream commit 404ec60438add1afadaffaed34bb5fe4ddcadd40 ]
    
    A use-after-free in acpi_ps_parse_aml() after a failing invocaion of
    acpi_ds_call_control_method() is reported by KASAN [1] and code
    inspection reveals that next_walk_state pushed to the thread by
    acpi_ds_create_walk_state() is freed on errors, but it is not popped
    from the thread beforehand.  Thus acpi_ds_get_current_walk_state()
    called by acpi_ps_parse_aml() subsequently returns it as the new
    walk state which is incorrect.
    
    To address this, make acpi_ds_call_control_method() call
    acpi_ds_pop_walk_state() to pop next_walk_state from the thread before
    returning an error.
    
    Link: https://lore.kernel.org/linux-acpi/20221019073443.248215-1-chenzhongjin@huawei.com/ # [1]
    Reported-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10b87da8fae79c7daf5eda6a9e4f1d31b85b4d92
Author: Hoi Pok Wu <wuhoipok@gmail.com>
Date:   Tue Oct 25 23:20:45 2022 +0800

    fs: jfs: fix shift-out-of-bounds in dbDiscardAG
    
    [ Upstream commit 25e70c6162f207828dd405b432d8f2a98dbf7082 ]
    
    This should be applied to most URSAN bugs found recently by syzbot,
    by guarding the dbMount. As syzbot feeding rubbish into the bmap
    descriptor.
    
    Signed-off-by: Hoi Pok Wu <wuhoipok@gmail.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5059ea84a8a83c51f1a52cc4d5c6192b50fdbb8b
Author: Dr. David Alan Gilbert <linux@treblig.org>
Date:   Sat Oct 22 21:39:14 2022 +0100

    jfs: Fix fortify moan in symlink
    
    [ Upstream commit ebe060369f8d6e4588b115f252bebf5ba4d64350 ]
    
    JFS has in jfs_incore.h:
    
          /* _inline may overflow into _inline_ea when needed */
          /* _inline_ea may overlay the last part of
           * file._xtroot if maxentry = XTROOTINITSLOT
           */
          union {
            struct {
              /* 128: inline symlink */
              unchar _inline[128];
              /* 128: inline extended attr */
              unchar _inline_ea[128];
            };
            unchar _inline_all[256];
    
    and currently the symlink code copies into _inline;
    if this is larger than 128 bytes it triggers a fortify warning of the
    form:
    
      memcpy: detected field-spanning write (size 132) of single field
         "ip->i_link" at fs/jfs/namei.c:950 (size 18446744073709551615)
    
    when it's actually OK.
    
    Copy it into _inline_all instead.
    
    Reported-by: syzbot+5fc38b2ddbbca7f5c680@syzkaller.appspotmail.com
    Signed-off-by: Dr. David Alan Gilbert <linux@treblig.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7a6a53c871460727be09f4414ccb29fb8697526
Author: Shigeru Yoshida <syoshida@redhat.com>
Date:   Sun Oct 23 18:57:41 2022 +0900

    udf: Avoid double brelse() in udf_rename()
    
    [ Upstream commit c791730f2554a9ebb8f18df9368dc27d4ebc38c2 ]
    
    syzbot reported a warning like below [1]:
    
    VFS: brelse: Trying to free free buffer
    WARNING: CPU: 2 PID: 7301 at fs/buffer.c:1145 __brelse+0x67/0xa0
    ...
    Call Trace:
     <TASK>
     invalidate_bh_lru+0x99/0x150
     smp_call_function_many_cond+0xe2a/0x10c0
     ? generic_remap_file_range_prep+0x50/0x50
     ? __brelse+0xa0/0xa0
     ? __mutex_lock+0x21c/0x12d0
     ? smp_call_on_cpu+0x250/0x250
     ? rcu_read_lock_sched_held+0xb/0x60
     ? lock_release+0x587/0x810
     ? __brelse+0xa0/0xa0
     ? generic_remap_file_range_prep+0x50/0x50
     on_each_cpu_cond_mask+0x3c/0x80
     blkdev_flush_mapping+0x13a/0x2f0
     blkdev_put_whole+0xd3/0xf0
     blkdev_put+0x222/0x760
     deactivate_locked_super+0x96/0x160
     deactivate_super+0xda/0x100
     cleanup_mnt+0x222/0x3d0
     task_work_run+0x149/0x240
     ? task_work_cancel+0x30/0x30
     do_exit+0xb29/0x2a40
     ? reacquire_held_locks+0x4a0/0x4a0
     ? do_raw_spin_lock+0x12a/0x2b0
     ? mm_update_next_owner+0x7c0/0x7c0
     ? rwlock_bug.part.0+0x90/0x90
     ? zap_other_threads+0x234/0x2d0
     do_group_exit+0xd0/0x2a0
     __x64_sys_exit_group+0x3a/0x50
     do_syscall_64+0x34/0xb0
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    The cause of the issue is that brelse() is called on both ofibh.sbh
    and ofibh.ebh by udf_find_entry() when it returns NULL.  However,
    brelse() is called by udf_rename(), too.  So, b_count on buffer_head
    becomes unbalanced.
    
    This patch fixes the issue by not calling brelse() by udf_rename()
    when udf_find_entry() returns NULL.
    
    Link: https://syzkaller.appspot.com/bug?id=8297f45698159c6bca8a1f87dc983667c1a1c851 [1]
    Reported-by: syzbot+7902cd7684bc35306224@syzkaller.appspotmail.com
    Signed-off-by: Shigeru Yoshida <syoshida@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20221023095741.271430-1-syoshida@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0536f76a2bca83d1a3740517ba22cc93a44b3099
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Tue Oct 18 08:48:07 2022 -0500

    fs: jfs: fix shift-out-of-bounds in dbAllocAG
    
    [ Upstream commit 898f706695682b9954f280d95e49fa86ffa55d08 ]
    
    Syzbot found a crash : UBSAN: shift-out-of-bounds in dbAllocAG. The
    underlying bug is the missing check of bmp->db_agl2size. The field can
    be greater than 64 and trigger the shift-out-of-bounds.
    
    Fix this bug by adding a check of bmp->db_agl2size in dbMount since this
    field is used in many following functions. The upper bound for this
    field is L2MAXL2SIZE - L2MAXAG, thanks for the help of Dave Kleikamp.
    Note that, for maintenance, I reorganized error handling code of dbMount.
    
    Reported-by: syzbot+15342c1aa6a00fb7a438@syzkaller.appspotmail.com
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88cea1676a09f7c45a1438153a126610c33b1590
Author: Liu Shixin <liushixin2@huawei.com>
Date:   Wed Nov 2 10:51:23 2022 +0800

    binfmt_misc: fix shift-out-of-bounds in check_special_flags
    
    [ Upstream commit 6a46bf558803dd2b959ca7435a5c143efe837217 ]
    
    UBSAN reported a shift-out-of-bounds warning:
    
     left shift of 1 by 31 places cannot be represented in type 'int'
     Call Trace:
      <TASK>
      __dump_stack lib/dump_stack.c:88 [inline]
      dump_stack_lvl+0x8d/0xcf lib/dump_stack.c:106
      ubsan_epilogue+0xa/0x44 lib/ubsan.c:151
      __ubsan_handle_shift_out_of_bounds+0x1e7/0x208 lib/ubsan.c:322
      check_special_flags fs/binfmt_misc.c:241 [inline]
      create_entry fs/binfmt_misc.c:456 [inline]
      bm_register_write+0x9d3/0xa20 fs/binfmt_misc.c:654
      vfs_write+0x11e/0x580 fs/read_write.c:582
      ksys_write+0xcf/0x120 fs/read_write.c:637
      do_syscall_x64 arch/x86/entry/common.c:50 [inline]
      do_syscall_64+0x34/0x80 arch/x86/entry/common.c:80
      entry_SYSCALL_64_after_hwframe+0x63/0xcd
     RIP: 0033:0x4194e1
    
    Since the type of Node's flags is unsigned long, we should define these
    macros with same type too.
    
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221102025123.1117184-1-liushixin2@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cadb938a5e500461d9529e9dd6e6707dfaaef616
Author: Gaurav Kohli <gauravkohli@linux.microsoft.com>
Date:   Fri Nov 25 22:14:51 2022 -0800

    x86/hyperv: Remove unregister syscore call from Hyper-V cleanup
    
    [ Upstream commit 32c97d980e2eef25465d453f2956a9ca68926a3c ]
    
    Hyper-V cleanup code comes under panic path where preemption and irq
    is already disabled. So calling of unregister_syscore_ops might schedule
    out the thread even for the case where mutex lock is free.
    hyperv_cleanup
            unregister_syscore_ops
                            mutex_lock(&syscore_ops_lock)
                                    might_sleep
    Here might_sleep might schedule out this thread, where voluntary preemption
    config is on and this thread will never comes back. And also this was added
    earlier to maintain the symmetry which is not required as this can comes
    during crash shutdown path only.
    
    To prevent the same, removing unregister_syscore_ops function call.
    
    Signed-off-by: Gaurav Kohli <gauravkohli@linux.microsoft.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/1669443291-2575-1-git-send-email-gauravkohli@linux.microsoft.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 659747f6f61048e8f2b3b99d2400bfafe86ee413
Author: Guilherme G. Piccoli <gpiccoli@igalia.com>
Date:   Fri Aug 19 19:17:29 2022 -0300

    video: hyperv_fb: Avoid taking busy spinlock on panic path
    
    [ Upstream commit 1d044ca035dc22df0d3b39e56f2881071d9118bd ]
    
    The Hyper-V framebuffer code registers a panic notifier in order
    to try updating its fbdev if the kernel crashed. The notifier
    callback is straightforward, but it calls the vmbus_sendpacket()
    routine eventually, and such function takes a spinlock for the
    ring buffer operations.
    
    Panic path runs in atomic context, with local interrupts and
    preemption disabled, and all secondary CPUs shutdown. That said,
    taking a spinlock might cause a lockup if a secondary CPU was
    disabled with such lock taken. Fix it here by checking if the
    ring buffer spinlock is busy on Hyper-V framebuffer panic notifier;
    if so, bail-out avoiding the potential lockup scenario.
    
    Cc: Andrea Parri (Microsoft) <parri.andrea@gmail.com>
    Cc: Dexuan Cui <decui@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: "K. Y. Srinivasan" <kys@microsoft.com>
    Cc: Michael Kelley <mikelley@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Tianyu Lan <Tianyu.Lan@microsoft.com>
    Cc: Wei Liu <wei.liu@kernel.org>
    Tested-by: Fabio A M Martins <fabiomirmar@gmail.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/20220819221731.480795-10-gpiccoli@igalia.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d05c20b0ac97a688f6f6747da45b4d1e287b806
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Nov 14 14:40:42 2022 +0000

    arm64: make is_ttbrX_addr() noinstr-safe
    
    [ Upstream commit d8c1d798a2e5091128c391c6dadcc9be334af3f5 ]
    
    We use is_ttbr0_addr() in noinstr code, but as it's only marked as
    inline, it's theoretically possible for the compiler to place it
    out-of-line and instrument it, which would be problematic.
    
    Mark is_ttbr0_addr() as __always_inline such that that can safely be
    used from noinstr code. For consistency, do the same to is_ttbr1_addr().
    Note that while is_ttbr1_addr() calls arch_kasan_reset_tag(), this is a
    macro (and its callees are either macros or __always_inline), so there
    is not a risk of transient instrumentation.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will@kernel.org>
    Link: https://lore.kernel.org/r/20221114144042.3001140-1-mark.rutland@arm.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98a5b1265a36e9d843a51ddd6c9fa02da50d2c57
Author: Zqiang <qiang1.zhang@intel.com>
Date:   Thu Oct 13 12:41:48 2022 +0800

    rcu: Fix __this_cpu_read() lockdep warning in rcu_force_quiescent_state()
    
    [ Upstream commit ceb1c8c9b8aa9199da46a0f29d2d5f08d9b44c15 ]
    
    Running rcutorture with non-zero fqs_duration module parameter in a
    kernel built with CONFIG_PREEMPTION=y results in the following splat:
    
    BUG: using __this_cpu_read() in preemptible [00000000]
    code: rcu_torture_fqs/398
    caller is __this_cpu_preempt_check+0x13/0x20
    CPU: 3 PID: 398 Comm: rcu_torture_fqs Not tainted 6.0.0-rc1-yoctodev-standard+
    Call Trace:
    <TASK>
    dump_stack_lvl+0x5b/0x86
    dump_stack+0x10/0x16
    check_preemption_disabled+0xe5/0xf0
    __this_cpu_preempt_check+0x13/0x20
    rcu_force_quiescent_state.part.0+0x1c/0x170
    rcu_force_quiescent_state+0x1e/0x30
    rcu_torture_fqs+0xca/0x160
    ? rcu_torture_boost+0x430/0x430
    kthread+0x192/0x1d0
    ? kthread_complete_and_exit+0x30/0x30
    ret_from_fork+0x22/0x30
    </TASK>
    
    The problem is that rcu_force_quiescent_state() uses __this_cpu_read()
    in preemptible code instead of the proper raw_cpu_read().  This commit
    therefore changes __this_cpu_read() to raw_cpu_read().
    
    Signed-off-by: Zqiang <qiang1.zhang@intel.com>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d238f94b2b61c77dd60db820aa683ff6a58c1543
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Dec 20 10:49:21 2022 +0800

    HID: amd_sfh: Add missing check for dma_alloc_coherent
    
    [ Upstream commit 53ffa6a9f83b2170c60591da1ead8791d5a42e81 ]
    
    Add check for the return value of the dma_alloc_coherent since
    it may return NULL pointer if allocation fails.
    
    Fixes: 4b2c53d93a4b ("SFH:Transport Driver to add support of AMD Sensor Fusion Hub (SFH)")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20221220024921.21992-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9da204cd67c4fe97e8aa465d10d5c2e7076f7f42
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Dec 16 16:29:17 2022 +0000

    net: stream: purge sk_error_queue in sk_stream_kill_queues()
    
    [ Upstream commit e0c8bccd40fc1c19e1d246c39bcf79e357e1ada3 ]
    
    Changheon Lee reported TCP socket leaks, with a nice repro.
    
    It seems we leak TCP sockets with the following sequence:
    
    1) SOF_TIMESTAMPING_TX_ACK is enabled on the socket.
    
       Each ACK will cook an skb put in error queue, from __skb_tstamp_tx().
       __skb_tstamp_tx() is using skb_clone(), unless
       SOF_TIMESTAMPING_OPT_TSONLY was also requested.
    
    2) If the application is also using MSG_ZEROCOPY, then we put in the
       error queue cloned skbs that had a struct ubuf_info attached to them.
    
       Whenever an struct ubuf_info is allocated, sock_zerocopy_alloc()
       does a sock_hold().
    
       As long as the cloned skbs are still in sk_error_queue,
       socket refcount is kept elevated.
    
    3) Application closes the socket, while error queue is not empty.
    
    Since tcp_close() no longer purges the socket error queue,
    we might end up with a TCP socket with at least one skb in
    error queue keeping the socket alive forever.
    
    This bug can be (ab)used to consume all kernel memory
    and freeze the host.
    
    We need to purge the error queue, with proper synchronization
    against concurrent writers.
    
    Fixes: 24bcbe1cc69f ("net: stream: don't purge sk_error_queue in sk_stream_kill_queues()")
    Reported-by: Changheon Lee <darklight2357@icloud.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f47426250fc02d8e2ddc25ef18cdeda1e64b9127
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Dec 18 19:08:40 2022 +0100

    myri10ge: Fix an error handling path in myri10ge_probe()
    
    [ Upstream commit d83b950d44d2982c0e62e3d81b0f35ab09431008 ]
    
    Some memory allocated in myri10ge_probe_slices() is not released in the
    error handling path of myri10ge_probe().
    
    Add the corresponding kfree(), as already done in the remove function.
    
    Fixes: 0dcffac1a329 ("myri10ge: add multislices support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ec0a7d5b020f4098ef4d8ae7ae52f298b475c92
Author: David Howells <dhowells@redhat.com>
Date:   Thu Dec 15 16:19:47 2022 +0000

    rxrpc: Fix missing unlock in rxrpc_do_sendmsg()
    
    [ Upstream commit 4feb2c44629e6f9b459b41a5a60491069d346a95 ]
    
    One of the error paths in rxrpc_do_sendmsg() doesn't unlock the call mutex
    before returning.  Fix it to do this.
    
    Note that this still doesn't get rid of the checker warning:
    
       ../net/rxrpc/sendmsg.c:617:5: warning: context imbalance in 'rxrpc_do_sendmsg' - wrong count at exit
    
    I think the interplay between the socket lock and the call's user_mutex may
    be too complicated for checker to analyse, especially as
    rxrpc_new_client_call_for_sendmsg(), which it calls, returns with the
    call's user_mutex if successful but unconditionally drops the socket lock.
    
    Fixes: e754eba685aa ("rxrpc: Provide a cmsg to specify the amount of Tx data for a call")
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5478eb7adcc59dd753145f18b430d97160e9b217
Author: Cong Wang <cong.wang@bytedance.com>
Date:   Sat Dec 17 14:17:07 2022 -0800

    net_sched: reject TCF_EM_SIMPLE case for complex ematch module
    
    [ Upstream commit 9cd3fd2054c3b3055163accbf2f31a4426f10317 ]
    
    When TCF_EM_SIMPLE was introduced, it is supposed to be convenient
    for ematch implementation:
    
    https://lore.kernel.org/all/20050105110048.GO26856@postel.suug.ch/
    
    "You don't have to, providing a 32bit data chunk without TCF_EM_SIMPLE
    set will simply result in allocating & copy. It's an optimization,
    nothing more."
    
    So if an ematch module provides ops->datalen that means it wants a
    complex data structure (saved in its em->data) instead of a simple u32
    value. We should simply reject such a combination, otherwise this u32
    could be misinterpreted as a pointer.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-and-tested-by: syzbot+4caeae4c7103813598ae@syzkaller.appspotmail.com
    Reported-by: Jun Nie <jun.nie@linaro.org>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Cong Wang <cong.wang@bytedance.com>
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f05d8e2fb3ab702c2633a74571e1b31cb579985
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Nov 10 23:08:22 2022 +0800

    mailbox: zynq-ipi: fix error handling while device_register() fails
    
    [ Upstream commit a6792a0cdef0b1c2d77920246283a72537e60e94 ]
    
    If device_register() fails, it has two issues:
    1. The name allocated by dev_set_name() is leaked.
    2. The parent of device is not NULL, device_unregister() is called
       in zynqmp_ipi_free_mboxes(), it will lead a kernel crash because
       of removing not added device.
    
    Call put_device() to give up the reference, so the name is freed in
    kobject_cleanup(). Add device registered check in zynqmp_ipi_free_mboxes()
    to avoid null-ptr-deref.
    
    Fixes: 4981b82ba2ff ("mailbox: ZynqMP IPI mailbox controller")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 550f403e4604afaca08bcd0f3323e6c9986354c9
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 25 14:35:48 2022 +0800

    mailbox: arm_mhuv2: Fix return value check in mhuv2_probe()
    
    [ Upstream commit 165b7643f2df890066b1b4e8a387888a600ca9bf ]
    
    If devm_of_iomap() fails, it returns ERR_PTR() and never
    return NULL, so replace NULL pointer check with IS_ERR()
    to fix this problem.
    
    Fixes: 5a6338cce9f4 ("mailbox: arm_mhuv2: Add driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28604a960c90260a0046003bc7e864a6ca5361f8
Author: Conor Dooley <conor.dooley@microchip.com>
Date:   Wed Nov 23 17:56:52 2022 +0000

    mailbox: mpfs: read the system controller's status
    
    [ Upstream commit ab47d0bfdf88faac0eb02749e5bfaa306e004300 ]
    
    Some services explicitly return an error code in their response, but
    others rely on the system controller to set a status in its status
    register. The meaning of the bits varies based on what service is
    requested, so pass it back up to the driver that requested the service
    in the first place. The field in the message struct already existed, but
    was unused until now.
    
    If the system controller is busy, in which case we should never actually
    be in the interrupt handler, or if the service fails the mailbox itself
    should not be read. Callers should check the status before operating on
    the response.
    
    There's an existing, but unused, #define for the mailbox mask - but it
    was incorrect. It was doing a GENMASK_ULL(32, 16) which should've just
    been a GENMASK(31, 16), so fix that up and start using it.
    
    Fixes: 83d7b1560810 ("mbox: add polarfire soc system controller mailbox")
    Signed-off-by: Conor Dooley <conor.dooley@microchip.com>
    Reviewed-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fb773eed4909ef5dc1bbeb3629a337d3336df7e
Author: Subash Abhinov Kasiviswanathan <quic_subashab@quicinc.com>
Date:   Wed Dec 14 23:11:58 2022 -0700

    skbuff: Account for tail adjustment during pull operations
    
    [ Upstream commit 2d7afdcbc9d32423f177ee12b7c93783aea338fb ]
    
    Extending the tail can have some unexpected side effects if a program uses
    a helper like BPF_FUNC_skb_pull_data to read partial content beyond the
    head skb headlen when all the skbs in the gso frag_list are linear with no
    head_frag -
    
      kernel BUG at net/core/skbuff.c:4219!
      pc : skb_segment+0xcf4/0xd2c
      lr : skb_segment+0x63c/0xd2c
      Call trace:
       skb_segment+0xcf4/0xd2c
       __udp_gso_segment+0xa4/0x544
       udp4_ufo_fragment+0x184/0x1c0
       inet_gso_segment+0x16c/0x3a4
       skb_mac_gso_segment+0xd4/0x1b0
       __skb_gso_segment+0xcc/0x12c
       udp_rcv_segment+0x54/0x16c
       udp_queue_rcv_skb+0x78/0x144
       udp_unicast_rcv_skb+0x8c/0xa4
       __udp4_lib_rcv+0x490/0x68c
       udp_rcv+0x20/0x30
       ip_protocol_deliver_rcu+0x1b0/0x33c
       ip_local_deliver+0xd8/0x1f0
       ip_rcv+0x98/0x1a4
       deliver_ptype_list_skb+0x98/0x1ec
       __netif_receive_skb_core+0x978/0xc60
    
    Fix this by marking these skbs as GSO_DODGY so segmentation can handle
    the tail updates accordingly.
    
    Fixes: 3dcbdb134f32 ("net: gso: Fix skb_segment splat when splitting gso_size mangled skb having linear-headed frag_list")
    Signed-off-by: Sean Tranchetti <quic_stranche@quicinc.com>
    Signed-off-by: Subash Abhinov Kasiviswanathan <quic_subashab@quicinc.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Link: https://lore.kernel.org/r/1671084718-24796-1-git-send-email-quic_subashab@quicinc.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc0f38957aa2bafdb794d398ae4c4d72a6355add
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Sep 27 12:11:19 2022 +0200

    arm64: dts: mt8183: Fix Mali GPU clock
    
    [ Upstream commit ad2631b5645a1d0ca9bf6fecf71f77e3b0071ee5 ]
    
    The actual clock feeding into the Mali GPU on the MT8183 is from the
    clock gate in the MFGCFG block, not CLK_TOP_MFGPLL_CK from the TOPCKGEN
    block, which itself is simply a pass-through placeholder for the MFGPLL
    in the APMIXEDSYS block.
    
    Fix the hardware description with the correct clock reference.
    
    Fixes: a8168cebf1bc ("arm64: dts: mt8183: Add node for the Mali GPU")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Tested-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Link: https://lore.kernel.org/r/20220927101128.44758-2-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 790b396f6bdedda8f035bbfd372238ffc0d92210
Author: Chun-Jie Chen <chun-jie.chen@mediatek.com>
Date:   Fri Oct 14 18:20:29 2022 +0800

    soc: mediatek: pm-domains: Fix the power glitch issue
    
    [ Upstream commit dba8eb83af9dd757ef645b52200775e86883d858 ]
    
    Power reset maybe generate unexpected signal. In order to avoid
    the glitch issue, we need to enable isolation first to guarantee the
    stable signal when power reset is triggered.
    
    Fixes: 59b644b01cf4 ("soc: mediatek: Add MediaTek SCPSYS power domains")
    Signed-off-by: Chun-Jie Chen <chun-jie.chen@mediatek.com>
    Signed-off-by: Allen-KH Cheng <allen-kh.cheng@mediatek.com>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Miles Chen <miles.chen@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221014102029.1162-1-allen-kh.cheng@mediatek.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0133615a06007684df648feb9d327714e399afd4
Author: Eelco Chaudron <echaudro@redhat.com>
Date:   Thu Dec 15 15:46:33 2022 +0100

    openvswitch: Fix flow lookup to use unmasked key
    
    [ Upstream commit 68bb10101e6b0a6bb44e9c908ef795fc4af99eae ]
    
    The commit mentioned below causes the ovs_flow_tbl_lookup() function
    to be called with the masked key. However, it's supposed to be called
    with the unmasked key. This due to the fact that the datapath supports
    installing wider flows, and OVS relies on this behavior. For example
    if ipv4(src=1.1.1.1/192.0.0.0, dst=1.1.1.2/192.0.0.0) exists, a wider
    flow (smaller mask) of ipv4(src=192.1.1.1/128.0.0.0,dst=192.1.1.2/
    128.0.0.0) is allowed to be added.
    
    However, if we try to add a wildcard rule, the installation fails:
    
    $ ovs-appctl dpctl/add-flow system@myDP "in_port(1),eth_type(0x0800), \
      ipv4(src=1.1.1.1/192.0.0.0,dst=1.1.1.2/192.0.0.0,frag=no)" 2
    $ ovs-appctl dpctl/add-flow system@myDP "in_port(1),eth_type(0x0800), \
      ipv4(src=192.1.1.1/0.0.0.0,dst=49.1.1.2/0.0.0.0,frag=no)" 2
    ovs-vswitchd: updating flow table (File exists)
    
    The reason is that the key used to determine if the flow is already
    present in the system uses the original key ANDed with the mask.
    This results in the IP address not being part of the (miniflow) key,
    i.e., being substituted with an all-zero value. When doing the actual
    lookup, this results in the key wrongfully matching the first flow,
    and therefore the flow does not get installed.
    
    This change reverses the commit below, but rather than having the key
    on the stack, it's allocated.
    
    Fixes: 190aa3e77880 ("openvswitch: Fix Frame-size larger than 1024 bytes warning.")
    
    Signed-off-by: Eelco Chaudron <echaudro@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04e454bd97e261f957709ece5935e57aee3bd7cd
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Dec 14 18:01:01 2022 -0800

    selftests: devlink: fix the fd redirect in dummy_reporter_test
    
    [ Upstream commit 2fc60e2ff972d3dca836bff0b08cbe503c4ca1ce ]
    
    $number + > bash means redirect FD $number, e.g. commonly
    used 2> redirects stderr (fd 2). The test uses 8192> to
    write the number 8192 to a file, this results in:
    
      ./devlink.sh: line 499: 8192: Bad file descriptor
    
    Oddly the test also papers over this issue by checking
    for failure (expecting an error rather than success)
    so it passes, anyway.
    
    Fixes: ff18176ad806 ("selftests: Add a test of large binary to devlink health test")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d52646a46c4de0b87ba8e9cba6a1bc55b5951751
Author: GUO Zihua <guozihua@huawei.com>
Date:   Tue Nov 22 16:50:46 2022 +0800

    rtc: mxc_v2: Add missing clk_disable_unprepare()
    
    [ Upstream commit 55d5a86618d3b1a768bce01882b74cbbd2651975 ]
    
    The call to clk_disable_unprepare() is left out in the error handling of
    devm_rtc_allocate_device. Add it back.
    
    Fixes: 5490a1e018a4 ("rtc: mxc_v2: fix possible race condition")
    Signed-off-by: GUO Zihua <guozihua@huawei.com>
    Link: https://lore.kernel.org/r/20221122085046.21689-1-guozihua@huawei.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac95c4e35fb296a0aaf45a337ef1577449dadea0
Author: Tan Tee Min <tee.min.tan@linux.intel.com>
Date:   Fri Dec 9 12:15:22 2022 +0800

    igc: Set Qbv start_time and end_time to end_time if not being configured in GCL
    
    [ Upstream commit 72abeedd83982c1bc6023f631e412db78374d9b4 ]
    
    The default setting of end_time minus start_time is whole 1 second.
    Thus, if it's not being configured in any GCL entry then it will be
    staying at original 1 second.
    
    This patch is changing the start_time and end_time to be end_time as
    if setting zero will be having weird HW behavior where the gate will
    not be fully closed.
    
    Fixes: ec50a9d437f0 ("igc: Add support for taprio offloading")
    Signed-off-by: Tan Tee Min <tee.min.tan@linux.intel.com>
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af599851388ea66f7e27eceaf6c365560cc5eeb1
Author: Kurt Kanzenbach <kurt@linutronix.de>
Date:   Mon Jun 6 11:27:47 2022 +0200

    igc: Lift TAPRIO schedule restriction
    
    [ Upstream commit a5fd39464a4081ce11c801d7e20c4551ba7cb983 ]
    
    Add support for Qbv schedules where one queue stays open
    in consecutive entries. Currently that's not supported.
    
    Example schedule:
    
    |tc qdisc replace dev ${INTERFACE} handle 100 parent root taprio num_tc 3 \
    |   map 2 2 1 0 2 2 2 2 2 2 2 2 2 2 2 2 \
    |   queues 1@0 1@1 2@2 \
    |   base-time ${BASETIME} \
    |   sched-entry S 0x01 300000 \ # Stream High/Low
    |   sched-entry S 0x06 500000 \ # Management and Best Effort
    |   sched-entry S 0x04 200000 \ # Best Effort
    |   flags 0x02
    
    Signed-off-by: Kurt Kanzenbach <kurt@linutronix.de>
    Reviewed-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Stable-dep-of: 72abeedd8398 ("igc: Set Qbv start_time and end_time to end_time if not being configured in GCL")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d50d640eda43286b53551e477894a15e3823901
Author: Tan Tee Min <tee.min.tan@linux.intel.com>
Date:   Fri Dec 9 12:15:21 2022 +0800

    igc: recalculate Qbv end_time by considering cycle time
    
    [ Upstream commit 6d05251d537a4d3835959a8cdd8cbbbdcdc0c904 ]
    
    Qbv users can specify a cycle time that is not equal to the total GCL
    intervals. Hence, recalculation is necessary here to exclude the time
    interval that exceeds the cycle time. As those GCL which exceeds the
    cycle time will be truncated.
    
    According to IEEE Std. 802.1Q-2018 section 8.6.9.2, once the end of
    the list is reached, it will switch to the END_OF_CYCLE state and
    leave the gates in the same state until the next cycle is started.
    
    Fixes: ec50a9d437f0 ("igc: Add support for taprio offloading")
    Signed-off-by: Tan Tee Min <tee.min.tan@linux.intel.com>
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ef94169571542f330ea97c6d2120bdcb21f7345
Author: Tan Tee Min <tee.min.tan@linux.intel.com>
Date:   Fri Dec 9 12:15:20 2022 +0800

    igc: allow BaseTime 0 enrollment for Qbv
    
    [ Upstream commit e17090eb24944fbbe1f24d9f336d7bad4fbe47e8 ]
    
    Introduce qbv_enable flag in igc_adapter struct to store the Qbv on/off.
    So this allow the BaseTime to enroll with zero value.
    
    Fixes: 61572d5f8f91 ("igc: Simplify TSN flags handling")
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Signed-off-by: Tan Tee Min <tee.min.tan@linux.intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0df8e7ba6aaeba9e0562cc92a67cfcbc7c9a624
Author: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date:   Fri Dec 9 12:15:19 2022 +0800

    igc: Add checking for basetime less than zero
    
    [ Upstream commit 3b61764fb49a6e147ac90d71dccdddc9d5508ba1 ]
    
    Using the tc qdisc command, the user can set basetime to any value.
    Checking should be done on the driver's side to prevent registering
    basetime values that are less than zero.
    
    Fixes: ec50a9d437f0 ("igc: Add support for taprio offloading")
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b46b53f45f938572629e5633cff88fa8eb805d1
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Fri Dec 9 12:15:18 2022 +0800

    igc: Use strict cycles for Qbv scheduling
    
    [ Upstream commit d8f45be01dd9381065a3778a579385249ed011dc ]
    
    Configuring strict cycle mode in the controller forces more well
    behaved transmissions when taprio is offloaded.
    
    When set this strict_cycle and strict_end, transmission is not
    enabled if the whole packet cannot be completed before end of
    the Qbv cycle.
    
    Fixes: 82faa9b79950 ("igc: Add support for ETF offloading")
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Signed-off-by: Aravindhan Gunasekaran <aravindhan.gunasekaran@intel.com>
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd7d0294365915762f6b5a19e74134685e898f60
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Fri Dec 9 12:15:17 2022 +0800

    igc: Enhance Qbv scheduling by using first flag bit
    
    [ Upstream commit db0b124f02ba68de6517ac303d431af220ccfe9f ]
    
    The I225 hardware has a limitation that packets can only be scheduled
    in the [0, cycle-time] interval. So, scheduling a packet to the start
    of the next cycle doesn't usually work.
    
    To overcome this, we use the Transmit Descriptor first flag to indicates
    that a packet should be the first packet (from a queue) in a cycle
    according to the section 7.5.2.9.3.4 The First Packet on Each QBV Cycle
    in Intel Discrete I225/6 User Manual.
    
    But this only works if there was any packet from that queue during the
    current cycle, to avoid this issue, we issue an empty packet if that's
    not the case. Also require one more descriptor to be available, to take
    into account the empty packet that might be issued.
    
    Test Setup:
    
    Talker: Use l2_tai to generate the launchtime into packet load.
    
    Listener: Use timedump.c to compute the delta between packet arrival
    and LaunchTime packet payload.
    
    Test Result:
    
    Before:
    
    1666000610127300000,1666000610127300096,96,621273
    1666000610127400000,1666000610127400192,192,621274
    1666000610127500000,1666000610127500032,32,621275
    1666000610127600000,1666000610127600128,128,621276
    1666000610127700000,1666000610127700224,224,621277
    1666000610127800000,1666000610127800064,64,621278
    1666000610127900000,1666000610127900160,160,621279
    1666000610128000000,1666000610128000000,0,621280
    1666000610128100000,1666000610128100096,96,621281
    1666000610128200000,1666000610128200192,192,621282
    1666000610128300000,1666000610128300032,32,621283
    1666000610128400000,1666000610128301056,-98944,621284
    1666000610128500000,1666000610128302080,-197920,621285
    1666000610128600000,1666000610128302848,-297152,621286
    1666000610128700000,1666000610128303872,-396128,621287
    1666000610128800000,1666000610128304896,-495104,621288
    1666000610128900000,1666000610128305664,-594336,621289
    1666000610129000000,1666000610128306688,-693312,621290
    1666000610129100000,1666000610128307712,-792288,621291
    1666000610129200000,1666000610128308480,-891520,621292
    1666000610129300000,1666000610128309504,-990496,621293
    1666000610129400000,1666000610128310528,-1089472,621294
    1666000610129500000,1666000610128311296,-1188704,621295
    1666000610129600000,1666000610128312320,-1287680,621296
    1666000610129700000,1666000610128313344,-1386656,621297
    1666000610129800000,1666000610128314112,-1485888,621298
    1666000610129900000,1666000610128315136,-1584864,621299
    1666000610130000000,1666000610128316160,-1683840,621300
    1666000610130100000,1666000610128316928,-1783072,621301
    1666000610130200000,1666000610128317952,-1882048,621302
    1666000610130300000,1666000610128318976,-1981024,621303
    1666000610130400000,1666000610128319744,-2080256,621304
    1666000610130500000,1666000610128320768,-2179232,621305
    1666000610130600000,1666000610128321792,-2278208,621306
    1666000610130700000,1666000610128322816,-2377184,621307
    1666000610130800000,1666000610128323584,-2476416,621308
    1666000610130900000,1666000610128324608,-2575392,621309
    1666000610131000000,1666000610128325632,-2674368,621310
    1666000610131100000,1666000610128326400,-2773600,621311
    1666000610131200000,1666000610128327424,-2872576,621312
    1666000610131300000,1666000610128328448,-2971552,621313
    1666000610131400000,1666000610128329216,-3070784,621314
    1666000610131500000,1666000610131500032,32,621315
    1666000610131600000,1666000610131600128,128,621316
    1666000610131700000,1666000610131700224,224,621317
    
    After:
    
    1666073510646200000,1666073510646200064,64,2676462
    1666073510646300000,1666073510646300160,160,2676463
    1666073510646400000,1666073510646400256,256,2676464
    1666073510646500000,1666073510646500096,96,2676465
    1666073510646600000,1666073510646600192,192,2676466
    1666073510646700000,1666073510646700032,32,2676467
    1666073510646800000,1666073510646800128,128,2676468
    1666073510646900000,1666073510646900224,224,2676469
    1666073510647000000,1666073510647000064,64,2676470
    1666073510647100000,1666073510647100160,160,2676471
    1666073510647200000,1666073510647200256,256,2676472
    1666073510647300000,1666073510647300096,96,2676473
    1666073510647400000,1666073510647400192,192,2676474
    1666073510647500000,1666073510647500032,32,2676475
    1666073510647600000,1666073510647600128,128,2676476
    1666073510647700000,1666073510647700224,224,2676477
    1666073510647800000,1666073510647800064,64,2676478
    1666073510647900000,1666073510647900160,160,2676479
    1666073510648000000,1666073510648000000,0,2676480
    1666073510648100000,1666073510648100096,96,2676481
    1666073510648200000,1666073510648200192,192,2676482
    1666073510648300000,1666073510648300032,32,2676483
    1666073510648400000,1666073510648400128,128,2676484
    1666073510648500000,1666073510648500224,224,2676485
    1666073510648600000,1666073510648600064,64,2676486
    1666073510648700000,1666073510648700160,160,2676487
    1666073510648800000,1666073510648800000,0,2676488
    1666073510648900000,1666073510648900096,96,2676489
    1666073510649000000,1666073510649000192,192,2676490
    1666073510649100000,1666073510649100032,32,2676491
    1666073510649200000,1666073510649200128,128,2676492
    1666073510649300000,1666073510649300224,224,2676493
    1666073510649400000,1666073510649400064,64,2676494
    1666073510649500000,1666073510649500160,160,2676495
    1666073510649600000,1666073510649600000,0,2676496
    1666073510649700000,1666073510649700096,96,2676497
    1666073510649800000,1666073510649800192,192,2676498
    1666073510649900000,1666073510649900032,32,2676499
    1666073510650000000,1666073510650000128,128,2676500
    
    Fixes: 82faa9b79950 ("igc: Add support for ETF offloading")
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Co-developed-by: Aravindhan Gunasekaran <aravindhan.gunasekaran@intel.com>
    Signed-off-by: Aravindhan Gunasekaran <aravindhan.gunasekaran@intel.com>
    Co-developed-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Signed-off-by: Malli C <mallikarjuna.chilakala@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b5b50329e2e966831a7237dd6949e7b5362a49a
Author: Li Zetao <lizetao1@huawei.com>
Date:   Tue Dec 13 20:56:14 2022 +0800

    r6040: Fix kmemleak in probe and remove
    
    [ Upstream commit 7e43039a49c2da45edc1d9d7c9ede4003ab45a5f ]
    
    There is a memory leaks reported by kmemleak:
    
      unreferenced object 0xffff888116111000 (size 2048):
        comm "modprobe", pid 817, jiffies 4294759745 (age 76.502s)
        hex dump (first 32 bytes):
          00 c4 0a 04 81 88 ff ff 08 10 11 16 81 88 ff ff  ................
          08 10 11 16 81 88 ff ff 00 00 00 00 00 00 00 00  ................
        backtrace:
          [<ffffffff815bcd82>] kmalloc_trace+0x22/0x60
          [<ffffffff827e20ee>] phy_device_create+0x4e/0x90
          [<ffffffff827e6072>] get_phy_device+0xd2/0x220
          [<ffffffff827e7844>] mdiobus_scan+0xa4/0x2e0
          [<ffffffff827e8be2>] __mdiobus_register+0x482/0x8b0
          [<ffffffffa01f5d24>] r6040_init_one+0x714/0xd2c [r6040]
          ...
    
    The problem occurs in probe process as follows:
      r6040_init_one:
        mdiobus_register
          mdiobus_scan    <- alloc and register phy_device,
                             the reference count of phy_device is 3
        r6040_mii_probe
          phy_connect     <- connect to the first phy_device,
                             so the reference count of the first
                             phy_device is 4, others are 3
        register_netdev   <- fault inject succeeded, goto error handling path
    
        // error handling path
        err_out_mdio_unregister:
          mdiobus_unregister(lp->mii_bus);
        err_out_mdio:
          mdiobus_free(lp->mii_bus);    <- the reference count of the first
                                           phy_device is 1, it is not released
                                           and other phy_devices are released
      // similarly, the remove process also has the same problem
    
    The root cause is traced to the phy_device is not disconnected when
    removes one r6040 device in r6040_remove_one() or on error handling path
    after r6040_mii probed successfully. In r6040_mii_probe(), a net ethernet
    device is connected to the first PHY device of mii_bus, in order to
    notify the connected driver when the link status changes, which is the
    default behavior of the PHY infrastructure to handle everything.
    Therefore the phy_device should be disconnected when removes one r6040
    device or on error handling path.
    
    Fix it by adding phy_disconnect() when removes one r6040 device or on
    error handling path after r6040_mii probed successfully.
    
    Fixes: 3831861b4ad8 ("r6040: implement phylib")
    Signed-off-by: Li Zetao <lizetao1@huawei.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20221213125614.927754-1-lizetao1@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b428ba31b918d1f1563aaa9f3dfb208a9738448
Author: Kirill Tkhai <tkhai@ya.ru>
Date:   Tue Dec 13 00:05:53 2022 +0300

    unix: Fix race in SOCK_SEQPACKET's unix_dgram_sendmsg()
    
    [ Upstream commit 3ff8bff704f4de125dca2262e5b5b963a3da1d87 ]
    
    There is a race resulting in alive SOCK_SEQPACKET socket
    may change its state from TCP_ESTABLISHED to TCP_CLOSE:
    
    unix_release_sock(peer)                  unix_dgram_sendmsg(sk)
      sock_orphan(peer)
        sock_set_flag(peer, SOCK_DEAD)
                                               sock_alloc_send_pskb()
                                                 if !(sk->sk_shutdown & SEND_SHUTDOWN)
                                                   OK
                                               if sock_flag(peer, SOCK_DEAD)
                                                 sk->sk_state = TCP_CLOSE
      sk->sk_shutdown = SHUTDOWN_MASK
    
    After that socket sk remains almost normal: it is able to connect, listen, accept
    and recvmsg, while it can't sendmsg.
    
    Since this is the only possibility for alive SOCK_SEQPACKET to change
    the state in such way, we should better fix this strange and potentially
    danger corner case.
    
    Note, that we will return EPIPE here like this is normally done in sock_alloc_send_pskb().
    Originally used ECONNREFUSED looks strange, since it's strange to return
    a specific retval in dependence of race in kernel, when user can't affect on this.
    
    Also, move TCP_CLOSE assignment for SOCK_DGRAM sockets under state lock
    to fix race with unix_dgram_connect():
    
    unix_dgram_connect(other)            unix_dgram_sendmsg(sk)
                                           unix_peer(sk) = NULL
                                           unix_state_unlock(sk)
      unix_state_double_lock(sk, other)
      sk->sk_state  = TCP_ESTABLISHED
      unix_peer(sk) = other
      unix_state_double_unlock(sk, other)
                                           sk->sk_state  = TCP_CLOSED
    
    This patch fixes both of these races.
    
    Fixes: 83301b5367a9 ("af_unix: Set TCP_ESTABLISHED for datagram sockets too")
    Signed-off-by: Kirill Tkhai <tkhai@ya.ru>
    Link: https://lore.kernel.org/r/135fda25-22d5-837a-782b-ceee50e19844@ya.ru
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aae9c24ebd901f482e6c88b6f9e0c80dc5b536d6
Author: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
Date:   Wed Dec 14 10:51:39 2022 +0900

    nfc: pn533: Clear nfc_target before being used
    
    [ Upstream commit 9f28157778ede0d4f183f7ab3b46995bb400abbe ]
    
    Fix a slab-out-of-bounds read that occurs in nla_put() called from
    nfc_genl_send_target() when target->sensb_res_len, which is duplicated
    from an nfc_target in pn533, is too large as the nfc_target is not
    properly initialized and retains garbage values. Clear nfc_targets with
    memset() before they are used.
    
    Found by a modified version of syzkaller.
    
    BUG: KASAN: slab-out-of-bounds in nla_put
    Call Trace:
     memcpy
     nla_put
     nfc_genl_dump_targets
     genl_lock_dumpit
     netlink_dump
     __netlink_dump_start
     genl_family_rcv_msg_dumpit
     genl_rcv_msg
     netlink_rcv_skb
     genl_rcv
     netlink_unicast
     netlink_sendmsg
     sock_sendmsg
     ____sys_sendmsg
     ___sys_sendmsg
     __sys_sendmsg
     do_syscall_64
    
    Fixes: 673088fb42d0 ("NFC: pn533: Send ATR_REQ directly for active device detection")
    Fixes: 361f3cb7f9cf ("NFC: DEP link hook implementation for pn533")
    Signed-off-by: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20221214015139.119673-1-linuxlovemin@yonsei.ac.kr
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcf2c1dc5358dcf7e34a68cdb6b0bbf967801efa
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Dec 13 02:19:08 2022 +0200

    net: enetc: avoid buffer leaks on xdp_do_redirect() failure
    
    [ Upstream commit 628050ec952d2e2e46ec9fb6aa07e41139e030c8 ]
    
    Before enetc_clean_rx_ring_xdp() calls xdp_do_redirect(), each software
    BD in the RX ring between index orig_i and i can have one of 2 refcount
    values on its page.
    
    We are the owner of the current buffer that is being processed, so the
    refcount will be at least 1.
    
    If the current owner of the buffer at the diametrically opposed index
    in the RX ring (i.o.w, the other half of this page) has not yet called
    kfree(), this page's refcount could even be 2.
    
    enetc_page_reusable() in enetc_flip_rx_buff() tests for the page
    refcount against 1, and [ if it's 2 ] does not attempt to reuse it.
    
    But if enetc_flip_rx_buff() is put after the xdp_do_redirect() call,
    the page refcount can have one of 3 values. It can also be 0, if there
    is no owner of the other page half, and xdp_do_redirect() for this
    buffer ran so far that it triggered a flush of the devmap/cpumap bulk
    queue, and the consumers of those bulk queues also freed the buffer,
    all by the time xdp_do_redirect() returns the execution back to enetc.
    
    This is the reason why enetc_flip_rx_buff() is called before
    xdp_do_redirect(), but there is a big flaw with that reasoning:
    enetc_flip_rx_buff() will set rx_swbd->page = NULL on both sides of the
    enetc_page_reusable() branch, and if xdp_do_redirect() returns an error,
    we call enetc_xdp_free(), which does not deal gracefully with that.
    
    In fact, what happens is quite special. The page refcounts start as 1.
    enetc_flip_rx_buff() figures they're reusable, transfers these
    rx_swbd->page pointers to a different rx_swbd in enetc_reuse_page(), and
    bumps the refcount to 2. When xdp_do_redirect() later returns an error,
    we call the no-op enetc_xdp_free(), but we still haven't lost the
    reference to that page. A copy of it is still at rx_ring->next_to_alloc,
    but that has refcount 2 (and there are no concurrent owners of it in
    flight, to drop the refcount). What really kills the system is when
    we'll flip the rx_swbd->page the second time around. With an updated
    refcount of 2, the page will not be reusable and we'll really leak it.
    Then enetc_new_page() will have to allocate more pages, which will then
    eventually leak again on further errors from xdp_do_redirect().
    
    The problem, summarized, is that we zeroize rx_swbd->page before we're
    completely done with it, and this makes it impossible for the error path
    to do something with it.
    
    Since the packet is potentially multi-buffer and therefore the
    rx_swbd->page is potentially an array, manual passing of the old
    pointers between enetc_flip_rx_buff() and enetc_xdp_free() is a bit
    difficult.
    
    For the sake of going with a simple solution, we accept the possibility
    of racing with xdp_do_redirect(), and we move the flip procedure to
    execute only on the redirect success path. By racing, I mean that the
    page may be deemed as not reusable by enetc (having a refcount of 0),
    but there will be no leak in that case, either.
    
    Once we accept that, we have something better to do with buffers on
    XDP_REDIRECT failure. Since we haven't performed half-page flipping yet,
    we won't, either (and this way, we can avoid enetc_xdp_free()
    completely, which gives the entire page to the slab allocator).
    Instead, we'll call enetc_xdp_drop(), which will recycle this half of
    the buffer back to the RX ring.
    
    Fixes: 9d2b68cc108d ("net: enetc: add support for XDP_REDIRECT")
    Suggested-by: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Link: https://lore.kernel.org/r/20221213001908.2347046-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f463a1295c4fa73eac0b16fbfbdfc5726b06445d
Author: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Date:   Fri Jan 14 22:09:50 2022 +0530

    selftests/bpf: Add test for unstable CT lookup API
    
    [ Upstream commit 87091063df5d4845d1db0761a9ed5510c4756a96 ]
    
    This tests that we return errors as documented, and also that the kfunc
    calls work from both XDP and TC hooks.
    
    Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
    Link: https://lore.kernel.org/r/20220114163953.1455836-8-memxor@gmail.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Stable-dep-of: a8dfde09c901 ("selftests/bpf: Select CONFIG_FUNCTION_ERROR_INJECTION")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 094f3d9314d67691cb21ba091c1b528f6e3c4893
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Wed Dec 14 11:04:30 2022 +0800

    block, bfq: fix possible uaf for 'bfqq->bic'
    
    [ Upstream commit 64dc8c732f5c2b406cc752e6aaa1bd5471159cab ]
    
    Our test report a uaf for 'bfqq->bic' in 5.10:
    
    ==================================================================
    BUG: KASAN: use-after-free in bfq_select_queue+0x378/0xa30
    
    CPU: 6 PID: 2318352 Comm: fsstress Kdump: loaded Not tainted 5.10.0-60.18.0.50.h602.kasan.eulerosv2r11.x86_64 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58-20220320_160524-szxrtosci10000 04/01/2014
    Call Trace:
     bfq_select_queue+0x378/0xa30
     bfq_dispatch_request+0xe8/0x130
     blk_mq_do_dispatch_sched+0x62/0xb0
     __blk_mq_sched_dispatch_requests+0x215/0x2a0
     blk_mq_sched_dispatch_requests+0x8f/0xd0
     __blk_mq_run_hw_queue+0x98/0x180
     __blk_mq_delay_run_hw_queue+0x22b/0x240
     blk_mq_run_hw_queue+0xe3/0x190
     blk_mq_sched_insert_requests+0x107/0x200
     blk_mq_flush_plug_list+0x26e/0x3c0
     blk_finish_plug+0x63/0x90
     __iomap_dio_rw+0x7b5/0x910
     iomap_dio_rw+0x36/0x80
     ext4_dio_read_iter+0x146/0x190 [ext4]
     ext4_file_read_iter+0x1e2/0x230 [ext4]
     new_sync_read+0x29f/0x400
     vfs_read+0x24e/0x2d0
     ksys_read+0xd5/0x1b0
     do_syscall_64+0x33/0x40
     entry_SYSCALL_64_after_hwframe+0x61/0xc6
    
    Commit 3bc5e683c67d ("bfq: Split shared queues on move between cgroups")
    changes that move process to a new cgroup will allocate a new bfqq to
    use, however, the old bfqq and new bfqq can point to the same bic:
    
    1) Initial state, two process with io in the same cgroup.
    
    Process 1       Process 2
     (BIC1)          (BIC2)
      |  Λ            |  Λ
      |  |            |  |
      V  |            V  |
      bfqq1           bfqq2
    
    2) bfqq1 is merged to bfqq2.
    
    Process 1       Process 2
     (BIC1)          (BIC2)
      |               |
       \-------------\|
                      V
      bfqq1           bfqq2(coop)
    
    3) Process 1 exit, then issue new io(denoce IOA) from Process 2.
    
     (BIC2)
      |  Λ
      |  |
      V  |
      bfqq2(coop)
    
    4) Before IOA is completed, move Process 2 to another cgroup and issue io.
    
    Process 2
     (BIC2)
       Λ
       |\--------------\
       |                V
      bfqq2           bfqq3
    
    Now that BIC2 points to bfqq3, while bfqq2 and bfqq3 both point to BIC2.
    If all the requests are completed, and Process 2 exit, BIC2 will be
    freed while there is no guarantee that bfqq2 will be freed before BIC2.
    
    Fix the problem by clearing bfqq->bic while bfqq is detached from bic.
    
    Fixes: 3bc5e683c67d ("bfq: Split shared queues on move between cgroups")
    Suggested-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20221214030430.3304151-1-yukuai1@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf48cb8debb2cc74cda451aa2bc19648be0c2e99
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Dec 12 16:41:39 2022 +0800

    mISDN: hfcmulti: don't call dev_kfree_skb/kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 1232946cf522b8de9e398828bde325d7c41f29dd ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    skb_queue_purge() is called under spin_lock_irqsave() in handle_dmsg()
    and hfcm_l1callback(), kfree_skb() is called in them, to fix this, use
    skb_queue_splice_init() to move the dch->squeue to a free queue, also
    enqueue the tx_skb and rx_skb, at last calling __skb_queue_purge() to
    free the SKBs afer unlock.
    
    Fixes: af69fb3a8ffa ("Add mISDN HFC multiport driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 560735375165b9fed07847811d48c14bba6a0166
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Dec 12 16:41:38 2022 +0800

    mISDN: hfcpci: don't call dev_kfree_skb/kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit f0f596bd75a9d573ca9b587abb39cee0b916bb82 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    skb_queue_purge() is called under spin_lock_irqsave() in hfcpci_l2l1D(),
    kfree_skb() is called in it, to fix this, use skb_queue_splice_init()
    to move the dch->squeue to a free queue, also enqueue the tx_skb and
    rx_skb, at last calling __skb_queue_purge() to free the SKBs afer unlock.
    
    Fixes: 1700fe1a10dc ("Add mISDN HFC PCI driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ada4022f489133a7e7f9b303fc9151c51a70c189
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Dec 12 16:41:37 2022 +0800

    mISDN: hfcsusb: don't call dev_kfree_skb/kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit ddc9648db162eee556edd5222d2808fe33730203 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    skb_queue_purge() is called under spin_lock_irqsave() in hfcusb_l2l1D(),
    kfree_skb() is called in it, to fix this, use skb_queue_splice_init()
    to move the dch->squeue to a free queue, also enqueue the tx_skb and
    rx_skb, at last calling __skb_queue_purge() to free the SKBs afer unlock.
    
    In tx_iso_complete(), dev_kfree_skb() is called to consume the transmitted
    SKB, so replace it with dev_consume_skb_irq().
    
    Fixes: 69f52adb2d53 ("mISDN: Add HFC USB driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0578f9929fd3e1e00ba67cb8c277e73b11bbcaf3
Author: Emeel Hakim <ehakim@nvidia.com>
Date:   Sun Dec 11 09:55:32 2022 +0200

    net: macsec: fix net device access prior to holding a lock
    
    [ Upstream commit f3b4a00f0f62da252c598310698dfc82ef2f2e2e ]
    
    Currently macsec offload selection update routine accesses
    the net device prior to holding the relevant lock.
    Fix by holding the lock prior to the device access.
    
    Fixes: dcb780fb2795 ("net: macsec: add nla support for changing the offloading selection")
    Reviewed-by: Raed Salem <raeds@nvidia.com>
    Signed-off-by: Emeel Hakim <ehakim@nvidia.com>
    Link: https://lore.kernel.org/r/20221211075532.28099-1-ehakim@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a472f069ced8601979f53c13c0cf20236074ed46
Author: Dan Aloni <dan.aloni@vastdata.com>
Date:   Mon Dec 12 13:11:06 2022 +0200

    nfsd: under NFSv4.1, fix double svc_xprt_put on rpc_create failure
    
    [ Upstream commit 3bc8edc98bd43540dbe648e4ef91f443d6d20a24 ]
    
    On error situation `clp->cl_cb_conn.cb_xprt` should not be given
    a reference to the xprt otherwise both client cleanup and the
    error handling path of the caller call to put it. Better to
    delay handing over the reference to a later branch.
    
    [   72.530665] refcount_t: underflow; use-after-free.
    [   72.531933] WARNING: CPU: 0 PID: 173 at lib/refcount.c:28 refcount_warn_saturate+0xcf/0x120
    [   72.533075] Modules linked in: nfsd(OE) nfsv4(OE) nfsv3(OE) nfs(OE) lockd(OE) compat_nfs_ssc(OE) nfs_acl(OE) rpcsec_gss_krb5(OE) auth_rpcgss(OE) rpcrdma(OE) dns_resolver fscache netfs grace rdma_cm iw_cm ib_cm sunrpc(OE) mlx5_ib mlx5_core mlxfw pci_hyperv_intf ib_uverbs ib_core xt_MASQUERADE nf_conntrack_netlink nft_counter xt_addrtype nft_compat br_netfilter bridge stp llc nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set overlay nf_tables nfnetlink crct10dif_pclmul crc32_pclmul ghash_clmulni_intel xfs serio_raw virtio_net virtio_blk net_failover failover fuse [last unloaded: sunrpc]
    [   72.540389] CPU: 0 PID: 173 Comm: kworker/u16:5 Tainted: G           OE     5.15.82-dan #1
    [   72.541511] Hardware name: Red Hat KVM/RHEL-AV, BIOS 1.16.0-3.module+el8.7.0+1084+97b81f61 04/01/2014
    [   72.542717] Workqueue: nfsd4_callbacks nfsd4_run_cb_work [nfsd]
    [   72.543575] RIP: 0010:refcount_warn_saturate+0xcf/0x120
    [   72.544299] Code: 55 00 0f 0b 5d e9 01 50 98 00 80 3d 75 9e 39 08 00 0f 85 74 ff ff ff 48 c7 c7 e8 d1 60 8e c6 05 61 9e 39 08 01 e8 f6 51 55 00 <0f> 0b 5d e9 d9 4f 98 00 80 3d 4b 9e 39 08 00 0f 85 4c ff ff ff 48
    [   72.546666] RSP: 0018:ffffb3f841157cf0 EFLAGS: 00010286
    [   72.547393] RAX: 0000000000000026 RBX: ffff89ac6231d478 RCX: 0000000000000000
    [   72.548324] RDX: ffff89adb7c2c2c0 RSI: ffff89adb7c205c0 RDI: ffff89adb7c205c0
    [   72.549271] RBP: ffffb3f841157cf0 R08: 0000000000000000 R09: c0000000ffefffff
    [   72.550209] R10: 0000000000000001 R11: ffffb3f841157ad0 R12: ffff89ac6231d180
    [   72.551142] R13: ffff89ac6231d478 R14: ffff89ac40c06180 R15: ffff89ac6231d4b0
    [   72.552089] FS:  0000000000000000(0000) GS:ffff89adb7c00000(0000) knlGS:0000000000000000
    [   72.553175] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   72.553934] CR2: 0000563a310506a8 CR3: 0000000109a66000 CR4: 0000000000350ef0
    [   72.554874] Call Trace:
    [   72.555278]  <TASK>
    [   72.555614]  svc_xprt_put+0xaf/0xe0 [sunrpc]
    [   72.556276]  nfsd4_process_cb_update.isra.11+0xb7/0x410 [nfsd]
    [   72.557087]  ? update_load_avg+0x82/0x610
    [   72.557652]  ? cpuacct_charge+0x60/0x70
    [   72.558212]  ? dequeue_entity+0xdb/0x3e0
    [   72.558765]  ? queued_spin_unlock+0x9/0x20
    [   72.559358]  nfsd4_run_cb_work+0xfc/0x270 [nfsd]
    [   72.560031]  process_one_work+0x1df/0x390
    [   72.560600]  worker_thread+0x37/0x3b0
    [   72.561644]  ? process_one_work+0x390/0x390
    [   72.562247]  kthread+0x12f/0x150
    [   72.562710]  ? set_kthread_struct+0x50/0x50
    [   72.563309]  ret_from_fork+0x22/0x30
    [   72.563818]  </TASK>
    [   72.564189] ---[ end trace 031117b1c72ec616 ]---
    [   72.566019] list_add corruption. next->prev should be prev (ffff89ac4977e538), but was ffff89ac4763e018. (next=ffff89ac4763e018).
    [   72.567647] ------------[ cut here ]------------
    
    Fixes: a4abc6b12eb1 ("nfsd: Fix svc_xprt refcnt leak when setup callback client failed")
    Cc: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Cc: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Dan Aloni <dan.aloni@vastdata.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8f1d037d63dfd64b6bb2463b1cf37112b4c77b0
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Sun Dec 11 23:35:53 2022 +0100

    rtc: pcf85063: fix pcf85063_clkout_control
    
    [ Upstream commit c2d12e85336f6d4172fb2bab5935027c446d7343 ]
    
    pcf85063_clkout_control reads the wrong register but then update the
    correct one.
    
    Reported-by: Janne Terho <janne.terho@ouman.fi>
    Fixes: 8c229ab6048b ("rtc: pcf85063: Add pcf85063 clkout control to common clock framework")
    Link: https://lore.kernel.org/r/20221211223553.59955-1-alexandre.belloni@bootlin.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35a174552bdec10375b1981707e382e46077f730
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Wed Nov 23 09:59:53 2022 +0800

    rtc: pic32: Move devm_rtc_allocate_device earlier in pic32_rtc_probe()
    
    [ Upstream commit 90cd5c88830140c9fade92a8027e0fb2c6e4cc49 ]
    
    The pic32_rtc_enable(pdata, 0) and clk_disable_unprepare(pdata->clk)
    should be called in the error handling of devm_rtc_allocate_device(),
    so we should move devm_rtc_allocate_device earlier in pic32_rtc_probe()
    to fix it.
    
    Fixes: 6515e23b9fde ("rtc: pic32: convert to devm_rtc_allocate_device")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Link: https://lore.kernel.org/r/20221123015953.1998521-1-cuigaosheng1@huawei.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eea105c4e4b6887f4652d8f4936a9a431e3f4516
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Wed Nov 23 09:48:05 2022 +0800

    rtc: st-lpc: Add missing clk_disable_unprepare in st_rtc_probe()
    
    [ Upstream commit 5fb733d7bd6949e90028efdce8bd528c6ab7cf1e ]
    
    The clk_disable_unprepare() should be called in the error handling
    of clk_get_rate(), fix it.
    
    Fixes: b5b2bdfc2893 ("rtc: st: Add new driver for ST's LPC RTC")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Link: https://lore.kernel.org/r/20221123014805.1993052-1-cuigaosheng1@huawei.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74248b556006b38727ab517d8dfdde4f3f004c97
Author: Qingfang DENG <dqfext@gmail.com>
Date:   Thu Dec 8 20:35:29 2022 +0800

    netfilter: flowtable: really fix NAT IPv6 offload
    
    [ Upstream commit 5fb45f95eec682621748b7cb012c6a8f0f981e6a ]
    
    The for-loop was broken from the start. It translates to:
    
            for (i = 0; i < 4; i += 4)
    
    which means the loop statement is run only once, so only the highest
    32-bit of the IPv6 address gets mangled.
    
    Fix the loop increment.
    
    Fixes: 0e07e25b481a ("netfilter: flowtable: fix NAT IPv6 offload mangling")
    Fixes: 5c27d8d76ce8 ("netfilter: nf_flow_table_offload: add IPv6 support")
    Signed-off-by: Qingfang DENG <dqfext@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c940632cabfa2a1ab633759c9ed2abd75871894
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 25 15:36:26 2022 +0800

    mfd: pm8008: Fix return value check in pm8008_probe()
    
    [ Upstream commit 14f8c55d48e02157519fbcb3a5de557abd8a06e2 ]
    
    In case of error, the function devm_regmap_init_i2c() returns
    ERR_PTR() and never returns NULL. The NULL test in the return
    value check should be replaced with IS_ERR().
    
    Fixes: 6b149f3310a4 ("mfd: pm8008: Add driver for QCOM PM8008 PMIC")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Acked-by: Guru Das Srinagesh <gurus@codeaurora.org>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/20221125073626.1868229-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec10848e2638c31bd7096b304c548abd5f9a7971
Author: Lee Jones <lee.jones@linaro.org>
Date:   Tue Jun 21 09:14:02 2022 +0100

    mfd: pm8008: Remove driver data structure pm8008_data
    
    [ Upstream commit 915696927cd6e7838d25dab8fbd2ae05d4acce84 ]
    
    Maintaining a local driver data structure that is never shared
    outside of the core device is an unnecessary complexity.  Half of the
    attributes were not used outside of a single function, one of which
    was not used at all.  The remaining 2 are generic and can be passed
    around as required.
    
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Stable-dep-of: 14f8c55d48e0 ("mfd: pm8008: Fix return value check in pm8008_probe()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38959417d35086e5a9b03219b43e97895a69b494
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Nov 20 18:19:01 2022 +0100

    mfd: qcom_rpm: Fix an error handling path in qcom_rpm_probe()
    
    [ Upstream commit 36579aca877a62f67ecd77eb3edefc4c86292406 ]
    
    If an error occurs after the clk_prepare_enable() call, a corresponding
    clk_disable_unprepare() should be called.
    
    Simplify code and switch to devm_clk_get_enabled() to fix it.
    
    Fixes: 3526403353c2 ("mfd: qcom_rpm: Handle message RAM clock")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/e39752476d02605b2be46cab7115f71255ce13a8.1668949256.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b95ae3543e515efc14e6114c728e2d2fca251be9
Author: Matti Vaittinen <mazziesaccount@gmail.com>
Date:   Wed Nov 16 10:19:21 2022 +0200

    mfd: bd957x: Fix Kconfig dependency on REGMAP_IRQ
    
    [ Upstream commit 85842c46fd47fa6bd78681c154223bed27d5fd19 ]
    
    The BD957x driver uses REGMAP_IRQ but does not 'select' to depend on
    it. This can cause build failures.  Select REGMAP_IRQ for BD957X.
    
    Fixes: 0e9692607f94 ("mfd: bd9576: Add IRQ support")
    Signed-off-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/Y3SdCWkRr1L64SWK@dc75zzyyyyyyyyyyyyydt-3.rev.dnainternet.fi
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 615d3c8a469d708271a7d39b3615b59a05790a30
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Nov 18 09:07:43 2022 -0600

    powerpc/pseries/eeh: use correct API for error log size
    
    [ Upstream commit 9aafbfa5f57a4b75bafd3bed0191e8429c5fa618 ]
    
    rtas-error-log-max is not the name of an RTAS function, so rtas_token()
    is not the appropriate API for retrieving its value. We already have
    rtas_get_error_log_max() which returns a sensible value if the property
    is absent for any reason, so use that instead.
    
    Fixes: 8d633291b4fc ("powerpc/eeh: pseries platform EEH error log retrieval")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    [mpe: Drop no-longer possible error handling as noticed by ajd]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20221118150751.469393-6-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68de42e00821bcf3cd9e187c98c31f66bde4befe
Author: Haowen Bai <baihaowen@meizu.com>
Date:   Wed May 11 09:27:56 2022 +0800

    powerpc/eeh: Drop redundant spinlock initialization
    
    [ Upstream commit 3def164a5cedad9117859dd4610cae2cc59cb6d2 ]
    
    slot_errbuf_lock has declared and initialized by DEFINE_SPINLOCK,
    so we don't need to spin_lock_init again, drop it.
    
    Signed-off-by: Haowen Bai <baihaowen@meizu.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1652232476-9696-1-git-send-email-baihaowen@meizu.com
    Stable-dep-of: 9aafbfa5f57a ("powerpc/pseries/eeh: use correct API for error log size")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b157b4b13b4eb65d6736b0290ceef4fad01ae88
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Sun Dec 4 16:27:57 2022 +0800

    remoteproc: qcom: q6v5: Fix missing clk_disable_unprepare() in q6v5_wcss_qcs404_power_on()
    
    [ Upstream commit 7ff5d60f18bba5cbaf17b2926aa9da44d5beca01 ]
    
    q6v5_wcss_qcs404_power_on() have no fail path for readl_poll_timeout().
    Add fail path for readl_poll_timeout().
    
    Fixes: 0af65b9b915e ("remoteproc: qcom: wcss: Add non pas wcss Q6 support for QCS404")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221204082757.18850-1-shangxiaojing@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b191533f57f63edc36d855b443b604d2d0f3ba0
Author: Yuan Can <yuancan@huawei.com>
Date:   Sat Dec 3 07:06:39 2022 +0000

    remoteproc: qcom_q6v5_pas: Fix missing of_node_put() in adsp_alloc_memory_region()
    
    [ Upstream commit 38e7d9c19276832ebb0277f415b9214bf7baeb37 ]
    
    The pointer node is returned by of_parse_phandle() with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: b9e718e950c3 ("remoteproc: Introduce Qualcomm ADSP PIL")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221203070639.15128-1-yuancan@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7628ebca8173d794bffc6fb55f89b61ed9cd8c9
Author: Luca Weiss <luca.weiss@fairphone.com>
Date:   Fri Nov 18 10:08:16 2022 +0100

    remoteproc: qcom_q6v5_pas: detach power domains on remove
    
    [ Upstream commit 34d01df00b84127be04c914fc9f8e8be1fcdf851 ]
    
    We need to detach from the power domains also on remove, not just on
    probe fail so a subsequent probe works as expected.
    
    Otherwise the following error appears on re-probe:
    
    [   29.452005] sysfs: cannot create duplicate filename '/devices/genpd:0:3000000.remoteproc'
    [   29.477121] CPU: 1 PID: 483 Comm: sh Tainted: G        W          6.1.0-rc4-00075-g71a113770bda #78
    [   29.510319] Hardware name: Fairphone 4 (DT)
    [   29.538335] Call trace:
    [   29.564470]  dump_backtrace.part.0+0xe0/0xf0
    [   29.592602]  show_stack+0x18/0x30
    [   29.619616]  dump_stack_lvl+0x64/0x80
    [   29.646834]  dump_stack+0x18/0x34
    [   29.673541]  sysfs_warn_dup+0x60/0x7c
    [   29.700592]  sysfs_create_dir_ns+0xec/0x110
    [   29.728057]  kobject_add_internal+0xb8/0x374
    [   29.755530]  kobject_add+0x9c/0x104
    [   29.782072]  device_add+0xbc/0x8a0
    [   29.808445]  device_register+0x20/0x30
    [   29.835175]  genpd_dev_pm_attach_by_id+0xa4/0x190
    [   29.862851]  genpd_dev_pm_attach_by_name+0x3c/0xb0
    [   29.890472]  dev_pm_domain_attach_by_name+0x20/0x30
    [   29.918212]  adsp_probe+0x278/0x580
    [   29.944384]  platform_probe+0x68/0xc0
    [   29.970603]  really_probe+0xbc/0x2dc
    [   29.996662]  __driver_probe_device+0x78/0xe0
    [   30.023491]  device_driver_attach+0x48/0xac
    [   30.050215]  bind_store+0xb8/0x114
    [   30.075957]  drv_attr_store+0x24/0x3c
    [   30.101874]  sysfs_kf_write+0x44/0x54
    [   30.127751]  kernfs_fop_write_iter+0x120/0x1f0
    [   30.154448]  vfs_write+0x1ac/0x380
    [   30.179937]  ksys_write+0x70/0x104
    [   30.205274]  __arm64_sys_write+0x1c/0x2c
    [   30.231060]  invoke_syscall+0x48/0x114
    [   30.256594]  el0_svc_common.constprop.0+0x44/0xec
    [   30.283183]  do_el0_svc+0x2c/0xd0
    [   30.308320]  el0_svc+0x2c/0x84
    [   30.333059]  el0t_64_sync_handler+0xf4/0x120
    [   30.359001]  el0t_64_sync+0x18c/0x190
    [   30.384385] kobject_add_internal failed for genpd:0:3000000.remoteproc with -EEXIST, don't try to register things with the same name in the same directory.
    [   30.406029] remoteproc remoteproc0: releasing 3000000.remoteproc
    [   30.416064] qcom_q6v5_pas: probe of 3000000.remoteproc failed with error -17
    
    Fixes: 17ee2fb4e856 ("remoteproc: qcom: pas: Vote for active/proxy power domains")
    Reviewed-by: Sibi Sankar <quic_sibis@quicinc.com>
    Reviewed-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Signed-off-by: Luca Weiss <luca.weiss@fairphone.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221118090816.100012-2-luca.weiss@fairphone.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdf47f462ad0d0cdc0f7386edfec754b1cfa2029
Author: Luca Weiss <luca.weiss@fairphone.com>
Date:   Fri Nov 18 10:08:15 2022 +0100

    remoteproc: qcom_q6v5_pas: disable wakeup on probe fail or remove
    
    [ Upstream commit 9a70551996e699fda262e8d54bbd41739d7aad6d ]
    
    Leaving wakeup enabled during probe fail (-EPROBE_DEFER) or remove makes
    the subsequent probe fail.
    
    [    3.749454] remoteproc remoteproc0: releasing 3000000.remoteproc
    [    3.752949] qcom_q6v5_pas: probe of 3000000.remoteproc failed with error -17
    [    3.878935] remoteproc remoteproc0: releasing 4080000.remoteproc
    [    3.887602] qcom_q6v5_pas: probe of 4080000.remoteproc failed with error -17
    [    4.319552] remoteproc remoteproc0: releasing 8300000.remoteproc
    [    4.332716] qcom_q6v5_pas: probe of 8300000.remoteproc failed with error -17
    
    Fix this by disabling wakeup in both cases so the driver can properly
    probe on the next try.
    
    Fixes: a781e5aa5911 ("remoteproc: core: Prevent system suspend during remoteproc recovery")
    Fixes: dc86c129b4fb ("remoteproc: qcom: pas: Mark devices as wakeup capable")
    Reviewed-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Signed-off-by: Luca Weiss <luca.weiss@fairphone.com>
    Reviewed-by: Caleb Connolly <caleb.connolly@linaro.org>
    Reviewed-by: Sibi Sankar <quic_sibis@quicinc.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221118090816.100012-1-luca.weiss@fairphone.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 098ebb9089c4eedea09333f912d105fa63377496
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Fri Nov 25 10:16:41 2022 +0800

    remoteproc: qcom: q6v5: Fix potential null-ptr-deref in q6v5_wcss_init_mmio()
    
    [ Upstream commit f360e2b275efbb745ba0af8b47d9ef44221be586 ]
    
    q6v5_wcss_init_mmio() will call platform_get_resource_byname() that may
    fail and return NULL. devm_ioremap() will use res->start as input, which
    may causes null-ptr-deref. Check the ret value of
    platform_get_resource_byname() to avoid the null-ptr-deref.
    
    Fixes: 0af65b9b915e ("remoteproc: qcom: wcss: Add non pas wcss Q6 support for QCS404")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221125021641.29392-1-shangxiaojing@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 131c0a3ead78d45f0f39ddb42cf1bd9be26239b0
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Tue Nov 29 18:56:50 2022 +0800

    remoteproc: sysmon: fix memory leak in qcom_add_sysmon_subdev()
    
    [ Upstream commit e01ce676aaef3b13d02343d7e70f9637d93a3367 ]
    
    The kfree() should be called when of_irq_get_byname() fails or
    devm_request_threaded_irq() fails in qcom_add_sysmon_subdev(),
    otherwise there will be a memory leak, so add kfree() to fix it.
    
    Fixes: 027045a6e2b7 ("remoteproc: qcom: Add shutdown-ack irq")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221129105650.1539187-1-cuigaosheng1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4507c6a6723400d72d6da346bcc6eddedac923d9
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Fri Dec 2 19:35:08 2022 +0100

    pwm: mediatek: always use bus clock for PWM on MT7622
    
    [ Upstream commit aa3c668f2f98856af96e13f44da6ca4f26f0b98c ]
    
    According to MT7622 Reference Manual for Development Board v1.0 the PWM
    unit found in the MT7622 SoC also comes with the PWM_CK_26M_SEL register
    at offset 0x210 just like other modern MediaTek ARM64 SoCs.
    And also MT7622 sets that register to 0x00000001 on reset which is
    described as 'Select 26M fix CLK as BCLK' in the datasheet.
    Hence set has_ck_26m_sel to true also for MT7622 which results in the
    driver writing 0 to the PWM_CK_26M_SEL register which is described as
    'Select bus CLK as BCLK'.
    
    Fixes: 0c0ead76235db0 ("pwm: mediatek: Always use bus clock")
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/Y1iF2slvSblf6bYK@makrotopia.org
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fbbb14f0ea494013a046a3e5c5f0d12c42b010a
Author: xinlei lee <xinlei.lee@mediatek.com>
Date:   Fri Dec 2 19:35:06 2022 +0100

    pwm: mtk-disp: Fix the parameters calculated by the enabled flag of disp_pwm
    
    [ Upstream commit 0b5ef3429d8f78427558ab0dcbfd862098ba2a63 ]
    
    In the original mtk_disp_pwm_get_state() function wrongly uses bit 0 of
    CON0 to judge if the PWM is enabled.
    However that is indicated by a bit (at a machine dependent position) in
    the DISP_PWM_EN register. Fix this accordingly.
    
    Fixes: 3f2b16734914 ("pwm: mtk-disp: Implement atomic API .get_state()")
    Signed-off-by: xinlei lee <xinlei.lee@mediatek.com>
    Reviewed-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/1666172538-11652-1-git-send-email-xinlei.lee@mediatek.com
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eec59807a26bbcbafac4cb90913e59b28ab3cbcd
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Fri Dec 2 19:35:05 2022 +0100

    pwm: sifive: Call pwm_sifive_update_clock() while mutex is held
    
    [ Upstream commit 45558b3abb87eeb2cedb8a59cb2699c120b5102a ]
    
    As was documented in commit 0f02f491b786 ("pwm: sifive: Reduce time the
    controller lock is held") a caller of pwm_sifive_update_clock() must
    hold the mutex. So fix pwm_sifive_clock_notifier() to grab the lock.
    
    While this necessity was only documented later, the race exists since
    the driver was introduced.
    
    Fixes: 9e37a53eb051 ("pwm: sifive: Add a driver for SiFive SoC PWM")
    Reported-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Reviewed-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Link: https://lore.kernel.org/r/20221018061656.1428111-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37ea9a6c417f0cf0fd0d4740529f84c4885f9e76
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Mon Nov 28 10:06:28 2022 -0400

    iommu/sun50i: Remove IOMMU_DOMAIN_IDENTITY
    
    [ Upstream commit ef5bb8e7a7127218f826b9ccdf7508e7a339f4c2 ]
    
    This driver treats IOMMU_DOMAIN_IDENTITY the same as UNMANAGED, which
    cannot possibly be correct.
    
    UNMANAGED domains are required to start out blocking all DMAs. This seems
    to be what this driver does as it allocates a first level 'dt' for the IO
    page table that is 0 filled.
    
    Thus UNMANAGED looks like a working IO page table, and so IDENTITY must be
    a mistake. Remove it.
    
    Fixes: 4100b8c229b3 ("iommu: Add Allwinner H6 IOMMU driver")
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/0-v1-97f0adf27b5e+1f0-s50_identity_jgg@nvidia.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8de2c29db68b3d7e4cd2661059085b14c450763a
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Dec 5 12:44:27 2022 +0400

    selftests/powerpc: Fix resource leaks
    
    [ Upstream commit 8f4ab7da904ab7027ccd43ddb4f0094e932a5877 ]
    
    In check_all_cpu_dscr_defaults, opendir() opens the directory stream.
    Add missing closedir() in the error path to release it.
    
    In check_cpu_dscr_default, open() creates an open file descriptor.
    Add missing close() in the error path to release it.
    
    Fixes: ebd5858c904b ("selftests/powerpc: Add test for all DSCR sysfs interfaces")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20221205084429.570654-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd49c5031e85f6cbcd58453f55ea5175454a56a7
Author: Kajol Jain <kjain@linux.ibm.com>
Date:   Wed Nov 30 23:15:13 2022 +0530

    powerpc/hv-gpci: Fix hv_gpci event list
    
    [ Upstream commit 03f7c1d2a49acd30e38789cd809d3300721e9b0e ]
    
    Based on getPerfCountInfo v1.018 documentation, some of the
    hv_gpci events were deprecated for platform firmware that
    supports counter_info_version 0x8 or above.
    
    Fix the hv_gpci event list by adding a new attribute group
    called "hv_gpci_event_attrs_v6" and a "ENABLE_EVENTS_COUNTERINFO_V6"
    macro to enable these events for platform firmware
    that supports counter_info_version 0x6 or below. And assigning
    the hv_gpci event list based on output counter info version
    of underlying plaform.
    
    Fixes: 97bf2640184f ("powerpc/perf/hv-gpci: add the remaining gpci requests")
    Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
    Reviewed-by: Madhavan Srinivasan <maddy@linux.ibm.com>
    Reviewed-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20221130174513.87501-1-kjain@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65d3469f3b918d24c7afbc7746e90797ffb4ee29
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Oct 29 19:16:26 2022 +0800

    powerpc/83xx/mpc832x_rdb: call platform_device_put() in error case in of_fsl_spi_probe()
    
    [ Upstream commit 4d0eea415216fe3791da2f65eb41399e70c7bedf ]
    
    If platform_device_add() is not called or failed, it can not call
    platform_device_del() to clean up memory, it should call
    platform_device_put() in error case.
    
    Fixes: 26f6cb999366 ("[POWERPC] fsl_soc: add support for fsl_spi")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20221029111626.429971-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf03db28964069801597cf3c7f56bee3cae52efa
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Sun Nov 27 22:49:28 2022 +1000

    powerpc/perf: callchain validate kernel stack pointer bounds
    
    [ Upstream commit 32c5209214bd8d4f8c4e9d9b630ef4c671f58e79 ]
    
    The interrupt frame detection and loads from the hypothetical pt_regs
    are not bounds-checked. The next-frame validation only bounds-checks
    STACK_FRAME_OVERHEAD, which does not include the pt_regs. Add another
    test for this.
    
    The user could set r1 to be equal to the address matching the first
    interrupt frame - STACK_INT_FRAME_SIZE, which is in the previous page
    due to the kernel redzone, and induce the kernel to load the marker from
    there. Possibly this could cause a crash at least. If the user could
    induce the previous page to contain a valid marker, then it might be
    able to direct perf to read specific memory addresses in a way that
    could be transmitted back to the user in the perf data.
    
    Fixes: 20002ded4d93 ("perf_counter: powerpc: Add callchain support")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20221127124942.1665522-4-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5de1902244458ed800b33a989ea2510c0e73135b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Oct 17 11:23:33 2022 +0800

    powerpc/xive: add missing iounmap() in error path in xive_spapr_populate_irq_data()
    
    [ Upstream commit 8b49670f3bb3f10cd4d5a6dca17f5a31b173ecdc ]
    
    If remapping 'data->trig_page' fails, the 'data->eoi_mmio' need be unmapped
    before returning from xive_spapr_populate_irq_data().
    
    Fixes: eac1e731b59e ("powerpc/xive: guest exploitation of the XIVE interrupt controller")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Cédric Le Goater <clg@kaod.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20221017032333.1852406-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b31e9647f1a26ab348641408da8ccad70b876997
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Fri Sep 16 15:15:04 2022 +0100

    powerpc/xmon: Fix -Wswitch-unreachable warning in bpt_cmds
    
    [ Upstream commit 1c4a4a4c8410be4a231a58b23e7a30923ff954ac ]
    
    When building with automatic stack variable initialization, GCC 12
    complains about variables defined outside of switch case statements.
    Move the variable into the case that uses it, which silences the warning:
    
    arch/powerpc/xmon/xmon.c: In function ‘bpt_cmds’:
    arch/powerpc/xmon/xmon.c:1529:13: warning: statement will never be executed [-Wswitch-unreachable]
     1529 |         int mode;
          |             ^~~~
    
    Fixes: 09b6c1129f89 ("powerpc/xmon: Fix compile error with PPC_8xx=y")
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/YySE6FHiOcbWWR+9@work
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a310e8db5409676b4b3e6c1f54dff174e4fd04d
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 10:00:38 2022 +0400

    cxl: Fix refcount leak in cxl_calc_capp_routing
    
    [ Upstream commit 1d09697ff22908ae487fc8c4fbde1811732be523 ]
    
    of_get_next_parent() returns a node pointer with refcount incremented,
    we should use of_node_put() on it when not need anymore.
    This function only calls of_node_put() in normal path,
    missing it in the error path.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: f24be42aab37 ("cxl: Add psl9 specific code")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220605060038.62217-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0accd460dc7bbe5f55e41a8867c63db9d07b3ec8
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 29 08:16:04 2022 +0100

    powerpc/52xx: Fix a resource leak in an error handling path
    
    [ Upstream commit 5836947613ef33d311b4eff6a32d019580a214f5 ]
    
    The error handling path of mpc52xx_lpbfifo_probe() has a request_irq()
    that is not balanced by a corresponding free_irq().
    
    Add the missing call, as already done in the remove function.
    
    Fixes: 3c9059d79f5e ("powerpc/5200: add LocalPlus bus FIFO device driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/dec1496d46ccd5311d0f6e9f9ca4238be11bf6a6.1643440531.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be2b9b1a60b7a7cafa9336e58547ceed0223327c
Author: Xie Shaowen <studentxswpy@163.com>
Date:   Tue Aug 2 15:41:48 2022 +0800

    macintosh/macio-adb: check the return value of ioremap()
    
    [ Upstream commit dbaa3105736d4d73063ea0a3b01cd7fafce924e6 ]
    
    The function ioremap() in macio_init() can fail, so its return value
    should be checked.
    
    Fixes: 36874579dbf4c ("[PATCH] powerpc: macio-adb build fix")
    Reported-by: Hacash Robot <hacashRobot@santino.com>
    Signed-off-by: Xie Shaowen <studentxswpy@163.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220802074148.3213659-1-studentxswpy@163.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19ded60b40e86b0903c8d5bd0161437ed5107a8b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 4 11:25:51 2022 +0800

    macintosh: fix possible memory leak in macio_add_one_device()
    
    [ Upstream commit 5ca86eae55a2f006e6c1edd2029b2cacb6979515 ]
    
    Afer commit 1fa5ae857bb1 ("driver core: get rid of struct device's
    bus_id string array"), the name of device is allocated dynamically. It
    needs to be freed when of_device_register() fails. Call put_device() to
    give up the reference that's taken in device_initialize(), so that it
    can be freed in kobject_cleanup() when the refcount hits 0.
    
    macio device is freed in macio_release_dev(), so the kfree() can be
    removed.
    
    Fixes: 1fa5ae857bb1 ("driver core: get rid of struct device's bus_id string array")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20221104032551.1075335-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e42b543d08052c3b223bcfb48f05cbaf0b767f86
Author: Yuan Can <yuancan@huawei.com>
Date:   Mon Nov 21 08:20:22 2022 +0000

    iommu/fsl_pamu: Fix resource leak in fsl_pamu_probe()
    
    [ Upstream commit 73f5fc5f884ad0c5f7d57f66303af64f9f002526 ]
    
    The fsl_pamu_probe() returns directly when create_csd() failed, leaving
    irq and memories unreleased.
    Fix by jumping to error if create_csd() returns error.
    
    Fixes: 695093e38c3e ("iommu/fsl: Freescale PAMU driver and iommu implementation.")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Link: https://lore.kernel.org/r/20221121082022.19091-1-yuancan@huawei.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e501b3fd7a2e1c4372d72bc70717aaca2beb8a5
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 18 17:36:04 2022 +0800

    iommu/amd: Fix pci device refcount leak in ppr_notifier()
    
    [ Upstream commit 6cf0981c2233f97d56938d9d61845383d6eb227c ]
    
    As comment of pci_get_domain_bus_and_slot() says, it returns
    a pci device with refcount increment, when finish using it,
    the caller must decrement the reference count by calling
    pci_dev_put(). So call it before returning from ppr_notifier()
    to avoid refcount leak.
    
    Fixes: daae2d25a477 ("iommu/amd: Don't copy GCR3 table root pointer")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221118093604.216371-1-yangyingliang@huawei.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9383921e8b21b0d20266335be430357bb439ea36
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Wed Sep 21 09:41:41 2022 +0200

    rtc: pcf85063: Fix reading alarm
    
    [ Upstream commit a6ceee26fd5ed9b5bd37322b1ca88e4548cee4a3 ]
    
    If the alarms are disabled the topmost bit (AEN_*) is set in the alarm
    registers. This is also interpreted in BCD number leading to this warning:
    rtc rtc0: invalid alarm value: 2022-09-21T80:80:80
    
    Fix this by masking alarm enabling and reserved bits.
    
    Fixes: 05cb3a56ee8c ("rtc: pcf85063: add alarm support")
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Link: https://lore.kernel.org/r/20220921074141.3903104-1-alexander.stein@ew.tq-group.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b66aa7b3060830ccaa706d6b79bcd76781166bec
Author: Stefan Eichenberger <stefan.eichenberger@toradex.com>
Date:   Sun Nov 6 12:59:15 2022 +0100

    rtc: snvs: Allow a time difference on clock register read
    
    [ Upstream commit 0462681e207ccc44778a77b3297af728b1cf5b9f ]
    
    On an iMX6ULL the following message appears when a wakealarm is set:
    
    echo 0 > /sys/class/rtc/rtc1/wakealarm
    rtc rtc1: Timeout trying to get valid LPSRT Counter read
    
    This does not always happen but is reproducible quite often (7 out of 10
    times). The problem appears because the iMX6ULL is not able to read the
    registers within one 32kHz clock cycle which is the base clock of the
    RTC. Therefore, this patch allows a difference of up to 320 cycles
    (10ms). 10ms was chosen to be big enough even on systems with less cpu
    power (e.g. iMX6ULL). According to the reference manual a difference is
    fine:
    - If the two consecutive reads are similar, the value is correct.
    The values have to be similar, not equal.
    
    Fixes: cd7f3a249dbe ("rtc: snvs: Add timeouts to avoid kernel lockups")
    Reviewed-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Signed-off-by: Stefan Eichenberger <stefan.eichenberger@toradex.com>
    Signed-off-by: Francesco Dolcini <francesco@dolcini.it>
    Link: https://lore.kernel.org/r/20221106115915.7930-1-francesco@dolcini.it
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a6cc22eab188a0e81ad0a94fff83ed8f4b9d63a
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Nov 9 13:15:36 2022 +0100

    rtc: cmos: Disable ACPI RTC event on removal
    
    [ Upstream commit 83ebb7b3036d151ee39a4a752018665648fc3bd4 ]
    
    Make cmos_do_remove() drop the ACPI RTC fixed event handler so as to
    prevent it from operating on stale data in case the event triggers
    after driver removal.
    
    Fixes: 311ee9c151ad ("rtc: cmos: allow using ACPI for RTC alarm instead of HPET")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Zhang Rui <rui.zhang@intel.com>
    Tested-by: Zhang Rui <rui.zhang@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/2224609.iZASKD2KPV@kreacher
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 689f757f0ab02c352cf655934d488a170cfaab40
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Nov 9 13:12:00 2022 +0100

    rtc: cmos: Rename ACPI-related functions
    
    [ Upstream commit d13e9ad9f5146f066a5c5a1cc993d09e4fb21ead ]
    
    The names of rtc_wake_setup() and cmos_wake_setup() don't indicate
    that these functions are ACPI-related, which is the case, and the
    former doesn't really reflect the role of the function.
    
    Rename them to acpi_rtc_event_setup() and acpi_cmos_wake_setup(),
    respectively, to address this shortcoming.
    
    No intentional functional impact.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Zhang Rui <rui.zhang@intel.com>
    Tested-by: Zhang Rui <rui.zhang@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/3225614.44csPzL39Z@kreacher
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c74bbecdabce0da180e2bca5c24bf9ad6ed0d0a
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Nov 9 13:09:32 2022 +0100

    rtc: cmos: Eliminate forward declarations of some functions
    
    [ Upstream commit dca4d3b71c8a09a16951add656711fbd6f5bfbb0 ]
    
    Reorder the ACPI-related code before cmos_do_probe() so as to eliminate
    excessive forward declarations of some functions.
    
    While at it, for consistency, add the inline modifier to the
    definitions of empty stub static funtions and remove it from the
    corresponding definitions of functions with non-empty bodies.
    
    No intentional functional impact.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Zhang Rui <rui.zhang@intel.com>
    Tested-by: Zhang Rui <rui.zhang@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/13157911.uLZWGnKmhe@kreacher
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a439a2cab300c18ed575e09ccd1e5a871300b99
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Nov 9 13:09:07 2022 +0100

    rtc: cmos: Call rtc_wake_setup() from cmos_do_probe()
    
    [ Upstream commit 375bbba09692fe4c5218eddee8e312dd733fa846 ]
    
    To reduce code duplication, move the invocation of rtc_wake_setup()
    into cmos_do_probe() and simplify the callers of the latter.
    
    No intentional functional impact.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Zhang Rui <rui.zhang@intel.com>
    Tested-by: Zhang Rui <rui.zhang@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/2143522.irdbgypaU6@kreacher
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9febdff75cef8214054fa7aedfbcae2fcf610b16
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Nov 9 13:07:08 2022 +0100

    rtc: cmos: Call cmos_wake_setup() from cmos_do_probe()
    
    [ Upstream commit 508ccdfb86b21da37ad091003a4d4567709d5dfb ]
    
    Notice that cmos_wake_setup() is the only user of acpi_rtc_info and it
    can operate on the cmos_rtc variable directly, so it need not set the
    platform_data pointer before cmos_do_probe() is called.  Instead, it
    can be called by cmos_do_probe() in the case when the platform_data
    pointer is not set to implement the default behavior (which is to use
    the FADT information as long as ACPI support is enabled).
    
    Modify the code accordingly.
    
    While at it, drop a comment that doesn't really match the code it is
    supposed to be describing.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Zhang Rui <rui.zhang@intel.com>
    Tested-by: Zhang Rui <rui.zhang@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/4803444.31r3eYUQgx@kreacher
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9324fb3eed72c984e74f527a96af9200f312b83
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Oct 18 22:35:11 2022 +0200

    rtc: cmos: fix build on non-ACPI platforms
    
    [ Upstream commit db4e955ae333567dea02822624106c0b96a2f84f ]
    
    Now that rtc_wake_setup is called outside of cmos_wake_setup, it also need
    to be defined on non-ACPI platforms.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/r/20221018203512.2532407-1-alexandre.belloni@bootlin.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe46b9303e32b8e40199c70bd8a8e1acda1a4f8d
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Oct 18 18:09:31 2022 +0200

    rtc: cmos: Fix wake alarm breakage
    
    [ Upstream commit 0782b66ed2fbb035dda76111df0954515e417b24 ]
    
    Commit 4919d3eb2ec0 ("rtc: cmos: Fix event handler registration
    ordering issue") overlooked the fact that cmos_do_probe() depended
    on the preparations carried out by cmos_wake_setup() and the wake
    alarm stopped working after the ordering of them had been changed.
    
    Address this by partially reverting commit 4919d3eb2ec0 so that
    cmos_wake_setup() is called before cmos_do_probe() again and moving
    the rtc_wake_setup() invocation from cmos_wake_setup() directly to the
    callers of cmos_do_probe() where it will happen after a successful
    completion of the latter.
    
    Fixes: 4919d3eb2ec0 ("rtc: cmos: Fix event handler registration ordering issue")
    Reported-by: Zhang Rui <rui.zhang@intel.com>
    Reported-by: Todd Brandt <todd.e.brandt@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: https://lore.kernel.org/r/5887691.lOV4Wx5bFT@kreacher
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60c6e563a843032cf6ff84b2fb732cd8754fc10d
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Oct 12 20:07:01 2022 +0200

    rtc: cmos: Fix event handler registration ordering issue
    
    [ Upstream commit 4919d3eb2ec0ee364f7e3cf2d99646c1b224fae8 ]
    
    Because acpi_install_fixed_event_handler() enables the event
    automatically on success, it is incorrect to call it before the
    handler routine passed to it is ready to handle events.
    
    Unfortunately, the rtc-cmos driver does exactly the incorrect thing
    by calling cmos_wake_setup(), which passes rtc_handler() to
    acpi_install_fixed_event_handler(), before cmos_do_probe(), because
    rtc_handler() uses dev_get_drvdata() to get to the cmos object
    pointer and the driver data pointer is only populated in
    cmos_do_probe().
    
    This leads to a NULL pointer dereference in rtc_handler() on boot
    if the RTC fixed event happens to be active at the init time.
    
    To address this issue, change the initialization ordering of the
    driver so that cmos_wake_setup() is always called after a successful
    cmos_do_probe() call.
    
    While at it, change cmos_pnp_probe() to call cmos_do_probe() after
    the initial if () statement used for computing the IRQ argument to
    be passed to cmos_do_probe() which is cleaner than calling it in
    each branch of that if () (local variable "irq" can be of type int,
    because it is passed to that function as an argument of type int).
    
    Note that commit 6492fed7d8c9 ("rtc: rtc-cmos: Do not check
    ACPI_FADT_LOW_POWER_S0") caused this issue to affect a larger number
    of systems, because previously it only affected systems with
    ACPI_FADT_LOW_POWER_S0 set, but it is present regardless of that
    commit.
    
    Fixes: 6492fed7d8c9 ("rtc: rtc-cmos: Do not check ACPI_FADT_LOW_POWER_S0")
    Fixes: a474aaedac99 ("rtc-cmos: move wake setup from ACPI glue into RTC driver")
    Link: https://lore.kernel.org/linux-acpi/20221010141630.zfzi7mk7zvnmclzy@techsingularity.net/
    Reported-by: Mel Gorman <mgorman@techsingularity.net>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Tested-by: Mel Gorman <mgorman@techsingularity.net>
    Link: https://lore.kernel.org/r/5629262.DvuYhMxLoT@kreacher
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3aa0834691fb5cc4d0a2d94f360319cd93db841
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Aug 8 20:23:59 2022 +0200

    rtc: rtc-cmos: Do not check ACPI_FADT_LOW_POWER_S0
    
    [ Upstream commit 6492fed7d8c95f53b0b804ef541324d924d95d41 ]
    
    The ACPI_FADT_LOW_POWER_S0 flag merely means that it is better to
    use low-power S0 idle on the given platform than S3 (provided that
    the latter is supported) and it doesn't preclude using either of
    them (which of them will be used depends on the choices made by user
    space).
    
    For this reason, there is no benefit from checking that flag in
    use_acpi_alarm_quirks().
    
    First off, it cannot be a bug to do S3 with use_acpi_alarm set,
    because S3 can be used on systems with ACPI_FADT_LOW_POWER_S0 and it
    must work if really supported, so the ACPI_FADT_LOW_POWER_S0 check is
    not needed to protect the S3-capable systems from failing.
    
    Second, suspend-to-idle can be carried out on a system with
    ACPI_FADT_LOW_POWER_S0 unset and it is expected to work, so if setting
    use_acpi_alarm is needed to handle that case correctly, it should be
    set regardless of the ACPI_FADT_LOW_POWER_S0 value.
    
    Accordingly, drop the ACPI_FADT_LOW_POWER_S0 check from
    use_acpi_alarm_quirks().
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/12054246.O9o76ZdvQC@kreacher
    Stable-dep-of: 83ebb7b3036d ("rtc: cmos: Disable ACPI RTC event on removal")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e98a93c7500031cca43298c2e157056b9b7874b
Author: Fenghua Yu <fenghua.yu@intel.com>
Date:   Thu Nov 10 17:27:15 2022 -0800

    dmaengine: idxd: Fix crc_val field for completion record
    
    [ Upstream commit dc901d98b1fe6e52ab81cd3e0879379168e06daa ]
    
    The crc_val in the completion record should be 64 bits and not 32 bits.
    
    Fixes: 4ac823e9cd85 ("dmaengine: idxd: fix delta_rec and crc size field for completion record")
    Reported-by: Nirav N Shah <nirav.n.shah@intel.com>
    Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20221111012715.2031481-1-fenghua.yu@intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab53749c32db90eeb4495227c998d21dc07ad8c1
Author: Abdun Nihaal <abdun.nihaal@gmail.com>
Date:   Sat Oct 1 12:30:24 2022 +0530

    fs/ntfs3: Fix slab-out-of-bounds read in ntfs_trim_fs
    
    [ Upstream commit 557d19675a470bb0a98beccec38c5dc3735c20fa ]
    
    Syzbot reports an out of bound access in ntfs_trim_fs.
    The cause of this is using a loop termination condition that compares
    window index (iw) with wnd->nbits instead of wnd->nwnd, due to which the
    index used for wnd->free_bits exceeds the size of the array allocated.
    
    Fix the loop condition.
    
    Fixes: 3f3b442b5ad2 ("fs/ntfs3: Add bitmap")
    Link: https://syzkaller.appspot.com/bug?extid=b892240eac461e488d51
    Reported-by: syzbot+b892240eac461e488d51@syzkaller.appspotmail.com
    Signed-off-by: Abdun Nihaal <abdun.nihaal@gmail.com>
    Signed-off-by: Konstantin Komarov <almaz.alexandrovich@paragon-software.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba0968b3341ad77062e5f2a0d5bd33279014372
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Fri Oct 28 13:33:55 2022 +0100

    pwm: tegra: Improve required rate calculation
    
    [ Upstream commit f271946117dde2ca8741b8138b347b2d68e6ad56 ]
    
    For the case where dev_pm_opp_set_rate() is called to set the PWM clock
    rate, the requested rate is calculated as ...
    
     required_clk_rate = (NSEC_PER_SEC / period_ns) << PWM_DUTY_WIDTH;
    
    The above calculation may lead to rounding errors because the
    NSEC_PER_SEC is divided by 'period_ns' before applying the
    PWM_DUTY_WIDTH multiplication factor. For example, if the period is
    45334ns, the above calculation yields a rate of 5646848Hz instead of
    5646976Hz. Fix this by applying the multiplication factor before
    dividing and using the DIV_ROUND_UP macro which yields the expected
    result of 5646976Hz.
    
    Fixes: 1d7796bdb63a ("pwm: tegra: Support dynamic clock frequency configuration")
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Reviewed-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c160505c9b574b346031fdf2c649d19e7939ca11
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Sep 27 14:52:56 2022 -0700

    include/uapi/linux/swab: Fix potentially missing __always_inline
    
    [ Upstream commit defbab270d45e32b068e7e73c3567232d745c60f ]
    
    Commit bc27fb68aaad ("include/uapi/linux/byteorder, swab: force inlining
    of some byteswap operations") added __always_inline to swab functions
    and commit 283d75737837 ("uapi/linux/stddef.h: Provide __always_inline to
    userspace headers") added a definition of __always_inline for use in
    exported headers when the kernel's compiler.h is not available.
    
    However, since swab.h does not include stddef.h, if the header soup does
    not indirectly include it, the definition of __always_inline is missing,
    resulting in a compilation failure, which was observed compiling the
    perf tool using exported headers containing this commit:
    
    In file included from /usr/include/linux/byteorder/little_endian.h:12:0,
                     from /usr/include/asm/byteorder.h:14,
                     from tools/include/uapi/linux/perf_event.h:20,
                     from perf.h:8,
                     from builtin-bench.c:18:
    /usr/include/linux/swab.h:160:8: error: unknown type name `__always_inline'
     static __always_inline __u16 __swab16p(const __u16 *p)
    
    Fix this by replacing the inclusion of linux/compiler.h with
    linux/stddef.h to ensure that we pick up that definition if required,
    without relying on it's indirect inclusion. compiler.h is then included
    indirectly, via stddef.h.
    
    Fixes: 283d75737837 ("uapi/linux/stddef.h: Provide __always_inline to userspace headers")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Petr Vaněk <arkamar@atlas.cz>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59463193b0dc0c67029f5d8a13f14cd02aad5f55
Author: Al Cooper <alcooperx@gmail.com>
Date:   Wed Oct 5 14:30:14 2022 -0700

    phy: usb: s2 WoL wakeup_count not incremented for USB->Eth devices
    
    [ Upstream commit f7fc5b7090372fc4dd7798c874635ca41b8ba733 ]
    
    The PHY's "wakeup_count" is not incrementing when waking from
    WoL. The wakeup count can be found in sysfs at:
    /sys/bus/platform/devices/rdb/*.usb-phy/power/wakeup_count.
    The problem is that the system wakup event handler was being passed
    the wrong "device" by the PHY driver.
    
    Fixes: f1c0db40a3ad ("phy: usb: Add "wake on" functionality")
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Signed-off-by: Justin Chen <justinpopo6@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/1665005418-15807-3-git-send-email-justinpopo6@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae00848e5569801300ee36f63dd8276e26346625
Author: Michael Riesch <michael.riesch@wolfvision.net>
Date:   Wed Nov 2 07:35:53 2022 +0100

    iommu/rockchip: fix permission bits in page table entries v2
    
    [ Upstream commit 7eb99841f340b80be0d0973b0deb592d75fb8928 ]
    
    As pointed out in the corresponding downstream fix [0], the permission bits
    of the page table entries are compatible between v1 and v2 of the IOMMU.
    This is in contrast to the current mainline code that incorrectly assumes
    that the read and write permission bits are switched. Fix the permission
    bits by reusing the v1 bit defines.
    
    [0] https://github.com/rockchip-linux/kernel/commit/e3bc123a2260145e34b57454da3db0edd117eb8e
    
    Fixes: c55356c534aa ("iommu: rockchip: Add support for iommu v2")
    Signed-off-by: Michael Riesch <michael.riesch@wolfvision.net>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://lore.kernel.org/r/20221102063553.2464161-1-michael.riesch@wolfvision.net
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7f6ad2c4251dcd55b0b851306afb61668513ccd
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Tue Oct 25 18:54:14 2022 +0200

    iommu/sun50i: Fix flush size
    
    [ Upstream commit 67a8a67f9eceb72e4c73d1d09ed9ab04f4b8e12d ]
    
    Function sun50i_table_flush() takes number of entries as an argument,
    not number of bytes. Fix that mistake in sun50i_dte_get_page_table().
    
    Fixes: 4100b8c229b3 ("iommu: Add Allwinner H6 IOMMU driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20221025165415.307591-5-jernej.skrabec@gmail.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38ccb9b469c2a1ae0b06bf5c703139fb0d49ff33
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Tue Oct 25 18:54:13 2022 +0200

    iommu/sun50i: Fix R/W permission check
    
    [ Upstream commit eac0104dc69be50bed86926d6f32e82b44f8c921 ]
    
    Because driver has enum type permissions and iommu subsystem has bitmap
    type, we have to be careful how check for combined read and write
    permissions is done. In such case, we have to mask both permissions and
    check that both are set at the same time.
    
    Current code just masks both flags but doesn't check that both are set.
    In short, it always sets R/W permission, regardles if requested
    permissions were RO, WO or RW. Fix that.
    
    Fixes: 4100b8c229b3 ("iommu: Add Allwinner H6 IOMMU driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20221025165415.307591-4-jernej.skrabec@gmail.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae4ab47a0bcd5657d31770ee41ec210b8c022fbd
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Tue Oct 25 18:54:12 2022 +0200

    iommu/sun50i: Consider all fault sources for reset
    
    [ Upstream commit cef20703e2b2276aaa402ec5a65ec9a09963b83e ]
    
    We have to reset masters for all faults - permissions, L1 fault or L2
    fault. Currently it's done only for permissions. If other type of fault
    happens, master is in locked up state. Fix that by really considering
    all fault sources.
    
    Fixes: 4100b8c229b3 ("iommu: Add Allwinner H6 IOMMU driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20221025165415.307591-3-jernej.skrabec@gmail.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84fee3ce8216da840ffc806062be81080ae58589
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Tue Oct 25 18:54:11 2022 +0200

    iommu/sun50i: Fix reset release
    
    [ Upstream commit 9ad0c1252e84dbc664f0462707182245ed603237 ]
    
    Reset signal is asserted by writing 0 to the corresponding locations of
    masters we want to reset. So in order to deassert all reset signals, we
    should write 1's to all locations.
    
    Current code writes 1's to locations of masters which were just reset
    which is good. However, at the same time it also writes 0's to other
    locations and thus asserts reset signals of remaining masters. Fix code
    by writing all 1's when we want to deassert all reset signals.
    
    This bug was discovered when working with Cedrus (video decoder). When
    it faulted, display went blank due to reset signal assertion.
    
    Fixes: 4100b8c229b3 ("iommu: Add Allwinner H6 IOMMU driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20221025165415.307591-2-jernej.skrabec@gmail.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f9fe31a48238c2d93f93a14ac6f8d31a543d2e7
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Sep 12 18:08:51 2022 +0300

    fs/ntfs3: Harden against integer overflows
    
    [ Upstream commit e001e60869390686809663c02bceb1d3922548fb ]
    
    Smatch complains that the "add_bytes" is not to be trusted.  Use
    size_add() to prevent an integer overflow.
    
    Fixes: be71b5cba2e6 ("fs/ntfs3: Add attrib operations")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Konstantin Komarov <almaz.alexandrovich@paragon-software.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30f20ceb87f78a14645acd7996397af7fee6e518
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Sep 18 15:17:53 2021 -0700

    overflow: Implement size_t saturating arithmetic helpers
    
    [ Upstream commit e1be43d9b5d0d1310dbd90185a8e5c7145dde40f ]
    
    In order to perform more open-coded replacements of common allocation
    size arithmetic, the kernel needs saturating (SIZE_MAX) helpers for
    multiplication, addition, and subtraction. For example, it is common in
    allocators, especially on realloc, to add to an existing size:
    
        p = krealloc(map->patch,
                     sizeof(struct reg_sequence) * (map->patch_regs + num_regs),
                     GFP_KERNEL);
    
    There is no existing saturating replacement for this calculation, and
    just leaving the addition open coded inside array_size() could
    potentially overflow as well. For example, an overflow in an expression
    for a size_t argument might wrap to zero:
    
        array_size(anything, something_at_size_max + 1) == 0
    
    Introduce size_mul(), size_add(), and size_sub() helpers that
    implicitly promote arguments to size_t and saturated calculations for
    use in allocations. With these helpers it is also possible to redefine
    array_size(), array3_size(), flex_array_size(), and struct_size() in
    terms of the new helpers.
    
    As with the check_*_overflow() helpers, the new helpers use __must_check,
    though what is really desired is a way to make sure that assignment is
    only to a size_t lvalue. Without this, it's still possible to introduce
    overflow/underflow via type conversion (i.e. from size_t to int).
    Enforcing this will currently need to be left to static analysis or
    future use of -Wconversion.
    
    Additionally update the overflow unit tests to force runtime evaluation
    for the pathological cases.
    
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Gustavo A. R. Silva <gustavoars@kernel.org>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Jason Gunthorpe <jgg@ziepe.ca>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Leon Romanovsky <leon@kernel.org>
    Cc: Keith Busch <kbusch@kernel.org>
    Cc: Len Baker <len.baker@gmx.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Stable-dep-of: e001e6086939 ("fs/ntfs3: Harden against integer overflows")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b51f27d4448c84957bce190292f75d4896d56b3
Author: Shigeru Yoshida <syoshida@redhat.com>
Date:   Tue Aug 23 23:46:25 2022 +0900

    fs/ntfs3: Avoid UBSAN error on true_sectors_per_clst()
    
    [ Upstream commit caad9dd8792a2622737b7273cb34835fd9536cd2 ]
    
    syzbot reported UBSAN error as below:
    
    [   76.901829][ T6677] ================================================================================
    [   76.903908][ T6677] UBSAN: shift-out-of-bounds in fs/ntfs3/super.c:675:13
    [   76.905363][ T6677] shift exponent -247 is negative
    
    This patch avoid this error.
    
    Link: https://syzkaller.appspot.com/bug?id=b0299c09a14aababf0f1c862dd4ebc8ab9eb0179
    Fixes: a3b774342fa7 (fs/ntfs3: validate BOOT sectors_per_clusters)
    Cc: Author: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: syzbot+35b87c668935bb55e666@syzkaller.appspotmail.com
    Signed-off-by: Shigeru Yoshida <syoshida@redhat.com>
    Signed-off-by: Konstantin Komarov <almaz.alexandrovich@paragon-software.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28f345bec78513a6eb704a4e020ab2e97a41ad5c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 15 18:03:43 2022 +0100

    RDMA/siw: Fix pointer cast warning
    
    [ Upstream commit 5244ca88671a1981ceec09c5c8809f003e6a62aa ]
    
    The previous build fix left a remaining issue in configurations with
    64-bit dma_addr_t on 32-bit architectures:
    
    drivers/infiniband/sw/siw/siw_qp_tx.c: In function 'siw_get_pblpage':
    drivers/infiniband/sw/siw/siw_qp_tx.c:32:37: error: cast to pointer from integer of different size [-Werror=int-to-pointer-cast]
       32 |                 return virt_to_page((void *)paddr);
          |                                     ^
    
    Use the same double cast here that the driver uses elsewhere to convert
    between dma_addr_t and void*.
    
    Fixes: 0d1b756acf60 ("RDMA/siw: Pass a pointer to virt_to_page()")
    Link: https://lore.kernel.org/r/20221215170347.2612403-1-arnd@kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Bernard Metzler <bmt@zurich.ibm.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01d925e2a556dfb14aee10f9975d2929c76d25e4
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Mon Dec 12 15:08:20 2022 -0800

    perf stat: Do not delay the workload with --delay
    
    [ Upstream commit c587e77e100fa40eb6af10e00497c67acf493f33 ]
    
    The -D/--delay option is to delay the measure after the program starts.
    But the current code goes to sleep before starting the program so the
    program is delayed too.  This is not the intention, let's fix it.
    
    Before:
    
      $ time sudo ./perf stat -a -e cycles -D 3000 sleep 4
      Events disabled
      Events enabled
    
       Performance counter stats for 'system wide':
    
           4,326,949,337      cycles
    
             4.007494118 seconds time elapsed
    
      real  0m7.474s
      user  0m0.356s
      sys   0m0.120s
    
    It ran the workload for 4 seconds and gave the 3 second delay.  So it
    should skip the first 3 second and measure the last 1 second only.  But
    as you can see, it delays 3 seconds and ran the workload after that for
    4 seconds.  So the total time (real) was 7 seconds.
    
    After:
    
      $ time sudo ./perf stat -a -e cycles -D 3000 sleep 4
      Events disabled
      Events enabled
    
       Performance counter stats for 'system wide':
    
           1,063,551,013      cycles
    
             1.002769510 seconds time elapsed
    
      real  0m4.484s
      user  0m0.385s
      sys   0m0.086s
    
    The bug was introduced when it changed enablement of system-wide events
    with a command line workload.  But it should've considered the initial
    delay case.  The code was reworked since then (in bb8bc52e7578) so I'm
    afraid it won't be applied cleanly.
    
    Fixes: d0a0a511493d2695 ("perf stat: Fix forked applications enablement of counters")
    Reported-by: Kevin Nomura <nomurak@google.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Tested-by: Thomas Richter <tmricht@linux.ibm.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Link: https://lore.kernel.org/r/20221212230820.901382-1-namhyung@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a273f1dd5d97092e564e49de37eefe37223b4218
Author: Adrián Herrera Arcila <adrian.herrera@arm.com>
Date:   Fri Jul 29 16:12:43 2022 +0000

    perf stat: Refactor __run_perf_stat() common code
    
    [ Upstream commit bb8bc52e75785af94b9ba079277547d50d018a52 ]
    
    This extracts common code from the branches of the forks if-then-else.
    
    enable_counters(), which was at the beginning of both branches of the
    conditional, is now unconditional; evlist__start_workload() is extracted
    to a different if, which enables making the common clocking code
    unconditional.
    
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Adrián Herrera Arcila <adrian.herrera@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: James Clark <james.clark@arm.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/r/20220729161244.10522-1-adrian.herrera@arm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Stable-dep-of: c587e77e100f ("perf stat: Do not delay the workload with --delay")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d21534ab4fd7883e1c8037a76671d4e8b6ea14cb
Author: ruanjinjie <ruanjinjie@huawei.com>
Date:   Mon Dec 5 15:51:53 2022 +0800

    power: supply: fix null pointer dereferencing in power_supply_get_battery_info
    
    [ Upstream commit 104bb8a663451404a26331263ce5b96c34504049 ]
    
    when kmalloc() fail to allocate memory in kasprintf(), propname
    will be NULL, strcmp() called by of_get_property() will cause
    null pointer dereference.
    
    So return ENOMEM if kasprintf() return NULL pointer.
    
    Fixes: 3afb50d7125b ("power: supply: core: Add some helpers to use the battery OCV capacity table")
    Signed-off-by: ruanjinjie <ruanjinjie@huawei.com>
    Reviewed-by: Baolin Wang <baolin.wang@linux.alibaba.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4898d8de620a356fe549ccca47892dc1cc7ab9b
Author: Yuan Can <yuancan@huawei.com>
Date:   Thu Nov 24 03:19:32 2022 +0000

    power: supply: ab8500: Fix error handling in ab8500_charger_init()
    
    [ Upstream commit c4d33381b134da188ccd1084aef21e2b8c3c422e ]
    
    The ab8500_charger_init() returns the platform_driver_register() directly
    without checking its return value, if platform_driver_register() failed,
    all ab8500_charger_component_drivers are not unregistered.
    
    Fix by unregister ab8500_charger_component_drivers when
    platform_driver_register() failed.
    
    Fixes: 1c1f13a006ed ("power: supply: ab8500: Move to componentized binding")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30b191798fda0ceea524c33761c83516e804b119
Author: Yuan Can <yuancan@huawei.com>
Date:   Thu Nov 24 11:33:32 2022 +0000

    HSI: omap_ssi_core: Fix error handling in ssi_init()
    
    [ Upstream commit 3ffa9f713c39a213a08d9ff13ab983a8aa5d8b5d ]
    
    The ssi_init() returns the platform_driver_register() directly without
    checking its return value, if platform_driver_register() failed, the
    ssi_pdriver is not unregistered.
    Fix by unregister ssi_pdriver when the last platform_driver_register()
    failed.
    
    Fixes: 0fae198988b8 ("HSI: omap_ssi: built omap_ssi and omap_ssi_port into one module")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a72fe8eb5555d6e80e252edeb4490f46675a0ea5
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Mon Nov 21 09:18:31 2022 +0800

    power: supply: z2_battery: Fix possible memleak in z2_batt_probe()
    
    [ Upstream commit 955bee204f3dd307642c101b75e370662987e735 ]
    
    If devm_gpiod_get_optional() returns error, the charger should be
    freed before z2_batt_probe returns according to the context. We
    fix it by just gotoing to 'err' branch.
    
    Fixes: a3b4388ea19b ("power: supply: z2_battery: Convert to GPIO descriptors")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ba0e8fa150c414f2d0e59908b6f9b37a3a77edb
Author: Ajay Kaher <akaher@vmware.com>
Date:   Wed Nov 23 15:48:16 2022 +0530

    perf symbol: correction while adjusting symbol
    
    [ Upstream commit 6f520ce17920b3cdfbd2479b3ccf27f9706219d0 ]
    
    perf doesn't provide proper symbol information for specially crafted
    .debug files.
    
    Sometimes .debug file may not have similar program header as runtime
    ELF file. For example if we generate .debug file using objcopy
    --only-keep-debug resulting file will not contain .text, .data and
    other runtime sections. That means corresponding program headers will
    have zero FileSiz and modified Offset.
    
    Example: program header of text section of libxxx.so:
    
    Type           Offset             VirtAddr           PhysAddr
                   FileSiz            MemSiz              Flags  Align
    LOAD        0x00000000003d3000 0x00000000003d3000 0x00000000003d3000
                0x000000000055ae80 0x000000000055ae80  R E    0x1000
    
    Same program header after executing:
    objcopy --only-keep-debug libxxx.so libxxx.so.debug
    
    LOAD        0x0000000000001000 0x00000000003d3000 0x00000000003d3000
                0x0000000000000000 0x000000000055ae80  R E    0x1000
    
    Offset and FileSiz have been changed.
    
    Following formula will not provide correct value, if program header
    taken from .debug file (syms_ss):
    
        sym.st_value -= phdr.p_vaddr - phdr.p_offset;
    
    Correct program header information is located inside runtime ELF
    file (runtime_ss).
    
    Fixes: 2d86612aacb7805f ("perf symbol: Correct address for bss symbols")
    Signed-off-by: Ajay Kaher <akaher@vmware.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Makhalov <amakhalov@vmware.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Leo Yan <leo.yan@linaro.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Srivatsa S. Bhat <srivatsab@vmware.com>
    Cc: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Vasavi Sirnapalli <vsirnapalli@vmware.com>
    Link: http://lore.kernel.org/lkml/1669198696-50547-1-git-send-email-akaher@vmware.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a34027b63d8c47d529ba18f010d312fad9393f74
Author: Leo Yan <leo.yan@linaro.org>
Date:   Mon Nov 21 07:52:35 2022 +0000

    perf trace: Handle failure when trace point folder is missed
    
    [ Upstream commit 03e9a5d8eb552a1bf692a9c8a5ecd50f4e428006 ]
    
    On Arm64 a case is perf tools fails to find the corresponding trace
    point folder for system calls listed in the table 'syscalltbl_arm64',
    e.g. the generated system call table contains "lookup_dcookie" but we
    cannot find out the matched trace point folder for it.
    
    We need to figure out if there have any issue for the generated system
    call table, on the other hand, we need to handle the case when trace
    point folder is missed under sysfs, this patch sets the flag
    syscall::nonexistent as true and returns the error from
    trace__read_syscall_info().
    
    Another problem is for trace__syscall_info(), it returns two different
    values if a system call doesn't exist: at the first time calling
    trace__syscall_info() it returns NULL when the system call doesn't exist,
    later if call trace__syscall_info() again for the same missed system
    call, it returns pointer of syscall.  trace__syscall_info() checks the
    condition 'syscalls.table[id].name == NULL', but the name will be
    assigned in the first invoking even the system call is not found.
    
    So checking system call's name in trace__syscall_info() is not the right
    thing to do, this patch simply checks flag syscall::nonexistent to make
    decision if a system call exists or not, finally trace__syscall_info()
    returns the consistent result (NULL) if a system call doesn't existed.
    
    Fixes: b8b1033fcaa091d8 ("perf trace: Mark syscall ids that are not allocated to avoid unnecessary error messages")
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Ian Rogers <irogers@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: bpf@vger.kernel.org
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20221121075237.127706-4-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60aeacce64a97e5c56c8310b4abf21f4c5e00990
Author: Leo Yan <leo.yan@linaro.org>
Date:   Mon Nov 21 07:52:33 2022 +0000

    perf trace: Use macro RAW_SYSCALL_ARGS_NUM to replace number
    
    [ Upstream commit eadcab4c7a66e1df03d32da0db55d89fd9343fcc ]
    
    This patch defines a macro RAW_SYSCALL_ARGS_NUM to replace the open
    coded number '6'.
    
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Ian Rogers <irogers@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: bpf@vger.kernel.org
    Link: https://lore.kernel.org/r/20221121075237.127706-2-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Stable-dep-of: 03e9a5d8eb55 ("perf trace: Handle failure when trace point folder is missed")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4700f62dc830184f114378fb5c2bfbe6a4a96cb
Author: Leo Yan <leo.yan@linaro.org>
Date:   Mon Nov 21 07:52:34 2022 +0000

    perf trace: Return error if a system call doesn't exist
    
    [ Upstream commit d4223e1776c30b2ce8d0e6eaadcbf696e60fca3c ]
    
    When a system call is not detected, the reason is either because the
    system call ID is out of scope or failure to find the corresponding path
    in the sysfs, trace__read_syscall_info() returns zero.  Finally, without
    returning an error value it introduces confusion for the caller.
    
    This patch lets the function trace__read_syscall_info() to return
    -EEXIST when a system call doesn't exist.
    
    Fixes: b8b1033fcaa091d8 ("perf trace: Mark syscall ids that are not allocated to avoid unnecessary error messages")
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Ian Rogers <irogers@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: bpf@vger.kernel.org
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20221121075237.127706-3-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 870ad0917d837eff84de479a5e2596a9b43329ea
Author: Zeng Heng <zengheng4@huawei.com>
Date:   Thu Nov 17 16:32:19 2022 +0800

    power: supply: fix residue sysfs file in error handle route of __power_supply_register()
    
    [ Upstream commit 5b79480ce1978864ac3f06f2134dfa3b6691fe74 ]
    
    If device_add() succeeds, we should call device_del() when want to
    get rid of it, so move it into proper jump symbol.
    
    Otherwise, when __power_supply_register() returns fail and goto
    wakeup_init_failed to exit, there is still residue device file in sysfs.
    When attempt to probe device again, sysfs would complain as below:
    
    sysfs: cannot create duplicate filename '/devices/platform/i2c/i2c-0/0-001c/power_supply/adp5061'
    Call Trace:
     dump_stack_lvl+0x68/0x85
     sysfs_warn_dup.cold+0x1c/0x29
     sysfs_create_dir_ns+0x1b1/0x1d0
     kobject_add_internal+0x143/0x390
     kobject_add+0x108/0x170
    
    Fixes: 80c6463e2fa3 ("power_supply: Fix Oops from NULL pointer dereference from wakeup_source_activate")
    Signed-off-by: Zeng Heng <zengheng4@huawei.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c2b9c810076cb01beed8cf26b432239392b8c71
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Oct 31 15:43:37 2022 +0800

    HSI: omap_ssi_core: fix possible memory leak in ssi_probe()
    
    [ Upstream commit 1aff514e1d2bd47854dbbdf867970b9d463d4c57 ]
    
    If ssi_add_controller() returns error, it should call hsi_put_controller()
    to give up the reference that was set in hsi_alloc_controller(), so that
    it can call hsi_controller_release() to free controller and ports that
    allocated in hsi_alloc_controller().
    
    Fixes: b209e047bc74 ("HSI: Introduce OMAP SSI driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5f729d3d61d94335295bc53aa18d1c936844c09
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 11:41:18 2022 +0800

    HSI: omap_ssi_core: fix unbalanced pm_runtime_disable()
    
    [ Upstream commit f5181c35ed7ba0ceb6e42872aad1334d994b0175 ]
    
    In error label 'out1' path in ssi_probe(), the pm_runtime_enable()
    has not been called yet, so pm_runtime_disable() is not needed.
    
    Fixes: b209e047bc74 ("HSI: Introduce OMAP SSI driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea37831f8332a486bc05df44e24e58fb5f6995e9
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Dec 10 12:35:22 2022 +0100

    fbdev: uvesafb: Fixes an error handling path in uvesafb_probe()
    
    [ Upstream commit a94371040712031ba129c7e9d8ff04a06a2f8207 ]
    
    If an error occurs after a successful uvesafb_init_mtrr() call, it must be
    undone by a corresponding arch_phys_wc_del() call, as already done in the
    remove function.
    
    This has been added in the remove function in commit 63e28a7a5ffc
    ("uvesafb: Clean up MTRR code")
    
    Fixes: 8bdb3a2d7df4 ("uvesafb: the driver core")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bcae36b58f66e77d2753491c44c526ada6afee7
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Nov 30 13:55:59 2022 -0800

    fbdev: uvesafb: don't build on UML
    
    [ Upstream commit 35b4f4d4a725cf8f8c10649163cd12aed509b953 ]
    
    The uvesafb fbdev driver uses memory management information that is not
    available on ARCH=um, so don't allow this driver to be built on UML.
    
    Prevents these build errors:
    
    ../drivers/video/fbdev/uvesafb.c: In function ‘uvesafb_vbe_init’:
    ../drivers/video/fbdev/uvesafb.c:807:21: error: ‘__supported_pte_mask’ undeclared (first use in this function)
      807 |                 if (__supported_pte_mask & _PAGE_NX) {
    ../drivers/video/fbdev/uvesafb.c:807:44: error: ‘_PAGE_NX’ undeclared (first use in this function)
      807 |                 if (__supported_pte_mask & _PAGE_NX) {
    
    Fixes: 68f5d3f3b654 ("um: add PCI over virtio emulation driver")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Johannes Berg <johannes@sipsolutions.net>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: linux-um@lists.infradead.org
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Helge Deller <deller@gmx.de>
    Cc: linux-fbdev@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: Michal Januszewski <spock@gentoo.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07c1a3c2df5e04ed43665e80c6d08cfaf34bc6fd
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Nov 30 13:55:44 2022 -0800

    fbdev: geode: don't build on UML
    
    [ Upstream commit 71c53e19226b0166ba387d3c590d0509f541a0a1 ]
    
    The geode fbdev driver uses struct cpuinfo fields that are not present
    on ARCH=um, so don't allow this driver to be built on UML.
    
    Prevents these build errors:
    
    In file included from ../arch/x86/include/asm/olpc.h:7:0,
                     from ../drivers/mfd/cs5535-mfd.c:17:
    ../arch/x86/include/asm/geode.h: In function ‘is_geode_gx’:
    ../arch/x86/include/asm/geode.h:16:24: error: ‘struct cpuinfo_um’ has no member named ‘x86_vendor’
      return ((boot_cpu_data.x86_vendor == X86_VENDOR_NSC) &&
    ../arch/x86/include/asm/geode.h:16:39: error: ‘X86_VENDOR_NSC’ undeclared (first use in this function); did you mean ‘X86_VENDOR_ANY’?
      return ((boot_cpu_data.x86_vendor == X86_VENDOR_NSC) &&
    ../arch/x86/include/asm/geode.h:17:17: error: ‘struct cpuinfo_um’ has no member named ‘x86’
       (boot_cpu_data.x86 == 5) &&
    ../arch/x86/include/asm/geode.h:18:17: error: ‘struct cpuinfo_um’ has no member named ‘x86_model’
       (boot_cpu_data.x86_model == 5));
    ../arch/x86/include/asm/geode.h: In function ‘is_geode_lx’:
    ../arch/x86/include/asm/geode.h:23:24: error: ‘struct cpuinfo_um’ has no member named ‘x86_vendor’
      return ((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
    ../arch/x86/include/asm/geode.h:23:39: error: ‘X86_VENDOR_AMD’ undeclared (first use in this function); did you mean ‘X86_VENDOR_ANY’?
      return ((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
    ../arch/x86/include/asm/geode.h:24:17: error: ‘struct cpuinfo_um’ has no member named ‘x86’
       (boot_cpu_data.x86 == 5) &&
    ../arch/x86/include/asm/geode.h:25:17: error: ‘struct cpuinfo_um’ has no member named ‘x86_model’
       (boot_cpu_data.x86_model == 10));
    
    Fixes: 68f5d3f3b654 ("um: add PCI over virtio emulation driver")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Johannes Berg <johannes@sipsolutions.net>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: linux-um@lists.infradead.org
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Helge Deller <deller@gmx.de>
    Cc: linux-fbdev@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: Andres Salomon <dilinger@queued.net>
    Cc: linux-geode@lists.infradead.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ace8312b5d7dcf770c2a2e67b38c1cf9248e77cc
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Wed Nov 23 17:29:43 2022 +0800

    fbdev: ep93xx-fb: Add missing clk_disable_unprepare in ep93xxfb_probe()
    
    [ Upstream commit c84bf485a5aaf9aa0764a58832b7ef4375c29f03 ]
    
    The clk_disable_unprepare() should be called in the error handling
    of register_framebuffer(), fix it.
    
    Fixes: 0937a7b3625d ("video: ep93xx: Prepare clock before using it")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04946113fb578b7c570cca2e9db5dd58fb2926f0
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Mon Nov 14 16:56:54 2022 +0800

    fbdev: vermilion: decrease reference count in error path
    
    [ Upstream commit 001f2cdb952a9566c77fb4b5470cc361db5601bb ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev. For the error path, we need to use pci_dev_put() to decrease
    the reference count.
    
    Fixes: dbe7e429fedb ("vmlfb: framebuffer driver for Intel Vermilion Range")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc0d5034fa9bd5778d81cb6fd942cc0b5435bbd9
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Mon Nov 14 09:08:52 2022 +0800

    fbdev: via: Fix error in via_core_init()
    
    [ Upstream commit 5886b130de953cfb8826f7771ec8640a79934a7f ]
    
    via_core_init() won't exit the driver when pci_register_driver() failed.
    Exit the viafb-i2c and the viafb-gpio in failed path to prevent error.
    
    VIA Graphics Integration Chipset framebuffer 2.4 initializing
    Error: Driver 'viafb-i2c' is already registered, aborting...
    Error: Driver 'viafb-gpio' is already registered, aborting...
    
    Fixes: 7582eb9be85f ("viafb: Turn GPIO and i2c into proper platform devices")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98272463338cddd752030d59f6aed4e791a56b2e
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Nov 12 17:55:10 2022 +0800

    fbdev: pm2fb: fix missing pci_disable_device()
    
    [ Upstream commit ed359a464846b48f76ea6cc5cd8257e545ac97f4 ]
    
    Add missing pci_disable_device() in error path of probe() and remove() path.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3aa4205134ac6893e9f3464a06e846ab444a28c2
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Nov 1 17:09:46 2022 +0200

    fbdev: ssd1307fb: Drop optional dependency
    
    [ Upstream commit 025e3b507a3a8e1ee96a3112bb67495c77d6cdb6 ]
    
    Only a single out of three devices need a PWM, so from driver it's
    optional. Moreover it's a single driver in the entire kernel that
    currently selects PWM. Unfortunately this selection is a root cause
    of the circular dependencies when we want to enable optional PWM
    for some other drivers that select GPIOLIB.
    
    Fixes: a2ed00da5047 ("drivers/video: add support for the Solomon SSD1307 OLED Controller")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4958316a6d194df09d192f1d187f1a4042e4bebf
Author: Bjorn Andersson <andersson@kernel.org>
Date:   Wed Mar 16 11:03:22 2022 -0700

    thermal/drivers/qcom/lmh: Fix irq handler return value
    
    [ Upstream commit 46a891e45be97c6781ac34f5ec777d69370e252b ]
    
    After enough invocations the LMh irq is eventually reported as bad, because the
    handler doesn't return IRQ_HANDLED, fix this.
    
    Fixes: 53bca371cdf7 ("thermal/drivers/qcom: Add support for LMh driver")
    Reported-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20220316180322.88132-1-bjorn.andersson@linaro.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad72205ac6d2c0b0c66713f2afce22ccdd775c36
Author: Luca Weiss <luca.weiss@fairphone.com>
Date:   Thu Oct 20 16:52:37 2022 +0200

    thermal/drivers/qcom/temp-alarm: Fix inaccurate warning for gen2
    
    [ Upstream commit 8763f8acbf8aef22a2321d4c978cd078aa3b8f64 ]
    
    On gen2 chips the stage2 threshold is not 140 degC but 125 degC.
    
    Make the warning message clearer by using this variable and also by
    including the temperature that was checked for.
    
    Fixes: aa92b3310c55 ("thermal/drivers/qcom-spmi-temp-alarm: Add support for GEN2 rev 1 PMIC peripherals")
    Signed-off-by: Luca Weiss <luca.weiss@fairphone.com>
    Reviewed-by: Amit Kucheria <amitk@kernel.org>
    Link: https://lore.kernel.org/r/20221020145237.942146-1-luca.weiss@fairphone.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37fb4e13d221a281179cf2732dba7c4a212c4911
Author: Marcus Folkesson <marcus.folkesson@gmail.com>
Date:   Fri Oct 14 09:35:07 2022 +0200

    thermal/drivers/imx8mm_thermal: Validate temperature range
    
    [ Upstream commit d37edc7370273306d8747097fafa62436c1cfe16 ]
    
    Check against the upper temperature limit (125 degrees C) before
    consider the temperature valid.
    
    Fixes: 5eed800a6811 ("thermal: imx8mm: Add support for i.MX8MM thermal monitoring unit")
    Signed-off-by: Marcus Folkesson <marcus.folkesson@gmail.com>
    Reviewed-by: Jacky Bai <ping.bai@nxp.com>
    Link: https://lore.kernel.org/r/20221014073507.1594844-1-marcus.folkesson@gmail.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95c18f4a3c99a7cab5273edd2798f70f6e107665
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Thu Dec 8 09:33:41 2022 +0800

    samples: vfio-mdev: Fix missing pci_disable_device() in mdpy_fb_probe()
    
    [ Upstream commit d1f0f50fbbbbca1e3e8157e51934613bf88f6d44 ]
    
    Add missing pci_disable_device() in fail path of mdpy_fb_probe().
    Besides, fix missing release functions in mdpy_fb_remove().
    
    Fixes: cacade1946a4 ("sample: vfio mdev display - guest driver")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Link: https://lore.kernel.org/r/20221208013341.3999-1-shangxiaojing@huawei.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31c1b5d3000cdff70b98d5af045271e09079bec1
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Wed Nov 16 20:22:37 2022 +0800

    ksmbd: Fix resource leak in ksmbd_session_rpc_open()
    
    [ Upstream commit bc044414fa0326a4e5c3c509c00b1fcaf621b5f4 ]
    
    When ksmbd_rpc_open() fails then it must call ksmbd_rpc_id_free() to
    undo the result of ksmbd_ipc_id_alloc().
    
    Fixes: e2f34481b24d ("cifsd: add server-side procedures for SMB3")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Acked-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a44102d36a7a23c909e2d2c7dc1574c059ff78e1
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Wed Dec 7 21:53:26 2022 +0800

    tracing/hist: Fix issue of losting command info in error_log
    
    [ Upstream commit 608c6ed3337850c767ab0dd6c583477922233e29 ]
    
    When input some constructed invalid 'trigger' command, command info
    in 'error_log' are lost [1].
    
    The root cause is that there is a path that event_hist_trigger_parse()
    is recursely called once and 'last_cmd' which save origin command is
    cleared, then later calling of hist_err() will no longer record origin
    command info:
    
      event_hist_trigger_parse() {
        last_cmd_set()  // <1> 'last_cmd' save origin command here at first
        create_actions() {
          onmatch_create() {
            action_create() {
              trace_action_create() {
                trace_action_create_field_var() {
                  create_field_var_hist() {
                    event_hist_trigger_parse() {  // <2> recursely called once
                      hist_err_clear()  // <3> 'last_cmd' is cleared here
                    }
                    hist_err()  // <4> No longer find origin command!!!
    
    Since 'glob' is empty string while running into the recurse call, we
    can trickly check it and bypass the call of hist_err_clear() to solve it.
    
    [1]
     # cd /sys/kernel/tracing
     # echo "my_synth_event int v1; int v2; int v3;" >> synthetic_events
     # echo 'hist:keys=pid' >> events/sched/sched_waking/trigger
     # echo "hist:keys=next_pid:onmatch(sched.sched_waking).my_synth_event(\
    pid,pid1)" >> events/sched/sched_switch/trigger
     # cat error_log
    [  8.405018] hist:sched:sched_switch: error: Couldn't find synthetic event
      Command:
    hist:keys=next_pid:onmatch(sched.sched_waking).my_synth_event(pid,pid1)
                                                              ^
    [  8.816902] hist:sched:sched_switch: error: Couldn't find field
      Command:
    hist:keys=next_pid:onmatch(sched.sched_waking).my_synth_event(pid,pid1)
                              ^
    [  8.816902] hist:sched:sched_switch: error: Couldn't parse field variable
      Command:
    hist:keys=next_pid:onmatch(sched.sched_waking).my_synth_event(pid,pid1)
                              ^
    [  8.999880] : error: Couldn't find field
      Command:
               ^
    [  8.999880] : error: Couldn't parse field variable
      Command:
               ^
    [  8.999880] : error: Couldn't find field
      Command:
               ^
    [  8.999880] : error: Couldn't create histogram for field
      Command:
               ^
    
    Link: https://lore.kernel.org/linux-trace-kernel/20221207135326.3483216-1-zhengyejian1@huawei.com
    
    Cc: <mhiramat@kernel.org>
    Cc: <zanussi@kernel.org>
    Fixes: f404da6e1d46 ("tracing: Add 'last error' error facility for hist triggers")
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8308ccfcbd2b6bb6736be190a50ef90316e40244
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Dec 8 19:00:58 2022 +0800

    usb: storage: Add check for kcalloc
    
    [ Upstream commit c35ca10f53c51eeb610d3f8fbc6dd6d511b58a58 ]
    
    As kcalloc may return NULL pointer, the return value should
    be checked and return error if fails as same as the ones in
    alauda_read_map.
    
    Fixes: e80b0fade09e ("[PATCH] USB Storage: add alauda support")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20221208110058.12983-1-jiasheng@iscas.ac.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96c12fd0ec74641295e1c3c34dea3dce1b6c3422
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Fri Jul 29 19:02:16 2022 +0800

    i2c: ismt: Fix an out-of-bounds bug in ismt_access()
    
    [ Upstream commit 39244cc754829bf707dccd12e2ce37510f5b1f8d ]
    
    When the driver does not check the data from the user, the variable
    'data->block[0]' may be very large to cause an out-of-bounds bug.
    
    The following log can reveal it:
    
    [   33.995542] i2c i2c-1: ioctl, cmd=0x720, arg=0x7ffcb3dc3a20
    [   33.995978] ismt_smbus 0000:00:05.0: I2C_SMBUS_BLOCK_DATA:  WRITE
    [   33.996475] ==================================================================
    [   33.996995] BUG: KASAN: out-of-bounds in ismt_access.cold+0x374/0x214b
    [   33.997473] Read of size 18446744073709551615 at addr ffff88810efcfdb1 by task ismt_poc/485
    [   33.999450] Call Trace:
    [   34.001849]  memcpy+0x20/0x60
    [   34.002077]  ismt_access.cold+0x374/0x214b
    [   34.003382]  __i2c_smbus_xfer+0x44f/0xfb0
    [   34.004007]  i2c_smbus_xfer+0x10a/0x390
    [   34.004291]  i2cdev_ioctl_smbus+0x2c8/0x710
    [   34.005196]  i2cdev_ioctl+0x5ec/0x74c
    
    Fix this bug by checking the size of 'data->block[0]' first.
    
    Fixes: 13f35ac14cd0 ("i2c: Adding support for Intel iSMT SMBus 2.0 host controller")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8212800943997fab61874550278d653cb378c60c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Oct 29 17:38:25 2022 +0800

    i2c: mux: reg: check return value after calling platform_get_resource()
    
    [ Upstream commit 2d47b79d2bd39cc6369eccf94a06568d84c906ae ]
    
    It will cause null-ptr-deref in resource_size(), if platform_get_resource()
    returns NULL, move calling resource_size() after devm_ioremap_resource() that
    will check 'res' to avoid null-ptr-deref.
    And use devm_platform_get_and_ioremap_resource() to simplify code.
    
    Fixes: b3fdd32799d8 ("i2c: mux: Add register-based mux i2c-mux-reg")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46d8f63bb815ca934604f91432d8b75e619d1afe
Author: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
Date:   Mon Dec 5 13:39:03 2022 +0100

    gpiolib: protect the GPIO device against being dropped while in use by user-space
    
    [ Upstream commit bdbbae241a04f387ba910b8609f95fad5f1470c7 ]
    
    While any of the GPIO cdev syscalls is in progress, the kernel can call
    gpiochip_remove() (for instance, when a USB GPIO expander is disconnected)
    which will set gdev->chip to NULL after which any subsequent access will
    cause a crash.
    
    To avoid that: use an RW-semaphore in which the syscalls take it for
    reading (so that we don't needlessly prohibit the user-space from calling
    syscalls simultaneously) while gpiochip_remove() takes it for writing so
    that it can only happen once all syscalls return.
    
    Fixes: d7c51b47ac11 ("gpio: userspace ABI for reading/writing GPIO lines")
    Fixes: 3c0d9c635ae2 ("gpiolib: cdev: support GPIO_V2_GET_LINE_IOCTL and GPIO_V2_LINE_GET_VALUES_IOCTL")
    Fixes: aad955842d1c ("gpiolib: cdev: support GPIO_V2_GET_LINEINFO_IOCTL and GPIO_V2_GET_LINEINFO_WATCH_IOCTL")
    Fixes: a54756cb24ea ("gpiolib: cdev: support GPIO_V2_LINE_SET_CONFIG_IOCTL")
    Fixes: 7b8e00d98168 ("gpiolib: cdev: support GPIO_V2_LINE_SET_VALUES_IOCTL")
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    [Nick: fixed a build failure with CDEV_V1 disabled]
    Co-authored-by: Nick Hainke <vincent@systemli.org>
    Reviewed-by: Kent Gibson <warthog618@gmail.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 333a271dfd6b91bbf9b620c86ee1dcec667b4566
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Tue Feb 8 11:48:31 2022 +0100

    gpiolib: make struct comments into real kernel docs
    
    [ Upstream commit 4398693a9e24bcab0b99ea219073917991d0792b ]
    
    We have several comments that start with '/**' but don't conform to the
    kernel doc standard. Add proper detailed descriptions for the affected
    definitions and move the docs from the forward declarations to the
    struct definitions where applicable.
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Stable-dep-of: bdbbae241a04 ("gpiolib: protect the GPIO device against being dropped while in use by user-space")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c755a2d6df511eeb5afba966ac28140f9ea5063
Author: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
Date:   Mon Dec 5 13:39:02 2022 +0100

    gpiolib: cdev: fix NULL-pointer dereferences
    
    [ Upstream commit 533aae7c94dbc2b14301cfd68ae7e0e90f0c8438 ]
    
    There are several places where we can crash the kernel by requesting
    lines, unbinding the GPIO device, then calling any of the system calls
    relevant to the GPIO character device's annonymous file descriptors:
    ioctl(), read(), poll().
    
    While I observed it with the GPIO simulator, it will also happen for any
    of the GPIO devices that can be hot-unplugged - for instance any HID GPIO
    expander (e.g. CP2112).
    
    This affects both v1 and v2 uAPI.
    
    This fixes it partially by checking if gdev->chip is not NULL but it
    doesn't entirely remedy the situation as we still have a race condition
    in which another thread can remove the device after the check.
    
    Fixes: d7c51b47ac11 ("gpio: userspace ABI for reading/writing GPIO lines")
    Fixes: 3c0d9c635ae2 ("gpiolib: cdev: support GPIO_V2_GET_LINE_IOCTL and GPIO_V2_LINE_GET_VALUES_IOCTL")
    Fixes: aad955842d1c ("gpiolib: cdev: support GPIO_V2_GET_LINEINFO_IOCTL and GPIO_V2_GET_LINEINFO_WATCH_IOCTL")
    Fixes: a54756cb24ea ("gpiolib: cdev: support GPIO_V2_LINE_SET_CONFIG_IOCTL")
    Fixes: 7b8e00d98168 ("gpiolib: cdev: support GPIO_V2_LINE_SET_VALUES_IOCTL")
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0a26e199964cf659aa8b4b990f3f6b840ce9def
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Mar 30 18:06:20 2022 +0300

    gpiolib: Get rid of redundant 'else'
    
    [ Upstream commit 1cef8b5019769d46725932eeace7a383bca97905 ]
    
    In the snippets like the following
    
            if (...)
                    return / goto / break / continue ...;
            else
                    ...
    
    the 'else' is redundant. Get rid of it. In case of IOCTLs use
    switch-case pattern that seems the usual in such cases.
    
    While at it, clarify necessity of else in gpiod_direction_output()
    by attaching else if to the closing curly brace on a previous line.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Stable-dep-of: 533aae7c94db ("gpiolib: cdev: fix NULL-pointer dereferences")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bc217b25ea81034fad8e33fd33e4659f086421d
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Mon Dec 5 16:48:05 2022 +0800

    vme: Fix error not catched in fake_init()
    
    [ Upstream commit 7bef797d707f1744f71156b21d41e3b8c946631f ]
    
    In fake_init(), __root_device_register() is possible to fail but it's
    ignored, which can cause unregistering vme_root fail when exit.
    
     general protection fault,
     probably for non-canonical address 0xdffffc000000008c
     KASAN: null-ptr-deref in range [0x0000000000000460-0x0000000000000467]
     RIP: 0010:root_device_unregister+0x26/0x60
     Call Trace:
      <TASK>
      __x64_sys_delete_module+0x34f/0x540
      do_syscall_64+0x38/0x90
      entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Return error when __root_device_register() fails.
    
    Fixes: 658bcdae9c67 ("vme: Adding Fake VME driver")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Link: https://lore.kernel.org/r/20221205084805.147436-1-chenzhongjin@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31bfe024a9570641147228f22a4e2a55698d6c7a
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Nov 23 16:12:53 2022 +0800

    staging: rtl8192e: Fix potential use-after-free in rtllib_rx_Monitor()
    
    [ Upstream commit d30f4436f364b4ad915ca2c09be07cd0f93ceb44 ]
    
    The skb is delivered to netif_rx() in rtllib_monitor_rx(), which may free it,
    after calling this, dereferencing skb may trigger use-after-free.
    Found by Smatch.
    
    Fixes: 94a799425eee ("From: wlanfae <wlanfae@realtek.com> [PATCH 1/8] rtl8192e: Import new version of driver from realtek")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Link: https://lore.kernel.org/r/20221123081253.22296-1-yuehaibing@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0aaec894a909c88117c8bda6c7c9b26cf7c744b
Author: Dan Carpenter <error27@gmail.com>
Date:   Wed Nov 23 09:43:14 2022 +0300

    staging: rtl8192u: Fix use after free in ieee80211_rx()
    
    [ Upstream commit bcc5e2dcf09089b337b76fc1a589f6ff95ca19ac ]
    
    We cannot dereference the "skb" pointer after calling
    ieee80211_monitor_rx(), because it is a use after free.
    
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Dan Carpenter <error27@gmail.com>
    Link: https://lore.kernel.org/r/Y33BArx3k/aw6yv/@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed4580c3f8e411d649484ca81fd07ca2bbdc2602
Author: Hui Tang <tanghui20@huawei.com>
Date:   Mon Nov 14 17:25:40 2022 +0800

    i2c: pxa-pci: fix missing pci_disable_device() on error in ce4100_i2c_probe
    
    [ Upstream commit d78a167332e1ca8113268ed922c1212fd71b73ad ]
    
    Using pcim_enable_device() to avoid missing pci_disable_device().
    
    Fixes: 7e94dd154e93 ("i2c-pxa2xx: Add PCI support for PXA I2C controller")
    Signed-off-by: Hui Tang <tanghui20@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28dc61cc49c6e995121c6d86bef4b73df78dda80
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Dec 2 11:02:37 2022 +0800

    chardev: fix error handling in cdev_device_add()
    
    [ Upstream commit 11fa7fefe3d8fac7da56bc9aa3dd5fb3081ca797 ]
    
    While doing fault injection test, I got the following report:
    
    ------------[ cut here ]------------
    kobject: '(null)' (0000000039956980): is not initialized, yet kobject_put() is being called.
    WARNING: CPU: 3 PID: 6306 at kobject_put+0x23d/0x4e0
    CPU: 3 PID: 6306 Comm: 283 Tainted: G        W          6.1.0-rc2-00005-g307c1086d7c9 #1253
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    RIP: 0010:kobject_put+0x23d/0x4e0
    Call Trace:
     <TASK>
     cdev_device_add+0x15e/0x1b0
     __iio_device_register+0x13b4/0x1af0 [industrialio]
     __devm_iio_device_register+0x22/0x90 [industrialio]
     max517_probe+0x3d8/0x6b4 [max517]
     i2c_device_probe+0xa81/0xc00
    
    When device_add() is injected fault and returns error, if dev->devt is not set,
    cdev_add() is not called, cdev_del() is not needed. Fix this by checking dev->devt
    in error path.
    
    Fixes: 233ed09d7fda ("chardev: add helper function to register char devs with a struct device")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221202030237.520280-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43bfc7c2402a22d3b4eb08c040f274ba2b76461a
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Dec 2 01:38:50 2022 -0800

    mcb: mcb-parse: fix error handing in chameleon_parse_gdd()
    
    [ Upstream commit 728ac3389296caf68638628c987aeae6c8851e2d ]
    
    If mcb_device_register() returns error in chameleon_parse_gdd(), the refcount
    of bus and device name are leaked. Fix this by calling put_device() to give up
    the reference, so they can be released in mcb_release_dev() and kobject_cleanup().
    
    Fixes: 3764e82e5150 ("drivers: Introduce MEN Chameleon Bus")
    Reviewed-by: Johannes Thumshirn <jth@kernel.org>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Johannes Thumshirn <jth@kernel.org>
    Link: https://lore.kernel.org/r/ebfb06e39b19272f0197fa9136b5e4b6f34ad732.1669624063.git.johannes.thumshirn@wdc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3686e5e8de0a03c8e70e3ee0ce3078fed612909
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Fri Dec 2 01:38:49 2022 -0800

    drivers: mcb: fix resource leak in mcb_probe()
    
    [ Upstream commit d7237462561fcd224fa687c56ccb68629f50fc0d ]
    
    When probe hook function failed in mcb_probe(), it doesn't put the device.
    Compiled test only.
    
    Fixes: 7bc364097a89 ("mcb: Acquire reference to device in probe")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Signed-off-by: Johannes Thumshirn <jth@kernel.org>
    Link: https://lore.kernel.org/r/9f87de36bfb85158b506cb78c6fc9db3f6a3bad1.1669624063.git.johannes.thumshirn@wdc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d4a0aca8a75550d3456c8de339a341dc4536ec5
Author: John Keeping <john@metanate.com>
Date:   Tue Nov 22 12:35:22 2022 +0000

    usb: gadget: f_hid: fix refcount leak on error path
    
    [ Upstream commit 70a3288a7586526315105c699b687d78cd32559a ]
    
    When failing to allocate report_desc, opts->refcnt has already been
    incremented so it needs to be decremented to avoid leaving the options
    structure permanently locked.
    
    Fixes: 21a9476a7ba8 ("usb: gadget: hid: add configfs support")
    Tested-by: Lee Jones <lee@kernel.org>
    Reviewed-by: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Reviewed-by: Lee Jones <lee@kernel.org>
    Signed-off-by: John Keeping <john@metanate.com>
    Link: https://lore.kernel.org/r/20221122123523.3068034-3-john@metanate.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3136b79705c2e3bba9c76adc5628af0215d798e
Author: John Keeping <john@metanate.com>
Date:   Tue Nov 22 12:35:21 2022 +0000

    usb: gadget: f_hid: fix f_hidg lifetime vs cdev
    
    [ Upstream commit 89ff3dfac604614287ad5aad9370c3f984ea3f4b ]
    
    The embedded struct cdev does not have its lifetime correctly tied to
    the enclosing struct f_hidg, so there is a use-after-free if /dev/hidgN
    is held open while the gadget is deleted.
    
    This can readily be replicated with libusbgx's example programs (for
    conciseness - operating directly via configfs is equivalent):
    
            gadget-hid
            exec 3<> /dev/hidg0
            gadget-vid-pid-remove
            exec 3<&-
    
    Pull the existing device up in to struct f_hidg and make use of the
    cdev_device_{add,del}() helpers.  This changes the lifetime of the
    device object to match struct f_hidg, but note that it is still added
    and deleted at the same time.
    
    Fixes: 71adf1189469 ("USB: gadget: add HID gadget driver")
    Tested-by: Lee Jones <lee@kernel.org>
    Reviewed-by: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Reviewed-by: Lee Jones <lee@kernel.org>
    Signed-off-by: John Keeping <john@metanate.com>
    Link: https://lore.kernel.org/r/20221122123523.3068034-2-john@metanate.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a41c2bba7f2853d9ede8b74f2d9a080db1e8e1ed
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 22 19:12:26 2022 +0800

    usb: roles: fix of node refcount leak in usb_role_switch_is_parent()
    
    [ Upstream commit 1ab30c610630da5391a373cddb8a065bf4c4bc01 ]
    
    I got the following report while doing device(mt6370-tcpc) load
    test with CONFIG_OF_UNITTEST and CONFIG_OF_DYNAMIC enabled:
    
      OF: ERROR: memory leak, expected refcount 1 instead of 2,
      of_node_get()/of_node_put() unbalanced - destroy cset entry:
      attach overlay node /i2c/pmic@34
    
    The 'parent' returned by fwnode_get_parent() with refcount incremented.
    it needs be put after using.
    
    Fixes: 6fadd72943b8 ("usb: roles: get usb-role-switch from parent")
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221122111226.251588-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18b9202188a4e59923834c60b5c82ea1da7d1811
Author: Yang Shen <shenyang39@huawei.com>
Date:   Tue Nov 22 17:03:55 2022 +0800

    coresight: trbe: remove cpuhp instance node before remove cpuhp state
    
    [ Upstream commit 20ee8c223f792947378196307d8e707c9cdc2d61 ]
    
    cpuhp_state_add_instance() and cpuhp_state_remove_instance() should
    be used in pairs. Or there will lead to the warn on
    cpuhp_remove_multi_state() since the cpuhp_step list is not empty.
    
    The following is the error log with 'rmmod coresight-trbe':
    Error: Removing state 215 which has instances left.
    Call trace:
      __cpuhp_remove_state_cpuslocked+0x144/0x160
      __cpuhp_remove_state+0xac/0x100
      arm_trbe_device_remove+0x2c/0x60 [coresight_trbe]
      platform_remove+0x34/0x70
      device_remove+0x54/0x90
      device_release_driver_internal+0x1e4/0x250
      driver_detach+0x5c/0xb0
      bus_remove_driver+0x64/0xc0
      driver_unregister+0x3c/0x70
      platform_driver_unregister+0x20/0x30
      arm_trbe_exit+0x1c/0x658 [coresight_trbe]
      __arm64_sys_delete_module+0x1ac/0x24c
      invoke_syscall+0x50/0x120
      el0_svc_common.constprop.0+0x58/0x1a0
      do_el0_svc+0x38/0xd0
      el0_svc+0x2c/0xc0
      el0t_64_sync_handler+0x1ac/0x1b0
      el0t_64_sync+0x19c/0x1a0
     ---[ end trace 0000000000000000 ]---
    
    Fixes: 3fbf7f011f24 ("coresight: sink: Add TRBE driver")
    Reviewed-by: Anshuman Khandual <anshuman.khandual@arm.com>
    Signed-off-by: Yang Shen <shenyang39@huawei.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Link: https://lore.kernel.org/r/20221122090355.23533-1-shenyang39@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e854a4ab388abefd99e9d6282dbd19218e42e6e4
Author: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date:   Wed Nov 23 14:36:09 2022 +0100

    counter: stm32-lptimer-cnt: fix the check on arr and cmp registers update
    
    [ Upstream commit fd5ac974fc25feed084c2d1599d0dddb4e0556bc ]
    
    The ARR (auto reload register) and CMP (compare) registers are
    successively written. The status bits to check the update of these
    registers are polled together with regmap_read_poll_timeout().
    The condition to end the loop may become true, even if one of the register
    isn't correctly updated.
    So ensure both status bits are set before clearing them.
    
    Fixes: d8958824cf07 ("iio: counter: Add support for STM32 LPTimer")
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/20221123133609.465614-1-fabrice.gasnier@foss.st.com/
    Signed-off-by: William Breathitt Gray <william.gray@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39a156715fb778302612106d3c0bd1906eb5839c
Author: Ramona Bolboaca <ramona.bolboaca@analog.com>
Date:   Tue Nov 22 10:27:49 2022 +0200

    iio: adis: add '__adis_enable_irq()' implementation
    
    [ Upstream commit 99c05e4283a19a02a256f14100ca4ec3b2da3f62 ]
    
    Add '__adis_enable_irq()' implementation which is the unlocked
    version of 'adis_enable_irq()'.
    Call '__adis_enable_irq()' instead of 'adis_enable_irq()' from
    '__adis_intial_startup()' to keep the expected unlocked functionality.
    
    This fix is needed to remove a deadlock for all devices which are
    using 'adis_initial_startup()'. The deadlock occurs because the
    same mutex is acquired twice, without releasing it.
    The mutex is acquired once inside 'adis_initial_startup()', before
    calling '__adis_initial_startup()', and once inside
    'adis_enable_irq()', which is called by '__adis_initial_startup()'.
    The deadlock is removed by calling '__adis_enable_irq()', instead of
    'adis_enable_irq()' from within '__adis_initial_startup()'.
    
    Fixes: b600bd7eb3335 ("iio: adis: do not disabe IRQs in 'adis_init()'")
    Signed-off-by: Ramona Bolboaca <ramona.bolboaca@analog.com>
    Reviewed-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20221122082757.449452-2-ramona.bolboaca@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a2dde8e5d6f14218f70c82a4c643eafd9cf88f5
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jan 30 20:56:53 2022 +0000

    iio:imu:adis: Move exports into IIO_ADISLIB namespace
    
    [ Upstream commit 6c9304d6af122f9afea41885ad82ed627e9442a8 ]
    
    In order to avoid unneessary pollution of the global symbol namespace
    move the common/library functions into a specific namespace and import
    that into the various specific device drivers that use them.
    
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: Lars-Peter Clausen <lars@metafoo.de>
    Cc: Song Bao Hua (Barry Song) <song.bao.hua@hisilicon.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220130205701.334592-9-jic23@kernel.org
    Stable-dep-of: 99c05e4283a1 ("iio: adis: add '__adis_enable_irq()' implementation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c2e13025b54717c926d84182070fced80026b5f
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Sat Jan 22 14:09:05 2022 +0100

    iio: adis: stylistic changes
    
    [ Upstream commit c39010ea6ba13bdf0003bd353e1d4c663aaac0a8 ]
    
    Minor stylistic changes to address checkptach complains when called with
    '--strict'.
    
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20220122130905.99-3-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Stable-dep-of: 99c05e4283a1 ("iio: adis: add '__adis_enable_irq()' implementation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de3e358912ec8fb6dbbf9c53c6c8ca7f4f68647e
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Fri Sep 3 16:14:20 2021 +0200

    iio: adis: handle devices that cannot unmask the drdy pin
    
    [ Upstream commit 31fa357ac809affd9f9a7d0b5d1991951e16beec ]
    
    Some devices can't mask/unmask the data ready pin and in those cases
    each driver was just calling '{dis}enable_irq()' to control the trigger
    state. This change, moves that handling into the library by introducing
    a new boolean in the data structure that tells the library that the
    device cannot unmask the pin.
    
    On top of controlling the trigger state, we can also use this flag to
    automatically request the IRQ with 'IRQF_NO_AUTOEN' in case it is set.
    So far, all users of the library want to start operation with IRQs/DRDY
    pin disabled so it should be fairly safe to do this inside the library.
    
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20210903141423.517028-3-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Stable-dep-of: 99c05e4283a1 ("iio: adis: add '__adis_enable_irq()' implementation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 994243de7a6160688aa3a3f00379f093ac1aada6
Author: Cosmin Tanislav <cosmin.tanislav@analog.com>
Date:   Thu Nov 3 15:00:29 2022 +0200

    iio: temperature: ltc2983: make bulk write buffer DMA-safe
    
    [ Upstream commit 5e0176213949724fbe9a8e4a39817edce337b8a0 ]
    
    regmap_bulk_write() does not guarantee implicit DMA-safety,
    even though the current implementation duplicates the given
    buffer. Do not rely on it.
    
    Fixes: f110f3188e56 ("iio: temperature: Add support for LTC2983")
    Signed-off-by: Cosmin Tanislav <cosmin.tanislav@analog.com>
    Link: https://lore.kernel.org/r/20221103130041.2153295-2-demonsingur@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22511eefa61db26e12c97dd7ada3071dbdfcb004
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 11 22:54:40 2022 +0800

    cxl: fix possible null-ptr-deref in cxl_pci_init_afu|adapter()
    
    [ Upstream commit 02cd3032b154fa02fdf90e7467abaeed889330b2 ]
    
    If device_register() fails in cxl_pci_afu|adapter(), the device
    is not added, device_unregister() can not be called in the error
    path, otherwise it will cause a null-ptr-deref because of removing
    not added device.
    
    As comment of device_register() says, it should use put_device() to give
    up the reference in the error path. So split device_unregister() into
    device_del() and put_device(), then goes to put dev when register fails.
    
    Fixes: f204e0b8cedd ("cxl: Driver code for powernv PCIe based cards for userspace access")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Link: https://lore.kernel.org/r/20221111145440.2426970-2-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5021bbf11b024cc65ea1e84c377df484183be4b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 11 22:54:39 2022 +0800

    cxl: fix possible null-ptr-deref in cxl_guest_init_afu|adapter()
    
    [ Upstream commit 61c80d1c3833e196256fb060382db94f24d3d9a7 ]
    
    If device_register() fails in cxl_register_afu|adapter(), the device
    is not added, device_unregister() can not be called in the error path,
    otherwise it will cause a null-ptr-deref because of removing not added
    device.
    
    As comment of device_register() says, it should use put_device() to give
    up the reference in the error path. So split device_unregister() into
    device_del() and put_device(), then goes to put dev when register fails.
    
    Fixes: 14baf4d9c739 ("cxl: Add guest-specific code")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Link: https://lore.kernel.org/r/20221111145440.2426970-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b308fdedef095aac14569f810d46edf773ea7d1e
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Nov 17 15:06:36 2022 +0800

    firmware: raspberrypi: fix possible memory leak in rpi_firmware_probe()
    
    [ Upstream commit 7b51161696e803fd5f9ad55b20a64c2df313f95c ]
    
    In rpi_firmware_probe(), if mbox_request_channel() fails, the 'fw' will
    not be freed through rpi_firmware_delete(), fix this leak by calling
    kfree() in the error path.
    
    Fixes: 1e7c57355a3b ("firmware: raspberrypi: Keep count of all consumers")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221117070636.3849773-1-yangyingliang@huawei.com
    Acked-by: Joel Savitz <jsavitz@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5c8f9003a289ee2a9b564d109e021fc4d05d106
Author: Zheng Wang <zyytlz.wz@163.com>
Date:   Thu Nov 10 11:50:33 2022 +0800

    misc: sgi-gru: fix use-after-free error in gru_set_context_option, gru_fault and gru_handle_user_call_os
    
    [ Upstream commit 643a16a0eb1d6ac23744bb6e90a00fc21148a9dc ]
    
    In some bad situation, the gts may be freed gru_check_chiplet_assignment.
    The call chain can be gru_unload_context->gru_free_gru_context->gts_drop
    and kfree finally. However, the caller didn't know if the gts is freed
    or not and use it afterwards. This will trigger a Use after Free bug.
    
    Fix it by introducing a return value to see if it's in error path or not.
    Free the gts in caller if gru_check_chiplet_assignment check failed.
    
    Fixes: 55484c45dbec ("gru: allow users to specify gru chiplet 2")
    Signed-off-by: Zheng Wang <zyytlz.wz@163.com>
    Acked-by: Dimitri Sivanich <sivanich@hpe.com>
    Link: https://lore.kernel.org/r/20221110035033.19498-1-zyytlz.wz@163.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 848c45964ded537107e010aaf353aa30a0855387
Author: ruanjinjie <ruanjinjie@huawei.com>
Date:   Thu Nov 17 14:47:25 2022 +0800

    misc: tifm: fix possible memory leak in tifm_7xx1_switch_media()
    
    [ Upstream commit fd2c930cf6a5b9176382c15f9acb1996e76e25ad ]
    
    If device_register() returns error in tifm_7xx1_switch_media(),
    name of kobject which is allocated in dev_set_name() called in device_add()
    is leaked.
    
    Never directly free @dev after calling device_register(), even
    if it returned an error! Always use put_device() to give up the
    reference initialized.
    
    Fixes: 2428a8fe2261 ("tifm: move common device management tasks from tifm_7xx1 to tifm_core")
    Signed-off-by: ruanjinjie <ruanjinjie@huawei.com>
    Link: https://lore.kernel.org/r/20221117064725.3478402-1-ruanjinjie@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37a13b274e4513c757e50c002ddcbf4bc89adbb2
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 21 23:43:39 2022 +0800

    ocxl: fix pci device refcount leak when calling get_function_0()
    
    [ Upstream commit 27158c72678b39ee01cc01de1aba6b51c71abe2f ]
    
    get_function_0() calls pci_get_domain_bus_and_slot(), as comment
    says, it returns a pci device with refcount increment, so after
    using it, pci_dev_put() needs be called.
    
    Get the device reference when get_function_0() is not called, so
    pci_dev_put() can be called in the error path and callers
    unconditionally. And add comment above get_dvsec_vendor0() to tell
    callers to call pci_dev_put().
    
    Fixes: 87db7579ebd5 ("ocxl: control via sysfs whether the FPGA is reloaded on a link reset")
    Suggested-by: Andrew Donnellan <ajd@linux.ibm.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Link: https://lore.kernel.org/r/20221121154339.4088935-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3299983a6bf628249ac650908e62d12de959341e
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 11 22:59:29 2022 +0800

    misc: ocxl: fix possible name leak in ocxl_file_register_afu()
    
    [ Upstream commit a4cb1004aeed2ab893a058fad00a5b41a12c4691 ]
    
    If device_register() returns error in ocxl_file_register_afu(),
    the name allocated by dev_set_name() need be freed. As comment
    of device_register() says, it should use put_device() to give
    up the reference in the error path. So fix this by calling
    put_device(), then the name can be freed in kobject_cleanup(),
    and info is freed in info_release().
    
    Fixes: 75ca758adbaf ("ocxl: Create a clear delineation between ocxl backend & frontend")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Link: https://lore.kernel.org/r/20221111145929.2429271-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 357379d504c0c8b0834e206ad8c49e4b3c98ed4d
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Sat Nov 19 11:57:21 2022 +0800

    test_firmware: fix memory leak in test_firmware_init()
    
    [ Upstream commit 7610615e8cdb3f6f5bbd9d8e7a5d8a63e3cabf2e ]
    
    When misc_register() failed in test_firmware_init(), the memory pointed
    by test_fw_config->name is not released. The memory leak information is
    as follows:
    unreferenced object 0xffff88810a34cb00 (size 32):
      comm "insmod", pid 7952, jiffies 4294948236 (age 49.060s)
      hex dump (first 32 bytes):
        74 65 73 74 2d 66 69 72 6d 77 61 72 65 2e 62 69  test-firmware.bi
        6e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  n...............
      backtrace:
        [<ffffffff81b21fcb>] __kmalloc_node_track_caller+0x4b/0xc0
        [<ffffffff81affb96>] kstrndup+0x46/0xc0
        [<ffffffffa0403a49>] __test_firmware_config_init+0x29/0x380 [test_firmware]
        [<ffffffffa040f068>] 0xffffffffa040f068
        [<ffffffff81002c41>] do_one_initcall+0x141/0x780
        [<ffffffff816a72c3>] do_init_module+0x1c3/0x630
        [<ffffffff816adb9e>] load_module+0x623e/0x76a0
        [<ffffffff816af471>] __do_sys_finit_module+0x181/0x240
        [<ffffffff89978f99>] do_syscall_64+0x39/0xb0
        [<ffffffff89a0008b>] entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Fixes: c92316bf8e94 ("test_firmware: add batched firmware tests")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Acked-by: Luis Chamberlain <mcgrof@kernel.org>
    Link: https://lore.kernel.org/r/20221119035721.18268-1-shaozhengchao@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07d547d74244d0283ac2c46469ce90637750eae0
Author: Yuan Can <yuancan@huawei.com>
Date:   Wed Nov 23 06:12:12 2022 +0000

    serial: sunsab: Fix error handling in sunsab_init()
    
    [ Upstream commit 1a6ec673fb627c26e2267ca0a03849f91dbd9b40 ]
    
    The sunsab_init() returns the platform_driver_register() directly without
    checking its return value, if platform_driver_register() failed, the
    allocated sunsab_ports is leaked.
    Fix by free sunsab_ports and set it to NULL when platform_driver_register()
    failed.
    
    Fixes: c4d37215a824 ("[SERIAL] sunsab: Convert to of_driver framework.")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Link: https://lore.kernel.org/r/20221123061212.52593-1-yuancan@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 919e745fdd0dc54fe34b6b1100035ad6a4e79b69
Author: Gabriel Somlo <gsomlo@gmail.com>
Date:   Tue Nov 22 15:04:26 2022 -0500

    serial: altera_uart: fix locking in polling mode
    
    [ Upstream commit 1307c5d33cce8a41dd77c2571e4df65a5b627feb ]
    
    Since altera_uart_interrupt() may also be called from
    a poll timer in "serving_softirq" context, use
    spin_[lock_irqsave|unlock_irqrestore] variants, which
    are appropriate for both softirq and hardware interrupt
    contexts.
    
    Fixes: 2f8b9c15cd88 ("altera_uart: Add support for polling mode (IRQ-less)")
    Signed-off-by: Gabriel Somlo <gsomlo@gmail.com>
    Link: https://lore.kernel.org/r/20221122200426.888349-1-gsomlo@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1c4f18214e373b6603d75600c1f42b70574a705
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Sep 20 07:20:43 2022 +0200

    tty: serial: altera_uart_{r,t}x_chars() need only uart_port
    
    [ Upstream commit 3af44d9bb0539d5fa27d6159d696fda5f3747bff ]
    
    Both altera_uart_{r,t}x_chars() need only uart_port, not altera_uart. So
    pass the former from altera_uart_interrupt() directly.
    
    Apart it maybe saves a dereference, this makes the transition of
    altera_uart_tx_chars() easier to follow in the next patch.
    
    Cc: Tobias Klauser <tklauser@distanz.ch>
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Acked-by: Tobias Klauser <tklauser@distanz.ch>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20220920052049.20507-4-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: 1307c5d33cce ("serial: altera_uart: fix locking in polling mode")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b133b45ba60775ec6c144befc168f71f3741090e
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Sep 20 07:20:42 2022 +0200

    tty: serial: clean up stop-tx part in altera_uart_tx_chars()
    
    [ Upstream commit d9c128117da41cf4cb0e80ae565b5d3ac79dffac ]
    
    The "stop TX" path in altera_uart_tx_chars() is open-coded, so:
    * use uart_circ_empty() to check if the buffer is empty, and
    * when true, call altera_uart_stop_tx().
    
    Cc: Tobias Klauser <tklauser@distanz.ch>
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Acked-by: Tobias Klauser <tklauser@distanz.ch>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20220920052049.20507-3-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: 1307c5d33cce ("serial: altera_uart: fix locking in polling mode")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f7d82380fbeaed3a940efc33c23f0c4bbd0fc02
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Tue Nov 22 19:45:59 2022 +0800

    serial: pch: Fix PCI device refcount leak in pch_request_dma()
    
    [ Upstream commit 8be3a7bf773700534a6e8f87f6ed2ed111254be5 ]
    
    As comment of pci_get_slot() says, it returns a pci_device with its
    refcount increased. The caller must decrement the reference count by
    calling pci_dev_put().
    
    Since 'dma_dev' is only used to filter the channel in filter(), we can
    call pci_dev_put() before exiting from pch_request_dma(). Add the
    missing pci_dev_put() for the normal and error path.
    
    Fixes: 3c6a483275f4 ("Serial: EG20T: add PCH_UART driver")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Link: https://lore.kernel.org/r/20221122114559.27692-1-wangxiongfeng2@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0dfc7dfe5b6e6abf28dd9497ae8d3557e18ba4e6
Author: Valentin Caron <valentin.caron@foss.st.com>
Date:   Fri Nov 18 18:06:02 2022 +0100

    serial: stm32: move dma_request_chan() before clk_prepare_enable()
    
    [ Upstream commit 0d114e9ff940ebad8e88267013bf96c605a6b336 ]
    
    If dma_request_chan() returns a PROBE_DEFER error, clk_disable_unprepare()
    will be called and USART clock will be disabled. But early console can be
    still active on the same USART.
    
    While moving dma_request_chan() before clk_prepare_enable(), the clock
    won't be taken in case of a DMA PROBE_DEFER error, and so it doesn't need
    to be disabled. Then USART is still clocked for early console.
    
    Fixes: a7770a4bfcf4 ("serial: stm32: defer probe for dma devices")
    Reported-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Valentin Caron <valentin.caron@foss.st.com>
    Link: https://lore.kernel.org/r/20221118170602.1057863-1-valentin.caron@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 926b0967f781a04e1a1f4c50f66fb05b0743dd61
Author: delisun <delisun@pateo.com.cn>
Date:   Thu Nov 10 10:01:08 2022 +0800

    serial: pl011: Do not clear RX FIFO & RX interrupt in unthrottle.
    
    [ Upstream commit 032d5a71ed378ffc6a2d41a187d8488a4f9fe415 ]
    
    Clearing the RX FIFO will cause data loss.
    Copy the pl011_enabl_interrupts implementation, and remove the clear
    interrupt and FIFO part of the code.
    
    Fixes: 211565b10099 ("serial: pl011: UPSTAT_AUTORTS requires .throttle/unthrottle")
    Signed-off-by: delisun <delisun@pateo.com.cn>
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Link: https://lore.kernel.org/r/20221110020108.7700-1-delisun@pateo.com.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d71a611fca1984c0765f9317ff471ac8cd0e3e2f
Author: Jiamei Xie <jiamei.xie@arm.com>
Date:   Thu Nov 17 18:32:37 2022 +0800

    serial: amba-pl011: avoid SBSA UART accessing DMACR register
    
    [ Upstream commit 94cdb9f33698478b0e7062586633c42c6158a786 ]
    
    Chapter "B Generic UART" in "ARM Server Base System Architecture" [1]
    documentation describes a generic UART interface. Such generic UART
    does not support DMA. In current code, sbsa_uart_pops and
    amba_pl011_pops share the same stop_rx operation, which will invoke
    pl011_dma_rx_stop, leading to an access of the DMACR register. This
    commit adds a using_rx_dma check in pl011_dma_rx_stop to avoid the
    access to DMACR register for SBSA UARTs which does not support DMA.
    
    When the kernel enables DMA engine with "CONFIG_DMA_ENGINE=y", Linux
    SBSA PL011 driver will access PL011 DMACR register in some functions.
    For most real SBSA Pl011 hardware implementations, the DMACR write
    behaviour will be ignored. So these DMACR operations will not cause
    obvious problems. But for some virtual SBSA PL011 hardware, like Xen
    virtual SBSA PL011 (vpl011) device, the behaviour might be different.
    Xen vpl011 emulation will inject a data abort to guest, when guest is
    accessing an unimplemented UART register. As Xen VPL011 is SBSA
    compatible, it will not implement DMACR register. So when Linux SBSA
    PL011 driver access DMACR register, it will get an unhandled data abort
    fault and the application will get a segmentation fault:
    Unhandled fault at 0xffffffc00944d048
    Mem abort info:
      ESR = 0x96000000
      EC = 0x25: DABT (current EL), IL = 32 bits
      SET = 0, FnV = 0
      EA = 0, S1PTW = 0
      FSC = 0x00: ttbr address size fault
    Data abort info:
      ISV = 0, ISS = 0x00000000
      CM = 0, WnR = 0
    swapper pgtable: 4k pages, 39-bit VAs, pgdp=0000000020e2e000
    [ffffffc00944d048] pgd=100000003ffff803, p4d=100000003ffff803, pud=100000003ffff803, pmd=100000003fffa803, pte=006800009c090f13
    Internal error: ttbr address size fault: 96000000 [#1] PREEMPT SMP
    ...
    Call trace:
     pl011_stop_rx+0x70/0x80
     tty_port_shutdown+0x7c/0xb4
     tty_port_close+0x60/0xcc
     uart_close+0x34/0x8c
     tty_release+0x144/0x4c0
     __fput+0x78/0x220
     ____fput+0x1c/0x30
     task_work_run+0x88/0xc0
     do_notify_resume+0x8d0/0x123c
     el0_svc+0xa8/0xc0
     el0t_64_sync_handler+0xa4/0x130
     el0t_64_sync+0x1a0/0x1a4
    Code: b9000083 b901f001 794038a0 8b000042 (b9000041)
    ---[ end trace 83dd93df15c3216f ]---
    note: bootlogd[132] exited with preempt_count 1
    /etc/rcS.d/S07bootlogd: line 47: 132 Segmentation fault start-stop-daemon
    
    This has been discussed in the Xen community, and we think it should fix
    this in Linux. See [2] for more information.
    
    [1] https://developer.arm.com/documentation/den0094/c/?lang=en
    [2] https://lists.xenproject.org/archives/html/xen-devel/2022-11/msg00543.html
    
    Fixes: 0dd1e247fd39 (drivers: PL011: add support for the ARM SBSA generic UART)
    Signed-off-by: Jiamei Xie <jiamei.xie@arm.com>
    Reviewed-by: Andre Przywara <andre.przywara@arm.com>
    Link: https://lore.kernel.org/r/20221117103237.86856-1-jiamei.xie@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f46f9d2e166487bc3671bf3eb56961df3a0851b0
Author: Marek Vasut <marex@denx.de>
Date:   Sun Nov 20 15:15:09 2022 +0100

    extcon: usbc-tusb320: Update state on probe even if no IRQ pending
    
    [ Upstream commit 581c848b610dbf3fe1ed4d85fd53d0743c61faba ]
    
    Currently this driver triggers extcon and typec state update in its
    probe function, to read out current state reported by the chip and
    report the correct state to upper layers. This synchronization is
    performed correctly, but only in case the chip indicates a pending
    interrupt in reg09 register.
    
    This fails to cover the situation where all interrupts reported by
    the chip were already handled by Linux before reboot, then the system
    rebooted, and then Linux starts again. In this case, the TUSB320 no
    longer reports any interrupts in reg09, and the state update does not
    perform any update as it depends on that interrupt indication.
    
    Fix this by turning tusb320_irq_handler() into a thin wrapper around
    tusb320_state_update_handler(), where the later now contains the bulk
    of the code of tusb320_irq_handler(), but adds new function parameter
    "force_update". The "force_update" parameter can be used by the probe
    function to assure that the state synchronization is always performed,
    independent of the interrupt indicated in reg09. The interrupt handler
    tusb320_irq_handler() callback uses force_update=false to avoid state
    updates on potential spurious interrupts and retain current behavior.
    
    Fixes: 06bc4ca115cdd ("extcon: Add driver for TI TUSB320")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Alvin Šipraga <alsi@bang-olufsen.dk>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20221120141509.81012-1-marex@denx.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac067e75c4c2a80c617326ad5c4a8754b16f5079
Author: Marek Vasut <marex@denx.de>
Date:   Sat Jul 30 20:05:00 2022 +0200

    extcon: usbc-tusb320: Add USB TYPE-C support
    
    [ Upstream commit bf7571c00dca0a9c5af3f5125ef5a89a40b13cd5 ]
    
    The TI TUSB320 seems like a better fit for USB TYPE-C subsystem,
    which can expose details collected by the TUSB320 in a far more
    precise way than extcon. Since there are existing users in the
    kernel and in DT which depend on the extcon interface, keep it
    for now.
    
    Add TYPE-C interface and expose the supported supply current,
    direction and connector polarity via the TYPE-C interface.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Alvin Šipraga <alsi@bang-olufsen.dk>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Stable-dep-of: 581c848b610d ("extcon: usbc-tusb320: Update state on probe even if no IRQ pending")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9280761167f0e5ee6523d4f800d4f63678b04099
Author: Marek Vasut <marex@denx.de>
Date:   Sat Jul 30 20:04:59 2022 +0200

    extcon: usbc-tusb320: Factor out extcon into dedicated functions
    
    [ Upstream commit 9483811a126a319ecac749f1b767ea5faecc7aed ]
    
    Move extcon code into separate functions in preparation for addition of
    USB TYPE-C support. No functional change.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Stable-dep-of: 581c848b610d ("extcon: usbc-tusb320: Update state on probe even if no IRQ pending")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05aa8ff22d4a08a903f39b09f5e821c6761d09f4
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Feb 13 23:01:16 2022 -0600

    usb: typec: Factor out non-PD fwnode properties
    
    [ Upstream commit 2e7dfb0e9cacad0f1adbc4b97f0b96ba35027f24 ]
    
    Basic programmable non-PD Type-C port controllers do not need the full
    TCPM library, but they share the same devicetree binding and the same
    typec_capability structure. Factor out a helper for parsing those
    properties which map to fields in struct typec_capability, so the code
    can be shared between TCPM and basic non-TCPM drivers.
    
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Link: https://lore.kernel.org/r/20220214050118.61015-4-samuel@sholland.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: 581c848b610d ("extcon: usbc-tusb320: Update state on probe even if no IRQ pending")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31e9c2751035e82117d9d8a0eb876b184e3a5e97
Author: Yassine Oudjana <y.oudjana@protonmail.com>
Date:   Sat Sep 25 05:45:54 2021 +0000

    extcon: usbc-tusb320: Add support for TUSB320L
    
    [ Upstream commit ce0320bd3872038569be360870e2d5251b975692 ]
    
    TUSB320L is a newer chip with additional features, and it has additional steps
    in its mode changing sequence:
     - Disable CC state machine,
     - Write to mode register,
     - Wait for 5 ms,
     - Re-enable CC state machine.
    It also has an additional register that a revision number can be read from.
    
    Add support for the mode changing sequence, and read the revision number during
    probe and print it as info.
    
    Signed-off-by: Yassine Oudjana <y.oudjana@protonmail.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Stable-dep-of: 581c848b610d ("extcon: usbc-tusb320: Update state on probe even if no IRQ pending")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9c8820d91e9b7e52b8513fe3e6be807ff79801e
Author: Yassine Oudjana <y.oudjana@protonmail.com>
Date:   Sat Sep 25 05:45:39 2021 +0000

    extcon: usbc-tusb320: Add support for mode setting and reset
    
    [ Upstream commit 70c55d6be634e5f9894169340f3fe5c73f53ac2d ]
    
    Reset the chip and set its mode to default (maintain mode set by PORT pin)
    during probe to make sure it comes up in the default state.
    
    Signed-off-by: Yassine Oudjana <y.oudjana@protonmail.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Stable-dep-of: 581c848b610d ("extcon: usbc-tusb320: Update state on probe even if no IRQ pending")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4524599a6a29117fe0671ff3e05663fe8cdd08ff
Author: Sven Peter <sven@svenpeter.dev>
Date:   Mon Nov 14 18:44:47 2022 +0100

    usb: typec: tipd: Fix spurious fwnode_handle_put in error path
    
    [ Upstream commit 782c70edc4852a5d39be12377a85501546236212 ]
    
    The err_role_put error path always calls fwnode_handle_put to release
    the fwnode. This path can be reached after probe itself has already
    released that fwnode though. Fix that by moving fwnode_handle_put in the
    happy path to the very end.
    
    Fixes: 18a6c866bb19 ("usb: typec: tps6598x: Add USB role switching logic")
    Signed-off-by: Sven Peter <sven@svenpeter.dev>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20221114174449.34634-2-sven@svenpeter.dev
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0d86eacc84980945ccd1ae16c7e4adb5f8d36ec
Author: Sven Peter <sven@svenpeter.dev>
Date:   Mon Nov 14 18:44:46 2022 +0100

    usb: typec: tipd: Cleanup resources if devm_tps6598_psy_register fails
    
    [ Upstream commit 19c220e9ab00f50edefb9667e3101e84a5112df2 ]
    
    We can't just return if devm_tps6598_psy_register fails since previous
    resources are not devres managed and have yet to be cleaned up.
    
    Fixes: 10eb0b6ac63a ("usb: typec: tps6598x: Export some power supply properties")
    Signed-off-by: Sven Peter <sven@svenpeter.dev>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20221114174449.34634-1-sven@svenpeter.dev
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba75be6f0d9d028d20852564206565a4c03e3288
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 21 14:24:16 2022 +0800

    usb: typec: tcpci: fix of node refcount leak in tcpci_register_port()
    
    [ Upstream commit 0384e87e3fec735e47f1c133c796f32ef7a72a9b ]
    
    I got the following report while doing device(mt6370-tcpc) load
    test with CONFIG_OF_UNITTEST and CONFIG_OF_DYNAMIC enabled:
    
      OF: ERROR: memory leak, expected refcount 1 instead of 2,
      of_node_get()/of_node_put() unbalanced - destroy cset entry:
      attach overlay node /i2c/pmic@34/tcpc/connector
    
    The 'fwnode' set in tcpci_parse_config() which is called
    in tcpci_register_port(), its node refcount is increased
    in device_get_named_child_node(). It needs be put while
    exiting, so call fwnode_handle_put() in the error path of
    tcpci_register_port() and in tcpci_unregister_port() to
    avoid leak.
    
    Fixes: 5e85a04c8c0d ("usb: typec: add fwnode to tcpc")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20221121062416.1026192-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 154d5713a24137ddc80273142aeb60fed477fc4b
Author: Sven Peter <sven@svenpeter.dev>
Date:   Mon Nov 14 17:59:24 2022 +0100

    usb: typec: Check for ops->exit instead of ops->enter in altmode_exit
    
    [ Upstream commit b6ddd180e3d9f92c1e482b3cdeec7dda086b1341 ]
    
    typec_altmode_exit checks if ops->enter is not NULL but then calls
    ops->exit a few lines below. Fix that and check for the function
    pointer it's about to call instead.
    
    Fixes: 8a37d87d72f0 ("usb: typec: Bus type for alternate modes")
    Signed-off-by: Sven Peter <sven@svenpeter.dev>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20221114165924.33487-1-sven@svenpeter.dev
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f5661388f43df3ac106ce93e67d8d22b16a78ff
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Thu Nov 17 11:59:14 2022 +0800

    staging: vme_user: Fix possible UAF in tsi148_dma_list_add
    
    [ Upstream commit 357057ee55d3c99a5de5abe8150f7bca04f8e53b ]
    
    Smatch report warning as follows:
    
    drivers/staging/vme_user/vme_tsi148.c:1757 tsi148_dma_list_add() warn:
      '&entry->list' not removed from list
    
    In tsi148_dma_list_add(), the error path "goto err_dma" will not
    remove entry->list from list->entries, but entry will be freed,
    then list traversal may cause UAF.
    
    Fix by removeing it from list->entries before free().
    
    Fixes: b2383c90a9d6 ("vme: tsi148: fix first DMA item mapping")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Link: https://lore.kernel.org/r/20221117035914.2954454-1-cuigaosheng1@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3c4bc261605fc8675760e909095c2ebd69386e8
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Fri Nov 11 10:03:17 2022 +0100

    usb: fotg210-udc: Fix ages old endianness issues
    
    [ Upstream commit 46ed6026ca2181c917c8334a82e3eaf40a6234dd ]
    
    The code in the FOTG210 driver isn't entirely endianness-agnostic
    as reported by the kernel robot sparse testing. This came to
    the surface while moving the files around.
    
    The driver is only used on little-endian systems, so this causes
    no real-world regression, but it is nice to be strict and have
    some compile coverage also on big endian machines, so fix it
    up with the right LE accessors.
    
    Fixes: b84a8dee23fd ("usb: gadget: add Faraday fotg210_udc driver")
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/linux-usb/202211110910.0dJ7nZCn-lkp@intel.com/
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20221111090317.94228-1-linus.walleij@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e87d412219e3ae14d71a49313d98cd5e8b4f95f
Author: Rafael Mendonca <rafaelmendsr@gmail.com>
Date:   Fri Sep 30 19:40:58 2022 -0300

    uio: uio_dmem_genirq: Fix deadlock between irq config and handling
    
    [ Upstream commit 118b918018175d9fcd8db667f905012e986cc2c9 ]
    
    This fixes a concurrency issue addressed in commit 34cb27528398 ("UIO: Fix
    concurrency issue"):
    
      "In a SMP case there was a race condition issue between
      Uio_pdrv_genirq_irqcontrol() running on one CPU and irq handler on
      another CPU. Fix it by spin_locking shared resources access inside irq
      handler."
    
    The implementation of "uio_dmem_genirq" was based on "uio_pdrv_genirq" and
    it is used in a similar manner to the "uio_pdrv_genirq" driver with respect
    to interrupt configuration and handling. At the time "uio_dmem_genirq" was
    merged, both had the same implementation of the 'uio_info' handlers
    irqcontrol() and handler(), thus, both had the same concurrency issue
    mentioned by the above commit. However, the above patch was only applied to
    the "uio_pdrv_genirq" driver.
    
    Split out from commit 34cb27528398 ("UIO: Fix concurrency issue").
    
    Fixes: 0a0c3b5a24bd ("Add new uio device for dynamic memory allocation")
    Signed-off-by: Rafael Mendonca <rafaelmendsr@gmail.com>
    Link: https://lore.kernel.org/r/20220930224100.816175-3-rafaelmendsr@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79a4bdb6b9920134af1a4738a1fa36a0438cd905
Author: Rafael Mendonca <rafaelmendsr@gmail.com>
Date:   Fri Sep 30 19:40:57 2022 -0300

    uio: uio_dmem_genirq: Fix missing unlock in irq configuration
    
    [ Upstream commit 9de255c461d1b3f0242b3ad1450c3323a3e00b34 ]
    
    Commit b74351287d4b ("uio: fix a sleep-in-atomic-context bug in
    uio_dmem_genirq_irqcontrol()") started calling disable_irq() without
    holding the spinlock because it can sleep. However, that fix introduced
    another bug: if interrupt is already disabled and a new disable request
    comes in, then the spinlock is not unlocked:
    
    root@localhost:~# printf '\x00\x00\x00\x00' > /dev/uio0
    root@localhost:~# printf '\x00\x00\x00\x00' > /dev/uio0
    root@localhost:~# [   14.851538] BUG: scheduling while atomic: bash/223/0x00000002
    [   14.851991] Modules linked in: uio_dmem_genirq uio myfpga(OE) bochs drm_vram_helper drm_ttm_helper ttm drm_kms_helper drm snd_pcm ppdev joydev psmouse snd_timer snd e1000fb_sys_fops syscopyarea parport sysfillrect soundcore sysimgblt input_leds pcspkr i2c_piix4 serio_raw floppy evbug qemu_fw_cfg mac_hid pata_acpi ip_tables x_tables autofs4 [last unloaded: parport_pc]
    [   14.854206] CPU: 0 PID: 223 Comm: bash Tainted: G           OE      6.0.0-rc7 #21
    [   14.854786] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014
    [   14.855664] Call Trace:
    [   14.855861]  <TASK>
    [   14.856025]  dump_stack_lvl+0x4d/0x67
    [   14.856325]  dump_stack+0x14/0x1a
    [   14.856583]  __schedule_bug.cold+0x4b/0x5c
    [   14.856915]  __schedule+0xe81/0x13d0
    [   14.857199]  ? idr_find+0x13/0x20
    [   14.857456]  ? get_work_pool+0x2d/0x50
    [   14.857756]  ? __flush_work+0x233/0x280
    [   14.858068]  ? __schedule+0xa95/0x13d0
    [   14.858307]  ? idr_find+0x13/0x20
    [   14.858519]  ? get_work_pool+0x2d/0x50
    [   14.858798]  schedule+0x6c/0x100
    [   14.859009]  schedule_hrtimeout_range_clock+0xff/0x110
    [   14.859335]  ? tty_write_room+0x1f/0x30
    [   14.859598]  ? n_tty_poll+0x1ec/0x220
    [   14.859830]  ? tty_ldisc_deref+0x1a/0x20
    [   14.860090]  schedule_hrtimeout_range+0x17/0x20
    [   14.860373]  do_select+0x596/0x840
    [   14.860627]  ? __kernel_text_address+0x16/0x50
    [   14.860954]  ? poll_freewait+0xb0/0xb0
    [   14.861235]  ? poll_freewait+0xb0/0xb0
    [   14.861517]  ? rpm_resume+0x49d/0x780
    [   14.861798]  ? common_interrupt+0x59/0xa0
    [   14.862127]  ? asm_common_interrupt+0x2b/0x40
    [   14.862511]  ? __uart_start.isra.0+0x61/0x70
    [   14.862902]  ? __check_object_size+0x61/0x280
    [   14.863255]  core_sys_select+0x1c6/0x400
    [   14.863575]  ? vfs_write+0x1c9/0x3d0
    [   14.863853]  ? vfs_write+0x1c9/0x3d0
    [   14.864121]  ? _copy_from_user+0x45/0x70
    [   14.864526]  do_pselect.constprop.0+0xb3/0xf0
    [   14.864893]  ? do_syscall_64+0x6d/0x90
    [   14.865228]  ? do_syscall_64+0x6d/0x90
    [   14.865556]  __x64_sys_pselect6+0x76/0xa0
    [   14.865906]  do_syscall_64+0x60/0x90
    [   14.866214]  ? syscall_exit_to_user_mode+0x2a/0x50
    [   14.866640]  ? do_syscall_64+0x6d/0x90
    [   14.866972]  ? do_syscall_64+0x6d/0x90
    [   14.867286]  ? do_syscall_64+0x6d/0x90
    [   14.867626]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
    [...] stripped
    [   14.872959]  </TASK>
    
    ('myfpga' is a simple 'uio_dmem_genirq' driver I wrote to test this)
    
    The implementation of "uio_dmem_genirq" was based on "uio_pdrv_genirq" and
    it is used in a similar manner to the "uio_pdrv_genirq" driver with respect
    to interrupt configuration and handling. At the time "uio_dmem_genirq" was
    introduced, both had the same implementation of the 'uio_info' handlers
    irqcontrol() and handler(). Then commit 34cb27528398 ("UIO: Fix concurrency
    issue"), which was only applied to "uio_pdrv_genirq", ended up making them
    a little different. That commit, among other things, changed disable_irq()
    to disable_irq_nosync() in the implementation of irqcontrol(). The
    motivation there was to avoid a deadlock between irqcontrol() and
    handler(), since it added a spinlock in the irq handler, and disable_irq()
    waits for the completion of the irq handler.
    
    By changing disable_irq() to disable_irq_nosync() in irqcontrol(), we also
    avoid the sleeping-while-atomic bug that commit b74351287d4b ("uio: fix a
    sleep-in-atomic-context bug in uio_dmem_genirq_irqcontrol()") was trying to
    fix. Thus, this fixes the missing unlock in irqcontrol() by importing the
    implementation of irqcontrol() handler from the "uio_pdrv_genirq" driver.
    In the end, it reverts commit b74351287d4b ("uio: fix a
    sleep-in-atomic-context bug in uio_dmem_genirq_irqcontrol()") and change
    disable_irq() to disable_irq_nosync().
    
    It is worth noting that this still does not address the concurrency issue
    fixed by commit 34cb27528398 ("UIO: Fix concurrency issue"). It will be
    addressed separately in the next commits.
    
    Split out from commit 34cb27528398 ("UIO: Fix concurrency issue").
    
    Fixes: b74351287d4b ("uio: fix a sleep-in-atomic-context bug in uio_dmem_genirq_irqcontrol()")
    Signed-off-by: Rafael Mendonca <rafaelmendsr@gmail.com>
    Link: https://lore.kernel.org/r/20220930224100.816175-2-rafaelmendsr@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f22a273ef7c1589f23e7d1a03b9897e2702007b
Author: Rafael Mendonca <rafaelmendsr@gmail.com>
Date:   Tue Oct 18 12:28:25 2022 -0300

    vfio: platform: Do not pass return buffer to ACPI _RST method
    
    [ Upstream commit e67e070632a665c932d534b8b800477bb3111449 ]
    
    The ACPI _RST method has no return value, there's no need to pass a return
    buffer to acpi_evaluate_object().
    
    Fixes: d30daa33ec1d ("vfio: platform: call _RST method when using ACPI")
    Signed-off-by: Rafael Mendonca <rafaelmendsr@gmail.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20221018152825.891032-1-rafaelmendsr@gmail.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 417ef049e3fd3b0d2593c1d5ffa3d0d5d0a018a7
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Oct 26 16:28:03 2022 +0800

    class: fix possible memory leak in __class_register()
    
    [ Upstream commit 8c3e8a6bdb5253b97ad532570f8b5db5f7a06407 ]
    
    If class_add_groups() returns error, the 'cp->subsys' need be
    unregister, and the 'cp' need be freed.
    
    We can not call kset_unregister() here, because the 'cls' will
    be freed in callback function class_release() and it's also
    freed in caller's error path, it will cause double free.
    
    So fix this by calling kobject_del() and kfree_const(name) to
    cleanup kobject. Besides, call kfree() to free the 'cp'.
    
    Fault injection test can trigger this:
    
    unreferenced object 0xffff888102fa8190 (size 8):
      comm "modprobe", pid 502, jiffies 4294906074 (age 49.296s)
      hex dump (first 8 bytes):
        70 6b 74 63 64 76 64 00                          pktcdvd.
      backtrace:
        [<00000000e7c7703d>] __kmalloc_track_caller+0x1ae/0x320
        [<000000005e4d70bc>] kstrdup+0x3a/0x70
        [<00000000c2e5e85a>] kstrdup_const+0x68/0x80
        [<000000000049a8c7>] kvasprintf_const+0x10b/0x190
        [<0000000029123163>] kobject_set_name_vargs+0x56/0x150
        [<00000000747219c9>] kobject_set_name+0xab/0xe0
        [<0000000005f1ea4e>] __class_register+0x15c/0x49a
    
    unreferenced object 0xffff888037274000 (size 1024):
      comm "modprobe", pid 502, jiffies 4294906074 (age 49.296s)
      hex dump (first 32 bytes):
        00 40 27 37 80 88 ff ff 00 40 27 37 80 88 ff ff  .@'7.....@'7....
        00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........
      backtrace:
        [<00000000151f9600>] kmem_cache_alloc_trace+0x17c/0x2f0
        [<00000000ecf3dd95>] __class_register+0x86/0x49a
    
    Fixes: ced6473e7486 ("driver core: class: add class_groups support")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221026082803.3458760-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f76824ab2bacfdc2e7a36f183dea2002dff12487
Author: Yuan Can <yuancan@huawei.com>
Date:   Wed Nov 9 07:21:10 2022 +0000

    serial: 8250_bcm7271: Fix error handling in brcmuart_init()
    
    [ Upstream commit 6a3ff858915fa8ca36c7eb02c87c9181ae2fc333 ]
    
    A problem about 8250_bcm7271 create debugfs failed is triggered with the
    following log given:
    
     [  324.516635] debugfs: Directory 'bcm7271-uart' with parent '/' already present!
    
    The reason is that brcmuart_init() returns platform_driver_register()
    directly without checking its return value, if platform_driver_register()
    failed, it returns without destroy the newly created debugfs, resulting
    the debugfs of 8250_bcm7271 can never be created later.
    
     brcmuart_init()
       debugfs_create_dir() # create debugfs directory
       platform_driver_register()
         driver_register()
           bus_add_driver()
             priv = kzalloc(...) # OOM happened
       # return without destroy debugfs directory
    
    Fix by removing debugfs when platform_driver_register() returns error.
    
    Fixes: 41a469482de2 ("serial: 8250: Add new 8250-core based Broadcom STB driver")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Link: https://lore.kernel.org/r/20221109072110.117291-2-yuancan@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b4424efcfaa64929ec158dff1a86d6fcee2c046
Author: Kartik <kkartik@nvidia.com>
Date:   Tue Oct 18 20:28:06 2022 +0530

    serial: tegra: Read DMA status before terminating
    
    [ Upstream commit 109a951a9f1fd8a34ebd1896cbbd5d5cede880a7 ]
    
    Read the DMA status before terminating the DMA, as doing so deletes
    the DMA desc.
    
    Also, to get the correct transfer status information, pause the DMA
    using dmaengine_pause() before reading the DMA status.
    
    Fixes: e9ea096dd225 ("serial: tegra: add serial driver")
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Akhil R <akhilrajeev@nvidia.com>
    Signed-off-by: Kartik <kkartik@nvidia.com>
    Link: https://lore.kernel.org/r/1666105086-17326-1-git-send-email-kkartik@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0ead7e8da84f4c3759417b8e928b65e0207c646
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Nov 9 14:40:36 2022 +0800

    drivers: dio: fix possible memory leak in dio_init()
    
    [ Upstream commit e63e99397b2613d50a5f4f02ed07307e67a190f1 ]
    
    If device_register() returns error, the 'dev' and name needs be
    freed. Add a release function, and then call put_device() in the
    error path, so the name is freed in kobject_cleanup() and to the
    'dev' is freed in release function.
    
    Fixes: 2e4c77bea3d8 ("m68k: dio - Kill warn_unused_result warnings")
    Fixes: 1fa5ae857bb1 ("driver core: get rid of struct device's bus_id string array")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221109064036.1835346-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8985caf05891b943980ce9899ca58782fdd60c3
Author: Palmer Dabbelt <palmer@rivosinc.com>
Date:   Tue Nov 29 18:35:14 2022 -0800

    RISC-V: Align the shadow stack
    
    [ Upstream commit b003b3b77d65133a0011ae3b7b255347438c12f6 ]
    
    The standard RISC-V ABIs all require 16-byte stack alignment.  We're
    only calling that one function on the shadow stack so I doubt it'd
    result in a real issue, but might as well keep this lined up.
    
    Fixes: 31da94c25aea ("riscv: add VMAP_STACK overflow detection")
    Reviewed-by: Jisheng Zhang <jszhang@kernel.org>
    Link: https://lore.kernel.org/r/20221130023515.20217-1-palmer@rivosinc.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca48174a7643a7e6dd31c4338c5cde49552e138e
Author: Dragos Tatulea <dtatulea@nvidia.com>
Date:   Thu Dec 8 09:52:54 2022 +0200

    IB/IPoIB: Fix queue count inconsistency for PKEY child interfaces
    
    [ Upstream commit dbc94a0fb81771a38733c0e8f2ea8c4fa6934dc1 ]
    
    There are 2 ways to create IPoIB PKEY child interfaces:
    1) Writing a PKEY to /sys/class/net/<ib parent interface>/create_child.
    2) Using netlink with iproute.
    
    While with sysfs the child interface has the same number of tx and
    rx queues as the parent, with netlink there will always be 1 tx
    and 1 rx queue for the child interface. That's because the
    get_num_tx/rx_queues() netlink ops are missing and the default value
    of 1 is taken for the number of queues (in rtnl_create_link()).
    
    This change adds the get_num_tx/rx_queues() ops which allows for
    interfaces with multiple queues to be created over netlink. This
    constant only represents the max number of tx and rx queues on that
    net device.
    
    Fixes: 9baa0b036410 ("IB/ipoib: Add rtnl_link_ops support")
    Signed-off-by: Dragos Tatulea <dtatulea@nvidia.com>
    Link: https://lore.kernel.org/r/f4a42c8aa43c02d5ae5559a60c3e5e0f18c82531.1670485816.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82bd423ed977847652b2048b0f8dcf049b1847a9
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Dec 2 21:22:34 2022 +0800

    hwrng: geode - Fix PCI device refcount leak
    
    [ Upstream commit 9f6ec8dc574efb7f4f3d7ee9cd59ae307e78f445 ]
    
    for_each_pci_dev() is implemented by pci_get_device(). The comment of
    pci_get_device() says that it will increase the reference count for the
    returned pci_dev and also decrease the reference count for the input
    pci_dev @from if it is not NULL.
    
    If we break for_each_pci_dev() loop with pdev not NULL, we need to call
    pci_dev_put() to decrease the reference count. We add a new struct
    'amd_geode_priv' to record pointer of the pci_dev and membase, and then
    add missing pci_dev_put() for the normal and error path.
    
    Fixes: ef5d862734b8 ("[PATCH] Add Geode HW RNG driver")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b79a5e560779b35e1164d57ae35c48b43373082
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Dec 2 21:22:33 2022 +0800

    hwrng: amd - Fix PCI device refcount leak
    
    [ Upstream commit ecadb5b0111ea19fc7c240bb25d424a94471eb7d ]
    
    for_each_pci_dev() is implemented by pci_get_device(). The comment of
    pci_get_device() says that it will increase the reference count for the
    returned pci_dev and also decrease the reference count for the input
    pci_dev @from if it is not NULL.
    
    If we break for_each_pci_dev() loop with pdev not NULL, we need to call
    pci_dev_put() to decrease the reference count. Add the missing
    pci_dev_put() for the normal and error path.
    
    Fixes: 96d63c0297cc ("[PATCH] Add AMD HW RNG driver")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42cbff35f475b4c22403f5a00b0fc54b4f7c21c4
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Thu Dec 1 14:25:26 2022 +0800

    crypto: img-hash - Fix variable dereferenced before check 'hdev->req'
    
    [ Upstream commit 04ba54e5af8f8f0137b08cb51a0b3a2e1ea46c94 ]
    
    Smatch report warning as follows:
    
    drivers/crypto/img-hash.c:366 img_hash_dma_task() warn: variable
    dereferenced before check 'hdev->req'
    
    Variable dereferenced should be done after check 'hdev->req',
    fix it.
    
    Fixes: d358f1abbf71 ("crypto: img-hash - Add Imagination Technologies hw hash accelerator")
    Fixes: 10badea259fa ("crypto: img-hash - Fix null pointer exception")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9634f99b6d41b1ac31bd61fc2e889d30da66382
Author: Chengchang Tang <tangchengchang@huawei.com>
Date:   Sat Nov 26 18:29:10 2022 +0800

    RDMA/hns: Fix error code of CMD
    
    [ Upstream commit 667d6164b84884c64de3fc18670cd5a98b0b10cf ]
    
    The error code is fixed to EIO when CMD fails to excute. This patch
    converts the error status reported by firmware to linux errno.
    
    Fixes: a04ff739f2a9 ("RDMA/hns: Add command queue support for hip08 RoCE driver")
    Link: https://lore.kernel.org/r/20221126102911.2921820-6-xuhaoyue1@hisilicon.com
    Signed-off-by: Chengchang Tang <tangchengchang@huawei.com>
    Signed-off-by: Haoyue Xu <xuhaoyue1@hisilicon.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b06bb747ce1ff1840009e721238806ce42d5a762
Author: Chengchang Tang <tangchengchang@huawei.com>
Date:   Sat Nov 26 18:29:09 2022 +0800

    RDMA/hns: Fix page size cap from firmware
    
    [ Upstream commit 99dc5a0712883d5d13b620d25b3759d429577bc8 ]
    
    Add verification to make sure the roce page size cap is supported by the
    system page size.
    
    Fixes: ba6bb7e97421 ("RDMA/hns: Add interfaces to get pf capabilities from firmware")
    Link: https://lore.kernel.org/r/20221126102911.2921820-5-xuhaoyue1@hisilicon.com
    Signed-off-by: Chengchang Tang <tangchengchang@huawei.com>
    Signed-off-by: Haoyue Xu <xuhaoyue1@hisilicon.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c05c7cf25813a415001f8b9d07c1dcb10abfa03
Author: Chengchang Tang <tangchengchang@huawei.com>
Date:   Sat Nov 26 18:29:08 2022 +0800

    RDMA/hns: Fix PBL page MTR find
    
    [ Upstream commit 9fb39ef2ff3e18f1740625ba04093dfbef086d2b ]
    
    Now, The address of the first two pages in the MR will be searched, which
    use to speed up the lookup of the pbl table for hardware.  An exception
    will occur when there is only one page in this MR.  This patch fix the
    number of page to search.
    
    Fixes: 9b2cf76c9f05 ("RDMA/hns: Optimize PBL buffer allocation process")
    Link: https://lore.kernel.org/r/20221126102911.2921820-4-xuhaoyue1@hisilicon.com
    Signed-off-by: Chengchang Tang <tangchengchang@huawei.com>
    Signed-off-by: Haoyue Xu <xuhaoyue1@hisilicon.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa267c41921639b0137f0ae23f2fdf83c59134ff
Author: Chengchang Tang <tangchengchang@huawei.com>
Date:   Sat Nov 26 18:29:07 2022 +0800

    RDMA/hns: Fix AH attr queried by query_qp
    
    [ Upstream commit bc34c04f7b97c3794dec5a6d6d27ffd5f0e4f5c8 ]
    
    The queried AH attr is invalid. This patch fix it.
    
    This problem is found by rdma-core test test_mr_rereg_pd
    
    ERROR: test_mr_rereg_pd (tests.test_mr.MRTest)
    Test that cover rereg MR's PD with this flow:
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "./tests/test_mr.py", line 157, in test_mr_rereg_pd
        self.restate_qps()
      File "./tests/test_mr.py", line 113, in restate_qps
        self.server.qp.to_rts(self.server_qp_attr)
      File "qp.pyx", line 1137, in pyverbs.qp.QP.to_rts
      File "qp.pyx", line 1123, in pyverbs.qp.QP.to_rtr
    pyverbs.pyverbs_error.PyverbsRDMAError: Failed to modify QP state to RTR.
    Errno: 22, Invalid argument
    
    Fixes: 926a01dc000d ("RDMA/hns: Add QP operations support for hip08 SoC")
    Link: https://lore.kernel.org/r/20221126102911.2921820-3-xuhaoyue1@hisilicon.com
    Signed-off-by: Chengchang Tang <tangchengchang@huawei.com>
    Signed-off-by: Haoyue Xu <xuhaoyue1@hisilicon.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e27fb26e75cf1e5a6c6a9f18ca571d5b2d0c55c5
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Tue Oct 18 12:40:04 2022 +0800

    orangefs: Fix sysfs not cleanup when dev init failed
    
    [ Upstream commit ea60a4ad0cf88b411cde6888b8c890935686ecd7 ]
    
    When the dev init failed, should cleanup the sysfs, otherwise, the
    module will never be loaded since can not create duplicate sysfs
    directory:
    
      sysfs: cannot create duplicate filename '/fs/orangefs'
    
      CPU: 1 PID: 6549 Comm: insmod Tainted: G        W          6.0.0+ #44
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33 04/01/2014
      Call Trace:
       <TASK>
       dump_stack_lvl+0x34/0x44
       sysfs_warn_dup.cold+0x17/0x24
       sysfs_create_dir_ns+0x16d/0x180
       kobject_add_internal+0x156/0x3a0
       kobject_init_and_add+0xcf/0x120
       orangefs_sysfs_init+0x7e/0x3a0 [orangefs]
       orangefs_init+0xfe/0x1000 [orangefs]
       do_one_initcall+0x87/0x2a0
       do_init_module+0xdf/0x320
       load_module+0x2f98/0x3330
       __do_sys_finit_module+0x113/0x1b0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
      kobject_add_internal failed for orangefs with -EEXIST, don't try to register things with the same name in the same directory.
    
    Fixes: 2f83ace37181 ("orangefs: put register_chrdev immediately before register_filesystem")
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Mike Marshall <hubcap@omnibond.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e9c395ef2d52975b2c2894d2da09d6db2958bc6
Author: John Thomson <git@johnthomson.fastmail.com.au>
Date:   Tue Dec 6 06:46:45 2022 +1000

    PCI: mt7621: Add sentinel to quirks table
    
    [ Upstream commit 19098934f910b4d47cb30251dd39ffa57bef9523 ]
    
    Current driver is missing a sentinel in the struct soc_device_attribute
    array, which causes an oops when assessed by the
    soc_device_match(mt7621_pcie_quirks_match) call.
    
    This was only exposed once the CONFIG_SOC_MT7621 mt7621 soc_dev_attr
    was fixed to register the SOC as a device, in:
    
    commit 7c18b64bba3b ("mips: ralink: mt7621: do not use kzalloc too early")
    
    Fix it by adding the required sentinel.
    
    Link: https://lore.kernel.org/lkml/26ebbed1-0fe9-4af9-8466-65f841d0b382@app.fastmail.com
    Link: https://lore.kernel.org/r/20221205204645.301301-1-git@johnthomson.fastmail.com.au
    Fixes: b483b4e4d3f6 ("staging: mt7621-pci: add quirks for 'E2' revision using 'soc_device_attribute'")
    Signed-off-by: John Thomson <git@johnthomson.fastmail.com.au>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Acked-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcc65c2e2a06a793d162719f1e22c573e63ef7a8
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Wed Dec 22 19:10:48 2021 -0600

    PCI: mt7621: Rename mt7621_pci_ to mt7621_pcie_
    
    [ Upstream commit 4793895f597d42eb54a0f54711b61263b6a8dd03 ]
    
    Rename mt7621_pci_* structs and functions to mt7621_pcie_* for consistency
    with the rest of the file.
    
    Link: https://lore.kernel.org/r/20211223011054.1227810-18-helgaas@kernel.org
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Cc: Matthias Brugger <matthias.bgg@gmail.com>
    Stable-dep-of: 19098934f910 ("PCI: mt7621: Add sentinel to quirks table")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a7eab1cc4361ec72cf7571d4ae097dce2b1884d
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Dec 2 12:00:38 2022 +0800

    RDMA/srp: Fix error return code in srp_parse_options()
    
    [ Upstream commit ed461b30b22c8fa85c25189c14cb89f29595cd14 ]
    
    In the previous iteration of the while loop, the "ret" may have been
    assigned a value of 0, so the error return code -EINVAL may have been
    incorrectly set to 0. To fix set valid return code before calling to
    goto. Also investigate each case separately as Andy suggessted.
    
    Fixes: e711f968c49c ("IB/srp: replace custom implementation of hex2bin()")
    Fixes: 2a174df0c602 ("IB/srp: Use kstrtoull() instead of simple_strtoull()")
    Fixes: 19f313438c77 ("IB/srp: Add RDMA/CM support")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Link: https://lore.kernel.org/r/1669953638-11747-2-git-send-email-wangyufen@huawei.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63011001792c9cf1b5650229d3b01406804fcee9
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Dec 2 12:00:37 2022 +0800

    RDMA/hfi1: Fix error return code in parse_platform_config()
    
    [ Upstream commit 725349f8ba1e78a146c6ff8f3ee5e2712e517106 ]
    
    In the previous iteration of the while loop, the "ret" may have been
    assigned a value of 0, so the error return code -EINVAL may have been
    incorrectly set to 0. To fix set valid return code before calling to
    goto.
    
    Fixes: 97167e813415 ("staging/rdma/hfi1: Tune for unknown channel if configuration file is absent")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Link: https://lore.kernel.org/r/1669953638-11747-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 339ca035af436dfc5448a92e661eddc4fb62ef8e
Author: Tong Tiangen <tongtiangen@huawei.com>
Date:   Mon Oct 24 09:47:25 2022 +0000

    riscv/mm: add arch hook arch_clear_hugepage_flags
    
    [ Upstream commit d8bf77a1dc3079692f54be3087a5fd16d90027b0 ]
    
    With the PG_arch_1 we keep track if the page's data cache is clean,
    architecture rely on this property to treat new pages as dirty with
    respect to the data cache and perform the flushing before mapping the pages
    into userspace.
    
    This patch adds a new architecture hook, arch_clear_hugepage_flags,so that
    architectures which rely on the page flags being in a particular state for
    fresh allocations can adjust the flags accordingly when a page is freed
    into the pool.
    
    Fixes: 9e953cda5cdf ("riscv: Introduce huge page support for 32/64bit kernel")
    Signed-off-by: Tong Tiangen <tongtiangen@huawei.com>
    Link: https://lore.kernel.org/r/20221024094725.3054311-3-tongtiangen@huawei.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20d363dcd6dc00cf89dddfe38da1b20d921200b8
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Thu Nov 24 14:49:40 2022 +0800

    crypto: omap-sham - Use pm_runtime_resume_and_get() in omap_sham_probe()
    
    [ Upstream commit 7bcceb4c9896b1b672b636ae70fe75110d6bf1ad ]
    
    omap_sham_probe() calls pm_runtime_get_sync() and calls
    pm_runtime_put_sync() latter to put usage_counter. However,
    pm_runtime_get_sync() will increment usage_counter even it failed. Fix
    it by replacing it with pm_runtime_resume_and_get() to keep usage
    counter balanced.
    
    Fixes: b359f034c8bf ("crypto: omap-sham - Convert to use pm_runtime API")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Acked-by: Mark Greer <mgreer@animalcreek.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 815b65d714f82c68199d37d10fa55af16fe8f5e6
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Nov 22 22:56:19 2022 +0100

    crypto: amlogic - Remove kcalloc without check
    
    [ Upstream commit 3d780c8a9850ad60dee47a8d971ba7888f3d1bd3 ]
    
    There is no real point in allocating dedicated memory for the irqs array.
    MAXFLOW is only 2, so it is easier to allocated the needed space
    directly within the 'meson_dev' structure.
    
    This saves some memory allocation and avoids an indirection when using the
    irqs array.
    
    Fixes: 48fe583fe541 ("crypto: amlogic - Add crypto accelerator...")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af71199291dbb23fe2d6fce8555b3b310b28e7d5
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Mon Nov 28 13:52:46 2022 +0200

    RDMA/nldev: Fix failure to send large messages
    
    [ Upstream commit fc8f93ad3e5485d45c992233c96acd902992dfc4 ]
    
    Return "-EMSGSIZE" instead of "-EINVAL" when filling a QP entry, so that
    new SKBs will be allocated if there's not enough room in current SKB.
    
    Fixes: 65959522f806 ("RDMA: Add support to dump resource tracker in RAW format")
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Reviewed-by: Patrisious Haddad <phaddad@nvidia.com>
    Link: https://lore.kernel.org/r/b5e9c62f6b8369acab5648b661bf539cbceeffdc.1669636336.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb895786a49df295835d6129e0cb207f75e6736a
Author: Yonggil Song <yonggil.song@samsung.com>
Date:   Tue Nov 22 18:03:20 2022 +0900

    f2fs: avoid victim selection from previous victim section
    
    [ Upstream commit e219aecfd4b766c4e878a3769057e9809f7fcadc ]
    
    When f2fs chooses GC victim in large section & LFS mode,
    next_victim_seg[gc_type] is referenced first. After segment is freed,
    next_victim_seg[gc_type] has the next segment number.
    However, next_victim_seg[gc_type] still has the last segment number
    even after the last segment of section is freed. In this case, when f2fs
    chooses a victim for the next GC round, the last segment of previous victim
    section is chosen as a victim.
    
    Initialize next_victim_seg[gc_type] to NULL_SEGNO for the last segment in
    large section.
    
    Fixes: e3080b0120a1 ("f2fs: support subsectional garbage collection")
    Signed-off-by: Yonggil Song <yonggil.song@samsung.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 655e955debdeb6424788dc0966dc5c500c0defe9
Author: Yuan Can <yuancan@huawei.com>
Date:   Sat Nov 26 04:34:10 2022 +0000

    RDMA/nldev: Add checks for nla_nest_start() in fill_stat_counter_qps()
    
    [ Upstream commit ea5ef136e215fdef35f14010bc51fcd6686e6922 ]
    
    As the nla_nest_start() may fail with NULL returned, the return value needs
    to be checked.
    
    Fixes: c4ffee7c9bdb ("RDMA/netlink: Implement counter dumpit calback")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Link: https://lore.kernel.org/r/20221126043410.85632-1-yuancan@huawei.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1895e908b3ae66a5312fd1b2cdda2da82993dca7
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Thu Nov 17 11:51:00 2022 +0800

    scsi: snic: Fix possible UAF in snic_tgt_create()
    
    [ Upstream commit e118df492320176af94deec000ae034cc92be754 ]
    
    Smatch reports a warning as follows:
    
    drivers/scsi/snic/snic_disc.c:307 snic_tgt_create() warn:
      '&tgt->list' not removed from list
    
    If device_add() fails in snic_tgt_create(), tgt will be freed, but
    tgt->list will not be removed from snic->disc.tgt_list, then list traversal
    may cause UAF.
    
    Remove from snic->disc.tgt_list before free().
    
    Fixes: c8806b6c9e82 ("snic: driver for Cisco SCSI HBA")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Link: https://lore.kernel.org/r/20221117035100.2944812-1-cuigaosheng1@huawei.com
    Acked-by: Narsimhulu Musini <nmusini@cisco.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09a60f908d8b6497f618113b7c3c31267dc90911
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Tue Nov 15 17:24:42 2022 +0800

    scsi: fcoe: Fix transport not deattached when fcoe_if_init() fails
    
    [ Upstream commit 4155658cee394b22b24c6d64e49247bf26d95b92 ]
    
    fcoe_init() calls fcoe_transport_attach(&fcoe_sw_transport), but when
    fcoe_if_init() fails, &fcoe_sw_transport is not detached and leaves freed
    &fcoe_sw_transport on fcoe_transports list. This causes panic when
    reinserting module.
    
     BUG: unable to handle page fault for address: fffffbfff82e2213
     RIP: 0010:fcoe_transport_attach+0xe1/0x230 [libfcoe]
     Call Trace:
      <TASK>
      do_one_initcall+0xd0/0x4e0
      load_module+0x5eee/0x7210
      ...
    
    Fixes: 78a582463c1e ("[SCSI] fcoe: convert fcoe.ko to become an fcoe transport provider driver")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Link: https://lore.kernel.org/r/20221115092442.133088-1-chenzhongjin@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e59da172059f05c594fda03a9e8a3a0e1f5116c0
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Sun Nov 13 14:45:13 2022 +0800

    scsi: ipr: Fix WARNING in ipr_init()
    
    [ Upstream commit e6f108bffc3708ddcff72324f7d40dfcd0204894 ]
    
    ipr_init() will not call unregister_reboot_notifier() when
    pci_register_driver() fails, which causes a WARNING. Call
    unregister_reboot_notifier() when pci_register_driver() fails.
    
    notifier callback ipr_halt [ipr] already registered
    WARNING: CPU: 3 PID: 299 at kernel/notifier.c:29
    notifier_chain_register+0x16d/0x230
    Modules linked in: ipr(+) xhci_pci_renesas xhci_hcd ehci_hcd usbcore
    led_class gpu_sched drm_buddy video wmi drm_ttm_helper ttm
    drm_display_helper drm_kms_helper drm drm_panel_orientation_quirks
    agpgart cfbft
    CPU: 3 PID: 299 Comm: modprobe Tainted: G        W
    6.1.0-rc1-00190-g39508d23b672-dirty #332
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014
    RIP: 0010:notifier_chain_register+0x16d/0x230
    Call Trace:
     <TASK>
     __blocking_notifier_chain_register+0x73/0xb0
     ipr_init+0x30/0x1000 [ipr]
     do_one_initcall+0xdb/0x480
     do_init_module+0x1cf/0x680
     load_module+0x6a50/0x70a0
     __do_sys_finit_module+0x12f/0x1c0
     do_syscall_64+0x3f/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Fixes: f72919ec2bbb ("[SCSI] ipr: implement shutdown changes and remove obsolete write cache parameter")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Link: https://lore.kernel.org/r/20221113064513.14028-1-shangxiaojing@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c444f58fdad6a55312b811dc993da5af9ef58a93
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Nov 12 21:10:10 2022 +0800

    scsi: scsi_debug: Fix possible name leak in sdebug_add_host_helper()
    
    [ Upstream commit e6d773f93a49e0eda88a903a2a6542ca83380eb1 ]
    
    Afer commit 1fa5ae857bb1 ("driver core: get rid of struct device's bus_id
    string array"), the name of device is allocated dynamically, it needs be
    freed when device_register() returns error.
    
    As comment of device_register() says, one should use put_device() to give
    up the reference in the error path. Fix this by calling put_device(), then
    the name can be freed in kobject_cleanup(), and sdbg_host is freed in
    sdebug_release_adapter().
    
    When the device release is not set, it means the device is not initialized.
    We can not call put_device() in this case. Use kfree() to free memory.
    
    Fixes: 1fa5ae857bb1 ("driver core: get rid of struct device's bus_id string array")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221112131010.3757845-1-yangyingliang@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e4968dfb5fa1a5266374a8d5134451a7fb60224
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Nov 12 17:43:10 2022 +0800

    scsi: fcoe: Fix possible name leak when device_register() fails
    
    [ Upstream commit 47b6a122c7b69a876c7ee2fc064a26b09627de9d ]
    
    If device_register() returns an error, the name allocated by dev_set_name()
    needs to be freed. As the comment of device_register() says, one should use
    put_device() to give up the reference in the error path. Fix this by
    calling put_device(), then the name can be freed in kobject_cleanup().
    
    The 'fcf' is freed in fcoe_fcf_device_release(), so the kfree() in the
    error path can be removed.
    
    The 'ctlr' is freed in fcoe_ctlr_device_release(), so don't use the error
    label, just return NULL after calling put_device().
    
    Fixes: 9a74e884ee71 ("[SCSI] libfcoe: Add fcoe_sysfs")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221112094310.3633291-1-yangyingliang@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f5006d7d13b0d97db23f2225551f8828e51059e
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Fri Nov 11 23:06:12 2022 -0800

    scsi: scsi_debug: Fix a warning in resp_report_zones()
    
    [ Upstream commit 07f2ca139d9a7a1ba71c4c03997c8de161db2346 ]
    
    As 'alloc_len' is user controlled data, if user tries to allocate memory
    larger than(>=) MAX_ORDER, then kcalloc() will fail, it creates a stack
    trace and messes up dmesg with a warning.
    
    Add __GFP_NOWARN in order to avoid too large allocation warning.  This is
    detected by static analysis using smatch.
    
    Fixes: 7db0e0c8190a ("scsi: scsi_debug: Fix buffer size of REPORT ZONES command")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Link: https://lore.kernel.org/r/20221112070612.2121535-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2432719b1afcdd74c5dde9065e7d3ae3bbb8014a
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Fri Nov 11 23:00:31 2022 -0800

    scsi: scsi_debug: Fix a warning in resp_verify()
    
    [ Upstream commit ed0f17b748b20271cb568c7ca0b23b120316a47d ]
    
    As 'vnum' is controlled by user, so if user tries to allocate memory larger
    than(>=) MAX_ORDER, then kcalloc() will fail, it creates a stack trace and
    messes up dmesg with a warning.
    
    Add __GFP_NOWARN in order to avoid too large allocation warning.  This is
    detected by static analysis using smatch.
    
    Fixes: c3e2fe9222d4 ("scsi: scsi_debug: Implement VERIFY(10), add VERIFY(16)")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Link: https://lore.kernel.org/r/20221112070031.2121068-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 038359eeccffaf0de4c1c9c51ee19cc5649619a1
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Fri Nov 11 15:40:46 2022 +0800

    scsi: efct: Fix possible memleak in efct_device_init()
    
    [ Upstream commit bb0cd225dd37df1f4a22e36dad59ff33178ecdfc ]
    
    In efct_device_init(), when efct_scsi_reg_fc_transport() fails,
    efct_scsi_tgt_driver_exit() is not called to release memory for
    efct_scsi_tgt_driver_init() and causes memleak:
    
    unreferenced object 0xffff8881020ce000 (size 2048):
      comm "modprobe", pid 465, jiffies 4294928222 (age 55.872s)
      backtrace:
        [<0000000021a1ef1b>] kmalloc_trace+0x27/0x110
        [<000000004c3ed51c>] target_register_template+0x4fd/0x7b0 [target_core_mod]
        [<00000000f3393296>] efct_scsi_tgt_driver_init+0x18/0x50 [efct]
        [<00000000115de533>] 0xffffffffc0d90011
        [<00000000d608f646>] do_one_initcall+0xd0/0x4e0
        [<0000000067828cf1>] do_init_module+0x1cc/0x6a0
        ...
    
    Fixes: 4df84e846624 ("scsi: elx: efct: Driver initialization routines")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Link: https://lore.kernel.org/r/20221111074046.57061-1-chenzhongjin@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23053a79264754c7485068dbe5ca8a1a57d22465
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 11 12:30:12 2022 +0800

    scsi: hpsa: Fix possible memory leak in hpsa_add_sas_device()
    
    [ Upstream commit fda34a5d304d0b98cc967e8763b52221b66dc202 ]
    
    If hpsa_sas_port_add_rphy() returns an error, the 'rphy' allocated in
    sas_end_device_alloc() needs to be freed. Address this by calling
    sas_rphy_free() in the error path.
    
    Fixes: d04e62b9d63a ("hpsa: add in sas transport class")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221111043012.1074466-1-yangyingliang@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ab6d5927c7b526957457df3eea5e23afaef031c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Nov 10 23:11:29 2022 +0800

    scsi: hpsa: Fix error handling in hpsa_add_sas_host()
    
    [ Upstream commit 4ef174a3ad9b5d73c1b6573e244ebba2b0d86eac ]
    
    hpsa_sas_port_add_phy() does:
      ...
      sas_phy_add()  -> may return error here
      sas_port_add_phy()
      ...
    
    Whereas hpsa_free_sas_phy() does:
      ...
      sas_port_delete_phy()
      sas_phy_delete()
      ...
    
    If hpsa_sas_port_add_phy() returns an error, hpsa_free_sas_phy() can not be
    called to free the memory because the port and the phy have not been added
    yet.
    
    Replace hpsa_free_sas_phy() with sas_phy_free() and kfree() to avoid kernel
    crash in this case.
    
    Fixes: d04e62b9d63a ("hpsa: add in sas transport class")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221110151129.394389-1-yangyingliang@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a92129c8f999ff5b122c100ce7f625eb3e98c4b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Nov 9 11:24:03 2022 +0800

    scsi: mpt3sas: Fix possible resource leaks in mpt3sas_transport_port_add()
    
    [ Upstream commit 78316e9dfc24906dd474630928ed1d3c562b568e ]
    
    In mpt3sas_transport_port_add(), if sas_rphy_add() returns error,
    sas_rphy_free() needs be called to free the resource allocated in
    sas_end_device_alloc(). Otherwise a kernel crash will happen:
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000000000000108
    CPU: 45 PID: 37020 Comm: bash Kdump: loaded Tainted: G        W          6.1.0-rc1+ #189
    pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    pc : device_del+0x54/0x3d0
    lr : device_del+0x37c/0x3d0
    Call trace:
     device_del+0x54/0x3d0
     attribute_container_class_device_del+0x28/0x38
     transport_remove_classdev+0x6c/0x80
     attribute_container_device_trigger+0x108/0x110
     transport_remove_device+0x28/0x38
     sas_rphy_remove+0x50/0x78 [scsi_transport_sas]
     sas_port_delete+0x30/0x148 [scsi_transport_sas]
     do_sas_phy_delete+0x78/0x80 [scsi_transport_sas]
     device_for_each_child+0x68/0xb0
     sas_remove_children+0x30/0x50 [scsi_transport_sas]
     sas_rphy_remove+0x38/0x78 [scsi_transport_sas]
     sas_port_delete+0x30/0x148 [scsi_transport_sas]
     do_sas_phy_delete+0x78/0x80 [scsi_transport_sas]
     device_for_each_child+0x68/0xb0
     sas_remove_children+0x30/0x50 [scsi_transport_sas]
     sas_remove_host+0x20/0x38 [scsi_transport_sas]
     scsih_remove+0xd8/0x420 [mpt3sas]
    
    Because transport_add_device() is not called when sas_rphy_add() fails, the
    device is not added. When sas_rphy_remove() is subsequently called to
    remove the device in the remove() path, a NULL pointer dereference happens.
    
    Fixes: f92363d12359 ("[SCSI] mpt3sas: add new driver supporting 12GB SAS")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221109032403.1636422-1-yangyingliang@huawei.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26c0f7e1ac9249b4876affd6db020c745bc877b0
Author: Daniel Jordan <daniel.m.jordan@oracle.com>
Date:   Wed Nov 16 20:28:04 2022 -0500

    padata: Fix list iterator in padata_do_serial()
    
    [ Upstream commit 57ddfecc72a6c9941d159543e1c0c0a74fe9afdd ]
    
    list_for_each_entry_reverse() assumes that the iterated list is nonempty
    and that every list_head is embedded in the same type, but its use in
    padata_do_serial() breaks both rules.
    
    This doesn't cause any issues now because padata_priv and padata_list
    happen to have their list fields at the same offset, but we really
    shouldn't be relying on that.
    
    Fixes: bfde23ce200e ("padata: unbind parallel jobs from specific CPUs")
    Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17afa98bccec4f52203508b3f49b5f948c6fd6ac
Author: Daniel Jordan <daniel.m.jordan@oracle.com>
Date:   Wed Nov 16 20:28:02 2022 -0500

    padata: Always leave BHs disabled when running ->parallel()
    
    [ Upstream commit 34c3a47d20ae55b3600fed733bf96eafe9c500d5 ]
    
    A deadlock can happen when an overloaded system runs ->parallel() in the
    context of the current task:
    
        padata_do_parallel
          ->parallel()
            pcrypt_aead_enc/dec
              padata_do_serial
                spin_lock(&reorder->lock) // BHs still enabled
                  <interrupt>
                    ...
                      __do_softirq
                        ...
                          padata_do_serial
                            spin_lock(&reorder->lock)
    
    It's a bug for BHs to be on in _do_serial as Steffen points out, so
    ensure they're off in the "current task" case like they are in
    padata_parallel_worker to avoid this situation.
    
    Reported-by: syzbot+bc05445bc14148d51915@syzkaller.appspotmail.com
    Fixes: 4611ce224688 ("padata: allocate work structures for parallel jobs from a pool")
    Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 221afb2a1b8de9c32cd6e5feb3405372031172b4
Author: Zhang Yiqun <zhangyiqun@phytium.com.cn>
Date:   Wed Nov 16 17:24:11 2022 +0800

    crypto: tcrypt - Fix multibuffer skcipher speed test mem leak
    
    [ Upstream commit 1aa33fc8d4032227253ceb736f47c52b859d9683 ]
    
    In the past, the data for mb-skcipher test has been allocated
    twice, that means the first allcated memory area is without
    free, which may cause a potential memory leakage. So this
    patch is to remove one allocation to fix this error.
    
    Fixes: e161c5930c15 ("crypto: tcrypt - add multibuf skcipher...")
    Signed-off-by: Zhang Yiqun <zhangyiqun@phytium.com.cn>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfe10a1d9fbccdf39f8449d62509f070d8aaaac1
Author: Yuan Can <yuancan@huawei.com>
Date:   Tue Nov 22 01:57:51 2022 +0000

    scsi: hpsa: Fix possible memory leak in hpsa_init_one()
    
    [ Upstream commit 9c9ff300e0de07475796495d86f449340d454a0c ]
    
    The hpda_alloc_ctlr_info() allocates h and its field reply_map. However, in
    hpsa_init_one(), if alloc_percpu() failed, the hpsa_init_one() jumps to
    clean1 directly, which frees h and leaks the h->reply_map.
    
    Fix by calling hpda_free_ctlr_info() to release h->replay_map and h instead
    free h directly.
    
    Fixes: 8b834bff1b73 ("scsi: hpsa: fix selection of reply queue")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Link: https://lore.kernel.org/r/20221122015751.87284-1-yuancan@huawei.com
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38ef0c0b09734dc301e70f9a5b14759bc4999e07
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Sun Nov 13 22:12:43 2022 +0300

    dt-bindings: visconti-pcie: Fix interrupts array max constraints
    
    [ Upstream commit 4cf4b9b70ab2785461190c08a3542d2d74c28b46 ]
    
    In accordance with the way the device DT-node is actually defined in
    arch/arm64/boot/dts/toshiba/tmpv7708.dtsi and the way the device is probed
    by the DW PCIe driver there are two IRQs it actually has. It's MSI IRQ the
    DT-bindings lack. Let's extend the interrupts property constraints then
    and fix the schema example so one would be acceptable by the actual device
    DT-bindings.
    
    Link: https://lore.kernel.org/r/20221113191301.5526-3-Sergey.Semin@baikalelectronics.ru
    Fixes: 17c1b16340f0 ("dt-bindings: pci: Add DT binding for Toshiba Visconti PCIe controller")
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Acked-by: Rob Herring <robh@kernel.org>
    Acked-by: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83aad8111bcf26c92689ab88a72e276ae450a217
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Sun Nov 13 22:12:42 2022 +0300

    dt-bindings: imx6q-pcie: Fix clock names for imx6sx and imx8mq
    
    [ Upstream commit b8a83e600bdde93e7da41ea3204b2b3832a3c99b ]
    
    Originally as it was defined the legacy bindings the pcie_inbound_axi and
    pcie_aux clock names were supposed to be used in the fsl,imx6sx-pcie and
    fsl,imx8mq-pcie devices respectively. But the bindings conversion has been
    incorrectly so now the fourth clock name is defined as "pcie_inbound_axi
    for imx6sx-pcie, pcie_aux for imx8mq-pcie", which is completely wrong.
    Let's fix that by conditionally apply the clock-names constraints based on
    the compatible string content.
    
    Link: https://lore.kernel.org/r/20221113191301.5526-2-Sergey.Semin@baikalelectronics.ru
    Fixes: 751ca492f131 ("dt-bindings: PCI: imx6: convert the imx pcie controller to dtschema")
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Acked-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f64f08b9e6fb305a25dd75329e06ae342b9ce336
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Tue Nov 22 23:14:37 2022 +0800

    RDMA/rxe: Fix NULL-ptr-deref in rxe_qp_do_cleanup() when socket create failed
    
    [ Upstream commit f67376d801499f4fa0838c18c1efcad8840e550d ]
    
    There is a null-ptr-deref when mount.cifs over rdma:
    
      BUG: KASAN: null-ptr-deref in rxe_qp_do_cleanup+0x2f3/0x360 [rdma_rxe]
      Read of size 8 at addr 0000000000000018 by task mount.cifs/3046
    
      CPU: 2 PID: 3046 Comm: mount.cifs Not tainted 6.1.0-rc5+ #62
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc3
      Call Trace:
       <TASK>
       dump_stack_lvl+0x34/0x44
       kasan_report+0xad/0x130
       rxe_qp_do_cleanup+0x2f3/0x360 [rdma_rxe]
       execute_in_process_context+0x25/0x90
       __rxe_cleanup+0x101/0x1d0 [rdma_rxe]
       rxe_create_qp+0x16a/0x180 [rdma_rxe]
       create_qp.part.0+0x27d/0x340
       ib_create_qp_kernel+0x73/0x160
       rdma_create_qp+0x100/0x230
       _smbd_get_connection+0x752/0x20f0
       smbd_get_connection+0x21/0x40
       cifs_get_tcp_session+0x8ef/0xda0
       mount_get_conns+0x60/0x750
       cifs_mount+0x103/0xd00
       cifs_smb3_do_mount+0x1dd/0xcb0
       smb3_get_tree+0x1d5/0x300
       vfs_get_tree+0x41/0xf0
       path_mount+0x9b3/0xdd0
       __x64_sys_mount+0x190/0x1d0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    The root cause of the issue is the socket create failed in
    rxe_qp_init_req().
    
    So move the reset rxe_qp_do_cleanup() after the NULL ptr check.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20221122151437.1057671-1-zhangxiaoxu5@huawei.com
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35f9cd060e68ff910e49bf37b1b0d336a311849a
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Sat Nov 19 15:08:34 2022 +0800

    RDMA/hns: fix memory leak in hns_roce_alloc_mr()
    
    [ Upstream commit a115aa00b18f7b8982b8f458149632caf64a862a ]
    
    When hns_roce_mr_enable() failed in hns_roce_alloc_mr(), mr_key is not
    released. Compiled test only.
    
    Fixes: 9b2cf76c9f05 ("RDMA/hns: Optimize PBL buffer allocation process")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Link: https://lore.kernel.org/r/20221119070834.48502-1-shaozhengchao@huawei.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d5220a553decabbf4931c860369402b2934352b
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Nov 21 18:22:36 2022 +0100

    crypto: ccree - Make cc_debugfs_global_fini() available for module init function
    
    [ Upstream commit 8e96729fc26c8967db45a3fb7a60387619f77a22 ]
    
    ccree_init() calls cc_debugfs_global_fini(), the former is an init
    function and the latter an exit function though.
    
    A modular build emits:
    
            WARNING: modpost: drivers/crypto/ccree/ccree.o: section mismatch in reference: init_module (section: .init.text) -> cc_debugfs_global_fini (section: .exit.text)
    
    (with CONFIG_DEBUG_SECTION_MISMATCH=y).
    
    Fixes: 4f1c596df706 ("crypto: ccree - Remove debugfs when platform_driver_register failed")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e9cf3e7831103059193ff3dff69db60138190ca
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Thu Nov 17 21:15:46 2022 +0800

    RDMA/hfi: Decrease PCI device reference count in error path
    
    [ Upstream commit 9b51d072da1d27e1193e84708201c48e385ad912 ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev, and also decrease the reference count for the input parameter
    *from* if it is not NULL.
    
    If we break out the loop in node_affinity_init() with 'dev' not NULL, we
    need to call pci_dev_put() to decrease the reference count. Add missing
    pci_dev_put() in error path.
    
    Fixes: c513de490f80 ("IB/hfi1: Invalid NUMA node information can cause a divide by zero")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Link: https://lore.kernel.org/r/20221117131546.113280-1-wangxiongfeng2@huawei.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f476d639c89775007d7865a025b2ac7faa1c4e1
Author: Zeng Heng <zengheng4@huawei.com>
Date:   Mon Nov 21 10:00:29 2022 +0800

    PCI: Check for alloc failure in pci_request_irq()
    
    [ Upstream commit 2d9cd957d40c3ac491b358e7cff0515bb07a3a9c ]
    
    When kvasprintf() fails to allocate memory, it returns a NULL pointer.
    Return error from pci_request_irq() so we don't dereference it.
    
    [bhelgaas: commit log]
    Fixes: 704e8953d3e9 ("PCI/irq: Add pci_request_irq() and pci_free_irq() helpers")
    Link: https://lore.kernel.org/r/20221121020029.3759444-1-zengheng4@huawei.com
    Signed-off-by: Zeng Heng <zengheng4@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49bc2be8975972ada5ab1425da93f8cd8748c127
Author: Luoyouming <luoyouming@huawei.com>
Date:   Tue Nov 8 21:38:46 2022 +0800

    RDMA/hns: Fix ext_sge num error when post send
    
    [ Upstream commit 8eaa6f7d569b4a22bfc1b0a3fdfeeb401feb65a4 ]
    
    In the HNS ROCE driver, The sge is divided into standard sge and extended
    sge.  There are 2 standard sge in RC/XRC, and the UD standard sge is 0.
    In the scenario of RC SQ inline, if the data does not exceed 32bytes, the
    standard sge will be used. If it exceeds, only the extended sge will be
    used to fill the data.
    
    Currently, when filling the extended sge, max_gs is directly used as the
    number of the extended sge, which did not subtract the number of standard
    sge.  There is a logical error. The new algorithm subtracts the number of
    standard sge from max_gs to get the actual number of extended sge.
    
    Fixes: 30b707886aeb ("RDMA/hns: Support inline data in extented sge space for RC")
    Link: https://lore.kernel.org/r/20221108133847.2304539-2-xuhaoyue1@hisilicon.com
    Signed-off-by: Luoyouming <luoyouming@huawei.com>
    Signed-off-by: Haoyue Xu <xuhaoyue1@hisilicon.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e6160d79db754086fca5d3e40f8162d48fb79c9
Author: Luoyouming <luoyouming@huawei.com>
Date:   Thu Sep 22 20:33:13 2022 +0800

    RDMA/hns: Repacing 'dseg_len' by macros in fill_ext_sge_inl_data()
    
    [ Upstream commit 3b1f864c904915b3baebffb31ea05ee704b0df3c ]
    
    The sge size is known to be constant, so it's unnecessary to use sizeof to
    calculate.
    
    Link: https://lore.kernel.org/r/20220922123315.3732205-11-xuhaoyue1@hisilicon.com
    Signed-off-by: Luoyouming <luoyouming@huawei.com>
    Signed-off-by: Haoyue Xu <xuhaoyue1@hisilicon.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Stable-dep-of: 8eaa6f7d569b ("RDMA/hns: Fix ext_sge num error when post send")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5ea48788ed60d7558d7e77ad8bb349afbe078d3
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Nov 11 18:00:36 2022 +0800

    crypto: hisilicon/qm - add missing pci_dev_put() in q_num_set()
    
    [ Upstream commit cc7710d0d4ebc6998f04035cde4f32c5ddbe9d7f ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev. We need to use pci_dev_put() to decrease the reference count
    before q_num_set() returns.
    
    Fixes: c8b4b477079d ("crypto: hisilicon - add HiSilicon HPRE accelerator")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Reviewed-by: Weili Qian <qianweili@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 442caec12f4f1fe093500fc5f630c8752925a507
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Nov 11 17:59:17 2022 +0800

    crypto: cryptd - Use request context instead of stack for sub-request
    
    [ Upstream commit 3a58c231172537f7b0e19d93ed33decd04f80eab ]
    
    cryptd is buggy as it tries to use sync_skcipher without going
    through the proper sync_skcipher interface.  In fact it doesn't
    even need sync_skcipher since it's already a proper skcipher and
    can easily access the request context instead of using something
    off the stack.
    
    Fixes: 36b3875a97b8 ("crypto: cryptd - Remove VLA usage of skcipher")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab677729fc5c7e6696edfb2af0814ceed6859ecf
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Tue Nov 8 16:29:12 2022 +0800

    crypto: ccree - Remove debugfs when platform_driver_register failed
    
    [ Upstream commit 4f1c596df706c9aca662b6c214fad84047ae2a97 ]
    
    When platform_driver_register failed, we need to remove debugfs,
    which will caused a resource leak, fix it.
    
    Failed logs as follows:
    [   32.606488] debugfs: Directory 'ccree' with parent '/' already present!
    
    Fixes: 4c3f97276e15 ("crypto: ccree - introduce CryptoCell driver")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0328ca389a805c96b76d1285c6a05d2f5dfa7e5f
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Fri Nov 11 02:05:25 2022 -0800

    scsi: scsi_debug: Fix a warning in resp_write_scat()
    
    [ Upstream commit 216e179724c1d9f57a8ababf8bd7aaabef67f01b ]
    
    As 'lbdof_blen' is coming from user, if the size in kzalloc() is >=
    MAX_ORDER then we hit a warning.
    
    Call trace:
    
    sg_ioctl
     sg_ioctl_common
       scsi_ioctl
        sg_scsi_ioctl
         blk_execute_rq
          blk_mq_sched_insert_request
           blk_mq_run_hw_queue
            __blk_mq_delay_run_hw_queue
             __blk_mq_run_hw_queue
              blk_mq_sched_dispatch_requests
               __blk_mq_sched_dispatch_requests
                blk_mq_dispatch_rq_list
                 scsi_queue_rq
                  scsi_dispatch_cmd
                   scsi_debug_queuecommand
                    schedule_resp
                     resp_write_scat
    
    If you try to allocate a memory larger than(>=) MAX_ORDER, then kmalloc()
    will definitely fail.  It creates a stack trace and messes up dmesg.  The
    user controls the size here so if they specify a too large size it will
    fail.
    
    Add __GFP_NOWARN in order to avoid too large allocation warning.  This is
    detected by static analysis using smatch.
    
    Fixes: 481b5e5c7949 ("scsi: scsi_debug: add resp_write_scat function")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Link: https://lore.kernel.org/r/20221111100526.1790533-1-harshit.m.mogalapalli@oracle.com
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba8ecb66432aec1b7a6c11015dd2336667de91e
Author: Bernard Metzler <bmt@zurich.ibm.com>
Date:   Tue Nov 15 18:07:47 2022 +0100

    RDMA/siw: Set defined status for work completion with undefined status
    
    [ Upstream commit 60da2d11fcbc043304910e4d2ca82f9bab953e63 ]
    
    A malicious user may write undefined values into memory mapped completion
    queue elements status or opcode. Undefined status or opcode values will
    result in out-of-bounds access to an array mapping siw internal
    representation of opcode and status to RDMA core representation when
    reaping CQ elements. While siw detects those undefined values, it did not
    correctly set completion status to a defined value, thus defeating the
    whole purpose of the check.
    
    This bug leads to the following Smatch static checker warning:
    
            drivers/infiniband/sw/siw/siw_cq.c:96 siw_reap_cqe()
            error: buffer overflow 'map_cqe_status' 10 <= 21
    
    Fixes: bdf1da5df9da ("RDMA/siw: Fix immediate work request flush to completion queue")
    Link: https://lore.kernel.org/r/20221115170747.1263298-1-bmt@zurich.ibm.com
    Reported-by: Dan Carpenter <error27@gmail.com>
    Signed-off-by: Bernard Metzler <bmt@zurich.ibm.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e757005ba49693ffcf7a55abbd9724cea55e2cd
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Mon Nov 7 10:51:36 2022 +0200

    RDMA/nldev: Return "-EAGAIN" if the cm_id isn't from expected port
    
    [ Upstream commit ecacb3751f254572af0009b9501e2cdc83a30b6a ]
    
    When filling a cm_id entry, return "-EAGAIN" instead of 0 if the cm_id
    doesn'the have the same port as requested, otherwise an incomplete entry
    may be returned, which causes "rdam res show cm_id" to return an error.
    
    For example on a machine with two rdma devices with "rping -C 1 -v -s"
    running background, the "rdma" command fails:
      $ rdma -V
      rdma utility, iproute2-5.19.0
      $ rdma res show cm_id
      link mlx5_0/- cm-idn 0 state LISTEN ps TCP pid 28056 comm rping src-addr 0.0.0.0:7174
      error: Protocol not available
    
    While with this fix it succeeds:
      $ rdma res show cm_id
      link mlx5_0/- cm-idn 0 state LISTEN ps TCP pid 26395 comm rping src-addr 0.0.0.0:7174
      link mlx5_1/- cm-idn 0 state LISTEN ps TCP pid 26395 comm rping src-addr 0.0.0.0:7174
    
    Fixes: 00313983cda6 ("RDMA/nldev: provide detailed CM_ID information")
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Link: https://lore.kernel.org/r/a08e898cdac5e28428eb749a99d9d981571b8ea7.1667810736.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f981c697b2f9bd5dd2f060e47ff8b5e0a2cd0c06
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Mon Nov 7 10:51:35 2022 +0200

    RDMA/core: Make sure "ib_port" is valid when access sysfs node
    
    [ Upstream commit 5e15ff29b156bbbdeadae230c8ecd5ecd8ca2477 ]
    
    The "ib_port" structure must be set before adding the sysfs kobject,
    and reset after removing it, otherwise it may crash when accessing
    the sysfs node:
      Unable to handle kernel NULL pointer dereference at virtual address 0000000000000050
      Mem abort info:
        ESR = 0x96000006
        Exception class = DABT (current EL), IL = 32 bits
        SET = 0, FnV = 0
        EA = 0, S1PTW = 0
      Data abort info:
        ISV = 0, ISS = 0x00000006
        CM = 0, WnR = 0
      user pgtable: 4k pages, 48-bit VAs, pgdp = 00000000e85f5ba5
      [0000000000000050] pgd=0000000848fd9003, pud=000000085b387003, pmd=0000000000000000
      Internal error: Oops: 96000006 [#2] PREEMPT SMP
      Modules linked in: ib_umad(O) mlx5_ib(O) nfnetlink_cttimeout(E) nfnetlink(E) act_gact(E) cls_flower(E) sch_ingress(E) openvswitch(E) nsh(E) nf_nat_ipv6(E) nf_nat_ipv4(E) nf_conncount(E) nf_nat(E) nf_conntrack(E) nf_defrag_ipv6(E) nf_defrag_ipv4(E) mst_pciconf(O) ipmi_devintf(E) ipmi_msghandler(E) ipmb_dev_int(OE) mlx5_core(O) mlxfw(O) mlxdevm(O) auxiliary(O) ib_uverbs(O) ib_core(O) mlx_compat(O) psample(E) sbsa_gwdt(E) uio_pdrv_genirq(E) uio(E) mlxbf_pmc(OE) mlxbf_gige(OE) mlxbf_tmfifo(OE) gpio_mlxbf2(OE) pwr_mlxbf(OE) mlx_trio(OE) i2c_mlxbf(OE) mlx_bootctl(OE) bluefield_edac(OE) knem(O) ip_tables(E) ipv6(E) crc_ccitt(E) [last unloaded: mst_pci]
      Process grep (pid: 3372, stack limit = 0x0000000022055c92)
      CPU: 5 PID: 3372 Comm: grep Tainted: G      D    OE     4.19.161-mlnx.47.gadcd9e3 #1
      Hardware name: https://www.mellanox.com BlueField SoC/BlueField SoC, BIOS BlueField:3.9.2-15-ga2403ab Sep  8 2022
      pstate: 40000005 (nZcv daif -PAN -UAO)
      pc : hw_stat_port_show+0x4c/0x80 [ib_core]
      lr : port_attr_show+0x40/0x58 [ib_core]
      sp : ffff000029f43b50
      x29: ffff000029f43b50 x28: 0000000019375000
      x27: ffff8007b821a540 x26: ffff000029f43e30
      x25: 0000000000008000 x24: ffff000000eaa958
      x23: 0000000000001000 x22: ffff8007a4ce3000
      x21: ffff8007baff8000 x20: ffff8007b9066ac0
      x19: ffff8007bae97578 x18: 0000000000000000
      x17: 0000000000000000 x16: 0000000000000000
      x15: 0000000000000000 x14: 0000000000000000
      x13: 0000000000000000 x12: 0000000000000000
      x11: 0000000000000000 x10: 0000000000000000
      x9 : 0000000000000000 x8 : ffff8007a4ce4000
      x7 : 0000000000000000 x6 : 000000000000003f
      x5 : ffff000000e6a280 x4 : ffff8007a4ce3000
      x3 : 0000000000000000 x2 : aaaaaaaaaaaaaaab
      x1 : ffff8007b9066a10 x0 : ffff8007baff8000
      Call trace:
       hw_stat_port_show+0x4c/0x80 [ib_core]
       port_attr_show+0x40/0x58 [ib_core]
       sysfs_kf_seq_show+0x8c/0x150
       kernfs_seq_show+0x44/0x50
       seq_read+0x1b4/0x45c
       kernfs_fop_read+0x148/0x1d8
       __vfs_read+0x58/0x180
       vfs_read+0x94/0x154
       ksys_read+0x68/0xd8
       __arm64_sys_read+0x28/0x34
       el0_svc_common+0x88/0x18c
       el0_svc_handler+0x78/0x94
       el0_svc+0x8/0xe8
      Code: f2955562 aa1603e4 aa1503e0 f9405683 (f9402861)
    
    Fixes: d8a5883814b9 ("RDMA/core: Replace the ib_port_data hw_stats pointers with a ib_port pointer")
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Reviewed-by: Michael Guralnik <michaelgur@nvidia.com>
    Link: https://lore.kernel.org/r/88867e705c42c1cd2011e45201c25eecdb9fef94.1667810736.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13586753ae55146269a6dc8b216f17d86b81560c
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Mon Nov 7 10:51:34 2022 +0200

    RDMA/restrack: Release MR restrack when delete
    
    [ Upstream commit dac153f2802db1ad46207283cb9b2aae3d707a45 ]
    
    The MR restrack also needs to be released when delete it, otherwise it
    cause memory leak as the task struct won't be released.
    
    Fixes: 13ef5539def7 ("RDMA/restrack: Count references to the verbs objects")
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Reviewed-by: Michael Guralnik <michaelgur@nvidia.com>
    Link: https://lore.kernel.org/r/703db18e8d4ef628691fb93980a709be673e62e3.1667810736.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e78ca677fa22998ec205182b7a7daf037672fd7
Author: Nirmal Patel <nirmal.patel@linux.intel.com>
Date:   Wed Nov 9 07:26:52 2022 -0700

    PCI: vmd: Disable MSI remapping after suspend
    
    [ Upstream commit d899aa668498c07ff217b666ae9712990306e682 ]
    
    MSI remapping is disabled by VMD driver for Intel's Icelake and
    newer systems in order to improve performance by setting
    VMCONFIG_MSI_REMAP. By design VMCONFIG_MSI_REMAP register is cleared
    by firmware during boot. The same register gets cleared when system
    is put in S3 power state. VMD driver needs to set this register again
    in order to avoid interrupt issues with devices behind VMD if MSI
    remapping was disabled before.
    
    Link: https://lore.kernel.org/r/20221109142652.450998-1-nirmal.patel@linux.intel.com
    Fixes: ee81ee84f873 ("PCI: vmd: Disable MSI-X remapping when possible")
    Signed-off-by: Nirmal Patel <nirmal.patel@linux.intel.com>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Reviewed-by: Francisco Munoz <francisco.munoz.ruiz@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47e31b86edff36f2d26cbc88ce695d98ff804178
Author: Leonid Ravich <lravich@gmail.com>
Date:   Wed Nov 9 11:57:17 2022 +0200

    IB/mad: Don't call to function that might sleep while in atomic context
    
    [ Upstream commit 5c20311d76cbaeb7ed2ecf9c8b8322f8fc4a7ae3 ]
    
    Tracepoints are not allowed to sleep, as such the following splat is
    generated due to call to ib_query_pkey() in atomic context.
    
    WARNING: CPU: 0 PID: 1888000 at kernel/trace/ring_buffer.c:2492 rb_commit+0xc1/0x220
    CPU: 0 PID: 1888000 Comm: kworker/u9:0 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-305.3.1.el8.x86_64 #1
     Hardware name: Red Hat KVM, BIOS 1.13.0-2.module_el8.3.0+555+a55c8938 04/01/2014
     Workqueue: ib-comp-unb-wq ib_cq_poll_work [ib_core]
     RIP: 0010:rb_commit+0xc1/0x220
     RSP: 0000:ffffa8ac80f9bca0 EFLAGS: 00010202
     RAX: ffff8951c7c01300 RBX: ffff8951c7c14a00 RCX: 0000000000000246
     RDX: ffff8951c707c000 RSI: ffff8951c707c57c RDI: ffff8951c7c14a00
     RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
     R10: ffff8951c7c01300 R11: 0000000000000001 R12: 0000000000000246
     R13: 0000000000000000 R14: ffffffff964c70c0 R15: 0000000000000000
     FS:  0000000000000000(0000) GS:ffff8951fbc00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007f20e8f39010 CR3: 000000002ca10005 CR4: 0000000000170ef0
     Call Trace:
      ring_buffer_unlock_commit+0x1d/0xa0
      trace_buffer_unlock_commit_regs+0x3b/0x1b0
      trace_event_buffer_commit+0x67/0x1d0
      trace_event_raw_event_ib_mad_recv_done_handler+0x11c/0x160 [ib_core]
      ib_mad_recv_done+0x48b/0xc10 [ib_core]
      ? trace_event_raw_event_cq_poll+0x6f/0xb0 [ib_core]
      __ib_process_cq+0x91/0x1c0 [ib_core]
      ib_cq_poll_work+0x26/0x80 [ib_core]
      process_one_work+0x1a7/0x360
      ? create_worker+0x1a0/0x1a0
      worker_thread+0x30/0x390
      ? create_worker+0x1a0/0x1a0
      kthread+0x116/0x130
      ? kthread_flush_work_fn+0x10/0x10
      ret_from_fork+0x35/0x40
     ---[ end trace 78ba8509d3830a16 ]---
    
    Fixes: 821bf1de45a1 ("IB/MAD: Add recv path trace point")
    Signed-off-by: Leonid Ravich <lravich@gmail.com>
    Link: https://lore.kernel.org/r/Y2t5feomyznrVj7V@leonid-Inspiron-3421
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8d8fbd3b6d6cc3f25790cca5cffe8ded512fef6
Author: Bernard Metzler <bmt@zurich.ibm.com>
Date:   Mon Nov 7 15:50:57 2022 +0100

    RDMA/siw: Fix immediate work request flush to completion queue
    
    [ Upstream commit bdf1da5df9da680589a7f74448dd0a94dd3e1446 ]
    
    Correctly set send queue element opcode during immediate work request
    flushing in post sendqueue operation, if the QP is in ERROR state.
    An undefined ocode value results in out-of-bounds access to an array
    for mapping the opcode between siw internal and RDMA core representation
    in work completion generation. It resulted in a KASAN BUG report
    of type 'global-out-of-bounds' during NFSoRDMA testing.
    
    This patch further fixes a potential case of a malicious user which may
    write undefined values for completion queue elements status or opcode,
    if the CQ is memory mapped to user land. It avoids the same out-of-bounds
    access to arrays for status and opcode mapping as described above.
    
    Fixes: 303ae1cdfdf7 ("rdma/siw: application interface")
    Fixes: b0fff7317bb4 ("rdma/siw: completion queue methods")
    Reported-by: Olga Kornievskaia <kolga@netapp.com>
    Reviewed-by: Tom Talpey <tom@talpey.com>
    Signed-off-by: Bernard Metzler <bmt@zurich.ibm.com>
    Link: https://lore.kernel.org/r/20221107145057.895747-1-bmt@zurich.ibm.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a26849d793b1bcb7ed49fe43fc25ee59892c734
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Oct 31 15:48:18 2022 -0700

    scsi: qla2xxx: Fix set-but-not-used variable warnings
    
    [ Upstream commit 4fb2169d66b837a2986f569f5d5b81f79e6e4a4c ]
    
    Fix the following two compiler warnings:
    
    drivers/scsi/qla2xxx/qla_init.c: In function ‘qla24xx_async_abort_cmd’:
    drivers/scsi/qla2xxx/qla_init.c:171:17: warning: variable ‘bail’ set but not used [-Wunused-but-set-variable]
      171 |         uint8_t bail;
          |                 ^~~~
    drivers/scsi/qla2xxx/qla_init.c: In function ‘qla2x00_async_tm_cmd’:
    drivers/scsi/qla2xxx/qla_init.c:2023:17: warning: variable ‘bail’ set but not used [-Wunused-but-set-variable]
     2023 |         uint8_t bail;
          |                 ^~~~
    
    Cc: Arun Easi <arun.easi@qlogic.com>
    Cc: Giridhar Malavali <giridhar.malavali@qlogic.com>
    Fixes: feafb7b1714c ("[SCSI] qla2xxx: Fix vport delete issues")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20221031224818.2607882-1-bvanassche@acm.org
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 799ed3755951ad938b92b11bf0e9a9aa7491c190
Author: Shiraz Saleem <shiraz.saleem@intel.com>
Date:   Fri Nov 4 18:49:57 2022 -0500

    RDMA/irdma: Report the correct link speed
    
    [ Upstream commit 4eace75e0853273755b878ffa9cce6de84df975a ]
    
    The active link speed is currently hard-coded in irdma_query_port due
    to which the port rate in ibstatus does reflect the active link speed.
    
    Call ib_get_eth_speed in irdma_query_port to get the active link speed.
    
    Fixes: b48c24c2d710 ("RDMA/irdma: Implement device supported verb APIs")
    Reported-by: Kamal Heib <kamalheib1@gmail.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20221104234957.1135-1-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d40d1b1c61a45d0730d11b1bbc5fb17577b196b0
Author: Chao Yu <chao@kernel.org>
Date:   Fri Oct 28 17:30:26 2022 +0800

    f2fs: fix to destroy sbi->post_read_wq in error path of f2fs_fill_super()
    
    [ Upstream commit 7b02b2201893a71b881026cf574902019ab00db5 ]
    
    In error path of f2fs_fill_super(), this patch fixes to call
    f2fs_destroy_post_read_wq() once if we fail in f2fs_start_ckpt_thread().
    
    Fixes: 261eeb9c1585 ("f2fs: introduce checkpoint_merge mount option")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 847f725006e3a9ec9bb055007a0f3767e3c61235
Author: Dongdong Zhang <zhangdongdong1@oppo.com>
Date:   Tue Oct 25 17:40:36 2022 +0800

    f2fs: fix normal discard process
    
    [ Upstream commit b5f1a218ae5e4339130d6e733f0e63d623e09a2c ]
    
    In the DPOLICY_BG mode, there is a conflict between
    the two conditions "i + 1 < dpolicy->granularity" and
    "i < DEFAULT_DISCARD_GRANULARITY". If i = 15, the first
    condition is false, it will enter the second condition
    and dispatch all small granularity discards in function
     __issue_discard_cmd_orderly. The restrictive effect
    of the first condition to small discards will be
    invalidated. These two conditions should align.
    
    Fixes: 20ee4382322c ("f2fs: issue small discard by LBA order")
    Signed-off-by: Dongdong Zhang <zhangdongdong1@oppo.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 865bb7b5a7deeb0e5afbd82381d52d38825dc64d
Author: Chao Yu <chao@kernel.org>
Date:   Fri Oct 21 10:34:22 2022 +0800

    f2fs: fix to invalidate dcc->f2fs_issue_discard in error path
    
    [ Upstream commit 91586ce0d39a05f88795aa8814fb99b1387236b3 ]
    
    Syzbot reports a NULL pointer dereference issue as below:
    
     __refcount_add include/linux/refcount.h:193 [inline]
     __refcount_inc include/linux/refcount.h:250 [inline]
     refcount_inc include/linux/refcount.h:267 [inline]
     get_task_struct include/linux/sched/task.h:110 [inline]
     kthread_stop+0x34/0x1c0 kernel/kthread.c:703
     f2fs_stop_discard_thread+0x3c/0x5c fs/f2fs/segment.c:1638
     kill_f2fs_super+0x5c/0x194 fs/f2fs/super.c:4522
     deactivate_locked_super+0x70/0xe8 fs/super.c:332
     deactivate_super+0xd0/0xd4 fs/super.c:363
     cleanup_mnt+0x1f8/0x234 fs/namespace.c:1186
     __cleanup_mnt+0x20/0x30 fs/namespace.c:1193
     task_work_run+0xc4/0x14c kernel/task_work.c:177
     exit_task_work include/linux/task_work.h:38 [inline]
     do_exit+0x26c/0xbe0 kernel/exit.c:795
     do_group_exit+0x60/0xe8 kernel/exit.c:925
     __do_sys_exit_group kernel/exit.c:936 [inline]
     __se_sys_exit_group kernel/exit.c:934 [inline]
     __wake_up_parent+0x0/0x40 kernel/exit.c:934
     __invoke_syscall arch/arm64/kernel/syscall.c:38 [inline]
     invoke_syscall arch/arm64/kernel/syscall.c:52 [inline]
     el0_svc_common+0x138/0x220 arch/arm64/kernel/syscall.c:142
     do_el0_svc+0x48/0x164 arch/arm64/kernel/syscall.c:206
     el0_svc+0x58/0x150 arch/arm64/kernel/entry-common.c:636
     el0t_64_sync_handler+0x84/0xf0 arch/arm64/kernel/entry-common.c:654
     el0t_64_sync+0x18c/0x190 arch/arm64/kernel/entry.S:581
    
    The root cause of this issue is in error path of f2fs_start_discard_thread(),
    it missed to invalidate dcc->f2fs_issue_discard, later kthread_stop() may
    access invalid pointer.
    
    Fixes: 4d67490498ac ("f2fs: Don't create discard thread when device doesn't support realtime discard")
    Reported-by: syzbot+035a381ea1afb63f098d@syzkaller.appspotmail.com
    Reported-by: syzbot+729c925c2d9fc495ddee@syzkaller.appspotmail.com
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f509fa740b17307f0cba412485072f632d5af36
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Fri Oct 28 20:33:20 2022 +0800

    apparmor: Fix memleak in alloc_ns()
    
    [ Upstream commit e9e6fa49dbab6d84c676666f3fe7d360497fd65b ]
    
    After changes in commit a1bd627b46d1 ("apparmor: share profile name on
    replacement"), the hname member of struct aa_policy is not valid slab
    object, but a subset of that, it can not be freed by kfree_sensitive(),
    use aa_policy_destroy() to fix it.
    
    Fixes: a1bd627b46d1 ("apparmor: share profile name on replacement")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46f3cb83e4805a41c5c2b8cd6e7ca949db7dbca2
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 07:54:48 2022 +0000

    crypto: rockchip - rework by using crypto_engine
    
    [ Upstream commit 57d67c6e8219b2a034c16d6149e30fb40fd39935 ]
    
    Instead of doing manual queue management, let's use the crypto/engine
    for that.
    In the same time, rework the requests handling to be easier to
    understand (and fix all bugs related to them).
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ed0548d395f350511318965f4ec04836b4cd1a9
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 07:54:47 2022 +0000

    crypto: rockchip - remove non-aligned handling
    
    [ Upstream commit bb3c7b73363c9a149b12b74c44ae94b73a8fddf8 ]
    
    Now driver have fallback for un-aligned cases, remove all code handling
    those cases.
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5562009f5f88a93666dffd80e1ac359a4c0da285
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 07:54:46 2022 +0000

    crypto: rockchip - better handle cipher key
    
    [ Upstream commit d6b23ccef82816050c2fd458c9dabfa0e0af09b9 ]
    
    The key should not be set in hardware too much in advance, this will
    fail it 2 TFM with different keys generate alternative requests.
    The key should be stored and used just before doing cipher operations.
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26f397135606b2d286a66868baa331b19a7213c2
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 07:54:45 2022 +0000

    crypto: rockchip - add fallback for ahash
    
    [ Upstream commit 816600485cb597b3ff7d6806a95a78512839f775 ]
    
    Adds a fallback for all case hardware cannot handle.
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34fe54af3cf5b1f03aab2c29fcc74493a9c9c541
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 07:54:44 2022 +0000

    crypto: rockchip - add fallback for cipher
    
    [ Upstream commit 68ef8af09a1a912a5ed2cfaa4cca7606f52cef90 ]
    
    The hardware does not handle 0 size length request, let's add a
    fallback.
    Furthermore fallback will be used for all unaligned case the hardware
    cannot handle.
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 314217591ec6c01ed5dc34577e59e6896787fde3
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 07:54:43 2022 +0000

    crypto: rockchip - do not store mode globally
    
    [ Upstream commit 87e356c4966444866186f68f05832fdcc0f351a3 ]
    
    Storing the mode globally does not work if 2 requests are handled in the
    same time.
    We should store it in a request context.
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 853cd97d2bc17845cfa00316f84c72f0d2580325
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 07:54:41 2022 +0000

    crypto: rockchip - do not do custom power management
    
    [ Upstream commit c50ef1411c8cbad0c7db100c477126076b6e3348 ]
    
    The clock enable/disable at tfm init/exit is fragile,
    if 2 tfm are init in the same time and one is removed just after,
    it will leave the hardware uncloked even if a user remains.
    
    Instead simply enable clocks at probe time.
    We will do PM later.
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5100272e478751a22f1dd7e059de97dde04c943
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Tue Oct 18 10:45:32 2022 +0800

    f2fs: Fix the race condition of resize flag between resizefs
    
    [ Upstream commit 28fc4e9077ce59ab28c89c20dc6be5154473218f ]
    
    Because the set/clear SBI_IS_RESIZEFS flag not between any locks,
    In the following case:
      thread1                       thread2
       ->ioctl(resizefs)
        ->set RESIZEFS flag          ->ioctl(resizefs)
        ...                           ->set RESIZEFS flag
        ->clear RESIZEFS flag
                                      ->resizefs stream
                                        # No RESIZEFS flag in the stream
    
    Also before freeze_super, the resizefs not started, we should not set
    the SBI_IS_RESIZEFS flag.
    
    So move the set/clear SBI_IS_RESIZEFS flag between the cp_mutex and
    gc_lock.
    
    Fixes: b4b10061ef98 ("f2fs: refactor resize_fs to avoid meta updates in progress")
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db72c5dffcba7a36bc9c1ffb48819330ef8ace20
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Thu Aug 25 18:01:01 2022 +0900

    PCI: pci-epf-test: Register notifier if only core_init_notifier is enabled
    
    [ Upstream commit 6acd25cc98ce0c9ee4fefdaf44fc8bca534b26e5 ]
    
    The pci_epf_test_notifier function should be installed also if only
    core_init_notifier is enabled. Fix the current logic.
    
    Link: https://lore.kernel.org/r/20220825090101.20474-1-hayashi.kunihiko@socionext.com
    Fixes: 5e50ee27d4a5 ("PCI: pci-epf-test: Add support to defer core initialization")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Acked-by: Om Prakash Singh <omp@nvidia.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26ffeff67b9aaf4c9d3833ce84e2a294ce7c73ee
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Oct 25 10:37:13 2022 +0300

    RDMA/core: Fix order of nldev_exit call
    
    [ Upstream commit 4508d32ccced24c972bc4592104513e1ff8439b5 ]
    
    Create symmetrical exit flow by calling to nldev_exit() after
    call to rdma_nl_unregister(RDMA_NL_LS).
    
    Fixes: 6c80b41abe22 ("RDMA/netlink: Add nldev initialization flows")
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/64e676774a53a406f4cde265d5a4cfd6b8e97df9.1666683334.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a00a7ac25114e2ef84dc0546c76e9e89403038ab
Author: Vidya Sagar <vidyas@nvidia.com>
Date:   Mon Sep 26 16:49:23 2022 +0530

    PCI: dwc: Fix n_fts[] array overrun
    
    [ Upstream commit 66110361281b2f7da0c8bd51eaf1f152f4236035 ]
    
    commit aeaa0bfe89654 ("PCI: dwc: Move N_FTS setup to common setup")
    incorrectly uses pci->link_gen in deriving the index to the
    n_fts[] array also introducing the issue of accessing beyond the
    boundaries of array for greater than Gen-2 speeds. This change fixes
    that issue.
    
    Link: https://lore.kernel.org/r/20220926111923.22487-1-vidyas@nvidia.com
    Fixes: aeaa0bfe8965 ("PCI: dwc: Move N_FTS setup to common setup")
    Signed-off-by: Vidya Sagar <vidyas@nvidia.com>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Acked-by: Jingoo Han <jingoohan1@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10ae636115b5244bce223766f74c2826729ee494
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Fri Oct 21 08:46:04 2022 +0800

    apparmor: Use pointer to struct aa_label for lbs_cred
    
    [ Upstream commit 37923d4321b1e38170086da2c117f78f2b0f49c6 ]
    
    According to the implementations of cred_label() and set_cred_label(),
    we should use pointer to struct aa_label for lbs_cred instead of struct
    aa_task_ctx, this patch fixes it.
    
    Fixes: bbd3662a8348 ("Infrastructure management of the cred security blob")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d50ccfbe27b424693b71592d0aa5ae923094552
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Oct 18 13:29:49 2022 -0700

    scsi: core: Fix a race between scsi_done() and scsi_timeout()
    
    [ Upstream commit 978b7922d3dca672b41bb4b8ce6c06ab77112741 ]
    
    If there is a race between scsi_done() and scsi_timeout() and if
    scsi_timeout() loses the race, scsi_timeout() should not reset the request
    timer. Hence change the return value for this case from BLK_EH_RESET_TIMER
    into BLK_EH_DONE.
    
    Although the block layer holds a reference on a request (req->ref) while
    calling a timeout handler, restarting the timer (blk_add_timer()) while a
    request is being completed is racy.
    
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Cc: Keith Busch <kbusch@kernel.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: John Garry <john.garry@huawei.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Reported-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: 15f73f5b3e59 ("blk-mq: move failure injection out of blk_mq_complete_request")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20221018202958.1902564-2-bvanassche@acm.org
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bdf3a59b3dd3e89592f5ad98b958e063388025c
Author: Natalia Petrova <n.petrova@fintech.ru>
Date:   Wed Sep 28 13:25:05 2022 +0300

    crypto: nitrox - avoid double free on error path in nitrox_sriov_init()
    
    [ Upstream commit 094528b6a5a755b1195a01e10b13597d67d1a0e6 ]
    
    If alloc_workqueue() fails in nitrox_mbox_init() it deallocates
    ndev->iov.vfdev and returns error code, but then nitrox_sriov_init()
    calls nitrox_sriov_cleanup() where ndev->iov.vfdev is deallocated
    again.
    
    Fix this by nulling ndev->iov.vfdev after the first deallocation.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 9e5de3e06e54 ("crypto: cavium/nitrox - Add mailbox...")
    Signed-off-by: Natalia Petrova <n.petrova@fintech.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7efc0d39ee06e9618b894c1888f0b6ec8b0f1bbe
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Sep 27 08:55:55 2022 +0000

    crypto: sun8i-ss - use dma_addr instead u32
    
    [ Upstream commit 839b8ae2fc10f205317bcc32c9de18456756e1f5 ]
    
    The DMA address need to be stored in a dma_addr_t
    
    Fixes: 359e893e8af4 ("crypto: sun8i-ss - rework handling of IV")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aaef0bdd7ad29a8ec6ef4a4046d7bc2263d9b145
Author: Weili Qian <qianweili@huawei.com>
Date:   Sat Aug 13 18:34:52 2022 +0800

    crypto: hisilicon/qm - fix missing destroy qp_idr
    
    [ Upstream commit 116be08f6e4e385733d42360a33c3d883d2dd702 ]
    
    In the function hisi_qm_memory_init(), if resource alloc fails after
    idr_init, the initialized qp_idr needs to be destroyed.
    
    Signed-off-by: Weili Qian <qianweili@huawei.com>
    Signed-off-by: Yang Shen <shenyang39@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d567776ae28963ce963f79dcebc32af78ba975c8
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri May 6 18:57:12 2022 -0700

    apparmor: Fix abi check to include v8 abi
    
    [ Upstream commit 1b5a6198f5a9d0aa5497da0dc4bcd4fc166ee516 ]
    
    The v8 abi is supported by the kernel but the userspace supported
    version check does not allow for it. This was missed when v8 was added
    due to a bug in the userspace compiler which was setting an older abi
    version for v8 encoding (which is forward compatible except on the
    network encoding). However it is possible to detect the network
    encoding by checking the policydb network support which the code
    does. The end result was that missing the abi flag worked until
    userspace was fixed and began correctly checking for the v8 abi
    version.
    
    Fixes: 56974a6fcfef ("apparmor: add base infastructure for socket mediation")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc9d2cbbdcd3fe36e15dedcf3af6ce98cac0267f
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Sep 6 03:39:55 2022 -0700

    apparmor: fix lockdep warning when removing a namespace
    
    [ Upstream commit 9c4557efc558a68e4cd973490fd936d6e3414db8 ]
    
    Fix the following lockdep warning
    
    [ 1119.158984] ============================================
    [ 1119.158988] WARNING: possible recursive locking detected
    [ 1119.158996] 6.0.0-rc1+ #257 Tainted: G            E    N
    [ 1119.158999] --------------------------------------------
    [ 1119.159001] bash/80100 is trying to acquire lock:
    [ 1119.159007] ffff88803e79b4a0 (&ns->lock/1){+.+.}-{4:4}, at: destroy_ns.part.0+0x43/0x140
    [ 1119.159028]
                   but task is already holding lock:
    [ 1119.159030] ffff8881009764a0 (&ns->lock/1){+.+.}-{4:4}, at: aa_remove_profiles+0x3f0/0x640
    [ 1119.159040]
                   other info that might help us debug this:
    [ 1119.159042]  Possible unsafe locking scenario:
    
    [ 1119.159043]        CPU0
    [ 1119.159045]        ----
    [ 1119.159047]   lock(&ns->lock/1);
    [ 1119.159051]   lock(&ns->lock/1);
    [ 1119.159055]
                    *** DEADLOCK ***
    
    Which is caused by an incorrect lockdep nesting notation
    
    Fixes: feb3c766a3ab ("apparmor: fix possible recursive lock warning in __aa_create_ns")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 775a37ffa9f4681c4ad84c8634a7eec8af7098d4
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Tue Aug 23 09:15:03 2022 +0800

    apparmor: fix a memleak in multi_transaction_new()
    
    [ Upstream commit c73275cf6834787ca090317f1d20dbfa3b7f05aa ]
    
    In multi_transaction_new(), the variable t is not freed or passed out
    on the failure of copy_from_user(t->data, buf, size), which could lead
    to a memleak.
    
    Fix this bug by adding a put_multi_transaction(t) in the error path.
    
    Fixes: 1dea3b41e84c5 ("apparmor: speed up transactional queries")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09f30f394e832ed09859b6a80fdd20668a9104ff
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sat Dec 10 01:52:42 2022 +0200

    net: dsa: tag_8021q: avoid leaking ctx on dsa_tag_8021q_register() error path
    
    [ Upstream commit e095493091e850d5292ad01d8fbf5cde1d89ac53 ]
    
    If dsa_tag_8021q_setup() fails, for example due to the inability of the
    device to install a VLAN, the tag_8021q context of the switch will leak.
    Make sure it is freed on the error path.
    
    Fixes: 328621f6131f ("net: dsa: tag_8021q: absorb dsa_8021q_setup into dsa_tag_8021q_{,un}register")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Link: https://lore.kernel.org/r/20221209235242.480344-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86664b865239a581181c26fd9e70512966b9a31d
Author: Bartosz Staszewski <bartoszx.staszewski@intel.com>
Date:   Fri Dec 9 10:54:11 2022 -0800

    i40e: Fix the inability to attach XDP program on downed interface
    
    [ Upstream commit 0c87b545a2ed5cd8a6318011f1c92b188c2d74bc ]
    
    Whenever trying to load XDP prog on downed interface, function i40e_xdp
    was passing vsi->rx_buf_len field to i40e_xdp_setup() which was equal 0.
    i40e_open() calls i40e_vsi_configure_rx() which configures that field,
    but that only happens when interface is up. When it is down, i40e_open()
    is not being called, thus vsi->rx_buf_len is not set.
    
    Solution for this is calculate buffer length in newly created
    function - i40e_calculate_vsi_rx_buf_len() that return actual buffer
    length. Buffer length is being calculated based on the same rules
    applied previously in i40e_vsi_configure_rx() function.
    
    Fixes: 613142b0bb88 ("i40e: Log error for oversized MTU on device")
    Fixes: 0c8493d90b6b ("i40e: add XDP support for pass and drop actions")
    Signed-off-by: Bartosz Staszewski <bartoszx.staszewski@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Tested-by: Shwetha Nagaraju <Shwetha.nagaraju@intel.com>
    Reviewed-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Reviewed-by: Saeed Mahameed <saeed@kernel.com>
    Link: https://lore.kernel.org/r/20221209185411.2519898-1-anthony.l.nguyen@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0abd337acdd2774759babc2a381f605cdb28593e
Author: Piergiorgio Beruto <piergiorgio.beruto@gmail.com>
Date:   Sat Dec 10 23:37:22 2022 +0100

    stmmac: fix potential division by 0
    
    [ Upstream commit ede5a389852d3640a28e7187fb32b7f204380901 ]
    
    When the MAC is connected to a 10 Mb/s PHY and the PTP clock is derived
    from the MAC reference clock (default), the clk_ptp_rate becomes too
    small and the calculated sub second increment becomes 0 when computed by
    the stmmac_config_sub_second_increment() function within
    stmmac_init_tstamp_counter().
    
    Therefore, the subsequent div_u64 in stmmac_init_tstamp_counter()
    operation triggers a divide by 0 exception as shown below.
    
    [   95.062067] socfpga-dwmac ff700000.ethernet eth0: Register MEM_TYPE_PAGE_POOL RxQ-0
    [   95.076440] socfpga-dwmac ff700000.ethernet eth0: PHY [stmmac-0:08] driver [NCN26000] (irq=49)
    [   95.095964] dwmac1000: Master AXI performs any burst length
    [   95.101588] socfpga-dwmac ff700000.ethernet eth0: No Safety Features support found
    [   95.109428] Division by zero in kernel.
    [   95.113447] CPU: 0 PID: 239 Comm: ifconfig Not tainted 6.1.0-rc7-centurion3-1.0.3.0-01574-gb624218205b7-dirty #77
    [   95.123686] Hardware name: Altera SOCFPGA
    [   95.127695]  unwind_backtrace from show_stack+0x10/0x14
    [   95.132938]  show_stack from dump_stack_lvl+0x40/0x4c
    [   95.137992]  dump_stack_lvl from Ldiv0+0x8/0x10
    [   95.142527]  Ldiv0 from __aeabi_uidivmod+0x8/0x18
    [   95.147232]  __aeabi_uidivmod from div_u64_rem+0x1c/0x40
    [   95.152552]  div_u64_rem from stmmac_init_tstamp_counter+0xd0/0x164
    [   95.158826]  stmmac_init_tstamp_counter from stmmac_hw_setup+0x430/0xf00
    [   95.165533]  stmmac_hw_setup from __stmmac_open+0x214/0x2d4
    [   95.171117]  __stmmac_open from stmmac_open+0x30/0x44
    [   95.176182]  stmmac_open from __dev_open+0x11c/0x134
    [   95.181172]  __dev_open from __dev_change_flags+0x168/0x17c
    [   95.186750]  __dev_change_flags from dev_change_flags+0x14/0x50
    [   95.192662]  dev_change_flags from devinet_ioctl+0x2b4/0x604
    [   95.198321]  devinet_ioctl from inet_ioctl+0x1ec/0x214
    [   95.203462]  inet_ioctl from sock_ioctl+0x14c/0x3c4
    [   95.208354]  sock_ioctl from vfs_ioctl+0x20/0x38
    [   95.212984]  vfs_ioctl from sys_ioctl+0x250/0x844
    [   95.217691]  sys_ioctl from ret_fast_syscall+0x0/0x4c
    [   95.222743] Exception stack(0xd0ee1fa8 to 0xd0ee1ff0)
    [   95.227790] 1fa0:                   00574c4f be9aeca4 00000003 00008914 be9aeca4 be9aec50
    [   95.235945] 1fc0: 00574c4f be9aeca4 0059f078 00000036 be9aee8c be9aef7a 00000015 00000000
    [   95.244096] 1fe0: 005a01f0 be9aec38 004d7484 b6e67d74
    
    Signed-off-by: Piergiorgio Beruto <piergiorgio.beruto@gmail.com>
    Fixes: 91a2559c1dc5 ("net: stmmac: Fix sub-second increment")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/de4c64ccac9084952c56a06a8171d738604c4770.1670678513.git.piergiorgio.beruto@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93a4a04558711db0fad5c29ed440d1a0a402a33f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 10:18:35 2022 +0800

    Bluetooth: RFCOMM: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 0ba18967d4544955b2eff2fbc4f2a8750c4df90a ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave().
    
    Fixes: 81be03e026dc ("Bluetooth: RFCOMM: Replace use of memcpy_from_msg with bt_skb_sendmmsg")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d6bbe5241e7a2ba346a7dcffae947ae73332811
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 10:18:34 2022 +0800

    Bluetooth: hci_core: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 39c1eb6fcbae8ce9bb71b2ac5cb609355a2b181b ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave().
    
    Fixes: 9238f36a5a50 ("Bluetooth: Add request cmd_complete and cmd_status functions")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 804de4e24a5a4c7b406f4d6881fd26a9d00b765f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 10:18:33 2022 +0800

    Bluetooth: hci_bcsp: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 7b503e339c1a80bf0051ec2d19c3bc777014ac61 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1030c3aeeef94d148a77b94239a7f1e9a91941f3
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 10:18:32 2022 +0800

    Bluetooth: hci_h5: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 383630cc6758d619874c2e8bb2f68a61f3f9ef6e ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave().
    
    Fixes: 43eb12d78960 ("Bluetooth: Fix/implement Three-wire reliable packet sending")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9fcb5b367e6c78be8fa3f261b202b2199990995d
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 10:18:31 2022 +0800

    Bluetooth: hci_ll: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 8f458f783dfbb19c1f1cb58ed06eeb701f52091b ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave().
    
    Fixes: 166d2f6a4332 ("[Bluetooth] Add UART driver for Texas Instruments' BRF63xx chips")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14cc94a598529d601bd9d03e7eba1f3fbba735c2
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 10:18:30 2022 +0800

    Bluetooth: hci_qca: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit df4cfc91208e0a98f078223793f5871b1a82cc54 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave().
    
    Fixes: 0ff252c1976d ("Bluetooth: hciuart: Add support QCA chipset for UART")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06467130d5211d620a8e7d05bde88cdd5a12e63c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Dec 6 20:59:10 2022 +0800

    Bluetooth: btusb: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit b15a6bd3c80c77faec8317319b97f976b1a08332 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave().
    
    Fixes: 803b58367ffb ("Bluetooth: btusb: Implement driver internal packet reassembly")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e52b7d460a30506680ec57c28e88ce446ce590bf
Author: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date:   Mon Dec 5 21:53:57 2022 +0800

    Bluetooth: btintel: Fix missing free skb in btintel_setup_combined()
    
    [ Upstream commit cee50ce899de415baf4da3ed38b7d4f13c3170d1 ]
    
    skb allocated by __hci_cmd_sync would not be used whether in checking
    for supported iBT hardware variants or after, we should free it in all
    error branches, this patch makes the case read version failed or default
    error case free skb before return.
    
    Fixes: c86c7285bb08 ("Bluetooth: btintel: Fix the legacy bootloader returns tlv based version")
    Fixes: 019a1caa7fd2 ("Bluetooth: btintel: Refactoring setup routine for bootloader devices")
    Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
    Reviewed-by: Tedd Ho-Jeong An <tedd.an@intel.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7c9de3bcfcd9d2f62b1469431195dd5cdf43849
Author: Inga Stotland <inga.stotland@intel.com>
Date:   Fri Oct 21 17:48:56 2022 -0700

    Bluetooth: MGMT: Fix error report for ADD_EXT_ADV_PARAMS
    
    [ Upstream commit 3b1c7c00b8c22b3cb79532252c59eb0b287bb86d ]
    
    When validating the parameter length for MGMT_OP_ADD_EXT_ADV_PARAMS
    command, use the correct op code in error status report:
    was MGMT_OP_ADD_ADVERTISING, changed to MGMT_OP_ADD_EXT_ADV_PARAMS.
    
    Fixes: 12410572833a2 ("Bluetooth: Break add adv into two mgmt commands")
    Signed-off-by: Inga Stotland <inga.stotland@intel.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2addf3cb638112f1ddcda0afe45ff38b2978ab31
Author: Firo Yang <firo.yang@suse.com>
Date:   Fri Dec 9 13:48:54 2022 +0800

    sctp: sysctl: make extra pointers netns aware
    
    [ Upstream commit da05cecc4939c0410d56c29e252998b192756318 ]
    
    Recently, a customer reported that from their container whose
    net namespace is different to the host's init_net, they can't set
    the container's net.sctp.rto_max to any value smaller than
    init_net.sctp.rto_min.
    
    For instance,
    Host:
    sudo sysctl net.sctp.rto_min
    net.sctp.rto_min = 1000
    
    Container:
    echo 100 > /mnt/proc-net/sctp/rto_min
    echo 400 > /mnt/proc-net/sctp/rto_max
    echo: write error: Invalid argument
    
    This is caused by the check made from this'commit 4f3fdf3bc59c
    ("sctp: add check rto_min and rto_max in sysctl")'
    When validating the input value, it's always referring the boundary
    value set for the init_net namespace.
    
    Having container's rto_max smaller than host's init_net.sctp.rto_min
    does make sense. Consider that the rto between two containers on the
    same host is very likely smaller than it for two hosts.
    
    So to fix this problem, as suggested by Marcelo, this patch makes the
    extra pointers of rto_min, rto_max, pf_retrans, and ps_retrans point
    to the corresponding variables from the newly created net namespace while
    the new net namespace is being registered in sctp_sysctl_net_register.
    
    Fixes: 4f3fdf3bc59c ("sctp: add check rto_min and rto_max in sysctl")
    Reviewed-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Firo Yang <firo.yang@suse.com>
    Link: https://lore.kernel.org/r/20221209054854.23889-1-firo.yang@suse.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21296a52caa6a6bad6debdfe40ad81d4f1a27e69
Author: Eric Pilmore <epilmore@gigaio.com>
Date:   Thu Dec 8 16:06:59 2022 -0800

    ntb_netdev: Use dev_kfree_skb_any() in interrupt context
    
    [ Upstream commit 5f7d78b2b12a9d561f48fa00bab29b40f4616dad ]
    
    TX/RX callback handlers (ntb_netdev_tx_handler(),
    ntb_netdev_rx_handler()) can be called in interrupt
    context via the DMA framework when the respective
    DMA operations have completed. As such, any calls
    by these routines to free skb's, should use the
    interrupt context safe dev_kfree_skb_any() function.
    
    Previously, these callback handlers would call the
    interrupt unsafe version of dev_kfree_skb(). This has
    not presented an issue on Intel IOAT DMA engines as
    that driver utilizes tasklets rather than a hard
    interrupt handler, like the AMD PTDMA DMA driver.
    On AMD systems, a kernel WARNING message is
    encountered, which is being issued from
    skb_release_head_state() due to in_hardirq()
    being true.
    
    Besides the user visible WARNING from the kernel,
    the other symptom of this bug was that TCP/IP performance
    across the ntb_netdev interface was very poor, i.e.
    approximately an order of magnitude below what was
    expected. With the repair to use dev_kfree_skb_any(),
    kernel WARNINGs from skb_release_head_state() ceased
    and TCP/IP performance, as measured by iperf, was on
    par with expected results, approximately 20 Gb/s on
    AMD Milan based server. Note that this performance
    is comparable with Intel based servers.
    
    Fixes: 765ccc7bc3d91 ("ntb_netdev: correct skb leak")
    Fixes: 548c237c0a997 ("net: Add support for NTB virtual ethernet device")
    Signed-off-by: Eric Pilmore <epilmore@gigaio.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20221209000659.8318-1-epilmore@gigaio.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fff763f110f11ddbfe860e78abb0861850644b6
Author: Jerry Ray <jerry.ray@microchip.com>
Date:   Fri Dec 9 09:35:02 2022 -0600

    net: lan9303: Fix read error execution path
    
    [ Upstream commit 8964916d206071b058c6351f88b1966bd58cbde0 ]
    
    This patch fixes an issue where a read failure of a port statistic counter
    will return unknown results.  While it is highly unlikely the read will
    ever fail, it is much cleaner to return a zero for the stat count.
    
    Fixes: a1292595e006 ("net: dsa: add new DSA switch driver for the SMSC-LAN9303")
    Signed-off-by: Jerry Ray <jerry.ray@microchip.com>
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20221209153502.7429-1-jerry.ray@microchip.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 882bad40a0083c04f66d1d094cd391dd048becdf
Author: Markus Schneider-Pargmann <msp@baylibre.com>
Date:   Tue Dec 6 12:57:26 2022 +0100

    can: tcan4x5x: Fix use of register error status mask
    
    [ Upstream commit 67727a17a6b375d68fe569b77e6516b034b834c0 ]
    
    TCAN4X5X_ERROR_STATUS is not a status register that needs clearing
    during interrupt handling. Instead this is a masking register that masks
    error interrupts. Writing TCAN4X5X_CLEAR_ALL_INT to this register
    effectively masks everything.
    
    Rename the register and mask all error interrupts only once by writing
    to the register in tcan4x5x_init.
    
    Fixes: 5443c226ba91 ("can: tcan4x5x: Add tcan4x5x driver to the kernel")
    Signed-off-by: Markus Schneider-Pargmann <msp@baylibre.com>
    Link: https://lore.kernel.org/all/20221206115728.1056014-10-msp@baylibre.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d50092f662ecec00d0000ff2e967b151136cadfc
Author: Vivek Yadav <vivek.2311@samsung.com>
Date:   Wed Dec 7 15:36:31 2022 +0530

    can: m_can: Call the RAM init directly from m_can_chip_config
    
    [ Upstream commit eaacfeaca7ad0804b9a6eff7afeba93a87db7638 ]
    
    When we try to access the mcan message ram addresses during the probe,
    hclk is gated by any other drivers or disabled, because of that probe
    gets failed.
    
    Move the mram init functionality to mcan chip config called by
    m_can_start from mcan open function, by that time clocks are
    enabled.
    
    Suggested-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Vivek Yadav <vivek.2311@samsung.com>
    Link: https://lore.kernel.org/all/20221207100632.96200-2-vivek.2311@samsung.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Stable-dep-of: 67727a17a6b3 ("can: tcan4x5x: Fix use of register error status mask")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55064642aac1dc06897bad855777e2031c4c180c
Author: Markus Schneider-Pargmann <msp@baylibre.com>
Date:   Tue Dec 6 12:57:25 2022 +0100

    can: tcan4x5x: Remove invalid write in clear_interrupts
    
    [ Upstream commit 40c9e4f676abbe194541d88e796341c92d5a13c0 ]
    
    Register 0x824 TCAN4X5X_MCAN_INT_REG is a read-only register. Any writes
    to this register do not have any effect.
    
    Remove this write. The m_can driver aldready clears the interrupts in
    m_can_isr() by writing to M_CAN_IR which is translated to register
    0x1050 which is a writable version of this register.
    
    Fixes: 5443c226ba91 ("can: tcan4x5x: Add tcan4x5x driver to the kernel")
    Signed-off-by: Markus Schneider-Pargmann <msp@baylibre.com>
    Link: https://lore.kernel.org/all/20221206115728.1056014-9-msp@baylibre.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 641eef876657943e58a61594cfe419db2868fc27
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Dec 8 10:22:25 2022 -0600

    net: amd-xgbe: Check only the minimum speed for active/passive cables
    
    [ Upstream commit f8ab263d4d48e6dab752029bf562f20a2ee630ed ]
    
    There are cables that exist that can support speeds in excess of 10GbE.
    The driver, however, restricts the EEPROM advertised nominal bitrate to
    a specific range, which can prevent usage of cables that can support,
    for example, up to 25GbE.
    
    Rather than checking that an active or passive cable supports a specific
    range, only check for a minimum supported speed.
    
    Fixes: abf0a1c2b26a ("amd-xgbe: Add support for SFP+ modules")
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60b35e28dc2a8b3f74a2da987ae78c6ef6433149
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Dec 8 10:22:24 2022 -0600

    net: amd-xgbe: Fix logic around active and passive cables
    
    [ Upstream commit 4998006c73afe44e2f639d55bd331c6c26eb039f ]
    
    SFP+ active and passive cables are copper cables with fixed SFP+ end
    connectors. Due to a misinterpretation of this, SFP+ active cables could
    end up not being recognized, causing the driver to fail to establish a
    connection.
    
    Introduce a new enum in SFP+ cable types, XGBE_SFP_CABLE_FIBER, that is
    the default cable type, and handle active and passive cables when they are
    specifically detected.
    
    Fixes: abf0a1c2b26a ("amd-xgbe: Add support for SFP+ modules")
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d436bf39f47b27681c7925c65cad93db3d043694
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 23:01:58 2022 +0800

    af_unix: call proto_unregister() in the error path in af_unix_init()
    
    [ Upstream commit 73e341e0281a35274629e9be27eae2f9b1b492bf ]
    
    If register unix_stream_proto returns error, unix_dgram_proto needs
    be unregistered.
    
    Fixes: 94531cfcbe79 ("af_unix: Add unix_stream_proto for sockmap")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Reviewed-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee9d03bf8907addf0a66effba42bb29e7b55ef1a
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 22:21:47 2022 +0800

    net: amd: lance: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 6151d105dfce8c23edf30eed35e97f3d9b96a35c ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In these two cases, dev_kfree_skb() is called consume the xmited SKB,
    so replace it with dev_consume_skb_irq().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f1c4c01cc9ba8b35a309b66fc84db77a02ba114
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 22:21:46 2022 +0800

    hamradio: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 3727f742915f04f6fc550b80cf406999bd4e90d0 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In scc_discard_buffers(), dev_kfree_skb() is called to discard the SKBs,
    so replace it with dev_kfree_skb_irq().
    
    In scc_net_tx(), dev_kfree_skb() is called to drop the SKB that exceed
    queue length, so replace it with dev_kfree_skb_irq().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb2c6a6e8f759dc1488781b7aa380c32df38fa54
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 22:21:45 2022 +0800

    net: ethernet: dnet: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit f07fadcbee2a5e84caa67c7c445424200bffb60b ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    In this case, the lock is used to protected 'bp', so we can move
    dev_kfree_skb() after the spin_unlock_irqrestore().
    
    Fixes: 4796417417a6 ("dnet: Dave DNET ethernet controller driver (updated)")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef08e1082c45288d9d62898cb78c943c81976360
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 22:21:44 2022 +0800

    net: emaclite: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit d1678bf45f21fa5ae4a456f821858679556ea5f8 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In this case, dev_kfree_skb() is called in xemaclite_tx_timeout() to
    drop the SKB, when tx timeout, so replace it with dev_kfree_skb_irq().
    
    Fixes: bb81b2ddfa19 ("net: add Xilinx emac lite device driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2786ef4066d9b1e0dfd751edc4b44fbefccc3225
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 21:37:35 2022 +0800

    net: apple: bmac: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 5fe02e046e6422c4adfdbc50206ec7186077da24 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In this case, dev_kfree_skb() is called in bmac_tx_timeout() to drop
    the SKB, when tx timeout, so replace it with dev_kfree_skb_irq().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d81314e2dded1dc9fdc4523c23034f1451893a8d
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 21:37:34 2022 +0800

    net: apple: mace: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 3dfe3486c1cd4f82b466b7d307f23777137b8acc ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In this case, dev_kfree_skb() is called in mace_tx_timeout() to drop
    the SKB, when tx timeout, so replace it with dev_kfree_skb_irq().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a6544343bba7da929d6d4a2dc44ec0f15970081
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Dec 8 20:04:52 2022 +0800

    net/tunnel: wait until all sk_user_data reader finish before releasing the sock
    
    [ Upstream commit 3cf7203ca620682165706f70a1b12b5194607dce ]
    
    There is a race condition in vxlan that when deleting a vxlan device
    during receiving packets, there is a possibility that the sock is
    released after getting vxlan_sock vs from sk_user_data. Then in
    later vxlan_ecn_decapsulate(), vxlan_get_sk_family() we will got
    NULL pointer dereference. e.g.
    
       #0 [ffffa25ec6978a38] machine_kexec at ffffffff8c669757
       #1 [ffffa25ec6978a90] __crash_kexec at ffffffff8c7c0a4d
       #2 [ffffa25ec6978b58] crash_kexec at ffffffff8c7c1c48
       #3 [ffffa25ec6978b60] oops_end at ffffffff8c627f2b
       #4 [ffffa25ec6978b80] page_fault_oops at ffffffff8c678fcb
       #5 [ffffa25ec6978bd8] exc_page_fault at ffffffff8d109542
       #6 [ffffa25ec6978c00] asm_exc_page_fault at ffffffff8d200b62
          [exception RIP: vxlan_ecn_decapsulate+0x3b]
          RIP: ffffffffc1014e7b  RSP: ffffa25ec6978cb0  RFLAGS: 00010246
          RAX: 0000000000000008  RBX: ffff8aa000888000  RCX: 0000000000000000
          RDX: 000000000000000e  RSI: ffff8a9fc7ab803e  RDI: ffff8a9fd1168700
          RBP: ffff8a9fc7ab803e   R8: 0000000000700000   R9: 00000000000010ae
          R10: ffff8a9fcb748980  R11: 0000000000000000  R12: ffff8a9fd1168700
          R13: ffff8aa000888000  R14: 00000000002a0000  R15: 00000000000010ae
          ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
       #7 [ffffa25ec6978ce8] vxlan_rcv at ffffffffc10189cd [vxlan]
       #8 [ffffa25ec6978d90] udp_queue_rcv_one_skb at ffffffff8cfb6507
       #9 [ffffa25ec6978dc0] udp_unicast_rcv_skb at ffffffff8cfb6e45
      #10 [ffffa25ec6978dc8] __udp4_lib_rcv at ffffffff8cfb8807
      #11 [ffffa25ec6978e20] ip_protocol_deliver_rcu at ffffffff8cf76951
      #12 [ffffa25ec6978e48] ip_local_deliver at ffffffff8cf76bde
      #13 [ffffa25ec6978ea0] __netif_receive_skb_one_core at ffffffff8cecde9b
      #14 [ffffa25ec6978ec8] process_backlog at ffffffff8cece139
      #15 [ffffa25ec6978f00] __napi_poll at ffffffff8ceced1a
      #16 [ffffa25ec6978f28] net_rx_action at ffffffff8cecf1f3
      #17 [ffffa25ec6978fa0] __softirqentry_text_start at ffffffff8d4000ca
      #18 [ffffa25ec6978ff0] do_softirq at ffffffff8c6fbdc3
    
    Reproducer: https://github.com/Mellanox/ovs-tests/blob/master/test-ovs-vxlan-remove-tunnel-during-traffic.sh
    
    Fix this by waiting for all sk_user_data reader to finish before
    releasing the sock.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Suggested-by: Jakub Sitnicki <jakub@cloudflare.com>
    Fixes: 6a93cc905274 ("udp-tunnel: Add a few more UDP tunnel APIs")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 998b4e54f517961d3d75144c088a24423e003005
Author: Li Zetao <lizetao1@huawei.com>
Date:   Thu Dec 8 20:05:40 2022 +0800

    net: farsync: Fix kmemleak when rmmods farsync
    
    [ Upstream commit 2f623aaf9f31de968dea6169849706a2f9be444c ]
    
    There are two memory leaks reported by kmemleak:
    
      unreferenced object 0xffff888114b20200 (size 128):
        comm "modprobe", pid 4846, jiffies 4295146524 (age 401.345s)
        hex dump (first 32 bytes):
          e0 62 57 09 81 88 ff ff e0 62 57 09 81 88 ff ff  .bW......bW.....
          01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        backtrace:
          [<ffffffff815bcd82>] kmalloc_trace+0x22/0x60
          [<ffffffff83d35c78>] __hw_addr_add_ex+0x198/0x6c0
          [<ffffffff83d3989d>] dev_addr_init+0x13d/0x230
          [<ffffffff83d1063d>] alloc_netdev_mqs+0x10d/0xe50
          [<ffffffff82b4a06e>] alloc_hdlcdev+0x2e/0x80
          [<ffffffffa016a741>] fst_add_one+0x601/0x10e0 [farsync]
          ...
    
      unreferenced object 0xffff88810b85b000 (size 1024):
        comm "modprobe", pid 4846, jiffies 4295146523 (age 401.346s)
        hex dump (first 32 bytes):
          00 00 b0 02 00 c9 ff ff 00 70 0a 00 00 c9 ff ff  .........p......
          00 00 00 f2 00 00 00 f3 0a 00 00 00 02 00 00 00  ................
        backtrace:
          [<ffffffff815bcd82>] kmalloc_trace+0x22/0x60
          [<ffffffffa016a294>] fst_add_one+0x154/0x10e0 [farsync]
          [<ffffffff82060e83>] local_pci_probe+0xd3/0x170
          ...
    
    The root cause is traced to the netdev and fst_card_info are not freed
    when removes one fst in fst_remove_one(), which may trigger oom if
    repeated insmod and rmmod module.
    
    Fix it by adding free_netdev() and kfree() in fst_remove_one(), just as
    the operations on the error handling path in fst_add_one().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Li Zetao <lizetao1@huawei.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71605c69062116e5520b1236bdf5ebe0b8ba38a0
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 20:01:21 2022 +0800

    ethernet: s2io: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 6cee96e09df54ae17784c0f38a49e0ed8229b825 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In this case, dev_kfree_skb() is called in free_tx_buffers() to drop
    the SKBs in tx buffers, when the card is down, so replace it with
    dev_kfree_skb_irq() here.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce1b3a41e7964cb8dd56a702a95dd90ad27f51cd
Author: ruanjinjie <ruanjinjie@huawei.com>
Date:   Sun Dec 11 10:33:37 2022 +0800

    of: overlay: fix null pointer dereferencing in find_dup_cset_node_entry() and find_dup_cset_prop()
    
    [ Upstream commit ee9d7a0e754568180a2f8ebc4aad226278a9116f ]
    
    When kmalloc() fail to allocate memory in kasprintf(), fn_1 or fn_2 will
    be NULL, and strcmp() will cause null pointer dereference.
    
    Fixes: 2fe0e8769df9 ("of: overlay: check prevents multiple fragments touching same property")
    Signed-off-by: ruanjinjie <ruanjinjie@huawei.com>
    Link: https://lore.kernel.org/r/20221211023337.592266-1-ruanjinjie@huawei.com
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8399b9893548c03fdb18be277bf99d985dbde925
Author: Yuan Can <yuancan@huawei.com>
Date:   Wed Dec 7 08:54:10 2022 +0000

    drivers: net: qlcnic: Fix potential memory leak in qlcnic_sriov_init()
    
    [ Upstream commit 01de1123322e4fe1bbd0fcdf0982511b55519c03 ]
    
    If vp alloc failed in qlcnic_sriov_init(), all previously allocated vp
    needs to be freed.
    
    Fixes: f197a7aa6288 ("qlcnic: VF-PF communication channel implementation")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96e50897029f65222ef76cfe9bc802321fcea33b
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Wed Dec 7 16:34:13 2022 +0800

    net: stmmac: fix possible memory leak in stmmac_dvr_probe()
    
    [ Upstream commit a137f3f27f9290933fe7e40e6dc8a445781c31a2 ]
    
    The bitmap_free() should be called to free priv->af_xdp_zc_qps
    when create_singlethread_workqueue() fails, otherwise there will
    be a memory leak, so we add the err path error_wq_init to fix it.
    
    Fixes: bba2556efad6 ("net: stmmac: Enable RX via AF_XDP zero-copy")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecaf934e441284d1c9ea4654f8e49a7529b9d8ed
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Wed Dec 7 16:31:59 2022 +0800

    net: stmmac: selftests: fix potential memleak in stmmac_test_arpoffload()
    
    [ Upstream commit f150b63f3fa5fdd81e0dd6151e8850268e29438c ]
    
    The skb allocated by stmmac_test_get_arp_skb() hasn't been released in
    some error handling case, which will lead to a memory leak. Fix this up
    by adding kfree_skb() to release skb.
    
    Compile tested only.
    
    Fixes: 5e3fb0a6e2b3 ("net: stmmac: selftests: Implement the ARP Offload test")
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1359bc90a49d68f9fbe43c07f78bbe88bf0e425
Author: Yongqiang Liu <liuyongqiang13@huawei.com>
Date:   Wed Dec 7 07:20:45 2022 +0000

    net: defxx: Fix missing err handling in dfx_init()
    
    [ Upstream commit ae18dcdff0f8d7e84cd3fd9f496518b5e72d185d ]
    
    When eisa_driver_register() or tc_register_driver() failed,
    the modprobe defxx would fail with some err log as follows:
    
     Error: Driver 'defxx' is already registered, aborting...
    
    Fix this issue by adding err hanling in dfx_init().
    
    Fixes: e89a2cfb7d7b5 ("[TC] defxx: TURBOchannel support")
    Signed-off-by: Yongqiang Liu <liuyongqiang13@huawei.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c65603abc389b1a201a206a24476797c7b472761
Author: Artem Chernyshev <artem.chernyshev@red-soft.ru>
Date:   Tue Dec 6 09:58:34 2022 +0300

    net: vmw_vsock: vmci: Check memcpy_from_msg()
    
    [ Upstream commit 44aa5a6dba8283bfda28b1517af4de711c5652a4 ]
    
    vmci_transport_dgram_enqueue() does not check the return value
    of memcpy_from_msg().  If memcpy_from_msg() fails, it is possible that
    uninitialized memory contents are sent unintentionally instead of user's
    message in the datagram to the destination.  Return with an error if
    memcpy_from_msg() fails.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 0f7db23a07af ("vmci_transport: switch ->enqeue_dgram, ->enqueue_stream and ->dequeue_stream to msghdr")
    Signed-off-by: Artem Chernyshev <artem.chernyshev@red-soft.ru>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9de42116fc4540f6a1ceb51fd037b734ab7be12e
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Wed Nov 23 11:16:22 2022 +0800

    clk: socfpga: Fix memory leak in socfpga_gate_init()
    
    [ Upstream commit 0b8ba891ad4d1ef6bfa4c72efc83f9f9f855f68b ]
    
    Free @socfpga_clk and @ops on the error path to avoid memory leak issue.
    
    Fixes: a30a67be7b6e ("clk: socfpga: Don't have get_parent for single parent ops")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Link: https://lore.kernel.org/r/20221123031622.63171-1-xiujianfeng@huawei.com
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e515881adeb111db8bdbc3a0d19f6bfa2b3bffb9
Author: Björn Töpel <bjorn@rivosinc.com>
Date:   Wed Dec 7 11:35:40 2022 +0100

    bpf: Do not zero-extend kfunc return values
    
    [ Upstream commit d35af0a7feb077c43ff0233bba5a8c6e75b73e35 ]
    
    In BPF all global functions, and BPF helpers return a 64-bit
    value. For kfunc calls, this is not the case, and they can return
    e.g. 32-bit values.
    
    The return register R0 for kfuncs calls can therefore be marked as
    subreg_def != DEF_NOT_SUBREG. In general, if a register is marked with
    subreg_def != DEF_NOT_SUBREG, some archs (where bpf_jit_needs_zext()
    returns true) require the verifier to insert explicit zero-extension
    instructions.
    
    For kfuncs calls, however, the caller should do sign/zero extension
    for return values. In other words, the compiler is responsible to
    insert proper instructions, not the verifier.
    
    An example, provided by Yonghong Song:
    
    $ cat t.c
    extern unsigned foo(void);
    unsigned bar1(void) {
         return foo();
    }
    unsigned bar2(void) {
         if (foo()) return 10; else return 20;
    }
    
    $ clang -target bpf -mcpu=v3 -O2 -c t.c && llvm-objdump -d t.o
    t.o:    file format elf64-bpf
    
    Disassembly of section .text:
    
    0000000000000000 <bar1>:
            0:       85 10 00 00 ff ff ff ff call -0x1
            1:       95 00 00 00 00 00 00 00 exit
    
    0000000000000010 <bar2>:
            2:       85 10 00 00 ff ff ff ff call -0x1
            3:       bc 01 00 00 00 00 00 00 w1 = w0
            4:       b4 00 00 00 14 00 00 00 w0 = 0x14
            5:       16 01 01 00 00 00 00 00 if w1 == 0x0 goto +0x1 <LBB1_2>
            6:       b4 00 00 00 0a 00 00 00 w0 = 0xa
    
    0000000000000038 <LBB1_2>:
            7:       95 00 00 00 00 00 00 00 exit
    
    If the return value of 'foo()' is used in the BPF program, the proper
    zero-extension will be done.
    
    Currently, the verifier correctly marks, say, a 32-bit return value as
    subreg_def != DEF_NOT_SUBREG, but will fail performing the actual
    zero-extension, due to a verifier bug in
    opt_subreg_zext_lo32_rnd_hi32(). load_reg is not properly set to R0,
    and the following path will be taken:
    
                    if (WARN_ON(load_reg == -1)) {
                            verbose(env, "verifier bug. zext_dst is set, but no reg is defined\n");
                            return -EFAULT;
                    }
    
    A longer discussion from v1 can be found in the link below.
    
    Correct the verifier by avoiding doing explicit zero-extension of R0
    for kfunc calls. Note that R0 will still be marked as a sub-register
    for return values smaller than 64-bit.
    
    Fixes: 83a2881903f3 ("bpf: Account for BPF_FETCH in insn_has_def32()")
    Link: https://lore.kernel.org/bpf/20221202103620.1915679-1-bjorn@kernel.org/
    Suggested-by: Yonghong Song <yhs@meta.com>
    Signed-off-by: Björn Töpel <bjorn@rivosinc.com>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/r/20221207103540.396496-1-bjorn@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce61a877c79f698b4bf1878b124f5d14cc99b650
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Tue Nov 22 12:04:10 2022 +0800

    blktrace: Fix output non-blktrace event when blk_classic option enabled
    
    [ Upstream commit f596da3efaf4130ff61cd029558845808df9bf99 ]
    
    When the blk_classic option is enabled, non-blktrace events must be
    filtered out. Otherwise, events of other types are output in the blktrace
    classic format, which is unexpected.
    
    The problem can be triggered in the following ways:
    
      # echo 1 > /sys/kernel/debug/tracing/options/blk_classic
      # echo 1 > /sys/kernel/debug/tracing/events/enable
      # echo blk > /sys/kernel/debug/tracing/current_tracer
      # cat /sys/kernel/debug/tracing/trace_pipe
    
    Fixes: c71a89615411 ("blktrace: add ftrace plugin")
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Link: https://lore.kernel.org/r/20221122040410.85113-1-yangjihong1@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2ae56fa0b611d67185cc7c4ef430c2b722fe904
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Dec 2 13:35:42 2022 +0800

    wifi: brcmfmac: Fix error return code in brcmf_sdio_download_firmware()
    
    [ Upstream commit c2f2924bc7f9ea75ef8d95863e710168f8196256 ]
    
    Fix to return a negative error code instead of 0 when
    brcmf_chip_set_active() fails. In addition, change the return
    value for brcmf_pcie_exit_download_state() to keep consistent.
    
    Fixes: d380ebc9b6fb ("brcmfmac: rename chip download functions")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/1669959342-27144-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23060daf375918e3b0780c3e76809b28430415c4
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Thu Dec 1 16:15:08 2022 +0200

    wifi: rtl8xxxu: Fix the channel width reporting
    
    [ Upstream commit 76c16af2cb10282274596e21add2c9f0b95c941b ]
    
    The gen 2 chips RTL8192EU and RTL8188FU periodically send the driver
    reports about the TX rate, and the driver passes these reports to
    sta_statistics. The reports from RTL8192EU may or may not include the
    channel width. The reports from RTL8188FU do not include it.
    
    Only access the c2h->ra_report.bw field if the report (skb) is big
    enough.
    
    The other problem fixed here is that the code was actually never
    changing the channel width initially reported by
    rtl8xxxu_bss_info_changed because the value of RATE_INFO_BW_20 is 0.
    
    Fixes: 0985d3a410ac ("rtl8xxxu: Feed current txrate information for mac80211")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Reviewed-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/5b41f1ae-72e7-6b7a-2459-b736399a1c40@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d0e00334e315a77db2d221547b47ebe16f66ce2
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Thu Dec 1 16:13:57 2022 +0200

    wifi: rtl8xxxu: Add __packed to struct rtl8723bu_c2h
    
    [ Upstream commit dd469a754afdb782ba3033cee102147493dc39f4 ]
    
    This struct is used to access a sequence of bytes received from the
    wifi chip. It must not have any padding bytes between the members.
    
    This doesn't change anything on my system, possibly because currently
    none of the members need more than byte alignment.
    
    Fixes: b2b43b7837ba ("rtl8xxxu: Initial functionality to handle C2H events for 8723bu")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Reviewed-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/1a270918-da22-ff5f-29fc-7855f740c5ba@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e69d38065080b50380e7fee96d5e8b481291d5ca
Author: Kris Bahnsen <kris@embeddedTS.com>
Date:   Wed Dec 7 15:08:53 2022 -0800

    spi: spi-gpio: Don't set MOSI as an input if not 3WIRE mode
    
    [ Upstream commit 3a6f994f848a69deb2bf3cd9d130dd0c09730e55 ]
    
    The addition of 3WIRE support would affect MOSI direction even
    when still in standard (4 wire) mode. This can lead to MOSI being
    at an invalid logic level when a device driver sets an SPI
    message with a NULL tx_buf.
    
    spi.h states that if tx_buf is NULL then "zeros will be shifted
    out ... " If MOSI is tristated then the data shifted out is subject
    to pull resistors, keepers, or in the absence of those, noise.
    
    This issue came to light when using spi-gpio connected to an
    ADS7843 touchscreen controller. MOSI pulled high when clocking
    MISO data in caused the SPI device to interpret this as a command
    which would put the device in an unexpected and non-functional
    state.
    
    Fixes: 4b859db2c606 ("spi: spi-gpio: add SPI_3WIRE support")
    Fixes: 5132b3d28371 ("spi: gpio: Support 3WIRE high-impedance turn-around")
    Signed-off-by: Kris Bahnsen <kris@embeddedTS.com>
    Link: https://lore.kernel.org/r/20221207230853.6174-1-kris@embeddedTS.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e501a31af8efa593a2f003637b56d00b75dca23
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Wed Nov 23 11:20:15 2022 +0800

    clk: samsung: Fix memory leak in _samsung_clk_register_pll()
    
    [ Upstream commit 5174e5b0d1b669a489524192b6adcbb3c54ebc72 ]
    
    If clk_register() fails, @pll->rate_table may have allocated memory by
    kmemdup(), so it needs to be freed, otherwise will cause memory leak
    issue, this patch fixes it.
    
    Fixes: 3ff6e0d8d64d ("clk: samsung: Add support to register rate_table for samsung plls")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Link: https://lore.kernel.org/r/20221123032015.63980-1-xiujianfeng@huawei.com
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 441c05485cf1a29eef05c1fd8281716815283315
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Nov 17 15:02:36 2022 +0800

    media: coda: Add check for kmalloc
    
    [ Upstream commit 6e5e5defdb8b0186312c2f855ace175aee6daf9b ]
    
    As the kmalloc may return NULL pointer,
    it should be better to check the return value
    in order to avoid NULL poineter dereference,
    same as the others.
    
    Fixes: cb1d3a336371 ("[media] coda: add CODA7541 JPEG support")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b99872178e7473f21904fdeea38109275aad8ae8
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Nov 17 14:56:52 2022 +0800

    media: coda: Add check for dcoda_iram_alloc
    
    [ Upstream commit 6b8082238fb8bb20f67e46388123e67a5bbc558d ]
    
    As the coda_iram_alloc may return NULL pointer,
    it should be better to check the return value
    in order to avoid NULL poineter dereference,
    same as the others.
    
    Fixes: b313bcc9a467 ("[media] coda: simplify IRAM setup")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbf081ebe268c1149b5507ea71a2c985824176e2
Author: Liang He <windhl@126.com>
Date:   Tue Jul 19 22:10:23 2022 +0800

    media: c8sectpfe: Add of_node_put() when breaking out of loop
    
    [ Upstream commit 63ff05a1ad242a5a0f897921c87b70d601bda59c ]
    
    In configure_channels(), we should call of_node_put() when breaking
    out of for_each_child_of_node() which will automatically increase
    and decrease the refcount.
    
    Fixes: c5f5d0f99794 ("[media] c8sectpfe: STiH407/10 Linux DVB demux support")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a7330d8200e6193cb1fce7bd6d6af1a3fa18290
Author: Yuan Can <yuancan@huawei.com>
Date:   Sat Dec 3 06:21:09 2022 +0000

    regulator: qcom-labibb: Fix missing of_node_put() in qcom_labibb_regulator_probe()
    
    [ Upstream commit cf34ac6aa2b12fb0c3aacfdcae8acd7904b949ec ]
    
    The reg_node needs to be released through of_node_put() in the error
    handling path when of_irq_get_byname() failed.
    
    Fixes: 390af53e0411 ("regulator: qcom-labibb: Implement short-circuit and over-current IRQs")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Link: https://lore.kernel.org/r/20221203062109.115043-1-yuancan@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecf1b317a86bbc7115da01f1c79c603dcaf80bb9
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Wed Nov 30 21:49:20 2022 +0800

    mmc: core: Normalize the error handling branch in sd_read_ext_regs()
    
    [ Upstream commit fc02e2b52389c8fde02852b2f959c0b45f042bbd ]
    
    Let's use pr_err() to output the error messages and let's extend a comment
    to clarify why returning 0 (success) in one case make sense.
    
    Fixes: c784f92769ae ("mmc: core: Read the SD function extension registers for power management")
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    [Ulf: Clarified the comment and the commit-msg]
    Link: https://lore.kernel.org/r/20221130134920.2109-1-thunder.leizhen@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fecca429e6eb5b6f4a8e8d3f8c75212aedfb0d7
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Sat Nov 26 09:25:58 2022 +0800

    memstick/ms_block: Add check for alloc_ordered_workqueue
    
    [ Upstream commit 4f431a047a5c8698ed4b67e2760cfbeb5fffb69d ]
    
    As the alloc_ordered_workqueue may return NULL pointer, it should be better
    to add check for the return value. Moreover, the msb->io_queue should be
    freed if error occurs later.
    
    Fixes: 0ab30494bc4f ("memstick: add support for legacy memorysticks")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20221126012558.34374-1-jiasheng@iscas.ac.cn
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b77ced3fce5c54495000a4308b0bc3e6e20f6555
Author: Luis Chamberlain <mcgrof@kernel.org>
Date:   Thu Sep 2 10:40:58 2021 -0700

    memstick: ms_block: Add error handling support for add_disk()
    
    [ Upstream commit 2304c55fd506fcd5e1a59ae21a306ee82507340b ]
    
    We never checked for errors on add_disk() as this function returned void.
    Now that this is fixed, use the shiny new error handling.
    
    Contrary to the typical removal which delays the put_disk() until later,
    since we are failing on a probe we immediately put the disk on failure from
    add_disk by using blk_cleanup_disk().
    
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Link: https://lore.kernel.org/r/20210902174105.2418771-3-mcgrof@kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Stable-dep-of: 4f431a047a5c ("memstick/ms_block: Add check for alloc_ordered_workqueue")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae00eb67792b63efc20b00517fae2aed1a3d4427
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Sun Nov 20 12:34:54 2022 +0100

    mmc: renesas_sdhi: alway populate SCC pointer
    
    [ Upstream commit 3d4f9898c1c74323dd61d6a8a0efca9401232ad4 ]
    
    We need the SCC pointer to reset the device, so populate it even when we
    don't need it for tuning.
    
    Fixes: 45bffc371fef ("mmc: renesas_sdhi: only reset SCC when its pointer is populated")
    Signed-off-by: Takeshi Saito <takeshi.saito.xv@renesas.com>
    Signed-off-by: Takeshi Kihara <takeshi.kihara.df@renesas.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Tested-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/20221120113457.42010-2-wsa+renesas@sang-engineering.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88fa6a4e39c10c0ae8e32c0b5aa0ab3e695fb2fe
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Nov 9 21:35:39 2022 +0800

    mmc: mmci: fix return value check of mmc_add_host()
    
    [ Upstream commit b38a20f29a49ae04d23750d104b25400b792b98c ]
    
    mmc_add_host() may return error, if we ignore its return value,
    it will lead two issues:
    1. The memory that allocated in mmc_alloc_host() is leaked.
    2. In the remove() path, mmc_remove_host() will be called to
       delete device, but it's not added yet, it will lead a kernel
       crash because of null-ptr-deref in device_del().
    
    So fix this by checking the return value and goto error path which
    will call mmc_free_host().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221109133539.3275664-1-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29c3690969e77e2aa45d59a8bf6a855206afe49e
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Nov 9 21:32:37 2022 +0800

    mmc: wbsd: fix return value check of mmc_add_host()
    
    [ Upstream commit dc5b9b50fc9d1334407e316e6e29a5097ef833bd ]
    
    mmc_add_host() may return error, if we ignore its return value,
    it will lead two issues:
    1. The memory that allocated in mmc_alloc_host() is leaked.
    2. In the remove() path, mmc_remove_host() will be called to
       delete device, but it's not added yet, it will lead a kernel
       crash because of null-ptr-deref in device_del().
    
    So fix this by checking the return value and goto error path which
    will call mmc_free_host(), besides, other resources also need be
    released.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221109133237.3273558-1-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0959cc1685eb19774300d43ef25e318b457b156b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 8 21:09:49 2022 +0800

    mmc: via-sdmmc: fix return value check of mmc_add_host()
    
    [ Upstream commit e4e46fb61e3bb4628170810d3f2b996b709b90d9 ]
    
    mmc_add_host() may return error, if we ignore its return value,
    it will lead two issues:
    1. The memory that allocated in mmc_alloc_host() is leaked.
    2. In the remove() path, mmc_remove_host() will be called to
       delete device, but it's not added yet, it will lead a kernel
       crash because of null-ptr-deref in device_del().
    
    Fix this by checking the return value and goto error path which
    will call mmc_free_host().
    
    Fixes: f0bf7f61b840 ("mmc: Add new via-sdmmc host controller driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221108130949.1067699-1-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0cfe7aa41f3965f5224affd88afd48c60f6ad1f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 8 20:34:17 2022 +0800

    mmc: meson-gx: fix return value check of mmc_add_host()
    
    [ Upstream commit 90935f16f2650ab7416fa2ffbe5c28cb39cf3f1e ]
    
    mmc_add_host() may return error, if we ignore its return value,
    it will lead two issues:
    1. The memory that allocated in mmc_alloc_host() is leaked.
    2. In the remove() path, mmc_remove_host() will be called to
       delete device, but it's not added yet, it will lead a kernel
       crash because of null-ptr-deref in device_del().
    
    Fix this by checking the return value and goto error path which
    will call mmc_free_host().
    
    Fixes: 51c5d8447bd7 ("MMC: meson: initial support for GX platforms")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://lore.kernel.org/r/20221108123417.479045-1-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62005dfcc396424db3337a1dc3ab49623537f5e5
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 8 20:13:16 2022 +0800

    mmc: omap_hsmmc: fix return value check of mmc_add_host()
    
    [ Upstream commit a525cad241c339ca00bf7ebf03c5180f2a9b767c ]
    
    mmc_add_host() may return error, if we ignore its return value,
    it will lead two issues:
    1. The memory that allocated in mmc_alloc_host() is leaked.
    2. In the remove() path, mmc_remove_host() will be called to
       delete device, but it's not added yet, it will lead a kernel
       crash because of null-ptr-deref in device_del().
    
    Fix this by checking the return value and goto error path wihch
    will call mmc_free_host().
    
    Fixes: a45c6cb81647 ("[ARM] 5369/1: omap mmc: Add new omap hsmmc controller for 2430 and 34xx, v3")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221108121316.340354-1-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1925472dec31ec061d57412b3a65a056ea24f340
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 8 20:28:19 2022 +0800

    mmc: atmel-mci: fix return value check of mmc_add_host()
    
    [ Upstream commit 9e6e8c43726673ca2abcaac87640b9215fd72f4c ]
    
    mmc_add_host() may return error, if we ignore its return value,
    it will lead two issues:
    1. The memory that allocated in mmc_alloc_host() is leaked.
    2. In the remove() path, mmc_remove_host() will be called to
       delete device, but it's not added yet, it will lead a kernel
       crash because of null-ptr-deref in device_del().
    
    So fix this by checking the return value and calling mmc_free_host()
    in the error path.
    
    Fixes: 7d2be0749a59 ("atmel-mci: Driver for Atmel on-chip MMC controllers")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221108122819.429975-1-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58c3a8d0f1abeb1ca5c2df948be58ad4f7bb6f67
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:23 2022 +0800

    mmc: wmt-sdmmc: fix return value check of mmc_add_host()
    
    [ Upstream commit 29276d56f6ed138db0f38cd31aedc0b725c8c76c ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and goto error path which will call
    mmc_free_host(), besides, clk_disable_unprepare() also needs be called.
    
    Fixes: 3a96dff0f828 ("mmc: SD/MMC Host Controller for Wondermedia WM8505/WM8650")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-10-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afc898019e7bf18c5eb7a0ac19852fcb1b341b3c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:22 2022 +0800

    mmc: vub300: fix return value check of mmc_add_host()
    
    [ Upstream commit 0613ad2401f88bdeae5594c30afe318e93b14676 ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and goto error path which will call
    mmc_free_host(), besides, the timer added before mmc_add_host() needs be del.
    
    And this patch fixes another missing call mmc_free_host() if usb_control_msg()
    fails.
    
    Fixes: 88095e7b473a ("mmc: Add new VUB300 USB-to-SD/SDIO/MMC driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-9-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6444079767b68b1fbed0e7668081146e80dcb719
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:21 2022 +0800

    mmc: toshsd: fix return value check of mmc_add_host()
    
    [ Upstream commit f670744a316ea983113a65313dcd387b5a992444 ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and goto error path which will call
    mmc_free_host(), besides, free_irq() also needs be called.
    
    Fixes: a5eb8bbd66cc ("mmc: add Toshiba PCI SD controller driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-8-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df683201c7ffbd21a806a7cad657b661c5ebfb6f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:20 2022 +0800

    mmc: rtsx_usb_sdmmc: fix return value check of mmc_add_host()
    
    [ Upstream commit fc38a5a10e9e5a75eb9189854abeb8405b214cc9 ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and calling mmc_free_host() in the
    error path, besides, led_classdev_unregister() and pm_runtime_disable() also
    need be called.
    
    Fixes: c7f6558d84af ("mmc: Add realtek USB sdmmc host driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-7-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30dc645461dfc63e52b3af8ee4a98e17bf14bacf
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:19 2022 +0800

    mmc: rtsx_pci: fix return value check of mmc_add_host()
    
    [ Upstream commit 0c87db77423a282b3b38b8a6daf057b822680516 ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and calling mmc_free_host() in the
    error path, beside, runtime PM also needs be disabled.
    
    Fixes: ff984e57d36e ("mmc: Add realtek pcie sdmmc host driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-6-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc7e8744f581552e81fa9b228c59f228b34052c4
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:18 2022 +0800

    mmc: pxamci: fix return value check of mmc_add_host()
    
    [ Upstream commit 80e1ef3afb8bfbe768380b70ffe1b6cab87d1a3b ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and goto error path which will call
    mmc_free_host(), besides, ->exit() need be called to uninit the pdata.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-5-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d496050ded83b13b16f05e1fc0329b0210d2493
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:17 2022 +0800

    mmc: mxcmmc: fix return value check of mmc_add_host()
    
    [ Upstream commit cde600af7b413c9fe03e85c58c4279df90e91d13 ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and goto error path which will call
    mmc_free_host().
    
    Fixes: d96be879ff46 ("mmc: Add a MX2/MX3 specific SDHC driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-4-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0502fe86a2db2336c9498d2de3e97f22dcf85ae
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:16 2022 +0800

    mmc: moxart: fix return value check of mmc_add_host()
    
    [ Upstream commit 0ca18d09c744fb030ae9bc5836c3e357e0237dea ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and goto error path which will call
    mmc_free_host().
    
    Fixes: 1b66e94e6b99 ("mmc: moxart: Add MOXA ART SD/MMC driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-3-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29c5b4da41f35108136d843c7432885c78cf8272
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 1 14:30:15 2022 +0800

    mmc: alcor: fix return value check of mmc_add_host()
    
    [ Upstream commit e93d1468f429475a753d6baa79b853b7ee5ef8c0 ]
    
    mmc_add_host() may return error, if we ignore its return value, the memory
    that allocated in mmc_alloc_host() will be leaked and it will lead a kernel
    crash because of deleting not added device in the remove path.
    
    So fix this by checking the return value and calling mmc_free_host() in the
    error path.
    
    Fixes: c5413ad815a6 ("mmc: add new Alcor Micro Cardreader SD/MMC driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221101063023.1664968-2-yangyingliang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52e0d8a8dda316ddd2107481dcf19abd9e9a71a2
Author: Pu Lehui <pulehui@huawei.com>
Date:   Tue Dec 6 17:14:10 2022 +0800

    riscv, bpf: Emit fixed-length instructions for BPF_PSEUDO_FUNC
    
    [ Upstream commit b54b6003612a376e7be32cbc5c1af3754bbbbb3d ]
    
    For BPF_PSEUDO_FUNC instruction, verifier will refill imm with
    correct addresses of bpf_calls and then run last pass of JIT.
    Since the emit_imm of RV64 is variable-length, which will emit
    appropriate length instructions accorroding to the imm, it may
    broke ctx->offset, and lead to unpredictable problem, such as
    inaccurate jump. So let's fix it with fixed-length instructions.
    
    Fixes: 69c087ba6225 ("bpf: Add bpf_for_each_map_elem() helper")
    Suggested-by: Björn Töpel <bjorn@rivosinc.com>
    Signed-off-by: Pu Lehui <pulehui@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Björn Töpel <bjorn@kernel.org>
    Acked-by: Björn Töpel <bjorn@kernel.org>
    Link: https://lore.kernel.org/bpf/20221206091410.1584784-1-pulehui@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0de70ed675fab2d02093647932d0aef40b6c2612
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Dec 6 12:42:59 2022 -0500

    NFSv4.x: Fail client initialisation if state manager thread can't run
    
    [ Upstream commit b4e4f66901658fae0614dea5bf91062a5387eda7 ]
    
    If the state manager thread fails to start, then we should just mark the
    client initialisation as failed so that other processes or threads don't
    get stuck in nfs_wait_client_init_complete().
    
    Reported-by: ChenXiaoSong <chenxiaosong2@huawei.com>
    Fixes: 4697bd5e9419 ("NFSv4: Fix a race in the net namespace mount notification")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7055c878a0ec2ec89b7d493cf218a08a921a37d2
Author: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date:   Thu Nov 24 17:23:42 2022 +0800

    SUNRPC: Fix missing release socket in rpc_sockname()
    
    [ Upstream commit 50fa355bc0d75911fe9d5072a5ba52cdb803aff7 ]
    
    socket dynamically created is not released when getting an unintended
    address family type in rpc_sockname(), direct to out_release for calling
    sock_release().
    
    Fixes: 2e738fdce22f ("SUNRPC: Add API to acquire source address")
    Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79d4cd40da5a247e60a57ec1680e3e940422b138
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Sun Nov 20 15:34:29 2022 +0800

    xprtrdma: Fix regbuf data not freed in rpcrdma_req_create()
    
    [ Upstream commit 9181f40fb2952fd59ecb75e7158620c9c669eee3 ]
    
    If rdma receive buffer allocate failed, should call rpcrdma_regbuf_free()
    to free the send buffer, otherwise, the buffer data will be leaked.
    
    Fixes: bb93a1ae2bf4 ("xprtrdma: Allocate req's regbufs at xprt create time")
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cba633b24a98d957e8190ef8bc4d4cdb4f6e9313
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Tue Dec 6 14:10:04 2022 +0800

    ALSA: mts64: fix possible null-ptr-defer in snd_mts64_interrupt
    
    [ Upstream commit cf2ea3c86ad90d63d1c572b43e1ca9276b0357ad ]
    
    I got a null-ptr-defer error report when I do the following tests
    on the qemu platform:
    
    make defconfig and CONFIG_PARPORT=m, CONFIG_PARPORT_PC=m,
    CONFIG_SND_MTS64=m
    
    Then making test scripts:
    cat>test_mod1.sh<<EOF
    modprobe snd-mts64
    modprobe snd-mts64
    EOF
    
    Executing the script, perhaps several times, we will get a null-ptr-defer
    report, as follow:
    
    syzkaller:~# ./test_mod.sh
    snd_mts64: probe of snd_mts64.0 failed with error -5
    modprobe: ERROR: could not insert 'snd_mts64': No such device
     BUG: kernel NULL pointer dereference, address: 0000000000000000
     #PF: supervisor write access in kernel mode
     #PF: error_code(0x0002) - not-present page
     PGD 0 P4D 0
     Oops: 0002 [#1] PREEMPT SMP PTI
     CPU: 0 PID: 205 Comm: modprobe Not tainted 6.1.0-rc8-00588-g76dcd734eca2 #6
     Call Trace:
      <IRQ>
      snd_mts64_interrupt+0x24/0xa0 [snd_mts64]
      parport_irq_handler+0x37/0x50 [parport]
      __handle_irq_event_percpu+0x39/0x190
      handle_irq_event_percpu+0xa/0x30
      handle_irq_event+0x2f/0x50
      handle_edge_irq+0x99/0x1b0
      __common_interrupt+0x5d/0x100
      common_interrupt+0xa0/0xc0
      </IRQ>
      <TASK>
      asm_common_interrupt+0x22/0x40
     RIP: 0010:_raw_write_unlock_irqrestore+0x11/0x30
      parport_claim+0xbd/0x230 [parport]
      snd_mts64_probe+0x14a/0x465 [snd_mts64]
      platform_probe+0x3f/0xa0
      really_probe+0x129/0x2c0
      __driver_probe_device+0x6d/0xc0
      driver_probe_device+0x1a/0xa0
      __device_attach_driver+0x7a/0xb0
      bus_for_each_drv+0x62/0xb0
      __device_attach+0xe4/0x180
      bus_probe_device+0x82/0xa0
      device_add+0x550/0x920
      platform_device_add+0x106/0x220
      snd_mts64_attach+0x2e/0x80 [snd_mts64]
      port_check+0x14/0x20 [parport]
      bus_for_each_dev+0x6e/0xc0
      __parport_register_driver+0x7c/0xb0 [parport]
      snd_mts64_module_init+0x31/0x1000 [snd_mts64]
      do_one_initcall+0x3c/0x1f0
      do_init_module+0x46/0x1c6
      load_module+0x1d8d/0x1e10
      __do_sys_finit_module+0xa2/0xf0
      do_syscall_64+0x37/0x90
      entry_SYSCALL_64_after_hwframe+0x63/0xcd
      </TASK>
     Kernel panic - not syncing: Fatal exception in interrupt
     Rebooting in 1 seconds..
    
    The mts wa not initialized during interrupt,  we add check for
    mts to fix this bug.
    
    Fixes: 68ab801e32bb ("[ALSA] Add snd-mts64 driver for ESI Miditerminal 4140")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Link: https://lore.kernel.org/r/20221206061004.1222966-1-cuigaosheng1@huawei.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9018550d96dfdaacb1c80d03d884ef23760cde04
Author: Liu Shixin <liushixin2@huawei.com>
Date:   Sat Nov 26 11:31:26 2022 +0000

    media: saa7164: fix missing pci_disable_device()
    
    [ Upstream commit 57fb35d7542384cac8f198cd1c927540ad38b61a ]
    
    Add missing pci_disable_device() in the error path in saa7164_initdev().
    
    Fixes: 443c1228d505 ("V4L/DVB (12923): SAA7164: Add support for the NXP SAA7164 silicon")
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2df1e2a6ec5254216bd8257b4d887f75fa903a57
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 5 14:21:22 2022 +0100

    ALSA: pcm: Set missing stop_operating flag at undoing trigger start
    
    [ Upstream commit 5c8cc93b06d1ff860327a273abf3ac006290d242 ]
    
    When a PCM trigger-start fails at snd_pcm_do_start(), PCM core tries
    to undo the action at snd_pcm_undo_start() by issuing the trigger STOP
    manually.  At that point, we forgot to set the stop_operating flag,
    hence the sync-stop won't be issued at the next prepare or other
    calls.
    
    This patch adds the missing stop_operating flag at
    snd_pcm_undo_start().
    
    Fixes: 1e850beea278 ("ALSA: pcm: Add the support for sync-stop operation")
    Link: https://lore.kernel.org/r/b4e71631-4a94-613-27b2-fb595792630@carlh.net
    Link: https://lore.kernel.org/r/20221205132124.11585-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a443c55d96dede82a724df6e70a318ad15c199e1
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Dec 2 11:16:40 2022 +0000

    bpf, sockmap: fix race in sock_map_free()
    
    [ Upstream commit 0a182f8d607464911756b4dbef5d6cad8de22469 ]
    
    sock_map_free() calls release_sock(sk) without owning a reference
    on the socket. This can cause use-after-free as syzbot found [1]
    
    Jakub Sitnicki already took care of a similar issue
    in sock_hash_free() in commit 75e68e5bf2c7 ("bpf, sockhash:
    Synchronize delete from bucket list on map free")
    
    [1]
    refcount_t: decrement hit 0; leaking memory.
    WARNING: CPU: 0 PID: 3785 at lib/refcount.c:31 refcount_warn_saturate+0x17c/0x1a0 lib/refcount.c:31
    Modules linked in:
    CPU: 0 PID: 3785 Comm: kworker/u4:6 Not tainted 6.1.0-rc7-syzkaller-00103-gef4d3ea40565 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
    Workqueue: events_unbound bpf_map_free_deferred
    RIP: 0010:refcount_warn_saturate+0x17c/0x1a0 lib/refcount.c:31
    Code: 68 8b 31 c0 e8 75 71 15 fd 0f 0b e9 64 ff ff ff e8 d9 6e 4e fd c6 05 62 9c 3d 0a 01 48 c7 c7 80 bb 68 8b 31 c0 e8 54 71 15 fd <0f> 0b e9 43 ff ff ff 89 d9 80 e1 07 80 c1 03 38 c1 0f 8c a2 fe ff
    RSP: 0018:ffffc9000456fb60 EFLAGS: 00010246
    RAX: eae59bab72dcd700 RBX: 0000000000000004 RCX: ffff8880207057c0
    RDX: 0000000000000000 RSI: 0000000000000201 RDI: 0000000000000000
    RBP: 0000000000000004 R08: ffffffff816fdabd R09: fffff520008adee5
    R10: fffff520008adee5 R11: 1ffff920008adee4 R12: 0000000000000004
    R13: dffffc0000000000 R14: ffff88807b1c6c00 R15: 1ffff1100f638dcf
    FS: 0000000000000000(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
    CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b30c30000 CR3: 000000000d08e000 CR4: 00000000003506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
    <TASK>
    __refcount_dec include/linux/refcount.h:344 [inline]
    refcount_dec include/linux/refcount.h:359 [inline]
    __sock_put include/net/sock.h:779 [inline]
    tcp_release_cb+0x2d0/0x360 net/ipv4/tcp_output.c:1092
    release_sock+0xaf/0x1c0 net/core/sock.c:3468
    sock_map_free+0x219/0x2c0 net/core/sock_map.c:356
    process_one_work+0x81c/0xd10 kernel/workqueue.c:2289
    worker_thread+0xb14/0x1330 kernel/workqueue.c:2436
    kthread+0x266/0x300 kernel/kthread.c:376
    ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306
    </TASK>
    
    Fixes: 7e81a3530206 ("bpf: Sockmap, ensure sock lock held during tear down")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Jakub Sitnicki <jakub@cloudflare.com>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Song Liu <songliubraving@fb.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/r/20221202111640.2745533-1-edumazet@google.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5229b9033713e0c6cf41d7298816466695cd9c7e
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Oct 23 23:31:57 2022 +0200

    hwmon: (jc42) Restore the min/max/critical temperatures on resume
    
    [ Upstream commit 084ed144c448fd5bc8ed5a58247153fbbfd115c3 ]
    
    The JC42 compatible thermal sensor on Kingston KSM32ES8/16ME DIMMs
    (using Micron E-Die) is an ST Microelectronics STTS2004 (manufacturer
    0x104a, device 0x2201). It does not keep the previously programmed
    minimum, maximum and critical temperatures after system suspend and
    resume (which is a shutdown / startup cycle for the JC42 temperature
    sensor). This results in an alarm on system resume because the hardware
    default for these values is 0°C (so any environment temperature greater
    than 0°C will trigger the alarm).
    
    Example before system suspend:
      jc42-i2c-0-1a
      Adapter: SMBus PIIX4 adapter port 0 at 0b00
      temp1:        +34.8°C  (low  =  +0.0°C)
                             (high = +85.0°C, hyst = +85.0°C)
                             (crit = +95.0°C, hyst = +95.0°C)
    
    Example after system resume (without this change):
      jc42-i2c-0-1a
      Adapter: SMBus PIIX4 adapter port 0 at 0b00
      temp1:        +34.8°C  (low  =  +0.0°C)             ALARM (HIGH, CRIT)
                             (high =  +0.0°C, hyst =  +0.0°C)
                             (crit =  +0.0°C, hyst =  +0.0°C)
    
    Apply the cached values from the JC42_REG_TEMP_UPPER,
    JC42_REG_TEMP_LOWER, JC42_REG_TEMP_CRITICAL and JC42_REG_SMBUS (where
    the SMBUS register is not related to this issue but a side-effect of
    using regcache_sync() during system resume with the previously
    cached/programmed values. This fixes the alarm due to the hardware
    defaults of 0°C because the previously applied limits (set by userspace)
    are re-applied on system resume.
    
    Fixes: 175c490c9e7f ("hwmon: (jc42) Add support for STTS2004 and AT30TSE004")
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Link: https://lore.kernel.org/r/20221023213157.11078-3-martin.blumenstingl@googlemail.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 785f5c732ab8a3954d865f022c6cef3703c6f135
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Oct 23 23:31:56 2022 +0200

    hwmon: (jc42) Convert register access and caching to regmap/regcache
    
    [ Upstream commit 8f2fa4726faf01094d7a5be7bd0c120c565f54d9 ]
    
    Switch the jc42 driver to use an I2C regmap to access the registers.
    Also move over to regmap's built-in caching instead of adding a
    custom caching implementation. This works for JC42_REG_TEMP_UPPER,
    JC42_REG_TEMP_LOWER and JC42_REG_TEMP_CRITICAL as these values never
    change except when explicitly written. The cache For JC42_REG_TEMP is
    dropped (regmap can't cache it because it's volatile, meaning it can
    change at any time) as well for simplicity and consistency with other
    drivers.
    
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Link: https://lore.kernel.org/r/20221023213157.11078-2-martin.blumenstingl@googlemail.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Stable-dep-of: 084ed144c448 ("hwmon: (jc42) Restore the min/max/critical temperatures on resume")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4c64d8abd656b9807b63178750fa91454602b86
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Dec 2 10:51:11 2022 +0800

    regulator: core: fix resource leak in regulator_register()
    
    [ Upstream commit ba62319a42c50e6254e98b3f316464fac8e77968 ]
    
    I got some resource leak reports while doing fault injection test:
    
      OF: ERROR: memory leak, expected refcount 1 instead of 100,
      of_node_get()/of_node_put() unbalanced - destroy cset entry:
      attach overlay node /i2c/pmic@64/regulators/buck1
    
    unreferenced object 0xffff88810deea000 (size 512):
      comm "490-i2c-rt5190a", pid 253, jiffies 4294859840 (age 5061.046s)
      hex dump (first 32 bytes):
        00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........
        ff ff ff ff ff ff ff ff a0 1e 00 a1 ff ff ff ff  ................
      backtrace:
        [<00000000d78541e2>] kmalloc_trace+0x21/0x110
        [<00000000b343d153>] device_private_init+0x32/0xd0
        [<00000000be1f0c70>] device_add+0xb2d/0x1030
        [<00000000e3e6344d>] regulator_register+0xaf2/0x12a0
        [<00000000e2f5e754>] devm_regulator_register+0x57/0xb0
        [<000000008b898197>] rt5190a_probe+0x52a/0x861 [rt5190a_regulator]
    
    unreferenced object 0xffff88810b617b80 (size 32):
      comm "490-i2c-rt5190a", pid 253, jiffies 4294859904 (age 5060.983s)
      hex dump (first 32 bytes):
        72 65 67 75 6c 61 74 6f 72 2e 32 38 36 38 2d 53  regulator.2868-S
        55 50 50 4c 59 00 ff ff 29 00 00 00 2b 00 00 00  UPPLY...)...+...
      backtrace:
        [<000000009da9280d>] __kmalloc_node_track_caller+0x44/0x1b0
        [<0000000025c6a4e5>] kstrdup+0x3a/0x70
        [<00000000790efb69>] create_regulator+0xc0/0x4e0
        [<0000000005ed203a>] regulator_resolve_supply+0x2d4/0x440
        [<0000000045796214>] regulator_register+0x10b3/0x12a0
        [<00000000e2f5e754>] devm_regulator_register+0x57/0xb0
        [<000000008b898197>] rt5190a_probe+0x52a/0x861 [rt5190a_regulator]
    
    After calling regulator_resolve_supply(), the 'rdev->supply' is set
    by set_supply(), after this set, in the error path, the resources
    need be released, so call regulator_put() to avoid the leaks.
    
    Fixes: aea6cb99703e ("regulator: resolve supply after creating regulator")
    Fixes: 8a866d527ac0 ("regulator: core: Resolve supply name earlier to prevent double-init")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221202025111.496402-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07f82dca112262b169bec0001378126439cab776
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Mon Oct 17 09:42:30 2022 +0800

    configfs: fix possible memory leak in configfs_create_dir()
    
    [ Upstream commit c65234b283a65cfbfc94619655e820a5e55199eb ]
    
    kmemleak reported memory leaks in configfs_create_dir():
    
    unreferenced object 0xffff888009f6af00 (size 192):
      comm "modprobe", pid 3777, jiffies 4295537735 (age 233.784s)
      backtrace:
        kmem_cache_alloc (mm/slub.c:3250 mm/slub.c:3256 mm/slub.c:3263 mm/slub.c:3273)
        new_fragment (./include/linux/slab.h:600 fs/configfs/dir.c:163)
        configfs_register_subsystem (fs/configfs/dir.c:1857)
        basic_write (drivers/hwtracing/stm/p_basic.c:14) stm_p_basic
        do_one_initcall (init/main.c:1296)
        do_init_module (kernel/module/main.c:2455)
        ...
    
    unreferenced object 0xffff888003ba7180 (size 96):
      comm "modprobe", pid 3777, jiffies 4295537735 (age 233.784s)
      backtrace:
        kmem_cache_alloc (mm/slub.c:3250 mm/slub.c:3256 mm/slub.c:3263 mm/slub.c:3273)
        configfs_new_dirent (./include/linux/slab.h:723 fs/configfs/dir.c:194)
        configfs_make_dirent (fs/configfs/dir.c:248)
        configfs_create_dir (fs/configfs/dir.c:296)
        configfs_attach_group.isra.28 (fs/configfs/dir.c:816 fs/configfs/dir.c:852)
        configfs_register_subsystem (fs/configfs/dir.c:1881)
        basic_write (drivers/hwtracing/stm/p_basic.c:14) stm_p_basic
        do_one_initcall (init/main.c:1296)
        do_init_module (kernel/module/main.c:2455)
        ...
    
    This is because the refcount is not correct in configfs_make_dirent().
    For normal stage, the refcount is changing as:
    
    configfs_register_subsystem()
      configfs_create_dir()
        configfs_make_dirent()
          configfs_new_dirent() # set s_count = 1
          dentry->d_fsdata = configfs_get(sd); # s_count = 2
    ...
    configfs_unregister_subsystem()
      configfs_remove_dir()
        remove_dir()
          configfs_remove_dirent() # s_count = 1
        dput() ...
          *dentry_unlink_inode()*
            configfs_d_iput() # s_count = 0, release
    
    However, if we failed in configfs_create():
    
    configfs_register_subsystem()
      configfs_create_dir()
        configfs_make_dirent() # s_count = 2
        ...
        configfs_create() # fail
        ->out_remove:
        configfs_remove_dirent(dentry)
          configfs_put(sd) # s_count = 1
          return PTR_ERR(inode);
    
    There is no inode in the error path, so the configfs_d_iput() is lost
    and makes sd and fragment memory leaked.
    
    To fix this, when we failed in configfs_create(), manually call
    configfs_put(sd) to keep the refcount correct.
    
    Fixes: 7063fbf22611 ("[PATCH] configfs: User-driven configuration filesystem")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21a061772b08c393c2b986d86ccb57db6417f53c
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Nov 29 17:48:13 2022 +0100

    hsr: Synchronize sequence number updates.
    
    [ Upstream commit 5c7aa13210c3abdd34fd421f62347665ec6eb551 ]
    
    hsr_register_frame_out() compares new sequence_nr vs the old one
    recorded in hsr_node::seq_out and if the new sequence_nr is higher then
    it will be written to hsr_node::seq_out as the new value.
    
    This operation isn't locked so it is possible that two frames with the
    same sequence number arrive (via the two slave devices) and are fed to
    hsr_register_frame_out() at the same time. Both will pass the check and
    update the sequence counter later to the same value. As a result the
    content of the same packet is fed into the stack twice.
    
    This was noticed by running ping and observing DUP being reported from
    time to time.
    
    Instead of using the hsr_priv::seqnr_lock for the whole receive path (as
    it is for sending in the master node) add an additional lock that is only
    used for sequence number checks and updates.
    
    Add a per-node lock that is used during sequence number reads and
    updates.
    
    Fixes: f421436a591d3 ("net/hsr: Add support for the High-availability Seamless Redundancy protocol (HSRv0)")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a82f5b2e0864e3cb4d654a06c1c6b095a7ae50a6
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Nov 29 17:48:12 2022 +0100

    hsr: Synchronize sending frames to have always incremented outgoing seq nr.
    
    [ Upstream commit 06afd2c31d338fa762548580c1bf088703dd1e03 ]
    
    Sending frames via the hsr (master) device requires a sequence number
    which is tracked in hsr_priv::sequence_nr and protected by
    hsr_priv::seqnr_lock. Each time a new frame is sent, it will obtain a
    new id and then send it via the slave devices.
    Each time a packet is sent (via hsr_forward_do()) the sequence number is
    checked via hsr_register_frame_out() to ensure that a frame is not
    handled twice. This make sense for the receiving side to ensure that the
    frame is not injected into the stack twice after it has been received
    from both slave ports.
    
    There is no locking to cover the sending path which means the following
    scenario is possible:
    
      CPU0                          CPU1
      hsr_dev_xmit(skb1)            hsr_dev_xmit(skb2)
       fill_frame_info()             fill_frame_info()
        hsr_fill_frame_info()         hsr_fill_frame_info()
         handle_std_frame()            handle_std_frame()
          skb1's sequence_nr = 1
                                        skb2's sequence_nr = 2
       hsr_forward_do()              hsr_forward_do()
    
                                       hsr_register_frame_out(, 2)  // okay, send)
    
        hsr_register_frame_out(, 1) // stop, lower seq duplicate
    
    Both skbs (or their struct hsr_frame_info) received an unique id.
    However since skb2 was sent before skb1, the higher sequence number was
    recorded in hsr_register_frame_out() and the late arriving skb1 was
    dropped and never sent.
    
    This scenario has been observed in a three node HSR setup, with node1 +
    node2 having ping and iperf running in parallel. From time to time ping
    reported a missing packet. Based on tracing that missing ping packet did
    not leave the system.
    
    It might be possible (didn't check) to drop the sequence number check on
    the sending side. But if the higher sequence number leaves on wire
    before the lower does and the destination receives them in that order
    and it will drop the packet with the lower sequence number and never
    inject into the stack.
    Therefore it seems the only way is to lock the whole path from obtaining
    the sequence number and sending via dev_queue_xmit() and assuming the
    packets leave on wire in the same order (and don't get reordered by the
    NIC).
    
    Cover the whole path for the master interface from obtaining the ID
    until after it has been forwarded via hsr_forward_skb() to ensure the
    skbs are sent to the NIC in the order of the assigned sequence numbers.
    
    Fixes: f421436a591d3 ("net/hsr: Add support for the High-availability Seamless Redundancy protocol (HSRv0)")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb3b40cd6ae5aa42ceee58a2ba397db816eb0606
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Nov 29 17:48:11 2022 +0100

    hsr: Disable netpoll.
    
    [ Upstream commit d5c7652eb16fa203d82546e0285136d7b321ffa9 ]
    
    The hsr device is a software device. Its
    net_device_ops::ndo_start_xmit() routine will process the packet and
    then pass the resulting skb to dev_queue_xmit().
    During processing, hsr acquires a lock with spin_lock_bh()
    (hsr_add_node()) which needs to be promoted to the _irq() suffix in
    order to avoid a potential deadlock.
    Then there are the warnings in dev_queue_xmit() (due to
    local_bh_disable() with disabled interrupts) left.
    
    Instead trying to address those (there is qdisc and…) for netpoll sake,
    just disable netpoll on hsr.
    
    Disable netpoll on hsr and replace the _irqsave() locking with _bh().
    
    Fixes: f421436a591d3 ("net/hsr: Add support for the High-availability Seamless Redundancy protocol (HSRv0)")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e148d981bcc566cddb1085e100400f082890aa9
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Nov 29 17:48:10 2022 +0100

    hsr: Avoid double remove of a node.
    
    [ Upstream commit 0c74d9f79ec4299365bbe803baa736ae0068179e ]
    
    Due to the hashed-MAC optimisation one problem become visible:
    hsr_handle_sup_frame() walks over the list of available nodes and merges
    two node entries into one if based on the information in the supervision
    both MAC addresses belong to one node. The list-walk happens on a RCU
    protected list and delete operation happens under a lock.
    
    If the supervision arrives on both slave interfaces at the same time
    then this delete operation can occur simultaneously on two CPUs. The
    result is the first-CPU deletes the from the list and the second CPUs
    BUGs while attempting to dereference a poisoned list-entry. This happens
    more likely with the optimisation because a new node for the mac_B entry
    is created once a packet has been received and removed (merged) once the
    supervision frame has been received.
    
    Avoid removing/ cleaning up a hsr_node twice by adding a `removed' field
    which is set to true after the removal and checked before the removal.
    
    Fixes: f266a683a4804 ("net/hsr: Better frame dispatch")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9387cbf7f7fde3b4f54f9cd6aa1a085ae0680918
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Nov 29 17:48:09 2022 +0100

    hsr: Add a rcu-read lock to hsr_forward_skb().
    
    [ Upstream commit 5aa2820177af650293b2f9f1873c1f6f8e4ad7a4 ]
    
    hsr_forward_skb() a skb and keeps information in an on-stack
    hsr_frame_info. hsr_get_node() assigns hsr_frame_info::node_src which is
    from a RCU list. This pointer is used later in hsr_forward_do().
    I don't see a reason why this pointer can't vanish midway since there is
    no guarantee that hsr_forward_skb() is invoked from an RCU read section.
    
    Use rcu_read_lock() to protect hsr_frame_info::node_src from its
    assignment until it is no longer used.
    
    Fixes: f266a683a4804 ("net/hsr: Better frame dispatch")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a051e10bfc6906d29dae7a31f0773f2702edfe1b
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Tue Nov 8 22:56:25 2022 +0100

    clk: qcom: clk-krait: fix wrong div2 functions
    
    [ Upstream commit d676d3a3717cf726d3affedbe5ba98fc4ccad7b3 ]
    
    Currently div2 value is applied to the wrong bits. This is caused by a
    bug in the code where the shift is done only for lpl, for anything
    else the mask is not shifted to the correct bits.
    
    Fix this by correctly shift if lpl is not supported.
    
    Fixes: 4d7dc77babfe ("clk: qcom: Add support for Krait clocks")
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221108215625.30186-1-ansuelsmth@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8275c7465d9e253b2030698ba93e9de6851412ff
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri Nov 4 06:56:29 2022 -0700

    clk: qcom: lpass-sc7180: Fix pm_runtime usage
    
    [ Upstream commit ff1ccf59eaffd192efe21f7de9fb0c130faf1b1b ]
    
    The sc7180 lpass clock controller's pm_runtime usage wasn't broken
    quite as spectacularly as the sc7280's pm_runtime usage, but it was
    still broken. Putting some printouts in at boot showed me this (with
    serial console enabled, which makes the prints slow and thus changes
    timing):
      [    3.109951] DOUG: my_pm_clk_resume, usage=1
      [    3.114767] DOUG: my_pm_clk_resume, usage=1
      [    3.664443] DOUG: my_pm_clk_suspend, usage=0
      [    3.897566] DOUG: my_pm_clk_suspend, usage=0
      [    3.910137] DOUG: my_pm_clk_resume, usage=1
      [    3.923217] DOUG: my_pm_clk_resume, usage=0
      [    4.440116] DOUG: my_pm_clk_suspend, usage=-1
      [    4.444982] DOUG: my_pm_clk_suspend, usage=0
      [   14.170501] DOUG: my_pm_clk_resume, usage=1
      [   14.176245] DOUG: my_pm_clk_resume, usage=0
    
    ...or this w/out serial console:
      [    0.556139] DOUG: my_pm_clk_resume, usage=1
      [    0.556279] DOUG: my_pm_clk_resume, usage=1
      [    1.058422] DOUG: my_pm_clk_suspend, usage=-1
      [    1.058464] DOUG: my_pm_clk_suspend, usage=0
      [    1.186250] DOUG: my_pm_clk_resume, usage=1
      [    1.186292] DOUG: my_pm_clk_resume, usage=0
      [    1.731536] DOUG: my_pm_clk_suspend, usage=-1
      [    1.731557] DOUG: my_pm_clk_suspend, usage=0
      [   10.288910] DOUG: my_pm_clk_resume, usage=1
      [   10.289496] DOUG: my_pm_clk_resume, usage=0
    
    It seems to be doing roughly the right sequence of calls, but just
    like with sc7280 this is more by luck than anything. Having a usage of
    -1 is just not OK.
    
    Let's fix this like we did with sc7280.
    
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Fixes: ce8c195e652f ("clk: qcom: lpasscc: Introduce pm autosuspend for SC7180")
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221104064055.2.I49b25b9bda9430fc7ea21e5a708ca5a0aced2798@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91657ec4d0e5cd5419cefa2ba66fa9bbcd341a38
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 1 20:27:05 2022 +0800

    regulator: core: fix module refcount leak in set_supply()
    
    [ Upstream commit da46ee19cbd8344d6860816b4827a7ce95764867 ]
    
    If create_regulator() fails in set_supply(), the module refcount
    needs be put to keep refcount balanced.
    
    Fixes: e2c09ae7a74d ("regulator: core: Increase refcount for regulator supply's module")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221201122706.4055992-2-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66976a3be9bcf9eefb2b4e7b11856db414982219
Author: Deren Wu <deren.wu@mediatek.com>
Date:   Sun Nov 27 10:35:37 2022 +0800

    wifi: mt76: fix coverity overrun-call in mt76_get_txpower()
    
    [ Upstream commit 03dd0d49de7db680a856fa566963bb8421f46368 ]
    
    Make sure the nss is valid for nss_delta array. Return zero
    if the index is invalid.
    
    Coverity message:
    Event overrun-call: Overrunning callee's array of size 4 by passing
    argument "n_chains" (which evaluates to 15) in call to
    "mt76_tx_power_nss_delta".
    int delta = mt76_tx_power_nss_delta(n_chains);
    
    Fixes: 07cda406308b ("mt76: fix rounding issues on converting per-chain and combined txpower")
    Signed-off-by: Deren Wu <deren.wu@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a21e3f6f414b9bad2cde938bf41079f139568b41
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Wed Nov 2 13:46:50 2022 +0100

    wifi: mt76: mt7921: fix reporting of TX AGGR histogram
    
    [ Upstream commit 028b4f22b37b88821fd87b56ce47b180583c774e ]
    
    Similar to mt7915, fix stats clash between bins [4-7] in 802.11 tx
    aggregation histogram.
    
    Fixes: 163f4d22c118d ("mt76: mt7921: add MAC support")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8659018b630e4b5d7ab51c522f278c42c3d5b43
Author: Xing Song <xing.song@mediatek.com>
Date:   Mon Jan 24 11:28:11 2022 +0800

    mt76: stop the radar detector after leaving dfs channel
    
    [ Upstream commit 4e58ef4b6d727abdb071f7799aef763f8d6f2ad8 ]
    
    The radar detctor is used for dfs channel. So it will start after switching
    to dfs channel and will stop after leaving. The TX will be blocked if radar
    detctor isn't stopped in non-dfs channel.
    
    This patch resets the dfs state to indicate the radar detector needs to be
    stopped.
    
    Signed-off-by: Xing Song <xing.song@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae19622e7ff8da5f5d7c4bd851f923a393bc5cd5
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Wed Nov 9 17:02:37 2022 +0800

    wifi: cfg80211: Fix not unregister reg_pdev when load_builtin_regdb_keys() fails
    
    [ Upstream commit 833a9fd28c9b7ccb39a334721379e992dc1c0c89 ]
    
    In regulatory_init_db(), when it's going to return a error, reg_pdev
    should be unregistered. When load_builtin_regdb_keys() fails it doesn't
    do it and makes cfg80211 can't be reload with report:
    
    sysfs: cannot create duplicate filename '/devices/platform/regulatory.0'
     ...
     <TASK>
     dump_stack_lvl+0x79/0x9b
     sysfs_warn_dup.cold+0x1c/0x29
     sysfs_create_dir_ns+0x22d/0x290
     kobject_add_internal+0x247/0x800
     kobject_add+0x135/0x1b0
     device_add+0x389/0x1be0
     platform_device_add+0x28f/0x790
     platform_device_register_full+0x376/0x4b0
     regulatory_init+0x9a/0x4b2 [cfg80211]
     cfg80211_init+0x84/0x113 [cfg80211]
     ...
    
    Fixes: 90a53e4432b1 ("cfg80211: implement regdb signature checking")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Link: https://lore.kernel.org/r/20221109090237.214127-1-chenzhongjin@huawei.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e32f1299814e8aa2e75aa58704543a36ea3e201
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Thu Nov 17 14:45:00 2022 +0800

    wifi: mac80211: fix memory leak in ieee80211_if_add()
    
    [ Upstream commit 13e5afd3d773c6fc6ca2b89027befaaaa1ea7293 ]
    
    When register_netdevice() failed in ieee80211_if_add(), ndev->tstats
    isn't released. Fix it.
    
    Fixes: 5a490510ba5f ("mac80211: use per-CPU TX/RX statistics")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Link: https://lore.kernel.org/r/20221117064500.319983-1-shaozhengchao@huawei.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f58888434d75098a24604ffb5a6a46033704096b
Author: Alexander Sverdlin <alexander.sverdlin@siemens.com>
Date:   Wed Nov 30 17:29:27 2022 +0100

    spi: spidev: mask SPI_CS_HIGH in SPI_IOC_RD_MODE
    
    [ Upstream commit 7dbfa445ff7393d1c4c066c1727c9e0af1251958 ]
    
    Commit f3186dd87669 ("spi: Optionally use GPIO descriptors for CS GPIOs")
    has changed the user-space interface so that bogus SPI_CS_HIGH started
    to appear in the mask returned by SPI_IOC_RD_MODE even for active-low CS
    pins. Commit 138c9c32f090
    ("spi: spidev: Fix CS polarity if GPIO descriptors are used") fixed only
    SPI_IOC_WR_MODE part of the problem. Let's fix SPI_IOC_RD_MODE
    symmetrically.
    
    Test case:
    
            #include <sys/ioctl.h>
            #include <fcntl.h>
            #include <linux/spi/spidev.h>
    
            int main(int argc, char **argv)
            {
                    char modew = SPI_CPHA;
                    char moder;
                    int f = open("/dev/spidev0.0", O_RDWR);
    
                    if (f < 0)
                            return 1;
    
                    ioctl(f, SPI_IOC_WR_MODE, &modew);
                    ioctl(f, SPI_IOC_RD_MODE, &moder);
    
                    return moder == modew ? 0 : 2;
            }
    
    Fixes: f3186dd87669 ("spi: Optionally use GPIO descriptors for CS GPIOs")
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@siemens.com>
    Link: https://lore.kernel.org/r/20221130162927.539512-1-alexander.sverdlin@siemens.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6d27d9250e70acbcf986e6daa1ce01c1cb02dbf
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Nov 28 14:06:14 2022 +0300

    bonding: uninitialized variable in bond_miimon_inspect()
    
    [ Upstream commit e5214f363dabca240446272dac54d404501ad5e5 ]
    
    The "ignore_updelay" variable needs to be initialized to false.
    
    Fixes: f8a65ab2f3ff ("bonding: fix link recovery in mode 2 when updelay is nonzero")
    Signed-off-by: Dan Carpenter <error27@gmail.com>
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Acked-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Link: https://lore.kernel.org/r/Y4SWJlh3ohJ6EPTL@kili
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7201e4f4f52e26e36230d0fc6e98e32b4c727a3c
Author: Pengcheng Yang <yangpc@wangsu.com>
Date:   Tue Nov 29 18:40:40 2022 +0800

    bpf, sockmap: Fix data loss caused by using apply_bytes on ingress redirect
    
    [ Upstream commit 9072931f020bfd907d6d89ee21ff1481cd78b407 ]
    
    Use apply_bytes on ingress redirect, when apply_bytes is less than
    the length of msg data, some data may be skipped and lost in
    bpf_tcp_ingress().
    
    If there is still data in the scatterlist that has not been consumed,
    we cannot move the msg iter.
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Pengcheng Yang <yangpc@wangsu.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/1669718441-2654-4-git-send-email-yangpc@wangsu.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6105ed3598e19e419221edad6a0436eb568501c6
Author: Pengcheng Yang <yangpc@wangsu.com>
Date:   Tue Nov 29 18:40:39 2022 +0800

    bpf, sockmap: Fix missing BPF_F_INGRESS flag when using apply_bytes
    
    [ Upstream commit a351d6087bf7d3d8440d58d3bf244ec64b89394a ]
    
    When redirecting, we use sk_msg_to_ingress() to get the BPF_F_INGRESS
    flag from the msg->flags. If apply_bytes is used and it is larger than
    the current data being processed, sk_psock_msg_verdict() will not be
    called when sendmsg() is called again. At this time, the msg->flags is 0,
    and we lost the BPF_F_INGRESS flag.
    
    So we need to save the BPF_F_INGRESS flag in sk_psock and use it when
    redirection.
    
    Fixes: 8934ce2fd081 ("bpf: sockmap redirect ingress support")
    Signed-off-by: Pengcheng Yang <yangpc@wangsu.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/1669718441-2654-3-git-send-email-yangpc@wangsu.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8786bde11a4f31b63b3036731df0b47337a7a245
Author: Pengcheng Yang <yangpc@wangsu.com>
Date:   Tue Nov 29 18:40:38 2022 +0800

    bpf, sockmap: Fix repeated calls to sock_put() when msg has more_data
    
    [ Upstream commit 7a9841ca025275b5b0edfb0b618934abb6ceec15 ]
    
    In tcp_bpf_send_verdict() redirection, the eval variable is assigned to
    __SK_REDIRECT after the apply_bytes data is sent, if msg has more_data,
    sock_put() will be called multiple times.
    
    We should reset the eval variable to __SK_NONE every time more_data
    starts.
    
    This causes:
    
    IPv4: Attempt to release TCP socket in state 1 00000000b4c925d7
    ------------[ cut here ]------------
    refcount_t: addition on 0; use-after-free.
    WARNING: CPU: 5 PID: 4482 at lib/refcount.c:25 refcount_warn_saturate+0x7d/0x110
    Modules linked in:
    CPU: 5 PID: 4482 Comm: sockhash_bypass Kdump: loaded Not tainted 6.0.0 #1
    Hardware name: Red Hat KVM, BIOS 1.11.0-2.el7 04/01/2014
    Call Trace:
     <TASK>
     __tcp_transmit_skb+0xa1b/0xb90
     ? __alloc_skb+0x8c/0x1a0
     ? __kmalloc_node_track_caller+0x184/0x320
     tcp_write_xmit+0x22a/0x1110
     __tcp_push_pending_frames+0x32/0xf0
     do_tcp_sendpages+0x62d/0x640
     tcp_bpf_push+0xae/0x2c0
     tcp_bpf_sendmsg_redir+0x260/0x410
     ? preempt_count_add+0x70/0xa0
     tcp_bpf_send_verdict+0x386/0x4b0
     tcp_bpf_sendmsg+0x21b/0x3b0
     sock_sendmsg+0x58/0x70
     __sys_sendto+0xfa/0x170
     ? xfd_validate_state+0x1d/0x80
     ? switch_fpu_return+0x59/0xe0
     __x64_sys_sendto+0x24/0x30
     do_syscall_64+0x37/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Fixes: cd9733f5d75c ("tcp_bpf: Fix one concurrency problem in the tcp_bpf_send_verdict function")
    Signed-off-by: Pengcheng Yang <yangpc@wangsu.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/1669718441-2654-2-git-send-email-yangpc@wangsu.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a222f992ce5bd4084124dc22087e077788155d1b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Nov 30 15:01:07 2022 -0800

    Input: wistron_btns - disable on UML
    
    [ Upstream commit b2b80d9dd14cb5b70dc254bddbc4eea932694791 ]
    
    The wistron_btns driver calls rtc_cmos_read(), which isn't
    available with UML builds, so disable this driver on UML.
    
    Prevents this build error:
    
    ld: drivers/input/misc/wistron_btns.o: in function `poll_bios':
    wistron_btns.c:(.text+0x4be): undefined reference to `rtc_cmos_read'
    
    Fixes: 0bbadafdc49d ("um: allow disabling NO_IOMEM") # v5.14+
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20221130161604.1879-1-rdunlap@infradead.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d78649c21bbb5516fd6ee444ca16361af1e4d971
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Nov 22 16:00:09 2022 +0100

    netfilter: conntrack: set icmpv6 redirects as RELATED
    
    [ Upstream commit 7d7cfb48d81353e826493d24c7cec7360950968f ]
    
    icmp conntrack will set icmp redirects as RELATED, but icmpv6 will not
    do this.
    
    For icmpv6, only icmp errors (code <= 128) are examined for RELATED state.
    ICMPV6 Redirects are part of neighbour discovery mechanism, those are
    handled by marking a selected subset (e.g.  neighbour solicitations) as
    UNTRACKED, but not REDIRECT -- they will thus be flagged as INVALID.
    
    Add minimal support for REDIRECTs.  No parsing of neighbour options is
    added for simplicity, so this will only check that we have the embeeded
    original header (ND_OPT_REDIRECT_HDR), and then attempt to do a flow
    lookup for this tuple.
    
    Also extend the existing test case to cover redirects.
    
    Fixes: 9fb9cbb1082d ("[NETFILTER]: Add nf_conntrack subsystem.")
    Reported-by: Eric Garver <eric@garver.life>
    Link: https://github.com/firewalld/firewalld/issues/1046
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: Eric Garver <eric@garver.life>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09fe3b1392688cb22f8704f6a255a2f9e90af6a8
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Thu Sep 29 00:04:02 2022 +0800

    ASoC: pcm512x: Fix PM disable depth imbalance in pcm512x_probe
    
    [ Upstream commit 97b801be6f8e53676b9f2b105f54e35c745c1b22 ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context. We fix it by going to
    err_pm instead of err_clk.
    
    Fixes:f086ba9d5389c ("ASoC: pcm512x: Support mastering BCLK/LRCLK using the PLL")
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20220928160402.126140-1-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8876793e56ec69b3be2a883b4bc440df3dbb1865
Author: Konstantin Meskhidze <konstantin.meskhidze@huawei.com>
Date:   Mon Nov 28 23:02:54 2022 -0500

    drm/amdkfd: Fix memory leakage
    
    [ Upstream commit 75818afff631e1ea785a82c3e8bb82eb0dee539c ]
    
    This patch fixes potential memory leakage and seg fault
    in  _gpuvm_import_dmabuf() function
    
    Fixes: d4ec4bdc0bd5 ("drm/amdkfd: Allow access for mmapping KFD BOs")
    Signed-off-by: Konstantin Meskhidze <konstantin.meskhidze@huawei.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f2d2badf8ca5e7e7c30d88840b695c8af7286f3
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Tue Nov 22 19:30:43 2022 +0800

    drm/amdgpu: Fix PCI device refcount leak in amdgpu_atrm_get_bios()
    
    [ Upstream commit ca54639c7752edf1304d92ff4d0c049d4efc9ba0 ]
    
    As comment of pci_get_class() says, it returns a pci_device with its
    refcount increased and decreased the refcount for the input parameter
    @from if it is not NULL.
    
    If we break the loop in amdgpu_atrm_get_bios() with 'pdev' not NULL, we
    need to call pci_dev_put() to decrease the refcount. Add the missing
    pci_dev_put() to avoid refcount leak.
    
    Fixes: d38ceaf99ed0 ("drm/amdgpu: add core driver (v4)")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88c6e0995c04b170563b5c894c50a3b2152e18c2
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Tue Nov 22 19:30:42 2022 +0800

    drm/radeon: Fix PCI device refcount leak in radeon_atrm_get_bios()
    
    [ Upstream commit 725a521a18734f65de05b8d353b5bd0d3ca4c37a ]
    
    As comment of pci_get_class() says, it returns a pci_device with its
    refcount increased and decreased the refcount for the input parameter
    @from if it is not NULL.
    
    If we break the loop in radeon_atrm_get_bios() with 'pdev' not NULL, we
    need to call pci_dev_put() to decrease the refcount. Add the missing
    pci_dev_put() to avoid refcount leak.
    
    Fixes: d8ade3526b2a ("drm/radeon: handle non-VGA class pci devices with ATRM")
    Fixes: c61e2775873f ("drm/radeon: split ATRM support out from the ATPX handler (v3)")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0af0ff9fc00d6a56f4074123ebc55b4604a2766c
Author: Guchun Chen <guchun.chen@amd.com>
Date:   Tue Nov 22 17:33:24 2022 +0800

    drm/amd/pm/smu11: BACO is supported when it's in BACO state
    
    [ Upstream commit 6dca7efe6e522bf213c7dab691fa580d82f48f74 ]
    
    Return true early if ASIC is in BACO state already, no need
    to talk to SMU. It can fix the issue that driver was not
    calling BACO exit at all in runtime pm resume, and a timing
    issue leading to a PCI AER error happened eventually.
    
    Fixes: 8795e182b02d ("PCI/portdrv: Don't disable AER reporting in get_port_device_capability()")
    Suggested-by: Lijo Lazar <lijo.lazar@amd.com>
    Signed-off-by: Guchun Chen <guchun.chen@amd.com>
    Reviewed-by: Lijo Lazar <lijo.lazar@amd.com>
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27e7cf595d4a9fea9d3906b47d0faa87896beeb3
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Mon Nov 28 11:49:16 2022 +0100

    ASoC: mediatek: mt8173: Enable IRQ when pdata is ready
    
    [ Upstream commit 4cbb264d4e9136acab2c8fd39e39ab1b1402b84b ]
    
    If the device does not come straight from reset, we might receive an IRQ
    before we are ready to handle it.
    
    Fixes:
    
    [    2.334737] Unable to handle kernel read from unreadable memory at virtual address 00000000000001e4
    [    2.522601] Call trace:
    [    2.525040]  regmap_read+0x1c/0x80
    [    2.528434]  mt8173_afe_irq_handler+0x40/0xf0
    ...
    [    2.598921]  start_kernel+0x338/0x42c
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Fixes: ee0bcaff109f ("ASoC: mediatek: Add AFE platform driver")
    Link: https://lore.kernel.org/r/20221128-mt8173-afe-v1-0-70728221628f@chromium.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 905e5653756a518810ce4889438dd676c0a54914
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Nov 11 17:11:08 2021 +0100

    ASoC: mediatek: mt8173: Fix debugfs registration for components
    
    [ Upstream commit 8c32984bc7da29828260ac514d5d4967f7e8f62d ]
    
    When registering the mt8173-afe-pcm driver, we are also adding two
    components: one is for the PCM DAIs and one is for the HDMI DAIs, but
    when debugfs is enabled, we're getting the following issue:
    
    [   17.279176] debugfs: Directory '11220000.audio-controller' with parent 'mtk-rt5650' already present!
    [   17.288345] debugfs: Directory '11220000.audio-controller' with parent 'mtk-rt5650' already present!
    
    To overcome to that without any potentially big rewrite of this driver,
    similarly to what was done in mt8195-afe-pcm, add a debugfs_prefix to
    the components before actually adding them.
    
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20211111161108.502344-1-angelogioacchino.delregno@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Stable-dep-of: 4cbb264d4e91 ("ASoC: mediatek: mt8173: Enable IRQ when pdata is ready")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8e32f1bf1a9183a6aad560c6688500222d24299
Author: Ben Greear <greearb@candelatech.com>
Date:   Wed Nov 23 23:02:06 2022 +0200

    wifi: iwlwifi: mvm: fix double free on tx path.
    
    [ Upstream commit 0473cbae2137b963bd0eaa74336131cb1d3bc6c3 ]
    
    We see kernel crashes and lockups and KASAN errors related to ax210
    firmware crashes.  One of the KASAN dumps pointed at the tx path,
    and it appears there is indeed a way to double-free an skb.
    
    If iwl_mvm_tx_skb_sta returns non-zero, then the 'skb' sent into the
    method will be freed.  But, in case where we build TSO skb buffer,
    the skb may also be freed in error case.  So, return 0 in that particular
    error case and do cleanup manually.
    
    BUG: KASAN: use-after-free in __list_del_entry_valid+0x12/0x90
    iwlwifi 0000:06:00.0: 0x00000000 | tsf hi
    Read of size 8 at addr ffff88813cfa4ba0 by task btserver/9650
    
    CPU: 4 PID: 9650 Comm: btserver Tainted: G        W         5.19.8+ #5
    iwlwifi 0000:06:00.0: 0x00000000 | time gp1
    Hardware name: Default string Default string/SKYBAY, BIOS 5.12 02/19/2019
    Call Trace:
     <TASK>
     dump_stack_lvl+0x55/0x6d
     print_report.cold.12+0xf2/0x684
    iwlwifi 0000:06:00.0: 0x1D0915A8 | time gp2
     ? __list_del_entry_valid+0x12/0x90
     kasan_report+0x8b/0x180
    iwlwifi 0000:06:00.0: 0x00000001 | uCode revision type
     ? __list_del_entry_valid+0x12/0x90
     __list_del_entry_valid+0x12/0x90
    iwlwifi 0000:06:00.0: 0x00000048 | uCode version major
     tcp_update_skb_after_send+0x5d/0x170
     __tcp_transmit_skb+0xb61/0x15c0
    iwlwifi 0000:06:00.0: 0xDAA05125 | uCode version minor
     ? __tcp_select_window+0x490/0x490
    iwlwifi 0000:06:00.0: 0x00000420 | hw version
     ? trace_kmalloc_node+0x29/0xd0
     ? __kmalloc_node_track_caller+0x12a/0x260
     ? memset+0x1f/0x40
     ? __build_skb_around+0x125/0x150
     ? __alloc_skb+0x1d4/0x220
     ? skb_zerocopy_clone+0x55/0x230
    iwlwifi 0000:06:00.0: 0x00489002 | board version
     ? kmalloc_reserve+0x80/0x80
     ? rcu_read_lock_bh_held+0x60/0xb0
     tcp_write_xmit+0x3f1/0x24d0
    iwlwifi 0000:06:00.0: 0x034E001C | hcmd
     ? __check_object_size+0x180/0x350
    iwlwifi 0000:06:00.0: 0x24020000 | isr0
     tcp_sendmsg_locked+0x8a9/0x1520
    iwlwifi 0000:06:00.0: 0x01400000 | isr1
     ? tcp_sendpage+0x50/0x50
    iwlwifi 0000:06:00.0: 0x48F0000A | isr2
     ? lock_release+0xb9/0x400
     ? tcp_sendmsg+0x14/0x40
    iwlwifi 0000:06:00.0: 0x00C3080C | isr3
     ? lock_downgrade+0x390/0x390
     ? do_raw_spin_lock+0x114/0x1d0
    iwlwifi 0000:06:00.0: 0x00200000 | isr4
     ? rwlock_bug.part.2+0x50/0x50
    iwlwifi 0000:06:00.0: 0x034A001C | last cmd Id
     ? rwlock_bug.part.2+0x50/0x50
     ? lockdep_hardirqs_on_prepare+0xe/0x200
    iwlwifi 0000:06:00.0: 0x0000C2F0 | wait_event
     ? __local_bh_enable_ip+0x87/0xe0
     ? inet_send_prepare+0x220/0x220
    iwlwifi 0000:06:00.0: 0x000000C4 | l2p_control
     tcp_sendmsg+0x22/0x40
     sock_sendmsg+0x5f/0x70
    iwlwifi 0000:06:00.0: 0x00010034 | l2p_duration
     __sys_sendto+0x19d/0x250
    iwlwifi 0000:06:00.0: 0x00000007 | l2p_mhvalid
     ? __ia32_sys_getpeername+0x40/0x40
    iwlwifi 0000:06:00.0: 0x00000000 | l2p_addr_match
     ? rcu_read_lock_held_common+0x12/0x50
     ? rcu_read_lock_sched_held+0x5a/0xd0
     ? rcu_read_lock_bh_held+0xb0/0xb0
     ? rcu_read_lock_sched_held+0x5a/0xd0
     ? rcu_read_lock_sched_held+0x5a/0xd0
     ? lock_release+0xb9/0x400
     ? lock_downgrade+0x390/0x390
     ? ktime_get+0x64/0x130
     ? ktime_get+0x8d/0x130
     ? rcu_read_lock_held_common+0x12/0x50
     ? rcu_read_lock_sched_held+0x5a/0xd0
     ? rcu_read_lock_held_common+0x12/0x50
     ? rcu_read_lock_sched_held+0x5a/0xd0
     ? rcu_read_lock_bh_held+0xb0/0xb0
     ? rcu_read_lock_bh_held+0xb0/0xb0
     __x64_sys_sendto+0x6f/0x80
     do_syscall_64+0x34/0xb0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    RIP: 0033:0x7f1d126e4531
    Code: 00 00 00 00 0f 1f 44 00 00 f3 0f 1e fa 48 8d 05 35 80 0c 00 41 89 ca 8b 00 85 c0 75 1c 45 31 c9 45 31 c0 b8 2c 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 67 c3 66 0f 1f 44 00 00 55 48 83 ec 20 48 89
    RSP: 002b:00007ffe21a679d8 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    RAX: ffffffffffffffda RBX: 000000000000ffdc RCX: 00007f1d126e4531
    RDX: 0000000000010000 RSI: 000000000374acf0 RDI: 0000000000000014
    RBP: 00007ffe21a67ac0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000010
    R13: 0000000000000000 R14: 0000000000000001 R15: 0000000000000000
     </TASK>
    
    Allocated by task 9650:
     kasan_save_stack+0x1c/0x40
     __kasan_slab_alloc+0x6d/0x90
     kmem_cache_alloc_node+0xf3/0x2b0
     __alloc_skb+0x191/0x220
     tcp_stream_alloc_skb+0x3f/0x330
     tcp_sendmsg_locked+0x67c/0x1520
     tcp_sendmsg+0x22/0x40
     sock_sendmsg+0x5f/0x70
     __sys_sendto+0x19d/0x250
     __x64_sys_sendto+0x6f/0x80
     do_syscall_64+0x34/0xb0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Freed by task 9650:
     kasan_save_stack+0x1c/0x40
     kasan_set_track+0x21/0x30
     kasan_set_free_info+0x20/0x30
     __kasan_slab_free+0x102/0x170
     kmem_cache_free+0xc8/0x3e0
     iwl_mvm_mac_itxq_xmit+0x124/0x270 [iwlmvm]
     ieee80211_queue_skb+0x874/0xd10 [mac80211]
     ieee80211_xmit_fast+0xf80/0x1180 [mac80211]
     __ieee80211_subif_start_xmit+0x287/0x680 [mac80211]
     ieee80211_subif_start_xmit+0xcd/0x730 [mac80211]
     dev_hard_start_xmit+0xf6/0x420
     __dev_queue_xmit+0x165b/0x1b50
     ip_finish_output2+0x66e/0xfb0
     __ip_finish_output+0x487/0x6d0
     ip_output+0x11c/0x350
     __ip_queue_xmit+0x36b/0x9d0
     __tcp_transmit_skb+0xb35/0x15c0
     tcp_write_xmit+0x3f1/0x24d0
     tcp_sendmsg_locked+0x8a9/0x1520
     tcp_sendmsg+0x22/0x40
     sock_sendmsg+0x5f/0x70
     __sys_sendto+0x19d/0x250
     __x64_sys_sendto+0x6f/0x80
     do_syscall_64+0x34/0xb0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    The buggy address belongs to the object at ffff88813cfa4b40
     which belongs to the cache skbuff_fclone_cache of size 472
    The buggy address is located 96 bytes inside of
     472-byte region [ffff88813cfa4b40, ffff88813cfa4d18)
    
    The buggy address belongs to the physical page:
    page:ffffea0004f3e900 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88813cfa6c40 pfn:0x13cfa4
    head:ffffea0004f3e900 order:2 compound_mapcount:0 compound_pincount:0
    flags: 0x5fff8000010200(slab|head|node=0|zone=2|lastcpupid=0x3fff)
    raw: 005fff8000010200 ffffea0004656b08 ffffea0008e8cf08 ffff8881081a5240
    raw: ffff88813cfa6c40 0000000000170015 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff88813cfa4a80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff88813cfa4b00: fc fc fc fc fc fc fc fc fa fb fb fb fb fb fb fb
    >ffff88813cfa4b80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                   ^
     ffff88813cfa4c00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff88813cfa4c80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Fixes: 08f7d8b69aaf ("iwlwifi: mvm: bring back mvm GSO code")
    Link: https://lore.kernel.org/linux-wireless/20220928193057.16132-1-greearb@candelatech.com/
    Tested-by: Amol Jawale <amol.jawale@candelatech.com>
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Link: https://lore.kernel.org/r/20221123225313.21b1ee31d666.I3b3ba184433dd2a544d91eeeda29b467021824ae@changeid
    Signed-off-by: Gregory Greenman <gregory.greenman@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0bb44775c44735451de3d002e408dffc0b90c7a
Author: Liu Shixin <liushixin2@huawei.com>
Date:   Sat Nov 26 10:14:29 2022 +0800

    ALSA: asihpi: fix missing pci_disable_device()
    
    [ Upstream commit 9d86515c3d4c0564a0c31a2df87d735353a1971e ]
    
    pci_disable_device() need be called while module exiting, switch to use
    pcim_enable(), pci_disable_device() will be called in pcim_release().
    
    Fixes: 3285ea10e9b0 ("ALSA: asihpi - Interrelated HPI tidy up.")
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Link: https://lore.kernel.org/r/20221126021429.3029562-1-liushixin2@huawei.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f12377abac15fb4e8698225ac386894f8ae63598
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Nov 14 17:30:39 2022 -0500

    NFS: Fix an Oops in nfs_d_automount()
    
    [ Upstream commit 35e3b6ae84935d0d7ff76cbdaa83411b0ad5e471 ]
    
    When mounting from a NFSv4 referral, path->dentry can end up being a
    negative dentry, so derive the struct nfs_server from the dentry
    itself instead.
    
    Fixes: 2b0143b5c986 ("VFS: normal filesystems (and lustre): d_inode() annotations")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a96aff53c2165a3017531bfd6b1930a4591a6a0
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Fri Nov 4 13:20:01 2022 -0400

    NFSv4: Fix a deadlock between nfs4_open_recover_helper() and delegreturn
    
    [ Upstream commit 51069e4aef6257b0454057359faed0ab0c9af083 ]
    
    If we're asked to recover open state while a delegation return is
    outstanding, then the state manager thread cannot use a cached open, so
    if the server returns a delegation, we can end up deadlocked behind the
    pending delegreturn.
    To avoid this problem, let's just ask the server not to give us a
    delegation unless we're explicitly reclaiming one.
    
    Fixes: be36e185bd26 ("NFSv4: nfs4_open_recover_helper() must set share access")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6aca4c7ba8f6d40a0cfeeb09160dd8efdf97c64
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Oct 27 16:50:12 2022 -0400

    NFSv4: Fix a credential leak in _nfs4_discover_trunking()
    
    [ Upstream commit e83458fce080dc23c25353a1af90bfecf79c7369 ]
    
    Fixes: 4f40a5b55446 ("NFSv4: Add an fattr allocation to _nfs4_discover_trunking()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f6607c884267904296bb75b6776a1ac5ea86277
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Oct 19 13:12:11 2022 -0400

    NFSv4.2: Fix initialisation of struct nfs4_label
    
    [ Upstream commit c528f70f504434eaff993a5ddd52203a2010d51f ]
    
    The call to nfs4_label_init_security() should return a fully initialised
    label.
    
    Fixes: aa9c2669626c ("NFS: Client implementation of Labeled-NFS")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51899eefd1a6c0e1b2fa8d4a0a93356252bfbe7f
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Oct 18 18:21:14 2022 -0400

    NFSv4.2: Fix a memory stomp in decode_attr_security_label
    
    [ Upstream commit 43c1031f7110967c240cb6e922adcfc4b8899183 ]
    
    We must not change the value of label->len if it is zero, since that
    indicates we stored a label.
    
    Fixes: b4487b935452 ("nfs: Fix getxattr kernel panic and memory overflow")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34dffc77ddf665d87ab8ef348db2214cb476cef3
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Oct 18 16:44:47 2022 -0400

    NFSv4.2: Clear FATTR4_WORD2_SECURITY_LABEL when done decoding
    
    [ Upstream commit eef7314caf2d73a94b68ba293cd105154d3a664e ]
    
    We need to clear the FATTR4_WORD2_SECURITY_LABEL bitmap flag
    irrespective of whether or not the label is too long.
    
    Fixes: aa9c2669626c ("NFS: Client implementation of Labeled-NFS")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d926611c89ac21e1b24d10d408f13dd943905d73
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Nov 16 11:07:50 2022 +0800

    ASoC: mediatek: mtk-btcvsd: Add checks for write and read of mtk_btcvsd_snd
    
    [ Upstream commit d067b3378a78c9c3048ac535e31c171b6f5b5846 ]
    
    As the mtk_btcvsd_snd_write and mtk_btcvsd_snd_read may return error,
    it should be better to catch the exception.
    
    Fixes: 4bd8597dc36c ("ASoC: mediatek: add btcvsd driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20221116030750.40500-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f243ff92d6d346893f35712f0816a7b6a54a9be5
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Thu Oct 27 00:46:48 2022 -0700

    ASoC: dt-bindings: wcd9335: fix reset line polarity in example
    
    [ Upstream commit 34cb111f8a7b98b5fec809dd194003bca20ef1b2 ]
    
    When resetting the block, the reset line is being driven low and then
    high, which means that the line in DTS should be annotated as "active
    low".
    
    Fixes: 1877c9fda1b7 ("ASoC: dt-bindings: add dt bindings for wcd9335 audio codec")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20221027074652.1044235-2-dmitry.torokhov@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41d7b8291c6d753b49dfeba45b0c4a8ffaff874e
Author: Zhang Zekun <zhangzekun11@huawei.com>
Date:   Tue Aug 2 08:50:50 2022 +0000

    drm/tegra: Add missing clk_disable_unprepare() in tegra_dc_probe()
    
    [ Upstream commit 7ad4384d53c67672a8720cdc2ef638d7d1710ab8 ]
    
    Add the missing clk_disable_unprepare() before return from
    tegra_dc_probe() in the error handling path.
    
    Fixes: f68ba6912bd2 ("drm/tegra: dc: Link DC1 to DC0 on Tegra20")
    Signed-off-by: Zhang Zekun <zhangzekun11@huawei.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2376d7fa08bbd699421e7bc36da1707f91782265
Author: Aakarsh Jain <aakarsh.jain@samsung.com>
Date:   Mon Nov 14 11:50:23 2022 +0000

    media: s5p-mfc: Add variant data for MFC v7 hardware for Exynos 3250 SoC
    
    [ Upstream commit f50ebe10f5d8092c37e2bd430c78e03bf38b1e20 ]
    
    Commit 5441e9dafdfc6dc40 ("[media] s5p-mfc: Core support for MFC v7")
    which adds mfc v7 support for Exynos3250 and use the same compatible
    string as used by Exynos5240 but both the IPs are a bit different in
    terms of IP clock.
    Add variant driver data based on the new compatible string
    "samsung,exynos3250-mfc" for Exynos3250 SoC.
    
    Suggested-by: Alim Akhtar <alim.akhtar@samsung.com>
    Fixes: 5441e9dafdfc ("[media] s5p-mfc: Core support for MFC v7")
    Signed-off-by: Aakarsh Jain <aakarsh.jain@samsung.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 210fcf64be4db82c0e190e74b5111e4eef661a7a
Author: Baisong Zhong <zhongbaisong@huawei.com>
Date:   Sun Nov 20 06:59:18 2022 +0000

    media: dvb-usb: az6027: fix null-ptr-deref in az6027_i2c_xfer()
    
    [ Upstream commit 0ed554fd769a19ea8464bb83e9ac201002ef74ad ]
    
    Wei Chen reports a kernel bug as blew:
    
    general protection fault, probably for non-canonical address
    KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]
    ...
    Call Trace:
    <TASK>
    __i2c_transfer+0x77e/0x1930 drivers/i2c/i2c-core-base.c:2109
    i2c_transfer+0x1d5/0x3d0 drivers/i2c/i2c-core-base.c:2170
    i2cdev_ioctl_rdwr+0x393/0x660 drivers/i2c/i2c-dev.c:297
    i2cdev_ioctl+0x75d/0x9f0 drivers/i2c/i2c-dev.c:458
    vfs_ioctl fs/ioctl.c:51 [inline]
    __do_sys_ioctl fs/ioctl.c:870 [inline]
    __se_sys_ioctl+0xfb/0x170 fs/ioctl.c:856
    do_syscall_x64 arch/x86/entry/common.c:50 [inline]
    do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
    entry_SYSCALL_64_after_hwframe+0x63/0xcd
    RIP: 0033:0x7fd834a8bded
    
    In az6027_i2c_xfer(), if msg[i].addr is 0x99,
    a null-ptr-deref will caused when accessing msg[i].buf.
    For msg[i].len is 0 and msg[i].buf is null.
    
    Fix this by checking msg[i].len in az6027_i2c_xfer().
    
    Link: https://lore.kernel.org/lkml/CAO4mrfcPHB5aQJO=mpqV+p8mPLNg-Fok0gw8gZ=zemAfMGTzMg@mail.gmail.com/
    
    Link: https://lore.kernel.org/linux-media/20221120065918.2160782-1-zhongbaisong@huawei.com
    Fixes: 76f9a820c867 ("V4L/DVB: AZ6027: Initial import of the driver")
    Reported-by: Wei Chen <harperchen1110@gmail.com>
    Signed-off-by: Baisong Zhong <zhongbaisong@huawei.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b223cc15f922a9cbc566a20d8627a1cf84d3c915
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Tue Nov 8 03:30:05 2022 +0000

    media: dvb-core: Fix ignored return value in dvb_register_frontend()
    
    [ Upstream commit a574359e2e71ce16be212df3a082ed60a4bd2c5f ]
    
    In dvb_register_frontend(), dvb_register_device() is possible to fail
    but its return value is ignored.
    
    It will cause use-after-free when module is removed, because in
    dvb_unregister_frontend() it tries to unregister a not registered
    device.
    
    BUG: KASAN: use-after-free in dvb_remove_device+0x18b/0x1f0 [dvb_core]
    Read of size 4 at addr ffff88800dff4824 by task rmmod/428
    CPU: 3 PID: 428 Comm: rmmod
    Call Trace:
     <TASK>
     ...
     dvb_remove_device+0x18b/0x1f0 [dvb_core]
     dvb_unregister_frontend+0x7b/0x130 [dvb_core]
     vidtv_bridge_remove+0x6e/0x160 [dvb_vidtv_bridge]
     ...
    
    Fix this by catching return value of dvb_register_device().
    However the fe->refcount can't be put to zero immediately, because
    there are still modules calling dvb_frontend_detach() when
    dvb_register_frontend() fails.
    
    Link: https://lore.kernel.org/linux-media/20221108033005.169095-1-chenzhongjin@huawei.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 825a8af31d6b237fd6d47f21c6438a7bf1e0f150
Author: ZhangPeng <zhangpeng362@huawei.com>
Date:   Fri Nov 25 07:01:56 2022 +0000

    pinctrl: pinconf-generic: add missing of_node_put()
    
    [ Upstream commit 5ead93289815a075d43c415e35c8beafafb801c9 ]
    
    of_node_put() needs to be called when jumping out of the loop, since
    for_each_available_child_of_node() will increase the refcount of node.
    
    Fixes: c7289500e29d ("pinctrl: pinconf-generic: scan also referenced phandle node")
    Signed-off-by: ZhangPeng <zhangpeng362@huawei.com>
    Link: https://lore.kernel.org/r/20221125070156.3535855-1-zhangpeng362@huawei.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eedc698d6610438a5decc44257700c6b05a765e7
Author: Dario Binacchi <dario.binacchi@amarulasolutions.com>
Date:   Thu Nov 17 12:36:37 2022 +0100

    clk: imx8mn: fix imx8mn_enet_phy_sels clocks list
    
    [ Upstream commit 2626cf67f20b28446dfc3a5b9493dd535cdb747b ]
    
    According to the "Clock Root" table of the reference manual (document
    IMX8MNRM Rev 2, 07/2022):
    
         Clock Root         offset     Source Select (CCM_TARGET_ROOTn[MUX])
            ...              ...                    ...
     ENET_PHY_REF_CLK_ROOT  0xAA80            000 - 24M_REF_CLK
                                              001 - SYSTEM_PLL2_DIV20
                                              010 - SYSTEM_PLL2_DIV8
                                              011 - SYSTEM_PLL2_DIV5
                                              100 - SYSTEM_PLL2_DIV2
                                              101 - AUDIO_PLL1_CLK
                                              110 - VIDEO_PLL_CLK
                                              111 - AUDIO_PLL2_CLK
            ...              ...                    ...
    
    while the imx8mn_enet_phy_sels list didn't contained audio_pll1_out for
    source select bits 101b.
    
    Fixes: 96d6392b54dbb ("clk: imx: Add support for i.MX8MN clock driver")
    Signed-off-by: Dario Binacchi <dario.binacchi@amarulasolutions.com>
    Acked-by: Marco Felsch <m.felsch@pengutronix.de>
    Reviewed-by: Abel Vesa <abel.vesa@linaro.org>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Link: https://lore.kernel.org/r/20221117113637.1978703-6-dario.binacchi@amarulasolutions.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f86a432604c3030f8dd0d828dec2c3afc1b6471e
Author: Dario Binacchi <dario.binacchi@amarulasolutions.com>
Date:   Thu Nov 17 12:36:36 2022 +0100

    clk: imx8mn: fix imx8mn_sai2_sels clocks list
    
    [ Upstream commit 34d996747a74e3a86990f9f9c48de09159d78edb ]
    
    According to the "Clock Root" table of the reference manual (document
    IMX8MNRM Rev 2, 07/2022):
    
         Clock Root     offset     Source Select (CCM_TARGET_ROOTn[MUX])
            ...          ...                    ...
       SAI2_CLK_ROOT    0xA600            000 - 24M_REF_CLK
                                          001 - AUDIO_PLL1_CLK
                                          010 - AUDIO_PLL2_CLK
                                          011 - VIDEO_PLL_CLK
                                          100 - SYSTEM_PLL1_DIV6
                                          110 - EXT_CLK_2
                                          111 - EXT_CLK_3
            ...          ...                    ...
    
    while the imx8mn_sai2_sels list contained clk_ext3 and clk_ext4 for
    source select bits 110b and 111b.
    
    Fixes: 96d6392b54dbb ("clk: imx: Add support for i.MX8MN clock driver")
    Signed-off-by: Dario Binacchi <dario.binacchi@amarulasolutions.com>
    Acked-by: Marco Felsch <m.felsch@pengutronix.de>
    Reviewed-by: Abel Vesa <abel.vesa@linaro.org>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Link: https://lore.kernel.org/r/20221117113637.1978703-5-dario.binacchi@amarulasolutions.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e98c3a345036c2da0de16e7d9ea5c3454c42f50
Author: Dario Binacchi <dario.binacchi@amarulasolutions.com>
Date:   Thu Nov 17 12:36:34 2022 +0100

    clk: imx: replace osc_hdmi with dummy
    
    [ Upstream commit e7fa365ff66f16772dc06b480cd78f858d10856b ]
    
    There is no occurrence of the hdmi oscillator in the reference manual
    (document IMX8MNRM Rev 2, 07/2022). Further, if we consider the indexes
    76-81 and 134 of the "Clock Root" table of chapter 5 of the RM, there is
    no entry for the source select bits 101b, which is the setting referenced
    by "osc_hdmi".
    Fix by renaming "osc_hdmi" with "dummy", a clock which has already been
    used for missing source select bits.
    
    Tested on the BSH SystemMaster (SMM) S2 board.
    
    Fixes: 96d6392b54dbb ("clk: imx: Add support for i.MX8MN clock driver")
    Signed-off-by: Dario Binacchi <dario.binacchi@amarulasolutions.com>
    Acked-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Link: https://lore.kernel.org/r/20221117113637.1978703-3-dario.binacchi@amarulasolutions.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9453e097b8624cbd56331700b27b3006244cf4c8
Author: Dario Binacchi <dario.binacchi@amarulasolutions.com>
Date:   Thu Nov 17 12:36:33 2022 +0100

    clk: imx8mn: rename vpu_pll to m7_alt_pll
    
    [ Upstream commit a429c60baefd95ab43a2ce7f25d5b2d7a2e431df ]
    
    The IMX8MN platform does not have any video processing unit (VPU), and
    indeed in the reference manual (document IMX8MNRM Rev 2, 07/2022) there
    is no occurrence of its pll. From an analysis of the code and the RM
    itself, I think vpu pll is used instead of m7 alternate pll, probably
    for copy and paste of code taken from modules of similar architectures.
    
    As an example for all, if we consider the second row of the "Clock Root"
    table of chapter 5 (Clocks and Power Management) of the RM:
    
         Clock Root     offset     Source Select (CCM_TARGET_ROOTn[MUX])
            ...          ...                    ...
      ARM_M7_CLK_ROOT   0x8080            000 - 24M_REF_CLK
                                          001 - SYSTEM_PLL2_DIV5
                                          010 - SYSTEM_PLL2_DIV4
                                          011 - M7_ALT_PLL_CLK
                                          100 - SYSTEM_PLL1_CLK
                                          101 - AUDIO_PLL1_CLK
                                          110 - VIDEO_PLL_CLK
                                          111 - SYSTEM_PLL3_CLK
            ...          ...                    ...
    
    but in the source code, the imx8mn_m7_sels clocks list contains vpu_pll
    for the source select bits 011b.
    
    So, let's rename "vpu_pll" to "m7_alt_pll" to be consistent with the RM.
    
    The IMX8MN_VPU_* constants have not been removed to ensure backward
    compatibility of the patch.
    
    No functional changes intended.
    
    Fixes: 96d6392b54dbb ("clk: imx: Add support for i.MX8MN clock driver")
    Signed-off-by: Dario Binacchi <dario.binacchi@amarulasolutions.com>
    Acked-by: Marco Felsch <m.felsch@pengutronix.de>
    Reviewed-by: Abel Vesa <abel.vesa@linaro.org>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Link: https://lore.kernel.org/r/20221117113637.1978703-2-dario.binacchi@amarulasolutions.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bffc80bac8c5facf2b4d53fd8330ba68e3de68c1
Author: Gautam Menghani <gautammenghani201@gmail.com>
Date:   Wed Oct 19 06:02:14 2022 +0100

    media: imon: fix a race condition in send_packet()
    
    [ Upstream commit 813ceef062b53d68f296aa3cb944b21a091fabdb ]
    
    The function send_packet() has a race condition as follows:
    
    func send_packet()
    {
        // do work
        call usb_submit_urb()
        mutex_unlock()
        wait_for_event_interruptible()  <-- lock gone
        mutex_lock()
    }
    
    func vfd_write()
    {
        mutex_lock()
        call send_packet()  <- prev call is not completed
        mutex_unlock()
    }
    
    When the mutex is unlocked and the function send_packet() waits for the
    call to complete, vfd_write() can start another call, which leads to the
    "URB submitted while active" warning in usb_submit_urb().
    Fix this by removing the mutex_unlock() call in send_packet() and using
    mutex_lock_interruptible().
    
    Link: https://syzkaller.appspot.com/bug?id=e378e6a51fbe6c5cc43e34f131cc9a315ef0337e
    
    Fixes: 21677cfc562a ("V4L/DVB: ir-core: add imon driver")
    Reported-by: syzbot+0c3cb6dc05fbbdc3ad66@syzkaller.appspotmail.com
    Signed-off-by: Gautam Menghani <gautammenghani201@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c9ff35d68691aaea85b2e93763772e23930b3a3
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Thu Nov 10 07:26:33 2022 +0000

    media: vimc: Fix wrong function called when vimc_init() fails
    
    [ Upstream commit f74d3f326d1d5b8951ce263c59a121ecfa65e7c0 ]
    
    In vimc_init(), when platform_driver_register(&vimc_pdrv) fails,
    platform_driver_unregister(&vimc_pdrv) is wrongly called rather than
    platform_device_unregister(&vimc_pdev), which causes kernel warning:
    
     Unexpected driver unregister!
     WARNING: CPU: 1 PID: 14517 at drivers/base/driver.c:270 driver_unregister+0x8f/0xb0
     RIP: 0010:driver_unregister+0x8f/0xb0
     Call Trace:
      <TASK>
      vimc_init+0x7d/0x1000 [vimc]
      do_one_initcall+0xd0/0x4e0
      do_init_module+0x1cf/0x6b0
      load_module+0x65c2/0x7820
    
    Fixes: 4a29b7090749 ("[media] vimc: Subdevices as modules")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f849c116d320e85d1e2c2804c0edb0be3953b62d
Author: Yuan Can <yuancan@huawei.com>
Date:   Thu Nov 24 14:05:10 2022 +0000

    ASoC: qcom: Add checks for devm_kcalloc
    
    [ Upstream commit 1bf5ee979076ceb121ee51c95197d890b1cee7f4 ]
    
    As the devm_kcalloc may return NULL, the return value needs to be checked
    to avoid NULL poineter dereference.
    
    Fixes: 24caf8d9eb10 ("ASoC: qcom: lpass-sc7180: Add platform driver for lpass audio")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Link: https://lore.kernel.org/r/20221124140510.63468-1-yuancan@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16437645dd970a449782ca817d9f7f8b7e52b978
Author: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date:   Thu Nov 24 09:58:17 2022 +0800

    drbd: destroy workqueue when drbd device was freed
    
    [ Upstream commit 8692814b77ca4228a99da8a005de0acf40af6132 ]
    
    A submitter workqueue is dynamically allocated by init_submitter()
    called by drbd_create_device(), we should destroy it when this
    device is not needed or destroyed.
    
    Fixes: 113fef9e20e0 ("drbd: prepare to queue write requests on a submit worker")
    Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
    Link: https://lore.kernel.org/r/20221124015817.2729789-3-bobo.shaobowang@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdaf45415c1e82ad6e36e19ce9471e8611ec6f95
Author: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date:   Thu Nov 24 09:58:16 2022 +0800

    drbd: remove call to memset before free device/resource/connection
    
    [ Upstream commit 6e7b854e4c1b02dba00760dfa79d8dbf6cce561e ]
    
    This revert c2258ffc56f2 ("drbd: poison free'd device, resource and
    connection structs"), add memset is odd here for debugging, there are
    some methods to accurately show what happened, such as kdump.
    
    Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
    Link: https://lore.kernel.org/r/20221124015817.2729789-2-bobo.shaobowang@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: 8692814b77ca ("drbd: destroy workqueue when drbd device was freed")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f35981083cb3fc1ba6427c1543152c5e3f59d104
Author: Zheng Yongjun <zhengyongjun3@huawei.com>
Date:   Sat Nov 19 07:33:07 2022 +0000

    mtd: maps: pxa2xx-flash: fix memory leak in probe
    
    [ Upstream commit 2399401feee27c639addc5b7e6ba519d3ca341bf ]
    
    Free 'info' upon remapping error to avoid a memory leak.
    
    Fixes: e644f7d62894 ("[MTD] MAPS: Merge Lubbock and Mainstone drivers into common PXA2xx driver")
    Signed-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>
    [<miquel.raynal@bootlin.com>: Reword the commit log]
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20221119073307.22929-1-zhengyongjun3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87c750affd881aceb253a3c472b2bfea568f8d2f
Author: Jonathan Toppins <jtoppins@redhat.com>
Date:   Tue Nov 22 16:24:29 2022 -0500

    bonding: fix link recovery in mode 2 when updelay is nonzero
    
    [ Upstream commit f8a65ab2f3ff7410921ebbf0dc55453102c33c56 ]
    
    Before this change when a bond in mode 2 lost link, all of its slaves
    lost link, the bonding device would never recover even after the
    expiration of updelay. This change removes the updelay when the bond
    currently has no usable links. Conforming to bonding.txt section 13.1
    paragraph 4.
    
    Fixes: 41f891004063 ("bonding: ignore updelay param when there is no active slave")
    Signed-off-by: Jonathan Toppins <jtoppins@redhat.com>
    Acked-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02105f0b3021ee5853b2fa50853c42f35fc01cfd
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Nov 17 23:00:03 2022 +0800

    drm/amdgpu: fix pci device refcount leak
    
    [ Upstream commit b85e285e3d6352b02947fc1b72303673dfacb0aa ]
    
    As comment of pci_get_domain_bus_and_slot() says, it returns
    a pci device with refcount increment, when finish using it,
    the caller must decrement the reference count by calling
    pci_dev_put().
    
    So before returning from amdgpu_device_resume|suspend_display_audio(),
    pci_dev_put() is called to avoid refcount leak.
    
    Fixes: 3f12acc8d6d4 ("drm/amdgpu: put the audio codec into suspend state before gpu reset V3")
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b0a1f1247cd42ac5e0d369f8dbb58762692edee
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Wed Nov 23 17:12:01 2022 +0800

    clk: rockchip: Fix memory leak in rockchip_clk_register_pll()
    
    [ Upstream commit 739a6a6bbdb793bd57938cb24aa5a6df89983546 ]
    
    If clk_register() fails, @pll->rate_table may have allocated memory by
    kmemdup(), so it needs to be freed, otherwise will cause memory leak
    issue, this patch fixes it.
    
    Fixes: 90c590254051 ("clk: rockchip: add clock type for pll clocks and pll used on rk3066")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Link: https://lore.kernel.org/r/20221123091201.199819-1-xiujianfeng@huawei.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27aac5c012462e6095997c127461b4d460c90c5f
Author: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date:   Wed Nov 23 11:46:16 2022 +0800

    regulator: core: use kfree_const() to free space conditionally
    
    [ Upstream commit dc8d006d15b623c1d80b90b45d6dcb6e890dad09 ]
    
    Use kfree_const() to free supply_name conditionally in create_regulator()
    as supply_name may be allocated from kmalloc() or directly from .rodata
    section.
    
    Fixes: 87fe29b61f95 ("regulator: push allocations in create_regulator() outside of lock")
    Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
    Link: https://lore.kernel.org/r/20221123034616.3609537-1-bobo.shaobowang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a69b1faa9b14e94e573ce740a4719a385b5a89c4
Author: Baisong Zhong <zhongbaisong@huawei.com>
Date:   Mon Nov 21 19:16:30 2022 +0800

    ALSA: seq: fix undefined behavior in bit shift for SNDRV_SEQ_FILTER_USE_EVENT
    
    [ Upstream commit cf59e1e4c79bf741905484cdb13c130b53576a16 ]
    
    Shifting signed 32-bit value by 31 bits is undefined, so changing
    significant bit to unsigned. The UBSAN warning calltrace like below:
    
    UBSAN: shift-out-of-bounds in sound/core/seq/seq_clientmgr.c:509:22
    left shift of 1 by 31 places cannot be represented in type 'int'
    ...
    Call Trace:
     <TASK>
     dump_stack_lvl+0x8d/0xcf
     ubsan_epilogue+0xa/0x44
     __ubsan_handle_shift_out_of_bounds+0x1e7/0x208
     snd_seq_deliver_single_event.constprop.21+0x191/0x2f0
     snd_seq_deliver_event+0x1a2/0x350
     snd_seq_kernel_client_dispatch+0x8b/0xb0
     snd_seq_client_notify_subscription+0x72/0xa0
     snd_seq_ioctl_subscribe_port+0x128/0x160
     snd_seq_kernel_client_ctl+0xce/0xf0
     snd_seq_oss_create_client+0x109/0x15b
     alsa_seq_oss_init+0x11c/0x1aa
     do_one_initcall+0x80/0x440
     kernel_init_freeable+0x370/0x3c3
     kernel_init+0x1b/0x190
     ret_from_fork+0x1f/0x30
     </TASK>
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Baisong Zhong <zhongbaisong@huawei.com>
    Link: https://lore.kernel.org/r/20221121111630.3119259-1-zhongbaisong@huawei.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c0f3617ba31172bb565082d8d9401d0681e07ab
Author: Baisong Zhong <zhongbaisong@huawei.com>
Date:   Mon Nov 21 19:00:44 2022 +0800

    ALSA: pcm: fix undefined behavior in bit shift for SNDRV_PCM_RATE_KNOT
    
    [ Upstream commit b5172e62458f8e6ff359e5f096044a488db90ac5 ]
    
    Shifting signed 32-bit value by 31 bits is undefined, so changing
    significant bit to unsigned. The UBSAN warning calltrace like below:
    
    UBSAN: shift-out-of-bounds in sound/core/pcm_native.c:2676:21
    left shift of 1 by 31 places cannot be represented in type 'int'
    ...
    Call Trace:
     <TASK>
     dump_stack_lvl+0x8d/0xcf
     ubsan_epilogue+0xa/0x44
     __ubsan_handle_shift_out_of_bounds+0x1e7/0x208
     snd_pcm_open_substream+0x9f0/0xa90
     snd_pcm_oss_open.part.26+0x313/0x670
     snd_pcm_oss_open+0x30/0x40
     soundcore_open+0x18b/0x2e0
     chrdev_open+0xe2/0x270
     do_dentry_open+0x2f7/0x620
     path_openat+0xd66/0xe70
     do_filp_open+0xe3/0x170
     do_sys_openat2+0x357/0x4a0
     do_sys_open+0x87/0xd0
     do_syscall_64+0x34/0x80
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Baisong Zhong <zhongbaisong@huawei.com>
    Link: https://lore.kernel.org/r/20221121110044.3115686-1-zhongbaisong@huawei.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6159424e2dd9f77dd1818433a0a242e5ea22e6c9
Author: ZhangPeng <zhangpeng362@huawei.com>
Date:   Tue Nov 22 07:58:53 2022 +0000

    pinctrl: k210: call of_node_put()
    
    [ Upstream commit a8acc11643082a706de86a19f1f824712d971984 ]
    
    Since for_each_available_child_of_node() will increase the refcount of
    node, we need to call of_node_put() manually when breaking out of the
    iteration.
    
    Fixes: d4c34d09ab03 ("pinctrl: Add RISC-V Canaan Kendryte K210 FPIOA driver")
    Signed-off-by: ZhangPeng <zhangpeng362@huawei.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Link: https://lore.kernel.org/r/20221122075853.2496680-1-zhangpeng362@huawei.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18a973fcb19004286c46cb843b175dca5903926f
Author: Marcus Folkesson <marcus.folkesson@gmail.com>
Date:   Thu Nov 17 13:13:26 2022 +0100

    HID: hid-sensor-custom: set fixed size for custom attributes
    
    [ Upstream commit 9d013910df22de91333a0acc81d1dbb115bd76f6 ]
    
    This is no bugfix (so no Fixes: tag is necessary) as it is
    taken care of in hid_sensor_custom_add_attributes().
    
    The motivation for this patch is that:
    hid_sensor_custom_field.attr_name and
    hid_sensor_custom_field.attrs
    has the size of HID_CUSTOM_TOTAL_ATTRS and used in same context.
    
    We compare against HID_CUSTOM_TOTAL_ATTRS when
    looping through hid_custom_attrs.
    
    We will silent the smatch error:
    hid_sensor_custom_add_attributes() error: buffer overflow
    'hid_custom_attrs' 8 <= 10
    
    Signed-off-by: Marcus Folkesson <marcus.folkesson@gmail.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fc4280dbec36ab10d2f9b3be96d297d5243f2ca
Author: Stanislav Fomichev <sdf@google.com>
Date:   Mon Nov 21 10:03:39 2022 -0800

    bpf: Move skb->len == 0 checks into __bpf_redirect
    
    [ Upstream commit 114039b342014680911c35bd6b72624180fd669a ]
    
    To avoid potentially breaking existing users.
    
    Both mac/no-mac cases have to be amended; mac_header >= network_header
    is not enough (verified with a new test, see next patch).
    
    Fixes: fd1894224407 ("bpf: Don't redirect packets with invalid pkt_len")
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Link: https://lore.kernel.org/r/20221121180340.1983627-1-sdf@google.com
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dbcb4c284bcb198847b9f5fa56143dc9f3d8ffb
Author: Allen-KH Cheng <allen-kh.cheng@mediatek.com>
Date:   Mon Oct 31 20:46:33 2022 +0800

    mtd: spi-nor: Fix the number of bytes for the dummy cycles
    
    [ Upstream commit fdc20370d93e8c6d2f448a539d08c2c064af7694 ]
    
    The number of bytes used by spi_nor_spimem_check_readop() may be
    incorrect for the dummy cycles. Since nor->read_dummy is not initialized
    before spi_nor_spimem_adjust_hwcaps().
    
    We use both mode and wait state clock cycles instead of nor->read_dummy.
    
    Fixes: 0e30f47232ab ("mtd: spi-nor: add support for DTR protocol")
    Co-developed-by: Bayi Cheng <bayi.cheng@mediatek.com>
    Signed-off-by: Bayi Cheng <bayi.cheng@mediatek.com>
    Signed-off-by: Allen-KH Cheng <allen-kh.cheng@mediatek.com>
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Tested-by: Dhruva Gole <d-gole@ti.com>
    Tested-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Pratyush Yadav <pratyush@kernel.org>
    Link: https://lore.kernel.org/r/20221031124633.13189-1-allen-kh.cheng@mediatek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58e1a0ef5255c7ed824cb656b31e9a0b8c47f5c6
Author: Michael Walle <michael@walle.cc>
Date:   Thu Aug 11 00:06:48 2022 +0200

    mtd: spi-nor: hide jedec_id sysfs attribute if not present
    
    [ Upstream commit 7d388551b6888f3725e6c957f472526b35161a5b ]
    
    Some non-jedec compliant flashes (like the Everspin flashes) don't have
    an ID at all. Hide the attribute in this case.
    
    Fixes: 36ac02286265 ("mtd: spi-nor: add initial sysfs support")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Reviewed-by: Takahiro Kuwano <Takahiro.Kuwano@infineon.com>
    Link: https://lore.kernel.org/r/20220810220654.1297699-2-michael@walle.cc
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 348d95e39fec7c9dccf6a61bec0f32791e180925
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri May 13 11:55:46 2022 -0700

    inet: add READ_ONCE(sk->sk_bound_dev_if) in inet_csk_bind_conflict()
    
    [ Upstream commit d2c135619cb89d1d5693df81ab408c5e8e97e898 ]
    
    inet_csk_bind_conflict() can access sk->sk_bound_dev_if for
    unlocked sockets.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4451bef1a3ddebd37081a699da9167a253d8e045
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Dec 18 11:39:07 2019 +0100

    media: videobuf-dma-contig: use dma_mmap_coherent
    
    [ Upstream commit b3dc3f8e49577840dc8ac8a365c5b3da4edb10b8 ]
    
    dma_alloc_coherent does not return a physical address, but a DMA address,
    which might be remapped or have an offset.  Passing the DMA address to
    vm_iomap_memory is thus broken.
    
    Use the proper dma_mmap_coherent helper instead, and stop passing
    __GFP_COMP to dma_alloc_coherent, as the memory management inside the
    DMA allocator is hidden from the callers and does not require it.
    
    With this the gfp_t argument to __videobuf_dc_alloc can be removed and
    hard coded to GFP_KERNEL.
    
    Fixes: a8f3c203e19b ("[media] videobuf-dma-contig: add cache support")
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2781a862608495aecdc39ebece9b4698cab4547
Author: Yuan Can <yuancan@huawei.com>
Date:   Fri Nov 11 06:08:53 2022 +0000

    media: platform: exynos4-is: Fix error handling in fimc_md_init()
    
    [ Upstream commit b434422c45282a0573d8123239abc41fa72665d4 ]
    
    A problem about modprobe s5p_fimc failed is triggered with the
    following log given:
    
     [  272.075275] Error: Driver 'exynos4-fimc' is already registered, aborting...
     modprobe: ERROR: could not insert 's5p_fimc': Device or resource busy
    
    The reason is that fimc_md_init() returns platform_driver_register()
    directly without checking its return value, if platform_driver_register()
    failed, it returns without unregister fimc_driver, resulting the
    s5p_fimc can never be installed later.
    A simple call graph is shown as below:
    
     fimc_md_init()
       fimc_register_driver() # register fimc_driver
       platform_driver_register()
         platform_driver_register()
           driver_register()
             bus_add_driver()
               dev = kzalloc(...) # OOM happened
       # return without unregister fimc_driver
    
    Fix by unregister fimc_driver when platform_driver_register() returns
    error.
    
    Fixes: d3953223b090 ("[media] s5p-fimc: Add the media device driver")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cf71bbe5d2ee12613f6e278888f5fc9c5c0cc2b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Nov 10 16:24:23 2022 +0800

    media: solo6x10: fix possible memory leak in solo_sysfs_init()
    
    [ Upstream commit 7f5866dd96d95b74e439f6ee17b8abd8195179fb ]
    
    If device_register() returns error in solo_sysfs_init(), the
    name allocated by dev_set_name() need be freed. As comment of
    device_register() says, it should use put_device() to give up
    the reference in the error path. So fix this by calling
    put_device(), then the name can be freed in kobject_cleanup().
    
    Fixes: dcae5dacbce5 ("[media] solo6x10: sync to latest code from Bluecherry's git repo")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c290aa527fd832d278c6388a3ba53a9890fbd74a
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Tue Nov 8 15:06:30 2022 +0800

    media: vidtv: Fix use-after-free in vidtv_bridge_dvb_init()
    
    [ Upstream commit ba8d9405935097e296bcf7a942c3a01df0edb865 ]
    
    KASAN reports a use-after-free:
    BUG: KASAN: use-after-free in dvb_dmxdev_release+0x4d5/0x5d0 [dvb_core]
    Call Trace:
     ...
     dvb_dmxdev_release+0x4d5/0x5d0 [dvb_core]
     vidtv_bridge_probe+0x7bf/0xa40 [dvb_vidtv_bridge]
     platform_probe+0xb6/0x170
     ...
    Allocated by task 1238:
     ...
     dvb_register_device+0x1a7/0xa70 [dvb_core]
     dvb_dmxdev_init+0x2af/0x4a0 [dvb_core]
     vidtv_bridge_probe+0x766/0xa40 [dvb_vidtv_bridge]
     ...
    Freed by task 1238:
     dvb_register_device+0x6d2/0xa70 [dvb_core]
     dvb_dmxdev_init+0x2af/0x4a0 [dvb_core]
     vidtv_bridge_probe+0x766/0xa40 [dvb_vidtv_bridge]
     ...
    
    It is because the error handling in vidtv_bridge_dvb_init() is wrong.
    
    First, vidtv_bridge_dmx(dev)_init() will clean themselves when fail, but
    goto fail_dmx(_dev): calls release functions again, which causes
    use-after-free.
    
    Also, in fail_fe, fail_tuner_probe and fail_demod_probe, j = i will cause
    out-of-bound when i finished its loop (i == NUM_FE). And the loop
    releasing is wrong, although now NUM_FE is 1 so it won't cause problem.
    
    Fix this by correctly releasing everything.
    
    Fixes: f90cf6079bf6 ("media: vidtv: add a bridge driver")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 648f3031025ac9f248df23510eda36e0772a9df1
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Nov 17 21:49:19 2022 -0800

    Input: elants_i2c - properly handle the reset GPIO when power is off
    
    [ Upstream commit a85fbd6498441694475716a4d5c65f9d3e073faf ]
    
    As can be seen in elants_i2c_power_off(), we want the reset GPIO
    asserted when power is off. The reset GPIO is active low so we need
    the reset line logic low when power is off to avoid leakage.
    
    We have a problem, though, at probe time. At probe time we haven't
    powered the regulators on yet but we have:
    
      devm_gpiod_get(&client->dev, "reset", GPIOD_OUT_LOW);
    
    While that _looks_ right, it turns out that it's not. The
    GPIOD_OUT_LOW doesn't mean to init the GPIO to low. It means init the
    GPIO to "not asserted". Since this is an active low GPIO that inits it
    to be high.
    
    Let's fix this to properly init the GPIO. Now after both probe and
    power off the state of the GPIO is consistent (it's "asserted" or
    level low).
    
    Once we fix this, we can see that at power on time we no longer to
    assert the reset GPIO as the first thing. The reset GPIO is _always_
    asserted before powering on. Let's fix powering on to account for
    this.
    
    Fixes: afe10358e47a ("Input: elants_i2c - wire up regulator support")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20221117123805.1.I9959ac561dd6e1e8e1ce7085e4de6167b27c574f@changeid
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0d3e46ac6669cdf1b99bc7b7d92f1221b9a1ff2
Author: Hui Tang <tanghui20@huawei.com>
Date:   Mon Nov 14 17:02:40 2022 +0800

    mtd: lpddr2_nvm: Fix possible null-ptr-deref
    
    [ Upstream commit 6bdd45d795adf9e73b38ced5e7f750cd199499ff ]
    
    It will cause null-ptr-deref when resource_size(add_range) invoked,
    if platform_get_resource() returns NULL.
    
    Fixes: 96ba9dd65788 ("mtd: lpddr: add driver for LPDDR2-NVM PCM memories")
    Signed-off-by: Hui Tang <tanghui20@huawei.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20221114090240.244172-1-tanghui20@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab4e42f51931140ae9f3b553cc10d2b5ba3dcac9
Author: Rob Clark <robdclark@chromium.org>
Date:   Tue Nov 15 07:46:34 2022 -0800

    drm/msm/a6xx: Fix speed-bin detection vs probe-defer
    
    [ Upstream commit f6d1918794ef92b4e26b80c3d40365347b76b1fd ]
    
    If we get an error (other than -ENOENT) we need to propagate that up the
    stack.  Otherwise if the nvmem driver hasn't probed yet, we'll end up
    end up claiming that we support all the OPPs which is not likely to be
    true (and on some generations impossible to be true, ie. if there are
    conflicting OPPs).
    
    v2: Update commit msg, gc unused label, etc
    v3: Add previously missing \n's
    
    Fixes: fe7952c629da ("drm/msm: Add speed-bin support to a618 gpu")
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Akhil P Oommen <quic_akhilpo@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/511690/
    Link: https://lore.kernel.org/r/20221115154637.1613968-1-robdclark@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fea795f7c7cfd23974b8d58865caad42b4c2da4c
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Thu Nov 10 14:19:26 2022 +0800

    wifi: ath10k: Fix return value in ath10k_pci_init()
    
    [ Upstream commit 2af7749047d8d6ad43feff69f555a13a6a6c2831 ]
    
    This driver is attempting to register to support two different buses.
    if either of these is successful then ath10k_pci_init() should return 0
    so that hardware attached to the successful bus can be probed and
    supported. only if both of these are unsuccessful should ath10k_pci_init()
    return an errno.
    
    Fixes: 0b523ced9a3c ("ath10k: add basic skeleton to support ahb")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Reviewed-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20221110061926.18163-1-xiujianfeng@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77482c4dd4a014268a1bdcf05ff20f8cbb6d5500
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Nov 15 22:10:45 2022 +0800

    block: clear ->slave_dir when dropping the main slave_dir reference
    
    [ Upstream commit d90db3b1c8676bc88b4309c5a571333de2263b8e ]
    
    Zero out the pointer to ->slave_dir so that the holder code doesn't
    incorrectly treat the object as alive when add_disk failed or after
    del_gendisk was called.
    
    Fixes: 89f871af1b26 ("dm: delay registering the gendisk")
    Reported-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Reviewed-by: Mike Snitzer <snitzer@kernel.org>
    Link: https://lore.kernel.org/r/20221115141054.1051801-2-yukuai1@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62251948e2e7922ee47efc87bcd4998958b840c2
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Sat Nov 12 17:27:19 2022 +0800

    ima: Fix misuse of dereference of pointer in template_desc_init_fields()
    
    [ Upstream commit 25369175ce84813dd99d6604e710dc2491f68523 ]
    
    The input parameter @fields is type of struct ima_template_field ***, so
    when allocates array memory for @fields, the size of element should be
    sizeof(**field) instead of sizeof(*field).
    
    Actually the original code would not cause any runtime error, but it's
    better to make it logically right.
    
    Fixes: adf53a778a0a ("ima: new templates management mechanism")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Reviewed-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29d6c69ba4b96a1de0376e44e5f8b38b13ec8803
Author: GUO Zihua <guozihua@huawei.com>
Date:   Fri Nov 11 18:13:17 2022 +0800

    integrity: Fix memory leakage in keyring allocation error path
    
    [ Upstream commit 39419ef7af0916cc3620ecf1ed42d29659109bf3 ]
    
    Key restriction is allocated in integrity_init_keyring(). However, if
    keyring allocation failed, it is not freed, causing memory leaks.
    
    Fixes: 2b6aa412ff23 ("KEYS: Use structure to capture key restriction function and data")
    Signed-off-by: GUO Zihua <guozihua@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e6df9571744e27bb1e2cf9f1ce896efcbe6c21f
Author: Brian Starkey <brian.starkey@arm.com>
Date:   Tue Sep 13 15:43:06 2022 +0100

    drm/fourcc: Fix vsub/hsub for Q410 and Q401
    
    [ Upstream commit b230555f3257f197dd98641ef6ebaf778b52dd51 ]
    
    These formats are not subsampled, but that means hsub and vsub should be
    1, not 0.
    
    Fixes: 94b292b27734 ("drm: drm_fourcc: add NV15, Q410, Q401 YUV formats")
    Reported-by: George Kennedy <george.kennedy@oracle.com>
    Reported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    Signed-off-by: Brian Starkey <brian.starkey@arm.com>
    Reviewed-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Liviu Dudau <liviu.dudau@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220913144306.17279-1-brian.starkey@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec1727f89ecd6f2252c0c75e200058819f7ce47a
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Wed Dec 15 10:17:37 2021 +0100

    drm/fourcc: Add packed 10bit YUV 4:2:0 format
    
    [ Upstream commit 006ea1b5822f9019bd722ffc6242bc0880879e3d ]
    
    Adds a format that is 3 10bit YUV 4:2:0 samples packed into
    a 32bit word (with 2 spare bits).
    
    Supported on Broadcom BCM2711 chips.
    
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://lore.kernel.org/r/20211215091739.135042-2-maxime@cerno.tech
    Stable-dep-of: b230555f3257 ("drm/fourcc: Fix vsub/hsub for Q410 and Q401")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f72608b8dd0873e9d64bd710140233761e8a6fee
Author: Konrad Dybcio <konrad.dybcio@linaro.org>
Date:   Thu Nov 10 22:07:05 2022 +0100

    regulator: qcom-rpmh: Fix PMR735a S3 regulator spec
    
    [ Upstream commit dd801b2265c81bf0c8b0b4b8f7c1e7bfed078403 ]
    
    PMR735a has a wider range than previously defined. Fix it.
    
    Fixes: c4e5aa3dbee5 ("regulator: qcom-rpmh: Add PM7325/PMR735A regulator support")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20221110210706.80301-1-konrad.dybcio@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63d011ad0505114f5ee56a028e0a808f13e5dc59
Author: Joel Granados <j.granados@samsung.com>
Date:   Wed Nov 2 18:17:08 2022 +0100

    nvme: return err on nvme_init_non_mdts_limits fail
    
    [ Upstream commit bcaf434b8f04e1ee82a8b1e1bce0de99fbff67fa ]
    
    In nvme_init_non_mdts_limits function we were returning 0 when kzalloc
    failed; it now returns -ENOMEM.
    
    Fixes: 5befc7c26e5a ("nvme: implement non-mdts command limits")
    Signed-off-by: Joel Granados <j.granados@samsung.com>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f289a38df0da4cfe4b50d04b1b9c3bc646fecd57
Author: Dan Carpenter <error27@gmail.com>
Date:   Tue Nov 15 15:56:57 2022 +0300

    amdgpu/pm: prevent array underflow in vega20_odn_edit_dpm_table()
    
    [ Upstream commit d27252b5706e51188aed7647126e44dcf9e940c1 ]
    
    In the PP_OD_EDIT_VDDC_CURVE case the "input_index" variable is capped at
    2 but not checked for negative values so it results in an out of bounds
    read.  This value comes from the user via sysfs.
    
    Fixes: d5bf26539494 ("drm/amd/powerplay: added vega20 overdrive support V3")
    Signed-off-by: Dan Carpenter <error27@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cda1895f3b7f324ece1614308a815a3994983b97
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 15 17:15:08 2022 +0800

    regulator: core: fix unbalanced of node refcount in regulator_dev_lookup()
    
    [ Upstream commit f2b41b748c19962b82709d9f23c6b2b0ce9d2f91 ]
    
    I got the the following report:
    
      OF: ERROR: memory leak, expected refcount 1 instead of 2,
      of_node_get()/of_node_put() unbalanced - destroy cset entry:
      attach overlay node /i2c/pmic@62/regulators/exten
    
    In of_get_regulator(), the node is returned from of_parse_phandle()
    with refcount incremented, after using it, of_node_put() need be called.
    
    Fixes: 69511a452e6d ("regulator: map consumer regulator based on device tree")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221115091508.900752-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a5aaa5736eb72853c69ae548ab850da992c6cd1
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Nov 7 14:01:24 2022 +0100

    nvmet: only allocate a single slab for bvecs
    
    [ Upstream commit fa8f9ac42350edd3ce82d0d148a60f0fa088f995 ]
    
    There is no need to have a separate slab cache for each namespace,
    and having separate ones creates duplicate debugs file names as well.
    
    Fixes: d5eff33ee6f8 ("nvmet: add simple file backed ns support")
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb3033a432638937ed49087a8ae961160d804d0e
Author: David Michael <fedora.dm0@gmail.com>
Date:   Sun Nov 13 15:52:17 2022 -0500

    libbpf: Fix uninitialized warning in btf_dump_dump_type_data
    
    [ Upstream commit dfd0afbf151d85411b371e841f62b81ee5d1ca54 ]
    
    GCC 11.3.0 fails to compile btf_dump.c due to the following error,
    which seems to originate in btf_dump_struct_data where the returned
    value would be uninitialized if btf_vlen returns zero.
    
    btf_dump.c: In function ‘btf_dump_dump_type_data’:
    btf_dump.c:2363:12: error: ‘err’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
     2363 |         if (err < 0)
          |            ^
    
    Fixes: 920d16af9b42 ("libbpf: BTF dumper support for typed data")
    Signed-off-by: David Michael <fedora.dm0@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Stanislav Fomichev <sdf@google.com>
    Acked-by: Alan Maguire <alan.maguire@oracle.com>
    Link: https://lore.kernel.org/bpf/87zgcu60hq.fsf@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83baa509396a742e0ce145b09fde1ce0a948f49a
Author: Zeng Heng <zengheng4@huawei.com>
Date:   Mon Nov 14 16:56:29 2022 +0800

    ASoC: pxa: fix null-pointer dereference in filter()
    
    [ Upstream commit ec7bf231aaa1bdbcb69d23bc50c753c80fb22429 ]
    
    kasprintf() would return NULL pointer when kmalloc() fail to allocate.
    Need to check the return pointer before calling strcmp().
    
    Fixes: 7a824e214e25 ("ASoC: mmp: add audio dma support")
    Signed-off-by: Zeng Heng <zengheng4@huawei.com>
    Link: https://lore.kernel.org/r/20221114085629.1910435-1-zengheng4@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a06ba0f7f859f8e3b3b7f6d374cb39ce571239bf
Author: Xinlei Lee <xinlei.lee@mediatek.com>
Date:   Wed Nov 9 18:00:59 2022 +0800

    drm/mediatek: Modify dpi power on/off sequence.
    
    [ Upstream commit ff446c0f6290185cefafe3b376bb86063a3a9f6a ]
    
    Modify dpi power on/off sequence so that the first gpio operation will
    take effect.
    
    Fixes: 6bd4763fd532 ("drm/mediatek: set dpi pin mode to gpio low to avoid leakage current")
    Signed-off-by: Xinlei Lee <xinlei.lee@mediatek.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d25bc63708145c10f9c099d5c005602a7f2ef5f
Author: Hanjun Guo <guohanjun@huawei.com>
Date:   Fri Nov 4 17:50:02 2022 +0800

    drm/radeon: Add the missed acpi_put_table() to fix memory leak
    
    [ Upstream commit 10276a20be1115e1f76c189330da2992df980eee ]
    
    When the radeon driver reads the bios information from ACPI
    table in radeon_acpi_vfct_bios(), it misses to call acpi_put_table()
    to release the ACPI memory after the init, so add acpi_put_table()
    properly to fix the memory leak.
    
    v2: fix text formatting (Alex)
    
    Fixes: 268ba0a99f89 ("drm/radeon: implement ACPI VFCT vbios fetch (v3)")
    Signed-off-by: Hanjun Guo <guohanjun@huawei.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cf11e9d31441b1fb59f23d9906b076eb1e9a702
Author: Khazhismel Kumykov <khazhy@chromium.org>
Date:   Tue Nov 8 10:10:29 2022 -0800

    bfq: fix waker_bfqq inconsistency crash
    
    [ Upstream commit a1795c2ccb1e4c49220d2a0d381540024d71647c ]
    
    This fixes crashes in bfq_add_bfqq_busy due to waker_bfqq being NULL,
    but woken_list_node still being hashed. This would happen when
    bfq_init_rq() expects a brand new allocated queue to be returned from
    bfq_get_bfqq_handle_split() and unconditionally updates waker_bfqq
    without resetting woken_list_node. Since we can always return oom_bfqq
    when attempting to allocate, we cannot assume waker_bfqq starts as NULL.
    
    Avoid setting woken_bfqq for oom_bfqq entirely, as it's not useful.
    
    Crashes would have a stacktrace like:
    [160595.656560]  bfq_add_bfqq_busy+0x110/0x1ec
    [160595.661142]  bfq_add_request+0x6bc/0x980
    [160595.666602]  bfq_insert_request+0x8ec/0x1240
    [160595.671762]  bfq_insert_requests+0x58/0x9c
    [160595.676420]  blk_mq_sched_insert_request+0x11c/0x198
    [160595.682107]  blk_mq_submit_bio+0x270/0x62c
    [160595.686759]  __submit_bio_noacct_mq+0xec/0x178
    [160595.691926]  submit_bio+0x120/0x184
    [160595.695990]  ext4_mpage_readpages+0x77c/0x7c8
    [160595.701026]  ext4_readpage+0x60/0xb0
    [160595.705158]  filemap_read_page+0x54/0x114
    [160595.711961]  filemap_fault+0x228/0x5f4
    [160595.716272]  do_read_fault+0xe0/0x1f0
    [160595.720487]  do_fault+0x40/0x1c8
    
    Tested by injecting random failures into bfq_get_queue, crashes go away
    completely.
    
    Fixes: 8ef3fc3a043c ("block, bfq: make shared queues inherit wakers")
    Signed-off-by: Khazhismel Kumykov <khazhy@google.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20221108181030.1611703-1-khazhy@google.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55e822212e7857ddefa97809f9ef06c29483bcd7
Author: David Howells <dhowells@redhat.com>
Date:   Wed Sep 7 19:17:29 2022 +0100

    rxrpc: Fix ack.bufferSize to be 0 when generating an ack
    
    [ Upstream commit 8889a711f9b4dcf4dd1330fa493081beebd118c9 ]
    
    ack.bufferSize should be set to 0 when generating an ack.
    
    Fixes: 8d94aa381dab ("rxrpc: Calls shouldn't hold socket refs")
    Reported-by: Jeffrey Altman <jaltman@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ef8bf0df14daaca16ee45946e0820d23252b4a4
Author: David Howells <dhowells@redhat.com>
Date:   Mon Oct 3 07:34:21 2022 +0100

    net, proc: Provide PROC_FS=n fallback for proc_create_net_single_write()
    
    [ Upstream commit c3d96f690a790074b508fe183a41e36a00cd7ddd ]
    
    Provide a CONFIG_PROC_FS=n fallback for proc_create_net_single_write().
    
    Also provide a fallback for proc_create_net_data_write().
    
    Fixes: 564def71765c ("proc: Add a way to make network proc files writable")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    cc: netdev@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1c44928bb3ca0ec88e7ad5937a2a26a259aede6
Author: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
Date:   Mon Jul 4 10:44:37 2022 +0100

    media: camss: Clean up received buffers on failed start of streaming
    
    [ Upstream commit c8f3582345e6a69da65ab588f7c4c2d1685b0e80 ]
    
    It is required to return the received buffers, if streaming can not be
    started. For instance media_pipeline_start() may fail with EPIPE, if
    a link validation between entities is not passed, and in such a case
    a user gets a kernel warning:
    
      WARNING: CPU: 1 PID: 520 at drivers/media/common/videobuf2/videobuf2-core.c:1592 vb2_start_streaming+0xec/0x160
      <snip>
      Call trace:
       vb2_start_streaming+0xec/0x160
       vb2_core_streamon+0x9c/0x1a0
       vb2_ioctl_streamon+0x68/0xbc
       v4l_streamon+0x30/0x3c
       __video_do_ioctl+0x184/0x3e0
       video_usercopy+0x37c/0x7b0
       video_ioctl2+0x24/0x40
       v4l2_ioctl+0x4c/0x70
    
    The fix is to correct the error path in video_start_streaming() of camss.
    
    Fixes: 0ac2586c410f ("media: camss: Add files which handle the video device nodes")
    Signed-off-by: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b4b4df3f8d8c967cde2d23879a63504e6b18aaf
Author: Marek Vasut <marex@denx.de>
Date:   Fri Nov 4 17:33:39 2022 +0100

    wifi: rsi: Fix handling of 802.3 EAPOL frames sent via control port
    
    [ Upstream commit b8f6efccbb9dc0ff5dee7e20d69a4747298ee603 ]
    
    When using wpa_supplicant v2.10, this driver is no longer able to
    associate with any AP and fails in the EAPOL 4-way handshake while
    sending the 2/4 message to the AP. The problem is not present in
    wpa_supplicant v2.9 or older. The problem stems from HostAP commit
    144314eaa ("wpa_supplicant: Send EAPOL frames over nl80211 where available")
    which changes the way EAPOL frames are sent, from them being send
    at L2 frames to them being sent via nl80211 control port.
    
    An EAPOL frame sent as L2 frame is passed to the WiFi driver with
    skb->protocol ETH_P_PAE, while EAPOL frame sent via nl80211 control
    port has skb->protocol set to ETH_P_802_3 . The later happens in
    ieee80211_tx_control_port(), where the EAPOL frame is encapsulated
    into 802.3 frame.
    
    The rsi_91x driver handles ETH_P_PAE EAPOL frames as high-priority
    frames and sends them via highest-priority transmit queue, while
    the ETH_P_802_3 frames are sent as regular frames. The EAPOL 4-way
    handshake frames must be sent as highest-priority, otherwise the
    4-way handshake times out.
    
    Therefore, to fix this problem, inspect the skb control flags and
    if flag IEEE80211_TX_CTRL_PORT_CTRL_PROTO is set, assume this is
    an EAPOL frame and transmit the frame via high-priority queue just
    like other ETH_P_PAE frames.
    
    Fixes: 0eb42586cf87 ("rsi: data packet descriptor enhancements")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221104163339.227432-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e1440c858e66a1274afd82d1deb3c705c075496
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Nov 4 13:12:38 2022 -0700

    Input: joystick - fix Kconfig warning for JOYSTICK_ADC
    
    [ Upstream commit 6100a19c4fcfe154dd32f8a8ef4e8c0b1f607c75 ]
    
    Fix a Kconfig warning for JOYSTICK_ADC by also selecting
    IIO_BUFFER.
    
    WARNING: unmet direct dependencies detected for IIO_BUFFER_CB
      Depends on [n]: IIO [=y] && IIO_BUFFER [=n]
      Selected by [y]:
      - JOYSTICK_ADC [=y] && INPUT [=y] && INPUT_JOYSTICK [=y] && IIO [=y]
    
    Fixes: 2c2b364fddd5 ("Input: joystick - add ADC attached joystick driver.")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20221104201238.31628-1-rdunlap@infradead.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71212d73184845c944ef1b43f092e643e5bde003
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Sat Oct 22 20:13:52 2022 +0800

    mtd: Fix device name leak when register device failed in add_mtd_device()
    
    [ Upstream commit 895d68a39481a75c680aa421546931fb11942fa6 ]
    
    There is a kmemleak when register device failed:
      unreferenced object 0xffff888101aab550 (size 8):
        comm "insmod", pid 3922, jiffies 4295277753 (age 925.408s)
        hex dump (first 8 bytes):
          6d 74 64 30 00 88 ff ff                          mtd0....
        backtrace:
          [<00000000bde26724>] __kmalloc_node_track_caller+0x4e/0x150
          [<000000003c32b416>] kvasprintf+0xb0/0x130
          [<000000001f7a8f15>] kobject_set_name_vargs+0x2f/0xb0
          [<000000006e781163>] dev_set_name+0xab/0xe0
          [<00000000e30d0c78>] add_mtd_device+0x4bb/0x700
          [<00000000f3d34de7>] mtd_device_parse_register+0x2ac/0x3f0
          [<00000000c0d88488>] 0xffffffffa0238457
          [<00000000b40d0922>] 0xffffffffa02a008f
          [<0000000023d17b9d>] do_one_initcall+0x87/0x2a0
          [<00000000770f6ca6>] do_init_module+0xdf/0x320
          [<000000007b6768fe>] load_module+0x2f98/0x3330
          [<00000000346bed5a>] __do_sys_finit_module+0x113/0x1b0
          [<00000000674c2290>] do_syscall_64+0x35/0x80
          [<000000004c6a8d97>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    If register device failed, should call put_device() to give up the
    reference.
    
    Fixes: 1f24b5a8ecbb ("[MTD] driver model updates")
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20221022121352.2534682-1-zhangxiaoxu5@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 106311677b27345126aee9141c597ec7a4538e7b
Author: Manivannan Sadhasivam <mani@kernel.org>
Date:   Wed Nov 2 14:43:20 2022 +0530

    clk: qcom: gcc-sm8250: Use retention mode for USB GDSCs
    
    [ Upstream commit ac1c5a03d3772b1db25e8092f771aa33f6ae2f7e ]
    
    USB controllers on SM8250 doesn't work after coming back from suspend.
    This can be fixed by keeping the USB GDSCs in retention mode so that
    hardware can keep them ON and put into rentention mode once the parent
    domain goes to a low power state.
    
    Fixes: 3e5770921a88 ("clk: qcom: gcc: Add global clock controller driver for SM8250")
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221102091320.66007-1-manivannan.sadhasivam@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 322c7415e77e3e05f91beb8765fb01935dcc88ff
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Fri Nov 4 09:36:45 2022 -0700

    bpf: propagate precision across all frames, not just the last one
    
    [ Upstream commit 529409ea92d590659be487ba0839710329bd8074 ]
    
    When equivalent completed state is found and it has additional precision
    restrictions, BPF verifier propagates precision to
    currently-being-verified state chain (i.e., including parent states) so
    that if some of the states in the chain are not yet completed, necessary
    precision restrictions are enforced.
    
    Unfortunately, right now this happens only for the last frame (deepest
    active subprogram's frame), not all the frames. This can lead to
    incorrect matching of states due to missing precision marker. Currently
    this doesn't seem possible as BPF verifier forces everything to precise
    when validated BPF program has any subprograms. But with the next patch
    lifting this restriction, this becomes problematic.
    
    In fact, without this fix, we'll start getting failure in one of the
    existing test_verifier test cases:
    
      #906/p precise: cross frame pruning FAIL
      Unexpected success to load!
      verification time 48 usec
      stack depth 0+0
      processed 26 insns (limit 1000000) max_states_per_insn 3 total_states 17 peak_states 17 mark_read 8
    
    This patch adds precision propagation across all frames.
    
    Fixes: a3ce685dd01a ("bpf: fix precision tracking")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/r/20221104163649.121784-3-andrii@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07c286c10a9cedbd71f20269ff3a4e73d9aab2fe
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Tue Sep 21 17:49:34 2021 -0700

    bpf: Check the other end of slot_type for STACK_SPILL
    
    [ Upstream commit 27113c59b6d0a587b29ae72d4ff3f832f58b0651 ]
    
    Every 8 bytes of the stack is tracked by a bpf_stack_state.
    Within each bpf_stack_state, there is a 'u8 slot_type[8]' to track
    the type of each byte.  Verifier tests slot_type[0] == STACK_SPILL
    to decide if the spilled reg state is saved.  Verifier currently only
    saves the reg state if the whole 8 bytes are spilled to the stack,
    so checking the slot_type[7] is the same as checking slot_type[0].
    
    The later patch will allow verifier to save the bounded scalar
    reg also for <8 bytes spill.  There is a llvm patch [1] to ensure
    the <8 bytes spill will be 8-byte aligned,  so checking
    slot_type[7] instead of slot_type[0] is required.
    
    While at it, this patch refactors the slot_type[0] == STACK_SPILL
    test into a new function is_spilled_reg() and change the
    slot_type[0] check to slot_type[7] check in there also.
    
    [1] https://reviews.llvm.org/D109073
    
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20210922004934.624194-1-kafai@fb.com
    Stable-dep-of: 529409ea92d5 ("bpf: propagate precision across all frames, not just the last one")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdbc363bc1d0e205c3b959ec86942795c22a6dee
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Fri Nov 4 09:36:44 2022 -0700

    bpf: propagate precision in ALU/ALU64 operations
    
    [ Upstream commit a3b666bfa9c9edc05bca62a87abafe0936bd7f97 ]
    
    When processing ALU/ALU64 operations (apart from BPF_MOV, which is
    handled correctly already; and BPF_NEG and BPF_END are special and don't
    have source register), if destination register is already marked
    precise, this causes problem with potentially missing precision tracking
    for the source register. E.g., when we have r1 >>= r5 and r1 is marked
    precise, but r5 isn't, this will lead to r5 staying as imprecise. This
    is due to the precision backtracking logic stopping early when it sees
    r1 is already marked precise. If r1 wasn't precise, we'd keep
    backtracking and would add r5 to the set of registers that need to be
    marked precise. So there is a discrepancy here which can lead to invalid
    and incompatible states matched due to lack of precision marking on r5.
    If r1 wasn't precise, precision backtracking would correctly mark both
    r1 and r5 as precise.
    
    This is simple to fix, though. During the forward instruction simulation
    pass, for arithmetic operations of `scalar <op>= scalar` form (where
    <op> is ALU or ALU64 operations), if destination register is already
    precise, mark source register as precise. This applies only when both
    involved registers are SCALARs. `ptr += scalar` and `scalar += ptr`
    cases are already handled correctly.
    
    This does have (negative) effect on some selftest programs and few
    Cilium programs.  ~/baseline-tmp-results.csv are veristat results with
    this patch, while ~/baseline-results.csv is without it. See post
    scriptum for instructions on how to make Cilium programs testable with
    veristat. Correctness has a price.
    
    $ ./veristat -C -e file,prog,insns,states ~/baseline-results.csv ~/baseline-tmp-results.csv | grep -v '+0'
    File                     Program               Total insns (A)  Total insns (B)  Total insns (DIFF)  Total states (A)  Total states (B)  Total states (DIFF)
    -----------------------  --------------------  ---------------  ---------------  ------------------  ----------------  ----------------  -------------------
    bpf_cubic.bpf.linked1.o  bpf_cubic_cong_avoid              997             1700      +703 (+70.51%)                62                90        +28 (+45.16%)
    test_l4lb.bpf.linked1.o  balancer_ingress                 4559             5469      +910 (+19.96%)               118               126          +8 (+6.78%)
    -----------------------  --------------------  ---------------  ---------------  ------------------  ----------------  ----------------  -------------------
    
    $ ./veristat -C -e file,prog,verdict,insns,states ~/baseline-results-cilium.csv ~/baseline-tmp-results-cilium.csv | grep -v '+0'
    File           Program                         Total insns (A)  Total insns (B)  Total insns (DIFF)  Total states (A)  Total states (B)  Total states (DIFF)
    -------------  ------------------------------  ---------------  ---------------  ------------------  ----------------  ----------------  -------------------
    bpf_host.o     tail_nodeport_nat_ingress_ipv6             4448             5261      +813 (+18.28%)               234               247         +13 (+5.56%)
    bpf_host.o     tail_nodeport_nat_ipv6_egress              3396             3446        +50 (+1.47%)               201               203          +2 (+1.00%)
    bpf_lxc.o      tail_nodeport_nat_ingress_ipv6             4448             5261      +813 (+18.28%)               234               247         +13 (+5.56%)
    bpf_overlay.o  tail_nodeport_nat_ingress_ipv6             4448             5261      +813 (+18.28%)               234               247         +13 (+5.56%)
    bpf_xdp.o      tail_lb_ipv4                              71736            73442      +1706 (+2.38%)              4295              4370         +75 (+1.75%)
    -------------  ------------------------------  ---------------  ---------------  ------------------  ----------------  ----------------  -------------------
    
    P.S. To make Cilium ([0]) programs libbpf-compatible and thus
    veristat-loadable, apply changes from topmost commit in [1], which does
    minimal changes to Cilium source code, mostly around SEC() annotations
    and BPF map definitions.
    
      [0] https://github.com/cilium/cilium/
      [1] https://github.com/anakryiko/cilium/commits/libbpf-friendliness
    
    Fixes: b5dc0163d8fd ("bpf: precise scalar_value tracking")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/r/20221104163649.121784-2-andrii@kernel.org
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b29e46610cfe5edcc8967a65786295a031f2ec86
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Oct 24 21:46:50 2022 +0800

    media: platform: exynos4-is: fix return value check in fimc_md_probe()
    
    [ Upstream commit e38e42c078da4af962d322b97e726dcb2f184e3f ]
    
    devm_pinctrl_get() may return ERR_PTR(-EPROBE_DEFER), add a minus sign
    to fix it.
    
    Fixes: 4163851f7b99 ("[media] s5p-fimc: Use pinctrl API for camera ports configuration")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab54081a2843aefb837812fac5488cc8f1696142
Author: Liu Shixin <liushixin2@huawei.com>
Date:   Thu Oct 27 20:38:55 2022 +0800

    media: vivid: fix compose size exceed boundary
    
    [ Upstream commit 94a7ad9283464b75b12516c5512541d467cefcf8 ]
    
    syzkaller found a bug:
    
     BUG: unable to handle page fault for address: ffffc9000a3b1000
     #PF: supervisor write access in kernel mode
     #PF: error_code(0x0002) - not-present page
     PGD 100000067 P4D 100000067 PUD 10015f067 PMD 1121ca067 PTE 0
     Oops: 0002 [#1] PREEMPT SMP
     CPU: 0 PID: 23489 Comm: vivid-000-vid-c Not tainted 6.1.0-rc1+ #512
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
     RIP: 0010:memcpy_erms+0x6/0x10
    [...]
     Call Trace:
      <TASK>
      ? tpg_fill_plane_buffer+0x856/0x15b0
      vivid_fillbuff+0x8ac/0x1110
      vivid_thread_vid_cap_tick+0x361/0xc90
      vivid_thread_vid_cap+0x21a/0x3a0
      kthread+0x143/0x180
      ret_from_fork+0x1f/0x30
      </TASK>
    
    This is because we forget to check boundary after adjust compose->height
    int V4L2_SEL_TGT_CROP case. Add v4l2_rect_map_inside() to fix this problem
    for this case.
    
    Fixes: ef834f7836ec ("[media] vivid: add the video capture and output parts")
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c58c83c6fc8a509b34d8b9d87537a4aa83b32e6
Author: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Date:   Fri Nov 4 00:39:53 2022 +0530

    bpf: Fix slot type check in check_stack_write_var_off
    
    [ Upstream commit f5e477a861e4a20d8a1c5f7a245f3a3c3c376b03 ]
    
    For the case where allow_ptr_leaks is false, code is checking whether
    slot type is STACK_INVALID and STACK_SPILL and rejecting other cases.
    This is a consequence of incorrectly checking for register type instead
    of the slot type (NOT_INIT and SCALAR_VALUE respectively). Fix the
    check.
    
    Fixes: 01f810ace9ed ("bpf: Allow variable-offset stack access")
    Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
    Link: https://lore.kernel.org/r/20221103191013.1236066-5-memxor@gmail.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cffa75198ca1489e53b229170cc395ee33afad7e
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Fri Aug 26 12:39:23 2022 +0300

    drm/msm/hdmi: use devres helper for runtime PM management
    
    [ Upstream commit b964444b2b64ce182495731d830499d1c588ccf6 ]
    
    Use devm_pm_runtime_enable() to enable runtime PM. This way its effect
    will be reverted on device unbind/destruction.
    
    Fixes: 6ed9ed484d04 ("drm/msm/hdmi: Set up runtime PM for HDMI")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/499647/
    Link: https://lore.kernel.org/r/20220826093927.851597-2-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58d002b72e0a86d5f6279bc8b8f1adb51f644f01
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Thu Jun 9 15:23:42 2022 +0300

    drm/msm/hdmi: drop unused GPIO support
    
    [ Upstream commit 68e674b13b17ed41aac2763d12ece6deaae8df58 ]
    
    The HDMI driver has code to configure extra GPIOs, which predates
    pinctrl support. Nowadays all platforms should use pinctrl instead.
    Neither of upstreamed Qualcomm platforms uses these properties, so it's
    safe to drop them.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Patchwork: https://patchwork.freedesktop.org/patch/488858/
    Link: https://lore.kernel.org/r/20220609122350.3157529-7-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Stable-dep-of: b964444b2b64 ("drm/msm/hdmi: use devres helper for runtime PM management")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d4bc60693c4206c64723e94ae5f7a04c0b8f18f
Author: GUO Zihua <guozihua@huawei.com>
Date:   Wed Sep 21 20:58:04 2022 +0800

    ima: Handle -ESTALE returned by ima_filter_rule_match()
    
    [ Upstream commit c7423dbdbc9ecef7fff5239d144cad4b9887f4de ]
    
    IMA relies on the blocking LSM policy notifier callback to update the
    LSM based IMA policy rules.
    
    When SELinux update its policies, IMA would be notified and starts
    updating all its lsm rules one-by-one. During this time, -ESTALE would
    be returned by ima_filter_rule_match() if it is called with a LSM rule
    that has not yet been updated. In ima_match_rules(), -ESTALE is not
    handled, and the LSM rule is considered a match, causing extra files
    to be measured by IMA.
    
    Fix it by re-initializing a temporary rule if -ESTALE is returned by
    ima_filter_rule_match(). The origin rule in the rule list would be
    updated by the LSM policy notifier callback.
    
    Fixes: b16942455193 ("ima: use the lsm policy update notifier")
    Signed-off-by: GUO Zihua <guozihua@huawei.com>
    Reviewed-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13fc167e1645c43c631d7752d98e377f0e4cbb15
Author: Marek Vasut <marex@denx.de>
Date:   Sat Oct 15 01:11:06 2022 +0200

    drm/panel/panel-sitronix-st7701: Remove panel on DSI attach failure
    
    [ Upstream commit c62102165dd79284d42383d2f7ed17301bd8e629 ]
    
    In case mipi_dsi_attach() fails, call drm_panel_remove() to
    avoid memory leak.
    
    Fixes: 849b2e3ff969 ("drm/panel: Add Sitronix ST7701 panel driver")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221014231106.468063-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c20672cfa0978977ae5e72c4b10c2ec39022ae00
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Tue Nov 1 18:32:51 2022 +0100

    spi: Update reference to struct spi_controller
    
    [ Upstream commit bf585ccee22faf469d82727cf375868105b362f7 ]
    
    struct spi_master has been renamed to struct spi_controller. Update the
    reference in spi.rst to make it clickable again.
    
    Fixes: 8caab75fd2c2 ("spi: Generalize SPI "master" to "controller"")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Link: https://lore.kernel.org/r/20221101173252.1069294-1-j.neuschaefer@gmx.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2858d038c5d3c282478b208fb14032dad3d8a268
Author: Marek Vasut <marex@denx.de>
Date:   Fri Oct 28 13:38:34 2022 +0200

    clk: renesas: r9a06g032: Repair grave increment error
    
    [ Upstream commit 02693e11611e082e3c4d8653e8af028e43d31164 ]
    
    If condition (clkspec.np != pd->dev.of_node) is true, then the driver
    ends up in an endless loop, forever, locking up the machine.
    
    Fixes: aad03a66f902 ("clk: renesas: r9a06g032: Add clock domain support")
    Reviewed-by: Ralph Siemsen <ralph.siemsen@linaro.org>
    Signed-off-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Gareth Williams <gareth.williams.jx@renesas.com>
    Link: https://lore.kernel.org/r/20221028113834.7496-1-marex@denx.de
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6ed73db390319b248b91a6325da1a48ad85e0d1
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Thu Sep 22 21:21:07 2022 +0800

    drm/rockchip: lvds: fix PM usage counter unbalance in poweron
    
    [ Upstream commit 4dba27f1a14592ac4cf71c3bc1cc1fd05dea8015 ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    Forgetting to putting operation will result in reference leak here.
    We fix it by replacing it with the newest pm_runtime_resume_and_get
    to keep usage counter balanced.
    
    Fixes: 34cc0aa25456 ("drm/rockchip: Add support for Rockchip Soc LVDS")
    Fixes: cca1705c3d89 ("drm/rockchip: lvds: Add PX30 support")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220922132107.105419-3-zhangqilong3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13fab6322b9f16406c9c6ba9b3b402b425453f96
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Mon Oct 10 20:52:37 2022 +0200

    can: kvaser_usb: Compare requested bittiming parameters with actual parameters in do_set_{,data}_bittiming
    
    [ Upstream commit 39d3df6b0ea80f9b515c632ca07b39b1c156edee ]
    
    The device will respond with a CMD_ERROR_EVENT command, with error_code
    KVASER_USB_{LEAF,HYDRA}_ERROR_EVENT_PARAM, if the CMD_SET_BUSPARAMS_REQ
    contains invalid bittiming parameters.
    However, this command does not contain any channel reference.
    
    To check if the CMD_SET_BUSPARAMS_REQ was successful, redback and compare
    the requested bittiming parameters with the device reported parameters.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Fixes: aec5fb2268b7 ("can: kvaser_usb: Add support for Kvaser USB hydra family")
    Tested-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Co-developed-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-12-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e55d61e87f2586914d6d1cacd7501577614b878
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Mon Oct 10 20:52:36 2022 +0200

    can: kvaser_usb: Add struct kvaser_usb_busparams
    
    [ Upstream commit 00e5786177649c1e3110f9454fdd34e336597265 ]
    
    Add struct kvaser_usb_busparams containing the busparameters used in
    CMD_{SET,GET}_BUSPARAMS* commands.
    
    Tested-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-11-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Stable-dep-of: 39d3df6b0ea8 ("can: kvaser_usb: Compare requested bittiming parameters with actual parameters in do_set_{,data}_bittiming")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcfd4df200ff61d3225a645ce5a4388851c207fe
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 20:52:35 2022 +0200

    can: kvaser_usb_leaf: Fix bogus restart events
    
    [ Upstream commit 90904d326269a38fe5dd895fb2db7c03199654c4 ]
    
    When auto-restart is enabled, the kvaser_usb_leaf driver considers
    transition from any state >= CAN_STATE_BUS_OFF as a bus-off recovery
    event (restart).
    
    However, these events may occur at interface startup time before
    kvaser_usb_open() has set the state to CAN_STATE_ERROR_ACTIVE, causing
    restarts counter to increase and CAN_ERR_RESTARTED to be sent despite no
    actual restart having occurred.
    
    Fix that by making the auto-restart condition checks more strict so that
    they only trigger when the interface was actually in the BUS_OFF state.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-10-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51f07da38bae75db91536d3ba793ac1b160f5728
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 20:52:33 2022 +0200

    can: kvaser_usb_leaf: Fix wrong CAN state after stopping
    
    [ Upstream commit a11249acf802341294557895d8e5f6aef080253f ]
    
    0bfd:0124 Kvaser Mini PCI Express 2xHS FW 4.18.778 sends a
    CMD_CHIP_STATE_EVENT indicating bus-off after stopping the device,
    causing a stopped device to appear as CAN_STATE_BUS_OFF instead of
    CAN_STATE_STOPPED.
    
    Fix that by not handling error events on stopped devices.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-8-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 647c26887b5b7adb97ba0510003ab244ec8aace3
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 20:52:32 2022 +0200

    can: kvaser_usb_leaf: Fix improved state not being reported
    
    [ Upstream commit 8d21f5927ae604881f98587fabf6753f88730968 ]
    
    The tested 0bfd:0017 Kvaser Memorator Professional HS/HS FW 2.0.50 and
    0bfd:0124 Kvaser Mini PCI Express 2xHS FW 4.18.778 do not seem to send
    any unsolicited events when error counters decrease or when the device
    transitions from ERROR_PASSIVE to ERROR_ACTIVE (or WARNING).
    
    This causes the interface to e.g. indefinitely stay in the ERROR_PASSIVE
    state.
    
    Fix that by asking for chip state (inc. counters) event every 0.5 secs
    when error counters are non-zero.
    
    Since there are non-error-counter devices, also always poll in
    ERROR_PASSIVE even if the counters show zero.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-7-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9676d65a4ad3e191d4594db4687f35cee32191b3
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Wed Dec 8 12:56:05 2021 +0100

    can: kvaser_usb: make use of units.h in assignment of frequency
    
    [ Upstream commit b8f91799687eeb6ffe73b66420db46d8c0292295 ]
    
    Use the MEGA define plus the comment /* Hz */ when assigning
    frequencies.
    
    Link: https://lore.kernel.org/all/20211210075803.343841-1-mkl@pengutronix.de
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Stable-dep-of: 8d21f5927ae6 ("can: kvaser_usb_leaf: Fix improved state not being reported")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c761108562815fe54bd8d23bc7a767f6f518234e
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 20:52:31 2022 +0200

    can: kvaser_usb_leaf: Set Warning state even without bus errors
    
    [ Upstream commit df1b7af2761b935f63b4a53e789d41ed859edf61 ]
    
    kvaser_usb_leaf_rx_error_update_can_state() sets error state according
    to error counters when the hardware does not indicate a specific state
    directly.
    
    However, this is currently gated behind a check for
    M16C_STATE_BUS_ERROR which does not always seem to be set when error
    counters are increasing, and may not be set when error counters are
    decreasing.
    
    This causes the CAN_STATE_ERROR_WARNING state to not be set in some
    cases even when appropriate.
    
    Change the code to set error state from counters even without
    M16C_STATE_BUS_ERROR.
    
    The Error-Passive case seems superfluous as it is already set via
    M16C_STATE_BUS_PASSIVE flag above, but it is kept for now.
    
    Tested with 0bfd:0124 Kvaser Mini PCI Express 2xHS FW 4.18.778.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-6-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a60bf9d81473e98cc99cbd78119e76c8e2bcf701
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Mon Oct 10 20:52:30 2022 +0200

    can: kvaser_usb: kvaser_usb_leaf: Handle CMD_ERROR_EVENT
    
    [ Upstream commit b24cb2d169e0c9dce664a959e1f2aa9781285dc9 ]
    
    The device will send an error event command, to indicate certain errors.
    This indicates a misbehaving driver, and should never occur.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Co-developed-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-5-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8aae6bddc1d3d45cf772273174e58802c82851be
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Mon Oct 10 20:52:29 2022 +0200

    can: kvaser_usb: kvaser_usb_leaf: Rename {leaf,usbcan}_cmd_error_event to {leaf,usbcan}_cmd_can_error_event
    
    [ Upstream commit 7ea56128dbf904a3359bcf9289cccdfa3c85c7e8 ]
    
    Prepare for handling CMD_ERROR_EVENT. Rename struct
    {leaf,usbcan}_cmd_error_event to {leaf,usbcan}_cmd_can_error_event.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Reported-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Tested-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-4-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 972270be2452421874f2ac29100bc4e0c768540a
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Mon Oct 10 20:52:28 2022 +0200

    can: kvaser_usb: kvaser_usb_leaf: Get capabilities from device
    
    [ Upstream commit 35364f5b41a4917fe94a3f393d149b63ec583297 ]
    
    Use the CMD_GET_CAPABILITIES_REQ command to query the device for certain
    capabilities. We are only interested in LISTENONLY mode and wither the
    device reports CAN error counters.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Reported-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Tested-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010185237.319219-3-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9e0d9945fd1885efdc1f8842ecbc0f074492ce9
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Dec 7 21:15:28 2021 +0900

    can: kvaser_usb: do not increase tx statistics when sending error message frames
    
    [ Upstream commit 0b0ce2c67795672115ac6ca28351a78799cd114b ]
    
    The CAN error message frames (i.e. error skb) are an interface
    specific to socket CAN. The payload of the CAN error message frames
    does not correspond to any actual data sent on the wire. Only an error
    flag and a delimiter are transmitted when an error occurs (c.f. ISO
    11898-1 section 10.4.4.2 "Error flag").
    
    For this reason, it makes no sense to increment the tx_packets and
    tx_bytes fields of struct net_device_stats when sending an error
    message frame because no actual payload will be transmitted on the
    wire.
    
    N.B. Sending error message frames is a very specific feature which, at
    the moment, is only supported by the Kvaser Hydra hardware. Please
    refer to [1] for more details on the topic.
    
    [1] https://lore.kernel.org/linux-can/CAMZ6RqK0rTNg3u3mBpZOoY51jLZ-et-J01tY6-+mWsM4meVw-A@mail.gmail.com/t/#u
    
    Link: https://lore.kernel.org/all/20211207121531.42941-3-mailhol.vincent@wanadoo.fr
    Co-developed-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Stable-dep-of: 35364f5b41a4 ("can: kvaser_usb: kvaser_usb_leaf: Get capabilities from device")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e39bce64e58e62dd7125b2bbed74df4f5f6017e7
Author: Alan Maguire <alan.maguire@oracle.com>
Date:   Mon Oct 24 15:38:29 2022 +0100

    libbpf: Btf dedup identical struct test needs check for nested structs/arrays
    
    [ Upstream commit f3c51fe02c55bd944662714e5b91b96dc271ad9f ]
    
    When examining module BTF, it is common to see core kernel structures
    such as sk_buff, net_device duplicated in the module.  After adding
    debug messaging to BTF it turned out that much of the problem
    was down to the identical struct test failing during deduplication;
    sometimes the compiler adds identical structs.  However
    it turns out sometimes that type ids of identical struct members
    can also differ, even when the containing structs are still identical.
    
    To take an example, for struct sk_buff, debug messaging revealed
    that the identical struct matching was failing for the anon
    struct "headers"; specifically for the first field:
    
    __u8       __pkt_type_offset[0]; /*   128     0 */
    
    Looking at the code in BTF deduplication, we have code that guards
    against the possibility of identical struct definitions, down to
    type ids, and identical array definitions.  However in this case
    we have a struct which is being defined twice but does not have
    identical type ids since each duplicate struct has separate type
    ids for the above array member.   A similar problem (though not
    observed) could occur for struct-in-struct.
    
    The solution is to make the "identical struct" test check members
    not just for matching ids, but to also check if they in turn are
    identical structs or arrays.
    
    The results of doing this are quite dramatic (for some modules
    at least); I see the number of type ids drop from around 10000
    to just over 1000 in one module for example.
    
    For testing use latest pahole or apply [1], otherwise dedups
    can fail for the reasons described there.
    
    Also fix return type of btf_dedup_identical_arrays() as
    suggested by Andrii to match boolean return type used
    elsewhere.
    
    Fixes: efdd3eb8015e ("libbpf: Accommodate DWARF/compiler bug with duplicated structs")
    Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/1666622309-22289-1-git-send-email-alan.maguire@oracle.com
    
    [1] https://lore.kernel.org/bpf/1666364523-9648-1-git-send-email-alan.maguire
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4419f93e2144c2bf6f2022f042cf1d2421d40f8
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri Sep 23 11:42:01 2022 +0200

    media: exynos4-is: don't rely on the v4l2_async_subdev internals
    
    [ Upstream commit f98a5c2e1c4396488c27274ba82afc11725a4bcc ]
    
    Commit 1f391df44607 ("media: v4l2-async: Use endpoints in
    __v4l2_async_nf_add_fwnode_remote()") changed the data that is stored in
    the v4l2_async_subdev internals from the fwnode pointer to the parent
    device to the fwnode pointer to the matched endpoint. This broke the
    sensor matching code, which relied on the particular fwnode data in the
    v4l2_async_subdev internals. Fix this by simply matching the
    v4l2_async_subdev pointer, which is already available there.
    
    Reported-by: Daniel Scally <djrscally@gmail.com>
    Fixes: fa91f1056f17 ("[media] exynos4-is: Add support for asynchronous subdevices registration")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Daniel Scally <djrscally@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8741792d8274b432b36bbef6480b9fe1942f3581
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Fri Oct 21 13:44:34 2022 -0700

    soreuseport: Fix socket selection for SO_INCOMING_CPU.
    
    [ Upstream commit b261eda84ec136240a9ca753389853a3a1bccca2 ]
    
    Kazuho Oku reported that setsockopt(SO_INCOMING_CPU) does not work
    with setsockopt(SO_REUSEPORT) since v4.6.
    
    With the combination of SO_REUSEPORT and SO_INCOMING_CPU, we could
    build a highly efficient server application.
    
    setsockopt(SO_INCOMING_CPU) associates a CPU with a TCP listener
    or UDP socket, and then incoming packets processed on the CPU will
    likely be distributed to the socket.  Technically, a socket could
    even receive packets handled on another CPU if no sockets in the
    reuseport group have the same CPU receiving the flow.
    
    The logic exists in compute_score() so that a socket will get a higher
    score if it has the same CPU with the flow.  However, the score gets
    ignored after the blamed two commits, which introduced a faster socket
    selection algorithm for SO_REUSEPORT.
    
    This patch introduces a counter of sockets with SO_INCOMING_CPU in
    a reuseport group to check if we should iterate all sockets to find
    a proper one.  We increment the counter when
    
      * calling listen() if the socket has SO_INCOMING_CPU and SO_REUSEPORT
    
      * enabling SO_INCOMING_CPU if the socket is in a reuseport group
    
    Also, we decrement it when
    
      * detaching a socket out of the group to apply SO_INCOMING_CPU to
        migrated TCP requests
    
      * disabling SO_INCOMING_CPU if the socket is in a reuseport group
    
    When the counter reaches 0, we can get back to the O(1) selection
    algorithm.
    
    The overall changes are negligible for the non-SO_INCOMING_CPU case,
    and the only notable thing is that we have to update sk_incomnig_cpu
    under reuseport_lock.  Otherwise, the race prevents transitioning to
    the O(n) algorithm and results in the wrong socket selection.
    
     cpu1 (setsockopt)               cpu2 (listen)
    +-----------------+             +-------------+
    
    lock_sock(sk1)                  lock_sock(sk2)
    
    reuseport_update_incoming_cpu(sk1, val)
    .
    |  /* set CPU as 0 */
    |- WRITE_ONCE(sk1->incoming_cpu, val)
    |
    |                               spin_lock_bh(&reuseport_lock)
    |                               reuseport_grow(sk2, reuse)
    |                               .
    |                               |- more_socks_size = reuse->max_socks * 2U;
    |                               |- if (more_socks_size > U16_MAX &&
    |                               |       reuse->num_closed_socks)
    |                               |  .
    |                               |  |- RCU_INIT_POINTER(sk1->sk_reuseport_cb, NULL);
    |                               |  `- __reuseport_detach_closed_sock(sk1, reuse)
    |                               |     .
    |                               |     `- reuseport_put_incoming_cpu(sk1, reuse)
    |                               |        .
    |                               |        |  /* Read shutdown()ed sk1's sk_incoming_cpu
    |                               |        |   * without lock_sock().
    |                               |        |   */
    |                               |        `- if (sk1->sk_incoming_cpu >= 0)
    |                               |           .
    |                               |           |  /* decrement not-yet-incremented
    |                               |           |   * count, which is never incremented.
    |                               |           |   */
    |                               |           `- __reuseport_put_incoming_cpu(reuse);
    |                               |
    |                               `- spin_lock_bh(&reuseport_lock)
    |
    |- spin_lock_bh(&reuseport_lock)
    |
    |- reuse = rcu_dereference_protected(sk1->sk_reuseport_cb, ...)
    |- if (!reuse)
    |  .
    |  |  /* Cannot increment reuse->incoming_cpu. */
    |  `- goto out;
    |
    `- spin_unlock_bh(&reuseport_lock)
    
    Fixes: e32ea7e74727 ("soreuseport: fast reuseport UDP socket selection")
    Fixes: c125e80b8868 ("soreuseport: fast reuseport TCP socket selection")
    Reported-by: Kazuho Oku <kazuhooku@gmail.com>
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 094f56192c568db17f4094021ed67e288a64d281
Author: Tang Bin <tangbin@cmss.chinamobile.com>
Date:   Tue Sep 13 14:37:00 2022 +0800

    venus: pm_helpers: Fix error check in vcodec_domains_get()
    
    [ Upstream commit 0f6e8d8c94a82e85e1b9b62a7671990740dc6f70 ]
    
    In the function vcodec_domains_get(), dev_pm_domain_attach_by_name()
    may return NULL in some cases, so IS_ERR() doesn't meet the
    requirements. Thus fix it.
    
    Fixes: 7482a983dea3 ("media: venus: redesign clocks and pm domains control")
    Signed-off-by: Tang Bin <tangbin@cmss.chinamobile.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c793a9ad9d390504e4ec23467e4c40c5e65d38a
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Sep 21 13:38:00 2022 +0200

    media: i2c: ad5820: Fix error path
    
    [ Upstream commit 9fce241660f37d9e95e93c0ae6fba8cfefa5797b ]
    
    Error path seems to be swaped. Fix the order and provide some meaningful
    names.
    
    Fixes: bee3d5115611 ("[media] ad5820: Add driver for auto-focus coil")
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07611f9e44e1da45053a4983d9ddbdb357ce50ad
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Sun Oct 9 16:41:46 2022 +0200

    media: adv748x: afe: Select input port when initializing AFE
    
    [ Upstream commit 23ddb85dafefdace1ad79d1a30b0a4e7c4b5cd8d ]
    
    When moving the input selection to adv748x_reset() it was missed that
    during probe the device is reset _before_ the initialization and parsing
    of DT by the AFE subdevice. This can lead to the wrong input port (in
    case it's not port 0) being selected until the device is reset for the
    first time.
    
    Fix this by restoring the call to adv748x_afe_s_input() in the AFE
    initialization while also keeping it in the adv748x_reset().
    
    Fixes: c30ed81afe89 ("media: adv748x: afe: Select input port when device is reset")
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa81257dbf3b8554f927dbff698b1aa80f5470f9
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Sep 27 09:28:13 2022 +0800

    media: coda: jpeg: Add check for kmalloc
    
    [ Upstream commit f30ce3d3760b22ee33c8d9c2e223764ad30bdc5f ]
    
    As kmalloc can return NULL pointer, it should be better to
    check the return value and return error, same as
    coda_jpeg_decode_header.
    
    Fixes: 96f6f62c4656 ("media: coda: jpeg: add CODA960 JPEG encoder support")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a402adc9f5e18d15955074a213755790457c352
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Mon Sep 26 19:31:51 2022 +0300

    media: v4l2-ctrls: Fix off-by-one error in integer menu control check
    
    [ Upstream commit b6bcdf763db1f5ea602bf876cfe91debfb3c7773 ]
    
    The V4L2 API defines the maximum value for an integer menu control as
    the number of elements minus one. The v4l2_ctrl_new_std_menu() validates
    this constraint with an off-by-one error. Fix it.
    
    Fixes: d1e9b7c12b74 ("[media] V4L: Add support for integer menu controls with standard menu items")
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Reviewed-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1caed03305b560bafea8eaa57f1847791658b3ff
Author: Rafael Mendonca <rafaelmendsr@gmail.com>
Date:   Mon Oct 17 21:53:57 2022 -0300

    drm/amdgpu/powerplay/psm: Fix memory leak in power state init
    
    [ Upstream commit 8f8033d5663b18e6efb33feb61f2287a04605ab5 ]
    
    Commit 902bc65de0b3 ("drm/amdgpu/powerplay/psm: return an error in power
    state init") made the power state init function return early in case of
    failure to get an entry from the powerplay table, but it missed to clean up
    the allocated memory for the current power state before returning.
    
    Fixes: 902bc65de0b3 ("drm/amdgpu/powerplay/psm: return an error in power state init")
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Rafael Mendonca <rafaelmendsr@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f66a8770832e168c0da7d2a6b267404ab529088b
Author: Andrew Jeffery <andrew@aj.id.au>
Date:   Sat Aug 13 00:17:41 2022 +0930

    ipmi: kcs: Poll OBF briefly to reduce OBE latency
    
    [ Upstream commit f90bc0f97f2b65af233a37b2e32fc81871a1e3cf ]
    
    The ASPEED KCS devices don't provide a BMC-side interrupt for the host
    reading the output data register (ODR). The act of the host reading ODR
    clears the output buffer full (OBF) flag in the status register (STR),
    informing the BMC it can transmit a subsequent byte.
    
    On the BMC side the KCS client must enable the OBE event *and* perform a
    subsequent read of STR anyway to avoid races - the polling provides a
    window for the host to read ODR if data was freshly written while
    minimising BMC-side latency.
    
    Fixes: 28651e6c4237 ("ipmi: kcs_bmc: Allow clients to control KCS IRQ state")
    Signed-off-by: Andrew Jeffery <andrew@aj.id.au>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Message-Id: <20220812144741.240315-1-andrew@aj.id.au>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 983320199e339b2d19c47bf5f490cc863474d39e
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Mon Sep 26 20:53:06 2022 +0000

    ata: libata: fix NCQ autosense logic
    
    [ Upstream commit 7390896b3484d44cbdb8bc4859964314ac66d3c9 ]
    
    Currently, the logic if we should call ata_scsi_set_sense()
    (and set flag ATA_QCFLAG_SENSE_VALID to indicate that we have
    successfully added sense data to the struct ata_queued_cmd)
    looks like this:
    
    if (dev->class == ATA_DEV_ZAC &&
        ((qc->result_tf.status & ATA_SENSE) || qc->result_tf.auxiliary))
    
    The problem with this is that a drive can support the NCQ command
    error log without supporting NCQ autosense.
    
    On such a drive, if the failing command has sense data, the status
    field in the NCQ command error log will have the ATA_SENSE bit set.
    
    It is just that this sense data is not included in the NCQ command
    error log when NCQ autosense is not supported. Instead the sense
    data has to be fetched using the REQUEST SENSE DATA EXT command.
    
    Therefore, we should only add the sense data if the drive supports
    NCQ autosense AND the ATA_SENSE bit is set in the status field.
    
    Fix this, and at the same time, remove the duplicated ATA_DEV_ZAC
    check. The struct ata_taskfile supplied to ata_eh_read_log_10h()
    is memset:ed before calling the function, so simply checking if
    qc->result_tf.auxiliary is set is sufficient to tell us that the
    log actually contained sense data.
    
    Fixes: d238ffd59d3c ("libata: do not attempt to retrieve sense code twice")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9caf71aeb4835ff5da34ecfbaa36c4c6f852e23
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Tue Feb 15 21:49:26 2022 +0300

    ata: add/use ata_taskfile::{error|status} fields
    
    [ Upstream commit efcef265fd83d9a68a68926abecb3e1dd3e260a8 ]
    
    Add the explicit error and status register fields to 'struct ata_taskfile'
    using the anonymous *union*s ('struct ide_taskfile' had that for ages!) and
    update the libata taskfile code accordingly. There should be no object code
    changes resulting from that...
    
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Stable-dep-of: 7390896b3484 ("ata: libata: fix NCQ autosense logic")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3483c3fb4877977d16e547860aa3a1a02a249f81
Author: Hannes Reinecke <hare@suse.de>
Date:   Tue Dec 21 08:20:35 2021 +0100

    ata: libata: move ata_{port,link,dev}_dbg to standard pr_XXX() macros
    
    [ Upstream commit 742bef476ca5352b16063161fb73a56629a6d995 ]
    
    Use standard pr_{debug,info,notice,warn,err} macros instead of the
    hand-crafted printk helpers.
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Stable-dep-of: 7390896b3484 ("ata: libata: fix NCQ autosense logic")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67061355776e9f95bf28097cc8a32bde428a6d80
Author: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Date:   Wed Oct 12 10:23:53 2022 +0800

    libbpf: Fix null-pointer dereference in find_prog_by_sec_insn()
    
    [ Upstream commit d0d382f95a9270dcf803539d6781d6bd67e3f5b2 ]
    
    When there are no program sections, obj->programs is left unallocated,
    and find_prog_by_sec_insn()'s search lands on &obj->programs[0] == NULL,
    and will cause null-pointer dereference in the following access to
    prog->sec_idx.
    
    Guard the search with obj->nr_programs similar to what's being done in
    __bpf_program__iter() to prevent null-pointer access from happening.
    
    Fixes: db2b8b06423c ("libbpf: Support CO-RE relocations for multi-prog sections")
    Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20221012022353.7350-4-shung-hsi.yu@suse.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a733bf10198eb5bb927890940de8ab457491ed3b
Author: Xu Kuohai <xukuohai@huawei.com>
Date:   Tue Oct 11 08:01:03 2022 -0400

    libbpf: Fix use-after-free in btf_dump_name_dups
    
    [ Upstream commit 93c660ca40b5d2f7c1b1626e955a8e9fa30e0749 ]
    
    ASAN reports an use-after-free in btf_dump_name_dups:
    
    ERROR: AddressSanitizer: heap-use-after-free on address 0xffff927006db at pc 0xaaaab5dfb618 bp 0xffffdd89b890 sp 0xffffdd89b928
    READ of size 2 at 0xffff927006db thread T0
        #0 0xaaaab5dfb614 in __interceptor_strcmp.part.0 (test_progs+0x21b614)
        #1 0xaaaab635f144 in str_equal_fn tools/lib/bpf/btf_dump.c:127
        #2 0xaaaab635e3e0 in hashmap_find_entry tools/lib/bpf/hashmap.c:143
        #3 0xaaaab635e72c in hashmap__find tools/lib/bpf/hashmap.c:212
        #4 0xaaaab6362258 in btf_dump_name_dups tools/lib/bpf/btf_dump.c:1525
        #5 0xaaaab636240c in btf_dump_resolve_name tools/lib/bpf/btf_dump.c:1552
        #6 0xaaaab6362598 in btf_dump_type_name tools/lib/bpf/btf_dump.c:1567
        #7 0xaaaab6360b48 in btf_dump_emit_struct_def tools/lib/bpf/btf_dump.c:912
        #8 0xaaaab6360630 in btf_dump_emit_type tools/lib/bpf/btf_dump.c:798
        #9 0xaaaab635f720 in btf_dump__dump_type tools/lib/bpf/btf_dump.c:282
        #10 0xaaaab608523c in test_btf_dump_incremental tools/testing/selftests/bpf/prog_tests/btf_dump.c:236
        #11 0xaaaab6097530 in test_btf_dump tools/testing/selftests/bpf/prog_tests/btf_dump.c:875
        #12 0xaaaab6314ed0 in run_one_test tools/testing/selftests/bpf/test_progs.c:1062
        #13 0xaaaab631a0a8 in main tools/testing/selftests/bpf/test_progs.c:1697
        #14 0xffff9676d214 in __libc_start_main ../csu/libc-start.c:308
        #15 0xaaaab5d65990  (test_progs+0x185990)
    
    0xffff927006db is located 11 bytes inside of 16-byte region [0xffff927006d0,0xffff927006e0)
    freed by thread T0 here:
        #0 0xaaaab5e2c7c4 in realloc (test_progs+0x24c7c4)
        #1 0xaaaab634f4a0 in libbpf_reallocarray tools/lib/bpf/libbpf_internal.h:191
        #2 0xaaaab634f840 in libbpf_add_mem tools/lib/bpf/btf.c:163
        #3 0xaaaab636643c in strset_add_str_mem tools/lib/bpf/strset.c:106
        #4 0xaaaab6366560 in strset__add_str tools/lib/bpf/strset.c:157
        #5 0xaaaab6352d70 in btf__add_str tools/lib/bpf/btf.c:1519
        #6 0xaaaab6353e10 in btf__add_field tools/lib/bpf/btf.c:2032
        #7 0xaaaab6084fcc in test_btf_dump_incremental tools/testing/selftests/bpf/prog_tests/btf_dump.c:232
        #8 0xaaaab6097530 in test_btf_dump tools/testing/selftests/bpf/prog_tests/btf_dump.c:875
        #9 0xaaaab6314ed0 in run_one_test tools/testing/selftests/bpf/test_progs.c:1062
        #10 0xaaaab631a0a8 in main tools/testing/selftests/bpf/test_progs.c:1697
        #11 0xffff9676d214 in __libc_start_main ../csu/libc-start.c:308
        #12 0xaaaab5d65990  (test_progs+0x185990)
    
    previously allocated by thread T0 here:
        #0 0xaaaab5e2c7c4 in realloc (test_progs+0x24c7c4)
        #1 0xaaaab634f4a0 in libbpf_reallocarray tools/lib/bpf/libbpf_internal.h:191
        #2 0xaaaab634f840 in libbpf_add_mem tools/lib/bpf/btf.c:163
        #3 0xaaaab636643c in strset_add_str_mem tools/lib/bpf/strset.c:106
        #4 0xaaaab6366560 in strset__add_str tools/lib/bpf/strset.c:157
        #5 0xaaaab6352d70 in btf__add_str tools/lib/bpf/btf.c:1519
        #6 0xaaaab6353ff0 in btf_add_enum_common tools/lib/bpf/btf.c:2070
        #7 0xaaaab6354080 in btf__add_enum tools/lib/bpf/btf.c:2102
        #8 0xaaaab6082f50 in test_btf_dump_incremental tools/testing/selftests/bpf/prog_tests/btf_dump.c:162
        #9 0xaaaab6097530 in test_btf_dump tools/testing/selftests/bpf/prog_tests/btf_dump.c:875
        #10 0xaaaab6314ed0 in run_one_test tools/testing/selftests/bpf/test_progs.c:1062
        #11 0xaaaab631a0a8 in main tools/testing/selftests/bpf/test_progs.c:1697
        #12 0xffff9676d214 in __libc_start_main ../csu/libc-start.c:308
        #13 0xaaaab5d65990  (test_progs+0x185990)
    
    The reason is that the key stored in hash table name_map is a string
    address, and the string memory is allocated by realloc() function, when
    the memory is resized by realloc() later, the old memory may be freed,
    so the address stored in name_map references to a freed memory, causing
    use-after-free.
    
    Fix it by storing duplicated string address in name_map.
    
    Fixes: 919d2b1dbb07 ("libbpf: Allow modification of BTF and add btf__add_str API")
    Signed-off-by: Xu Kuohai <xukuohai@huawei.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Martin KaFai Lau <martin.lau@kernel.org>
    Link: https://lore.kernel.org/bpf/20221011120108.782373-2-xukuohai@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5ec2a04fed3021b9e81fca4165810c977f9eba4
Author: Abhinav Kumar <quic_abhinavk@quicinc.com>
Date:   Tue Oct 11 14:10:49 2022 -0700

    drm/bridge: adv7533: remove dynamic lane switching from adv7533 bridge
    
    [ Upstream commit 9a0cdcd6649b76f0b7ceec0e55b0a718321e34d3 ]
    
    adv7533 bridge tries to dynamically switch lanes based on the
    mode by detaching and attaching the mipi dsi device.
    
    This approach is incorrect because this method of dynamic switch of
    detaching and attaching the mipi dsi device also results in removing
    and adding the component which is not necessary.
    
    This approach is also prone to deadlocks. So for example, on the
    db410c whenever this path is executed with lockdep enabled,
    this results in a deadlock due to below ordering of locks.
    
    -> #1 (crtc_ww_class_acquire){+.+.}-{0:0}:
            lock_acquire+0x6c/0x90
            drm_modeset_acquire_init+0xf4/0x150
            drmm_mode_config_init+0x220/0x770
            msm_drm_bind+0x13c/0x654
            try_to_bring_up_aggregate_device+0x164/0x1d0
            __component_add+0xa8/0x174
            component_add+0x18/0x2c
            dsi_dev_attach+0x24/0x30
            dsi_host_attach+0x98/0x14c
            devm_mipi_dsi_attach+0x38/0xb0
            adv7533_attach_dsi+0x8c/0x110
            adv7511_probe+0x5a0/0x930
            i2c_device_probe+0x30c/0x350
            really_probe.part.0+0x9c/0x2b0
            __driver_probe_device+0x98/0x144
            driver_probe_device+0xac/0x14c
            __device_attach_driver+0xbc/0x124
            bus_for_each_drv+0x78/0xd0
            __device_attach+0xa8/0x1c0
            device_initial_probe+0x18/0x24
            bus_probe_device+0xa0/0xac
            deferred_probe_work_func+0x90/0xd0
            process_one_work+0x28c/0x6b0
            worker_thread+0x240/0x444
            kthread+0x110/0x114
            ret_from_fork+0x10/0x20
    
    -> #0 (component_mutex){+.+.}-{3:3}:
            __lock_acquire+0x1280/0x20ac
            lock_acquire.part.0+0xe0/0x230
            lock_acquire+0x6c/0x90
            __mutex_lock+0x84/0x400
            mutex_lock_nested+0x3c/0x70
            component_del+0x34/0x170
            dsi_dev_detach+0x24/0x30
            dsi_host_detach+0x20/0x64
            mipi_dsi_detach+0x2c/0x40
            adv7533_mode_set+0x64/0x90
            adv7511_bridge_mode_set+0x210/0x214
            drm_bridge_chain_mode_set+0x5c/0x84
            crtc_set_mode+0x18c/0x1dc
            drm_atomic_helper_commit_modeset_disables+0x40/0x50
            msm_atomic_commit_tail+0x1d0/0x6e0
            commit_tail+0xa4/0x180
            drm_atomic_helper_commit+0x178/0x3b0
            drm_atomic_commit+0xa4/0xe0
            drm_client_modeset_commit_atomic+0x228/0x284
            drm_client_modeset_commit_locked+0x64/0x1d0
            drm_client_modeset_commit+0x34/0x60
            drm_fb_helper_lastclose+0x74/0xcc
            drm_lastclose+0x3c/0x80
            drm_release+0xfc/0x114
            __fput+0x70/0x224
            ____fput+0x14/0x20
            task_work_run+0x88/0x1a0
            do_exit+0x350/0xa50
            do_group_exit+0x38/0xa4
            __wake_up_parent+0x0/0x34
            invoke_syscall+0x48/0x114
            el0_svc_common.constprop.0+0x60/0x11c
            do_el0_svc+0x30/0xc0
            el0_svc+0x58/0x100
            el0t_64_sync_handler+0x1b0/0x1bc
            el0t_64_sync+0x18c/0x190
    
    Due to above reasons, remove the dynamic lane switching
    code from adv7533 bridge chip and filter out the modes
    which would need different number of lanes as compared
    to the initialization time using the mode_valid callback.
    
    This can be potentially re-introduced by using the pre_enable()
    callback but this needs to be evaluated first whether such an
    approach will work so this will be done with a separate change.
    
    changes since RFC:
            - Fix commit text and add TODO comment
    
    changes in v2:
            - Fix checkpatch formatting errors
    
    Fixes: 62b2f026cd8e ("drm/bridge: adv7533: Change number of DSI lanes dynamically")
    Closes: https://gitlab.freedesktop.org/drm/msm/-/issues/16
    Suggested-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Link: https://lore.kernel.org/r/1661797363-7564-1-git-send-email-quic_abhinavk@quicinc.com
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1665522649-3423-1-git-send-email-quic_abhinavk@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d40a49d05594de17294c7535959567d75c12daf
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Sat Oct 8 13:56:09 2022 +0300

    wifi: rtl8xxxu: Fix reading the vendor of combo chips
    
    [ Upstream commit 6f103aeb5e985ac08f3a4a049a2c17294f40cff9 ]
    
    The wifi + bluetooth combo chips (RTL8723AU and RTL8723BU) read the
    chip vendor from the wrong register because the val32 variable gets
    overwritten. Add one more variable to avoid this.
    
    This had no real effect on RTL8723BU. It may have had an effect on
    RTL8723AU.
    
    Fixes: 26f1fad29ad9 ("New driver: rtl8xxxu (mac80211)")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/24af8024-2f07-552b-93d8-38823d8e3cb0@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 355f16f756aad0c95cdaa0c14a34ab4137d32815
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Sat Oct 8 14:49:17 2022 +0300

    wifi: ath9k: hif_usb: Fix use-after-free in ath9k_hif_usb_reg_in_cb()
    
    [ Upstream commit dd95f2239fc846795fc926787c3ae0ca701c9840 ]
    
    It is possible that skb is freed in ath9k_htc_rx_msg(), then
    usb_submit_urb() fails and we try to free skb again. It causes
    use-after-free bug. Moreover, if alloc_skb() fails, urb->context becomes
    NULL but rx_buf is not freed and there can be a memory leak.
    
    The patch removes unnecessary nskb and makes skb processing more clear: it
    is supposed that ath9k_htc_rx_msg() either frees old skb or passes its
    managing to another callback function.
    
    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.
    
    Fixes: 3deff76095c4 ("ath9k_htc: Increase URB count for REG_IN pipe")
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20221008114917.21404-1-pchelkin@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d856f7574bcc1d81de565a857caf32f122cd7ce0
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Mon Jul 25 18:13:59 2022 +0300

    wifi: ath9k: hif_usb: fix memory leak of urbs in ath9k_hif_usb_dealloc_tx_urbs()
    
    [ Upstream commit c2a94de38c74e86f49124ac14f093d6a5c377a90 ]
    
    Syzkaller reports a long-known leak of urbs in
    ath9k_hif_usb_dealloc_tx_urbs().
    
    The cause of the leak is that usb_get_urb() is called but usb_free_urb()
    (or usb_put_urb()) is not called inside usb_kill_urb() as urb->dev or
    urb->ep fields have not been initialized and usb_kill_urb() returns
    immediately.
    
    The patch removes trying to kill urbs located in hif_dev->tx.tx_buf
    because hif_dev->tx.tx_buf is not supposed to contain urbs which are in
    pending state (the pending urbs are stored in hif_dev->tx.tx_pending).
    The tx.tx_lock is acquired so there should not be any changes in the list.
    
    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.
    
    Fixes: 03fb92a432ea ("ath9k: hif_usb: fix race condition between usb_get_urb() and usb_kill_anchored_urbs()")
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220725151359.283704-1-pchelkin@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12229a2523f0f3678b20b5fe45f9757e427107e8
Author: James Hurley <jahurley@nvidia.com>
Date:   Fri Dec 9 09:35:19 2022 -0500

    platform/mellanox: mlxbf-pmc: Fix event typo
    
    [ Upstream commit b0b698b80c56b0712f0d4346d51bf0363ba03068 ]
    
    Had a duplicate event typo, so just fixed the 1 character typo.
    
    Fixes: 1a218d312e65 ("platform/mellanox: mlxbf-pmc: Add Mellanox BlueField PMC driver")
    Signed-off-by: James Hurley <jahurley@nvidia.com>
    Reviewed-by: David Thompson <davthompson@nvidia.com>
    Reviewed-by: Shravan Kumar Ramani <shravankr@nvidia.com>
    Link: https://lore.kernel.org/r/aadacdbbd3186c55e74ea9456fe011b77938eb6c.1670535330.git.jahurley@nvidia.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0d93aac54ce07a7cc71e90645d0cdabbda50450
Author: Cai Xinchen <caixinchen1@huawei.com>
Date:   Sat Dec 3 08:57:21 2022 +0000

    rapidio: devices: fix missing put_device in mport_cdev_open
    
    [ Upstream commit d5b6e6eba3af11cb2a2791fa36a2524990fcde1a ]
    
    When kfifo_alloc fails, the refcount of chdev->dev is left incremental.
    We should use put_device(&chdev->dev) to decrease the ref count of
    chdev->dev to avoid refcount leak.
    
    Link: https://lkml.kernel.org/r/20221203085721.13146-1-caixinchen1@huawei.com
    Fixes: e8de370188d0 ("rapidio: add mport char device driver")
    Signed-off-by: Cai Xinchen <caixinchen1@huawei.com>
    Cc: Alexandre Bounine <alex.bou9@gmail.com>
    Cc: Dan Carpenter <error27@gmail.com>
    Cc: Jakob Koschel <jakobkoschel@gmail.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Wang Weiyang <wangweiyang2@huawei.com>
    Cc: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7af9cb8cbb81308ce4b06cc7164267faccbf75dd
Author: ZhangPeng <zhangpeng362@huawei.com>
Date:   Fri Dec 2 03:00:38 2022 +0000

    hfs: Fix OOB Write in hfs_asc2mac
    
    [ Upstream commit c53ed55cb275344086e32a7080a6b19cb183650b ]
    
    Syzbot reported a OOB Write bug:
    
    loop0: detected capacity change from 0 to 64
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in hfs_asc2mac+0x467/0x9a0
    fs/hfs/trans.c:133
    Write of size 1 at addr ffff88801848314e by task syz-executor391/3632
    
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0x1b1/0x28e lib/dump_stack.c:106
     print_address_description+0x74/0x340 mm/kasan/report.c:284
     print_report+0x107/0x1f0 mm/kasan/report.c:395
     kasan_report+0xcd/0x100 mm/kasan/report.c:495
     hfs_asc2mac+0x467/0x9a0 fs/hfs/trans.c:133
     hfs_cat_build_key+0x92/0x170 fs/hfs/catalog.c:28
     hfs_lookup+0x1ab/0x2c0 fs/hfs/dir.c:31
     lookup_open fs/namei.c:3391 [inline]
     open_last_lookups fs/namei.c:3481 [inline]
     path_openat+0x10e6/0x2df0 fs/namei.c:3710
     do_filp_open+0x264/0x4f0 fs/namei.c:3740
    
    If in->len is much larger than HFS_NAMELEN(31) which is the maximum
    length of an HFS filename, a OOB write could occur in hfs_asc2mac(). In
    that case, when the dst reaches the boundary, the srclen is still
    greater than 0, which causes a OOB write.
    Fix this by adding a check on dstlen in while() before writing to dst
    address.
    
    Link: https://lkml.kernel.org/r/20221202030038.1391945-1-zhangpeng362@huawei.com
    Fixes: 328b92278650 ("[PATCH] hfs: NLS support")
    Signed-off-by: ZhangPeng <zhangpeng362@huawei.com>
    Reviewed-by: Viacheslav Dubeyko <slava@dubeyko.com>
    Reported-by: <syzbot+dc3b1cf9111ab5fe98e7@syzkaller.appspotmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90962b3b1c3b5b22f5a1e547af0a2638c67c7255
Author: Gavrilov Ilia <Ilia.Gavrilov@infotecs.ru>
Date:   Tue Nov 29 09:23:38 2022 +0000

    relay: fix type mismatch when allocating memory in relay_create_buf()
    
    [ Upstream commit 4d8586e04602fe42f0a782d2005956f8b6302678 ]
    
    The 'padding' field of the 'rchan_buf' structure is an array of 'size_t'
    elements, but the memory is allocated for an array of 'size_t *' elements.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Link: https://lkml.kernel.org/r/20221129092002.3538384-1-Ilia.Gavrilov@infotecs.ru
    Fixes: b86ff981a825 ("[PATCH] relay: migrate from relayfs to a generic relay API")
    Signed-off-by: Ilia.Gavrilov <Ilia.Gavrilov@infotecs.ru>
    Cc: Colin Ian King <colin.i.king@gmail.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: wuchi <wuchi.zero@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d60b11f8fce506b6a03497ae25321001f11b07b
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Thu Nov 24 22:01:54 2022 +0800

    eventfd: change int to __u64 in eventfd_signal() ifndef CONFIG_EVENTFD
    
    [ Upstream commit fd4e60bf0ef8eb9edcfa12dda39e8b6ee9060492 ]
    
    Commit ee62c6b2dc93 ("eventfd: change int to __u64 in eventfd_signal()")
    forgot to change int to __u64 in the CONFIG_EVENTFD=n stub function.
    
    Link: https://lkml.kernel.org/r/20221124140154.104680-1-zhangqilong3@huawei.com
    Fixes: ee62c6b2dc93 ("eventfd: change int to __u64 in eventfd_signal()")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Cc: Dylan Yudaken <dylany@fb.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Sha Zhengju <handai.szj@taobao.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f5cc7fd73fd6253cc71214f0dd499cc62feb469
Author: Wang Weiyang <wangweiyang2@huawei.com>
Date:   Wed Nov 23 17:51:47 2022 +0800

    rapidio: fix possible UAF when kfifo_alloc() fails
    
    [ Upstream commit 02d7d89f816951e0862147d751b1150d67aaebdd ]
    
    If kfifo_alloc() fails in mport_cdev_open(), goto err_fifo and just free
    priv. But priv is still in the chdev->file_list, then list traversal
    may cause UAF. This fixes the following smatch warning:
    
    drivers/rapidio/devices/rio_mport_cdev.c:1930 mport_cdev_open() warn: '&priv->list' not removed from list
    
    Link: https://lkml.kernel.org/r/20221123095147.52408-1-wangweiyang2@huawei.com
    Fixes: e8de370188d0 ("rapidio: add mport char device driver")
    Signed-off-by: Wang Weiyang <wangweiyang2@huawei.com>
    Cc: Alexandre Bounine <alex.bou9@gmail.com>
    Cc: Dan Carpenter <error27@gmail.com>
    Cc: Jakob Koschel <jakobkoschel@gmail.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 337b68da6856afdff06f562663dd5e64ecb5ff68
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Fri Dec 9 18:04:48 2022 +0800

    fs: sysv: Fix sysv_nblocks() returns wrong value
    
    [ Upstream commit e0c49bd2b4d3cd1751491eb2d940bce968ac65e9 ]
    
    sysv_nblocks() returns 'blocks' rather than 'res', which only counting
    the number of triple-indirect blocks and causing sysv_getattr() gets a
    wrong result.
    
    [AV: this is actually a sysv counterpart of minixfs fix -
    0fcd426de9d0 "[PATCH] minix block usage counting fix" in
    historical tree; mea culpa, should've thought to check
    fs/sysv back then...]
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95d42a8d3d4ae84a0bd3ee23e1fee240cdf0a9f0
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sun Nov 6 14:02:39 2022 -0500

    lockd: set other missing fields when unlocking files
    
    [ Upstream commit 18ebd35b61b4693a0ddc270b6d4f18def232e770 ]
    
    vfs_lock_file() expects the struct file_lock to be fully initialised by
    the caller. Re-exported NFSv3 has been seen to Oops if the fl_file field
    is NULL.
    
    Fixes: aec158242b87 ("lockd: set fl_owner when unlocking files")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216582
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 318229b4d35be51087521d7c37a8d54bb23a7bf4
Author: Ladislav Michl <ladis@linux-mips.org>
Date:   Thu Dec 8 12:25:57 2022 +0100

    MIPS: OCTEON: warn only once if deprecated link status is being used
    
    [ Upstream commit 4c587a982603d7e7e751b4925809a1512099a690 ]
    
    Avoid flooding kernel log with warnings.
    
    Fixes: 2c0756d306c2 ("MIPS: OCTEON: warn if deprecated link status is being used")
    Signed-off-by: Ladislav Michl <ladis@linux-mips.org>
    Reviewed-by: Philippe Mathieu-Daudé <philmd@linaro.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e6d37a93a3820e596df8f975bc8c6b394474bd4
Author: Anastasia Belova <abelova@astralinux.ru>
Date:   Fri Dec 9 13:05:50 2022 +0300

    MIPS: BCM63xx: Add check for NULL for clk in clk_enable
    
    [ Upstream commit ee9ef11bd2a59c2fefaa0959e5efcdf040d7c654 ]
    
    Check clk for NULL before calling clk_enable_unlocked where clk
    is dereferenced. There is such check in other implementations
    of clk_enable.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: e7300d04bd08 ("MIPS: BCM63xx: Add support for the Broadcom BCM63xx family of SOCs.")
    Signed-off-by: Anastasia Belova <abelova@astralinux.ru>
    Reviewed-by: Philippe Mathieu-Daudé <philmd@linaro.org>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50af0ba3e163f71348c6a2e7f3a3e244efa76c53
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 23:19:16 2022 +0800

    platform/x86: intel_scu_ipc: fix possible name leak in __intel_scu_ipc_register()
    
    [ Upstream commit 0b3d0cb7c0bed2fd6454f77ed75e7a662c6efd12 ]
    
    In some error paths before device_register(), the names allocated
    by dev_set_name() are not freed. Move dev_set_name() front to
    device_register(), so the name can be freed while calling
    put_device().
    
    Fixes: 54b34aa0a729 ("platform/x86: intel_scu_ipc: Split out SCU IPC functionality from the SCU driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221208151916.2404977-1-yangyingliang@huawei.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3cf81501356c9e898ad94b2369ffc805f83f7d7b
Author: Yu Liao <liaoyu15@huawei.com>
Date:   Tue Nov 29 09:11:01 2022 +0800

    platform/x86: mxm-wmi: fix memleak in mxm_wmi_call_mx[ds|mx]()
    
    [ Upstream commit 727cc0147f5066e359aca65cc6cc5e6d64cc15d8 ]
    
    The ACPI buffer memory (out.pointer) returned by wmi_evaluate_method()
    is not freed after the call, so it leads to memory leak.
    
    The method results in ACPI buffer is not used, so just pass NULL to
    wmi_evaluate_method() which fixes the memory leak.
    
    Fixes: 99b38b4acc0d ("platform/x86: add MXM WMI driver.")
    Signed-off-by: Yu Liao <liaoyu15@huawei.com>
    Link: https://lore.kernel.org/r/20221129011101.2042315-1-liaoyu15@huawei.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ceadb5a3e45f1b81cf54bd496b40a5e50b6bd40
Author: Victor Ding <victording@chromium.org>
Date:   Wed Dec 7 09:39:40 2022 +0000

    platform/chrome: cros_ec_typec: zero out stale pointers
    
    [ Upstream commit 9a8aadcf0b459c1257b9477fd6402e1d5952ae07 ]
    
    `cros_typec_get_switch_handles` allocates four pointers when obtaining
    type-c switch handles. These pointers are all freed if failing to obtain
    any of them; therefore, pointers in `port` become stale. The stale
    pointers eventually cause use-after-free or double free in later code
    paths. Zeroing out all pointer fields after freeing to eliminate these
    stale pointers.
    
    Fixes: f28adb41dab4 ("platform/chrome: cros_ec_typec: Register Type C switches")
    Fixes: 1a8912caba02 ("platform/chrome: cros_ec_typec: Get retimer handle")
    Signed-off-by: Victor Ding <victording@chromium.org>
    Acked-by: Prashant Malani <pmalani@chromium.org>
    Signed-off-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Link: https://lore.kernel.org/r/20221207093924.v2.1.I1864b6a7ee98824118b93677868d22d3750f439b@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49c98b5688815c07dc547930d47324a292acd266
Author: Prashant Malani <pmalani@chromium.org>
Date:   Tue Aug 16 21:48:34 2022 +0000

    platform/chrome: cros_ec_typec: Cleanup switch handle return paths
    
    [ Upstream commit 66fe238a9bcc158f75ddecf976d1ce7efe20f713 ]
    
    Some of the return paths for the cros_typec_get_switch_handles()
    aren't necessary. Clean up the return paths to only undo the handle
    get's which succeeded.
    
    Signed-off-by: Prashant Malani <pmalani@chromium.org>
    Link: https://lore.kernel.org/r/20220711072333.2064341-9-pmalani@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: 9a8aadcf0b45 ("platform/chrome: cros_ec_typec: zero out stale pointers")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b55ef8508ac482703dc90d111664748dda2608c7
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 2 15:30:28 2022 +0100

    PM: runtime: Do not call __rpm_callback() from rpm_idle()
    
    [ Upstream commit bc80c2e438dcbfcf748452ec0f7ad5b79ff3ad88 ]
    
    Calling __rpm_callback() from rpm_idle() after adding device links
    support to the former is a clear mistake.
    
    Not only it causes rpm_idle() to carry out unnecessary actions, but it
    is also against the assumption regarding the stability of PM-runtime
    status across __rpm_callback() invocations, because rpm_suspend() and
    rpm_resume() may run in parallel with __rpm_callback() when it is called
    by rpm_idle() and the device's PM-runtime status can be updated by any
    of them.
    
    Fixes: 21d5c57b3726 ("PM / runtime: Use device links")
    Link: https://lore.kernel.org/linux-pm/36aed941-a73e-d937-2721-4f0decd61ce0@quicinc.com
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bf874183b32eae2cc20e3c5be38ec3d33e7e564
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Fri Nov 25 21:07:45 2022 -0800

    xen/privcmd: Fix a possible warning in privcmd_ioctl_mmap_resource()
    
    [ Upstream commit 8b997b2bb2c53b76a6db6c195930e9ab8e4b0c79 ]
    
    As 'kdata.num' is user-controlled data, if user tries to allocate
    memory larger than(>=) MAX_ORDER, then kcalloc() will fail, it
    creates a stack trace and messes up dmesg with a warning.
    
    Call trace:
    -> privcmd_ioctl
    --> privcmd_ioctl_mmap_resource
    
    Add __GFP_NOWARN in order to avoid too large allocation warning.
    This is detected by static analysis using smatch.
    
    Fixes: 3ad0876554ca ("xen/privcmd: add IOCTL_PRIVCMD_MMAP_RESOURCE")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20221126050745.778967-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70966d6b0f59f795b08a70adf5e4478348ecbfbb
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Wed Nov 23 23:58:58 2022 +0800

    x86/xen: Fix memory leak in xen_init_lock_cpu()
    
    [ Upstream commit ca84ce153d887b1dc8b118029976cc9faf2a9b40 ]
    
    In xen_init_lock_cpu(), the @name has allocated new string by kasprintf(),
    if bind_ipi_to_irqhandler() fails, it should be freed, otherwise may lead
    to a memory leak issue, fix it.
    
    Fixes: 2d9e1e2f58b5 ("xen: implement Xen-specific spinlocks")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20221123155858.11382-3-xiujianfeng@huawei.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23aef94eea714b721546c0c49a324a8da8d00fb5
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Wed Nov 23 23:58:57 2022 +0800

    x86/xen: Fix memory leak in xen_smp_intr_init{_pv}()
    
    [ Upstream commit 69143f60868b3939ddc89289b29db593b647295e ]
    
    These local variables @{resched|pmu|callfunc...}_name saves the new
    string allocated by kasprintf(), and when bind_{v}ipi_to_irqhandler()
    fails, it goes to the @fail tag, and calls xen_smp_intr_free{_pv}() to
    free resource, however the new string is not saved, which cause a memory
    leak issue. fix it.
    
    Fixes: 9702785a747a ("i386: move xen")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20221123155858.11382-2-xiujianfeng@huawei.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03ab1c5c2f0bbb9694f1835c585ba0200eb3d7ab
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Sun Dec 4 18:39:33 2022 +0100

    uprobes/x86: Allow to probe a NOP instruction with 0x66 prefix
    
    [ Upstream commit cefa72129e45313655d53a065b8055aaeb01a0c9 ]
    
    Intel ICC -hotpatch inserts 2-byte "0x66 0x90" NOP at the start of each
    function to reserve extra space for hot-patching, and currently it is not
    possible to probe these functions because branch_setup_xol_ops() wrongly
    rejects NOP with REP prefix as it treats them like word-sized branch
    instructions.
    
    Fixes: 250bbd12c2fe ("uprobes/x86: Refuse to attach uprobe to "word-sized" branch insns")
    Reported-by: Seiji Nishikawa <snishika@redhat.com>
    Suggested-by: Denys Vlasenko <dvlasenk@redhat.com>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Link: https://lore.kernel.org/r/20221204173933.GA31544@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fde666278f91b85d71545a0ebbf41d8d7af8074
Author: Li Zetao <lizetao1@huawei.com>
Date:   Thu Dec 1 16:05:14 2022 +0800

    ACPICA: Fix use-after-free in acpi_ut_copy_ipackage_to_ipackage()
    
    [ Upstream commit 470188b09e92d83c5a997f25f0e8fb8cd2bc3469 ]
    
    There is an use-after-free reported by KASAN:
    
      BUG: KASAN: use-after-free in acpi_ut_remove_reference+0x3b/0x82
      Read of size 1 at addr ffff888112afc460 by task modprobe/2111
      CPU: 0 PID: 2111 Comm: modprobe Not tainted 6.1.0-rc7-dirty
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
      Call Trace:
       <TASK>
       kasan_report+0xae/0xe0
       acpi_ut_remove_reference+0x3b/0x82
       acpi_ut_copy_iobject_to_iobject+0x3be/0x3d5
       acpi_ds_store_object_to_local+0x15d/0x3a0
       acpi_ex_store+0x78d/0x7fd
       acpi_ex_opcode_1A_1T_1R+0xbe4/0xf9b
       acpi_ps_parse_aml+0x217/0x8d5
       ...
       </TASK>
    
    The root cause of the problem is that the acpi_operand_object
    is freed when acpi_ut_walk_package_tree() fails in
    acpi_ut_copy_ipackage_to_ipackage(), lead to repeated release in
    acpi_ut_copy_iobject_to_iobject(). The problem was introduced
    by "8aa5e56eeb61" commit, this commit is to fix memory leak in
    acpi_ut_copy_iobject_to_iobject(), repeatedly adding remove
    operation, lead to "acpi_operand_object" used after free.
    
    Fix it by removing acpi_ut_remove_reference() in
    acpi_ut_copy_ipackage_to_ipackage(). acpi_ut_copy_ipackage_to_ipackage()
    is called to copy an internal package object into another internal
    package object, when it fails, the memory of acpi_operand_object
    should be freed by the caller.
    
    Fixes: 8aa5e56eeb61 ("ACPICA: Utilities: Fix memory leak in acpi_ut_copy_iobject_to_iobject")
    Signed-off-by: Li Zetao <lizetao1@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cabd5f4f1ba7821b73979681cac87781df62e8c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Oct 29 19:44:27 2022 +0800

    clocksource/drivers/timer-ti-dm: Fix missing clk_disable_unprepare in dmtimer_systimer_init_clock()
    
    [ Upstream commit 180d35a7c05d520314a590c99ad8643d0213f28b ]
    
    If clk_get_rate() fails which is called after clk_prepare_enable(),
    clk_disable_unprepare() need be called in error path to disable the
    clock in dmtimer_systimer_init_clock().
    
    Fixes: 52762fbd1c47 ("clocksource/drivers/timer-ti-dm: Add clockevent and clocksource support")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20221029114427.946520-1-yangyingliang@huawei.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b73c76c3c4455cf327fb54789925a24e811339c0
Author: Vincent Donnefort <vdonnefort@google.com>
Date:   Tue Sep 27 11:12:59 2022 +0100

    cpu/hotplug: Do not bail-out in DYING/STARTING sections
    
    [ Upstream commit 6f855b39e4602b6b42a8e5cbcfefb8a1b8b5f0be ]
    
    The DYING/STARTING callbacks are not expected to fail. However, as reported
    by Derek, buggy drivers such as tboot are still free to return errors
    within those sections, which halts the hot(un)plug and leaves the CPU in an
    unrecoverable state.
    
    As there is no rollback possible, only log the failures and proceed with
    the following steps.
    
    This restores the hotplug behaviour prior to commit 453e41085183
    ("cpu/hotplug: Add cpuhp_invoke_callback_range()")
    
    Fixes: 453e41085183 ("cpu/hotplug: Add cpuhp_invoke_callback_range()")
    Reported-by: Derek Dolney <z23@posteo.net>
    Signed-off-by: Vincent Donnefort <vdonnefort@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Derek Dolney <z23@posteo.net>
    Reviewed-by: Valentin Schneider <vschneid@redhat.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215867
    Link: https://lore.kernel.org/r/20220927101259.1149636-1-vdonnefort@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6eb1802184df5eb3bfb5bfb4d31e9b70ef0e229d
Author: Phil Auld <pauld@redhat.com>
Date:   Thu Nov 17 11:23:28 2022 -0500

    cpu/hotplug: Make target_store() a nop when target == state
    
    [ Upstream commit 64ea6e44f85b9b75925ebe1ba0e6e8430cc4e06f ]
    
    Writing the current state back in hotplug/target calls cpu_down()
    which will set cpu dying even when it isn't and then nothing will
    ever clear it. A stress test that reads values and writes them back
    for all cpu device files in sysfs will trigger the BUG() in
    select_fallback_rq once all cpus are marked as dying.
    
    kernel/cpu.c::target_store()
            ...
            if (st->state < target)
                    ret = cpu_up(dev->id, target);
            else
                    ret = cpu_down(dev->id, target);
    
    cpu_down() -> cpu_set_state()
             bool bringup = st->state < target;
             ...
             if (cpu_dying(cpu) != !bringup)
                    set_cpu_dying(cpu, !bringup);
    
    Fix this by letting state==target fall through in the target_store()
    conditional. Also make sure st->target == target in that case.
    
    Fixes: 757c989b9994 ("cpu/hotplug: Make target state writeable")
    Signed-off-by: Phil Auld <pauld@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Valentin Schneider <vschneid@redhat.com>
    Link: https://lore.kernel.org/r/20221117162329.3164999-2-pauld@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd130e2676dd45dcca16d7dbb78fe7cf52e6db26
Author: Alexey Izbyshev <izbyshev@ispras.ru>
Date:   Sat Nov 12 00:54:39 2022 +0300

    futex: Resend potentially swallowed owner death notification
    
    [ Upstream commit 90d758896787048fa3d4209309d4800f3920e66f ]
    
    Commit ca16d5bee598 ("futex: Prevent robust futex exit race") addressed
    two cases when tasks waiting on a robust non-PI futex remained blocked
    despite the futex not being owned anymore:
    
    * if the owner died after writing zero to the futex word, but before
      waking up a waiter
    
    * if a task waiting on the futex was woken up, but died before updating
      the futex word (effectively swallowing the notification without acting
      on it)
    
    In the second case, the task could be woken up either by the previous
    owner (after the futex word was reset to zero) or by the kernel (after
    the OWNER_DIED bit was set and the TID part of the futex word was reset
    to zero) if the previous owner died without the resetting the futex.
    
    Because the referenced commit wakes up a potential waiter only if the
    whole futex word is zero, the latter subcase remains unaddressed.
    
    Fix this by looking only at the TID part of the futex when deciding
    whether a wake up is needed.
    
    Fixes: ca16d5bee598 ("futex: Prevent robust futex exit race")
    Signed-off-by: Alexey Izbyshev <izbyshev@ispras.ru>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20221111215439.248185-1-izbyshev@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd8a10d44c11f8f53d640db6b97486045b7e0b81
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Sep 23 14:10:50 2021 -0300

    futex: Move to kernel/futex/
    
    [ Upstream commit 77e52ae35463521041906c510fe580d15663bb93 ]
    
    In preparation for splitup..
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: André Almeida <andrealmeid@collabora.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: André Almeida <andrealmeid@collabora.com>
    Link: https://lore.kernel.org/r/20210923171111.300673-2-andrealmeid@collabora.com
    Stable-dep-of: 90d758896787 ("futex: Resend potentially swallowed owner death notification")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 156144bd18c3d859b3e06df71dc6e2d5a2a22a6e
Author: John Thomson <git@johnthomson.fastmail.com.au>
Date:   Mon Nov 14 11:56:58 2022 +1000

    mips: ralink: mt7621: do not use kzalloc too early
    
    [ Upstream commit 7c18b64bba3bcad1be94b404f47b94a04b91ce79 ]
    
    With CONFIG_SLUB=y, following commit 6edf2576a6cc ("mm/slub: enable
    debugging memory wasting of kmalloc") mt7621 failed to boot very early,
    without showing any console messages.
    This exposed the pre-existing bug of mt7621.c using kzalloc before normal
    memory management was available.
    Prior to this slub change, there existed the unintended protection against
    "kmem_cache *s" being NULL as slab_pre_alloc_hook() happened to
    return NULL and bailed out of slab_alloc_node().
    This allowed mt7621 prom_soc_init to fail in the soc_dev_init kzalloc,
    but continue booting without the SOC_BUS driver device registered.
    
    Console output from a DEBUG_ZBOOT vmlinuz kernel loading,
    with mm/slub modified to warn on kmem_cache zero or null:
    
    zimage at:     80B842A0 810B4BC0
    Uncompressing Linux at load address 80001000
    Copy device tree to address  80B80EE0
    Now, booting the kernel...
    
    [    0.000000] Linux version 6.1.0-rc3+ (john@john)
    (mipsel-buildroot-linux-gnu-gcc.br_real (Buildroot
    2021.11-4428-g6b6741b) 12.2.0, GNU ld (GNU Binutils) 2.39) #73 SMP Wed
         Nov  2 05:10:01 AEST 2022
    [    0.000000] ------------[ cut here ]------------
    [    0.000000] WARNING: CPU: 0 PID: 0 at mm/slub.c:3416
    kmem_cache_alloc+0x5a4/0x5e8
    [    0.000000] Modules linked in:
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 6.1.0-rc3+ #73
    [    0.000000] Stack : 810fff78 80084d98 00000000 00000004 00000000
    00000000 80889d04 80c90000
    [    0.000000]         80920000 807bd328 8089d368 80923bd3 00000000
    00000001 80889cb0 00000000
    [    0.000000]         00000000 00000000 807bd328 8084bcb1 00000002
    00000002 00000001 6d6f4320
    [    0.000000]         00000000 80c97d3d 80c97d68 fffffffc 807bd328
    00000000 00000000 00000000
    [    0.000000]         00000000 a0000000 80910000 8110a0b4 00000000
    00000020 80010000 80010000
    [    0.000000]         ...
    [    0.000000] Call Trace:
    [    0.000000] [<80008260>] show_stack+0x28/0xf0
    [    0.000000] [<8070c958>] dump_stack_lvl+0x60/0x80
    [    0.000000] [<8002e184>] __warn+0xc4/0xf8
    [    0.000000] [<8002e210>] warn_slowpath_fmt+0x58/0xa4
    [    0.000000] [<801c0fac>] kmem_cache_alloc+0x5a4/0x5e8
    [    0.000000] [<8092856c>] prom_soc_init+0x1fc/0x2b4
    [    0.000000] [<80928060>] prom_init+0x44/0xf0
    [    0.000000] [<80929214>] setup_arch+0x4c/0x6a8
    [    0.000000] [<809257e0>] start_kernel+0x88/0x7c0
    [    0.000000]
    [    0.000000] ---[ end trace 0000000000000000 ]---
    [    0.000000] SoC Type: MediaTek MT7621 ver:1 eco:3
    [    0.000000] printk: bootconsole [early0] enabled
    
    Allowing soc_device_register to work exposed oops in the mt7621 phy pci,
    and pci controller drivers from soc_device_match_attr, due to missing
    sentinels in the quirks tables. These were fixed with:
    commit 819b885cd886 ("phy: ralink: mt7621-pci: add sentinel to quirks
    table")
    not yet applied ("PCI: mt7621: add sentinel to quirks table")
    
    Link: https://lore.kernel.org/linux-mm/becf2ac3-2a90-4f3a-96d9-a70f67c66e4a@app.fastmail.com/
    Fixes: 71b9b5e0130d ("MIPS: ralink: mt7621: introduce 'soc_device' initialization")
    Signed-off-by: John Thomson <git@johnthomson.fastmail.com.au>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 186d59bb6a540dd8f4f19eda27f756e59341f50b
Author: John Thomson <git@johnthomson.fastmail.com.au>
Date:   Mon Nov 14 11:56:57 2022 +1000

    mips: ralink: mt7621: soc queries and tests as functions
    
    [ Upstream commit b4767d4c072583dec987225b6fe3f5524a735f42 ]
    
    Move the SoC register value queries and tests to specific functions,
    to remove repetition of logic
    No functional changes intended
    
    Signed-off-by: John Thomson <git@johnthomson.fastmail.com.au>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Stable-dep-of: 7c18b64bba3b ("mips: ralink: mt7621: do not use kzalloc too early")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8348da01e5c65b245050845d9863448d37ff40ed
Author: John Thomson <git@johnthomson.fastmail.com.au>
Date:   Mon Nov 14 11:56:56 2022 +1000

    mips: ralink: mt7621: define MT7621_SYSC_BASE with __iomem
    
    [ Upstream commit a2cab953b4c077cc02878d424466d3a6eac32aaf ]
    
    So that MT7621_SYSC_BASE can be used later in multiple functions without
    needing to repeat this __iomem declaration each time
    
    Signed-off-by: John Thomson <git@johnthomson.fastmail.com.au>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Stable-dep-of: 7c18b64bba3b ("mips: ralink: mt7621: do not use kzalloc too early")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f8e6fe09cfa0b55668ba8b74024ee2a4f977932
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Wed Nov 30 22:06:09 2022 +0100

    clocksource/drivers/sh_cmt: Access registers according to spec
    
    [ Upstream commit 3f44f7156f59cae06e9160eafb5d8b2dfd09e639 ]
    
    Documentation for most CMTs say that it takes two input clocks before
    changes propagate to the timer. This is especially relevant when the timer
    is stopped to change further settings.
    
    Implement the delays according to the spec. To avoid unnecessary delays in
    atomic mode, also check if the to-be-written value actually differs.
    
    CMCNT is a bit special because testing showed that it requires 3 cycles to
    propagate, which affects all CMTs. Also, the WRFLAG needs to be checked
    before writing. This fixes "cannot clear CMCNT" messages which occur often
    on R-Car Gen4 SoCs, but only very rarely on older SoCs for some reason.
    
    Fixes: 81b3b2711072 ("clocksource: sh_cmt: Add support for multiple channels per device")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20221130210609.7718-1-wsa+renesas@sang-engineering.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a47de2fd3f88a7788be19f94ade72c2244a98045
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 14 23:26:36 2022 +0800

    rapidio: rio: fix possible name leak in rio_register_mport()
    
    [ Upstream commit e92a216d16bde65d21a3227e0fb2aa0794576525 ]
    
    If device_register() returns error, the name allocated by dev_set_name()
    need be freed.  It should use put_device() to give up the reference in the
    error path, so that the name can be freed in kobject_cleanup(), and
    list_del() is called to delete the port from rio_mports.
    
    Link: https://lkml.kernel.org/r/20221114152636.2939035-3-yangyingliang@huawei.com
    Fixes: 2aaf308b95b2 ("rapidio: rework device hierarchy and introduce mport class of devices")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Cc: Alexandre Bounine <alex.bou9@gmail.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec3f04f74f50d0b6bac04d795c93c2b852753a7a
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 14 23:26:35 2022 +0800

    rapidio: fix possible name leaks when rio_add_device() fails
    
    [ Upstream commit f9574cd48679926e2a569e1957a5a1bcc8a719ac ]
    
    Patch series "rapidio: fix three possible memory leaks".
    
    This patchset fixes three name leaks in error handling.
     - patch #1 fixes two name leaks while rio_add_device() fails.
     - patch #2 fixes a name leak while  rio_register_mport() fails.
    
    This patch (of 2):
    
    If rio_add_device() returns error, the name allocated by dev_set_name()
    need be freed.  It should use put_device() to give up the reference in the
    error path, so that the name can be freed in kobject_cleanup(), and the
    'rdev' can be freed in rio_release_dev().
    
    Link: https://lkml.kernel.org/r/20221114152636.2939035-1-yangyingliang@huawei.com
    Link: https://lkml.kernel.org/r/20221114152636.2939035-2-yangyingliang@huawei.com
    Fixes: e8de370188d0 ("rapidio: add mport char device driver")
    Fixes: 1fa5ae857bb1 ("driver core: get rid of struct device's bus_id string array")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Cc: Alexandre Bounine <alex.bou9@gmail.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4662d8e6ab2033149bd463e3fafbecdd5071b0d9
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Tue Sep 20 02:24:18 2022 +0900

    debugfs: fix error when writing negative value to atomic_t debugfs file
    
    [ Upstream commit d472cf797c4e268613dbce5ec9b95d0bcae19ecb ]
    
    The simple attribute files do not accept a negative value since the commit
    488dac0c9237 ("libfs: fix error cast of negative value in
    simple_attr_write()"), so we have to use a 64-bit value to write a
    negative value for a debugfs file created by debugfs_create_atomic_t().
    
    This restores the previous behaviour by introducing
    DEFINE_DEBUGFS_ATTRIBUTE_SIGNED for a signed value.
    
    Link: https://lkml.kernel.org/r/20220919172418.45257-4-akinobu.mita@gmail.com
    Fixes: 488dac0c9237 ("libfs: fix error cast of negative value in simple_attr_write()")
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reported-by: Zhao Gongyi <zhaogongyi@huawei.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Rafael J. Wysocki <rafael@kernel.org>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Wei Yongjun <weiyongjun1@huawei.com>
    Cc: Yicong Yang <yangyicong@hisilicon.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e8e8cc13625241550f5e523bc1bb81511faecb3
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Tue Sep 20 02:24:17 2022 +0900

    lib/notifier-error-inject: fix error when writing -errno to debugfs file
    
    [ Upstream commit f883c3edd2c432a2931ec8773c70a570115a50fe ]
    
    The simple attribute files do not accept a negative value since the commit
    488dac0c9237 ("libfs: fix error cast of negative value in
    simple_attr_write()").
    
    This restores the previous behaviour by using newly introduced
    DEFINE_SIMPLE_ATTRIBUTE_SIGNED instead of DEFINE_SIMPLE_ATTRIBUTE.
    
    Link: https://lkml.kernel.org/r/20220919172418.45257-3-akinobu.mita@gmail.com
    Fixes: 488dac0c9237 ("libfs: fix error cast of negative value in simple_attr_write()")
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reported-by: Zhao Gongyi <zhaogongyi@huawei.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Rafael J. Wysocki <rafael@kernel.org>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Wei Yongjun <weiyongjun1@huawei.com>
    Cc: Yicong Yang <yangyicong@hisilicon.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39b5e6130b732686624ffd60e0ea1c47ca98e915
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Tue Sep 20 02:24:16 2022 +0900

    libfs: add DEFINE_SIMPLE_ATTRIBUTE_SIGNED for signed value
    
    [ Upstream commit 2e41f274f9aa71cdcc69dc1f26a3f9304a651804 ]
    
    Patch series "fix error when writing negative value to simple attribute
    files".
    
    The simple attribute files do not accept a negative value since the commit
    488dac0c9237 ("libfs: fix error cast of negative value in
    simple_attr_write()"), but some attribute files want to accept a negative
    value.
    
    This patch (of 3):
    
    The simple attribute files do not accept a negative value since the commit
    488dac0c9237 ("libfs: fix error cast of negative value in
    simple_attr_write()"), so we have to use a 64-bit value to write a
    negative value.
    
    This adds DEFINE_SIMPLE_ATTRIBUTE_SIGNED for a signed value.
    
    Link: https://lkml.kernel.org/r/20220919172418.45257-1-akinobu.mita@gmail.com
    Link: https://lkml.kernel.org/r/20220919172418.45257-2-akinobu.mita@gmail.com
    Fixes: 488dac0c9237 ("libfs: fix error cast of negative value in simple_attr_write()")
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Reported-by: Zhao Gongyi <zhaogongyi@huawei.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Rafael J. Wysocki <rafael@kernel.org>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Wei Yongjun <weiyongjun1@huawei.com>
    Cc: Yicong Yang <yangyicong@hisilicon.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19c202e6e55c24cc5d40b06d960aafab89f01c26
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Wed Nov 16 19:33:39 2022 +0800

    cpufreq: amd_freq_sensitivity: Add missing pci_dev_put()
    
    [ Upstream commit 91fda1f88c0968f1491ab150bb01690525af150a ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev. We need to use pci_dev_put() to decrease the reference count
    after using pci_get_device(). Let's add it.
    
    Fixes: 59a3b3a8db16 ("cpufreq: AMD: Ignore the check for ProcFeedback in ST/CZ")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93e3c803383a22c96c9a5589658809fed691aefc
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 28 23:16:12 2022 +0800

    genirq/irqdesc: Don't try to remove non-existing sysfs files
    
    [ Upstream commit 9049e1ca41983ab773d7ea244bee86d7835ec9f5 ]
    
    Fault injection tests trigger warnings like this:
    
      kernfs: can not remove 'chip_name', no directory
      WARNING: CPU: 0 PID: 253 at fs/kernfs/dir.c:1616 kernfs_remove_by_name_ns+0xce/0xe0
      RIP: 0010:kernfs_remove_by_name_ns+0xce/0xe0
      Call Trace:
       <TASK>
       remove_files.isra.1+0x3f/0xb0
       sysfs_remove_group+0x68/0xe0
       sysfs_remove_groups+0x41/0x70
       __kobject_del+0x45/0xc0
       kobject_del+0x29/0x40
       free_desc+0x42/0x70
       irq_free_descs+0x5e/0x90
    
    The reason is that the interrupt descriptor sysfs handling does not roll
    back on a failing kobject_add() during allocation. If the descriptor is
    freed later on, kobject_del() is invoked with a not added kobject resulting
    in the above warnings.
    
    A proper rollback in case of a kobject_add() failure would be the straight
    forward solution. But this is not possible due to the way how interrupt
    descriptor sysfs handling works.
    
    Interrupt descriptors are allocated before sysfs becomes available. So the
    sysfs files for the early allocated descriptors are added later in the boot
    process. At this point there can be nothing useful done about a failing
    kobject_add(). For consistency the interrupt descriptor allocation always
    treats kobject_add() failures as non-critical and just emits a warning.
    
    To solve this problem, keep track in the interrupt descriptor whether
    kobject_add() was successful or not and make the invocation of
    kobject_del() conditional on that.
    
    [ tglx: Massage changelog, comments and use a state bit. ]
    
    Fixes: ecb3f394c5db ("genirq: Expose interrupt information through sysfs")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20221128151612.1786122-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 435cc7d18c96f0b34298a6013addee2b6c53ccde
Author: Jeff Layton <jlayton@kernel.org>
Date:   Fri Oct 28 08:13:53 2022 -0400

    nfsd: don't call nfsd_file_put from client states seqfile display
    
    [ Upstream commit e0aa651068bfd520afcd357af8ecd2de005fc83d ]
    
    We had a report of this:
    
        BUG: sleeping function called from invalid context at fs/nfsd/filecache.c:440
    
    ...with a stack trace showing nfsd_file_put being called from
    nfs4_show_open. This code has always tried to call fput while holding a
    spinlock, but we recently changed this to use the filecache, and that
    started triggering the might_sleep() in nfsd_file_put.
    
    states_start takes and holds the cl_lock while iterating over the
    client's states, and we can't sleep with that held.
    
    Have the various nfs4_show_* functions instead hold the fi_lock instead
    of taking a nfsd_file reference.
    
    Fixes: 78599c42ae3c ("nfsd4: add file to display list of client's opens")
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2138357
    Reported-by: Zhi Li <yieli@redhat.com>
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5030d4d2bf8b6f6f3d16401ab92a88bc5aa2377a
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Sun Oct 16 11:47:02 2022 -0400

    NFSD: Finish converting the NFSv2 GETACL result encoder
    
    [ Upstream commit ea5021e911d3479346a75ac9b7d9dcd751b0fb99 ]
    
    The xdr_stream conversion inadvertently left some code that set the
    page_len of the send buffer. The XDR stream encoders should handle
    this automatically now.
    
    This oversight adds garbage past the end of the Reply message.
    Clients typically ignore the garbage, but NFSD does not need to send
    it, as it leaks stale memory contents onto the wire.
    
    Fixes: f8cba47344f7 ("NFSD: Update the NFSv2 GETACL result encoder to use struct xdr_stream")
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e498675e0684384a31ed3e7aa41d99f00349f064
Author: Haowen Bai <baihaowen@meizu.com>
Date:   Mon Mar 28 10:48:59 2022 +0800

    SUNRPC: Return true/false (not 1/0) from bool functions
    
    [ Upstream commit 5f7b839d47dbc74cf4a07beeab5191f93678673e ]
    
    Return boolean values ("true" or "false") instead of 1 or 0 from bool
    functions.  This fixes the following warnings from coccicheck:
    
    ./fs/nfsd/nfs2acl.c:289:9-10: WARNING: return of 0/1 in function
    'nfsaclsvc_encode_accessres' with return type bool
    ./fs/nfsd/nfs2acl.c:252:9-10: WARNING: return of 0/1 in function
    'nfsaclsvc_encode_getaclres' with return type bool
    
    Signed-off-by: Haowen Bai <baihaowen@meizu.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Stable-dep-of: ea5021e911d3 ("NFSD: Finish converting the NFSv2 GETACL result encoder")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e255dc21031cc1f341584eb99a7f31598bf0be7
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 28 14:55:12 2022 +0800

    EDAC/i10nm: fix refcount leak in pci_get_dev_wrapper()
    
    [ Upstream commit 9c8921555907f4d723f01ed2d859b66f2d14f08e ]
    
    As the comment of pci_get_domain_bus_and_slot() says, it returns
    a PCI device with refcount incremented, so it doesn't need to
    call an extra pci_dev_get() in pci_get_dev_wrapper(), and the PCI
    device needs to be put in the error path.
    
    Fixes: d4dc89d069aa ("EDAC, i10nm: Add a driver for Intel 10nm server processors")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Link: https://lore.kernel.org/r/20221128065512.3572550-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 740efb64ca5e8f2b30ac843bc4ab07950479fed4
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Nov 15 09:25:32 2022 +0000

    irqchip/wpcm450: Fix memory leak in wpcm450_aic_of_init()
    
    [ Upstream commit 4208d4faf36573a507b5e5de17abe342e9276759 ]
    
    If of_iomap() failed, 'aic' should be freed before return. Otherwise
    there is a memory leak.
    
    Fixes: fead4dd49663 ("irqchip: Add driver for WPCM450 interrupt controller")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20221115092532.1704032-1-weiyongjun@huaweicloud.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77b99b483f82fb122e1ba3abdffce701d5baf28b
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Thu Nov 24 14:51:50 2022 +0800

    irqchip: gic-pm: Use pm_runtime_resume_and_get() in gic_probe()
    
    [ Upstream commit f9ee20c85b3a3ba0afd3672630ec4f93d339f015 ]
    
    gic_probe() calls pm_runtime_get_sync() and added fail path as
    rpm_put to put usage_counter. However, pm_runtime_get_sync()
    will increment usage_counter even it failed. Fix it by replacing it with
    pm_runtime_resume_and_get() to keep usage counter balanced.
    
    Fixes: 9c8edddfc992 ("irqchip/gic: Add platform driver for non-root GICs that require RPM")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20221124065150.22809-1-shangxiaojing@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5139cbc0c6e4bf2fcffc9a7ed4350bf6985bc561
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 15 17:19:45 2022 +0800

    thermal: core: fix some possible name leaks in error paths
    
    [ Upstream commit 4748f9687caaeefab8578285b97b2f30789fc4b4 ]
    
    In some error paths before device_register(), the names allocated
    by dev_set_name() are not freed. Move dev_set_name() front to
    device_register(), so the name can be freed while calling
    put_device().
    
    Fixes: 1dd7128b839f ("thermal/core: Fix null pointer dereference in thermal_release()")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cab345f9d51943898e406275f9607c145adb1877
Author: Yuan Can <yuancan@huawei.com>
Date:   Thu Nov 17 08:08:23 2022 +0000

    platform/chrome: cros_usbpd_notify: Fix error handling in cros_usbpd_notify_init()
    
    [ Upstream commit 5a2d96623670155d94aca72c320c0ac27bdc6bd2 ]
    
    The following WARNING message was given when rmmod cros_usbpd_notify:
    
     Unexpected driver unregister!
     WARNING: CPU: 0 PID: 253 at drivers/base/driver.c:270 driver_unregister+0x8a/0xb0
     Modules linked in: cros_usbpd_notify(-)
     CPU: 0 PID: 253 Comm: rmmod Not tainted 6.1.0-rc3 #24
     ...
     Call Trace:
      <TASK>
      cros_usbpd_notify_exit+0x11/0x1e [cros_usbpd_notify]
      __x64_sys_delete_module+0x3c7/0x570
      ? __ia32_sys_delete_module+0x570/0x570
      ? lock_is_held_type+0xe3/0x140
      ? syscall_enter_from_user_mode+0x17/0x50
      ? rcu_read_lock_sched_held+0xa0/0xd0
      ? syscall_enter_from_user_mode+0x1c/0x50
      do_syscall_64+0x37/0x90
      entry_SYSCALL_64_after_hwframe+0x63/0xcd
     RIP: 0033:0x7f333fe9b1b7
    
    The reason is that the cros_usbpd_notify_init() does not check the return
    value of platform_driver_register(), and the cros_usbpd_notify can
    install successfully even if platform_driver_register() failed.
    
    Fix by checking the return value of platform_driver_register() and
    unregister cros_usbpd_notify_plat_driver when it failed.
    
    Fixes: ec2daf6e33f9 ("platform: chrome: Add cros-usbpd-notify driver")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Link: https://lore.kernel.org/r/20221117080823.77549-1-yuancan@huawei.com
    Signed-off-by: Prashant Malani <pmalani@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0358bc7cc21ad972a06918f3cf2222dc40127cb8
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Nov 18 14:31:37 2022 +0800

    perf/x86/intel/uncore: Fix reference count leak in __uncore_imc_init_box()
    
    [ Upstream commit 17b8d847b92d815d1638f0de154654081d66b281 ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev, so tgl_uncore_get_mc_dev() will return a pci_dev with its
    reference count increased. We need to call pci_dev_put() to decrease the
    reference count before exiting from __uncore_imc_init_box(). Add
    pci_dev_put() for both normal and error path.
    
    Fixes: fdb64822443e ("perf/x86: Add Intel Tiger Lake uncore support")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Link: https://lore.kernel.org/r/20221118063137.121512-5-wangxiongfeng2@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 433bd587dca5c3f7157fef2fe571290cd392cbf6
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Nov 18 14:31:36 2022 +0800

    perf/x86/intel/uncore: Fix reference count leak in snr_uncore_mmio_map()
    
    [ Upstream commit 8ebd16c11c346751b3944d708e6c181ed4746c39 ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev, so snr_uncore_get_mc_dev() will return a pci_dev with its
    reference count increased. We need to call pci_dev_put() to decrease the
    reference count. Let's add the missing pci_dev_put().
    
    Fixes: ee49532b38dd ("perf/x86/intel/uncore: Add IMC uncore support for Snow Ridge")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Link: https://lore.kernel.org/r/20221118063137.121512-4-wangxiongfeng2@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3485f197518061371568f842405159aa9e4df551
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Nov 18 14:31:35 2022 +0800

    perf/x86/intel/uncore: Fix reference count leak in hswep_has_limit_sbox()
    
    [ Upstream commit 1ff9dd6e7071a561f803135c1d684b13c7a7d01d ]
    
    pci_get_device() will increase the reference count for the returned
    'dev'. We need to call pci_dev_put() to decrease the reference count.
    Since 'dev' is only used in pci_read_config_dword(), let's add
    pci_dev_put() right after it.
    
    Fixes: 9d480158ee86 ("perf/x86/intel/uncore: Remove uncore extra PCI dev HSWEP_PCI_PCU_3")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Link: https://lore.kernel.org/r/20221118063137.121512-3-wangxiongfeng2@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0021ef7dc6124e79ea6c1893c3c76d19700c2e12
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Nov 18 14:31:34 2022 +0800

    perf/x86/intel/uncore: Fix reference count leak in sad_cfg_iio_topology()
    
    [ Upstream commit c508eb042d9739bf9473526f53303721b70e9100 ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev, and also decrease the reference count for the input parameter
    *from* if it is not NULL.
    
    If we break the loop in sad_cfg_iio_topology() with 'dev' not NULL. We
    need to call pci_dev_put() to decrease the reference count. Since
    pci_dev_put() can handle the NULL input parameter, we can just add one
    pci_dev_put() right before 'return ret'.
    
    Fixes: c1777be3646b ("perf/x86/intel/uncore: Enable I/O stacks to IIO PMON mapping on SNR")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
    Link: https://lore.kernel.org/r/20221118063137.121512-2-wangxiongfeng2@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c12b314bb23dc0c83e03402cc84574700947e3b2
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 11 09:23:58 2022 +0800

    PNP: fix name memory leak in pnp_alloc_dev()
    
    [ Upstream commit 110d7b0325c55ff3620073ba4201845f59e22ebf ]
    
    After commit 1fa5ae857bb1 ("driver core: get rid of struct device's
    bus_id string array"), the name of device is allocated dynamically,
    move dev_set_name() after pnp_add_id() to avoid memory leak.
    
    Fixes: 1fa5ae857bb1 ("driver core: get rid of struct device's bus_id string array")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1c7a6af710cd22f9c6d5d6a18474e90c2ed40e6
Author: Zhao Gongyi <zhaogongyi@huawei.com>
Date:   Tue Nov 22 19:26:26 2022 +0800

    selftests/efivarfs: Add checking of the test return value
    
    [ Upstream commit c93924267fe6f2b44af1849f714ae9cd8117a9cd ]
    
    Add checking of the test return value, otherwise it will report success
    forever for test_create_read().
    
    Fixes: dff6d2ae56d0 ("selftests/efivarfs: clean up test files from test_create*()")
    Signed-off-by: Zhao Gongyi <zhaogongyi@huawei.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46be3ee1cab965f494ed0311d7783e7ce2ce34b5
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 4 11:39:45 2022 +0800

    MIPS: vpe-cmp: fix possible memory leak while module exiting
    
    [ Upstream commit c5ed1fe0801f0c66b0fbce2785239a5664629057 ]
    
    dev_set_name() allocates memory for name, it need be freed
    when module exiting, call put_device() to give up reference,
    so that it can be freed in kobject_cleanup() when the refcount
    hit to 0. The vpe_device is static, so remove kfree() from
    vpe_device_release().
    
    Fixes: 17a1d523aa58 ("MIPS: APRP: Add VPE loader support for CMP platforms.")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e820a8192ff68570100347855b567512aec43819
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Nov 4 11:39:44 2022 +0800

    MIPS: vpe-mt: fix possible memory leak while module exiting
    
    [ Upstream commit 5822e8cc84ee37338ab0bdc3124f6eec04dc232d ]
    
    Afer commit 1fa5ae857bb1 ("driver core: get rid of struct device's
    bus_id string array"), the name of device is allocated dynamically,
    it need be freed when module exiting, call put_device() to give up
    reference, so that it can be freed in kobject_cleanup() when the
    refcount hit to 0. The vpe_device is static, so remove kfree() from
    vpe_device_release().
    
    Fixes: 1fa5ae857bb1 ("driver core: get rid of struct device's bus_id string array")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61d68cf2ba79128c48d4b3fa4d10c34dc18ba572
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Tue Nov 1 19:15:33 2022 +0800

    ocfs2: fix memory leak in ocfs2_stack_glue_init()
    
    [ Upstream commit 13b6269dd022aaa69ca8d1df374ab327504121cf ]
    
    ocfs2_table_header should be free in ocfs2_stack_glue_init() if
    ocfs2_sysfs_init() failed, otherwise kmemleak will report memleak.
    
    BUG: memory leak
    unreferenced object 0xffff88810eeb5800 (size 128):
      comm "modprobe", pid 4507, jiffies 4296182506 (age 55.888s)
      hex dump (first 32 bytes):
        c0 40 14 a0 ff ff ff ff 00 00 00 00 01 00 00 00  .@..............
        01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<000000001e59e1cd>] __register_sysctl_table+0xca/0xef0
        [<00000000c04f70f7>] 0xffffffffa0050037
        [<000000001bd12912>] do_one_initcall+0xdb/0x480
        [<0000000064f766c9>] do_init_module+0x1cf/0x680
        [<000000002ba52db0>] load_module+0x6441/0x6f20
        [<000000009772580d>] __do_sys_finit_module+0x12f/0x1c0
        [<00000000380c1f22>] do_syscall_64+0x3f/0x90
        [<000000004cf473bc>] entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Link: https://lkml.kernel.org/r/41651ca1-432a-db34-eb97-d35744559de1@linux.alibaba.com
    Fixes: 3878f110f71a ("ocfs2: Move the hb_ctl_path sysctl into the stack glue.")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e83b47580a0738361772d6f24286adfdaba57e36
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Mon Oct 31 19:38:29 2022 +0800

    lib/fonts: fix undefined behavior in bit shift for get_default_font
    
    [ Upstream commit 6fe888c4d2fb174408e4540bb2d5602b9f507f90 ]
    
    Shifting signed 32-bit value by 31 bits is undefined, so changing
    significant bit to unsigned.  The UBSAN warning calltrace like below:
    
    UBSAN: shift-out-of-bounds in lib/fonts/fonts.c:139:20
    left shift of 1 by 31 places cannot be represented in type 'int'
     <TASK>
     dump_stack_lvl+0x7d/0xa5
     dump_stack+0x15/0x1b
     ubsan_epilogue+0xe/0x4e
     __ubsan_handle_shift_out_of_bounds+0x1e7/0x20c
     get_default_font+0x1c7/0x1f0
     fbcon_startup+0x347/0x3a0
     do_take_over_console+0xce/0x270
     do_fbcon_takeover+0xa1/0x170
     do_fb_registered+0x2a8/0x340
     fbcon_fb_registered+0x47/0xe0
     register_framebuffer+0x294/0x4a0
     __drm_fb_helper_initial_config_and_unlock+0x43c/0x880 [drm_kms_helper]
     drm_fb_helper_initial_config+0x52/0x80 [drm_kms_helper]
     drm_fbdev_client_hotplug+0x156/0x1b0 [drm_kms_helper]
     drm_fbdev_generic_setup+0xfc/0x290 [drm_kms_helper]
     bochs_pci_probe+0x6ca/0x772 [bochs]
     local_pci_probe+0x4d/0xb0
     pci_device_probe+0x119/0x320
     really_probe+0x181/0x550
     __driver_probe_device+0xc6/0x220
     driver_probe_device+0x32/0x100
     __driver_attach+0x195/0x200
     bus_for_each_dev+0xbb/0x120
     driver_attach+0x27/0x30
     bus_add_driver+0x22e/0x2f0
     driver_register+0xa9/0x190
     __pci_register_driver+0x90/0xa0
     bochs_pci_driver_init+0x52/0x1000 [bochs]
     do_one_initcall+0x76/0x430
     do_init_module+0x61/0x28a
     load_module+0x1f82/0x2e50
     __do_sys_finit_module+0xf8/0x190
     __x64_sys_finit_module+0x23/0x30
     do_syscall_64+0x58/0x80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
     </TASK>
    
    Link: https://lkml.kernel.org/r/20221031113829.4183153-1-cuigaosheng1@huawei.com
    Fixes: c81f717cb9e0 ("fbcon: Fix typo and bogus logic in get_default_font")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0df7d9ab6bcee9038f4b661a1aec215d28406d1d
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Mon Oct 24 21:08:09 2022 +0300

    proc: fixup uptime selftest
    
    [ Upstream commit 5cc81d5c81af0dee54da9a67a3ebe4be076a13db ]
    
    syscall(3) returns -1 and sets errno on error, unlike "syscall"
    instruction.
    
    Systems which have <= 32/64 CPUs are unaffected. Test won't bounce
    to all CPUs before completing if there are more of them.
    
    Link: https://lkml.kernel.org/r/Y1bUiT7VRXlXPQa1@p183
    Fixes: 1f5bd0547654 ("proc: selftests: test /proc/uptime")
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07b8659b8e5b3a4a68cc9afc3e0577a7ef30f571
Author: Barnabás Pőcze <pobrn@protonmail.com>
Date:   Mon Nov 14 19:54:23 2022 +0000

    timerqueue: Use rb_entry_safe() in timerqueue_getnext()
    
    [ Upstream commit 2f117484329b233455ee278f2d9b0a4356835060 ]
    
    When `timerqueue_getnext()` is called on an empty timer queue, it will
    use `rb_entry()` on a NULL pointer, which is invalid. Fix that by using
    `rb_entry_safe()` which handles NULL pointers.
    
    This has not caused any issues so far because the offset of the `rb_node`
    member in `timerqueue_node` is 0, so `rb_entry()` is essentially a no-op.
    
    Fixes: 511885d7061e ("lib/timerqueue: Rely on rbtree semantics for next timer")
    Signed-off-by: Barnabás Pőcze <pobrn@protonmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20221114195421.342929-1-pobrn@protonmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 413b18866b4033547ec929f010871714457e8bef
Author: Barnabás Pőcze <pobrn@protonmail.com>
Date:   Wed Oct 5 15:00:45 2022 +0000

    platform/x86: huawei-wmi: fix return value calculation
    
    [ Upstream commit 0b9a1dcdb6a2c841899389bf2dd7a3e0e2aa0e99 ]
    
    Previously, `huawei_wmi_input_setup()` returned the result of
    logical or-ing the return values of two functions that return negative
    errno-style error codes and one that returns `acpi_status`. If this
    returned value was non-zero, then it was propagated from the platform
    driver's probe function. That function should return a negative
    errno-style error code, so the result of the logical or that
    `huawei_wmi_input_setup()` returned was not appropriate.
    
    Fix that by checking each function separately and returning the
    error code unmodified.
    
    Fixes: 1ac9abeb2e5b ("platform/x86: huawei-wmi: Move to platform driver")
    Signed-off-by: Barnabás Pőcze <pobrn@protonmail.com>
    Link: https://lore.kernel.org/r/20221005150032.173198-2-pobrn@protonmail.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b469322830d948f366cf0f57a9eee8a6cd4bd7e
Author: wuchi <wuchi.zero@gmail.com>
Date:   Sat Jun 11 21:06:34 2022 +0800

    lib/debugobjects: fix stat count and optimize debug_objects_mem_init
    
    [ Upstream commit eabb7f1ace53e127309407b2b5e74e8199e85270 ]
    
    1. Var debug_objects_allocated tracks valid kmem_cache_alloc calls, so
       track it in debug_objects_replace_static_objects.  Do similar things in
       object_cpu_offline.
    
    2. In debug_objects_mem_init, there is no need to call function
       cpuhp_setup_state_nocalls when debug_objects_enabled = 0 (out of
       memory).
    
    Link: https://lkml.kernel.org/r/20220611130634.99741-1-wuchi.zero@gmail.com
    Fixes: 634d61f45d6f ("debugobjects: Percpu pool lookahead freeing/allocation")
    Fixes: c4b73aabd098 ("debugobjects: Track number of kmem_cache_alloc/kmem_cache_free done")
    Signed-off-by: wuchi <wuchi.zero@gmail.com>
    Reviewed-by: Waiman Long <longman@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f790dfe81629544dd327893c9b04b0a0fdeda2fa
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Fri Nov 11 18:36:53 2022 +0800

    perf: Fix possible memleak in pmu_dev_alloc()
    
    [ Upstream commit e8d7a90c08ce963c592fb49845f2ccc606a2ac21 ]
    
    In pmu_dev_alloc(), when dev_set_name() failed, it will goto free_dev
    and call put_device(pmu->dev) to release it.
    However pmu->dev->release is assigned after this, which makes warning
    and memleak.
    Call dev_set_name() after pmu->dev->release = pmu_dev_release to fix it.
    
      Device '(null)' does not have a release() function...
      WARNING: CPU: 2 PID: 441 at drivers/base/core.c:2332 device_release+0x1b9/0x240
      ...
      Call Trace:
        <TASK>
        kobject_put+0x17f/0x460
        put_device+0x20/0x30
        pmu_dev_alloc+0x152/0x400
        perf_pmu_register+0x96b/0xee0
        ...
      kmemleak: 1 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
      unreferenced object 0xffff888014759000 (size 2048):
        comm "modprobe", pid 441, jiffies 4294931444 (age 38.332s)
        backtrace:
          [<0000000005aed3b4>] kmalloc_trace+0x27/0x110
          [<000000006b38f9b8>] pmu_dev_alloc+0x50/0x400
          [<00000000735f17be>] perf_pmu_register+0x96b/0xee0
          [<00000000e38477f1>] 0xffffffffc0ad8603
          [<000000004e162216>] do_one_initcall+0xd0/0x4e0
          ...
    
    Fixes: abe43400579d ("perf: Sysfs enumeration")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20221111103653.91058-1-chenzhongjin@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 418d21c0df5b4142de3415df9c34145b7fa5b0b4
Author: Yipeng Zou <zouyipeng@huawei.com>
Date:   Fri Nov 4 10:09:31 2022 +0800

    selftests/ftrace: event_triggers: wait longer for test_event_enable
    
    [ Upstream commit a1d6cd88c8973cfb08ee85722488b1d6d5d16327 ]
    
    In some platform, the schedule event may came slowly, delay 100ms can't
    cover it.
    
    I was notice that on my board which running in low cpu_freq,and this
    selftests allways gose fail.
    
    So maybe we can check more times here to wait longer.
    
    Fixes: 43bb45da82f9 ("selftests: ftrace: Add a selftest to test event enable/disable func trigger")
    Signed-off-by: Yipeng Zou <zouyipeng@huawei.com>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Acked-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ea765b10624d67407817100d381c60f53593033
Author: Chen Hui <judy.chenhui@huawei.com>
Date:   Tue Nov 8 15:23:02 2022 +0800

    cpufreq: qcom-hw: Fix memory leak in qcom_cpufreq_hw_read_lut()
    
    [ Upstream commit 9901c21bcaf2f01fe5078f750d624f4ddfa8f81b ]
    
    If "cpu_dev" fails to get opp table in qcom_cpufreq_hw_read_lut(),
    the program will return, resulting in "table" resource is not released.
    
    Fixes: 51c843cf77bb ("cpufreq: qcom: Update the bandwidth levels on frequency change")
    Signed-off-by: Chen Hui <judy.chenhui@huawei.com>
    Reviewed-by: Sibi Sankar <quic_sibis@quicinc.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c52d9c25d95c7c3763a8cfbe446fad90ebbe862b
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Thu Nov 3 16:12:05 2022 +0100

    fs: don't audit the capability check in simple_xattr_list()
    
    [ Upstream commit e7eda157c4071cd1e69f4b1687b0fbe1ae5e6f46 ]
    
    The check being unconditional may lead to unwanted denials reported by
    LSMs when a process has the capability granted by DAC, but denied by an
    LSM. In the case of SELinux such denials are a problem, since they can't
    be effectively filtered out via the policy and when not silenced, they
    produce noise that may hide a true problem or an attack.
    
    Checking for the capability only if any trusted xattr is actually
    present wouldn't really address the issue, since calling listxattr(2) on
    such node on its own doesn't indicate an explicit attempt to see the
    trusted xattrs. Additionally, it could potentially leak the presence of
    trusted xattrs to an unprivileged user if they can check for the denials
    (e.g. through dmesg).
    
    Therefore, it's best (and simplest) to keep the check unconditional and
    instead use ns_capable_noaudit() that will silence any associated LSM
    denials.
    
    Fixes: 38f38657444d ("xattr: extract simple_xattr code from tmpfs")
    Reported-by: Martin Pitt <mpitt@redhat.com>
    Suggested-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Reviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Reviewed-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4d0d13b46c6252bc327d49605f8cb69ed286e43
Author: xiongxin <xiongxin@kylinos.cn>
Date:   Tue Nov 1 10:28:39 2022 +0800

    PM: hibernate: Fix mistake in kerneldoc comment
    
    [ Upstream commit 6e5d7300cbe7c3541bc31f16db3e9266e6027b4b ]
    
    The actual maximum image size formula in hibernate_preallocate_memory()
    is as follows:
    
    max_size = (count - (size + PAGES_FOR_IO)) / 2
                - 2 * DIV_ROUND_UP(reserved_size, PAGE_SIZE);
    
    but the one in the kerneldoc comment of the function is different and
    incorrect.
    
    Fixes: ddeb64870810 ("PM / Hibernate: Add sysfs knob to control size of memory for drivers")
    Signed-off-by: xiongxin <xiongxin@kylinos.cn>
    [ rjw: Subject and changelog rewrite ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f62b8e50dd2d0d92a013ea40347f9e43fd2041f
Author: Reinette Chatre <reinette.chatre@intel.com>
Date:   Mon Oct 31 10:29:58 2022 -0700

    x86/sgx: Reduce delay and interference of enclave release
    
    [ Upstream commit 7b72c823ddf8aaaec4e9fb28e6fbe4d511e7dad1 ]
    
    commit 8795359e35bc ("x86/sgx: Silence softlockup detection when
    releasing large enclaves") introduced a cond_resched() during enclave
    release where the EREMOVE instruction is applied to every 4k enclave
    page. Giving other tasks an opportunity to run while tearing down a
    large enclave placates the soft lockup detector but Iqbal found
    that the fix causes a 25% performance degradation of a workload
    run using Gramine.
    
    Gramine maintains a 1:1 mapping between processes and SGX enclaves.
    That means if a workload in an enclave creates a subprocess then
    Gramine creates a duplicate enclave for that subprocess to run in.
    The consequence is that the release of the enclave used to run
    the subprocess can impact the performance of the workload that is
    run in the original enclave, especially in large enclaves when
    SGX2 is not in use.
    
    The workload run by Iqbal behaves as follows:
    Create enclave (enclave "A")
    /* Initialize workload in enclave "A" */
    Create enclave (enclave "B")
    /* Run subprocess in enclave "B" and send result to enclave "A" */
    Release enclave (enclave "B")
    /* Run workload in enclave "A" */
    Release enclave (enclave "A")
    
    The performance impact of releasing enclave "B" in the above scenario
    is amplified when there is a lot of SGX memory and the enclave size
    matches the SGX memory. When there is 128GB SGX memory and an enclave
    size of 128GB, from the time enclave "B" starts the 128GB SGX memory
    is oversubscribed with a combined demand for 256GB from the two
    enclaves.
    
    Before commit 8795359e35bc ("x86/sgx: Silence softlockup detection when
    releasing large enclaves") enclave release was done in a tight loop
    without giving other tasks a chance to run. Even though the system
    experienced soft lockups the workload (run in enclave "A") obtained
    good performance numbers because when the workload started running
    there was no interference.
    
    Commit 8795359e35bc ("x86/sgx: Silence softlockup detection when
    releasing large enclaves") gave other tasks opportunity to run while an
    enclave is released. The impact of this in this scenario is that while
    enclave "B" is released and needing to access each page that belongs
    to it in order to run the SGX EREMOVE instruction on it, enclave "A"
    is attempting to run the workload needing to access the enclave
    pages that belong to it. This causes a lot of swapping due to the
    demand for the oversubscribed SGX memory. Longer latencies are
    experienced by the workload in enclave "A" while enclave "B" is
    released.
    
    Improve the performance of enclave release while still avoiding the
    soft lockup detector with two enhancements:
    - Only call cond_resched() after XA_CHECK_SCHED iterations.
    - Use the xarray advanced API to keep the xarray locked for
      XA_CHECK_SCHED iterations instead of locking and unlocking
      at every iteration.
    
    This batching solution is copied from sgx_encl_may_map() that
    also iterates through all enclave pages using this technique.
    
    With this enhancement the workload experiences a 5%
    performance degradation when compared to a kernel without
    commit 8795359e35bc ("x86/sgx: Silence softlockup detection when
    releasing large enclaves"), an improvement to the reported 25%
    degradation, while still placating the soft lockup detector.
    
    Scenarios with poor performance are still possible even with these
    enhancements. For example, short workloads creating sub processes
    while running in large enclaves. Further performance improvements
    are pursued in user space through avoiding to create duplicate enclaves
    for certain sub processes, and using SGX2 that will do lazy allocation
    of pages as needed so enclaves created for sub processes start quickly
    and release quickly.
    
    Fixes: 8795359e35bc ("x86/sgx: Silence softlockup detection when releasing large enclaves")
    Reported-by: Md Iqbal Hossain <md.iqbal.hossain@intel.com>
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Tested-by: Md Iqbal Hossain <md.iqbal.hossain@intel.com>
    Link: https://lore.kernel.org/all/00efa80dd9e35dc85753e1c5edb0344ac07bb1f0.1667236485.git.reinette.chatre%40intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5b88170f09c1ff30f23e18d9682bb9bed6c2fae
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Sep 18 18:18:48 2021 -0400

    alpha: fix syscall entry in !AUDUT_SYSCALL case
    
    [ Upstream commit f7b2431a6d22f7a91c567708e071dfcd6d66db14 ]
    
    We only want to take the slow path if SYSCALL_TRACE or SYSCALL_AUDIT is
    set; on !AUDIT_SYSCALL configs the current tree hits it whenever _any_
    thread flag (including NEED_RESCHED, NOTIFY_SIGNAL, etc.) happens to
    be set.
    
    Fixes: a9302e843944 "alpha: Enable system-call auditing support"
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a819ba80b99c7155d404c970eed2d9bca000ca21
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Sep 18 18:08:56 2021 -0400

    alpha: fix TIF_NOTIFY_SIGNAL handling
    
    [ Upstream commit e2c7554cc6d85f95e3c6635f270ec839ab9fe05e ]
    
    it needs to be added to _TIF_WORK_MASK, or we might not reach
    do_work_pending() in the first place...
    
    Fixes: 5a9a8897c253a "alpha: add support for TIF_NOTIFY_SIGNAL"
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb2a732ef4518bd247e5d34d5955ea7ab86663a9
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Fri Oct 21 17:10:12 2022 +0200

    cpuidle: dt: Return the correct numbers of parsed idle states
    
    [ Upstream commit ee3c2c8ad6ba6785f14a60e4081d7c82e88162a2 ]
    
    While we correctly skips to initialize an idle state from a disabled idle
    state node in DT, the returned value from dt_init_idle_driver() don't get
    adjusted accordingly. Instead the number of found idle state nodes are
    returned, while the callers are expecting the number of successfully
    initialized idle states from DT.
    
    This leads to cpuidle drivers unnecessarily continues to initialize their
    idle state specific data. Moreover, in the case when all idle states have
    been disabled in DT, we would end up registering a cpuidle driver, rather
    than relying on the default arch specific idle call.
    
    Fixes: 9f14da345599 ("drivers: cpuidle: implement DT based idle states infrastructure")
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3af4f5cb8ae7442ee7a532216702a3b09dcde6ed
Author: Qais Yousef <qyousef@layalina.io>
Date:   Thu Aug 4 15:36:05 2022 +0100

    sched/uclamp: Make asym_fits_capacity() use util_fits_cpu()
    
    [ Upstream commit a2e7f03ed28fce26c78b985f87913b6ce3accf9d ]
    
    Use the new util_fits_cpu() to ensure migration margin and capacity
    pressure are taken into account correctly when uclamp is being used
    otherwise we will fail to consider CPUs as fitting in scenarios where
    they should.
    
    s/asym_fits_capacity/asym_fits_cpu/ to better reflect what it does now.
    
    Fixes: b4c9c9f15649 ("sched/fair: Prefer prev cpu in asymmetric wakeup path")
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220804143609.515789-6-qais.yousef@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23cb580e0c6befa7a692a9ad7974f8007efb162b
Author: Dietmar Eggemann <dietmar.eggemann@arm.com>
Date:   Fri Jul 29 13:13:03 2022 +0200

    sched/core: Introduce sched_asym_cpucap_active()
    
    [ Upstream commit 740cf8a760b73e8375bfb4bedcbe9746183350f9 ]
    
    Create an inline helper for conditional code to be only executed on
    asymmetric CPU capacity systems. This makes these (currently ~10 and
    future) conditions a lot more readable.
    
    Signed-off-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20220729111305.1275158-2-dietmar.eggemann@arm.com
    Stable-dep-of: a2e7f03ed28f ("sched/uclamp: Make asym_fits_capacity() use util_fits_cpu()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41c2dba3885e417c8bb3f0720b5f21dcb58563b5
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Tue Sep 28 12:35:44 2021 +0200

    sched/fair: Removed useless update of p->recent_used_cpu
    
    [ Upstream commit a7ba894821b6ade7bb420455f87020b2838d6180 ]
    
    Since commit 89aafd67f28c ("sched/fair: Use prev instead of new target as recent_used_cpu"),
    p->recent_used_cpu is unconditionnaly set with prev.
    
    Fixes: 89aafd67f28c ("sched/fair: Use prev instead of new target as recent_used_cpu")
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Link: https://lkml.kernel.org/r/20210928103544.27489-1-vincent.guittot@linaro.org
    Stable-dep-of: a2e7f03ed28f ("sched/uclamp: Make asym_fits_capacity() use util_fits_cpu()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55ffeab089aac3d05f8aa8a3e7edcf1ba3af8365
Author: Qais Yousef <qyousef@layalina.io>
Date:   Thu Aug 4 15:36:04 2022 +0100

    sched/uclamp: Make select_idle_capacity() use util_fits_cpu()
    
    [ Upstream commit b759caa1d9f667b94727b2ad12589cbc4ce13a82 ]
    
    Use the new util_fits_cpu() to ensure migration margin and capacity
    pressure are taken into account correctly when uclamp is being used
    otherwise we will fail to consider CPUs as fitting in scenarios where
    they should.
    
    Fixes: b4c9c9f15649 ("sched/fair: Prefer prev cpu in asymmetric wakeup path")
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220804143609.515789-5-qais.yousef@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4639bfbb83bd2adec3996ac39ccac916f5bcd373
Author: Qais Yousef <qyousef@layalina.io>
Date:   Thu Aug 4 15:36:02 2022 +0100

    sched/uclamp: Make task_fits_capacity() use util_fits_cpu()
    
    [ Upstream commit b48e16a69792b5dc4a09d6807369d11b2970cc36 ]
    
    So that the new uclamp rules in regard to migration margin and capacity
    pressure are taken into account correctly.
    
    Fixes: a7008c07a568 ("sched/fair: Make task_fits_capacity() consider uclamp restrictions")
    Co-developed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220804143609.515789-3-qais.yousef@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 309e50cbfefca8ce49ba19ebe78798424d75cd35
Author: Qais Yousef <qyousef@layalina.io>
Date:   Thu Aug 4 15:36:01 2022 +0100

    sched/uclamp: Fix relationship between uclamp and migration margin
    
    [ Upstream commit 48d5e9daa8b767e75ed9421665b037a49ce4bc04 ]
    
    fits_capacity() verifies that a util is within 20% margin of the
    capacity of a CPU, which is an attempt to speed up upmigration.
    
    But when uclamp is used, this 20% margin is problematic because for
    example if a task is boosted to 1024, then it will not fit on any CPU
    according to fits_capacity() logic.
    
    Or if a task is boosted to capacity_orig_of(medium_cpu). The task will
    end up on big instead on the desired medium CPU.
    
    Similar corner cases exist for uclamp and usage of capacity_of().
    Slightest irq pressure on biggest CPU for example will make a 1024
    boosted task look like it can't fit.
    
    What we really want is for uclamp comparisons to ignore the migration
    margin and capacity pressure, yet retain them for when checking the
    _actual_ util signal.
    
    For example, task p:
    
            p->util_avg = 300
            p->uclamp[UCLAMP_MIN] = 1024
    
    Will fit a big CPU. But
    
            p->util_avg = 900
            p->uclamp[UCLAMP_MIN] = 1024
    
    will not, this should trigger overutilized state because the big CPU is
    now *actually* being saturated.
    
    Similar reasoning applies to capping tasks with UCLAMP_MAX. For example:
    
            p->util_avg = 1024
            p->uclamp[UCLAMP_MAX] = capacity_orig_of(medium_cpu)
    
    Should fit the task on medium cpus without triggering overutilized
    state.
    
    Inlined comments expand more on desired behavior in more scenarios.
    
    Introduce new util_fits_cpu() function which encapsulates the new logic.
    The new function is not used anywhere yet, but will be used to update
    various users of fits_capacity() in later patches.
    
    Fixes: af24bde8df202 ("sched/uclamp: Add uclamp support to energy_compute()")
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220804143609.515789-2-qais.yousef@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54a766e19681cce5164c2f80403175a46bd64c28
Author: Vincent Donnefort <vincent.donnefort@arm.com>
Date:   Tue Dec 7 09:57:55 2021 +0000

    sched/fair: Cleanup task_util and capacity type
    
    [ Upstream commit ef8df9798d469b7c45c66664550e93469749f1e8 ]
    
    task_util and capacity are comparable unsigned long values. There is no
    need for an intermidiate implicit signed cast.
    
    Signed-off-by: Vincent Donnefort <vincent.donnefort@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20211207095755.859972-1-vincent.donnefort@arm.com
    Stable-dep-of: 48d5e9daa8b7 ("sched/uclamp: Fix relationship between uclamp and migration margin")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26bffaf6784a1c8deb25776be8924a7c3407b7bd
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Mon Oct 17 17:06:39 2022 +0200

    ovl: remove privs in ovl_fallocate()
    
    [ Upstream commit 23a8ce16419a3066829ad4a8b7032a75817af65b ]
    
    Underlying fs doesn't remove privs because fallocate is called with
    privileged mounter credentials.
    
    This fixes some failure in fstests generic/683..687.
    
    Fixes: aab8848cee5e ("ovl: add ovl_fallocate()")
    Acked-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5dc34f9aaaf446e18b11a5f8f4cbb640ea9a145f
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Mon Oct 17 17:06:38 2022 +0200

    ovl: remove privs in ovl_copyfile()
    
    [ Upstream commit b306e90ffabdaa7e3b3350dbcd19b7663e71ab17 ]
    
    Underlying fs doesn't remove privs because copy_range/remap_range are
    called with privileged mounter credentials.
    
    This fixes some failures in fstest generic/673.
    
    Fixes: 8ede205541ff ("ovl: add reflink/copyfile/dedup support")
    Acked-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9636e70ee2d3721bfd46b7f3a09150b432632fc0
Author: Christian Brauner <brauner@kernel.org>
Date:   Mon Apr 4 12:51:54 2022 +0200

    ovl: use ovl_copy_{real,upper}attr() wrappers
    
    [ Upstream commit 2878dffc7db0b5a51e308ccb6b571296b57c82e7 ]
    
    When copying inode attributes from the upper or lower layer to ovl inodes
    we need to take the upper or lower layer's mount's idmapping into
    account. In a lot of places we call ovl_copyattr() only on upper inodes and
    in some we call it on either upper or lower inodes. Split this into two
    separate helpers.
    
    The first one should only be called on upper
    inodes and is thus called ovl_copy_upperattr(). The second one can be
    called on upper or lower inodes. We add ovl_copy_realattr() for this
    task. The new helper makes use of the previously added ovl_i_path_real()
    helper. This is needed to support idmapped base layers with overlay.
    
    When overlay copies the inode information from an upper or lower layer
    to the relevant overlay inode it will apply the idmapping of the upper
    or lower layer when doing so. The ovl inode ownership will thus always
    correctly reflect the ownership of the idmapped upper or lower layer.
    
    All idmapping helpers are nops when no idmapped base layers are used.
    
    Cc: <linux-unionfs@vger.kernel.org>
    Tested-by: Giuseppe Scrivano <gscrivan@redhat.com>
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Stable-dep-of: b306e90ffabd ("ovl: remove privs in ovl_copyfile()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a54843833caf60da23b943069d50b0515f7c069e
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Mon Apr 4 12:51:53 2022 +0200

    ovl: store lower path in ovl_inode
    
    [ Upstream commit ffa5723c6d259b3191f851a50a98d0352b345b39 ]
    
    Create some ovl_i_* helpers to get real path from ovl inode. Instead of
    just stashing struct inode for the lower layer we stash struct path for
    the lower layer. The helpers allow to retrieve a struct path for the
    relevant upper or lower layer. This will be used when retrieving
    information based on struct inode when copying up inode attributes from
    upper or lower inodes to ovl inodes and when checking permissions in
    ovl_permission() in following patches. This is needed to support
    idmapped base layers with overlay.
    
    Cc: <linux-unionfs@vger.kernel.org>
    Tested-by: Giuseppe Scrivano <gscrivan@redhat.com>
    Reviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Stable-dep-of: b306e90ffabd ("ovl: remove privs in ovl_copyfile()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 163c5bbe7d2fbf7977bdf4c862a6c2d3575c6af4
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Fri Nov 11 11:38:53 2022 -0800

    tpm/tpm_crb: Fix error message in __crb_relinquish_locality()
    
    [ Upstream commit f5264068071964b56dc02c9dab3d11574aaca6ff ]
    
    The error message in __crb_relinquish_locality() mentions requestAccess
    instead of Relinquish. Fix it.
    
    Fixes: 888d867df441 ("tpm: cmd_ready command can be issued only after granting locality")
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Acked-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe880e9df97a5452fbfa6d6c44bf160f1f2e7dff
Author: Yuan Can <yuancan@huawei.com>
Date:   Thu Nov 24 03:19:26 2022 +0000

    tpm/tpm_ftpm_tee: Fix error handling in ftpm_mod_init()
    
    [ Upstream commit 2b7d07f7acaac2c7750e420dcf4414588ede6d03 ]
    
    The ftpm_mod_init() returns the driver_register() directly without checking
    its return value, if driver_register() failed, the ftpm_tee_plat_driver is
    not unregistered.
    
    Fix by unregister ftpm_tee_plat_driver when driver_register() failed.
    
    Fixes: 9f1944c23c8c ("tpm_ftpm_tee: register driver on TEE bus")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Maxim Uvarov <maxim.uvarov@linaro.org>
    Acked-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebc73c4f266281e2cad1a372ecd81572d95375b6
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Mon Dec 5 15:31:36 2022 -0800

    pstore: Avoid kcore oops by vmap()ing with VM_IOREMAP
    
    [ Upstream commit e6b842741b4f39007215fd7e545cb55aa3d358a2 ]
    
    An oops can be induced by running 'cat /proc/kcore > /dev/null' on
    devices using pstore with the ram backend because kmap_atomic() assumes
    lowmem pages are accessible with __va().
    
     Unable to handle kernel paging request at virtual address ffffff807ff2b000
     Mem abort info:
     ESR = 0x96000006
     EC = 0x25: DABT (current EL), IL = 32 bits
     SET = 0, FnV = 0
     EA = 0, S1PTW = 0
     FSC = 0x06: level 2 translation fault
     Data abort info:
     ISV = 0, ISS = 0x00000006
     CM = 0, WnR = 0
     swapper pgtable: 4k pages, 39-bit VAs, pgdp=0000000081d87000
     [ffffff807ff2b000] pgd=180000017fe18003, p4d=180000017fe18003, pud=180000017fe18003, pmd=0000000000000000
     Internal error: Oops: 96000006 [#1] PREEMPT SMP
     Modules linked in: dm_integrity
     CPU: 7 PID: 21179 Comm: perf Not tainted 5.15.67-10882-ge4eb2eb988cd #1 baa443fb8e8477896a370b31a821eb2009f9bfba
     Hardware name: Google Lazor (rev3 - 8) (DT)
     pstate: a0400009 (NzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
     pc : __memcpy+0x110/0x260
     lr : vread+0x194/0x294
     sp : ffffffc013ee39d0
     x29: ffffffc013ee39f0 x28: 0000000000001000 x27: ffffff807ff2b000
     x26: 0000000000001000 x25: ffffffc0085a2000 x24: ffffff802d4b3000
     x23: ffffff80f8a60000 x22: ffffff802d4b3000 x21: ffffffc0085a2000
     x20: ffffff8080b7bc68 x19: 0000000000001000 x18: 0000000000000000
     x17: 0000000000000000 x16: 0000000000000000 x15: ffffffd3073f2e60
     x14: ffffffffad588000 x13: 0000000000000000 x12: 0000000000000001
     x11: 00000000000001a2 x10: 00680000fff2bf0b x9 : 03fffffff807ff2b
     x8 : 0000000000000001 x7 : 0000000000000000 x6 : 0000000000000000
     x5 : ffffff802d4b4000 x4 : ffffff807ff2c000 x3 : ffffffc013ee3a78
     x2 : 0000000000001000 x1 : ffffff807ff2b000 x0 : ffffff802d4b3000
     Call trace:
     __memcpy+0x110/0x260
     read_kcore+0x584/0x778
     proc_reg_read+0xb4/0xe4
    
    During early boot, memblock reserves the pages for the ramoops reserved
    memory node in DT that would otherwise be part of the direct lowmem
    mapping. Pstore's ram backend reuses those reserved pages to change the
    memory type (writeback or non-cached) by passing the pages to vmap()
    (see pfn_to_page() usage in persistent_ram_vmap() for more details) with
    specific flags. When read_kcore() starts iterating over the vmalloc
    region, it runs over the virtual address that vmap() returned for
    ramoops. In aligned_vread() the virtual address is passed to
    vmalloc_to_page() which returns the page struct for the reserved lowmem
    area. That lowmem page is passed to kmap_atomic(), which effectively
    calls page_to_virt() that assumes a lowmem page struct must be directly
    accessible with __va() and friends. These pages are mapped via vmap()
    though, and the lowmem mapping was never made, so accessing them via the
    lowmem virtual address oopses like above.
    
    Let's side-step this problem by passing VM_IOREMAP to vmap(). This will
    tell vread() to not include the ramoops region in the kcore. Instead the
    area will look like a bunch of zeros. The alternative is to teach kmap()
    about vmalloc areas that intersect with lowmem. Presumably such a change
    isn't a one-liner, and there isn't much interest in inspecting the
    ramoops region in kcore files anyway, so the most expedient route is
    taken for now.
    
    Cc: Brian Geffon <bgeffon@google.com>
    Cc: Mike Rapoport <rppt@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Fixes: 404a6043385d ("staging: android: persistent_ram: handle reserving and mapping memory")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20221205233136.3420802-1-swboyd@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4dcde11bff2de2445acaa907d4d6dbbeedf98ba
Author: Doug Brown <doug@schmorgal.com>
Date:   Sat Dec 3 16:51:17 2022 -0800

    ARM: mmp: fix timer_read delay
    
    [ Upstream commit e348b4014c31041e13ff370669ba3348c4d385e3 ]
    
    timer_read() was using an empty 100-iteration loop to wait for the
    TMR_CVWR register to capture the latest timer counter value. The delay
    wasn't long enough. This resulted in CPU idle time being extremely
    underreported on PXA168 with CONFIG_NO_HZ_IDLE=y.
    
    Switch to the approach used in the vendor kernel, which implements the
    capture delay by reading TMR_CVWR a few times instead.
    
    Fixes: 49cbe78637eb ("[ARM] pxa: add base support for Marvell's PXA168 processor line")
    Signed-off-by: Doug Brown <doug@schmorgal.com>
    Link: https://lore.kernel.org/r/20221204005117.53452-3-doug@schmorgal.com
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95916147dcc7eeb01c3f0c0dbda3e9740bd5d1fe
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Dec 2 16:22:54 2022 +0800

    pstore/ram: Fix error return code in ramoops_probe()
    
    [ Upstream commit e1fce564900f8734edf15b87f028c57e14f6e28d ]
    
    In the if (dev_of_node(dev) && !pdata) path, the "err" may be assigned a
    value of 0, so the error return code -EINVAL may be incorrectly set
    to 0. To fix set valid return code before calling to goto.
    
    Fixes: 35da60941e44 ("pstore/ram: add Device Tree bindings")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/1669969374-46582-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a31a647a3d1073a642c5bbe3457731fb353cb980
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Tue Aug 23 08:45:32 2022 -0700

    seccomp: Move copy_seccomp() to no failure path.
    
    [ Upstream commit a1140cb215fa13dcec06d12ba0c3ee105633b7c4 ]
    
    Our syzbot instance reported memory leaks in do_seccomp() [0], similar
    to the report [1].  It shows that we miss freeing struct seccomp_filter
    and some objects included in it.
    
    We can reproduce the issue with the program below [2] which calls one
    seccomp() and two clone() syscalls.
    
    The first clone()d child exits earlier than its parent and sends a
    signal to kill it during the second clone(), more precisely before the
    fatal_signal_pending() test in copy_process().  When the parent receives
    the signal, it has to destroy the embryonic process and return -EINTR to
    user space.  In the failure path, we have to call seccomp_filter_release()
    to decrement the filter's refcount.
    
    Initially, we called it in free_task() called from the failure path, but
    the commit 3a15fb6ed92c ("seccomp: release filter after task is fully
    dead") moved it to release_task() to notify user space as early as possible
    that the filter is no longer used.
    
    To keep the change and current seccomp refcount semantics, let's move
    copy_seccomp() just after the signal check and add a WARN_ON_ONCE() in
    free_task() for future debugging.
    
    [0]:
    unreferenced object 0xffff8880063add00 (size 256):
      comm "repro_seccomp", pid 230, jiffies 4294687090 (age 9.914s)
      hex dump (first 32 bytes):
        01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  ................
        ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................
      backtrace:
        do_seccomp (./include/linux/slab.h:600 ./include/linux/slab.h:733 kernel/seccomp.c:666 kernel/seccomp.c:708 kernel/seccomp.c:1871 kernel/seccomp.c:1991)
        do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)
        entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120)
    unreferenced object 0xffffc90000035000 (size 4096):
      comm "repro_seccomp", pid 230, jiffies 4294687090 (age 9.915s)
      hex dump (first 32 bytes):
        01 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        __vmalloc_node_range (mm/vmalloc.c:3226)
        __vmalloc_node (mm/vmalloc.c:3261 (discriminator 4))
        bpf_prog_alloc_no_stats (kernel/bpf/core.c:91)
        bpf_prog_alloc (kernel/bpf/core.c:129)
        bpf_prog_create_from_user (net/core/filter.c:1414)
        do_seccomp (kernel/seccomp.c:671 kernel/seccomp.c:708 kernel/seccomp.c:1871 kernel/seccomp.c:1991)
        do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)
        entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120)
    unreferenced object 0xffff888003fa1000 (size 1024):
      comm "repro_seccomp", pid 230, jiffies 4294687090 (age 9.915s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        bpf_prog_alloc_no_stats (./include/linux/slab.h:600 ./include/linux/slab.h:733 kernel/bpf/core.c:95)
        bpf_prog_alloc (kernel/bpf/core.c:129)
        bpf_prog_create_from_user (net/core/filter.c:1414)
        do_seccomp (kernel/seccomp.c:671 kernel/seccomp.c:708 kernel/seccomp.c:1871 kernel/seccomp.c:1991)
        do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)
        entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120)
    unreferenced object 0xffff888006360240 (size 16):
      comm "repro_seccomp", pid 230, jiffies 4294687090 (age 9.915s)
      hex dump (first 16 bytes):
        01 00 37 00 76 65 72 6c e0 83 01 06 80 88 ff ff  ..7.verl........
      backtrace:
        bpf_prog_store_orig_filter (net/core/filter.c:1137)
        bpf_prog_create_from_user (net/core/filter.c:1428)
        do_seccomp (kernel/seccomp.c:671 kernel/seccomp.c:708 kernel/seccomp.c:1871 kernel/seccomp.c:1991)
        do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)
        entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120)
    unreferenced object 0xffff8880060183e0 (size 8):
      comm "repro_seccomp", pid 230, jiffies 4294687090 (age 9.915s)
      hex dump (first 8 bytes):
        06 00 00 00 00 00 ff 7f                          ........
      backtrace:
        kmemdup (mm/util.c:129)
        bpf_prog_store_orig_filter (net/core/filter.c:1144)
        bpf_prog_create_from_user (net/core/filter.c:1428)
        do_seccomp (kernel/seccomp.c:671 kernel/seccomp.c:708 kernel/seccomp.c:1871 kernel/seccomp.c:1991)
        do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)
        entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:120)
    
    [1]: https://syzkaller.appspot.com/bug?id=2809bb0ac77ad9aa3f4afe42d6a610aba594a987
    
    [2]:
    
    void main(void)
    {
            struct sock_filter filter[] = {
                    BPF_STMT(BPF_RET | BPF_K, SECCOMP_RET_ALLOW),
            };
            struct sock_fprog fprog = {
                    .len = sizeof(filter) / sizeof(filter[0]),
                    .filter = filter,
            };
            long i, pid;
    
            syscall(__NR_seccomp, SECCOMP_SET_MODE_FILTER, 0, &fprog);
    
            for (i = 0; i < 2; i++) {
                    pid = syscall(__NR_clone, CLONE_NEWNET | SIGKILL, NULL, NULL, 0);
                    if (pid == 0)
                            return;
            }
    }
    
    Fixes: 3a15fb6ed92c ("seccomp: release filter after task is fully dead")
    Reported-by: syzbot+ab17848fe269b573eb71@syzkaller.appspotmail.com
    Reported-by: Ayushman Dutta <ayudutta@amazon.com>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220823154532.82913-1-kuniyu@amazon.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8b76b8da66dfe6a2aa9f26cd0a51f947070f2c4
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Sep 24 13:58:26 2022 +0200

    arm64: dts: armada-3720-turris-mox: Add missing interrupt for RTC
    
    [ Upstream commit 21aad8ba615e9c39cee6c5d0b76726f63791926c ]
    
    MCP7940MT-I/MNY RTC has connected interrupt line to GPIO2_5.
    
    Fixes: 7109d817db2e ("arm64: dts: marvell: add DTS for Turris Mox")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 820a5ccca7c30bf0df949e6e7e5b8fdeb4bfb753
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Aug 25 14:21:02 2022 +0200

    ARM: dts: turris-omnia: Add switch port 6 node
    
    [ Upstream commit f87db2005f73876602211af0ee156817019b6bda ]
    
    Switch port 6 is connected to eth0, so add appropriate device tree node for it.
    
    Fixes: 26ca8b52d6e1 ("ARM: dts: add support for Turris Omnia")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b311f8e9f50395173adcd3919ef24f82c7af58f2
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jul 27 15:09:26 2022 +0200

    ARM: dts: turris-omnia: Add ethernet aliases
    
    [ Upstream commit f1f3e530c59a7e8c5f06172f4c28b945a6b4bfb8 ]
    
    This allows bootloader to correctly pass MAC addresses used by bootloader
    to individual interfaces into kernel device tree.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 26ca8b52d6e1 ("ARM: dts: add support for Turris Omnia")
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48ebdd06c93c138079cd007748cd09965d596de7
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Aug 18 00:30:53 2022 +0200

    ARM: dts: armada-39x: Fix assigned-addresses for every PCIe Root Port
    
    [ Upstream commit 69236d2391b4d7324b11c3252921571577892e7b ]
    
    BDF of resource in DT assigned-addresses property of Marvell PCIe Root Port
    (PCI-to-PCI bridge) should match BDF in address part in that DT node name
    as specified resource belongs to Marvell PCIe Root Port itself.
    
    Fixes: 538da83ddbea ("ARM: mvebu: add Device Tree files for Armada 39x SoC and board")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f27dd04e44d82a96e0e7be4d5fb48c84940a7d6e
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Aug 18 00:30:52 2022 +0200

    ARM: dts: armada-38x: Fix assigned-addresses for every PCIe Root Port
    
    [ Upstream commit 44f47b7a8fa4678ce4c38ea74837e4996b9df6d6 ]
    
    BDF of resource in DT assigned-addresses property of Marvell PCIe Root Port
    (PCI-to-PCI bridge) should match BDF in address part in that DT node name
    as specified resource belongs to Marvell PCIe Root Port itself.
    
    Fixes: 0d3d96ab0059 ("ARM: mvebu: add Device Tree description of the Armada 380/385 SoCs")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e53c63da8df9bb904dfbda4a2dd85e42bc26b75
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Aug 18 00:30:51 2022 +0200

    ARM: dts: armada-375: Fix assigned-addresses for every PCIe Root Port
    
    [ Upstream commit 823956d2436f70ced74c0fe8ab99facd8abfc060 ]
    
    BDF of resource in DT assigned-addresses property of Marvell PCIe Root Port
    (PCI-to-PCI bridge) should match BDF in address part in that DT node name
    as specified resource belongs to Marvell PCIe Root Port itself.
    
    Fixes: 4de59085091f ("ARM: mvebu: add Device Tree description of the Armada 375 SoC")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3af1a73e9e302e2246670408981582b50963664a
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Aug 18 00:30:50 2022 +0200

    ARM: dts: armada-xp: Fix assigned-addresses for every PCIe Root Port
    
    [ Upstream commit eab276787f456cbea89fabea110fe0728673d308 ]
    
    BDF of resource in DT assigned-addresses property of Marvell PCIe Root Port
    (PCI-to-PCI bridge) should match BDF in address part in that DT node name
    as specified resource belongs to Marvell PCIe Root Port itself.
    
    Fixes: 9d8f44f02d4a ("arm: mvebu: add PCIe Device Tree informations for Armada XP")
    Fixes: 12b69a599745 ("ARM: mvebu: second PCIe unit of Armada XP mv78230 is only x1 capable")
    Fixes: 2163e61c92d9 ("ARM: mvebu: fix second and third PCIe unit of Armada XP mv78260")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4ed8133c46db885ecc614e662613a53eb15a75d
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Aug 18 00:30:49 2022 +0200

    ARM: dts: armada-370: Fix assigned-addresses for every PCIe Root Port
    
    [ Upstream commit d9208b0fa2e803d16b28d91bf1d46b7ee9ea13c6 ]
    
    BDF of resource in DT assigned-addresses property of Marvell PCIe Root Port
    (PCI-to-PCI bridge) should match BDF in address part in that DT node name
    as specified resource belongs to Marvell PCIe Root Port itself.
    
    Fixes: a09a0b7c6ff1 ("arm: mvebu: add PCIe Device Tree informations for Armada 370")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b335b6344ee17f8cb946901b7b9a84dfbfbbd579
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Aug 18 00:30:48 2022 +0200

    ARM: dts: dove: Fix assigned-addresses for every PCIe Root Port
    
    [ Upstream commit dcc7d8c72b64a479b8017e4332d99179deb8802d ]
    
    BDF of resource in DT assigned-addresses property of Marvell PCIe Root Port
    (PCI-to-PCI bridge) should match BDF in address part in that DT node name
    as specified resource belongs to Marvell PCIe Root Port itself.
    
    Fixes: 74ecaa403a74 ("ARM: dove: add PCIe controllers to SoC DT")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b3415e6833684d5139f89f327f14186d8c14011
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Oct 13 17:22:12 2022 +0200

    arm64: dts: mediatek: mt6797: Fix 26M oscillator unit name
    
    [ Upstream commit 5f535cc583759c9c60d4cc9b8d221762e2d75387 ]
    
    Update its unit name to oscillator-26m and remove the unneeded unit
    address to fix a unit_address_vs_reg warning.
    
    Fixes: 464c510f60c6 ("arm64: dts: mediatek: add mt6797 support")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221013152212.416661-9-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93f5e66496194f8bdd7df1b838b615f014b861c1
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Oct 13 17:22:11 2022 +0200

    arm64: dts: mediatek: pumpkin-common: Fix devicetree warnings
    
    [ Upstream commit 509438336ce75c8b4e6ce8e8d507dc77d0783bdd ]
    
    Fix the pinctrl submodes and optee node to remove unneeded unit address,
    fixing all unit_address_vs_reg warnings.
    
    Fixes: 9983822c8cf9 ("arm64: dts: mediatek: add pumpkin board dts")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221013152212.416661-8-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit debd938e21cdde2d078327be1ac18ba717df64d2
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Oct 13 17:22:10 2022 +0200

    arm64: dts: mt2712-evb: Fix usb vbus regulators unit names
    
    [ Upstream commit ec1ae39a8d25cfb067b5459fac7c5b7b9bce6f6a ]
    
    Update the names to regulator-usb-p{0-3}-vbus to fix unit_address_vs_reg
    warnings for those.
    
    Fixes: 1724f4cc5133 ("arm64: dts: Add USB3 related nodes for MT2712")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221013152212.416661-7-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2c6397754f1ae85287d71f92ad0b84499608848
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Oct 13 17:22:09 2022 +0200

    arm64: dts: mt2712-evb: Fix vproc fixed regulators unit names
    
    [ Upstream commit 377063156893bf6c088309ac799fe5c6dce2822d ]
    
    Update the names to regulator-vproc-buck{0,1} to fix unit_addres_vs_reg
    warnings for those.
    
    Fixes: f75dd8bdd344 ("arm64: dts: mediatek: add mt2712 cpufreq related device nodes")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221013152212.416661-6-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96c972f8359320a0d630a14b13b1022c5afa47a0
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Oct 13 17:22:08 2022 +0200

    arm64: dts: mt2712e: Fix unit address for pinctrl node
    
    [ Upstream commit 1d4516f53a611b362db7ba7a8889923d469f57e1 ]
    
    The unit address for the pinctrl node is (0x)1000b000 and not
    (0x)10005000, which is the syscfg_pctl_a address instead.
    
    This fixes the following warning:
    arch/arm64/boot/dts/mediatek/mt2712e.dtsi:264.40-267.4: Warning
    (unique_unit_address): /syscfg_pctl_a@10005000: duplicate
    unit-address (also used in node /pinctrl@10005000)
    
    Fixes: f0c64340b748 ("arm64: dts: mt2712: add pintcrl device node.")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221013152212.416661-5-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cd1391c28e8a7cc02963709ce944d4456daaff5
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Oct 13 17:22:07 2022 +0200

    arm64: dts: mt2712e: Fix unit_address_vs_reg warning for oscillators
    
    [ Upstream commit e4495a0a8b3d84816c9a46edf3ce060bbf267475 ]
    
    Rename the fixed-clock oscillators to remove the unit address.
    
    This solves unit_address_vs_reg warnings.
    
    Fixes: 5d4839709c8e ("arm64: dts: mt2712: Add clock controller device nodes")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221013152212.416661-4-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39877a3636cda0d27b8c7a5b30d1fa66058c8971
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Oct 13 17:22:06 2022 +0200

    arm64: dts: mt6779: Fix devicetree build warnings
    
    [ Upstream commit 4d759c524c15dc4151e40b9e3f368147fda7b789 ]
    
    Rename fixed-clock oscillators to oscillator-26m and oscillator-32k
    and remove the unit address to fix the unit_address_vs_reg warning;
    fix the unit address for interrupt and intpol controllers by
    removing a leading zero in their unit address.
    
    This commit fixes the following warnings:
    
    (unit_address_vs_reg): /oscillator@0: node has a unit name, but
    no reg or ranges property
    (unit_address_vs_reg): /oscillator@1: node has a unit name, but
    no reg or ranges property
    (simple_bus_reg): /soc/interrupt-controller@0c000000: simple-bus
    unit address format error, expected "c000000"
    (simple_bus_reg): /soc/intpol-controller@0c53a650: simple-bus
    unit address format error, expected "c53a650"
    
    Fixes: 4c7a6260775d ("arm64: dts: add dts nodes for MT6779")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221013152212.416661-3-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af431ce47ef0988c6d419ecd5a4df4fbad2f2055
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Mon Oct 31 23:15:52 2022 +0100

    ARM: dts: nuvoton: Remove bogus unit addresses from fixed-partition nodes
    
    [ Upstream commit ea3ce4cf076ba11bb591c8013c5315136cae52c8 ]
    
    The unit addresses do not correspond to the nodes' reg properties,
    because they don't have any.
    
    Fixes: e42b650f828d ("ARM: dts: nuvoton: Add new device nodes to NPCM750 EVB")
    Fixes: ee33e2fb3d70 ("ARM: dts: nuvoton: Add Quanta GBS BMC Device Tree")
    Fixes: 59f5abe09f0a ("ARM: dts: nuvoton: Add Quanta GSJ BMC")
    Fixes: 14579c76f5ca ("ARM: dts: nuvoton: Add Fii Kudo system")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Link: https://lore.kernel.org/r/20221031221553.163273-1-j.neuschaefer@gmx.net
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a616049ec0323540f4d32ab96b1de40cdf89a09
Author: Jayesh Choudhary <j-choudhary@ti.com>
Date:   Mon Oct 31 20:55:19 2022 +0530

    arm64: dts: ti: k3-j721e-main: Drop dma-coherent in crypto node
    
    [ Upstream commit 26c5012403f3f1fd3bf8f7d3389ee539ae5cc162 ]
    
    crypto driver itself is not dma-coherent. So drop it.
    
    Fixes: 8ebcaaae8017 ("arm64: dts: ti: k3-j721e-main: Add crypto accelerator node")
    Signed-off-by: Jayesh Choudhary <j-choudhary@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Manorit Chawdhry <m-chawdhry@ti.com>
    Link: https://lore.kernel.org/r/20221031152520.355653-3-j-choudhary@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22a740824af8a958c528a6cdd78d2e50f066a795
Author: Jayesh Choudhary <j-choudhary@ti.com>
Date:   Mon Oct 31 20:55:18 2022 +0530

    arm64: dts: ti: k3-am65-main: Drop dma-coherent in crypto node
    
    [ Upstream commit b86833ab3653dbb0dc453eec4eef8615e63de4e2 ]
    
    crypto driver itself is not dma-coherent. So drop it.
    
    Fixes: b366b2409c97 ("arm64: dts: ti: k3-am6: Add crypto accelarator node")
    Signed-off-by: Jayesh Choudhary <j-choudhary@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Manorit Chawdhry <m-chawdhry@ti.com>
    Link: https://lore.kernel.org/r/20221031152520.355653-2-j-choudhary@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b131304fe722853cf26e55c4fa21fc58a36e7f21
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Tue Nov 15 19:55:40 2022 +0800

    perf/smmuv3: Fix hotplug callback leak in arm_smmu_pmu_init()
    
    [ Upstream commit 6f2d566b46436a50a80d6445e82879686b89588c ]
    
    arm_smmu_pmu_init() won't remove the callback added by
    cpuhp_setup_state_multi() when platform_driver_register() failed. Remove
    the callback by cpuhp_remove_multi_state() in fail path.
    
    Similar to the handling of arm_ccn_init() in commit 26242b330093 ("bus:
    arm-ccn: Prevent hotplug callback leak")
    
    Fixes: 7d839b4b9e00 ("perf/smmuv3: Add arm64 smmuv3 pmu driver")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Reviewed-by: Punit Agrawal <punit.agrawal@bytedance.com>
    Link: https://lore.kernel.org/r/20221115115540.6245-3-shangxiaojing@huawei.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b99fbe8d949a99fe456f08c7aad421327685aa50
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Tue Nov 15 19:55:39 2022 +0800

    perf/arm_dmc620: Fix hotplug callback leak in dmc620_pmu_init()
    
    [ Upstream commit d9f564c966e63925aac4ba273a9319d7fb6f4b4e ]
    
    dmc620_pmu_init() won't remove the callback added by
    cpuhp_setup_state_multi() when platform_driver_register() failed. Remove
    the callback by cpuhp_remove_multi_state() in fail path.
    
    Similar to the handling of arm_ccn_init() in commit 26242b330093 ("bus:
    arm-ccn: Prevent hotplug callback leak")
    
    Fixes: 53c218da220c ("driver/perf: Add PMU driver for the ARM DMC-620 memory controller")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Reviewed-by: Punit Agrawal <punit.agrawal@bytedance.com>
    Link: https://lore.kernel.org/r/20221115115540.6245-2-shangxiaojing@huawei.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9285b623bbe142c237083a5d2f1e50f2ecdeec48
Author: Yuan Can <yuancan@huawei.com>
Date:   Tue Nov 15 07:02:06 2022 +0000

    perf: arm_dsu: Fix hotplug callback leak in dsu_pmu_init()
    
    [ Upstream commit facafab7611f7b872c6b9eeaff53461ef11f482e ]
    
    dsu_pmu_init() won't remove the callback added by cpuhp_setup_state_multi()
    when platform_driver_register() failed. Remove the callback by
    cpuhp_remove_multi_state() in fail path.
    
    Similar to the handling of arm_ccn_init() in commit 26242b330093 ("bus:
    arm-ccn: Prevent hotplug callback leak")
    
    Fixes: 7520fa99246d ("perf: ARM DynamIQ Shared Unit PMU support")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Acked-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Link: https://lore.kernel.org/r/20221115070207.32634-2-yuancan@huawei.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6318a7e19f54f75e739516eab85719865eaf5ac
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Nov 14 10:44:11 2022 +0000

    arm64: mm: kfence: only handle translation faults
    
    [ Upstream commit 0bb1fbffc631064db567ccaeb9ed6b6df6342b66 ]
    
    Alexander noted that KFENCE only expects to handle faults from invalid page
    table entries (i.e. translation faults), but arm64's fault handling logic will
    call kfence_handle_page_fault() for other types of faults, including alignment
    faults caused by unaligned atomics. This has the unfortunate property of
    causing those other faults to be reported as "KFENCE: use-after-free",
    which is misleading and hinders debugging.
    
    Fix this by only forwarding unhandled translation faults to the KFENCE
    code, similar to what x86 does already.
    
    Alexander has verified that this passes all the tests in the KFENCE test
    suite and avoids bogus reports on misaligned atomics.
    
    Link: https://lore.kernel.org/all/20221102081620.1465154-1-zhongbaisong@huawei.com/
    Fixes: 840b23986344 ("arm64, kfence: enable KFENCE for ARM64")
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Alexander Potapenko <glider@google.com>
    Tested-by: Alexander Potapenko <glider@google.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Marco Elver <elver@google.com>
    Cc: Will Deacon <will@kernel.org>
    Link: https://lore.kernel.org/r/20221114104411.2853040-1-mark.rutland@arm.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46ddfb9d1e462c88163a239a7882ece6d2b45ff1
Author: Alexandru Elisei <alexandru.elisei@arm.com>
Date:   Mon Apr 25 12:44:42 2022 +0100

    arm64: Treat ESR_ELx as a 64-bit register
    
    [ Upstream commit 8d56e5c5a99ce1d17d39ce5a8260e42c2a2d7682 ]
    
    In the initial release of the ARM Architecture Reference Manual for
    ARMv8-A, the ESR_ELx registers were defined as 32-bit registers. This
    changed in 2018 with version D.a (ARM DDI 0487D.a) of the architecture,
    when they became 64-bit registers, with bits [63:32] defined as RES0. In
    version G.a, a new field was added to ESR_ELx, ISS2, which covers bits
    [36:32].  This field is used when the Armv8.7 extension FEAT_LS64 is
    implemented.
    
    As a result of the evolution of the register width, Linux stores it as
    both a 64-bit value and a 32-bit value, which hasn't affected correctness
    so far as Linux only uses the lower 32 bits of the register.
    
    Make the register type consistent and always treat it as 64-bit wide. The
    register is redefined as an "unsigned long", which is an unsigned
    double-word (64-bit quantity) for the LP64 machine (aapcs64 [1], Table 1,
    page 14). The type was chosen because "unsigned int" is the most frequent
    type for ESR_ELx and because FAR_ELx, which is used together with ESR_ELx
    in exception handling, is also declared as "unsigned long". The 64-bit type
    also makes adding support for architectural features that use fields above
    bit 31 easier in the future.
    
    The KVM hypervisor will receive a similar update in a subsequent patch.
    
    [1] https://github.com/ARM-software/abi-aa/releases/download/2021Q3/aapcs64.pdf
    
    Signed-off-by: Alexandru Elisei <alexandru.elisei@arm.com>
    Reviewed-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220425114444.368693-4-alexandru.elisei@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Stable-dep-of: 0bb1fbffc631 ("arm64: mm: kfence: only handle translation faults")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 681e3401286bf37504a833e589fdb58fad534182
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Tue Nov 8 16:03:22 2022 +0800

    soc: ti: smartreflex: Fix PM disable depth imbalance in omap_sr_probe
    
    [ Upstream commit 69460e68eb662064ab4188d4e129ff31c1f23ed9 ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context.
    
    Fixes: 984aa6dbf4ca ("OMAP3: PM: Adding smartreflex driver support.")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20221108080322.52268-3-zhangqilong3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6eca7a2535eb434bcfee3963821e8f0f163714e3
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Tue Nov 8 16:03:21 2022 +0800

    soc: ti: knav_qmss_queue: Fix PM disable depth imbalance in knav_queue_probe
    
    [ Upstream commit e961c0f19450fd4a26bd043dd2979990bf12caf6 ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context.
    
    Fixes: 41f93af900a2 ("soc: ti: add Keystone Navigator QMSS driver")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20221108080322.52268-2-zhangqilong3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 972f8fc0651e76575854aaecd6d43d30dac667e2
Author: Minghao Chi <chi.minghao@zte.com.cn>
Date:   Mon Apr 18 06:29:55 2022 +0000

    soc: ti: knav_qmss_queue: Use pm_runtime_resume_and_get instead of pm_runtime_get_sync
    
    [ Upstream commit 12eeb74925da70eb39d90abead9de9793be3d4c8 ]
    
    Using pm_runtime_resume_and_get is more appropriate for simplifying
    code.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Minghao Chi <chi.minghao@zte.com.cn>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20220418062955.2557949-1-chi.minghao@zte.com.cn
    Stable-dep-of: e961c0f19450 ("soc: ti: knav_qmss_queue: Fix PM disable depth imbalance in knav_queue_probe")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe53048f2adb35d679e8643d14246a74fd9b4c04
Author: Kory Maincent <kory.maincent@bootlin.com>
Date:   Wed Nov 2 18:10:06 2022 +0100

    arm: dts: spear600: Fix clcd interrupt
    
    [ Upstream commit 0336e2ce34e7a89832b6c214f924eb7bc58940be ]
    
    Interrupt 12 of the Interrupt controller belongs to the SMI controller,
    the right one for the display controller is the interrupt 13.
    
    Fixes: 8113ba917dfa ("ARM: SPEAr: DT: Update device nodes")
    Signed-off-by: Kory Maincent <kory.maincent@bootlin.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75baeec4642fbc11445b851a1b8612e6cf63e4bd
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Oct 26 12:36:46 2022 -0400

    arm64: dts: qcom: sm6125: fix SDHCI CQE reg names
    
    [ Upstream commit 3de1172624b3c4ca65730bc34333ab493510b3e1 ]
    
    SM6125 comes with SDCC (SDHCI controller) v5, so the second range of
    registers is cqhci, not core.
    
    Fixes: cff4bbaf2a2d ("arm64: dts: qcom: Add support for SM6125")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Marijn Suijten <marijn.suijten@somainline.org>
    Tested-by: Marijn Suijten <marijn.suijten@somainline.org> # Sony Xperia 10 II
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221026163646.37433-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f9ac041911deb48c062718b65219f957da7b26a
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Mon Nov 7 09:44:03 2022 +0800

    soc: qcom: apr: Add check for idr_alloc and of_property_read_string_index
    
    [ Upstream commit 6d7860f5750d73da2fa1a1f6c9405058a593fa32 ]
    
    As idr_alloc() and of_property_read_string_index() can return negative
    numbers, it should be better to check the return value and deal with
    the exception.
    Therefore, it should be better to use goto statement to stop and return
    error.
    
    Fixes: 6adba21eb434 ("soc: qcom: Add APR bus driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221107014403.3606-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6855dd02c55d7fb0af8991586ae06d57c92f6323
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Mon Sep 27 14:55:40 2021 +0100

    soc: qcom: apr: make code more reuseable
    
    [ Upstream commit 99139b80c1b3d73026ed8be2de42c52e2976ab64 ]
    
    APR and other packet routers like GPR are pretty much same and
    interact with other drivers in similar way.
    
    Ex: GPR ports can be considered as APR services, only difference
    is they are allocated dynamically.
    
    Other difference is packet layout, which should not matter
    with the apis abstracted. Apart from this the rest of the
    functionality is pretty much identical across APR and GPR.
    
    Make the apr code more reusable by abstracting it service level,
    rather than device level so that we do not need to write
    new drivers for other new packet routers like GPR.
    
    This patch is in preparation to add GPR support to this driver.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210927135559.738-4-srinivas.kandagatla@linaro.org
    Stable-dep-of: 6d7860f5750d ("soc: qcom: apr: Add check for idr_alloc and of_property_read_string_index")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9fb81a8355c265ee99157fe648dfcf085d69050
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Wed Oct 26 17:25:10 2022 +0200

    arm64: dts: qcom: sm8250: drop bogus DP PHY clock
    
    [ Upstream commit bb9f23e46ddcebe1bc68a43a0f7acfc1865a6472 ]
    
    The QMP pipe clock is used by the USB part of the PHY so drop the
    corresponding properties from the DP child node.
    
    Fixes: 5aa0d1becd5b ("arm64: dts: qcom: sm8250: switch usb1 qmp phy to USB3+DP mode")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221026152511.9661-2-johan+linaro@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53ffa5746415bf485c3f044c31c9d5fa79d9af00
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Mon Oct 24 11:15:06 2022 +0200

    arm64: dts: qcom: sm8350: fix UFS PHY registers
    
    [ Upstream commit b3c7839b698cc617e97dd2e4f1eeb4adc280fe58 ]
    
    The sizes of the UFS PHY register regions are too small and does
    specifically not cover all registers used by the Linux driver.
    
    As Linux maps these regions as full pages this is currently not an issue
    on Linux, but let's update the sizes to match the vendor driver.
    
    Fixes: 59c7cf814783 ("arm64: dts: qcom: sm8350: Add UFS nodes")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221024091507.20342-4-johan+linaro@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5a6bbd7a231a392312a6844ffa028948db5cd31
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Mon Oct 24 11:15:05 2022 +0200

    arm64: dts: qcom: sm8250: fix UFS PHY registers
    
    [ Upstream commit 7f8b37dd4e7bf50160529530d9789b846153df71 ]
    
    The sizes of the UFS PHY register regions are too small and does
    specifically not cover all registers used by the Linux driver.
    
    As Linux maps these regions as full pages this is currently not an issue
    on Linux, but let's update the sizes to match the vendor driver.
    
    Fixes: b7e2fba06622 ("arm64: dts: qcom: sm8250: Add UFS controller and PHY")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221024091507.20342-3-johan+linaro@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a52ff845f125cdfc46833a03a9c5354779efcb5
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Mon Oct 24 11:15:04 2022 +0200

    arm64: dts: qcom: sm8150: fix UFS PHY registers
    
    [ Upstream commit 36a31b3a8d9ba1707a23de8d8dc1ceaef4eda695 ]
    
    The sizes of the UFS PHY register regions are too small and does
    specifically not cover all registers used by the Linux driver.
    
    As Linux maps these regions as full pages this is currently not an issue
    on Linux, but let's update the sizes to match the vendor driver.
    
    Fixes: 3834a2e92229 ("arm64: dts: qcom: sm8150: Add ufs nodes")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221024091507.20342-2-johan+linaro@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 800f8165e0ca5d0e98015eba6186c13649cbcf45
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Wed Sep 29 11:42:47 2021 +0800

    arm64: dts: qcom: Correct QMP PHY child node name
    
    [ Upstream commit 1351512f29b4348e6b497f6343896c1033d409b4 ]
    
    Many child nodes of QMP PHY are named without following bindings schema
    and causing dtbs_check warnings like below.
    
    phy@1c06000: 'lane@1c06800' does not match any of the regexes: '^phy@[0-9a-f]+$'
            arch/arm64/boot/dts/qcom/msm8998-asus-novago-tp370ql.dt.yaml
            arch/arm64/boot/dts/qcom/msm8998-hp-envy-x2.dt.yaml
            arch/arm64/boot/dts/qcom/msm8998-lenovo-miix-630.dt.yaml
            arch/arm64/boot/dts/qcom/msm8998-mtp.dt.yaml
            arch/arm64/boot/dts/qcom/msm8998-oneplus-cheeseburger.dt.yaml
            arch/arm64/boot/dts/qcom/msm8998-oneplus-dumpling.dt.yaml
    
    Correct them to fix the warnings.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210929034253.24570-5-shawn.guo@linaro.org
    Stable-dep-of: 36a31b3a8d9b ("arm64: dts: qcom: sm8150: fix UFS PHY registers")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee136f275bad3c5c731bdfd6ec546378405e644b
Author: Luca Weiss <luca.weiss@fairphone.com>
Date:   Fri Nov 4 16:30:41 2022 +0100

    soc: qcom: llcc: make irq truly optional
    
    [ Upstream commit c882c899ead3545102a4d71b5fbe73b9e4bc2657 ]
    
    The function platform_get_irq prints an error message into the kernel
    log when the irq isn't found.
    
    Since the interrupt is actually optional and not provided by some SoCs,
    use platform_get_irq_optional which does not print an error message.
    
    Fixes: c081f3060fab ("soc: qcom: Add support to register LLCC EDAC driver")
    Signed-off-by: Luca Weiss <luca.weiss@fairphone.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221104153041.412020-1-luca.weiss@fairphone.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa7ffd41749b3242c20e81dda9e75e14ebcb52a9
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Tue Sep 27 17:34:20 2022 +0200

    arm64: dts: qcom: sm8250: correct LPASS pin pull down
    
    [ Upstream commit 195a0a11d66d6c696cbcf398d6bc3f3a3a462f7c ]
    
    The pull-down property is actually bias-pull-down.
    
    Fixes: 3160c1b894d9 ("arm64: dts: qcom: sm8250: add lpass lpi pin controller node")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220927153429.55365-4-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f94bacc616f2dff142c7e0344f1cceaa242a72ce
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Sep 26 21:01:45 2022 +0200

    arm64: dts: qcom: pm660: Use unique ADC5_VCOIN address in node name
    
    [ Upstream commit 02549ba5de0a09a27616496c3512db5af4ad7862 ]
    
    The register address in the node name is shadowing vph_pwr@83, whereas
    the ADC5_VCOIN register resolves to 0x85.  Fix this copy-paste
    discrepancy.
    
    Fixes: 4bf097540506 ("arm64: dts: qcom: pm660: Add VADC and temp alarm nodes")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220926190148.283805-3-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5bf1197817d3ceed243cb13fb14970e6bdab213
Author: Chen Jiahao <chenjiahao16@huawei.com>
Date:   Wed Oct 19 23:32:12 2022 +0800

    drivers: soc: ti: knav_qmss_queue: Mark knav_acc_firmwares as static
    
    [ Upstream commit adf85adc2a7199b41e7a4da083bd17274a3d6969 ]
    
    There is a sparse warning shown below:
    
    drivers/soc/ti/knav_qmss_queue.c:70:12: warning: symbol
    'knav_acc_firmwares' was not declared. Should it be static?
    
    Since 'knav_acc_firmwares' is only called within knav_qmss_queue.c,
    mark it as static to fix the warning.
    
    Fixes: 96ee19becc3b ("soc: ti: add firmware file name as part of the driver")
    Signed-off-by: Chen Jiahao <chenjiahao16@huawei.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20221019153212.72350-1-chenjiahao16@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4707d5daf8423b930e784677a7ba7be8b34d33c2
Author: Marek Vasut <marex@denx.de>
Date:   Fri Oct 21 12:00:57 2022 +0200

    ARM: dts: stm32: Fix AV96 WLAN regulator gpio property
    
    [ Upstream commit d5d577e3d50713ad11d98dbdaa48bb494346c26d ]
    
    The WLAN regulator uses 'gpios' property instead of 'gpio' to specify
    regulator enable GPIO. While the former is also currently handled by
    the Linux kernel regulator-fixed driver, the later is the correct one
    per DT bindings. Update the DT to use the later.
    
    Fixes: 7dd5cbba42c93 ("ARM: dts: stm32: Enable WiFi on AV96")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33647d7a467d8b84df23e4329490502e05c0c8a5
Author: Marek Vasut <marex@denx.de>
Date:   Fri Sep 23 04:37:45 2022 +0200

    ARM: dts: stm32: Drop stm32mp15xc.dtsi from Avenger96
    
    [ Upstream commit 3b835f1b8acef53c8882b25f40f48d7f5982c938 ]
    
    The Avenger96 is populated with STM32MP157A DHCOR SoM, drop the
    stm32mp15xc.dtsi which should only be included in DTs of devices
    which are populated with STM32MP15xC/F SoC as the stm32mp15xc.dtsi
    enables CRYP block not present in the STM32MP15xA/D SoC .
    
    Fixes: 7e76f82acd9e1 ("ARM: dts: stm32: Split Avenger96 into DHCOR SoM and Avenger96 board")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Patrice Chotard <patrice.chotard@foss.st.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f271a866071124210bfd8f30d0227af038ceca9
Author: Marco Elver <elver@google.com>
Date:   Mon Sep 12 11:45:41 2022 +0200

    objtool, kcsan: Add volatile read/write instrumentation to whitelist
    
    [ Upstream commit 63646fcba5bb4b59a19031c21913f94e46a3d0d4 ]
    
    Adds KCSAN's volatile instrumentation to objtool's uaccess whitelist.
    
    Recent kernel change have shown that this was missing from the uaccess
    whitelist (since the first upstreamed version of KCSAN):
    
      mm/gup.o: warning: objtool: fault_in_readable+0x101: call to __tsan_volatile_write1() with UACCESS enabled
    
    Fixes: 75d75b7a4d54 ("kcsan: Support distinguishing volatile accesses")
    Signed-off-by: Marco Elver <elver@google.com>
    Reviewed-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51fe2dcba805ebbe8423a21ffb1aa5ffe1baa1b1
Author: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
Date:   Mon Jul 18 16:03:40 2022 +0200

    arm64: dts: qcom: msm8916: Drop MSS fallback compatible
    
    [ Upstream commit ff02ac621634e82c0c34d02a79d402ae700cdfd0 ]
    
    MSM8916 was originally using the "qcom,q6v5-pil" compatible for the
    MSS remoteproc. Later it was decided to use SoC-specific compatibles
    instead, so "qcom,msm8916-mss-pil" is now the preferred compatible.
    
    Commit 60a05ed059a0 ("arm64: dts: qcom: msm8916: Add MSM8916-specific
    compatibles to SCM/MSS") updated the MSM8916 device tree to make use of
    the new compatible but still kept the old "qcom,q6v5-pil" as fallback.
    
    This is inconsistent with other SoCs and conflicts with the description
    in the binding documentation (which says that only one compatible should
    be present). Also, it has no functional advantage since older kernels
    could not handle this DT anyway (e.g. "power-domains" in the MSS node is
    only supported by kernels that also support "qcom,msm8916-mss-pil").
    
    Make this consistent with other SoCs by using only the
    "qcom,msm8916-mss-pil" compatible.
    
    Fixes: 60a05ed059a0 ("arm64: dts: qcom: msm8916: Add MSM8916-specific compatibles to SCM/MSS")
    Signed-off-by: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220718140344.1831731-2-stephan.gerhold@kernkonzept.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9fff3524f2a68cfcfcba1d8f867e7e6a7b1efa5
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Mon Oct 10 07:44:14 2022 -0400

    arm64: dts: qcom: sdm845-cheza: fix AP suspend pin bias
    
    [ Upstream commit 9bce41fab14da8f21027dc9847535ef5e22cbe8b ]
    
    There is no "bias-no-pull" property.  Assume intentions were disabling
    bias.
    
    Fixes: 79e7739f7b87 ("arm64: dts: qcom: sdm845-cheza: add initial cheza dt")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221010114417.29859-3-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6487f48ea3597f9e654e796b25192c1b19f63f99
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Mon Oct 10 07:44:12 2022 -0400

    arm64: dts: qcom: sdm630: fix UART1 pin bias
    
    [ Upstream commit 780f836fe071a9e8703fe6a05ae00129acf83391 ]
    
    There is no "bias-no-pull" property.  Assume intentions were disabling
    bias.
    
    Fixes: b190fb010664 ("arm64: dts: qcom: sdm630: Add sdm630 dts file")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221010114417.29859-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c0c9c545857cd1692c30c4519ed56eca7f5514d
Author: Luca Weiss <luca@z3ntu.xyz>
Date:   Thu Oct 13 21:06:57 2022 +0200

    ARM: dts: qcom: apq8064: fix coresight compatible
    
    [ Upstream commit a42b1ee868361f1cb0492f1bdaefb43e0751e468 ]
    
    There's a typo missing the arm, prefix of arm,coresight-etb10. Fix it to
    make devicetree validation happier.
    
    Signed-off-by: Luca Weiss <luca@z3ntu.xyz>
    Fixes: 7a5c275fd821 ("ARM: dts: qcom: Add apq8064 CoreSight components")
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221013190657.48499-3-luca@z3ntu.xyz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f9b088d68baae6b1ba44e91b133dd78ab602d2c
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Jul 24 17:04:20 2022 +0300

    arm64: dts: qcom: msm8996: fix GPU OPP table
    
    [ Upstream commit 0d440d811e6e2f37093e54db55bc27fe66678170 ]
    
    Fix Adreno OPP table according to the msm-3.18. Enable 624 MHz for the
    speed bin 3 and 560 MHz for bins 2 and 3.
    
    Fixes: 69cc3114ab0f ("arm64: dts: Add Adreno GPU definitions")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220724140421.1933004-7-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 270683fc7b3cf5ce8b7f67916550260c7909d8cc
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Jul 24 17:04:18 2022 +0300

    arm64: dts: qcom: msm8996: fix supported-hw in cpufreq OPP tables
    
    [ Upstream commit 0154caaa2b748e7414a4ec3c6ee60e8f483b2d4f ]
    
    Adjust MSM8996 cpufreq tables according to tables in msm-3.18. Some of
    the frequencies are not supported on speed bins other than 0. Also other
    speed bins support intermediate topmost frequencies, not supported on
    speed bin 0. Implement all these differencies.
    
    Fixes: 90173a954a22 ("arm64: dts: qcom: msm8996: Add CPU opps")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220724140421.1933004-5-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c5a62891434fd760f11452eb83f7c3bef6eafbf
Author: Yassine Oudjana <y.oudjana@protonmail.com>
Date:   Sun Jul 24 17:04:16 2022 +0300

    arm64: dts: qcom: msm8996: Add MSM8996 Pro support
    
    [ Upstream commit 8898c9748a872866f8c2973e719b26bf7c6ab64e ]
    
    Qualcomm MSM8996 Pro is a variant of MSM8996 with higher frequencies
    supported both on CPU and GPU. There are other minor hardware
    differencies in the CPU and GPU regulators and bus fabrics.
    
    However this results in significant differences between 8996 and 8996
    Pro CPU OPP tables. Judging from msm-3.18 there are only few common
    frequencies supported by both msm8996 and msm8996pro. Rather than
    hacking the tables for msm8996, split msm8996pro support into a separate
    file. Later this would allow having additional customizations for the
    CBF, CPR, retulators, etc.
    
    [DB: dropped all non-CPU-OPP changes]
    
    Fixes: 90173a954a22 ("arm64: dts: qcom: msm8996: Add CPU opps")
    Signed-off-by: Yassine Oudjana <y.oudjana@protonmail.com>
    [DB: Realigned supported-hw to keep compat with current cpufreq driver]
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220724140421.1933004-3-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f14048ee4196e9b9d37b9a68b0b4f934b5413c1
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Fri Sep 30 21:29:40 2022 +0200

    arm64: dts: qcom: sm8250-sony-xperia-edo: fix touchscreen bias-disable
    
    [ Upstream commit 7ff4a646fae3697b039c6b684786a1e309e8445c ]
    
    The property to disable bias is "bias-disable".
    
    Fixes: e76c7e1f15fe ("arm64: dts: qcom: sm8250-edo: Add Samsung touchscreen")
    Reviewed-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220930192954.242546-3-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89f79f8d7f305ffc4abda26d56cead6fc2501494
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Oct 6 14:46:26 2022 +0200

    arm64: dts: qcom: ipq6018-cp01-c1: use BLSPI1 pins
    
    [ Upstream commit 4871d3c38893c8a585e3e96364b7fb91cda8322e ]
    
    When BLSPI1 (originally SPI0, later renamed in commit f82c48d46852
    ("arm64: dts: qcom: ipq6018: correct QUP peripheral labels")) was added,
    the device node lacked respective pin configuration assignment.
    
    Fixes: 5bf635621245 ("arm64: dts: ipq6018: Add a few device nodes")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Bjorn Andersson <andersson@kernel.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221006124659.217540-2-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9db5992e72edd880740a7e0880c93705d5030f7b
Author: Ivaylo Dimitrov <ivo.g.dimitrov.75@gmail.com>
Date:   Fri Nov 25 20:21:15 2022 +0200

    usb: musb: remove extra check in musb_gadget_vbus_draw
    
    [ Upstream commit ecec4b20d29c3d6922dafe7d2555254a454272d2 ]
    
    The checks for musb->xceiv and musb->xceiv->set_power duplicate those in
    usb_phy_set_power(), so there is no need of them. Moreover, not calling
    usb_phy_set_power() results in usb_phy_set_charger_current() not being
    called, so current USB config max current is not propagated through USB
    charger framework and charger drivers may try to draw more current than
    allowed or possible.
    
    Fix that by removing those extra checks and calling usb_phy_set_power()
    directly.
    
    Tested on Motorola Droid4 and Nokia N900
    
    Fixes: a9081a008f84 ("usb: phy: Add USB charger support")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Ivaylo Dimitrov <ivo.g.dimitrov.75@gmail.com>
    Link: https://lore.kernel.org/r/1669400475-4762-1-git-send-email-ivo.g.dimitrov.75@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adc063a491a7c007fee20e32a294ce8f799ef32a
Author: Martin Leung <Martin.Leung@amd.com>
Date:   Fri Oct 15 17:36:51 2021 -0400

    drm/amd/display: Manually adjust strobe for DCN303
    
    commit a9a1ac44074ff8cab7d519277f93341e14557f83 upstream.
    
    why:
    DCN303's 4 channel SOC BB causes problems at strobe
    
    how:
    workaround to manually adjust strobe calculation using FCLK
    restrict.
    
    Reviewed-by: Jun Lei <Jun.Lei@amd.com>
    Acked-by: Agustin Gutierrez <agustin.gutierrez@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Martin Leung <Martin.Leung@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
