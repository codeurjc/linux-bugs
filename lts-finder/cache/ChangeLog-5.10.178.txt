commit 791a854ae5a5f5988f1291ae91168a149bd5ba57
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Apr 20 12:10:29 2023 +0200

    Linux 5.10.178
    
    Link: https://lore.kernel.org/r/20230418120309.539243408@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20230419072207.996418578@linuxfoundation.org
    Tested-by: Chris Paterson (CIP) <chris.paterson2@renesas.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f177b382c33900d0e5a9766493c11a1074076f78
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Mon Jul 11 17:15:19 2022 -0700

    sysctl: Fix data-races in proc_dou8vec_minmax().
    
    commit 7dee5d7747a69aa2be41f04c6a7ecfe3ac8cdf18 upstream.
    
    A sysctl variable is accessed concurrently, and there is always a chance
    of data-race.  So, all readers and writers need some basic protection to
    avoid load/store-tearing.
    
    This patch changes proc_dou8vec_minmax() to use READ_ONCE() and
    WRITE_ONCE() internally to fix data-races on the sysctl side.  For now,
    proc_dou8vec_minmax() itself is tolerant to a data-race, but we still
    need to add annotations on the other subsystem's side.
    
    Fixes: cb9444130662 ("sysctl: add proc_dou8vec_minmax()")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56314b90fd43bd2444942bc14a7c5c768ce8ec57
Author: Valentin Schneider <vschneid@redhat.com>
Date:   Thu Jun 30 23:32:58 2022 +0100

    panic, kexec: make __crash_kexec() NMI safe
    
    commit 05c6257433b7212f07a7e53479a8ab038fc1666a upstream.
    
    Attempting to get a crash dump out of a debug PREEMPT_RT kernel via an NMI
    panic() doesn't work.  The cause of that lies in the PREEMPT_RT definition
    of mutex_trylock():
    
            if (IS_ENABLED(CONFIG_DEBUG_RT_MUTEXES) && WARN_ON_ONCE(!in_task()))
                    return 0;
    
    This prevents an nmi_panic() from executing the main body of
    __crash_kexec() which does the actual kexec into the kdump kernel.  The
    warning and return are explained by:
    
      6ce47fd961fa ("rtmutex: Warn if trylock is called from hard/softirq context")
      [...]
      The reasons for this are:
    
          1) There is a potential deadlock in the slowpath
    
          2) Another cpu which blocks on the rtmutex will boost the task
             which allegedly locked the rtmutex, but that cannot work
             because the hard/softirq context borrows the task context.
    
    Furthermore, grabbing the lock isn't NMI safe, so do away with kexec_mutex
    and replace it with an atomic variable.  This is somewhat overzealous as
    *some* callsites could keep using a mutex (e.g.  the sysfs-facing ones
    like crash_shrink_memory()), but this has the benefit of involving a
    single unified lock and preventing any future NMI-related surprises.
    
    Tested by triggering NMI panics via:
    
      $ echo 1 > /proc/sys/kernel/panic_on_unrecovered_nmi
      $ echo 1 > /proc/sys/kernel/unknown_nmi_panic
      $ echo 1 > /proc/sys/kernel/panic
    
      $ ipmitool power diag
    
    Link: https://lkml.kernel.org/r/20220630223258.4144112-3-vschneid@redhat.com
    Fixes: 6ce47fd961fa ("rtmutex: Warn if trylock is called from hard/softirq context")
    Signed-off-by: Valentin Schneider <vschneid@redhat.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: "Eric W . Biederman" <ebiederm@xmission.com>
    Cc: Juri Lelli <jlelli@redhat.com>
    Cc: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
    Cc: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Wen Yang <wenyang.linux@foxmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d425f348211ffb387587dc65113852767240d023
Author: Valentin Schneider <vschneid@redhat.com>
Date:   Thu Jun 30 23:32:57 2022 +0100

    kexec: turn all kexec_mutex acquisitions into trylocks
    
    commit 7bb5da0d490b2d836c5218f5186ee588d2145310 upstream.
    
    Patch series "kexec, panic: Making crash_kexec() NMI safe", v4.
    
    
    This patch (of 2):
    
    Most acquistions of kexec_mutex are done via mutex_trylock() - those were
    a direct "translation" from:
    
      8c5a1cf0ad3a ("kexec: use a mutex for locking rather than xchg()")
    
    there have however been two additions since then that use mutex_lock():
    crash_get_memory_size() and crash_shrink_memory().
    
    A later commit will replace said mutex with an atomic variable, and
    locking operations will become atomic_cmpxchg().  Rather than having those
    mutex_lock() become while (atomic_cmpxchg(&lock, 0, 1)), turn them into
    trylocks that can return -EBUSY on acquisition failure.
    
    This does halve the printable size of the crash kernel, but that's still
    neighbouring 2G for 32bit kernels which should be ample enough.
    
    Link: https://lkml.kernel.org/r/20220630223258.4144112-1-vschneid@redhat.com
    Link: https://lkml.kernel.org/r/20220630223258.4144112-2-vschneid@redhat.com
    Signed-off-by: Valentin Schneider <vschneid@redhat.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: "Eric W . Biederman" <ebiederm@xmission.com>
    Cc: Juri Lelli <jlelli@redhat.com>
    Cc: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
    Cc: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Baoquan He <bhe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Wen Yang <wenyang.linux@foxmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 784b6ba15eb27f3abb800dbfbc5706625f83b418
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Sep 8 15:18:10 2021 -0700

    kexec: move locking into do_kexec_load
    
    commit 4b692e861619353ce069e547a67c8d0e32d9ef3d upstream.
    
    Patch series "compat: remove compat_alloc_user_space", v5.
    
    Going through compat_alloc_user_space() to convert indirect system call
    arguments tends to add complexity compared to handling the native and
    compat logic in the same code.
    
    This patch (of 6):
    
    The locking is the same between the native and compat version of
    sys_kexec_load(), so it can be done in the common implementation to reduce
    duplication.
    
    Link: https://lkml.kernel.org/r/20210727144859.4150043-1-arnd@kernel.org
    Link: https://lkml.kernel.org/r/20210727144859.4150043-2-arnd@kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Co-developed-by: Eric Biederman <ebiederm@xmission.com>
    Co-developed-by: Christoph Hellwig <hch@infradead.org>
    Acked-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Feng Tang <feng.tang@intel.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Wen Yang <wenyang.linux@foxmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b077b22ea9ff698840ff9305d9382935fb41540
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Mar 28 17:08:32 2023 -0700

    riscv: Handle zicsr/zifencei issues between clang and binutils
    
    commit e89c2e815e76471cb507bd95728bf26da7976430 upstream.
    
    There are two related issues that appear in certain combinations with
    clang and GNU binutils.
    
    The first occurs when a version of clang that supports zicsr or zifencei
    via '-march=' [1] (i.e, >= 17.x) is used in combination with a version
    of GNU binutils that do not recognize zicsr and zifencei in the
    '-march=' value (i.e., < 2.36):
    
      riscv64-linux-gnu-ld: -march=rv64i2p0_m2p0_a2p0_c2p0_zicsr2p0_zifencei2p0: Invalid or unknown z ISA extension: 'zifencei'
      riscv64-linux-gnu-ld: failed to merge target specific data of file fs/efivarfs/file.o
      riscv64-linux-gnu-ld: -march=rv64i2p0_m2p0_a2p0_c2p0_zicsr2p0_zifencei2p0: Invalid or unknown z ISA extension: 'zifencei'
      riscv64-linux-gnu-ld: failed to merge target specific data of file fs/efivarfs/super.o
    
    The second occurs when a version of clang that does not support zicsr or
    zifencei via '-march=' (i.e., <= 16.x) is used in combination with a
    version of GNU as that defaults to a newer ISA base spec, which requires
    specifying zicsr and zifencei in the '-march=' value explicitly (i.e, >=
    2.38):
    
      ../arch/riscv/kernel/kexec_relocate.S: Assembler messages:
      ../arch/riscv/kernel/kexec_relocate.S:147: Error: unrecognized opcode `fence.i', extension `zifencei' required
      clang-12: error: assembler command failed with exit code 1 (use -v to see invocation)
    
    This is the same issue addressed by commit 6df2a016c0c8 ("riscv: fix
    build with binutils 2.38") (see [2] for additional information) but
    older versions of clang miss out on it because the cc-option check
    fails:
    
      clang-12: error: invalid arch name 'rv64imac_zicsr_zifencei', unsupported standard user-level extension 'zicsr'
      clang-12: error: invalid arch name 'rv64imac_zicsr_zifencei', unsupported standard user-level extension 'zicsr'
    
    To resolve the first issue, only attempt to add zicsr and zifencei to
    the march string when using the GNU assembler 2.38 or newer, which is
    when the default ISA spec was updated, requiring these extensions to be
    specified explicitly. LLVM implements an older version of the base
    specification for all currently released versions, so these instructions
    are available as part of the 'i' extension. If LLVM's implementation is
    updated in the future, a CONFIG_AS_IS_LLVM condition can be added to
    CONFIG_TOOLCHAIN_NEEDS_EXPLICIT_ZICSR_ZIFENCEI.
    
    To resolve the second issue, use version 2.2 of the base ISA spec when
    using an older version of clang that does not support zicsr or zifencei
    via '-march=', as that is the spec version most compatible with the one
    clang/LLVM implements and avoids the need to specify zicsr and zifencei
    explicitly due to still being a part of 'i'.
    
    [1]: https://github.com/llvm/llvm-project/commit/22e199e6afb1263c943c0c0d4498694e15bf8a16
    [2]: https://lore.kernel.org/ZAxT7T9Xy1Fo3d5W@aurel32.net/
    
    Cc: stable@vger.kernel.org
    Link: https://github.com/ClangBuiltLinux/linux/issues/1808
    Co-developed-by: Conor Dooley <conor.dooley@microchip.com>
    Signed-off-by: Conor Dooley <conor.dooley@microchip.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Acked-by: Conor Dooley <conor.dooley@microchip.com>
    Link: https://lore.kernel.org/r/20230313-riscv-zicsr-zifencei-fiasco-v1-1-dd1b7840a551@kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c36a251011793e1c86ab7c7a0e79ce6794a9bd2c
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Tue Mar 28 17:08:31 2023 -0700

    kbuild: check CONFIG_AS_IS_LLVM instead of LLVM_IAS
    
    commit 52cc02b910284d6bddba46cce402044ab775f314 upstream.
    
    LLVM_IAS is the user interface to set the -(no-)integrated-as flag,
    and it should be used only for that purpose.
    
    LLVM_IAS is checked in some places to determine the assembler type,
    but it is not precise.
    
    For example,
    
     $ make CC=gcc LLVM_IAS=1
    
    ... will use the GNU assembler (i.e. binutils) since LLVM_IAS=1 is
    effective only when $(CC) is clang.
    
    Of course, 'CC=gcc LLVM_IAS=1' is an odd combination, but the build
    system can be more robust against such insane input.
    
    Commit ba64beb17493a ("kbuild: check the minimum assembler version in
    Kconfig") introduced CONFIG_AS_IS_GNU/LLVM, which is more precise
    because Kconfig checks the version string from the assembler in use.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    [nathan: Backport to 5.10]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5f67f6d4ec4aaf8bcef95c35a70d7e537239cb1
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Mar 28 17:08:30 2023 -0700

    kbuild: Switch to 'f' variants of integrated assembler flag
    
    commit 2185a7e4b0ade86c2c57fc63d4a7535c40254bd0 upstream.
    
    It has been brought up a few times in various code reviews that clang
    3.5 introduced -f{,no-}integrated-as as the preferred way to enable and
    disable the integrated assembler, mentioning that -{no-,}integrated-as
    are now considered legacy flags.
    
    Switch the kernel over to using those variants in case there is ever a
    time where clang decides to remove the non-'f' variants of the flag.
    
    Also, fix a typo in a comment ("intergrated" -> "integrated").
    
    Link: https://releases.llvm.org/3.5.0/tools/clang/docs/ReleaseNotes.html#new-compiler-flags
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    [nathan: Backport to 5.10]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83f55e6f298e9e79a38b92d771179090ff0ac771
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Tue Mar 28 17:08:29 2023 -0700

    kbuild: check the minimum assembler version in Kconfig
    
    commit ba64beb17493a4bfec563100c86a462a15926f24 upstream.
    
    Documentation/process/changes.rst defines the minimum assembler version
    (binutils version), but we have never checked it in the build time.
    
    Kbuild never invokes 'as' directly because all assembly files in the
    kernel tree are *.S, hence must be preprocessed. I do not expect
    raw assembly source files (*.s) would be added to the kernel tree.
    
    Therefore, we always use $(CC) as the assembler driver, and commit
    aa824e0c962b ("kbuild: remove AS variable") removed 'AS'. However,
    we are still interested in the version of the assembler acting behind.
    
    As usual, the --version option prints the version string.
    
      $ as --version | head -n 1
      GNU assembler (GNU Binutils for Ubuntu) 2.35.1
    
    But, we do not have $(AS). So, we can add the -Wa prefix so that
    $(CC) passes --version down to the backing assembler.
    
      $ gcc -Wa,--version | head -n 1
      gcc: fatal error: no input files
      compilation terminated.
    
    OK, we need to input something to satisfy gcc.
    
      $ gcc -Wa,--version -c -x assembler /dev/null -o /dev/null | head -n 1
      GNU assembler (GNU Binutils for Ubuntu) 2.35.1
    
    The combination of Clang and GNU assembler works in the same way:
    
      $ clang -no-integrated-as -Wa,--version -c -x assembler /dev/null -o /dev/null | head -n 1
      GNU assembler (GNU Binutils for Ubuntu) 2.35.1
    
    Clang with the integrated assembler fails like this:
    
      $ clang -integrated-as -Wa,--version -c -x assembler /dev/null -o /dev/null | head -n 1
      clang: error: unsupported argument '--version' to option 'Wa,'
    
    For the last case, checking the error message is fragile. If the
    proposal for -Wa,--version support [1] is accepted, this may not be
    even an error in the future.
    
    One easy way is to check if -integrated-as is present in the passed
    arguments. We did not pass -integrated-as to CLANG_FLAGS before, but
    we can make it explicit.
    
    Nathan pointed out -integrated-as is the default for all of the
    architectures/targets that the kernel cares about, but it goes
    along with "explicit is better than implicit" policy. [2]
    
    With all this in my mind, I implemented scripts/as-version.sh to
    check the assembler version in Kconfig time.
    
      $ scripts/as-version.sh gcc
      GNU 23501
      $ scripts/as-version.sh clang -no-integrated-as
      GNU 23501
      $ scripts/as-version.sh clang -integrated-as
      LLVM 0
    
    [1]: https://github.com/ClangBuiltLinux/linux/issues/1320
    [2]: https://lore.kernel.org/linux-kbuild/20210307044253.v3h47ucq6ng25iay@archlinux-ax161/
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    [nathan: Backport to 5.10. Drop minimum version checking, as it is not
             required in 5.10]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6facabb4d0695ca7d4a2ebab6db460be388c9dc8
Author: Steve Clevenger <scclevenger@os.amperecomputing.com>
Date:   Mon Feb 27 16:54:32 2023 -0700

    coresight-etm4: Fix for() loop drvdata->nr_addr_cmp range bug
    
    commit bf84937e882009075f57fd213836256fc65d96bc upstream.
    
    In etm4_enable_hw, fix for() loop range to represent address comparator pairs.
    
    Fixes: 2e1cdfe184b5 ("coresight-etm4x: Adding CoreSight ETM4x driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Steve Clevenger <scclevenger@os.amperecomputing.com>
    Reviewed-by: James Clark <james.clark@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Link: https://lore.kernel.org/r/4a4ee61ce8ef402615a4528b21a051de3444fb7b.1677540079.git.scclevenger@os.amperecomputing.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b78445bce52ec0345cb7da1a9beaf47ffa8e9ea
Author: George Cherian <george.cherian@marvell.com>
Date:   Thu Feb 9 02:11:17 2023 +0000

    watchdog: sbsa_wdog: Make sure the timeout programming is within the limits
    
    commit 000987a38b53c172f435142a4026dd71378ca464 upstream.
    
    Make sure to honour the max_hw_heartbeat_ms while programming the timeout
    value to WOR. Clamp the timeout passed to sbsa_gwdt_set_timeout() to
    make sure the programmed value is within the permissible range.
    
    Fixes: abd3ac7902fb ("watchdog: sbsa: Support architecture version 1")
    
    Signed-off-by: George Cherian <george.cherian@marvell.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20230209021117.1512097-1-george.cherian@marvell.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Tyler Hicks (Microsoft) <code@tyhicks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10b7a33c5de3c3de27d497060d0a8b5da5b69546
Author: Gregor Herburger <gregor.herburger@tq-group.com>
Date:   Thu Apr 13 11:37:37 2023 +0200

    i2c: ocores: generate stop condition after timeout in polling mode
    
    [ Upstream commit f8160d3b35fc94491bb0cb974dbda310ef96c0e2 ]
    
    In polling mode, no stop condition is generated after a timeout. This
    causes SCL to remain low and thereby block the bus. If this happens
    during a transfer it can cause slaves to misinterpret the subsequent
    transfer and return wrong values.
    
    To solve this, pass the ETIMEDOUT error up from ocores_process_polling()
    instead of setting STATE_ERROR directly. The caller is adjusted to call
    ocores_process_timeout() on error both in polling and in IRQ mode, which
    will set STATE_ERROR and generate a stop condition.
    
    Fixes: 69c8c0c0efa8 ("i2c: ocores: add polling interface")
    Signed-off-by: Gregor Herburger <gregor.herburger@tq-group.com>
    Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Acked-by: Peter Korsgaard <peter@korsgaard.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Federico Vaga <federico.vaga@cern.ch>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4210b10dc7ed1439c45c0f840a16d9542868c53
Author: Matija Glavinic Pecotic <matija.glavinic-pecotic.ext@nokia.com>
Date:   Thu Apr 6 08:26:52 2023 +0200

    x86/rtc: Remove __init for runtime functions
    
    [ Upstream commit 775d3c514c5b2763a50ab7839026d7561795924d ]
    
    set_rtc_noop(), get_rtc_noop() are after booting, therefore their __init
    annotation is wrong.
    
    A crash was observed on an x86 platform where CMOS RTC is unused and
    disabled via device tree. set_rtc_noop() was invoked from ntp:
    sync_hw_clock(), although CONFIG_RTC_SYSTOHC=n, however sync_cmos_clock()
    doesn't honour that.
    
      Workqueue: events_power_efficient sync_hw_clock
      RIP: 0010:set_rtc_noop
      Call Trace:
       update_persistent_clock64
       sync_hw_clock
    
    Fix this by dropping the __init annotation from set/get_rtc_noop().
    
    Fixes: c311ed6183f4 ("x86/init: Allow DT configured systems to disable RTC at boot time")
    Signed-off-by: Matija Glavinic Pecotic <matija.glavinic-pecotic.ext@nokia.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/59f7ceb1-446b-1d3d-0bc8-1f0ee94b1e18@nokia.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba4a2f6d99fcfce62f7f768d9cfe1c839079191b
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Tue Apr 11 11:06:11 2023 +0200

    sched/fair: Fix imbalance overflow
    
    [ Upstream commit 91dcf1e8068e9a8823e419a7a34ff4341275fb70 ]
    
    When local group is fully busy but its average load is above system load,
    computing the imbalance will overflow and local group is not the best
    target for pulling this load.
    
    Fixes: 0b0695f2b34a ("sched/fair: Rework load_balance()")
    Reported-by: Tingjia Cao <tjcao980311@gmail.com>
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Tingjia Cao <tjcao980311@gmail.com>
    Link: https://lore.kernel.org/lkml/CABcWv9_DAhVBOq2=W=2ypKE9dKM5s2DvoV8-U0+GDwwuKZ89jQ@mail.gmail.com/T/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68387ae3b63e7bd1723767ce1bc2186e82490208
Author: zgpeng <zgpeng.linux@gmail.com>
Date:   Wed Apr 6 17:57:05 2022 +0800

    sched/fair: Move calculate of avg_load to a better location
    
    [ Upstream commit 06354900787f25bf5be3c07a68e3cdbc5bf0fa69 ]
    
    In calculate_imbalance function, when the value of local->avg_load is
    greater than or equal to busiest->avg_load, the calculated sds->avg_load is
    not used. So this calculation can be placed in a more appropriate position.
    
    Signed-off-by: zgpeng <zgpeng@tencent.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Samuel Liao <samuelliao@tencent.com>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Link: https://lore.kernel.org/r/1649239025-10010-1-git-send-email-zgpeng@tencent.com
    Stable-dep-of: 91dcf1e8068e ("sched/fair: Fix imbalance overflow")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccbec01cc99ce0d3a6851a5cea2fa1c05e536236
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Tue Apr 4 09:44:33 2023 +0530

    powerpc/papr_scm: Update the NUMA distance table for the target node
    
    [ Upstream commit b277fc793daf258877b4c0744b52f69d6e6ba22e ]
    
    Platform device helper routines won't update the NUMA distance table
    while creating a platform device, even if the device is present on a
    NUMA node that doesn't have memory or CPU. This is especially true for
    pmem devices. If the target node of the pmem device is not online, we
    find the nearest online node to the device and associate the pmem device
    with that online node. To find the nearest online node, we should have
    the numa distance table updated correctly. Update the distance
    information during the device probe.
    
    For a papr scm device on NUMA node 3 distance_lookup_table value for
    distance_ref_points_depth = 2 before and after fix is below:
    
    Before fix:
      node 3 distance depth 0  - 0
      node 3 distance depth 1  - 0
      node 4 distance depth 0  - 4
      node 4 distance depth 1  - 2
      node 5 distance depth 0  - 5
      node 5 distance depth 1  - 1
    
    After fix
      node 3 distance depth 0  - 3
      node 3 distance depth 1  - 1
      node 4 distance depth 0  - 4
      node 4 distance depth 1  - 2
      node 5 distance depth 0  - 5
      node 5 distance depth 1  - 1
    
    Without the fix, the nearest numa node to the pmem device (NUMA node 3)
    will be picked as 4. After the fix, we get the correct numa node which
    is 5.
    
    Fixes: da1115fdbd6e ("powerpc/nvdimm: Pick nearby online node if the device node is not online")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230404041433.1781804-1-aneesh.kumar@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 453b3188be89a413efd7bad4ceb1f78a4716475b
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Aug 12 18:52:23 2021 +0530

    powerpc/pseries: Add support for FORM2 associativity
    
    [ Upstream commit 1c6b5a7e74052768977855f95d6b8812f6e7772c ]
    
    PAPR interface currently supports two different ways of communicating resource
    grouping details to the OS. These are referred to as Form 0 and Form 1
    associativity grouping. Form 0 is the older format and is now considered
    deprecated. This patch adds another resource grouping named FORM2.
    
    Signed-off-by: Daniel Henrique Barboza <danielhb413@gmail.com>
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210812132223.225214-6-aneesh.kumar@linux.ibm.com
    Stable-dep-of: b277fc793daf ("powerpc/papr_scm: Update the NUMA distance table for the target node")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 498618e0a1e779f22cfa3bcf2497244bc7bace5a
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Aug 12 18:52:22 2021 +0530

    powerpc/pseries: Add a helper for form1 cpu distance
    
    [ Upstream commit ef31cb83d19c4c589d650747cd5a7e502be9f665 ]
    
    This helper is only used with the dispatch trace log collection.
    A later patch will add Form2 affinity support and this change helps
    in keeping that simpler. Also add a comment explaining we don't expect
    the code to be called with FORM0
    
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210812132223.225214-5-aneesh.kumar@linux.ibm.com
    Stable-dep-of: b277fc793daf ("powerpc/papr_scm: Update the NUMA distance table for the target node")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18ce785effd986f8e4270b4fe160eeb759c7aea6
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Aug 12 18:52:21 2021 +0530

    powerpc/pseries: Consolidate different NUMA distance update code paths
    
    [ Upstream commit 8ddc6448ec5a5ef50eaa581a7dec0e12a02850ff ]
    
    The associativity details of the newly added resourced are collected from
    the hypervisor via "ibm,configure-connector" rtas call. Update the numa
    distance details of the newly added numa node after the above call.
    
    Instead of updating NUMA distance every time we lookup a node id
    from the associativity property, add helpers that can be used
    during boot which does this only once. Also remove the distance
    update from node id lookup helpers.
    
    Currently, we duplicate parsing code for ibm,associativity and
    ibm,associativity-lookup-arrays in the kernel. The associativity array provided
    by these device tree properties are very similar and hence can use
    a helper to parse the node id and numa distance details.
    
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210812132223.225214-4-aneesh.kumar@linux.ibm.com
    Stable-dep-of: b277fc793daf ("powerpc/papr_scm: Update the NUMA distance table for the target node")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2ae0eb96bfbd03b9ff3a8901f35b506787c6c62
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Aug 12 18:52:20 2021 +0530

    powerpc/pseries: Rename TYPE1_AFFINITY to FORM1_AFFINITY
    
    [ Upstream commit 0eacd06bb8adea8dd9edb0a30144166d9f227e64 ]
    
    Also make related code cleanup that will allow adding FORM2_AFFINITY in
    later patches. No functional change in this patch.
    
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210812132223.225214-3-aneesh.kumar@linux.ibm.com
    Stable-dep-of: b277fc793daf ("powerpc/papr_scm: Update the NUMA distance table for the target node")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6d8a3a2eaab376e184846d0f8e3937644f353a1
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Aug 12 18:52:19 2021 +0530

    powerpc/pseries: rename min_common_depth to primary_domain_index
    
    [ Upstream commit 7e35ef662ca05c42dbc2f401bb76d9219dd7fd02 ]
    
    No functional change in this patch.
    
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210812132223.225214-2-aneesh.kumar@linux.ibm.com
    Stable-dep-of: b277fc793daf ("powerpc/papr_scm: Update the NUMA distance table for the target node")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5abf8af8df97d1c57ebf66ed3d8a20ac8661407f
Author: ZhaoLong Wang <wangzhaolong1@huawei.com>
Date:   Sat Mar 4 09:41:41 2023 +0800

    ubi: Fix deadlock caused by recursively holding work_sem
    
    [ Upstream commit f773f0a331d6c41733b17bebbc1b6cae12e016f5 ]
    
    During the processing of the bgt, if the sync_erase() return -EBUSY
    or some other error code in __erase_worker(),schedule_erase() called
    again lead to the down_read(ubi->work_sem) hold twice and may get
    block by down_write(ubi->work_sem) in ubi_update_fastmap(),
    which cause deadlock.
    
              ubi bgt                        other task
     do_work
      down_read(&ubi->work_sem)          ubi_update_fastmap
      erase_worker                         # Blocked by down_read
       __erase_worker                      down_write(&ubi->work_sem)
        schedule_erase
         schedule_ubi_work
          down_read(&ubi->work_sem)
    
    Fix this by changing input parameter @nested of the schedule_erase() to
    'true' to avoid recursively acquiring the down_read(&ubi->work_sem).
    
    Also, fix the incorrect comment about @nested parameter of the
    schedule_erase() because when down_write(ubi->work_sem) is held, the
    @nested is also need be true.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217093
    Fixes: 2e8f08deabbc ("ubi: Fix races around ubi_refill_pools()")
    Signed-off-by: ZhaoLong Wang <wangzhaolong1@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33611d4a8181fdac99489cc16cb05796e23d533c
Author: Lee Jones <lee.jones@linaro.org>
Date:   Mon Nov 9 18:21:55 2020 +0000

    mtd: ubi: wl: Fix a couple of kernel-doc issues
    
    [ Upstream commit ab4e4de9fd8b469823a645f05f2c142e9270b012 ]
    
    Fixes the following W=1 kernel build warning(s):
    
     drivers/mtd/ubi/wl.c:584: warning: Function parameter or member 'nested' not described in 'schedule_erase'
     drivers/mtd/ubi/wl.c:1075: warning: Excess function parameter 'shutdown' description in '__erase_worker'
    
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Miquel Raynal <miquel.raynal@bootlin.com>
    Cc: Vignesh Raghavendra <vigneshr@ti.com>
    Cc: linux-mtd@lists.infradead.org
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20201109182206.3037326-13-lee.jones@linaro.org
    Stable-dep-of: f773f0a331d6 ("ubi: Fix deadlock caused by recursively holding work_sem")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0279e82e148407feec88466990de14bcba9e12c0
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Mar 6 09:33:08 2023 +0800

    ubi: Fix failure attaching when vid_hdr offset equals to (sub)page size
    
    commit 1e020e1b96afdecd20680b5b5be2a6ffc3d27628 upstream.
    
    Following process will make ubi attaching failed since commit
    1b42b1a36fc946 ("ubi: ensure that VID header offset ... size"):
    
    ID="0xec,0xa1,0x00,0x15" # 128M 128KB 2KB
    modprobe nandsim id_bytes=$ID
    flash_eraseall /dev/mtd0
    modprobe ubi mtd="0,2048"  # set vid_hdr offset as 2048 (one page)
    (dmesg):
      ubi0 error: ubi_attach_mtd_dev [ubi]: VID header offset 2048 too large.
      UBI error: cannot attach mtd0
      UBI error: cannot initialize UBI, error -22
    
    Rework original solution, the key point is making sure
    'vid_hdr_shift + UBI_VID_HDR_SIZE < ubi->vid_hdr_alsize',
    so we should check vid_hdr_shift rather not vid_hdr_offset.
    Then, ubi still support (sub)page aligined VID header offset.
    
    Fixes: 1b42b1a36fc946 ("ubi: ensure that VID header offset ... size")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Tested-by: Nicolas Schichan <nschichan@freebox.fr>
    Tested-by: Miquel Raynal <miquel.raynal@bootlin.com> # v5.10, v4.19
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37a3cf4abc5ae4ac690554f8b6b562101d37379e
Author: Waiman Long <longman@redhat.com>
Date:   Tue Apr 11 09:35:57 2023 -0400

    cgroup/cpuset: Wake up cpuset_attach_wq tasks in cpuset_cancel_attach()
    
    commit ba9182a89626d5f83c2ee4594f55cb9c1e60f0e2 upstream.
    
    After a successful cpuset_can_attach() call which increments the
    attach_in_progress flag, either cpuset_cancel_attach() or cpuset_attach()
    will be called later. In cpuset_attach(), tasks in cpuset_attach_wq,
    if present, will be woken up at the end. That is not the case in
    cpuset_cancel_attach(). So missed wakeup is possible if the attach
    operation is somehow cancelled. Fix that by doing the wakeup in
    cpuset_cancel_attach() as well.
    
    Fixes: e44193d39e8d ("cpuset: let hotplug propagation work wait for task attaching")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Cc: stable@vger.kernel.org # v3.11+
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10bda0ec316020ae6d8d389d0a48f901826f8d59
Author: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
Date:   Wed Mar 29 22:58:59 2023 +0530

    x86/PCI: Add quirk for AMD XHCI controller that loses MSI-X state in D3hot
    
    commit f195fc1e9715ba826c3b62d58038f760f66a4fe9 upstream.
    
    The AMD [1022:15b8] USB controller loses some internal functional MSI-X
    context when transitioning from D0 to D3hot. BIOS normally traps D0->D3hot
    and D3hot->D0 transitions so it can save and restore that internal context,
    but some firmware in the field can't do this because it fails to clear the
    AMD_15B8_RCC_DEV2_EPF0_STRAP2 NO_SOFT_RESET bit.
    
    Clear AMD_15B8_RCC_DEV2_EPF0_STRAP2 NO_SOFT_RESET bit before USB controller
    initialization during boot.
    
    Link: https://lore.kernel.org/linux-usb/Y%2Fz9GdHjPyF2rNG3@glanzmann.de/T/#u
    Link: https://lore.kernel.org/r/20230329172859.699743-1-Basavaraj.Natikar@amd.com
    Reported-by: Thomas Glanzmann <thomas@glanzmann.de>
    Tested-by: Thomas Glanzmann <thomas@glanzmann.de>
    Signed-off-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 176d7345b89ced72020a313bfa4e7f345d1c3aed
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Tue Apr 4 21:23:42 2023 +0200

    scsi: ses: Handle enclosure with just a primary component gracefully
    
    commit c8e22b7a1694bb8d025ea636816472739d859145 upstream.
    
    This reverts commit 3fe97ff3d949 ("scsi: ses: Don't attach if enclosure
    has no components") and introduces proper handling of case where there are
    no detected secondary components, but primary component (enumerated in
    num_enclosures) does exist. That fix was originally proposed by Ding Hui
    <dinghui@sangfor.com.cn>.
    
    Completely ignoring devices that have one primary enclosure and no
    secondary one results in ses_intf_add() bailing completely
    
            scsi 2:0:0:254: enclosure has no enumerated components
            scsi 2:0:0:254: Failed to bind enclosure -12ven in valid configurations such
    
    even on valid configurations with 1 primary and 0 secondary enclosures as
    below:
    
            # sg_ses /dev/sg0
              3PARdata  SES               3321
            Supported diagnostic pages:
              Supported Diagnostic Pages [sdp] [0x0]
              Configuration (SES) [cf] [0x1]
              Short Enclosure Status (SES) [ses] [0x8]
            # sg_ses -p cf /dev/sg0
              3PARdata  SES               3321
            Configuration diagnostic page:
              number of secondary subenclosures: 0
              generation code: 0x0
              enclosure descriptor list
                Subenclosure identifier: 0 [primary]
                  relative ES process id: 0, number of ES processes: 1
                  number of type descriptor headers: 1
                  enclosure logical identifier (hex): 20000002ac02068d
                  enclosure vendor: 3PARdata  product: VV                rev: 3321
              type descriptor header and text list
                Element type: Unspecified, subenclosure id: 0
                  number of possible elements: 1
    
    The changelog for the original fix follows
    
    =====
    We can get a crash when disconnecting the iSCSI session,
    the call trace like this:
    
      [ffff00002a00fb70] kfree at ffff00000830e224
      [ffff00002a00fba0] ses_intf_remove at ffff000001f200e4
      [ffff00002a00fbd0] device_del at ffff0000086b6a98
      [ffff00002a00fc50] device_unregister at ffff0000086b6d58
      [ffff00002a00fc70] __scsi_remove_device at ffff00000870608c
      [ffff00002a00fca0] scsi_remove_device at ffff000008706134
      [ffff00002a00fcc0] __scsi_remove_target at ffff0000087062e4
      [ffff00002a00fd10] scsi_remove_target at ffff0000087064c0
      [ffff00002a00fd70] __iscsi_unbind_session at ffff000001c872c4
      [ffff00002a00fdb0] process_one_work at ffff00000810f35c
      [ffff00002a00fe00] worker_thread at ffff00000810f648
      [ffff00002a00fe70] kthread at ffff000008116e98
    
    In ses_intf_add, components count could be 0, and kcalloc 0 size scomp,
    but not saved in edev->component[i].scratch
    
    In this situation, edev->component[0].scratch is an invalid pointer,
    when kfree it in ses_intf_remove_enclosure, a crash like above would happen
    The call trace also could be other random cases when kfree cannot catch
    the invalid pointer
    
    We should not use edev->component[] array when the components count is 0
    We also need check index when use edev->component[] array in
    ses_enclosure_data_process
    =====
    
    Reported-by: Michal Kolar <mich.k@seznam.cz>
    Originally-by: Ding Hui <dinghui@sangfor.com.cn>
    Cc: stable@vger.kernel.org
    Fixes: 3fe97ff3d949 ("scsi: ses: Don't attach if enclosure has no components")
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Link: https://lore.kernel.org/r/nycvar.YFH.7.76.2304042122270.29760@cbobk.fhfr.pm
    Tested-by: Michal Kolar <mich.k@seznam.cz>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf22c98bcbf8fc0660a1f09fe324fd4f45ae179a
Author: Ivan Bornyakov <i.bornyakov@metrotek.ru>
Date:   Thu Apr 6 16:08:32 2023 +0300

    net: sfp: initialize sfp->i2c_block_size at sfp allocation
    
    commit 813c2dd78618f108fdcf9cd726ea90f081ee2881 upstream.
    
    sfp->i2c_block_size is initialized at SFP module insertion in
    sfp_sm_mod_probe(). Because of that, if SFP module was never inserted
    since boot, sfp_read() call will lead to zero-length I2C read attempt,
    and not all I2C controllers are happy with zero-length reads.
    
    One way to issue sfp_read() on empty SFP cage is to execute ethtool -m.
    If SFP module was never plugged since boot, there will be a zero-length
    I2C read attempt.
    
      # ethtool -m xge0
      i2c i2c-3: adapter quirk: no zero length (addr 0x0050, size 0, read)
      Cannot get Module EEPROM data: Operation not supported
    
    If SFP module was plugged then removed at least once,
    sfp->i2c_block_size will be initialized and ethtool -m will fail with
    different exit code and without I2C error
    
      # ethtool -m xge0
      Cannot get Module EEPROM data: Remote I/O error
    
    Fix this by initializing sfp->i2_block_size at struct sfp allocation
    stage so no wild sfp_read() could issue zero-length I2C read.
    
    Signed-off-by: Ivan Bornyakov <i.bornyakov@metrotek.ru>
    Fixes: 0d035bed2a4a ("net: sfp: VSOL V2801F / CarlitoxxPro CPGOS03-0490 v2.0 workaround")
    Cc: stable@vger.kernel.org
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a4835b8ede001ce88a34f6f0295f4ece2212174
Author: Mathis Salmen <mathis.salmen@matsal.de>
Date:   Thu Apr 6 12:11:31 2023 +0200

    riscv: add icache flush for nommu sigreturn trampoline
    
    commit 8d736482749f6d350892ef83a7a11d43cd49981e upstream.
    
    In a NOMMU kernel, sigreturn trampolines are generated on the user
    stack by setup_rt_frame. Currently, these trampolines are not instruction
    fenced, thus their visibility to ifetch is not guaranteed.
    
    This patch adds a flush_icache_range in setup_rt_frame to fix this
    problem.
    
    Signed-off-by: Mathis Salmen <mathis.salmen@matsal.de>
    Fixes: 6bd33e1ece52 ("riscv: add nommu support")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230406101130.82304-1-mathis.salmen@matsal.de
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c76e79e526cdfc71a73ce20d5e228da00139cb27
Author: Robbie Harwood <rharwood@redhat.com>
Date:   Mon Feb 20 12:12:54 2023 -0500

    asymmetric_keys: log on fatal failures in PE/pkcs7
    
    [ Upstream commit 3584c1dbfffdabf8e3dc1dd25748bb38dd01cd43 ]
    
    These particular errors can be encountered while trying to kexec when
    secureboot lockdown is in place.  Without this change, even with a
    signed debug build, one still needs to reboot the machine to add the
    appropriate dyndbg parameters (since lockdown blocks debugfs).
    
    Accordingly, upgrade all pr_debug() before fatal error into pr_warn().
    
    Signed-off-by: Robbie Harwood <rharwood@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Jarkko Sakkinen <jarkko@kernel.org>
    cc: Eric Biederman <ebiederm@xmission.com>
    cc: Herbert Xu <herbert@gondor.apana.org.au>
    cc: keyrings@vger.kernel.org
    cc: linux-crypto@vger.kernel.org
    cc: kexec@lists.infradead.org
    Link: https://lore.kernel.org/r/20230220171254.592347-3-rharwood@redhat.com/ # v2
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5de2e1f5e26f340f314884d2b68d21a70e6d0160
Author: Robbie Harwood <rharwood@redhat.com>
Date:   Mon Feb 20 12:12:53 2023 -0500

    verify_pefile: relax wrapper length check
    
    [ Upstream commit 4fc5c74dde69a7eda172514aaeb5a7df3600adb3 ]
    
    The PE Format Specification (section "The Attribute Certificate Table
    (Image Only)") states that `dwLength` is to be rounded up to 8-byte
    alignment when used for traversal.  Therefore, the field is not required
    to be an 8-byte multiple in the first place.
    
    Accordingly, pesign has not performed this alignment since version
    0.110.  This causes kexec failure on pesign'd binaries with "PEFILE:
    Signature wrapper len wrong".  Update the comment and relax the check.
    
    Signed-off-by: Robbie Harwood <rharwood@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Jarkko Sakkinen <jarkko@kernel.org>
    cc: Eric Biederman <ebiederm@xmission.com>
    cc: Herbert Xu <herbert@gondor.apana.org.au>
    cc: keyrings@vger.kernel.org
    cc: linux-crypto@vger.kernel.org
    cc: kexec@lists.infradead.org
    Link: https://learn.microsoft.com/en-us/windows/win32/debug/pe-format#the-attribute-certificate-table-image-only
    Link: https://github.com/rhboot/pesign
    Link: https://lore.kernel.org/r/20230220171254.592347-2-rharwood@redhat.com/ # v2
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4b9f0bf91a30cc3d6745c163e98b6be53762143
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Mar 1 10:52:18 2023 +0100

    drm: panel-orientation-quirks: Add quirk for Lenovo Yoga Book X90F
    
    [ Upstream commit 03aecb1acbcd7a660f97d645ca6c09d9de27ff9d ]
    
    Like the Windows Lenovo Yoga Book X91F/L the Android Lenovo Yoga Book
    X90F/L has a portrait 1200x1920 screen used in landscape mode,
    add a quirk for this.
    
    When the quirk for the X91F/L was initially added it was written to
    also apply to the X90F/L but this does not work because the Android
    version of the Yoga Book uses completely different DMI strings.
    Also adjust the X91F/L quirk to reflect that it only applies to
    the X91F/L models.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230301095218.28457-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f0ee9ed54e1eb2aa40f1d8f95d7e17a12682324
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Mar 14 13:31:03 2023 +0100

    efi: sysfb_efi: Add quirk for Lenovo Yoga Book X91F/L
    
    [ Upstream commit 5ed213dd64681f84a01ceaa82fb336cf7d59ddcf ]
    
    Another Lenovo convertable which reports a landscape resolution of
    1920x1200 with a pitch of (1920 * 4) bytes, while the actual framebuffer
    has a resolution of 1200x1920 with a pitch of (1200 * 4) bytes.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1f80b4dfad966638f5c65ae9f98d599c4be8cf2
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jan 30 16:32:46 2023 +0100

    i2c: imx-lpi2c: clean rx/tx buffers upon new message
    
    [ Upstream commit 987dd36c0141f6ab9f0fbf14d6b2ec3342dedb2f ]
    
    When start sending a new message clear the Rx & Tx buffer pointers in
    order to avoid using stale pointers.
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Tested-by: Emanuele Ghidoli <emanuele.ghidoli@toradex.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81c30f89b9c3293b5b53e96b97fd71bc2d052c57
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sun Mar 12 14:25:23 2023 +0100

    wifi: mwifiex: mark OF related data as maybe unused
    
    [ Upstream commit 139f6973bf140c65d4d1d4bde5485badb4454d7a ]
    
    The driver can be compile tested with !CONFIG_OF making certain data
    unused:
    
      drivers/net/wireless/marvell/mwifiex/sdio.c:498:34: error: ‘mwifiex_sdio_of_match_table’ defined but not used [-Werror=unused-const-variable=]
      drivers/net/wireless/marvell/mwifiex/pcie.c:175:34: error: ‘mwifiex_pcie_of_match_table’ defined but not used [-Werror=unused-const-variable=]
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20230312132523.352182-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab39582f3081540c2bf5b21e9eeb441b1bf2171e
Author: Grant Grundler <grundler@chromium.org>
Date:   Mon Dec 12 13:38:57 2022 -0800

    power: supply: cros_usbpd: reclassify "default case!" as debug
    
    [ Upstream commit 14c76b2e75bca4d96e2b85a0c12aa43e84fe3f74 ]
    
    This doesn't need to be printed every second as an error:
    ...
    <3>[17438.628385] cros-usbpd-charger cros-usbpd-charger.3.auto: Port 1: default case!
    <3>[17439.634176] cros-usbpd-charger cros-usbpd-charger.3.auto: Port 1: default case!
    <3>[17440.640298] cros-usbpd-charger cros-usbpd-charger.3.auto: Port 1: default case!
    ...
    
    Reduce priority from ERROR to DEBUG.
    
    Signed-off-by: Grant Grundler <grundler@chromium.org>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6de0d0699f5c732e94540b5af41ad841f3a7fe83
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Dec 12 13:15:00 2022 -0800

    libbpf: Fix single-line struct definition output in btf_dump
    
    [ Upstream commit 872aec4b5f635d94111d48ec3c57fbe078d64e7d ]
    
    btf_dump APIs emit unnecessary tabs when emitting struct/union
    definition that fits on the single line. Before this patch we'd get:
    
    struct blah {<tab>};
    
    This patch fixes this and makes sure that we get more natural:
    
    struct blah {};
    
    Fixes: 44a726c3f23c ("bpftool: Print newline before '}' for struct with padding only fields")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20221212211505.558851-2-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bec9da233f779e7b6954ee07ad7e6d8f2a4dd83
Author: Roman Gushchin <roman.gushchin@linux.dev>
Date:   Wed Apr 12 16:21:44 2023 -0700

    net: macb: fix a memory corruption in extended buffer descriptor mode
    
    [ Upstream commit e8b74453555872851bdd7ea43a7c0ec39659834f ]
    
    For quite some time we were chasing a bug which looked like a sudden
    permanent failure of networking and mmc on some of our devices.
    The bug was very sensitive to any software changes and even more to
    any kernel debug options.
    
    Finally we got a setup where the problem was reproducible with
    CONFIG_DMA_API_DEBUG=y and it revealed the issue with the rx dma:
    
    [   16.992082] ------------[ cut here ]------------
    [   16.996779] DMA-API: macb ff0b0000.ethernet: device driver tries to free DMA memory it has not allocated [device address=0x0000000875e3e244] [size=1536 bytes]
    [   17.011049] WARNING: CPU: 0 PID: 85 at kernel/dma/debug.c:1011 check_unmap+0x6a0/0x900
    [   17.018977] Modules linked in: xxxxx
    [   17.038823] CPU: 0 PID: 85 Comm: irq/55-8000f000 Not tainted 5.4.0 #28
    [   17.045345] Hardware name: xxxxx
    [   17.049528] pstate: 60000005 (nZCv daif -PAN -UAO)
    [   17.054322] pc : check_unmap+0x6a0/0x900
    [   17.058243] lr : check_unmap+0x6a0/0x900
    [   17.062163] sp : ffffffc010003c40
    [   17.065470] x29: ffffffc010003c40 x28: 000000004000c03c
    [   17.070783] x27: ffffffc010da7048 x26: ffffff8878e38800
    [   17.076095] x25: ffffff8879d22810 x24: ffffffc010003cc8
    [   17.081407] x23: 0000000000000000 x22: ffffffc010a08750
    [   17.086719] x21: ffffff8878e3c7c0 x20: ffffffc010acb000
    [   17.092032] x19: 0000000875e3e244 x18: 0000000000000010
    [   17.097343] x17: 0000000000000000 x16: 0000000000000000
    [   17.102647] x15: ffffff8879e4a988 x14: 0720072007200720
    [   17.107959] x13: 0720072007200720 x12: 0720072007200720
    [   17.113261] x11: 0720072007200720 x10: 0720072007200720
    [   17.118565] x9 : 0720072007200720 x8 : 000000000000022d
    [   17.123869] x7 : 0000000000000015 x6 : 0000000000000098
    [   17.129173] x5 : 0000000000000000 x4 : 0000000000000000
    [   17.134475] x3 : 00000000ffffffff x2 : ffffffc010a1d370
    [   17.139778] x1 : b420c9d75d27bb00 x0 : 0000000000000000
    [   17.145082] Call trace:
    [   17.147524]  check_unmap+0x6a0/0x900
    [   17.151091]  debug_dma_unmap_page+0x88/0x90
    [   17.155266]  gem_rx+0x114/0x2f0
    [   17.158396]  macb_poll+0x58/0x100
    [   17.161705]  net_rx_action+0x118/0x400
    [   17.165445]  __do_softirq+0x138/0x36c
    [   17.169100]  irq_exit+0x98/0xc0
    [   17.172234]  __handle_domain_irq+0x64/0xc0
    [   17.176320]  gic_handle_irq+0x5c/0xc0
    [   17.179974]  el1_irq+0xb8/0x140
    [   17.183109]  xiic_process+0x5c/0xe30
    [   17.186677]  irq_thread_fn+0x28/0x90
    [   17.190244]  irq_thread+0x208/0x2a0
    [   17.193724]  kthread+0x130/0x140
    [   17.196945]  ret_from_fork+0x10/0x20
    [   17.200510] ---[ end trace 7240980785f81d6f ]---
    
    [  237.021490] ------------[ cut here ]------------
    [  237.026129] DMA-API: exceeded 7 overlapping mappings of cacheline 0x0000000021d79e7b
    [  237.033886] WARNING: CPU: 0 PID: 0 at kernel/dma/debug.c:499 add_dma_entry+0x214/0x240
    [  237.041802] Modules linked in: xxxxx
    [  237.061637] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        W         5.4.0 #28
    [  237.068941] Hardware name: xxxxx
    [  237.073116] pstate: 80000085 (Nzcv daIf -PAN -UAO)
    [  237.077900] pc : add_dma_entry+0x214/0x240
    [  237.081986] lr : add_dma_entry+0x214/0x240
    [  237.086072] sp : ffffffc010003c30
    [  237.089379] x29: ffffffc010003c30 x28: ffffff8878a0be00
    [  237.094683] x27: 0000000000000180 x26: ffffff8878e387c0
    [  237.099987] x25: 0000000000000002 x24: 0000000000000000
    [  237.105290] x23: 000000000000003b x22: ffffffc010a0fa00
    [  237.110594] x21: 0000000021d79e7b x20: ffffffc010abe600
    [  237.115897] x19: 00000000ffffffef x18: 0000000000000010
    [  237.121201] x17: 0000000000000000 x16: 0000000000000000
    [  237.126504] x15: ffffffc010a0fdc8 x14: 0720072007200720
    [  237.131807] x13: 0720072007200720 x12: 0720072007200720
    [  237.137111] x11: 0720072007200720 x10: 0720072007200720
    [  237.142415] x9 : 0720072007200720 x8 : 0000000000000259
    [  237.147718] x7 : 0000000000000001 x6 : 0000000000000000
    [  237.153022] x5 : ffffffc010003a20 x4 : 0000000000000001
    [  237.158325] x3 : 0000000000000006 x2 : 0000000000000007
    [  237.163628] x1 : 8ac721b3a7dc1c00 x0 : 0000000000000000
    [  237.168932] Call trace:
    [  237.171373]  add_dma_entry+0x214/0x240
    [  237.175115]  debug_dma_map_page+0xf8/0x120
    [  237.179203]  gem_rx_refill+0x190/0x280
    [  237.182942]  gem_rx+0x224/0x2f0
    [  237.186075]  macb_poll+0x58/0x100
    [  237.189384]  net_rx_action+0x118/0x400
    [  237.193125]  __do_softirq+0x138/0x36c
    [  237.196780]  irq_exit+0x98/0xc0
    [  237.199914]  __handle_domain_irq+0x64/0xc0
    [  237.204000]  gic_handle_irq+0x5c/0xc0
    [  237.207654]  el1_irq+0xb8/0x140
    [  237.210789]  arch_cpu_idle+0x40/0x200
    [  237.214444]  default_idle_call+0x18/0x30
    [  237.218359]  do_idle+0x200/0x280
    [  237.221578]  cpu_startup_entry+0x20/0x30
    [  237.225493]  rest_init+0xe4/0xf0
    [  237.228713]  arch_call_rest_init+0xc/0x14
    [  237.232714]  start_kernel+0x47c/0x4a8
    [  237.236367] ---[ end trace 7240980785f81d70 ]---
    
    Lars was fast to find an explanation: according to the datasheet
    bit 2 of the rx buffer descriptor entry has a different meaning in the
    extended mode:
      Address [2] of beginning of buffer, or
      in extended buffer descriptor mode (DMA configuration register [28] = 1),
      indicates a valid timestamp in the buffer descriptor entry.
    
    The macb driver didn't mask this bit while getting an address and it
    eventually caused a memory corruption and a dma failure.
    
    The problem is resolved by explicitly clearing the problematic bit
    if hw timestamping is used.
    
    Fixes: 7b4296148066 ("net: macb: Add support for PTP timestamps in DMA descriptors")
    Signed-off-by: Roman Gushchin <roman.gushchin@linux.dev>
    Co-developed-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
    Link: https://lore.kernel.org/r/20230412232144.770336-1-roman.gushchin@linux.dev
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d8c844b337d245c64158138828644c99f28d28c
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 12 13:03:08 2023 +0000

    udp6: fix potential access to stale information
    
    [ Upstream commit 1c5950fc6fe996235f1d18539b9c6b64b597f50f ]
    
    lena wang reported an issue caused by udpv6_sendmsg()
    mangling msg->msg_name and msg->msg_namelen, which
    are later read from ____sys_sendmsg() :
    
            /*
             * If this is sendmmsg() and sending to current destination address was
             * successful, remember it.
             */
            if (used_address && err >= 0) {
                    used_address->name_len = msg_sys->msg_namelen;
                    if (msg_sys->msg_name)
                            memcpy(&used_address->name, msg_sys->msg_name,
                                   used_address->name_len);
            }
    
    udpv6_sendmsg() wants to pretend the remote address family
    is AF_INET in order to call udp_sendmsg().
    
    A fix would be to modify the address in-place, instead
    of using a local variable, but this could have other side effects.
    
    Instead, restore initial values before we return from udpv6_sendmsg().
    
    Fixes: c71d8ebe7a44 ("net: Fix security_socket_sendmsg() bypass problem.")
    Reported-by: lena wang <lena.wang@mediatek.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Maciej Żenczykowski <maze@google.com>
    Link: https://lore.kernel.org/r/20230412130308.1202254-1-edumazet@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1b9b3191697a80aca8e247320eba46f24d41d18
Author: Saravanan Vajravel <saravanan.vajravel@broadcom.com>
Date:   Fri Mar 31 23:34:24 2023 -0700

    RDMA/core: Fix GID entry ref leak when create_ah fails
    
    [ Upstream commit aca3b0fa3d04b40c96934d86cc224cccfa7ea8e0 ]
    
    If AH create request fails, release sgid_attr to avoid GID entry
    referrence leak reported while releasing GID table
    
    Fixes: 1a1f460ff151 ("RDMA: Hold the sgid_attr inside the struct ib_ah/qp")
    Link: https://lore.kernel.org/r/20230401063424.342204-1-saravanan.vajravel@broadcom.com
    Reviewed-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Signed-off-by: Saravanan Vajravel <saravanan.vajravel@broadcom.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79b28f42214a3d0d6a8c514db3602260bd5d6cb5
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Apr 10 15:43:30 2023 -0400

    sctp: fix a potential overflow in sctp_ifwdtsn_skip
    
    [ Upstream commit 32832a2caf82663870126c5186cf8f86c8b2a649 ]
    
    Currently, when traversing ifwdtsn skips with _sctp_walk_ifwdtsn, it only
    checks the pos against the end of the chunk. However, the data left for
    the last pos may be < sizeof(struct sctp_ifwdtsn_skip), and dereference
    it as struct sctp_ifwdtsn_skip may cause coverflow.
    
    This patch fixes it by checking the pos against "the end of the chunk -
    sizeof(struct sctp_ifwdtsn_skip)" in sctp_ifwdtsn_skip, similar to
    sctp_fwdtsn_skip.
    
    Fixes: 0fc2ea922c8a ("sctp: implement validate_ftsn for sctp_stream_interleave")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/2a71bffcd80b4f2c61fac6d344bb2f11c8fd74f7.1681155810.git.lucien.xin@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3814d211ff13ee35f2d9437439a6c7df58524137
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Mon Apr 10 09:23:52 2023 +0800

    net: qrtr: Fix an uninit variable access bug in qrtr_tx_resume()
    
    [ Upstream commit 6417070918de3bcdbe0646e7256dae58fd8083ba ]
    
    Syzbot reported a bug as following:
    
    =====================================================
    BUG: KMSAN: uninit-value in qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
     qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
     qrtr_endpoint_post+0xf85/0x11b0 net/qrtr/af_qrtr.c:519
     qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
     call_write_iter include/linux/fs.h:2189 [inline]
     aio_write+0x63a/0x950 fs/aio.c:1600
     io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
     __do_sys_io_submit fs/aio.c:2078 [inline]
     __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
     __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:766 [inline]
     slab_alloc_node mm/slub.c:3452 [inline]
     __kmem_cache_alloc_node+0x71f/0xce0 mm/slub.c:3491
     __do_kmalloc_node mm/slab_common.c:967 [inline]
     __kmalloc_node_track_caller+0x114/0x3b0 mm/slab_common.c:988
     kmalloc_reserve net/core/skbuff.c:492 [inline]
     __alloc_skb+0x3af/0x8f0 net/core/skbuff.c:565
     __netdev_alloc_skb+0x120/0x7d0 net/core/skbuff.c:630
     qrtr_endpoint_post+0xbd/0x11b0 net/qrtr/af_qrtr.c:446
     qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
     call_write_iter include/linux/fs.h:2189 [inline]
     aio_write+0x63a/0x950 fs/aio.c:1600
     io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
     __do_sys_io_submit fs/aio.c:2078 [inline]
     __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
     __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    It is because that skb->len requires at least sizeof(struct qrtr_ctrl_pkt)
    in qrtr_tx_resume(). And skb->len equals to size in qrtr_endpoint_post().
    But size is less than sizeof(struct qrtr_ctrl_pkt) when qrtr_cb->type
    equals to QRTR_TYPE_RESUME_TX in qrtr_endpoint_post() under the syzbot
    scenario. This triggers the uninit variable access bug.
    
    Add size check when qrtr_cb->type equals to QRTR_TYPE_RESUME_TX in
    qrtr_endpoint_post() to fix the bug.
    
    Fixes: 5fdeb0d372ab ("net: qrtr: Implement outgoing flow control")
    Reported-by: syzbot+4436c9630a45820fda76@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=c14607f0963d27d5a3d5f4c8639b500909e43540
    Suggested-by: Manivannan Sadhasivam <mani@kernel.org>
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230410012352.3997823-1-william.xuanziyang@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dad92d8ada07f1a700d7ac83358e1682d6f98f9e
Author: Denis Plotnikov <den-plotnikov@yandex-team.ru>
Date:   Fri Apr 7 10:18:49 2023 +0300

    qlcnic: check pci_reset_function result
    
    [ Upstream commit 7573099e10ca69c3be33995c1fcd0d241226816d ]
    
    Static code analyzer complains to unchecked return value.
    The result of pci_reset_function() is unchecked.
    Despite, the issue is on the FLR supported code path and in that
    case reset can be done with pcie_flr(), the patch uses less invasive
    approach by adding the result check of pci_reset_function().
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 7e2cf4feba05 ("qlcnic: change driver hardware interface mechanism")
    Signed-off-by: Denis Plotnikov <den-plotnikov@yandex-team.ru>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a519731ece83d0884fa12595206f1d12f7fe4e5
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Dec 26 17:34:16 2021 +0100

    drm/armada: Fix a potential double free in an error handling path
    
    [ Upstream commit b89ce1177d42d5c124e83f3858818cd4e6a2c46f ]
    
    'priv' is a managed resource, so there is no need to free it explicitly or
    there will be a double free().
    
    Fixes: 90ad200b4cbc ("drm/armada: Use devm_drm_dev_alloc")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/c4f3c9207a9fce35cb6dd2cc60e755275961588a.1640536364.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a069d4d98cd271a70b561cb757485efe5f5e5a7e
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Apr 6 14:34:50 2023 +0800

    tcp: restrict net.ipv4.tcp_app_win
    
    [ Upstream commit dc5110c2d959c1707e12df5f792f41d90614adaa ]
    
    UBSAN: shift-out-of-bounds in net/ipv4/tcp_input.c:555:23
    shift exponent 255 is too large for 32-bit type 'int'
    CPU: 1 PID: 7907 Comm: ssh Not tainted 6.3.0-rc4-00161-g62bad54b26db-dirty #206
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
    Call Trace:
     <TASK>
     dump_stack_lvl+0x136/0x150
     __ubsan_handle_shift_out_of_bounds+0x21f/0x5a0
     tcp_init_transfer.cold+0x3a/0xb9
     tcp_finish_connect+0x1d0/0x620
     tcp_rcv_state_process+0xd78/0x4d60
     tcp_v4_do_rcv+0x33d/0x9d0
     __release_sock+0x133/0x3b0
     release_sock+0x58/0x1b0
    
    'maxwin' is int, shifting int for 32 or more bits is undefined behaviour.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc9f9a49f5b3b7bd70e8f7edd10b4f9be196aff3
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 25 11:08:17 2021 -0700

    tcp: convert elligible sysctls to u8
    
    [ Upstream commit 4ecc1baf362c5df2dcabe242511e38ee28486545 ]
    
    Many tcp sysctls are either bools or small ints that can fit into u8.
    
    Reducing space taken by sysctls can save few cache line misses
    when sending/receiving data while cpu caches are empty,
    for example after cpu idle period.
    
    This is hard to measure with typical network performance tests,
    but after this patch, struct netns_ipv4 has shrunk
    by three cache lines.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: dc5110c2d959 ("tcp: restrict net.ipv4.tcp_app_win")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f662a0786dfd404db0b6595302500156719eeaa3
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 25 11:08:14 2021 -0700

    ipv4: shrink netns_ipv4 with sysctl conversions
    
    [ Upstream commit 4b6bbf17d4e1939afa72821879fc033d725e9491 ]
    
    These sysctls that can fit in one byte instead of one int
    are converted to save space and thus reduce cache line misses.
    
     - icmp_echo_ignore_all, icmp_echo_ignore_broadcasts,
     - icmp_ignore_bogus_error_responses, icmp_errors_use_inbound_ifaddr
     - tcp_ecn, tcp_ecn_fallback
     - ip_default_ttl, ip_no_pmtu_disc, ip_fwd_use_pmtu
     - ip_nonlocal_bind, ip_autobind_reuse
     - ip_dynaddr, ip_early_demux, raw_l3mdev_accept
     - nexthop_compat_mode, fwmark_reflect
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: dc5110c2d959 ("tcp: restrict net.ipv4.tcp_app_win")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 389dab6142d742f91010f38de0f1f2f440b97e1b
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 25 11:08:13 2021 -0700

    sysctl: add proc_dou8vec_minmax()
    
    [ Upstream commit cb9444130662c6c13022579c861098f212db2562 ]
    
    Networking has many sysctls that could fit in one u8.
    
    This patch adds proc_dou8vec_minmax() for this purpose.
    
    Note that the .extra1 and .extra2 fields are pointing
    to integers, because it makes conversions easier.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: dc5110c2d959 ("tcp: restrict net.ipv4.tcp_app_win")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a1fdb35459d5738cd362c8bb33c2ba743c29c17
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Wed Apr 5 23:31:18 2023 -0700

    niu: Fix missing unwind goto in niu_alloc_channels()
    
    [ Upstream commit 8ce07be703456acb00e83d99f3b8036252c33b02 ]
    
    Smatch reports: drivers/net/ethernet/sun/niu.c:4525
            niu_alloc_channels() warn: missing unwind goto?
    
    If niu_rbr_fill() fails, then we are directly returning 'err' without
    freeing the channels.
    
    Fix this by changing direct return to a goto 'out_err'.
    
    Fixes: a3138df9f20e ("[NIU]: Add Sun Neptune ethernet driver.")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9266e939d76279d8710196d86215ba2be6345041
Author: Zheng Wang <zyytlz.wz@163.com>
Date:   Mon Mar 13 22:43:25 2023 +0800

    9p/xen : Fix use after free bug in xen_9pfs_front_remove due to race condition
    
    [ Upstream commit ea4f1009408efb4989a0f139b70fb338e7f687d0 ]
    
    In xen_9pfs_front_probe, it calls xen_9pfs_front_alloc_dataring
    to init priv->rings and bound &ring->work with p9_xen_response.
    
    When it calls xen_9pfs_front_event_handler to handle IRQ requests,
    it will finally call schedule_work to start the work.
    
    When we call xen_9pfs_front_remove to remove the driver, there
    may be a sequence as follows:
    
    Fix it by finishing the work before cleanup in xen_9pfs_front_free.
    
    Note that, this bug is found by static analysis, which might be
    false positive.
    
    CPU0                  CPU1
    
                         |p9_xen_response
    xen_9pfs_front_remove|
      xen_9pfs_front_free|
    kfree(priv)          |
    //free priv          |
                         |p9_tag_lookup
                         |//use priv->client
    
    Fixes: 71ebd71921e4 ("xen/9pfs: connect to the backend")
    Signed-off-by: Zheng Wang <zyytlz.wz@163.com>
    Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
    Signed-off-by: Eric Van Hensbergen <ericvh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae11498851423d6de27aebfe12a5ee85060ab1d5
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Mon Mar 20 12:59:55 2023 +0200

    RDMA/cma: Allow UD qp_type to join multicast only
    
    [ Upstream commit 58e84f6b3e84e46524b7e5a916b53c1ad798bc8f ]
    
    As for multicast:
    - The SIDR is the only mode that makes sense;
    - Besides PS_UDP, other port spaces like PS_IB is also allowed, as it is
      UD compatible. In this case qkey also needs to be set [1].
    
    This patch allows only UD qp_type to join multicast, and set qkey to
    default if it's not set, to fix an uninit-value error: the ib->rec.qkey
    field is accessed without being initialized.
    
    =====================================================
    BUG: KMSAN: uninit-value in cma_set_qkey drivers/infiniband/core/cma.c:510 [inline]
    BUG: KMSAN: uninit-value in cma_make_mc_event+0xb73/0xe00 drivers/infiniband/core/cma.c:4570
     cma_set_qkey drivers/infiniband/core/cma.c:510 [inline]
     cma_make_mc_event+0xb73/0xe00 drivers/infiniband/core/cma.c:4570
     cma_iboe_join_multicast drivers/infiniband/core/cma.c:4782 [inline]
     rdma_join_multicast+0x2b83/0x30a0 drivers/infiniband/core/cma.c:4814
     ucma_process_join+0xa76/0xf60 drivers/infiniband/core/ucma.c:1479
     ucma_join_multicast+0x1e3/0x250 drivers/infiniband/core/ucma.c:1546
     ucma_write+0x639/0x6d0 drivers/infiniband/core/ucma.c:1732
     vfs_write+0x8ce/0x2030 fs/read_write.c:588
     ksys_write+0x28c/0x520 fs/read_write.c:643
     __do_sys_write fs/read_write.c:655 [inline]
     __se_sys_write fs/read_write.c:652 [inline]
     __ia32_sys_write+0xdb/0x120 fs/read_write.c:652
     do_syscall_32_irqs_on arch/x86/entry/common.c:114 [inline]
     __do_fast_syscall_32+0x96/0xf0 arch/x86/entry/common.c:180
     do_fast_syscall_32+0x34/0x70 arch/x86/entry/common.c:205
     do_SYSENTER_32+0x1b/0x20 arch/x86/entry/common.c:248
     entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    
    Local variable ib.i created at:
    cma_iboe_join_multicast drivers/infiniband/core/cma.c:4737 [inline]
    rdma_join_multicast+0x586/0x30a0 drivers/infiniband/core/cma.c:4814
    ucma_process_join+0xa76/0xf60 drivers/infiniband/core/ucma.c:1479
    
    CPU: 0 PID: 29874 Comm: syz-executor.3 Not tainted 5.16.0-rc3-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    =====================================================
    
    [1] https://lore.kernel.org/linux-rdma/20220117183832.GD84788@nvidia.com/
    
    Fixes: b5de0c60cc30 ("RDMA/cma: Fix use after free race in roce multicast join")
    Reported-by: syzbot+8fcbb77276d43cc8b693@syzkaller.appspotmail.com
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Link: https://lore.kernel.org/r/58a4a98323b5e6b1282e83f6b76960d06e43b9fa.1679309909.git.leon@kernel.org
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e567fd2961135f45c82dfca3867c49ede3cdd85
Author: Maher Sanalla <msanalla@nvidia.com>
Date:   Thu Mar 16 15:40:49 2023 +0200

    IB/mlx5: Add support for 400G_8X lane speed
    
    [ Upstream commit 88c9483faf15ada14eca82714114656893063458 ]
    
    Currently, when driver queries PTYS to report which link speed is being
    used on its RoCE ports, it does not check the case of having 400Gbps
    transmitted over 8 lanes. Thus it fails to report the said speed and
    instead it defaults to report 10G over 4 lanes.
    
    Add a check for the said speed when querying PTYS and report it back
    correctly when needed.
    
    Fixes: 08e8676f1607 ("IB/mlx5: Add support for 50Gbps per lane link modes")
    Signed-off-by: Maher Sanalla <msanalla@nvidia.com>
    Reviewed-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Saeed Mahameed <saeedm@nvidia.com>
    Link: https://lore.kernel.org/r/ec9040548d119d22557d6a4b4070d6f421701fd4.1678973994.git.leon@kernel.org
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1d2fb5d13c98acf9d3398e77affeae9fda3e5fa
Author: Meir Lichtinger <meirl@mellanox.com>
Date:   Mon Oct 26 15:37:38 2020 +0200

    IB/mlx5: Add support for NDR link speed
    
    [ Upstream commit f946e45f59ef01ff54ffb3b1eba3a8e7915e7326 ]
    
    The IBTA specification has new speed - NDR. That speed supports signaling
    rate of 100Gb. mlx5 IB driver translates link modes reported by ConnectX
    device to IB speed and width. Added translation of new 100Gb, 200Gb and
    400Gb link modes to NDR IB type and width of x1, x2 or x4 respectively.
    
    Link: https://lore.kernel.org/r/20201026133738.1340432-3-leon@kernel.org
    Signed-off-by: Meir Lichtinger <meirl@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Stable-dep-of: 88c9483faf15 ("IB/mlx5: Add support for 400G_8X lane speed")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a886f01b85d9575c6a197dd2e8f90d18e303d0a
Author: Chunyan Zhang <chunyan.zhang@unisoc.com>
Date:   Thu Mar 16 10:36:24 2023 +0800

    clk: sprd: set max_register according to mapping range
    
    [ Upstream commit 47d43086531f10539470a63e8ad92803e686a3dd ]
    
    In sprd clock driver, regmap_config.max_register was set to a fixed value
    which is likely larger than the address range configured in device tree,
    when reading registers through debugfs it would cause access violation.
    
    Fixes: d41f59fd92f2 ("clk: sprd: Add common infrastructure")
    Signed-off-by: Chunyan Zhang <chunyan.zhang@unisoc.com>
    Link: https://lore.kernel.org/r/20230316023624.758204-1-chunyan.zhang@unisoc.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e2845284b129eee875cdaf66e1670d2dd684ebb
Author: Christophe Kerello <christophe.kerello@foss.st.com>
Date:   Tue Mar 28 17:58:19 2023 +0200

    mtd: rawnand: stm32_fmc2: use timings.mode instead of checking tRC_min
    
    commit ddbb664b6ab8de7dffa388ae0c88cd18616494e5 upstream.
    
    Use timings.mode value instead of checking tRC_min timing
    for EDO mode support.
    
    Signed-off-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Fixes: 2cd457f328c1 ("mtd: rawnand: stm32_fmc2: add STM32 FMC2 NAND flash controller driver")
    Cc: stable@vger.kernel.org #v5.10+
    Reviewed-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20230328155819.225521-3-christophe.kerello@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e946e4e8c3d5ce85ab002459e31c8e39c1ff195
Author: Christophe Kerello <christophe.kerello@foss.st.com>
Date:   Tue Mar 28 17:58:18 2023 +0200

    mtd: rawnand: stm32_fmc2: remove unsupported EDO mode
    
    commit f71e0e329c152c7f11ddfd97ffc62aba152fad3f upstream.
    
    Remove the EDO mode support from as the FMC2 controller does not
    support the feature.
    
    Signed-off-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Fixes: 2cd457f328c1 ("mtd: rawnand: stm32_fmc2: add STM32 FMC2 NAND flash controller driver")
    Cc: stable@vger.kernel.org #v5.4+
    Reviewed-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20230328155819.225521-2-christophe.kerello@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b0e719192647351b112a9d43cfd83b55d44ec75
Author: Arseniy Krasnov <avkrasnov@sberdevices.ru>
Date:   Wed Mar 29 10:47:26 2023 +0300

    mtd: rawnand: meson: fix bitmask for length in command word
    
    commit 93942b70461574ca7fc3d91494ca89b16a4c64c7 upstream.
    
    Valid mask is 0x3FFF, without this patch the following problems were
    found:
    
    1) [    0.938914] Could not find a valid ONFI parameter page, trying
                      bit-wise majority to recover it
       [    0.947384] ONFI parameter recovery failed, aborting
    
    2) Read with disabled ECC mode was broken.
    
    Fixes: 8fae856c5350 ("mtd: rawnand: meson: add support for Amlogic NAND flash controller")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Arseniy Krasnov <AVKrasnov@sberdevices.ru>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/3794ffbf-dfea-e96f-1f97-fe235b005e19@sberdevices.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 441e57ff87c273de0152a0ee896e89772618f924
Author: Bang Li <libang.linuxer@gmail.com>
Date:   Wed Mar 29 00:30:12 2023 +0800

    mtdblock: tolerate corrected bit-flips
    
    commit 0c3089601f064d80b3838eceb711fcac04bceaad upstream.
    
    mtd_read() may return -EUCLEAN in case of corrected bit-flips.This
    particular condition should not be treated like an error.
    
    Signed-off-by: Bang Li <libang.linuxer@gmail.com>
    Fixes: e47f68587b82 ("mtd: check for max_bitflips in mtd_read_oob()")
    Cc: <stable@vger.kernel.org> # v3.7
    Acked-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20230328163012.4264-1-libang.linuxer@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d07ea8d385cb24c03f13b661e8e8954c9c76467
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Tue Apr 4 21:39:34 2023 +0200

    fbmem: Reject FB_ACTIVATE_KD_TEXT from userspace
    
    commit 6fd33a3333c7916689b8f051a185defe4dd515b0 upstream.
    
    This is an oversight from dc5bdb68b5b3 ("drm/fb-helper: Fix vt
    restore") - I failed to realize that nasty userspace could set this.
    
    It's not pretty to mix up kernel-internal and userspace uapi flags
    like this, but since the entire fb_var_screeninfo structure is uapi
    we'd need to either add a new parameter to the ->fb_set_par callback
    and fb_set_par() function, which has a _lot_ of users. Or some other
    fairly ugly side-channel int fb_info. Neither is a pretty prospect.
    
    Instead just correct the issue at hand by filtering out this
    kernel-internal flag in the ioctl handling code.
    
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Acked-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Fixes: dc5bdb68b5b3 ("drm/fb-helper: Fix vt restore")
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: shlomo@fastmail.com
    Cc: Michel Dänzer <michel@daenzer.net>
    Cc: Noralf Trønnes <noralf@tronnes.org>
    Cc: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: Daniel Vetter <daniel.vetter@intel.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Maxime Ripard <mripard@kernel.org>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: dri-devel@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v5.7+
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Cc: Qiujun Huang <hqjagain@gmail.com>
    Cc: Peter Rosin <peda@axentia.se>
    Cc: linux-fbdev@vger.kernel.org
    Cc: Helge Deller <deller@gmx.de>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Shigeru Yoshida <syoshida@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230404193934.472457-1-daniel.vetter@ffwll.ch
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5635e69406565f3a15cf99b539138b22835ffe3f
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Mar 29 09:13:05 2023 +0900

    btrfs: fix fast csum implementation detection
    
    commit 68d99ab0e9221ef54506f827576c5a914680eeaf upstream.
    
    The BTRFS_FS_CSUM_IMPL_FAST flag is currently set whenever a non-generic
    crc32c is detected, which is the incorrect check if the file system uses
    a different checksumming algorithm.  Refactor the code to only check
    this if crc32c is actually used.  Note that in an ideal world the
    information if an algorithm is hardware accelerated or not should be
    provided by the crypto API instead, but that's left for another day.
    
    CC: stable@vger.kernel.org # 5.4.x: c8a5f8ca9a9c: btrfs: print checksum type and implementation at mount time
    CC: stable@vger.kernel.org # 5.4.x
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3576e08f19dce249581ab5fb54fc6ef2ead4a105
Author: David Sterba <dsterba@suse.com>
Date:   Wed Jun 22 20:45:18 2022 +0200

    btrfs: print checksum type and implementation at mount time
    
    commit c8a5f8ca9a9c7d5c5bc31d54f47ea9d86f93ed69 upstream.
    
    Per user request, print the checksum type and implementation at mount
    time among the messages. The checksum is user configurable and the
    actual crypto implementation is useful to see for performance reasons.
    The same information is also available after mount in
    /sys/fs/FSID/checksum file.
    
    Example:
    
      [25.323662] BTRFS info (device vdb): using sha256 (sha256-generic) checksum algorithm
    
    Link: https://github.com/kdave/btrfs-progs/issues/483
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7ec5ca433ceead8d9d78fd2febff094f289441d
Author: Min Li <lm0963hack@gmail.com>
Date:   Sat Mar 4 22:23:30 2023 +0800

    Bluetooth: Fix race condition in hidp_session_thread
    
    commit c95930abd687fcd1aa040dc4fe90dff947916460 upstream.
    
    There is a potential race condition in hidp_session_thread that may
    lead to use-after-free. For instance, the timer is active while
    hidp_del_timer is called in hidp_session_thread(). After hidp_session_put,
    then 'session' will be freed, causing kernel panic when hidp_idle_timeout
    is running.
    
    The solution is to use del_timer_sync instead of del_timer.
    
    Here is the call trace:
    
    ? hidp_session_probe+0x780/0x780
    call_timer_fn+0x2d/0x1e0
    __run_timers.part.0+0x569/0x940
    hidp_session_probe+0x780/0x780
    call_timer_fn+0x1e0/0x1e0
    ktime_get+0x5c/0xf0
    lapic_next_deadline+0x2c/0x40
    clockevents_program_event+0x205/0x320
    run_timer_softirq+0xa9/0x1b0
    __do_softirq+0x1b9/0x641
    __irq_exit_rcu+0xdc/0x190
    irq_exit_rcu+0xe/0x20
    sysvec_apic_timer_interrupt+0xa1/0xc0
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Min Li <lm0963hack@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9ba36c22a7bb09d6bac4cc2f243eff05da53f43
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Apr 6 09:33:09 2023 -0700

    Bluetooth: L2CAP: Fix use-after-free in l2cap_disconnect_{req,rsp}
    
    commit a2a9339e1c9deb7e1e079e12e27a0265aea8421a upstream.
    
    Similar to commit d0be8347c623 ("Bluetooth: L2CAP: Fix use-after-free
    caused by l2cap_chan_put"), just use l2cap_chan_hold_unless_zero to
    prevent referencing a channel that is about to be destroyed.
    
    Cc: stable@kernel.org
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Min Li <lm0963hack@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8533fe864574c4fbaf62d1bc392929a025df122a
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:20 2023 +0200

    ALSA: hda/sigmatel: fix S/PDIF out on Intel D*45* motherboards
    
    commit f342ac00da1064eb4f94b1f4bcacbdfea955797a upstream.
    
    The BIOS botches this one completely - it says the 2nd S/PDIF output is
    used, while in fact it's the 1st one. This is tested on DP45SG, but I'm
    assuming it's valid for the other boards in the series as well.
    
    Also add some comments regarding the pins.
    FWIW, the codec is apparently still sold by Tempo Semiconductor, Inc.,
    where one can download the documentation.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201220.2197826-2-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f6a20a4f4ce25391cf5afe941f2e0db95148113
Author: Xu Biang <xubiang@hust.edu.cn>
Date:   Thu Apr 6 06:28:01 2023 -0700

    ALSA: firewire-tascam: add missing unwind goto in snd_tscm_stream_start_duplex()
    
    commit fb4a624f88f658c7b7ae124452bd42eaa8ac7168 upstream.
    
    Smatch Warns:
    sound/firewire/tascam/tascam-stream.c:493 snd_tscm_stream_start_duplex()
    warn: missing unwind goto?
    
    The direct return will cause the stream list of "&tscm->domain" unemptied
    and the session in "tscm" unfinished if amdtp_domain_start() returns with
    an error.
    
    Fix this by changing the direct return to a goto which will empty the
    stream list of "&tscm->domain" and finish the session in "tscm".
    
    The snd_tscm_stream_start_duplex() function is called in the prepare
    callback of PCM. According to "ALSA Kernel API Documentation", the prepare
    callback of PCM will be called many times at each setup. So, if the
    "&d->streams" list is not emptied, when the prepare callback is called
    next time, snd_tscm_stream_start_duplex() will receive -EBUSY from
    amdtp_domain_add_stream() that tries to add an existing stream to the
    domain. The error handling code after the "error" label will be executed
    in this case, and the "&d->streams" list will be emptied. So not emptying
    the "&d->streams" list will not cause an issue. But it is more efficient
    and readable to empty it on the first error by changing the direct return
    to a goto statement.
    
    The session in "tscm" has been begun before amdtp_domain_start(), so it
    needs to be finished when amdtp_domain_start() fails.
    
    Fixes: c281d46a51e3 ("ALSA: firewire-tascam: support AMDTP domain")
    Signed-off-by: Xu Biang <xubiang@hust.edu.cn>
    Reviewed-by: Dan Carpenter <error27@gmail.com>
    Acked-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230406132801.105108-1-xubiang@hust.edu.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69108a8a45c61461bddca06e084ad5b2e7111612
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:19 2023 +0200

    ALSA: i2c/cs8427: fix iec958 mixer control deactivation
    
    commit e98e7a82bca2b6dce3e03719cff800ec913f9af7 upstream.
    
    snd_cs8427_iec958_active() would always delete
    SNDRV_CTL_ELEM_ACCESS_INACTIVE, even though the function has an
    argument `active`.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201219.2197811-1-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e63a515d11de1002747187d327f6734ddd6a6f49
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:19 2023 +0200

    ALSA: hda/sigmatel: add pin overrides for Intel DP45SG motherboard
    
    commit c17f8fd31700392b1bb9e7b66924333568cb3700 upstream.
    
    Like the other boards from the D*45* series, this one sets up the
    outputs not quite correctly.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201220.2197826-1-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df4af0ddf7f0e22ed0ceb8dec222bb96c88af98d
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:20 2023 +0200

    ALSA: emu10k1: fix capture interrupt handler unlinking
    
    commit b09c551c77c7e01dc6e4f3c8bf06b5ffa7b06db5 upstream.
    
    Due to two copy/pastos, closing the MIC or EFX capture device would
    make a running ADC capture hang due to unsetting its interrupt handler.
    In principle, this would have also allowed dereferencing dangling
    pointers, but we're actually rather thorough at disabling and flushing
    the ints.
    
    While it may sound like one, this actually wasn't a hypothetical bug:
    PortAudio will open a capture stream at startup (and close it right
    away) even if not asked to. If the first device is busy, it will just
    proceed with the next one ... thus killing a concurrent capture.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201220.2197923-1-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14e90335bc7312ae8859e583e8395895a6fe76b9
Author: Kornel Dulęba <korneld@chromium.org>
Date:   Tue Apr 11 13:49:32 2023 +0000

    Revert "pinctrl: amd: Disable and mask interrupts on resume"
    
    commit 534e465845ebfb4a97eb5459d3931a0b35e3b9a5 upstream.
    
    This reverts commit b26cd9325be4c1fcd331b77f10acb627c560d4d7.
    
    This patch introduces a regression on Lenovo Z13, which can't wake
    from the lid with it applied; and some unspecified AMD based Dell
    platforms are unable to wake from hitting the power button
    
    Signed-off-by: Kornel Dulęba <korneld@chromium.org>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Link: https://lore.kernel.org/r/20230411134932.292287-1-korneld@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59dc9767cefbe4b931054bfab39d6aab0bb040f5
Author: Eduard Zingerman <eddyz87@gmail.com>
Date:   Sat Oct 1 13:44:24 2022 +0300

    bpftool: Print newline before '}' for struct with padding only fields
    
    [ Upstream commit 44a726c3f23cf762ef4ce3c1709aefbcbe97f62c ]
    
    btf_dump_emit_struct_def attempts to print empty structures at a
    single line, e.g. `struct empty {}`. However, it has to account for a
    case when there are no regular but some padding fields in the struct.
    In such case `vlen` would be zero, but size would be non-zero.
    
    E.g. here is struct bpf_timer from vmlinux.h before this patch:
    
     struct bpf_timer {
            long: 64;
            long: 64;};
    
    And after this patch:
    
     struct bpf_dynptr {
            long: 64;
            long: 64;
     };
    
    Signed-off-by: Eduard Zingerman <eddyz87@gmail.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20221001104425.415768-1-eddyz87@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2765aca637761db530d7a285bdb85ea1a10318af
Author: Heming Zhao <ocfs2-devel@oss.oracle.com>
Date:   Mon Aug 15 16:57:54 2022 +0800

    ocfs2: fix freeing uninitialized resource on ocfs2_dlm_shutdown
    
    commit 550842cc60987b269e31b222283ade3e1b6c7fc8 upstream.
    
    After commit 0737e01de9c4 ("ocfs2: ocfs2_mount_volume does cleanup job
    before return error"), any procedure after ocfs2_dlm_init() fails will
    trigger crash when calling ocfs2_dlm_shutdown().
    
    ie: On local mount mode, no dlm resource is initialized.  If
    ocfs2_mount_volume() fails in ocfs2_find_slot(), error handling will call
    ocfs2_dlm_shutdown(), then does dlm resource cleanup job, which will
    trigger kernel crash.
    
    This solution should bypass uninitialized resources in
    ocfs2_dlm_shutdown().
    
    Link: https://lkml.kernel.org/r/20220815085754.20417-1-heming.zhao@suse.com
    Fixes: 0737e01de9c4 ("ocfs2: ocfs2_mount_volume does cleanup job before return error")
    Signed-off-by: Heming Zhao <heming.zhao@suse.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a412ba6b6cc643991f154fa2799aafb957b5fc9e
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Tue Apr 4 09:25:02 2023 +0800

    Revert "media: ti: cal: fix possible memory leak in cal_ctx_create()"
    
    This reverts commit c7a218cbf67fffcd99b76ae3b5e9c2e8bef17c8c.
    
    The memory of ctx is allocated by devm_kzalloc in cal_ctx_create,
    it should not be freed by kfree when cal_ctx_v4l2_init() fails,
    otherwise kfree() will cause double free, so revert this patch.
    
    The memory of ctx is allocated by kzalloc since commit
    9e67f24e4d9 ("media: ti-vpe: cal: fix ctx uninitialization"),
    so the fixes tag of patch c7a218cbf67fis not entirely accurate,
    mainline should merge this patch, but it should not be merged
    into 5.10, so we just revert this patch for this branch.
    
    Fixes: c7a218cbf67f ("media: ti: cal: fix possible memory leak in cal_ctx_create()")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d96c8dca9467b60f93bf3ac72a6588cc438ac1e
Author: Robert Foss <rfoss@kernel.org>
Date:   Tue Dec 13 16:03:04 2022 +0100

    drm/bridge: lt9611: Fix PLL being unable to lock
    
    commit 2a9df204be0bbb896e087f00b9ee3fc559d5a608 upstream.
    
    This fixes PLL being unable to lock, and is derived from an equivalent
    downstream commit.
    
    Available LT9611 documentation does not list this register, neither does
    LT9611UXC (which is a different chip).
    
    This commit has been confirmed to fix HDMI output on DragonBoard 845c.
    
    Suggested-by: Amit Pundir <amit.pundir@linaro.org>
    Reviewed-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221213150304.4189760-1-robert.foss@linaro.org
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2773afc81fc6ce2c164979ecd7635a70e17e88b
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Mon Nov 2 09:39:18 2020 +0200

    selftests: intel_pstate: ftime() is deprecated
    
    commit fc4a3a1bf9ad799181e4d4ec9c2598c0405bc27d upstream.
    
    Use clock_gettime() instead of deprecated ftime().
    
      aperf.c: In function ‘main’:
      aperf.c:58:2: warning: ‘ftime’ is deprecated [-Wdeprecated-declarations]
         58 |  ftime(&before);
            |  ^~~~~
      In file included from aperf.c:9:
      /usr/include/sys/timeb.h:39:12: note: declared here
         39 | extern int ftime (struct timeb *__timebuf)
            |            ^~~~~
    
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Ricardo Cañuelo <ricardo.canuelo@collabora.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/oe-kbuild-all/202304060514.ELO1BqLI-lkp@intel.com/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea8c42b3b6d95ced3a4f555f04686d00ef0bb206
Author: Rongwei Wang <rongwei.wang@linux.alibaba.com>
Date:   Tue Apr 4 23:47:16 2023 +0800

    mm/swap: fix swap_info_struct race between swapoff and get_swap_pages()
    
    commit 6fe7d6b992113719e96744d974212df3fcddc76c upstream.
    
    The si->lock must be held when deleting the si from the available list.
    Otherwise, another thread can re-add the si to the available list, which
    can lead to memory corruption.  The only place we have found where this
    happens is in the swapoff path.  This case can be described as below:
    
    core 0                       core 1
    swapoff
    
    del_from_avail_list(si)      waiting
    
    try lock si->lock            acquire swap_avail_lock
                                 and re-add si into
                                 swap_avail_head
    
    acquire si->lock but missing si already being added again, and continuing
    to clear SWP_WRITEOK, etc.
    
    It can be easily found that a massive warning messages can be triggered
    inside get_swap_pages() by some special cases, for example, we call
    madvise(MADV_PAGEOUT) on blocks of touched memory concurrently, meanwhile,
    run much swapon-swapoff operations (e.g.  stress-ng-swap).
    
    However, in the worst case, panic can be caused by the above scene.  In
    swapoff(), the memory used by si could be kept in swap_info[] after
    turning off a swap.  This means memory corruption will not be caused
    immediately until allocated and reset for a new swap in the swapon path.
    A panic message caused: (with CONFIG_PLIST_DEBUG enabled)
    
    ------------[ cut here ]------------
    top: 00000000e58a3003, n: 0000000013e75cda, p: 000000008cd4451a
    prev: 0000000035b1e58a, n: 000000008cd4451a, p: 000000002150ee8d
    next: 000000008cd4451a, n: 000000008cd4451a, p: 000000008cd4451a
    WARNING: CPU: 21 PID: 1843 at lib/plist.c:60 plist_check_prev_next_node+0x50/0x70
    Modules linked in: rfkill(E) crct10dif_ce(E)...
    CPU: 21 PID: 1843 Comm: stress-ng Kdump: ... 5.10.134+
    Hardware name: Alibaba Cloud ECS, BIOS 0.0.0 02/06/2015
    pstate: 60400005 (nZCv daif +PAN -UAO -TCO BTYPE=--)
    pc : plist_check_prev_next_node+0x50/0x70
    lr : plist_check_prev_next_node+0x50/0x70
    sp : ffff0018009d3c30
    x29: ffff0018009d3c40 x28: ffff800011b32a98
    x27: 0000000000000000 x26: ffff001803908000
    x25: ffff8000128ea088 x24: ffff800011b32a48
    x23: 0000000000000028 x22: ffff001800875c00
    x21: ffff800010f9e520 x20: ffff001800875c00
    x19: ffff001800fdc6e0 x18: 0000000000000030
    x17: 0000000000000000 x16: 0000000000000000
    x15: 0736076307640766 x14: 0730073007380731
    x13: 0736076307640766 x12: 0730073007380731
    x11: 000000000004058d x10: 0000000085a85b76
    x9 : ffff8000101436e4 x8 : ffff800011c8ce08
    x7 : 0000000000000000 x6 : 0000000000000001
    x5 : ffff0017df9ed338 x4 : 0000000000000001
    x3 : ffff8017ce62a000 x2 : ffff0017df9ed340
    x1 : 0000000000000000 x0 : 0000000000000000
    Call trace:
     plist_check_prev_next_node+0x50/0x70
     plist_check_head+0x80/0xf0
     plist_add+0x28/0x140
     add_to_avail_list+0x9c/0xf0
     _enable_swap_info+0x78/0xb4
     __do_sys_swapon+0x918/0xa10
     __arm64_sys_swapon+0x20/0x30
     el0_svc_common+0x8c/0x220
     do_el0_svc+0x2c/0x90
     el0_svc+0x1c/0x30
     el0_sync_handler+0xa8/0xb0
     el0_sync+0x148/0x180
    irq event stamp: 2082270
    
    Now, si->lock locked before calling 'del_from_avail_list()' to make sure
    other thread see the si had been deleted and SWP_WRITEOK cleared together,
    will not reinsert again.
    
    This problem exists in versions after stable 5.10.y.
    
    Link: https://lkml.kernel.org/r/20230404154716.23058-1-rongwei.wang@linux.alibaba.com
    Fixes: a2468cc9bfdff ("swap: choose swap device according to numa node")
    Tested-by: Yongchen Yin <wb-yyc939293@alibaba-inc.com>
    Signed-off-by: Rongwei Wang <rongwei.wang@linux.alibaba.com>
    Cc: Bagas Sanjaya <bagasdotme@gmail.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Aaron Lu <aaron.lu@intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a74837809ccfa8180cbdd2f242ebfd6c3b106a0
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Sat Mar 25 10:12:47 2023 +0800

    ring-buffer: Fix race while reader and writer are on the same page
    
    commit 6455b6163d8c680366663cdb8c679514d55fc30c upstream.
    
    When user reads file 'trace_pipe', kernel keeps printing following logs
    that warn at "cpu_buffer->reader_page->read > rb_page_size(reader)" in
    rb_get_reader_page(). It just looks like there's an infinite loop in
    tracing_read_pipe(). This problem occurs several times on arm64 platform
    when testing v5.10 and below.
    
      Call trace:
       rb_get_reader_page+0x248/0x1300
       rb_buffer_peek+0x34/0x160
       ring_buffer_peek+0xbc/0x224
       peek_next_entry+0x98/0xbc
       __find_next_entry+0xc4/0x1c0
       trace_find_next_entry_inc+0x30/0x94
       tracing_read_pipe+0x198/0x304
       vfs_read+0xb4/0x1e0
       ksys_read+0x74/0x100
       __arm64_sys_read+0x24/0x30
       el0_svc_common.constprop.0+0x7c/0x1bc
       do_el0_svc+0x2c/0x94
       el0_svc+0x20/0x30
       el0_sync_handler+0xb0/0xb4
       el0_sync+0x160/0x180
    
    Then I dump the vmcore and look into the problematic per_cpu ring_buffer,
    I found that tail_page/commit_page/reader_page are on the same page while
    reader_page->read is obviously abnormal:
      tail_page == commit_page == reader_page == {
        .write = 0x100d20,
        .read = 0x8f9f4805,  // Far greater than 0xd20, obviously abnormal!!!
        .entries = 0x10004c,
        .real_end = 0x0,
        .page = {
          .time_stamp = 0x857257416af0,
          .commit = 0xd20,  // This page hasn't been full filled.
          // .data[0...0xd20] seems normal.
        }
     }
    
    The root cause is most likely the race that reader and writer are on the
    same page while reader saw an event that not fully committed by writer.
    
    To fix this, add memory barriers to make sure the reader can see the
    content of what is committed. Since commit a0fcaaed0c46 ("ring-buffer: Fix
    race between reset page and reading page") has added the read barrier in
    rb_get_reader_page(), here we just need to add the write barrier.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230325021247.2923907-1-zhengyejian1@huawei.com
    
    Cc: stable@vger.kernel.org
    Fixes: 77ae365eca89 ("ring-buffer: make lockless")
    Suggested-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1bbe926a1c75a81df58cdb8b68fb213068ca6f1
Author: Karol Herbst <kherbst@redhat.com>
Date:   Fri Mar 31 00:39:38 2023 +0200

    drm/nouveau/disp: Support more modes by checking with lower bpc
    
    commit 7f67aa097e875c87fba024e850cf405342300059 upstream.
    
    This allows us to advertise more modes especially on HDR displays.
    
    Fixes using 4K@60 modes on my TV and main display both using a HDMI to DP
    adapter. Also fixes similar issues for users running into this.
    
    Cc: stable@vger.kernel.org # 5.10+
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230330223938.4025569-1-kherbst@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8250f7f7ae21a67104e1c8c15ed250b2d01c122d
Author: Boris Brezillon <boris.brezillon@collabora.com>
Date:   Fri May 21 11:38:11 2021 +0200

    drm/panfrost: Fix the panfrost_mmu_map_fault_addr() error path
    
    commit 764a2ab9eb56e1200083e771aab16186836edf1d upstream.
    
    Make sure all bo->base.pages entries are either NULL or pointing to a
    valid page before calling drm_gem_shmem_put_pages().
    
    Reported-by: Tomeu Vizoso <tomeu.vizoso@collabora.com>
    Cc: <stable@vger.kernel.org>
    Fixes: 187d2929206e ("drm/panfrost: Add support for GPU heap allocations")
    Signed-off-by: Boris Brezillon <boris.brezillon@collabora.com>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210521093811.1018992-1-boris.brezillon@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acbbfdba9ca67ef6bc174a0a42666004aee4d931
Author: Jason Montleon <jmontleo@redhat.com>
Date:   Fri Mar 24 13:07:11 2023 -0400

    ASoC: hdac_hdmi: use set_stream() instead of set_tdm_slots()
    
    commit f6887a71bdd2f0dcba9b8180dd2223cfa8637e85 upstream.
    
    hdac_hdmi was not updated to use set_stream() instead of set_tdm_slots()
    in the original commit so HDMI no longer produces audio.
    
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/regressions/CAJD_bPKQdtaExvVEKxhQ47G-ZXDA=k+gzhMJRHLBe=mysPnuKA@mail.gmail.com/
    Fixes: 636110411ca7 ("ASoC: Intel/SOF: use set_stream() instead of set_tdm_slots() for HDAudio")
    Signed-off-by: Jason Montleon <jmontleo@redhat.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20230324170711.2526-1-jmontleo@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e36373aa5ffa8e00fe7c71b3209f6f17081e552
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Apr 4 19:45:04 2023 -0400

    tracing: Free error logs of tracing instances
    
    commit 3357c6e429643231e60447b52ffbb7ac895aca22 upstream.
    
    When a tracing instance is removed, the error messages that hold errors
    that occurred in the instance needs to be freed. The following reports a
    memory leak:
    
     # cd /sys/kernel/tracing
     # mkdir instances/foo
     # echo 'hist:keys=x' > instances/foo/events/sched/sched_switch/trigger
     # cat instances/foo/error_log
     [  117.404795] hist:sched:sched_switch: error: Couldn't find field
       Command: hist:keys=x
                          ^
     # rmdir instances/foo
    
    Then check for memory leaks:
    
     # echo scan > /sys/kernel/debug/kmemleak
     # cat /sys/kernel/debug/kmemleak
    unreferenced object 0xffff88810d8ec700 (size 192):
      comm "bash", pid 869, jiffies 4294950577 (age 215.752s)
      hex dump (first 32 bytes):
        60 dd 68 61 81 88 ff ff 60 dd 68 61 81 88 ff ff  `.ha....`.ha....
        a0 30 8c 83 ff ff ff ff 26 00 0a 00 00 00 00 00  .0......&.......
      backtrace:
        [<00000000dae26536>] kmalloc_trace+0x2a/0xa0
        [<00000000b2938940>] tracing_log_err+0x277/0x2e0
        [<000000004a0e1b07>] parse_atom+0x966/0xb40
        [<0000000023b24337>] parse_expr+0x5f3/0xdb0
        [<00000000594ad074>] event_hist_trigger_parse+0x27f8/0x3560
        [<00000000293a9645>] trigger_process_regex+0x135/0x1a0
        [<000000005c22b4f2>] event_trigger_write+0x87/0xf0
        [<000000002cadc509>] vfs_write+0x162/0x670
        [<0000000059c3b9be>] ksys_write+0xca/0x170
        [<00000000f1cddc00>] do_syscall_64+0x3e/0xc0
        [<00000000868ac68c>] entry_SYSCALL_64_after_hwframe+0x72/0xdc
    unreferenced object 0xffff888170c35a00 (size 32):
      comm "bash", pid 869, jiffies 4294950577 (age 215.752s)
      hex dump (first 32 bytes):
        0a 20 20 43 6f 6d 6d 61 6e 64 3a 20 68 69 73 74  .  Command: hist
        3a 6b 65 79 73 3d 78 0a 00 00 00 00 00 00 00 00  :keys=x.........
      backtrace:
        [<000000006a747de5>] __kmalloc+0x4d/0x160
        [<000000000039df5f>] tracing_log_err+0x29b/0x2e0
        [<000000004a0e1b07>] parse_atom+0x966/0xb40
        [<0000000023b24337>] parse_expr+0x5f3/0xdb0
        [<00000000594ad074>] event_hist_trigger_parse+0x27f8/0x3560
        [<00000000293a9645>] trigger_process_regex+0x135/0x1a0
        [<000000005c22b4f2>] event_trigger_write+0x87/0xf0
        [<000000002cadc509>] vfs_write+0x162/0x670
        [<0000000059c3b9be>] ksys_write+0xca/0x170
        [<00000000f1cddc00>] do_syscall_64+0x3e/0xc0
        [<00000000868ac68c>] entry_SYSCALL_64_after_hwframe+0x72/0xdc
    
    The problem is that the error log needs to be freed when the instance is
    removed.
    
    Link: https://lore.kernel.org/lkml/76134d9f-a5ba-6a0d-37b3-28310b4a1e91@alu.unizg.hr/
    Link: https://lore.kernel.org/linux-trace-kernel/20230404194504.5790b95f@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Eric Biggers <ebiggers@kernel.org>
    Fixes: 2f754e771b1a6 ("tracing: Have the error logs show up in the proper instances")
    Reported-by: Mirsad Goran Todorovac <mirsad.todorovac@alu.unizg.hr>
    Tested-by: Mirsad Todorovac <mirsad.todorovac@alu.unizg.hr>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c5df2f14ee351d0ff4c589ad7b416ae6a680742
Author: Michal Sojka <michal.sojka@cvut.cz>
Date:   Fri Mar 31 14:55:11 2023 +0200

    can: isotp: isotp_ops: fix poll() to not report false EPOLLOUT events
    
    commit 79e19fa79cb5d5f1b3bf3e3ae24989ccb93c7b7b upstream.
    
    When using select()/poll()/epoll() with a non-blocking ISOTP socket to
    wait for when non-blocking write is possible, a false EPOLLOUT event
    is sometimes returned. This can happen at least after sending a
    message which must be split to multiple CAN frames.
    
    The reason is that isotp_sendmsg() returns -EAGAIN when tx.state is
    not equal to ISOTP_IDLE and this behavior is not reflected in
    datagram_poll(), which is used in isotp_ops.
    
    This is fixed by introducing ISOTP-specific poll function, which
    suppresses the EPOLLOUT events in that case.
    
    v2: https://lore.kernel.org/all/20230302092812.320643-1-michal.sojka@cvut.cz
    v1: https://lore.kernel.org/all/20230224010659.48420-1-michal.sojka@cvut.cz
        https://lore.kernel.org/all/b53a04a2-ba1f-3858-84c1-d3eb3301ae15@hartkopp.net
    
    Signed-off-by: Michal Sojka <michal.sojka@cvut.cz>
    Reported-by: Jakub Jira <jirajak2@fel.cvut.cz>
    Tested-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://lore.kernel.org/all/20230331125511.372783-1-michal.sojka@cvut.cz
    Cc: stable@vger.kernel.org
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70caa596d158a5d84b117f722d58f3ea503a5ba9
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Apr 4 09:31:28 2023 +0200

    can: j1939: j1939_tp_tx_dat_new(): fix out-of-bounds memory access
    
    commit b45193cb4df556fe6251b285a5ce44046dd36b4a upstream.
    
    In the j1939_tp_tx_dat_new() function, an out-of-bounds memory access
    could occur during the memcpy() operation if the size of skb->cb is
    larger than the size of struct j1939_sk_buff_cb. This is because the
    memcpy() operation uses the size of skb->cb, leading to a read beyond
    the struct j1939_sk_buff_cb.
    
    Updated the memcpy() operation to use the size of struct
    j1939_sk_buff_cb instead of the size of skb->cb. This ensures that the
    memcpy() operation only reads the memory within the bounds of struct
    j1939_sk_buff_cb, preventing out-of-bounds memory access.
    
    Additionally, add a BUILD_BUG_ON() to check that the size of skb->cb
    is greater than or equal to the size of struct j1939_sk_buff_cb. This
    ensures that the skb->cb buffer is large enough to hold the
    j1939_sk_buff_cb structure.
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Reported-by: Shuangpeng Bai <sjb7183@psu.edu>
    Tested-by: Shuangpeng Bai <sjb7183@psu.edu>
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://groups.google.com/g/syzkaller/c/G_LL-C3plRs/m/-8xCi6dCAgAJ
    Link: https://lore.kernel.org/all/20230404073128.3173900-1-o.rempel@pengutronix.de
    Cc: stable@vger.kernel.org
    [mkl: rephrase commit message]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f018ef34c44b50be56ffaac14e34c135199e2f5a
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Thu Mar 30 10:52:23 2023 +0800

    ftrace: Fix issue that 'direct->addr' not restored in modify_ftrace_direct()
    
    commit 2a2d8c51defb446e8d89a83f42f8e5cd529111e9 upstream.
    
    Syzkaller report a WARNING: "WARN_ON(!direct)" in modify_ftrace_direct().
    
    Root cause is 'direct->addr' was changed from 'old_addr' to 'new_addr' but
    not restored if error happened on calling ftrace_modify_direct_caller().
    Then it can no longer find 'direct' by that 'old_addr'.
    
    To fix it, restore 'direct->addr' to 'old_addr' explicitly in error path.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230330025223.1046087-1-zhengyejian1@huawei.com
    
    Cc: stable@vger.kernel.org
    Cc: <mhiramat@kernel.org>
    Cc: <mark.rutland@arm.com>
    Cc: <ast@kernel.org>
    Cc: <daniel@iogearbox.net>
    Fixes: 8a141dd7f706 ("ftrace: Fix modify_ftrace_direct.")
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eadcad0a47bfeeba9fac06047f3141eb725420b2
Author: John Keeping <john@metanate.com>
Date:   Mon Mar 27 18:36:46 2023 +0100

    ftrace: Mark get_lock_parent_ip() __always_inline
    
    commit ea65b41807a26495ff2a73dd8b1bab2751940887 upstream.
    
    If the compiler decides not to inline this function then preemption
    tracing will always show an IP inside the preemption disabling path and
    never the function actually calling preempt_{enable,disable}.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230327173647.1690849-1-john@metanate.com
    
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: stable@vger.kernel.org
    Fixes: f904f58263e1d ("sched/debug: Fix preempt_disable_ip recording for preempt_disable()")
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9470fc63ab42c66b3d9495b75d2e8a3341d35a12
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Wed Mar 22 13:24:49 2023 -0700

    perf/core: Fix the same task check in perf_event_set_output
    
    [ Upstream commit 24d3ae2f37d8bc3c14b31d353c5d27baf582b6a6 ]
    
    The same task check in perf_event_set_output has some potential issues
    for some usages.
    
    For the current perf code, there is a problem if using of
    perf_event_open() to have multiple samples getting into the same mmap’d
    memory when they are both attached to the same process.
    https://lore.kernel.org/all/92645262-D319-4068-9C44-2409EF44888E@gmail.com/
    Because the event->ctx is not ready when the perf_event_set_output() is
    invoked in the perf_event_open().
    
    Besides the above issue, before the commit bd2756811766 ("perf: Rewrite
    core context handling"), perf record can errors out when sampling with
    a hardware event and a software event as below.
     $ perf record -e cycles,dummy --per-thread ls
     failed to mmap with 22 (Invalid argument)
    That's because that prior to the commit a hardware event and a software
    event are from different task context.
    
    The problem should be a long time issue since commit c3f00c70276d
    ("perk: Separate find_get_context() from event initialization").
    
    The task struct is stored in the event->hw.target for each per-thread
    event. It is a more reliable way to determine whether two events are
    attached to the same task.
    
    The event->hw.target was also introduced several years ago by the
    commit 50f16a8bf9d7 ("perf: Remove type specific target pointers"). It
    can not only be used to fix the issue with the current code, but also
    back port to fix the issues with an older kernel.
    
    Note: The event->hw.target was introduced later than commit
    c3f00c70276d. The patch may cannot be applied between the commit
    c3f00c70276d and commit 50f16a8bf9d7. Anybody that wants to back-port
    this at that period may have to find other solutions.
    
    Fixes: c3f00c70276d ("perf: Separate find_get_context() from event initialization")
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Zhengjun Xing <zhengjun.xing@linux.intel.com>
    Link: https://lkml.kernel.org/r/20230322202449.512091-1-kan.liang@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 499757ad3332e2527254f9ab68dec1da087b1d96
Author: Zhong Jinghua <zhongjinghua@huawei.com>
Date:   Wed Mar 29 15:17:39 2023 +0800

    scsi: iscsi_tcp: Check that sock is valid before iscsi_set_param()
    
    [ Upstream commit 48b19b79cfa37b1e50da3b5a8af529f994c08901 ]
    
    The validity of sock should be checked before assignment to avoid incorrect
    values. Commit 57569c37f0ad ("scsi: iscsi: iscsi_tcp: Fix null-ptr-deref
    while calling getpeername()") introduced this change which may lead to
    inconsistent values of tcp_sw_conn->sendpage and conn->datadgst_en.
    
    Fix the issue by moving the position of the assignment.
    
    Fixes: 57569c37f0ad ("scsi: iscsi: iscsi_tcp: Fix null-ptr-deref while calling getpeername()")
    Signed-off-by: Zhong Jinghua <zhongjinghua@huawei.com>
    Link: https://lore.kernel.org/r/20230329071739.2175268-1-zhongjinghua@huaweicloud.com
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bfdead174438b815677c7fa2ebdf6139b5462ca
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Fri Jan 20 13:46:45 2023 +0100

    iio: adc: ad7791: fix IRQ flags
    
    [ Upstream commit 0c6ef985a1fd8a74dcb5cad941ddcadd55cb8697 ]
    
    The interrupt is triggered on the falling edge rather than being a level
    low interrupt.
    
    Fixes: da4d3d6bb9f6 ("iio: adc: ad-sigma-delta: Allow custom IRQ flags")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20230120124645.819910-1-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14f9ff7857e7429932fc5549daf6ad187859a8a1
Author: Jeremy Soller <jeremy@system76.com>
Date:   Fri Mar 31 10:23:17 2023 -0600

    ALSA: hda/realtek: Add quirk for Clevo X370SNW
    
    commit 36d4d213c6d4fffae2645a601e8ae996de4c3645 upstream.
    
    Fixes speaker output and headset detection on Clevo X370SNW.
    
    Signed-off-by: Jeremy Soller <jeremy@system76.com>
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230331162317.14992-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f3b8c3b047a554664be772db61fb3c7210ad0a9
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Mar 17 10:46:57 2023 +0100

    dt-bindings: serial: renesas,scif: Fix 4th IRQ for 4-IRQ SCIFs
    
    commit 7b21f329ae0ab6361c0aebfc094db95821490cd1 upstream.
    
    The fourth interrupt on SCIF variants with four interrupts (RZ/A1) is
    the Break interrupt, not the Transmit End interrupt (like on SCI(g)).
    Update the description and interrupt name to fix this.
    
    Fixes: 384d00fae8e51f8f ("dt-bindings: serial: sh-sci: Convert to json-schema")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/719d1582e0ebbe3d674e3a48fc26295e1475a4c3.1679046394.git.geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dbee84bf9e3273c4bb9ca6fc18ff22fba23dd24
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Fri Mar 31 05:55:15 2023 +0900

    nilfs2: fix sysfs interface lifetime
    
    commit 42560f9c92cc43dce75dbf06cc0d840dced39b12 upstream.
    
    The current nilfs2 sysfs support has issues with the timing of creation
    and deletion of sysfs entries, potentially leading to null pointer
    dereferences, use-after-free, and lockdep warnings.
    
    Some of the sysfs attributes for nilfs2 per-filesystem instance refer to
    metadata file "cpfile", "sufile", or "dat", but
    nilfs_sysfs_create_device_group that creates those attributes is executed
    before the inodes for these metadata files are loaded, and
    nilfs_sysfs_delete_device_group which deletes these sysfs entries is
    called after releasing their metadata file inodes.
    
    Therefore, access to some of these sysfs attributes may occur outside of
    the lifetime of these metadata files, resulting in inode NULL pointer
    dereferences or use-after-free.
    
    In addition, the call to nilfs_sysfs_create_device_group() is made during
    the locking period of the semaphore "ns_sem" of nilfs object, so the
    shrinker call caused by the memory allocation for the sysfs entries, may
    derive lock dependencies "ns_sem" -> (shrinker) -> "locks acquired in
    nilfs_evict_inode()".
    
    Since nilfs2 may acquire "ns_sem" deep in the call stack holding other
    locks via its error handler __nilfs_error(), this causes lockdep to report
    circular locking.  This is a false positive and no circular locking
    actually occurs as no inodes exist yet when
    nilfs_sysfs_create_device_group() is called.  Fortunately, the lockdep
    warnings can be resolved by simply moving the call to
    nilfs_sysfs_create_device_group() out of "ns_sem".
    
    This fixes these sysfs issues by revising where the device's sysfs
    interface is created/deleted and keeping its lifetime within the lifetime
    of the metadata files above.
    
    Link: https://lkml.kernel.org/r/20230330205515.6167-1-konishi.ryusuke@gmail.com
    Fixes: dd70edbde262 ("nilfs2: integrate sysfs support into driver")
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Reported-by: syzbot+979fa7f9c0d086fdc282@syzkaller.appspotmail.com
      Link: https://lkml.kernel.org/r/0000000000003414b505f7885f7e@google.com
    Reported-by: syzbot+5b7d542076d9bddc3c6a@syzkaller.appspotmail.com
      Link: https://lkml.kernel.org/r/0000000000006ac86605f5f44eb9@google.com
    Cc: Viacheslav Dubeyko <slava@dubeyko.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f32297dba338dc06d62286dedb3cdbd5175b1719
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Tue Mar 28 02:53:18 2023 +0900

    nilfs2: fix potential UAF of struct nilfs_sc_info in nilfs_segctor_thread()
    
    commit 6be49d100c22ffea3287a4b19d7639d259888e33 upstream.
    
    The finalization of nilfs_segctor_thread() can race with
    nilfs_segctor_kill_thread() which terminates that thread, potentially
    causing a use-after-free BUG as KASAN detected.
    
    At the end of nilfs_segctor_thread(), it assigns NULL to "sc_task" member
    of "struct nilfs_sc_info" to indicate the thread has finished, and then
    notifies nilfs_segctor_kill_thread() of this using waitqueue
    "sc_wait_task" on the struct nilfs_sc_info.
    
    However, here, immediately after the NULL assignment to "sc_task", it is
    possible that nilfs_segctor_kill_thread() will detect it and return to
    continue the deallocation, freeing the nilfs_sc_info structure before the
    thread does the notification.
    
    This fixes the issue by protecting the NULL assignment to "sc_task" and
    its notification, with spinlock "sc_state_lock" of the struct
    nilfs_sc_info.  Since nilfs_segctor_kill_thread() does a final check to
    see if "sc_task" is NULL with "sc_state_lock" locked, this can eliminate
    the race.
    
    Link: https://lkml.kernel.org/r/20230327175318.8060-1-konishi.ryusuke@gmail.com
    Reported-by: syzbot+b08ebcc22f8f3e6be43a@syzkaller.appspotmail.com
    Link: https://lkml.kernel.org/r/00000000000000660d05f7dfa877@google.com
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a17bed82c0d38d0444c6586543dff5d9c30987d5
Author: Sherry Sun <sherry.sun@nxp.com>
Date:   Thu Mar 23 13:44:15 2023 +0800

    tty: serial: fsl_lpuart: avoid checking for transfer complete when UARTCTRL_SBK is asserted in lpuart32_tx_empty
    
    commit 9425914f3de6febbd6250395f56c8279676d9c3c upstream.
    
    According to LPUART RM, Transmission Complete Flag becomes 0 if queuing
    a break character by writing 1 to CTRL[SBK], so here need to avoid
    checking for transmission complete when UARTCTRL_SBK is asserted,
    otherwise the lpuart32_tx_empty may never get TIOCSER_TEMT.
    
    Commit 2411fd94ceaa("tty: serial: fsl_lpuart: skip waiting for
    transmission complete when UARTCTRL_SBK is asserted") only fix it in
    lpuart32_set_termios(), here also fix it in lpuart32_tx_empty().
    
    Fixes: 380c966c093e ("tty: serial: fsl_lpuart: add 32-bit register interface support")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Link: https://lore.kernel.org/r/20230323054415.20363-1-sherry.sun@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25eff5e7f743b68e23da7d33a8a455cf05d5e22c
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Tue Mar 21 11:47:50 2023 +0000

    tty: serial: sh-sci: Fix Rx on RZ/G2L SCI
    
    commit f92ed0cd9328aed918ebb0ebb64d259eccbcc6e7 upstream.
    
    SCI IP on RZ/G2L alike SoCs do not need regshift compared to other SCI
    IPs on the SH platform. Currently, it does regshift and configuring Rx
    wrongly. Drop adding regshift for RZ/G2L alike SoCs.
    
    Fixes: dfc80387aefb ("serial: sh-sci: Compute the regshift value for SCI ports")
    Cc: stable@vger.kernel.org
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Link: https://lore.kernel.org/r/20230321114753.75038-3-biju.das.jz@bp.renesas.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72a3e4fa882db70a10558bfabea4be7fe50a3033
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Fri Mar 17 15:04:03 2023 +0000

    tty: serial: sh-sci: Fix transmit end interrupt handler
    
    commit b43a18647f03c87e77d50d6fe74904b61b96323e upstream.
    
    The fourth interrupt on SCI port is transmit end interrupt compared to
    the break interrupt on other port types. So, shuffle the interrupts to fix
    the transmit end interrupt handler.
    
    Fixes: e1d0be616186 ("sh-sci: Add h8300 SCI")
    Cc: stable <stable@kernel.org>
    Suggested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Link: https://lore.kernel.org/r/20230317150403.154094-1-biju.das.jz@bp.renesas.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 741d73fc573c15c4fc3fcbf4bd3a711e825d8ea9
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Feb 23 10:00:59 2023 +0800

    iio: light: cm32181: Unregister second I2C client if present
    
    commit 099cc90a5a62e68b2fe3a42da011ab929b98bf73 upstream.
    
    If a second dummy client that talks to the actual I2C address was
    created in probe(), there should be a proper cleanup on driver and
    device removal to avoid leakage.
    
    So unregister the dummy client via another callback.
    
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Suggested-by: Hans de Goede <hdegoede@redhat.com>
    Fixes: c1e62062ff54 ("iio: light: cm32181: Handle CM3218 ACPI devices with 2 I2C resources")
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=2152281
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20230223020059.2013993-1-kai.heng.feng@canonical.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58bf30479a2e472200430f78dfeca2a5c0cfed3d
Author: William Breathitt Gray <william.gray@linaro.org>
Date:   Fri Mar 10 19:22:48 2023 -0500

    iio: dac: cio-dac: Fix max DAC write value check for 12-bit
    
    commit c3701185ee1973845db088d8b0fc443397ab0eb2 upstream.
    
    The CIO-DAC series of devices only supports DAC values up to 12-bit
    rather than 16-bit. Trying to write a 16-bit value results in only the
    lower 12 bits affecting the DAC output which is not what the user
    expects. Instead, adjust the DAC write value check to reject values
    larger than 12-bit so that they fail explicitly as invalid for the user.
    
    Fixes: 3b8df5fd526e ("iio: Add IIO support for the Measurement Computing CIO-DAC family")
    Cc: stable@vger.kernel.org
    Signed-off-by: William Breathitt Gray <william.gray@linaro.org>
    Link: https://lore.kernel.org/r/20230311002248.8548-1-william.gray@linaro.org
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f47659f1e942cd7bf63a6b1db13002c7097f3516
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Mar 12 14:09:33 2023 -0700

    iio: adc: ti-ads7950: Set `can_sleep` flag for GPIO chip
    
    commit 363c7dc72f79edd55bf1c4380e0fbf7f1bbc2c86 upstream.
    
    The ads7950 uses a mutex as well as SPI transfers in its GPIO callbacks.
    This means these callbacks can sleep and the `can_sleep` flag should be
    set.
    
    Having the flag set will make sure that warnings are generated when calling
    any of the callbacks from a potentially non-sleeping context.
    
    Fixes: c97dce792dc8 ("iio: adc: ti-ads7950: add GPIO support")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: David Lechner <david@lechnology.com>
    Link: https://lore.kernel.org/r/20230312210933.2275376-1-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52a003870ee273d79d0768fb4fdc1585d880199d
Author: Bjørn Mork <bjorn@mork.no>
Date:   Tue Mar 28 20:41:31 2023 +0200

    USB: serial: option: add Quectel RM500U-CN modem
    
    commit 7708a3858e69db91a8b69487994f33b96d20192a upstream.
    
    This modem supports several modes with a class network function
    and a number of serial functions, all using ff/00/00
    
    The device ID is the same in all modes.
    
    RNDIS mode
    ----------
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0900 Rev= 4.04
    S:  Manufacturer=Quectel
    S:  Product=RM500U-CN
    S:  SerialNumber=0123456789ABCDEF
    C:* #Ifs= 7 Cfg#= 1 Atr=c0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=e0(wlcon) Sub=01 Prot=03
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=e0(wlcon) Sub=01 Prot=03 Driver=rndis_host
    E:  Ad=82(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=rndis_host
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    ECM mode
    --------
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0900 Rev= 4.04
    S:  Manufacturer=Quectel
    S:  Product=RM500U-CN
    S:  SerialNumber=0123456789ABCDEF
    C:* #Ifs= 7 Cfg#= 1 Atr=c0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=06 Prot=00
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=06 Prot=00 Driver=cdc_ether
    E:  Ad=82(I) Atr=03(Int.) MxPS=  16 Ivl=32ms
    I:  If#= 1 Alt= 0 #EPs= 0 Cls=0a(data ) Sub=00 Prot=00 Driver=cdc_ether
    I:* If#= 1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=cdc_ether
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    NCM mode
    --------
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  5 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0900 Rev= 4.04
    S:  Manufacturer=Quectel
    S:  Product=RM500U-CN
    S:  SerialNumber=0123456789ABCDEF
    C:* #Ifs= 7 Cfg#= 1 Atr=c0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=0d Prot=00
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=0d Prot=00 Driver=cdc_ncm
    E:  Ad=82(I) Atr=03(Int.) MxPS=  16 Ivl=32ms
    I:  If#= 1 Alt= 0 #EPs= 0 Cls=0a(data ) Sub=00 Prot=01 Driver=cdc_ncm
    I:* If#= 1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=01 Driver=cdc_ncm
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Reported-by: Andrew Green <askgreen@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6655d483766d31e22f32b8f37c09588b22d2adc
Author: Enrico Sau <enrico.sau@gmail.com>
Date:   Tue Mar 14 10:00:59 2023 +0100

    USB: serial: option: add Telit FE990 compositions
    
    commit 773e8e7d07b753474b2ccd605ff092faaa9e65b9 upstream.
    
    Add the following Telit FE990 compositions:
    
    0x1080: tty, adb, rmnet, tty, tty, tty, tty
    0x1081: tty, adb, mbim, tty, tty, tty, tty
    0x1082: rndis, tty, adb, tty, tty, tty, tty
    0x1083: tty, adb, ecm, tty, tty, tty, tty
    
    Signed-off-by: Enrico Sau <enrico.sau@gmail.com>
    Link: https://lore.kernel.org/r/20230314090059.77876-1-enrico.sau@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d1f2a6b8d9a3fab2611e5bedeeb21da5b4bd032
Author: RD Babiera <rdbabiera@google.com>
Date:   Wed Mar 29 21:51:59 2023 +0000

    usb: typec: altmodes/displayport: Fix configure initial pin assignment
    
    commit eddebe39602efe631b83ff8d03f26eba12cfd760 upstream.
    
    While determining the initial pin assignment to be sent in the configure
    message, using the DP_PIN_ASSIGN_DP_ONLY_MASK mask causes the DFP_U to
    send both Pin Assignment C and E when both are supported by the DFP_U and
    UFP_U. The spec (Table 5-7 DFP_U Pin Assignment Selection Mandates,
    VESA DisplayPort Alt Mode Standard v2.0) indicates that the DFP_U never
    selects Pin Assignment E when Pin Assignment C is offered.
    
    Update the DP_PIN_ASSIGN_DP_ONLY_MASK conditional to intially select only
    Pin Assignment C if it is available.
    
    Fixes: 0e3bb7d6894d ("usb: typec: Add driver for DisplayPort alternate mode")
    Cc: stable@vger.kernel.org
    Signed-off-by: RD Babiera <rdbabiera@google.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20230329215159.2046932-1-rdbabiera@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4be2b71e9d368d5b0aca390a576465de14d401a7
Author: Kees Jan Koster <kjkoster@kjkoster.org>
Date:   Sat Feb 18 15:18:30 2023 +0100

    USB: serial: cp210x: add Silicon Labs IFS-USB-DATACABLE IDs
    
    commit 71f8afa2b66e356f435b6141b4a9ccf953e18356 upstream.
    
    The Silicon Labs IFS-USB-DATACABLE is used in conjunction with for example
    the Quint UPSes. It is used to enable Modbus communication with the UPS to
    query configuration, power and battery status.
    
    Signed-off-by: Kees Jan Koster <kjkoster@kjkoster.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec20260950afe22189fab8c92a241ac641b03f8f
Author: D Scott Phillips <scott@os.amperecomputing.com>
Date:   Thu Mar 30 17:30:54 2023 +0300

    xhci: also avoid the XHCI_ZERO_64B_REGS quirk with a passthrough iommu
    
    commit ecaa4902439298f6b0e29f47424a86b310a9ff4f upstream.
    
    Previously the quirk was skipped when no iommu was present. The same
    rationale for skipping the quirk also applies in the iommu.passthrough=1
    case.
    
    Skip applying the XHCI_ZERO_64B_REGS quirk if the device's iommu domain is
    passthrough.
    
    Fixes: 12de0a35c996 ("xhci: Add quirk to zero 64bit registers on Renesas PCIe controllers")
    Cc: stable <stable@kernel.org>
    Signed-off-by: D Scott Phillips <scott@os.amperecomputing.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20230330143056.1390020-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4b4f17aa46c025da77aed5133b08971959c9684
Author: Wayne Chang <waynec@nvidia.com>
Date:   Mon Mar 27 17:55:48 2023 +0800

    usb: xhci: tegra: fix sleep in atomic call
    
    commit 4c7f9d2e413dc06a157c4e5dccde84aaf4655eb3 upstream.
    
    When we set the dual-role port to Host mode, we observed the following
    splat:
    [  167.057718] BUG: sleeping function called from invalid context at
    include/linux/sched/mm.h:229
    [  167.057872] Workqueue: events tegra_xusb_usb_phy_work
    [  167.057954] Call trace:
    [  167.057962]  dump_backtrace+0x0/0x210
    [  167.057996]  show_stack+0x30/0x50
    [  167.058020]  dump_stack_lvl+0x64/0x84
    [  167.058065]  dump_stack+0x14/0x34
    [  167.058100]  __might_resched+0x144/0x180
    [  167.058140]  __might_sleep+0x64/0xd0
    [  167.058171]  slab_pre_alloc_hook.constprop.0+0xa8/0x110
    [  167.058202]  __kmalloc_track_caller+0x74/0x2b0
    [  167.058233]  kvasprintf+0xa4/0x190
    [  167.058261]  kasprintf+0x58/0x90
    [  167.058285]  tegra_xusb_find_port_node.isra.0+0x58/0xd0
    [  167.058334]  tegra_xusb_find_port+0x38/0xa0
    [  167.058380]  tegra_xusb_padctl_get_usb3_companion+0x38/0xd0
    [  167.058430]  tegra_xhci_id_notify+0x8c/0x1e0
    [  167.058473]  notifier_call_chain+0x88/0x100
    [  167.058506]  atomic_notifier_call_chain+0x44/0x70
    [  167.058537]  tegra_xusb_usb_phy_work+0x60/0xd0
    [  167.058581]  process_one_work+0x1dc/0x4c0
    [  167.058618]  worker_thread+0x54/0x410
    [  167.058650]  kthread+0x188/0x1b0
    [  167.058672]  ret_from_fork+0x10/0x20
    
    The function tegra_xusb_padctl_get_usb3_companion eventually calls
    tegra_xusb_find_port and this in turn calls kasprintf which might sleep
    and so cannot be called from an atomic context.
    
    Fix this by moving the call to tegra_xusb_padctl_get_usb3_companion to
    the tegra_xhci_id_work function where it is really needed.
    
    Fixes: f836e7843036 ("usb: xhci-tegra: Add OTG support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Wayne Chang <waynec@nvidia.com>
    Signed-off-by: Haotien Hsu <haotienh@nvidia.com>
    Link: https://lore.kernel.org/r/20230327095548.1599470-1-haotienh@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07216da8fb1d48351fe6ae2c3f7bef297b20ba7b
Author: Dai Ngo <dai.ngo@oracle.com>
Date:   Sat Apr 1 13:22:08 2023 -0700

    NFSD: callback request does not use correct credential for AUTH_SYS
    
    [ Upstream commit 7de82c2f36fb26aa78440bbf0efcf360b691d98b ]
    
    Currently callback request does not use the credential specified in
    CREATE_SESSION if the security flavor for the back channel is AUTH_SYS.
    
    Problem was discovered by pynfs 4.1 DELEG5 and DELEG7 test with error:
    DELEG5   st_delegation.testCBSecParms     : FAILURE
               expected callback with uid, gid == 17, 19, got 0, 0
    
    Signed-off-by: Dai Ngo <dai.ngo@oracle.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Fixes: 8276c902bbe9 ("SUNRPC: remove uid and gid from struct auth_cred")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3c4aa48e5f2214326878692e6cbaca23d919c1b
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Mar 30 14:24:27 2023 -0400

    sunrpc: only free unix grouplist after RCU settles
    
    [ Upstream commit 5085e41f9e83a1bec51da1f20b54f2ec3a13a3fe ]
    
    While the unix_gid object is rcu-freed, the group_info list that it
    contains is not. Ensure that we only put the group list reference once
    we are really freeing the unix_gid object.
    
    Reported-by: Zhi Li <yieli@redhat.com>
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2183056
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Fixes: fd5d2f78261b ("SUNRPC: Make server side AUTH_UNIX use lockless lookups")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 890517a4a2550a28a33c73f38ea4958f46faaf0d
Author: Corinna Vinschen <vinschen@redhat.com>
Date:   Mon Apr 3 14:11:20 2023 +0200

    net: stmmac: fix up RX flow hash indirection table when setting channels
    
    [ Upstream commit 218c597325f4faf7b7a6049233a30d7842b5b2dc ]
    
    stmmac_reinit_queues() fails to fix up the RX hash.  Even if the number
    of channels gets restricted, the output of `ethtool -x' indicates that
    all RX queues are used:
    
      $ ethtool -l enp0s29f2
      Channel parameters for enp0s29f2:
      Pre-set maximums:
      RX:           8
      TX:           8
      Other:                n/a
      Combined:     n/a
      Current hardware settings:
      RX:           8
      TX:           8
      Other:                n/a
      Combined:     n/a
      $ ethtool -x enp0s29f2
      RX flow hash indirection table for enp0s29f2 with 8 RX ring(s):
          0:      0     1     2     3     4     5     6     7
          8:      0     1     2     3     4     5     6     7
      [...]
      $ ethtool -L enp0s29f2 rx 3
      $ ethtool -x enp0s29f2
      RX flow hash indirection table for enp0s29f2 with 3 RX ring(s):
          0:      0     1     2     3     4     5     6     7
          8:      0     1     2     3     4     5     6     7
      [...]
    
    Fix this by setting the indirection table according to the number
    of specified queues.  The result is now as expected:
    
      $ ethtool -L enp0s29f2 rx 3
      $ ethtool -x enp0s29f2
      RX flow hash indirection table for enp0s29f2 with 3 RX ring(s):
          0:      0     1     2     0     1     2     0     1
          8:      2     0     1     2     0     1     2     0
      [...]
    
    Tested on Intel Elkhart Lake.
    
    Fixes: 0366f7e06a6b ("net: stmmac: add ethtool support for get/set channels")
    Signed-off-by: Corinna Vinschen <vinschen@redhat.com>
    Link: https://lore.kernel.org/r/20230403121120.489138-1-vinschen@redhat.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdbbd3fa58f8e9292905a4a10b1da55b2f27e979
Author: Siddharth Vadapalli <s-vadapalli@ti.com>
Date:   Mon Apr 3 14:33:21 2023 +0530

    net: ethernet: ti: am65-cpsw: Fix mdio cleanup in probe
    
    [ Upstream commit c6b486fb33680ad5a3a6390ce693c835caaae3f7 ]
    
    In the am65_cpsw_nuss_probe() function's cleanup path, the call to
    of_platform_device_destroy() for the common->mdio_dev device is invoked
    unconditionally. It is possible that either the MDIO node is not present
    in the device-tree, or the MDIO node is disabled in the device-tree. In
    both these cases, the MDIO device is not created, resulting in a NULL
    pointer dereference when the of_platform_device_destroy() function is
    invoked on the common->mdio_dev device on the cleanup path.
    
    Fix this by ensuring that the common->mdio_dev device exists, before
    attempting to invoke of_platform_device_destroy().
    
    Fixes: a45cfcc69a25 ("net: ethernet: ti: am65-cpsw-nuss: use of_platform_device_create() for mdio")
    Signed-off-by: Siddharth Vadapalli <s-vadapalli@ti.com>
    Reviewed-by: Roger Quadros <rogerq@kernel.org>
    Link: https://lore.kernel.org/r/20230403090321.835877-1-s-vadapalli@ti.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8c8476c14330cf0e12cd42a8e3c5943d95d81ef
Author: Dhruva Gole <d-gole@ti.com>
Date:   Mon Apr 3 12:54:43 2023 +0530

    gpio: davinci: Add irq chip flag to skip set wake
    
    [ Upstream commit 7b75c4703609a3ebaf67271813521bc0281e1ec1 ]
    
    Add the IRQCHIP_SKIP_SET_WAKE flag since there are no special IRQ Wake
    bits that can be set to enable wakeup IRQ.
    
    Fixes: 3d9edf09d452 ("[ARM] 4457/2: davinci: GPIO support")
    Signed-off-by: Dhruva Gole <d-gole@ti.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 605b056d63302ae84eb136e88d4df49124bd5e0d
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Mon Apr 3 15:34:17 2023 +0800

    ipv6: Fix an uninit variable access bug in __ip6_make_skb()
    
    [ Upstream commit ea30388baebcce37fd594d425a65037ca35e59e8 ]
    
    Syzbot reported a bug as following:
    
    =====================================================
    BUG: KMSAN: uninit-value in arch_atomic64_inc arch/x86/include/asm/atomic64_64.h:88 [inline]
    BUG: KMSAN: uninit-value in arch_atomic_long_inc include/linux/atomic/atomic-long.h:161 [inline]
    BUG: KMSAN: uninit-value in atomic_long_inc include/linux/atomic/atomic-instrumented.h:1429 [inline]
    BUG: KMSAN: uninit-value in __ip6_make_skb+0x2f37/0x30f0 net/ipv6/ip6_output.c:1956
     arch_atomic64_inc arch/x86/include/asm/atomic64_64.h:88 [inline]
     arch_atomic_long_inc include/linux/atomic/atomic-long.h:161 [inline]
     atomic_long_inc include/linux/atomic/atomic-instrumented.h:1429 [inline]
     __ip6_make_skb+0x2f37/0x30f0 net/ipv6/ip6_output.c:1956
     ip6_finish_skb include/net/ipv6.h:1122 [inline]
     ip6_push_pending_frames+0x10e/0x550 net/ipv6/ip6_output.c:1987
     rawv6_push_pending_frames+0xb12/0xb90 net/ipv6/raw.c:579
     rawv6_sendmsg+0x297e/0x2e60 net/ipv6/raw.c:922
     inet_sendmsg+0x101/0x180 net/ipv4/af_inet.c:827
     sock_sendmsg_nosec net/socket.c:714 [inline]
     sock_sendmsg net/socket.c:734 [inline]
     ____sys_sendmsg+0xa8e/0xe70 net/socket.c:2476
     ___sys_sendmsg+0x2a1/0x3f0 net/socket.c:2530
     __sys_sendmsg net/socket.c:2559 [inline]
     __do_sys_sendmsg net/socket.c:2568 [inline]
     __se_sys_sendmsg net/socket.c:2566 [inline]
     __x64_sys_sendmsg+0x367/0x540 net/socket.c:2566
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:766 [inline]
     slab_alloc_node mm/slub.c:3452 [inline]
     __kmem_cache_alloc_node+0x71f/0xce0 mm/slub.c:3491
     __do_kmalloc_node mm/slab_common.c:967 [inline]
     __kmalloc_node_track_caller+0x114/0x3b0 mm/slab_common.c:988
     kmalloc_reserve net/core/skbuff.c:492 [inline]
     __alloc_skb+0x3af/0x8f0 net/core/skbuff.c:565
     alloc_skb include/linux/skbuff.h:1270 [inline]
     __ip6_append_data+0x51c1/0x6bb0 net/ipv6/ip6_output.c:1684
     ip6_append_data+0x411/0x580 net/ipv6/ip6_output.c:1854
     rawv6_sendmsg+0x2882/0x2e60 net/ipv6/raw.c:915
     inet_sendmsg+0x101/0x180 net/ipv4/af_inet.c:827
     sock_sendmsg_nosec net/socket.c:714 [inline]
     sock_sendmsg net/socket.c:734 [inline]
     ____sys_sendmsg+0xa8e/0xe70 net/socket.c:2476
     ___sys_sendmsg+0x2a1/0x3f0 net/socket.c:2530
     __sys_sendmsg net/socket.c:2559 [inline]
     __do_sys_sendmsg net/socket.c:2568 [inline]
     __se_sys_sendmsg net/socket.c:2566 [inline]
     __x64_sys_sendmsg+0x367/0x540 net/socket.c:2566
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    It is because icmp6hdr does not in skb linear region under the scenario
    of SOCK_RAW socket. Access icmp6_hdr(skb)->icmp6_type directly will
    trigger the uninit variable access bug.
    
    Use a local variable icmp6_type to carry the correct value in different
    scenarios.
    
    Fixes: 14878f75abd5 ("[IPV6]: Add ICMPMsgStats MIB (RFC 4293) [rev 2]")
    Reported-by: syzbot+8257f4dcef79de670baf@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=3d605ec1d0a7f2a269a1a6936ac7f2b85975ee9c
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff2565fb8f19a0904e6f72af576294443fdd7f0d
Author: Sricharan Ramabadhran <quic_srichara@quicinc.com>
Date:   Mon Apr 3 12:28:51 2023 +0530

    net: qrtr: Do not do DEL_SERVER broadcast after DEL_CLIENT
    
    [ Upstream commit 839349d13905927d8a567ca4d21d88c82028e31d ]
    
    On the remote side, when QRTR socket is removed, af_qrtr will call
    qrtr_port_remove() which broadcasts the DEL_CLIENT packet to all neighbours
    including local NS. NS upon receiving the DEL_CLIENT packet, will remove
    the lookups associated with the node:port and broadcasts the DEL_SERVER
    packet.
    
    But on the host side, due to the arrival of the DEL_CLIENT packet, the NS
    would've already deleted the server belonging to that port. So when the
    remote's NS again broadcasts the DEL_SERVER for that port, it throws below
    error message on the host:
    
    "failed while handling packet from 2:-2"
    
    So fix this error by not broadcasting the DEL_SERVER packet when the
    DEL_CLIENT packet gets processed."
    
    Fixes: 0c2204a4ad71 ("net: qrtr: Migrate nameservice to kernel from userspace")
    Reviewed-by: Manivannan Sadhasivam <mani@kernel.org>
    Signed-off-by: Ram Kumar Dharuman <quic_ramd@quicinc.com>
    Signed-off-by: Sricharan Ramabadhran <quic_srichara@quicinc.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4b6dfad41aaae9e36e44327b18d5cf4b20dd2ce
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Apr 1 19:09:57 2023 -0400

    sctp: check send stream number after wait_for_sndbuf
    
    [ Upstream commit 2584024b23552c00d95b50255e47bd18d306d31a ]
    
    This patch fixes a corner case where the asoc out stream count may change
    after wait_for_sndbuf.
    
    When the main thread in the client starts a connection, if its out stream
    count is set to N while the in stream count in the server is set to N - 2,
    another thread in the client keeps sending the msgs with stream number
    N - 1, and waits for sndbuf before processing INIT_ACK.
    
    However, after processing INIT_ACK, the out stream count in the client is
    shrunk to N - 2, the same to the in stream count in the server. The crash
    occurs when the thread waiting for sndbuf is awake and sends the msg in a
    non-existing stream(N - 1), the call trace is as below:
    
      KASAN: null-ptr-deref in range [0x0000000000000038-0x000000000000003f]
      Call Trace:
       <TASK>
       sctp_cmd_send_msg net/sctp/sm_sideeffect.c:1114 [inline]
       sctp_cmd_interpreter net/sctp/sm_sideeffect.c:1777 [inline]
       sctp_side_effects net/sctp/sm_sideeffect.c:1199 [inline]
       sctp_do_sm+0x197d/0x5310 net/sctp/sm_sideeffect.c:1170
       sctp_primitive_SEND+0x9f/0xc0 net/sctp/primitive.c:163
       sctp_sendmsg_to_asoc+0x10eb/0x1a30 net/sctp/socket.c:1868
       sctp_sendmsg+0x8d4/0x1d90 net/sctp/socket.c:2026
       inet_sendmsg+0x9d/0xe0 net/ipv4/af_inet.c:825
       sock_sendmsg_nosec net/socket.c:722 [inline]
       sock_sendmsg+0xde/0x190 net/socket.c:745
    
    The fix is to add an unlikely check for the send stream number after the
    thread wakes up from the wait_for_sndbuf.
    
    Fixes: 5bbbbe32a431 ("sctp: introduce stream scheduler foundations")
    Reported-by: syzbot+47c24ca20a2fa01f082e@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efda95cebfdd72f66c3d927641538eeaa0e7ace6
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Thu Mar 30 19:21:44 2023 -0700

    net: don't let netpoll invoke NAPI if in xmit context
    
    [ Upstream commit 275b471e3d2daf1472ae8fa70dc1b50c9e0b9e75 ]
    
    Commit 0db3dc73f7a3 ("[NETPOLL]: tx lock deadlock fix") narrowed
    down the region under netif_tx_trylock() inside netpoll_send_skb().
    (At that point in time netif_tx_trylock() would lock all queues of
    the device.) Taking the tx lock was problematic because driver's
    cleanup method may take the same lock. So the change made us hold
    the xmit lock only around xmit, and expected the driver to take
    care of locking within ->ndo_poll_controller().
    
    Unfortunately this only works if netpoll isn't itself called with
    the xmit lock already held. Netpoll code is careful and uses
    trylock(). The drivers, however, may be using plain lock().
    Printing while holding the xmit lock is going to result in rare
    deadlocks.
    
    Luckily we record the xmit lock owners, so we can scan all the queues,
    the same way we scan NAPI owners. If any of the xmit locks is held
    by the local CPU we better not attempt any polling.
    
    It would be nice if we could narrow down the check to only the NAPIs
    and the queue we're trying to use. I don't see a way to do that now.
    
    Reported-by: Roman Gushchin <roman.gushchin@linux.dev>
    Fixes: 0db3dc73f7a3 ("[NETPOLL]: tx lock deadlock fix")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec81049f0957b2539ec2f449874c2392add01b2a
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 30 17:45:02 2023 +0000

    icmp: guard against too small mtu
    
    [ Upstream commit 7d63b67125382ff0ffdfca434acbc94a38bd092b ]
    
    syzbot was able to trigger a panic [1] in icmp_glue_bits(), or
    more exactly in skb_copy_and_csum_bits()
    
    There is no repro yet, but I think the issue is that syzbot
    manages to lower device mtu to a small value, fooling __icmp_send()
    
    __icmp_send() must make sure there is enough room for the
    packet to include at least the headers.
    
    We might in the future refactor skb_copy_and_csum_bits() and its
    callers to no longer crash when something bad happens.
    
    [1]
    kernel BUG at net/core/skbuff.c:3343 !
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN
    CPU: 0 PID: 15766 Comm: syz-executor.0 Not tainted 6.3.0-rc4-syzkaller-00039-gffe78bbd5121 #0
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014
    RIP: 0010:skb_copy_and_csum_bits+0x798/0x860 net/core/skbuff.c:3343
    Code: f0 c1 c8 08 41 89 c6 e9 73 ff ff ff e8 61 48 d4 f9 e9 41 fd ff ff 48 8b 7c 24 48 e8 52 48 d4 f9 e9 c3 fc ff ff e8 c8 27 84 f9 <0f> 0b 48 89 44 24 28 e8 3c 48 d4 f9 48 8b 44 24 28 e9 9d fb ff ff
    RSP: 0018:ffffc90000007620 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: 00000000000001e8 RCX: 0000000000000100
    RDX: ffff8880276f6280 RSI: ffffffff87fdd138 RDI: 0000000000000005
    RBP: 0000000000000000 R08: 0000000000000005 R09: 0000000000000000
    R10: 00000000000001e8 R11: 0000000000000001 R12: 000000000000003c
    R13: 0000000000000000 R14: ffff888028244868 R15: 0000000000000b0e
    FS: 00007fbc81f1c700(0000) GS:ffff88802ca00000(0000) knlGS:0000000000000000
    CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b2df43000 CR3: 00000000744db000 CR4: 0000000000150ef0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
    <IRQ>
    icmp_glue_bits+0x7b/0x210 net/ipv4/icmp.c:353
    __ip_append_data+0x1d1b/0x39f0 net/ipv4/ip_output.c:1161
    ip_append_data net/ipv4/ip_output.c:1343 [inline]
    ip_append_data+0x115/0x1a0 net/ipv4/ip_output.c:1322
    icmp_push_reply+0xa8/0x440 net/ipv4/icmp.c:370
    __icmp_send+0xb80/0x1430 net/ipv4/icmp.c:765
    ipv4_send_dest_unreach net/ipv4/route.c:1239 [inline]
    ipv4_link_failure+0x5a9/0x9e0 net/ipv4/route.c:1246
    dst_link_failure include/net/dst.h:423 [inline]
    arp_error_report+0xcb/0x1c0 net/ipv4/arp.c:296
    neigh_invalidate+0x20d/0x560 net/core/neighbour.c:1079
    neigh_timer_handler+0xc77/0xff0 net/core/neighbour.c:1166
    call_timer_fn+0x1a0/0x580 kernel/time/timer.c:1700
    expire_timers+0x29b/0x4b0 kernel/time/timer.c:1751
    __run_timers kernel/time/timer.c:2022 [inline]
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+d373d60fddbdc915e666@syzkaller.appspotmail.com
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20230330174502.1915328-1-edumazet@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98a9cd82c541ef6cbdb829cd6c05cbbb471e373c
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Thu Mar 30 09:25:32 2023 +0800

    net: qrtr: Fix a refcount bug in qrtr_recvmsg()
    
    [ Upstream commit 44d807320000db0d0013372ad39b53e12d52f758 ]
    
    Syzbot reported a bug as following:
    
    refcount_t: addition on 0; use-after-free.
    ...
    RIP: 0010:refcount_warn_saturate+0x17c/0x1f0 lib/refcount.c:25
    ...
    Call Trace:
     <TASK>
     __refcount_add include/linux/refcount.h:199 [inline]
     __refcount_inc include/linux/refcount.h:250 [inline]
     refcount_inc include/linux/refcount.h:267 [inline]
     kref_get include/linux/kref.h:45 [inline]
     qrtr_node_acquire net/qrtr/af_qrtr.c:202 [inline]
     qrtr_node_lookup net/qrtr/af_qrtr.c:398 [inline]
     qrtr_send_resume_tx net/qrtr/af_qrtr.c:1003 [inline]
     qrtr_recvmsg+0x85f/0x990 net/qrtr/af_qrtr.c:1070
     sock_recvmsg_nosec net/socket.c:1017 [inline]
     sock_recvmsg+0xe2/0x160 net/socket.c:1038
     qrtr_ns_worker+0x170/0x1700 net/qrtr/ns.c:688
     process_one_work+0x991/0x15c0 kernel/workqueue.c:2390
     worker_thread+0x669/0x1090 kernel/workqueue.c:2537
    
    It occurs in the concurrent scenario of qrtr_recvmsg() and
    qrtr_endpoint_unregister() as following:
    
            cpu0                                    cpu1
    qrtr_recvmsg                            qrtr_endpoint_unregister
    qrtr_send_resume_tx                     qrtr_node_release
    qrtr_node_lookup                        mutex_lock(&qrtr_node_lock)
    spin_lock_irqsave(&qrtr_nodes_lock, )   refcount_dec_and_test(&node->ref) [node->ref == 0]
    radix_tree_lookup [node != NULL]        __qrtr_node_release
    qrtr_node_acquire                       spin_lock_irqsave(&qrtr_nodes_lock, )
    kref_get(&node->ref) [WARNING]          ...
                                            mutex_unlock(&qrtr_node_lock)
    
    Use qrtr_node_lock to protect qrtr_node_lookup() implementation, this
    is actually improving the protection of node reference.
    
    Fixes: 0a7e0d0ef054 ("net: qrtr: Migrate node lookup tree to spinlock")
    Reported-by: syzbot+a7492efaa5d61b51db23@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?extid=a7492efaa5d61b51db23
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94c53d294944d873a922dac151496619a2684af7
Author: Luca Weiss <luca@z3ntu.xyz>
Date:   Tue Sep 28 19:11:57 2021 +0200

    net: qrtr: combine nameservice into main module
    
    [ Upstream commit a365023a76f231cc2fc6e33797e66f3bcaa9f9a9 ]
    
    Previously with CONFIG_QRTR=m a separate ns.ko would be built which
    wasn't done on purpose and should be included in qrtr.ko.
    
    Rename qrtr.c to af_qrtr.c so we can build a qrtr.ko with both af_qrtr.c
    and ns.c.
    
    Signed-off-by: Luca Weiss <luca@z3ntu.xyz>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Tested-By: Steev Klimaszewski <steev@kali.org>
    Reviewed-by: Manivannan Sadhasivam <mani@kernel.org>
    Link: https://lore.kernel.org/r/20210928171156.6353-1-luca@z3ntu.xyz
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: 44d807320000 ("net: qrtr: Fix a refcount bug in qrtr_recvmsg()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fe20515449a80a177526d2ecd13b43f6ee41aeb
Author: Felix Fietkau <nbd@nbd.name>
Date:   Fri Mar 24 13:09:24 2023 +0100

    wifi: mac80211: fix invalid drv_sta_pre_rcu_remove calls for non-uploaded sta
    
    [ Upstream commit 12b220a6171faf10638ab683a975cadcf1a352d6 ]
    
    Avoid potential data corruption issues caused by uninitialized driver
    private data structures.
    
    Reported-by: Brian Coverstone <brian@mainsequence.net>
    Fixes: 6a9d1b91f34d ("mac80211: add pre-RCU-sync sta removal driver operation")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Link: https://lore.kernel.org/r/20230324120924.38412-3-nbd@nbd.name
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2951229ee7d0f44e252e306dc6f8c13fe987bd21
Author: Nico Boehr <nrb@linux.ibm.com>
Date:   Mon Feb 13 09:55:20 2023 +0100

    KVM: s390: pv: fix external interruption loop not always detected
    
    [ Upstream commit 21f27df854008b86349a203bf97fef79bb11f53e ]
    
    To determine whether the guest has caused an external interruption loop
    upon code 20 (external interrupt) intercepts, the ext_new_psw needs to
    be inspected to see whether external interrupts are enabled.
    
    Under non-PV, ext_new_psw can simply be taken from guest lowcore. Under
    PV, KVM can only access the encrypted guest lowcore and hence the
    ext_new_psw must not be taken from guest lowcore.
    
    handle_external_interrupt() incorrectly did that and hence was not able
    to reliably tell whether an external interruption loop is happening or
    not. False negatives cause spurious failures of my kvm-unit-test
    for extint loops[1] under PV.
    
    Since code 20 is only caused under PV if and only if the guest's
    ext_new_psw is enabled for external interrupts, false positive detection
    of a external interruption loop can not happen.
    
    Fix this issue by instead looking at the guest PSW in the state
    description. Since the PSW swap for external interrupt is done by the
    ultravisor before the intercept is caused, this reliably tells whether
    the guest is enabled for external interrupts in the ext_new_psw.
    
    Also update the comments to explain better what is happening.
    
    [1] https://lore.kernel.org/kvm/20220812062151.1980937-4-nrb@linux.ibm.com/
    
    Signed-off-by: Nico Boehr <nrb@linux.ibm.com>
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@linux.ibm.com>
    Fixes: 201ae986ead7 ("KVM: s390: protvirt: Implement interrupt injection")
    Link: https://lore.kernel.org/r/20230213085520.100756-2-nrb@linux.ibm.com
    Message-Id: <20230213085520.100756-2-nrb@linux.ibm.com>
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b43a8939f1e125923fe10492b9ce13133fea0775
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Mar 22 22:45:43 2023 +0100

    pwm: sprd: Explicitly set .polarity in .get_state()
    
    [ Upstream commit 2be4dcf6627e1bcbbef8e6ba1811f5127d39202c ]
    
    The driver only supports normal polarity. Complete the implementation of
    .get_state() by setting .polarity accordingly.
    
    Fixes: 8aae4b02e8a6 ("pwm: sprd: Add Spreadtrum PWM support")
    Link: https://lore.kernel.org/r/20230228135508.1798428-5-u.kleine-koenig@pengutronix.de
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d59b83494d1b2d02dcd1226c560f957c19df708f
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Mar 22 22:45:41 2023 +0100

    pwm: cros-ec: Explicitly set .polarity in .get_state()
    
    [ Upstream commit 30006b77c7e130e01d1ab2148cc8abf73dfcc4bf ]
    
    The driver only supports normal polarity. Complete the implementation of
    .get_state() by setting .polarity accordingly.
    
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Fixes: 1f0d3bb02785 ("pwm: Add ChromeOS EC PWM driver")
    Link: https://lore.kernel.org/r/20230228135508.1798428-3-u.kleine-koenig@pengutronix.de
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 176c6b4889195fbe7016d9401175b48c5c9edf68
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Fri Feb 17 22:44:11 2023 +0200

    Drivers: vmbus: Check for channel allocation before looking up relids
    
    [ Upstream commit 1eb65c8687316c65140b48fad27133d583178e15 ]
    
    relid2channel() assumes vmbus channel array to be allocated when called.
    However, in cases such as kdump/kexec, not all relids will be reset by the host.
    When the second kernel boots and if the guest receives a vmbus interrupt during
    vmbus driver initialization before vmbus_connect() is called, before it finishes,
    or if it fails, the vmbus interrupt service routine is called which in turn calls
    relid2channel() and can cause a null pointer dereference.
    
    Print a warning and error out in relid2channel() for a channel id that's invalid
    in the second kernel.
    
    Fixes: 8b6a877c060e ("Drivers: hv: vmbus: Replace the per-CPU channel lists with a global array of channels")
    
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Reviewed-by: Dexuan Cui <decui@microsoft.com>
    Link: https://lore.kernel.org/r/20230217204411.212709-1-mgamal@redhat.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c51b336bd9516e67f3f5b7e4d9706a380e587d24
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Feb 25 21:39:48 2023 -0800

    gpio: GPIO_REGMAP: select REGMAP instead of depending on it
    
    [ Upstream commit d49765b5f4320a402fbc4ed5edfd73d87640f27c ]
    
    REGMAP is a hidden (not user visible) symbol. Users cannot set it
    directly thru "make *config", so drivers should select it instead of
    depending on it if they need it.
    
    Consistently using "select" or "depends on" can also help reduce
    Kconfig circular dependency issues.
    
    Therefore, change the use of "depends on REGMAP" to "select REGMAP".
    
    Fixes: ebe363197e52 ("gpio: add a reusable generic gpio_chip using regmap")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Michael Walle <michael@walle.cc>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Bartosz Golaszewski <brgl@bgdev.pl>
    Cc: linux-gpio@vger.kernel.org
    Acked-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
