commit 4a77e6ef2057d9d4e2e1df3f7739622477e8738d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Sep 23 14:17:01 2022 +0200

    Linux 5.10.145
    
    Link: https://lore.kernel.org/r/20220921153645.663680057@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Allen Pais <apais@linux.microsoft.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca5539d421647d66c1d0076c4771a6a830074237
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Sep 5 15:06:30 2022 +0200

    ALSA: hda/sigmatel: Fix unused variable warning for beep power change
    
    commit 51bdc8bb82525cd70feb92279c8b7660ad7948dd upstream.
    
    The newly added stac_check_power_status() caused a compile warning
    when CONFIG_SND_HDA_INPUT_BEEP is disabled.  Fix it.
    
    Fixes: 414d38ba8710 ("ALSA: hda/sigmatel: Keep power up while beep is enabled")
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/r/20220905130630.2845-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f267393b036f1470fb12fb892d59e7ff8aeb58d
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Thu Aug 25 17:38:38 2022 +0900

    cgroup: Add missing cpus_read_lock() to cgroup_attach_task_all()
    
    commit 43626dade36fa74d3329046f4ae2d7fdefe401c6 upstream.
    
    syzbot is hitting percpu_rwsem_assert_held(&cpu_hotplug_lock) warning at
    cpuset_attach() [1], for commit 4f7e7236435ca0ab ("cgroup: Fix
    threadgroup_rwsem <-> cpus_read_lock() deadlock") missed that
    cpuset_attach() is also called from cgroup_attach_task_all().
    Add cpus_read_lock() like what cgroup_procs_write_start() does.
    
    Link: https://syzkaller.appspot.com/bug?extid=29d3a3b4d86c8136ad9e [1]
    Reported-by: syzbot <syzbot+29d3a3b4d86c8136ad9e@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: 4f7e7236435ca0ab ("cgroup: Fix threadgroup_rwsem <-> cpus_read_lock() deadlock")
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06e194e1130c98f82d46beb40cdbc88a0d4fd6de
Author: Hyunwoo Kim <imv4bel@gmail.com>
Date:   Mon Jun 20 07:17:46 2022 -0700

    video: fbdev: pxa3xx-gcu: Fix integer overflow in pxa3xx_gcu_write
    
    [ Upstream commit a09d2d00af53b43c6f11e6ab3cb58443c2cac8a7 ]
    
    In pxa3xx_gcu_write, a count parameter of type size_t is passed to words of
    type int.  Then, copy_from_user() may cause a heap overflow because it is used
    as the third argument of copy_from_user().
    
    Signed-off-by: Hyunwoo Kim <imv4bel@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fefe614ed802ab5bb383e32a0686333bd5e6fb7
Author: Youling Tang <tangyouling@loongson.cn>
Date:   Thu Sep 1 19:10:59 2022 +0800

    mksysmap: Fix the mismatch of 'L0' symbols in System.map
    
    [ Upstream commit c17a2538704f926ee4d167ba625e09b1040d8439 ]
    
    When System.map was generated, the kernel used mksysmap to filter the
    kernel symbols, we need to filter "L0" symbols in LoongArch architecture.
    
    $ cat System.map | grep L0
    9000000000221540 t L0
    
    The L0 symbol exists in System.map, but not in .tmp_System.map. When
    "cmp -s System.map .tmp_System.map" will show "Inconsistent kallsyms
    data" error message in link-vmlinux.sh script.
    
    Signed-off-by: Youling Tang <tangyouling@loongson.cn>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e6d2eff56611d03b0933951b11db6146790af60
Author: Alexander Sverdlin <alexander.sverdlin@nokia.com>
Date:   Tue Sep 6 11:59:43 2022 +0200

    MIPS: OCTEON: irq: Fix octeon_irq_force_ciu_mapping()
    
    [ Upstream commit ba912afbd611d3a5f22af247721a071ad1d5b9e0 ]
    
    For irq_domain_associate() to work the virq descriptor has to be
    pre-allocated in advance. Otherwise the following happens:
    
    WARNING: CPU: 0 PID: 0 at .../kernel/irq/irqdomain.c:527 irq_domain_associate+0x298/0x2e8
    error: virq128 is not allocated
    Modules linked in:
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.19.78-... #1
            ...
    Call Trace:
    [<ffffffff801344c4>] show_stack+0x9c/0x130
    [<ffffffff80769550>] dump_stack+0x90/0xd0
    [<ffffffff801576d0>] __warn+0x118/0x130
    [<ffffffff80157734>] warn_slowpath_fmt+0x4c/0x70
    [<ffffffff801b83c0>] irq_domain_associate+0x298/0x2e8
    [<ffffffff80a43bb8>] octeon_irq_init_ciu+0x4c8/0x53c
    [<ffffffff80a76cbc>] of_irq_init+0x1e0/0x388
    [<ffffffff80a452cc>] init_IRQ+0x4c/0xf4
    [<ffffffff80a3cc00>] start_kernel+0x404/0x698
    
    Use irq_alloc_desc_at() to avoid the above problem.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72602bc62013fa1a41dc931aeed34e78c63fd2e7
Author: David Howells <dhowells@redhat.com>
Date:   Tue Sep 6 22:09:11 2022 +0100

    afs: Return -EAGAIN, not -EREMOTEIO, when a file already locked
    
    [ Upstream commit 0066f1b0e27556381402db3ff31f85d2a2265858 ]
    
    When trying to get a file lock on an AFS file, the server may return
    UAEAGAIN to indicate that the lock is already held.  This is currently
    translated by the default path to -EREMOTEIO.
    
    Translate it instead to -EAGAIN so that we know we can retry it.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeffrey E Altman <jaltman@auristor.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Link: https://lore.kernel.org/r/166075761334.3533338.2591992675160918098.stgit@warthog.procyon.org.uk/
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 517a0324db6e639f4f558249268fa23371ec9a8d
Author: jerry.meng <jerry-meng@foxmail.com>
Date:   Mon Sep 5 09:24:52 2022 +0800

    net: usb: qmi_wwan: add Quectel RM520N
    
    [ Upstream commit e1091e226a2bab4ded1fe26efba2aee1aab06450 ]
    
    add support for Quectel RM520N which is based on Qualcomm SDX62 chip.
    
    0x0801: DIAG + NMEA + AT + MODEM + RMNET
    
    T:  Bus=03 Lev=01 Prnt=01 Port=01 Cnt=02 Dev#= 10 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0801 Rev= 5.04
    S:  Manufacturer=Quectel
    S:  Product=RM520N-GL
    S:  SerialNumber=384af524
    C:* #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=40 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=88(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=8e(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=0f(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Signed-off-by: jerry.meng <jerry-meng@foxmail.com>
    Acked-by: Bj√∏rn Mork <bjorn@mork.no>
    Link: https://lore.kernel.org/r/tencent_E50CA8A206904897C2D20DDAE90731183C05@qq.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a36fd2d8d69cca7a961f06c97cf2331165e40822
Author: Mohan Kumar <mkumard@nvidia.com>
Date:   Mon Sep 5 22:54:20 2022 +0530

    ALSA: hda/tegra: Align BDL entry to 4KB boundary
    
    [ Upstream commit 8d44e6044a0e885acdd01813768a0b27906d64fd ]
    
    AZA HW may send a burst read/write request crossing 4K memory boundary.
    The 4KB boundary is not guaranteed by Tegra HDA HW. Make SW change to
    include the flag AZX_DCAPS_4K_BDLE_BOUNDARY to align BDLE to 4K
    boundary.
    
    Signed-off-by: Mohan Kumar <mkumard@nvidia.com>
    Link: https://lore.kernel.org/r/20220905172420.3801-1-mkumard@nvidia.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e41b97a27780072584909f461e6de9cb5e6769a3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Sep 4 09:27:50 2022 +0200

    ALSA: hda/sigmatel: Keep power up while beep is enabled
    
    [ Upstream commit 414d38ba871092aeac4ed097ac4ced89486646f7 ]
    
    It seems that the beep playback doesn't work well on IDT codec devices
    when the codec auto-pm is enabled.  Keep the power on while the beep
    switch is enabled.
    
    Link: https://bugzilla.suse.com/show_bug.cgi?id=1200544
    Link: https://lore.kernel.org/r/20220904072750.26164-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b95a5ef4c05453de9765eb83a35c482bc2cd9064
Author: Soenke Huster <soenke.huster@eknoes.de>
Date:   Fri Sep 2 10:19:58 2022 +0200

    wifi: mac80211_hwsim: check length for virtio packets
    
    [ Upstream commit 8c0427842aaef161a38ac83b7e8d8fe050b4be04 ]
    
    An invalid packet with a length shorter than the specified length in the
    netlink header can lead to use-after-frees and slab-out-of-bounds in the
    processing of the netlink attributes, such as the following:
    
      BUG: KASAN: slab-out-of-bounds in __nla_validate_parse+0x1258/0x2010
      Read of size 2 at addr ffff88800ac7952c by task kworker/0:1/12
    
      Workqueue: events hwsim_virtio_rx_work
      Call Trace:
       <TASK>
       dump_stack_lvl+0x45/0x5d
       print_report.cold+0x5e/0x5e5
       kasan_report+0xb1/0x1c0
       __nla_validate_parse+0x1258/0x2010
       __nla_parse+0x22/0x30
       hwsim_virtio_handle_cmd.isra.0+0x13f/0x2d0
       hwsim_virtio_rx_work+0x1b2/0x370
       process_one_work+0x8df/0x1530
       worker_thread+0x575/0x11a0
       kthread+0x29d/0x340
       ret_from_fork+0x22/0x30
     </TASK>
    
    Discarding packets with an invalid length solves this.
    Therefore, skb->len must be set at reception.
    
    Change-Id: Ieaeb9a4c62d3beede274881a7c2722c6c6f477b6
    Signed-off-by: Soenke Huster <soenke.huster@eknoes.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c505fee07b3dbe24054fc54f9d3f0a73003d27b5
Author: David Howells <dhowells@redhat.com>
Date:   Tue Apr 5 13:34:09 2022 +0100

    rxrpc: Fix calc of resend age
    
    [ Upstream commit 214a9dc7d852216e83acac7b75bc18f01ce184c2 ]
    
    Fix the calculation of the resend age to add a microsecond value as
    microseconds, not nanoseconds.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35da670ed13ee161a9c943b839469fb3baf0e8fd
Author: David Howells <dhowells@redhat.com>
Date:   Fri May 6 23:55:21 2022 +0100

    rxrpc: Fix local destruction being repeated
    
    [ Upstream commit d3d863036d688313f8d566b87acd7d99daf82749 ]
    
    If the local processor work item for the rxrpc local endpoint gets requeued
    by an event (such as an incoming packet) between it getting scheduled for
    destruction and the UDP socket being closed, the rxrpc_local_destroyer()
    function can get run twice.  The second time it can hang because it can end
    up waiting for cleanup events that will never happen.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 891d5c46f282a8d0d9ab2b2059816fa636d69f85
Author: Xiaolei Wang <xiaolei.wang@windriver.com>
Date:   Thu Aug 25 19:19:22 2022 +0800

    regulator: pfuze100: Fix the global-out-of-bounds access in pfuze100_regulator_probe()
    
    [ Upstream commit 78e1e867f44e6bdc72c0e6a2609a3407642fb30b ]
    
    The pfuze_chip::regulator_descs is an array of size
    PFUZE100_MAX_REGULATOR, the pfuze_chip::pfuze_regulators
    is the pointer to the real regulators of a specific device.
    The number of real regulator is supposed to be less than
    the PFUZE100_MAX_REGULATOR, so we should use the size of
    'regulator_num * sizeof(struct pfuze_regulator)' in memcpy().
    This fixes the out of bounds access bug reported by KASAN.
    
    Signed-off-by: Xiaolei Wang <xiaolei.wang@windriver.com>
    Link: https://lore.kernel.org/r/20220825111922.1368055-1-xiaolei.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2ef959e33b2234bb9fc02e8120390fbb9ea8f20
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 23 10:09:57 2022 +0200

    ASoC: nau8824: Fix semaphore unbalance at error paths
    
    [ Upstream commit 5628560e90395d3812800a8e44a01c32ffa429ec ]
    
    The semaphore of nau8824 wasn't properly unlocked at some error
    handling code paths, hence this may result in the unbalance (and
    potential lock-up).  Fix them to handle the semaphore up properly.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20220823081000.2965-3-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 107c6b60582c99820916b19183b5c855e2d60434
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Oct 7 15:31:46 2021 +0200

    Revert "serial: 8250: Fix reporting real baudrate value in c_ospeed field"
    
    commit d02b006b29de14968ba4afa998bede0d55469e29 upstream.
    
    This reverts commit 32262e2e429cdb31f9e957e997d53458762931b7.
    
    The commit in question claims to determine the inverse of
    serial8250_get_divisor() but failed to notice that some drivers override
    the default implementation using a get_divisor() callback.
    
    This means that the computed line-speed values can be completely wrong
    and results in regular TCSETS requests failing (the incorrect values
    would also be passed to any overridden set_divisor() callback).
    
    Similarly, it also failed to honour the old (deprecated) ASYNC_SPD_FLAGS
    and would break applications relying on those when re-encoding the
    actual line speed.
    
    There are also at least two quirks, UART_BUG_QUOT and an OMAP1510
    workaround, which were happily ignored and that are now broken.
    
    Finally, even if the offending commit were to be implemented correctly,
    this is a new feature and not something which should be backported to
    stable.
    
    Cc: Pali Roh√°r <pali@kernel.org>
    Fixes: 32262e2e429c ("serial: 8250: Fix reporting real baudrate value in c_ospeed field")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211007133146.28949-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e00582a36198888ffe91ed6b097d86556c8bb253
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Apr 4 16:47:17 2022 +0800

    video: fbdev: i740fb: Error out if 'pixclock' equals zero
    
    commit 15cf0b82271b1823fb02ab8c377badba614d95d5 upstream.
    
    The userspace program could pass any values to the driver through
    ioctl() interface. If the driver doesn't check the value of 'pixclock',
    it may cause divide error.
    
    Fix this by checking whether 'pixclock' is zero in the function
    i740fb_check_var().
    
    The following log reveals it:
    
    divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    RIP: 0010:i740fb_decode_var drivers/video/fbdev/i740fb.c:444 [inline]
    RIP: 0010:i740fb_set_par+0x272f/0x3bb0 drivers/video/fbdev/i740fb.c:739
    Call Trace:
        fb_set_var+0x604/0xeb0 drivers/video/fbdev/core/fbmem.c:1036
        do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1112
        fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1191
        vfs_ioctl fs/ioctl.c:51 [inline]
        __do_sys_ioctl fs/ioctl.c:874 [inline]
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f63ddf62d0c837ebc64dce3d3ce4e7f5ce94074d
Author: Ben Hutchings <benh@debian.org>
Date:   Tue Aug 25 23:27:40 2020 +0100

    tools/include/uapi: Fix <asm/errno.h> for parisc and xtensa
    
    commit 95363747a6f39e88a3052fcf6ce6237769495ce0 upstream.
    
    tools/include/uapi/asm/errno.h currently attempts to include
    non-existent arch-specific errno.h header for xtensa.
    Remove this case so that <asm-generic/errno.h> is used instead,
    and add the missing arch-specific header for parisc.
    
    References: https://buildd.debian.org/status/fetch.php?pkg=linux&arch=ia64&ver=5.8.3-1%7Eexp1&stamp=1598340829&raw=1
    Signed-off-by: Ben Hutchings <benh@debian.org>
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Cc: <stable@vger.kernel.org> # 5.10+
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 331eba80cbd70bfd11c0608a3adadbaa6b05f869
Author: Stefan Metzmacher <metze@samba.org>
Date:   Wed Sep 14 05:25:46 2022 +0200

    cifs: don't send down the destination address to sendmsg for a SOCK_STREAM
    
    commit 17d3df38dc5f4cec9b0ac6eb79c1859b6e2693a4 upstream.
    
    This is ignored anyway by the tcp layer.
    
    Signed-off-by: Stefan Metzmacher <metze@samba.org>
    Cc: stable@vger.kernel.org
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3fbd08e7ca36e4b43a257d55e99258f8b67b156
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Mon Sep 12 13:04:46 2022 +1000

    cifs: revalidate mapping when doing direct writes
    
    commit 7500a99281dfed2d4a84771c933bcb9e17af279b upstream.
    
    Kernel bugzilla: 216301
    
    When doing direct writes we need to also invalidate the mapping in case
    we have a cached copy of the affected page(s) in memory or else
    subsequent reads of the data might return the old/stale content
    before we wrote an update to the server.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9398cb81cdc8464a308e7022d791d99dbf6480a
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Aug 24 17:32:56 2022 +0200

    of/device: Fix up of_dma_configure_id() stub
    
    commit 40bfe7a86d84cf08ac6a8fe2f0c8bf7a43edd110 upstream.
    
    Since the stub version of of_dma_configure_id() was added in commit
    a081bd4af4ce ("of/device: Add input id to of_dma_configure()"), it has
    not matched the signature of the full function, leading to build failure
    reports when code using this function is built on !OF configurations.
    
    Fixes: a081bd4af4ce ("of/device: Add input id to of_dma_configure()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Reviewed-by: Frank Rowand <frank.rowand@sony.com>
    Acked-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Link: https://lore.kernel.org/r/20220824153256.1437483-1-thierry.reding@gmail.com
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a27acda3d6a8b388ca87868b30e1fcb05e2c18f
Author: Yipeng Zou <zouyipeng@huawei.com>
Date:   Thu Sep 1 18:45:14 2022 +0800

    tracing: hold caller_addr to hardirq_{enable,disable}_ip
    
    [ Upstream commit 54c3931957f6a6194d5972eccc36d052964b2abe ]
    
    Currently, The arguments passing to lockdep_hardirqs_{on,off} was fixed
    in CALLER_ADDR0.
    The function trace_hardirqs_on_caller should have been intended to use
    caller_addr to represent the address that caller wants to be traced.
    
    For example, lockdep log in riscv showing the last {enabled,disabled} at
    __trace_hardirqs_{on,off} all the time(if called by):
    [   57.853175] hardirqs last  enabled at (2519): __trace_hardirqs_on+0xc/0x14
    [   57.853848] hardirqs last disabled at (2520): __trace_hardirqs_off+0xc/0x14
    
    After use trace_hardirqs_xx_caller, we can get more effective information:
    [   53.781428] hardirqs last  enabled at (2595): restore_all+0xe/0x66
    [   53.782185] hardirqs last disabled at (2596): ret_from_exception+0xa/0x10
    
    Link: https://lkml.kernel.org/r/20220901104515.135162-2-zouyipeng@huawei.com
    
    Cc: stable@vger.kernel.org
    Fixes: c3bc8fd637a96 ("tracing: Centralize preemptirq tracepoints and unify their usage")
    Signed-off-by: Yipeng Zou <zouyipeng@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65dd251c516d200456e5c92398966223adfa21b3
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Aug 24 17:36:57 2022 +0800

    parisc: ccio-dma: Add missing iounmap in error path in ccio_probe()
    
    [ Upstream commit 38238be4e881a5d0abbe4872b4cd6ed790be06c8 ]
    
    Add missing iounmap() before return from ccio_probe(), if ccio_init_resources()
    fails.
    
    Fixes: d46c742f827f ("parisc: ccio-dma: Handle kmalloc failure in ccio_init_resources()")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f24b0a7ca41433c8f8c49c2398fde1129454bfa
Author: Stuart Menefy <stuart.menefy@mathembedded.com>
Date:   Thu Sep 8 16:52:43 2022 +0100

    drm/meson: Fix OSD1 RGB to YCbCr coefficient
    
    [ Upstream commit 6463d3930ba5b6addcfc8f80a4543976a2fc7656 ]
    
    VPP_WRAP_OSD1_MATRIX_COEF22.Coeff22 is documented as being bits 0-12,
    not 16-28.
    
    Without this the output tends to have a pink hue, changing it results
    in better color accuracy.
    
    The vendor kernel doesn't use this register. However the code which
    sets VIU2_OSD1_MATRIX_COEF22 also uses bits 0-12. There is a slightly
    different style of registers for configuring some of the other matrices,
    which do use bits 16-28 for this coefficient, but those have names
    ending in MATRIX_COEF22_30, and this is not one of those.
    
    Signed-off-by: Stuart Menefy <stuart.menefy@mathembedded.com>
    Fixes: 728883948b0d ("drm/meson: Add G12A Support for VIU setup")
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220908155243.687143-1-stuart.menefy@mathembedded.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d3d2e384b227cb2020d760cdddf8ab3a545b4a5
Author: Stuart Menefy <stuart.menefy@mathembedded.com>
Date:   Thu Sep 8 16:51:03 2022 +0100

    drm/meson: Correct OSD1 global alpha value
    
    [ Upstream commit 6836829c8ea453c9e3e518e61539e35881c8ed5f ]
    
    VIU_OSD1_CTRL_STAT.GLOBAL_ALPHA is a 9 bit field, so the maximum
    value is 0x100 not 0xff.
    
    This matches the vendor kernel.
    
    Signed-off-by: Stuart Menefy <stuart.menefy@mathembedded.com>
    Fixes: bbbe775ec5b5 ("drm: Add support for Amlogic Meson Graphic Controller")
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220908155103.686904-1-stuart.menefy@mathembedded.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24196210b198e8e39296e277bb93b362aa207775
Author: Pali Roh√°r <pali@kernel.org>
Date:   Tue Sep 6 12:54:31 2022 +0200

    gpio: mpc8xxx: Fix support for IRQ_TYPE_LEVEL_LOW flow_type in mpc85xx
    
    [ Upstream commit 279c12df8d2efb28def9d037f288cbfb97c30fe2 ]
    
    Commit e39d5ef67804 ("powerpc/5xxx: extend mpc8xxx_gpio driver to support
    mpc512x gpios") implemented support for IRQ_TYPE_LEVEL_LOW flow type in
    mpc512x via falling edge type. Do same for mpc85xx which support was added
    in commit 345e5c8a1cc3 ("powerpc: Add interrupt support to mpc8xxx_gpio").
    
    Fixes probing of lm90 hwmon driver on mpc85xx based board which use level
    interrupt. Without it kernel prints error and refuse lm90 to work:
    
        [   15.258370] genirq: Setting trigger mode 8 for irq 49 failed (mpc8xxx_irq_set_type+0x0/0xf8)
        [   15.267168] lm90 0-004c: cannot request IRQ 49
        [   15.272708] lm90: probe of 0-004c failed with error -22
    
    Fixes: 345e5c8a1cc3 ("powerpc: Add interrupt support to mpc8xxx_gpio")
    Signed-off-by: Pali Roh√°r <pali@kernel.org>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d065f83565858fd433e1abbda2fc0fda3ac4a87
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Aug 25 14:49:05 2022 -0400

    NFSv4: Turn off open-by-filehandle and NFS re-export for NFSv4.0
    
    [ Upstream commit 2a9d683b48c8a87e61a4215792d44c90bcbbb536 ]
    
    The NFSv4.0 protocol only supports open() by name. It cannot therefore
    be used with open_by_handle() and friends, nor can it be re-exported by
    knfsd.
    
    Reported-by: Chuck Lever III <chuck.lever@oracle.com>
    Fixes: 20fa19027286 ("nfs: add export operations")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f16f5b582cd43898cfdae0d8a0570748f57f266
Author: Michael Wu <michael@allwinnertech.com>
Date:   Fri Aug 19 10:45:41 2022 +0800

    pinctrl: sunxi: Fix name for A100 R_PIO
    
    [ Upstream commit 76648c867c6c03b8a468d9c9222025873ecc613d ]
    
    The name of A100 R_PIO driver should be sun50i-a100-r-pinctrl,
    not sun50iw10p1-r-pinctrl.
    
    Fixes: 473436e7647d6 ("pinctrl: sunxi: add support for the Allwinner A100 pin controller")
    Signed-off-by: Michael Wu <michael@allwinnertech.com>
    Acked-by: Samuel Holland <samuel@sholland.org>
    Link: https://lore.kernel.org/r/20220819024541.74191-1-michael@allwinnertech.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee4369260e77821602102dcc7d792de39a56365c
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sat Aug 13 23:34:16 2022 +0300

    of: fdt: fix off-by-one error in unflatten_dt_nodes()
    
    [ Upstream commit 2f945a792f67815abca26fa8a5e863ccf3fa1181 ]
    
    Commit 78c44d910d3e ("drivers/of: Fix depth when unflattening devicetree")
    forgot to fix up the depth check in the loop body in unflatten_dt_nodes()
    which makes it possible to overflow the nps[] buffer...
    
    Found by Linux Verification Center (linuxtesting.org) with the SVACE static
    analysis tool.
    
    Fixes: 78c44d910d3e ("drivers/of: Fix depth when unflattening devicetree")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/7c354554-006f-6b31-c195-cdfe4caee392@omp.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cae6172a9464779c8f9f79e12c16ed2cf4778072
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Thu Dec 9 09:26:47 2021 +0000

    net: dsa: mv88e6xxx: allow use of PHYs on CPU and DSA ports
    
    [ Upstream commit 04ec4e6250e5f58b525b08f3dca45c7d7427620e ]
    
    Martyn Welch reports that his CPU port is unable to link where it has
    been necessary to use one of the switch ports with an internal PHY for
    the CPU port. The reason behind this is the port control register is
    left forcing the link down, preventing traffic flow.
    
    This occurs because during initialisation, phylink expects the link to
    be down, and DSA forces the link down by synthesising a call to the
    DSA drivers phylink_mac_link_down() method, but we don't touch the
    forced-link state when we later reconfigure the port.
    
    Resolve this by also unforcing the link state when we are operating in
    PHY mode and the PPU is set to poll the PHY to retrieve link status
    information.
    
    Reported-by: Martyn Welch <martyn.welch@collabora.com>
    Tested-by: Martyn Welch <martyn.welch@collabora.com>
    Fixes: 3be98b2d5fbc ("net: dsa: Down cpu/dsa ports phylink will control")
    Cc: <stable@vger.kernel.org> # 5.7: 2b29cb9e3f7f: net: dsa: mv88e6xxx: fix "don't use PHY_DETECT on internal PHY's"
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/E1mvFhP-00F8Zb-Ul@rmk-PC.armlinux.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a6c6041e8d80e2ea464a969d90347a4c28e7a7e
Author: Alex Hung <alex.hung@canonical.com>
Date:   Fri Dec 3 14:28:10 2021 -0700

    platform/x86/intel: hid: add quirk to support Surface Go 3
    
    [ Upstream commit 01e16cb67cce68afaeb9c7bed72299036dbb0bc1 ]
    
    Similar to other systems Surface Go 3 requires a DMI quirk to enable
    5 button array for power and volume buttons.
    
    Buglink: https://github.com/linux-surface/linux-surface/issues/595
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Alex Hung <alex.hung@canonical.com>
    Link: https://lore.kernel.org/r/20211203212810.2666508-1-alex.hung@canonical.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8faabaf112c925c808e95898da93072433ca1dc9
Author: Frank Li <Frank.Li@nxp.com>
Date:   Tue Nov 30 09:42:39 2021 -0600

    usb: cdns3: gadget: fix new urb never complete if ep cancel previous requests
    
    [ Upstream commit 387c2b6ba197c6df28e75359f7d892f7c8dec204 ]
    
    This issue was found at android12 MTP.
    1. MTP submit many out urb request.
    2. Cancel left requests (>20) when enough data get from host
    3. Send ACK by IN endpoint.
    4. MTP submit new out urb request.
    5. 4's urb never complete.
    
    TRACE LOG:
    
    MtpServer-2157    [000] d..3  1287.150391: cdns3_ep_dequeue: ep1out: req: 00000000299e6836, req buff 000000009df42287, length: 0/16384 zsi, status: -115, trb: [start:87, end:87: virt addr 0x80004000ffd50420], flags:1 SID: 0
    MtpServer-2157    [000] d..3  1287.150410: cdns3_gadget_giveback: ep1out: req: 00000000299e6836, req buff 000000009df42287, length: 0/16384 zsi, status: -104, trb: [start:87, end:87: virt addr 0x80004000ffd50420], flags:0 SID: 0
    MtpServer-2157    [000] d..3  1287.150433: cdns3_ep_dequeue: ep1out: req: 0000000080b7bde6, req buff 000000009ed5c556, length: 0/16384 zsi, status: -115, trb: [start:88, end:88: virt addr 0x80004000ffd5042c], flags:1 SID: 0
    MtpServer-2157    [000] d..3  1287.150446: cdns3_gadget_giveback: ep1out: req: 0000000080b7bde6, req buff 000000009ed5c556, length: 0/16384 zsi, status: -104, trb: [start:88, end:88: virt addr 0x80004000ffd5042c], flags:0 SID: 0
            ....
    MtpServer-2157    [000] d..1  1293.630410: cdns3_alloc_request: ep1out: req: 00000000afbccb7d, req buff 0000000000000000, length: 0/0 zsi, status: 0, trb: [start:0, end:0: virt addr (null)], flags:0 SID: 0
    MtpServer-2157    [000] d..2  1293.630421: cdns3_ep_queue: ep1out: req: 00000000afbccb7d, req buff 00000000871caf90, length: 0/512 zsi, status: -115, trb: [start:0, end:0: virt addr (null)], flags:0 SID: 0
    MtpServer-2157    [000] d..2  1293.630445: cdns3_wa1: WA1: ep1out set guard
    MtpServer-2157    [000] d..2  1293.630450: cdns3_wa1: WA1: ep1out restore cycle bit
    MtpServer-2157    [000] d..2  1293.630453: cdns3_prepare_trb: ep1out: trb 000000007317b3ee, dma buf: 0xffd5bc00, size: 512, burst: 128 ctrl: 0x00000424 (C=0, T=0, ISP, IOC, Normal) SID:0 LAST_SID:0
    MtpServer-2157    [000] d..2  1293.630460: cdns3_doorbell_epx: ep1out, ep_trbaddr ffd50414
            ....
    irq/241-5b13000-2154    [000] d..1  1293.680849: cdns3_epx_irq: IRQ for ep1out: 01000408 ISP , ep_traddr: ffd508ac ep_last_sid: 00000000 use_streams: 0
    irq/241-5b13000-2154    [000] d..1  1293.680858: cdns3_complete_trb: ep1out: trb 0000000021a11b54, dma buf: 0xffd50420, size: 16384, burst: 128 ctrl: 0x00001810 (C=0, T=0, CHAIN, LINK) SID:0 LAST_SID:0
    irq/241-5b13000-2154    [000] d..1  1293.680865: cdns3_request_handled: Req: 00000000afbccb7d not handled, DMA pos: 185, ep deq: 88, ep enq: 185, start trb: 184, end trb: 184
    
    Actually DMA pos already bigger than previous submit request afbccb7d's TRB (184-184). The reason of (not handled) is that deq position is wrong.
    
    The TRB link is below when irq happen.
    
            DEQ LINK LINK LINK LINK LINK .... TRB(afbccb7d):START  DMA(EP_TRADDR).
    
    Original code check LINK TRB, but DEQ just move one step.
    
            LINK DEQ LINK LINK LINK LINK .... TRB(afbccb7d):START  DMA(EP_TRADDR).
    
    This patch skip all LINK TRB and sync DEQ to trb's start.
    
            LINK LINK LINK LINK LINK .... DEQ = TRB(afbccb7d):START  DMA(EP_TRADDR).
    
    Acked-by: Peter Chen <peter.chen@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Frank Li <Frank.Li@nxp.com>
    Signed-off-by: Jun Li <jun.li@nxp.com>
    Link: https://lore.kernel.org/r/20211130154239.8029-1-Frank.Li@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd226d8c1b4ae90f041c9ff12eaf93b994b1a149
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Wed Oct 20 14:47:03 2021 -0500

    powerpc/pseries/mobility: ignore ibm, platform-facilities updates
    
    [ Upstream commit 319fa1a52e438a6e028329187783a25ad498c4e6 ]
    
    On VMs with NX encryption, compression, and/or RNG offload, these
    capabilities are described by nodes in the ibm,platform-facilities device
    tree hierarchy:
    
      $ tree -d /sys/firmware/devicetree/base/ibm,platform-facilities/
      /sys/firmware/devicetree/base/ibm,platform-facilities/
      ‚îú‚îÄ‚îÄ ibm,compression-v1
      ‚îú‚îÄ‚îÄ ibm,random-v1
      ‚îî‚îÄ‚îÄ ibm,sym-encryption-v1
    
      3 directories
    
    The acceleration functions that these nodes describe are not disrupted by
    live migration, not even temporarily.
    
    But the post-migration ibm,update-nodes sequence firmware always sends
    "delete" messages for this hierarchy, followed by an "add" directive to
    reconstruct it via ibm,configure-connector (log with debugging statements
    enabled in mobility.c):
    
      mobility: removing node /ibm,platform-facilities/ibm,random-v1:4294967285
      mobility: removing node /ibm,platform-facilities/ibm,compression-v1:4294967284
      mobility: removing node /ibm,platform-facilities/ibm,sym-encryption-v1:4294967283
      mobility: removing node /ibm,platform-facilities:4294967286
      ...
      mobility: added node /ibm,platform-facilities:4294967286
    
    Note we receive a single "add" message for the entire hierarchy, and what
    we receive from the ibm,configure-connector sequence is the top-level
    platform-facilities node along with its three children. The debug message
    simply reports the parent node and not the whole subtree.
    
    Also, significantly, the nodes added are almost completely equivalent to
    the ones removed; even phandles are unchanged. ibm,shared-interrupt-pool in
    the leaf nodes is the only property I've observed to differ, and Linux does
    not use that. So in practice, the sum of update messages Linux receives for
    this hierarchy is equivalent to minor property updates.
    
    We succeed in removing the original hierarchy from the device tree. But the
    vio bus code is ignorant of this, and does not unbind or relinquish its
    references. The leaf nodes, still reachable through sysfs, of course still
    refer to the now-freed ibm,platform-facilities parent node, which makes
    use-after-free possible:
    
      refcount_t: addition on 0; use-after-free.
      WARNING: CPU: 3 PID: 1706 at lib/refcount.c:25 refcount_warn_saturate+0x164/0x1f0
      refcount_warn_saturate+0x160/0x1f0 (unreliable)
      kobject_get+0xf0/0x100
      of_node_get+0x30/0x50
      of_get_parent+0x50/0xb0
      of_fwnode_get_parent+0x54/0x90
      fwnode_count_parents+0x50/0x150
      fwnode_full_name_string+0x30/0x110
      device_node_string+0x49c/0x790
      vsnprintf+0x1c0/0x4c0
      sprintf+0x44/0x60
      devspec_show+0x34/0x50
      dev_attr_show+0x40/0xa0
      sysfs_kf_seq_show+0xbc/0x200
      kernfs_seq_show+0x44/0x60
      seq_read_iter+0x2a4/0x740
      kernfs_fop_read_iter+0x254/0x2e0
      new_sync_read+0x120/0x190
      vfs_read+0x1d0/0x240
    
    Moreover, the "new" replacement subtree is not correctly added to the
    device tree, resulting in ibm,platform-facilities parent node without the
    appropriate leaf nodes, and broken symlinks in the sysfs device hierarchy:
    
      $ tree -d /sys/firmware/devicetree/base/ibm,platform-facilities/
      /sys/firmware/devicetree/base/ibm,platform-facilities/
    
      0 directories
    
      $ cd /sys/devices/vio ; find . -xtype l -exec file {} +
      ./ibm,sym-encryption-v1/of_node: broken symbolic link to
        ../../../firmware/devicetree/base/ibm,platform-facilities/ibm,sym-encryption-v1
      ./ibm,random-v1/of_node:         broken symbolic link to
        ../../../firmware/devicetree/base/ibm,platform-facilities/ibm,random-v1
      ./ibm,compression-v1/of_node:    broken symbolic link to
        ../../../firmware/devicetree/base/ibm,platform-facilities/ibm,compression-v1
    
    This is because add_dt_node() -> dlpar_attach_node() attaches only the
    parent node returned from configure-connector, ignoring any children. This
    should be corrected for the general case, but fixing that won't help with
    the stale OF node references, which is the more urgent problem.
    
    One way to address that would be to make the drivers respond to node
    removal notifications, so that node references can be dropped
    appropriately. But this would likely force the drivers to disrupt active
    clients for no useful purpose: equivalent nodes are immediately re-added.
    And recall that the acceleration capabilities described by the nodes remain
    available throughout the whole process.
    
    The solution I believe to be robust for this situation is to convert
    remove+add of a node with an unchanged phandle to an update of the node's
    properties in the Linux device tree structure. That would involve changing
    and adding a fair amount of code, and may take several iterations to land.
    
    Until that can be realized we have a confirmed use-after-free and the
    possibility of memory corruption. So add a limited workaround that
    discriminates on the node type, ignoring adds and removes. This should be
    amenable to backporting in the meantime.
    
    Fixes: 410bccf97881 ("powerpc/pseries: Partition migration in the kernel")
    Cc: stable@vger.kernel.org
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211020194703.2613093-1-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5ee5a9e47f32626b6be3dec5710b342fca5c28b
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon Dec 7 15:52:00 2020 -0600

    powerpc/pseries/mobility: refactor node lookup during DT update
    
    [ Upstream commit 2efd7f6eb9b7107e469837d8452e750d7d080a5d ]
    
    In pseries_devicetree_update(), with each call to ibm,update-nodes the
    partition firmware communicates the node to be deleted or updated by
    placing its phandle in the work buffer. Each of delete_dt_node(),
    update_dt_node(), and add_dt_node() have duplicate lookups using the
    phandle value and corresponding refcount management.
    
    Move the lookup and of_node_put() into pseries_devicetree_update(),
    and emit a warning on any failed lookups.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201207215200.1785968-29-nathanl@linux.ibm.com
    Stable-dep-of: 319fa1a52e43 ("powerpc/pseries/mobility: ignore ibm, platform-facilities updates")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4dbe84b9b66cfe604f11d25a377c6ed1347ab6b3
Author: Anatolij Gustschin <agust@denx.de>
Date:   Thu Oct 14 11:40:12 2021 +0200

    dmaengine: bestcomm: fix system boot lockups
    
    [ Upstream commit adec566b05288f2787a1f88dbaf77ed8b0c644fa ]
    
    memset() and memcpy() on an MMIO region like here results in a
    lockup at startup on mpc5200 platform (since this first happens
    during probing of the ATA and Ethernet drivers). Use memset_io()
    and memcpy_toio() instead.
    
    Fixes: 2f9ea1bde0d1 ("bestcomm: core bestcomm support for Freescale MPC5200")
    Cc: stable@vger.kernel.org # v5.14+
    Signed-off-by: Anatolij Gustschin <agust@denx.de>
    Link: https://lore.kernel.org/r/20211014094012.21286-1-agust@denx.de
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bbdf49e2624a318b5e08f3a1acb0503ecd107d9
Author: John David Anglin <dave.anglin@bell.net>
Date:   Mon Nov 8 16:48:16 2021 -0500

    parisc: Flush kernel data mapping in set_pte_at() when installing pte for user page
    
    [ Upstream commit 38860b2c8bb1b92f61396eb06a63adff916fc31d ]
    
    For years, there have been random segmentation faults in userspace on
    SMP PA-RISC machines.  It occurred to me that this might be a problem in
    set_pte_at().  MIPS and some other architectures do cache flushes when
    installing PTEs with the present bit set.
    
    Here I have adapted the code in update_mmu_cache() to flush the kernel
    mapping when the kernel flush is deferred, or when the kernel mapping
    may alias with the user mapping.  This simplifies calls to
    update_mmu_cache().
    
    I also changed the barrier in set_pte() from a compiler barrier to a
    full memory barrier.  I know this change is not sufficient to fix the
    problem.  It might not be needed.
    
    I have had a few days of operation with 5.14.16 to 5.15.1 and haven't
    seen any random segmentation faults on rp3440 or c8000 so far.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@kernel.org # 5.12+
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b00a56e64713cf3e8f5ca00a943140b294c5f24e
Author: Helge Deller <deller@gmx.de>
Date:   Fri Feb 12 16:38:52 2021 +0100

    parisc: Optimize per-pagetable spinlocks
    
    [ Upstream commit b7795074a04669d0a023babf786d29bf67c68783 ]
    
    On parisc a spinlock is stored in the next page behind the pgd which
    protects against parallel accesses to the pgd. That's why one additional
    page (PGD_ALLOC_ORDER) is allocated for the pgd.
    
    Matthew Wilcox suggested that we instead should use a pointer in the
    struct page table for this spinlock and noted, that the comments for the
    PGD_ORDER and PMD_ORDER defines were wrong.
    
    Both suggestions are addressed with this patch. Instead of having an own
    spinlock to protect the pgd, we now switch to use the existing
    page_table_lock.  Additionally, beside loading the pgd into cr25 in
    switch_mm_irqs_off(), the physical address of this lock is loaded into
    cr28 (tr4), so that we can avoid implementing a complicated lookup in
    assembly for this lock in the TLB fault handlers.
    
    The existing Hybrid L2/L3 page table scheme (where the pmd is adjacent
    to the pgd) has been dropped with this patch.
    
    Remove the locking in set_pte() and the huge-page pte functions too.
    They trigger a spinlock recursion on 32bit machines and seem unnecessary.
    
    Suggested-by: Matthew Wilcox <willy@infradead.org>
    Fixes: b37d1c1898b2 ("parisc: Use per-pagetable spinlock")
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Stable-dep-of: 38860b2c8bb1 ("parisc: Flush kernel data mapping in set_pte_at() when installing pte for user page")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59819f0aafd089cfbf8c087895f8c541af67392e
Author: Pali Roh√°r <pali@kernel.org>
Date:   Mon Sep 27 11:37:04 2021 +0200

    serial: 8250: Fix reporting real baudrate value in c_ospeed field
    
    [ Upstream commit 32262e2e429cdb31f9e957e997d53458762931b7 ]
    
    In most cases it is not possible to set exact baudrate value to hardware.
    
    So fix reporting real baudrate value which was set to hardware via c_ospeed
    termios field. It can be retrieved by ioctl(TCGETS2) from userspace.
    
    Real baudrate value is calculated from chosen hardware divisor and base
    clock. It is implemented in a new function serial8250_compute_baud_rate()
    which is inverse of serial8250_get_divisor() function.
    
    With this change is fixed also UART timeout value (it is updated via
    uart_update_timeout() function), which is calculated from the now fixed
    baudrate value too.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Pali Roh√°r <pali@kernel.org>
    Link: https://lore.kernel.org/r/20210927093704.19768-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9230af9188a2cc8872fb98ea50907f3440a1786a
Author: Laurent Vivier <lvivier@redhat.com>
Date:   Thu Oct 28 00:21:50 2021 +1000

    KVM: PPC: Tick accounting should defer vtime accounting 'til after IRQ handling
    
    [ Upstream commit 235cee162459d96153d63651ce7ff51752528c96 ]
    
    Commit 112665286d08 ("KVM: PPC: Book3S HV: Context tracking exit guest
    context before enabling irqs") moved guest_exit() into the interrupt
    protected area to avoid wrong context warning (or worse). The problem is
    that tick-based time accounting has not yet been updated at this point
    (because it depends on the timer interrupt firing), so the guest time
    gets incorrectly accounted to system time.
    
    To fix the problem, follow the x86 fix in commit 160457140187 ("Defer
    vtime accounting 'til after IRQ handling"), and allow host IRQs to run
    before accounting the guest exit time.
    
    In the case vtime accounting is enabled, this is not required because TB
    is used directly for accounting.
    
    Before this patch, with CONFIG_TICK_CPU_ACCOUNTING=y in the host and a
    guest running a kernel compile, the 'guest' fields of /proc/stat are
    stuck at zero. With the patch they can be observed increasing roughly as
    expected.
    
    Fixes: e233d54d4d97 ("KVM: booke: use __kvm_guest_exit")
    Fixes: 112665286d08 ("KVM: PPC: Book3S HV: Context tracking exit guest context before enabling irqs")
    Cc: stable@vger.kernel.org # 5.12+
    Signed-off-by: Laurent Vivier <lvivier@redhat.com>
    [np: only required for tick accounting, add Book3E fix, tweak changelog]
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211027142150.3711582-1-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bae47548188ae957578e6d92d4b8753dec435e4
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Sat Jan 30 23:08:12 2021 +1000

    KVM: PPC: Book3S HV: Context tracking exit guest context before enabling irqs
    
    [ Upstream commit 112665286d08c87e66d699e7cba43c1497ad165f ]
    
    Interrupts that occur in kernel mode expect that context tracking
    is set to kernel. Enabling local irqs before context tracking
    switches from guest to host means interrupts can come in and trigger
    warnings about wrong context, and possibly worse.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210130130852.2952424-3-npiggin@gmail.com
    Stable-dep-of: 235cee162459 ("KVM: PPC: Tick accounting should defer vtime accounting 'til after IRQ handling")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
