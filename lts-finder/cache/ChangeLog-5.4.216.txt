commit f28b7414ab715e6069e72a7bbe2f1354b2524beb
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 5 10:37:45 2022 +0200

    Linux 5.4.216
    
    Link: https://lore.kernel.org/r/20221003070716.269502440@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8b87cb13681874faaf77a1bec55c793ae75324a
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Sep 5 09:15:03 2022 -0700

    clk: iproc: Do not rely on node name for correct PLL setup
    
    [ Upstream commit 1b24a132eba7a1c19475ba2510ec1c00af3ff914 ]
    
    After commit 31fd9b79dc58 ("ARM: dts: BCM5301X: update CRU block
    description") a warning from clk-iproc-pll.c was generated due to a
    duplicate PLL name as well as the console stopped working. Upon closer
    inspection it became clear that iproc_pll_clk_setup() used the Device
    Tree node unit name as an unique identifier as well as a parent name to
    parent all clocks under the PLL.
    
    BCM5301X was the first platform on which that got noticed because of the
    DT node unit name renaming but the same assumptions hold true for any
    user of the iproc_pll_clk_setup() function.
    
    The first 'clock-output-names' property is always guaranteed to be
    unique as well as providing the actual desired PLL clock name, so we
    utilize that to register the PLL and as a parent name of all children
    clock.
    
    Fixes: 5fe225c105fd ("clk: iproc: add initial common clock support")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Rafał Miłecki <rafal@milecki.pl>
    Link: https://lore.kernel.org/r/20220905161504.1526-1-f.fainelli@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d417d5eb29d7ba18a36ef1b7cee846de9962a6f3
Author: Han Xu <han.xu@nxp.com>
Date:   Thu Sep 15 10:09:59 2022 -0500

    clk: imx: imx6sx: remove the SET_RATE_PARENT flag for QSPI clocks
    
    [ Upstream commit b1ff1bfe81e763420afd5f3f25f0b3cbfd97055c ]
    
    There is no dedicate parent clock for QSPI so SET_RATE_PARENT flag
    should not be used. For instance, the default parent clock for QSPI is
    pll2_bus, which is also the parent clock for quite a few modules, such
    as MMDC, once GPMI NAND set clock rate for EDO5 mode can cause system
    hang due to pll2_bus rate changed.
    
    Fixes: f1541e15e38e ("clk: imx6sx: Switch to clk_hw based API")
    Signed-off-by: Han Xu <han.xu@nxp.com>
    Link: https://lore.kernel.org/r/20220915150959.3646702-1-han.xu@nxp.com
    Tested-by: Fabio Estevam <festevam@denx.de>
    Reviewed-by: Abel Vesa <abel.vesa@linaro.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 762706bd12a62973c54ed2469fcb2e6cd633f495
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Sep 23 15:02:37 2022 +0800

    selftests: Fix the if conditions of in test_extra_filter()
    
    [ Upstream commit bc7a319844891746135dc1f34ab9df78d636a3ac ]
    
    The socket 2 bind the addr in use, bind should fail with EADDRINUSE. So
    if bind success or errno != EADDRINUSE, testcase should be failed.
    
    Fixes: 3ca8e4029969 ("soreuseport: BPF selection functional test")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Link: https://lore.kernel.org/r/1663916557-10730-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae0d3a431639d51bc949a6ab559857677435af1b
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Thu Sep 22 21:49:09 2022 -0700

    nvme: Fix IOC_PR_CLEAR and IOC_PR_RELEASE ioctls for nvme devices
    
    [ Upstream commit c292a337d0e45a292c301e3cd51c35aa0ae91e95 ]
    
    The IOC_PR_CLEAR and IOC_PR_RELEASE ioctls are
    non-functional on NVMe devices because the nvme_pr_clear()
    and nvme_pr_release() functions set the IEKEY field incorrectly.
    The IEKEY field should be set only when the key is zero (i.e,
    not specified).  The current code does it backwards.
    
    Furthermore, the NVMe spec describes the persistent
    reservation "clear" function as an option on the reservation
    release command. The current implementation of nvme_pr_clear()
    erroneously uses the reservation register command.
    
    Fix these errors. Note that NVMe version 1.3 and later specify
    that setting the IEKEY field will return an error of Invalid
    Field in Command.  The fix will set IEKEY when the key is zero,
    which is appropriate as these ioctls consider a zero key to
    be "unspecified", and the intention of the spec change is
    to require a valid key.
    
    Tested on a version 1.4 PCI NVMe device in an Azure VM.
    
    Fixes: 1673f1f08c88 ("nvme: move block_device_operations and ns/ctrl freeing to common code")
    Fixes: 1d277a637a71 ("NVMe: Add persistent reservation ops")
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18ef5cd4c53c585f68c3e7c2aa442c019a08d242
Author: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date:   Sun Feb 28 18:06:11 2021 -0800

    nvme: add new line after variable declatation
    
    [ Upstream commit f1c772d581843e3a14bbd62ef7e40b56fc307f27 ]
    
    Add a new line in functions nvme_pr_preempt(), nvme_pr_clear(), and
    nvme_pr_release() after variable declaration which follows the rest of
    the code in the nvme/host/core.c.
    
    No functional change(s) in this patch.
    
    Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: c292a337d0e4 ("nvme: Fix IOC_PR_CLEAR and IOC_PR_RELEASE ioctls for nvme devices")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ea4a5342452ada405d752296dc5f034f6be48b7
Author: Peilin Ye <peilin.ye@bytedance.com>
Date:   Thu Sep 22 21:25:51 2022 -0700

    usbnet: Fix memory leak in usbnet_disconnect()
    
    [ Upstream commit a43206156263fbaf1f2b7f96257441f331e91bb7 ]
    
    Currently usbnet_disconnect() unanchors and frees all deferred URBs
    using usb_scuttle_anchored_urbs(), which does not free urb->context,
    causing a memory leak as reported by syzbot.
    
    Use a usb_get_from_anchor() while loop instead, similar to what we did
    in commit 19cfe912c37b ("Bluetooth: btusb: Fix memory leak in
    play_deferred").  Also free urb->sg.
    
    Reported-and-tested-by: syzbot+dcd3e13cf4472f2e0ba1@syzkaller.appspotmail.com
    Fixes: 69ee472f2706 ("usbnet & cdc-ether: Autosuspend for online devices")
    Fixes: 638c5115a794 ("USBNET: support DMA SG")
    Signed-off-by: Peilin Ye <peilin.ye@bytedance.com>
    Link: https://lore.kernel.org/r/20220923042551.2745-1-yepeilin.cs@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ca922ec7598344ca47ba21868284ebf4fb894c7
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Sep 24 11:07:15 2022 +0800

    Input: melfas_mip4 - fix return value check in mip4_probe()
    
    [ Upstream commit a54dc27bd25f20ee3ea2009584b3166d25178243 ]
    
    devm_gpiod_get_optional() may return ERR_PTR(-EPROBE_DEFER),
    add a minus sign to fix it.
    
    Fixes: 6ccb1d8f78bd ("Input: add MELFAS MIP4 Touchscreen driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20220924030715.1653538-1-yangyingliang@huawei.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38c4d8230f937f3cf8a9f0e7bb95d982ba36a575
Author: Brian Norris <briannorris@chromium.org>
Date:   Mon Aug 22 18:08:04 2022 -0700

    Revert "drm: bridge: analogix/dp: add panel prepare/unprepare in suspend/resume time"
    
    [ Upstream commit cc62d98bd56d45de4531844ca23913a15136c05b ]
    
    This reverts commit 211f276ed3d96e964d2d1106a198c7f4a4b3f4c0.
    
    For quite some time, core DRM helpers already ensure that any relevant
    connectors/CRTCs/etc. are disabled, as well as their associated
    components (e.g., bridges) when suspending the system. Thus,
    analogix_dp_bridge_{enable,disable}() already get called, which in turn
    call drm_panel_{prepare,unprepare}(). This makes these drm_panel_*()
    calls redundant.
    
    Besides redundancy, there are a few problems with this handling:
    
    (1) drm_panel_{prepare,unprepare}() are *not* reference-counted APIs and
    are not in general designed to be handled by multiple callers --
    although some panel drivers have a coarse 'prepared' flag that mitigates
    some damage, at least. So at a minimum this is redundant and confusing,
    but in some cases, this could be actively harmful.
    
    (2) The error-handling is a bit non-standard. We ignored errors in
    suspend(), but handled errors in resume(). And recently, people noticed
    that the clk handling is unbalanced in error paths, and getting *that*
    right is not actually trivial, given the current way errors are mostly
    ignored.
    
    (3) In the particular way analogix_dp_{suspend,resume}() get used (e.g.,
    in rockchip_dp_*(), as a late/early callback), we don't necessarily have
    a proper PM relationship between the DP/bridge device and the panel
    device. So while the DP bridge gets resumed, the panel's parent device
    (e.g., platform_device) may still be suspended, and so any prepare()
    calls may fail.
    
    So remove the superfluous, possibly-harmful suspend()/resume() handling
    of panel state.
    
    Fixes: 211f276ed3d9 ("drm: bridge: analogix/dp: add panel prepare/unprepare in suspend/resume time")
    Link: https://lore.kernel.org/all/Yv2CPBD3Picg%2FgVe@google.com/
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220822180729.1.I8ac5abe3a4c1c6fd5c061686c6e883c22f69022c@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7291d19a9eebdff88c199380c7521ded9d40fb4e
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:43 2022 -0500

    soc: sunxi: sram: Fix debugfs info for A64 SRAM C
    
    [ Upstream commit e3c95edb1bd8b9c2cb0caa6ae382fc8080f6a0ed ]
    
    The labels were backward with respect to the register values. The SRAM
    is mapped to the CPU when the register value is 1.
    
    Fixes: 5e4fb6429761 ("drivers: soc: sunxi: add support for A64 and its SRAM C")
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-7-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdbcdfc96126df77b737987d39ae2a2492af1422
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:42 2022 -0500

    soc: sunxi: sram: Fix probe function ordering issues
    
    [ Upstream commit 49fad91a7b8941979c3e9a35f9894ac45bc5d3d6 ]
    
    Errors from debugfs are intended to be non-fatal, and should not prevent
    the driver from probing.
    
    Since debugfs file creation is treated as infallible, move it below the
    parts of the probe function that can fail. This prevents an error
    elsewhere in the probe function from causing the file to leak. Do the
    same for the call to of_platform_populate().
    
    Finally, checkpatch suggests an octal literal for the file permissions.
    
    Fixes: 4af34b572a85 ("drivers: soc: sunxi: Introduce SoC driver to map SRAMs")
    Fixes: 5828729bebbb ("soc: sunxi: export a regmap for EMAC clock reg on A64")
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-6-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73dbc6e136b548979b4a90c5e0445cf9a8d0dc85
Author: Cai Huoqing <cai.huoqing@linux.dev>
Date:   Wed Sep 8 15:17:15 2021 +0800

    soc: sunxi_sram: Make use of the helper function devm_platform_ioremap_resource()
    
    [ Upstream commit 1f3753a5f042fea6539986f9caf2552877527d8a ]
    
    Use the devm_platform_ioremap_resource() helper instead of
    calling platform_get_resource() and devm_ioremap_resource()
    separately
    
    Signed-off-by: Cai Huoqing <caihuoqing@baidu.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20210908071716.772-1-caihuoqing@baidu.com
    Stable-dep-of: 49fad91a7b89 ("soc: sunxi: sram: Fix probe function ordering issues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26170e4fd1452a39fd46f4209d087bff68531d1e
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:41 2022 -0500

    soc: sunxi: sram: Prevent the driver from being unbound
    
    [ Upstream commit 90e10a1fcd9b24b4ba8c0d35136127473dcd829e ]
    
    This driver exports a regmap tied to the platform device (as opposed to
    a syscon, which exports a regmap tied to the OF node). Because of this,
    the driver can never be unbound, as that would destroy the regmap. Use
    builtin_platform_driver_probe() to enforce this limitation.
    
    Fixes: 5828729bebbb ("soc: sunxi: export a regmap for EMAC clock reg on A64")
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-5-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 883778a1f4faa0ea4c22a05b66ae32aa278e1181
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:40 2022 -0500

    soc: sunxi: sram: Actually claim SRAM regions
    
    [ Upstream commit fd362baad2e659ef0fb5652f023a606b248f1781 ]
    
    sunxi_sram_claim() checks the sram_desc->claimed flag before updating
    the register, with the intent that only one device can claim a region.
    However, this was ineffective because the flag was never set.
    
    Fixes: 4af34b572a85 ("drivers: soc: sunxi: Introduce SoC driver to map SRAMs")
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-4-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba52486082b7ebe71a176152f8da3811b542132
Author: YuTong Chang <mtwget@gmail.com>
Date:   Mon Jun 20 05:41:46 2022 -0700

    ARM: dts: am33xx: Fix MMCHS0 dma properties
    
    [ Upstream commit 2eb502f496f7764027b7958d4e74356fed918059 ]
    
    According to technical manual(table 11-24), the DMA of MMCHS0 should be
    direct mapped.
    
    Fixes: b5e509066074 ("ARM: DTS: am33xx: Use the new DT bindings for the eDMA3")
    Signed-off-by: YuTong Chang <mtwget@gmail.com>
    Message-Id: <20220620124146.5330-1-mtwget@gmail.com>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0c69c722ff16ce2481a5e0932c6d5b172109f21
Author: Faiz Abbas <faiz_abbas@ti.com>
Date:   Wed May 13 02:08:04 2020 +0530

    ARM: dts: Move am33xx and am43xx mmc nodes to sdhci-omap driver
    
    [ Upstream commit 0b4edf111870b83ea77b1d7e16b8ceac29f9f388 ]
    
    Move mmc nodes to be compatible with the sdhci-omap driver. The following
    modifications are required for omap_hsmmc specific properties:
    
    ti,non-removable: convert to the generic mmc non-removable
    ti,needs-special-reset:  co-opted into the sdhci-omap driver
    ti,dual-volt: removed. Legacy property not used in am335x or am43xx
    ti,needs-special-hs-handling: removed. Legacy property not used in am335x
    or am43xx
    
    Also since the sdhci-omap driver does not support runtime PM, explicitly
    disable the mmc3 instance in the dtsi.
    
    Signed-off-by: Faiz Abbas <faiz_abbas@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Stable-dep-of: 2eb502f496f7 ("ARM: dts: am33xx: Fix MMCHS0 dma properties")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d18565280076197dc675047d533de8c2ce60badf
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Thu May 19 03:17:43 2022 +0100

    media: dvb_vb2: fix possible out of bound access
    
    commit 37238699073e7e93f05517e529661151173cd458 upstream.
    
    vb2_core_qbuf and vb2_core_querybuf don't check the range of b->index
    controlled by the user.
    
    Fix this by adding range checking code before using them.
    
    Fixes: 57868acc369a ("media: videobuf2: Add new uAPI for DVB streaming I/O")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Reviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f4634f70bfddae26be6600ff1504fc4efa5deff
Author: Minchan Kim <minchan@kernel.org>
Date:   Thu Sep 8 08:12:04 2022 -0700

    mm: fix madivse_pageout mishandling on non-LRU page
    
    commit 58d426a7ba92870d489686dfdb9d06b66815a2ab upstream.
    
    MADV_PAGEOUT tries to isolate non-LRU pages and gets a warning from
    isolate_lru_page below.
    
    Fix it by checking PageLRU in advance.
    
    ------------[ cut here ]------------
    trying to isolate tail page
    WARNING: CPU: 0 PID: 6175 at mm/folio-compat.c:158 isolate_lru_page+0x130/0x140
    Modules linked in:
    CPU: 0 PID: 6175 Comm: syz-executor.0 Not tainted 5.18.12 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    RIP: 0010:isolate_lru_page+0x130/0x140
    
    Link: https://lore.kernel.org/linux-mm/485f8c33.2471b.182d5726afb.Coremail.hantianshuo@iie.ac.cn/
    Link: https://lkml.kernel.org/r/20220908151204.762596-1-minchan@kernel.org
    Fixes: 1a4e58cce84e ("mm: introduce MADV_PAGEOUT")
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Reported-by: 韩天ç` <hantianshuo@iie.ac.cn>
    Suggested-by: Yang Shi <shy828301@gmail.com>
    Acked-by: Yang Shi <shy828301@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffd11370b74f7f835440d68839f4fce5844d7a52
Author: Alistair Popple <apopple@nvidia.com>
Date:   Fri Sep 2 10:35:51 2022 +1000

    mm/migrate_device.c: flush TLB while holding PTL
    
    commit 60bae73708963de4a17231077285bd9ff2f41c44 upstream.
    
    When clearing a PTE the TLB should be flushed whilst still holding the PTL
    to avoid a potential race with madvise/munmap/etc.  For example consider
    the following sequence:
    
      CPU0                          CPU1
      ----                          ----
    
      migrate_vma_collect_pmd()
      pte_unmap_unlock()
                                    madvise(MADV_DONTNEED)
                                    -> zap_pte_range()
                                    pte_offset_map_lock()
                                    [ PTE not present, TLB not flushed ]
                                    pte_unmap_unlock()
                                    [ page is still accessible via stale TLB ]
      flush_tlb_range()
    
    In this case the page may still be accessed via the stale TLB entry after
    madvise returns.  Fix this by flushing the TLB while holding the PTL.
    
    Fixes: 8c3328f1f36a ("mm/migrate: migrate_vma() unmap page from vma while collecting pages")
    Link: https://lkml.kernel.org/r/9f801e9d8d830408f2ca27821f606e09aa856899.1662078528.git-series.apopple@nvidia.com
    Signed-off-by: Alistair Popple <apopple@nvidia.com>
    Reported-by: Nadav Amit <nadav.amit@gmail.com>
    Reviewed-by: "Huang, Ying" <ying.huang@intel.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Peter Xu <peterx@redhat.com>
    Cc: Alex Sierra <alex.sierra@amd.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Felix Kuehling <Felix.Kuehling@amd.com>
    Cc: huang ying <huang.ying.caritas@gmail.com>
    Cc: Jason Gunthorpe <jgg@nvidia.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Karol Herbst <kherbst@redhat.com>
    Cc: Logan Gunthorpe <logang@deltatee.com>
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Paul Mackerras <paulus@ozlabs.org>
    Cc: Ralph Campbell <rcampbell@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9e31f4885c43b25a943724ac576ade5ac51701d
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Fri Jul 15 14:50:13 2022 +0200

    mm: prevent page_frag_alloc() from corrupting the memory
    
    commit dac22531bbd4af2426c4e29e05594415ccfa365d upstream.
    
    A number of drivers call page_frag_alloc() with a fragment's size >
    PAGE_SIZE.
    
    In low memory conditions, __page_frag_cache_refill() may fail the order
    3 cache allocation and fall back to order 0; In this case, the cache
    will be smaller than the fragment, causing memory corruptions.
    
    Prevent this from happening by checking if the newly allocated cache is
    large enough for the fragment; if not, the allocation will fail and
    page_frag_alloc() will return NULL.
    
    Link: https://lkml.kernel.org/r/20220715125013.247085-1-mlombard@redhat.com
    Fixes: b63ae8ca096d ("mm/net: Rename and move page fragment handling from net/ to mm/")
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Cc: Chen Lin <chen45464546@163.com>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d535fb83844ef6a8ee3124af29c81220efec9f9c
Author: Mel Gorman <mgorman@techsingularity.net>
Date:   Wed Aug 24 12:14:50 2022 +0100

    mm/page_alloc: fix race condition between build_all_zonelists and page allocation
    
    commit 3d36424b3b5850bd92f3e89b953a430d7cfc88ef upstream.
    
    Patrick Daly reported the following problem;
    
            NODE_DATA(nid)->node_zonelists[ZONELIST_FALLBACK] - before offline operation
            [0] - ZONE_MOVABLE
            [1] - ZONE_NORMAL
            [2] - NULL
    
            For a GFP_KERNEL allocation, alloc_pages_slowpath() will save the
            offset of ZONE_NORMAL in ac->preferred_zoneref. If a concurrent
            memory_offline operation removes the last page from ZONE_MOVABLE,
            build_all_zonelists() & build_zonerefs_node() will update
            node_zonelists as shown below. Only populated zones are added.
    
            NODE_DATA(nid)->node_zonelists[ZONELIST_FALLBACK] - after offline operation
            [0] - ZONE_NORMAL
            [1] - NULL
            [2] - NULL
    
    The race is simple -- page allocation could be in progress when a memory
    hot-remove operation triggers a zonelist rebuild that removes zones.  The
    allocation request will still have a valid ac->preferred_zoneref that is
    now pointing to NULL and triggers an OOM kill.
    
    This problem probably always existed but may be slightly easier to trigger
    due to 6aa303defb74 ("mm, vmscan: only allocate and reclaim from zones
    with pages managed by the buddy allocator") which distinguishes between
    zones that are completely unpopulated versus zones that have valid pages
    not managed by the buddy allocator (e.g.  reserved, memblock, ballooning
    etc).  Memory hotplug had multiple stages with timing considerations
    around managed/present page updates, the zonelist rebuild and the zone
    span updates.  As David Hildenbrand puts it
    
            memory offlining adjusts managed+present pages of the zone
            essentially in one go. If after the adjustments, the zone is no
            longer populated (present==0), we rebuild the zone lists.
    
            Once that's done, we try shrinking the zone (start+spanned
            pages) -- which results in zone_start_pfn == 0 if there are no
            more pages. That happens *after* rebuilding the zonelists via
            remove_pfn_range_from_zone().
    
    The only requirement to fix the race is that a page allocation request
    identifies when a zonelist rebuild has happened since the allocation
    request started and no page has yet been allocated.  Use a seqlock_t to
    track zonelist updates with a lockless read-side of the zonelist and
    protecting the rebuild and update of the counter with a spinlock.
    
    [akpm@linux-foundation.org: make zonelist_update_seq static]
    Link: https://lkml.kernel.org/r/20220824110900.vh674ltxmzb3proq@techsingularity.net
    Fixes: 6aa303defb74 ("mm, vmscan: only allocate and reclaim from zones with pages managed by the buddy allocator")
    Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
    Reported-by: Patrick Daly <quic_pdaly@quicinc.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: <stable@vger.kernel.org>    [4.9+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ec4949738c8f7a519d65c7a9fc3745d6a6cce4f
Author: Sergei Antonov <saproj@gmail.com>
Date:   Wed Sep 7 23:57:53 2022 +0300

    mmc: moxart: fix 4-bit bus width and remove 8-bit bus width
    
    commit 35ca91d1338ae158f6dcc0de5d1e86197924ffda upstream.
    
    According to the datasheet [1] at page 377, 4-bit bus width is turned on by
    bit 2 of the Bus Width Register. Thus the current bitmask is wrong: define
    BUS_WIDTH_4 BIT(1)
    
    BIT(1) does not work but BIT(2) works. This has been verified on real MOXA
    hardware with FTSDC010 controller revision 1_6_0.
    
    The corrected value of BUS_WIDTH_4 mask collides with: define BUS_WIDTH_8
    BIT(2). Additionally, 8-bit bus width mode isn't supported according to the
    datasheet, so let's remove the corresponding code.
    
    [1]
    https://bitbucket.org/Kasreyn/mkrom-uc7112lx/src/master/documents/FIC8120_DS_v1.2.pdf
    
    Fixes: 1b66e94e6b99 ("mmc: moxart: Add MOXA ART SD/MMC driver")
    Signed-off-by: Sergei Antonov <saproj@gmail.com>
    Cc: Jonas Jensen <jonas.jensen@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220907205753.1577434-1-saproj@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb7c23e4e523511af3bd3cb7c5cdcf33b1eb25c5
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Mon Sep 26 18:38:09 2022 +0000

    libata: add ATA_HORKAGE_NOLPM for Pioneer BDR-207M and BDR-205
    
    commit ea08aec7e77bfd6599489ec430f9f859ab84575a upstream.
    
    Commit 1527f69204fe ("ata: ahci: Add Green Sardine vendor ID as
    board_ahci_mobile") added an explicit entry for AMD Green Sardine
    AHCI controller using the board_ahci_mobile configuration (this
    configuration has later been renamed to board_ahci_low_power).
    
    The board_ahci_low_power configuration enables support for low power
    modes.
    
    This explicit entry takes precedence over the generic AHCI controller
    entry, which does not enable support for low power modes.
    
    Therefore, when commit 1527f69204fe ("ata: ahci: Add Green Sardine
    vendor ID as board_ahci_mobile") was backported to stable kernels,
    it make some Pioneer optical drives, which was working perfectly fine
    before the commit was backported, stop working.
    
    The real problem is that the Pioneer optical drives do not handle low
    power modes correctly. If these optical drives would have been tested
    on another AHCI controller using the board_ahci_low_power configuration,
    this issue would have been detected earlier.
    
    Unfortunately, the board_ahci_low_power configuration is only used in
    less than 15% of the total AHCI controller entries, so many devices
    have never been tested with an AHCI controller with low power modes.
    
    Fixes: 1527f69204fe ("ata: ahci: Add Green Sardine vendor ID as board_ahci_mobile")
    Cc: stable@vger.kernel.org
    Reported-by: Jaap Berkhout <j.j.berkhout@staalenberk.nl>
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cebfac6a8c994ef7f269a7917a160b189bf54de
Author: Sasha Levin <sashal@kernel.org>
Date:   Fri Sep 23 19:47:36 2022 -0400

    Revert "net: mvpp2: debugfs: fix memory leak when using debugfs_lookup()"
    
    commit 6052a4c11fd893234e085edf7bf2e00a33a79d4e upstream.
    
    This reverts commit fe2c9c61f668cde28dac2b188028c5299cedcc1e.
    
    On Tue, Sep 13, 2022 at 05:48:58PM +0100, Russell King (Oracle) wrote:
    >What happens if this is built as a module, and the module is loaded,
    >binds (and creates the directory), then is removed, and then re-
    >inserted?  Nothing removes the old directory, so doesn't
    >debugfs_create_dir() fail, resulting in subsequent failure to add
    >any subsequent debugfs entries?
    >
    >I don't think this patch should be backported to stable trees until
    >this point is addressed.
    
    Revert until a proper fix is available as the original behavior was
    better.
    
    Cc: Marcin Wojtas <mw@semihalf.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Cc: stable@kernel.org
    Reported-by: Russell King <linux@armlinux.org.uk>
    Fixes: fe2c9c61f668 ("net: mvpp2: debugfs: fix memory leak when using debugfs_lookup()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20220923234736.657413-1-sashal@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a3740f448be2856d94619b7911d6f71fd91b79f
Author: ChenXiaoSong <chenxiaosong2@huawei.com>
Date:   Tue Aug 9 14:47:30 2022 +0800

    ntfs: fix BUG_ON in ntfs_lookup_inode_by_name()
    
    commit 1b513f613731e2afc05550e8070d79fac80c661e upstream.
    
    Syzkaller reported BUG_ON as follows:
    
    ------------[ cut here ]------------
    kernel BUG at fs/ntfs/dir.c:86!
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI
    CPU: 3 PID: 758 Comm: a.out Not tainted 5.19.0-next-20220808 #5
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014
    RIP: 0010:ntfs_lookup_inode_by_name+0xd11/0x2d10
    Code: ff e9 b9 01 00 00 e8 1e fe d6 fe 48 8b 7d 98 49 8d 5d 07 e8 91 85 29 ff 48 c7 45 98 00 00 00 00 e9 5a fb ff ff e8 ff fd d6 fe <0f> 0b e8 f8 fd d6 fe 0f 0b e8 f1 fd d6 fe 48 8b b5 50 ff ff ff 4c
    RSP: 0018:ffff888079607978 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: 0000000000008000 RCX: 0000000000000000
    RDX: ffff88807cf10000 RSI: ffffffff82a4a081 RDI: 0000000000000003
    RBP: ffff888079607a70 R08: 0000000000000001 R09: ffff88807a6d01d7
    R10: ffffed100f4da03a R11: 0000000000000000 R12: ffff88800f0fb110
    R13: ffff88800f0ee000 R14: ffff88800f0fb000 R15: 0000000000000001
    FS:  00007f33b63c7540(0000) GS:ffff888108580000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f33b635c090 CR3: 000000000f39e005 CR4: 0000000000770ee0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
     <TASK>
     load_system_files+0x1f7f/0x3620
     ntfs_fill_super+0xa01/0x1be0
     mount_bdev+0x36a/0x440
     ntfs_mount+0x3a/0x50
     legacy_get_tree+0xfb/0x210
     vfs_get_tree+0x8f/0x2f0
     do_new_mount+0x30a/0x760
     path_mount+0x4de/0x1880
     __x64_sys_mount+0x2b3/0x340
     do_syscall_64+0x38/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    RIP: 0033:0x7f33b62ff9ea
    Code: 48 8b 0d a9 f4 0b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 76 f4 0b 00 f7 d8 64 89 01 48
    RSP: 002b:00007ffd0c471aa8 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f33b62ff9ea
    RDX: 0000000020000000 RSI: 0000000020000100 RDI: 00007ffd0c471be0
    RBP: 00007ffd0c471c60 R08: 00007ffd0c471ae0 R09: 00007ffd0c471c24
    R10: 0000000000000000 R11: 0000000000000202 R12: 000055bac5afc160
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
     </TASK>
    Modules linked in:
    ---[ end trace 0000000000000000 ]---
    
    Fix this by adding sanity check on extended system files' directory inode
    to ensure that it is directory, just like ntfs_extend_init() when mounting
    ntfs3.
    
    Link: https://lkml.kernel.org/r/20220809064730.2316892-1-chenxiaosong2@huawei.com
    Signed-off-by: ChenXiaoSong <chenxiaosong2@huawei.com>
    Cc: Anton Altaparmakov <anton@tuxera.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46e784cf4a840a1de160ae4d5a3aeee5115ffe1c
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Sep 19 11:26:08 2022 +0200

    ARM: dts: integrator: Tag PCI host with device_type
    
    commit 4952aa696a9f221c5e34e5961e02fca41ef67ad6 upstream.
    
    The DT parser is dependent on the PCI device being tagged as
    device_type = "pci" in order to parse memory ranges properly.
    Fix this up.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220919092608.813511-1-linus.walleij@linaro.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85b5edb1b429127e09a91b5a0cc7eb50f9f9c34f
Author: Aidan MacDonald <aidanmacdonald.0x0@gmail.com>
Date:   Fri Jun 17 13:22:54 2022 +0100

    clk: ingenic-tcu: Properly enable registers before accessing timers
    
    commit 6726d552a6912e88cf63fe2bda87b2efa0efc7d0 upstream.
    
    Access to registers is guarded by ingenic_tcu_{enable,disable}_regs()
    so the stop bit can be cleared before accessing a timer channel, but
    those functions did not clear the stop bit on SoCs with a global TCU
    clock gate.
    
    Testing on the X1000 has revealed that the stop bits must be cleared
    _and_ the global TCU clock must be ungated to access timer registers.
    This appears to be the norm on Ingenic SoCs, and is specified in the
    documentation for the X1000 and numerous JZ47xx SoCs.
    
    If the stop bit isn't cleared, register writes don't take effect and
    the system can be left in a broken state, eg. the watchdog timer may
    not run.
    
    The bug probably went unnoticed because stop bits are zeroed when
    the SoC is reset, and the kernel does not set them unless a timer
    gets disabled at runtime. However, it is possible that a bootloader
    or a previous kernel (if using kexec) leaves the stop bits set and
    we should not rely on them being cleared.
    
    Fixing this is easy: have ingenic_tcu_{enable,disable}_regs() always
    clear the stop bit, regardless of the presence of a global TCU gate.
    
    Reviewed-by: Paul Cercueil <paul@crapouillou.net>
    Tested-by: Paul Cercueil <paul@crapouillou.net>
    Fixes: 4f89e4b8f121 ("clk: ingenic: Add driver for the TCU clocks")
    Cc: stable@vger.kernel.org
    Signed-off-by: Aidan MacDonald <aidanmacdonald.0x0@gmail.com>
    Link: https://lore.kernel.org/r/20220617122254.738900-1-aidanmacdonald.0x0@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8a2e22289e4c838430711a7785635253dd57b79
Author: Frank Wunderlich <frank-w@public-files.de>
Date:   Mon Sep 26 17:07:40 2022 +0200

    net: usb: qmi_wwan: Add new usb-id for Dell branded EM7455
    
    commit 797666cd5af041ffb66642fff62f7389f08566a2 upstream.
    
    Add support for Dell 5811e (EM7455) with USB-id 0x413c:0x81c2.
    
    Signed-off-by: Frank Wunderlich <frank-w@public-files.de>
    Cc: stable@vger.kernel.org
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Link: https://lore.kernel.org/r/20220926150740.6684-3-linux@fw-web.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43699b8fbcf197dbbf21c26d6b8ffa6f8283f34c
Author: Hongling Zeng <zenghongling@kylinos.cn>
Date:   Fri Sep 23 10:46:35 2022 +0800

    uas: ignore UAS for Thinkplus chips
    
    commit 0fb9703a3eade0bb84c635705d9c795345e55053 upstream.
    
    The UAS mode of Thinkplus(0x17ef, 0x3899) is reported to influence
    performance and trigger kernel panic on several platforms with the
    following error message:
    
    [   39.702439] xhci_hcd 0000:0c:00.3: ERROR Transfer event for disabled
                   endpoint or incorrect stream ring
    [   39.702442] xhci_hcd 0000:0c:00.3: @000000026c61f810 00000000 00000000
                   1b000000 05038000
    
    [  720.545894][13] Workqueue: usb_hub_wq hub_event
    [  720.550971][13]  ffff88026c143c38 0000000000016300 ffff8802755bb900 ffff880
                        26cb80000
    [  720.559673][13]  ffff88026c144000 ffff88026ca88100 0000000000000000 ffff880
                        26cb80000
    [  720.568374][13]  ffff88026cb80000 ffff88026c143c50 ffffffff8186ae25 ffff880
                        26ca880f8
    [  720.577076][13] Call Trace:
    [  720.580201][13]  [<ffffffff8186ae25>] schedule+0x35/0x80
    [  720.586137][13]  [<ffffffff8186b0ce>] schedule_preempt_disabled+0xe/0x10
    [  720.593623][13]  [<ffffffff8186cb94>] __mutex_lock_slowpath+0x164/0x1e0
    [  720.601012][13]  [<ffffffff8186cc3f>] mutex_lock+0x2f/0x40
    [  720.607141][13]  [<ffffffff8162b8e9>] usb_disconnect+0x59/0x290
    
    Falling back to USB mass storage can solve this problem, so ignore UAS
    function of this chip.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Hongling Zeng <zenghongling@kylinos.cn>
    Link: https://lore.kernel.org/r/1663902249837086.19.seg@mailgw
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc540f6e4bb4be15c4a7acc2164b0c8fef962ea0
Author: Hongling Zeng <zenghongling@kylinos.cn>
Date:   Fri Sep 23 10:46:25 2022 +0800

    usb-storage: Add Hiksemi USB3-FW to IGNORE_UAS
    
    commit e00b488e813f0f1ad9f778e771b7cd2fe2877023 upstream.
    
    The UAS mode of Hiksemi USB_HDD is reported to fail to work on several
    platforms with the following error message, then after re-connecting the
    device will be offlined and not working at all.
    
    [  592.518442][ 2] sd 8:0:0:0: [sda] tag#17 uas_eh_abort_handler 0 uas-tag 18
                       inflight: CMD
    [  592.527575][ 2] sd 8:0:0:0: [sda] tag#17 CDB: Write(10) 2a 00 03 6f 88 00 00
                       04 00 00
    [  592.536330][ 2] sd 8:0:0:0: [sda] tag#0 uas_eh_abort_handler 0 uas-tag 1
                       inflight: CMD
    [  592.545266][ 2] sd 8:0:0:0: [sda] tag#0 CDB: Write(10) 2a 00 07 44 1a 88 00
                       00 08 00
    
    These disks have a broken uas implementation, the tag field of the status
    iu-s is not set properly,so we need to fall-back to usb-storage.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Hongling Zeng <zenghongling@kylinos.cn>
    Link: https://lore.kernel.org/r/1663901185-21067-1-git-send-email-zenghongling@kylinos.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 383c663c7359c7440b2238e029e22ed80663e84a
Author: Hongling Zeng <zenghongling@kylinos.cn>
Date:   Fri Sep 23 10:46:13 2022 +0800

    uas: add no-uas quirk for Hiksemi usb_disk
    
    commit a625a4b8806cc1e928b7dd2cca1fee709c9de56e upstream.
    
    The UAS mode of Hiksemi is reported to fail to work on several platforms
    with the following error message, then after re-connecting the device will
    be offlined and not working at all.
    
    [  592.518442][ 2] sd 8:0:0:0: [sda] tag#17 uas_eh_abort_handler 0 uas-tag 18
                       inflight: CMD
    [  592.527575][ 2] sd 8:0:0:0: [sda] tag#17 CDB: Write(10) 2a 00 03 6f 88 00 00
                       04 00 00
    [  592.536330][ 2] sd 8:0:0:0: [sda] tag#0 uas_eh_abort_handler 0 uas-tag 1
                       inflight: CMD
    [  592.545266][ 2] sd 8:0:0:0: [sda] tag#0 CDB: Write(10) 2a 00 07 44 1a 88 00
                       00 08 00
    
    These disks have a broken uas implementation, the tag field of the status
    iu-s is not set properly,so we need to fall-back to usb-storage.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Hongling Zeng <zenghongling@kylinos.cn>
    Link: https://lore.kernel.org/r/1663901173-21020-1-git-send-email-zenghongling@kylinos.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
