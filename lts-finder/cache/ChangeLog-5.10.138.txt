commit fa3303d70b423dd3e855f57febaba77e15069650
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Aug 25 11:38:24 2022 +0200

    Linux 5.10.138
    
    Link: https://lore.kernel.org/r/20220823080059.091088642@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20220824065913.068916566@linuxfoundation.org
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 606fe84a41851ab8307bb6096189dc8f4c8ba16b
Author: Jens Wiklander <jens.wiklander@linaro.org>
Date:   Tue Aug 23 10:23:26 2022 +0200

    tee: fix memory leak in tee_shm_register()
    
    Moves the access_ok() check for valid memory range from user space from
    the function tee_shm_register() to tee_ioctl_shm_register(). With this
    we error out early before anything is done that must be undone on error.
    
    Fixes: 578c349570d2 ("tee: add overflow check in register_shm_helper()")
    Cc: stable@vger.kernel.org # 5.10
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3527e3cbb84d8868c4d4e91ba55915f96d39ec3d
Author: Tadeusz Struk <tadeusz.struk@linaro.org>
Date:   Tue May 17 11:04:20 2022 -0700

    bpf: Fix KASAN use-after-free Read in compute_effective_progs
    
    commit 4c46091ee985ae84c60c5e95055d779fcd291d87 upstream.
    
    Syzbot found a Use After Free bug in compute_effective_progs().
    The reproducer creates a number of BPF links, and causes a fault
    injected alloc to fail, while calling bpf_link_detach on them.
    Link detach triggers the link to be freed by bpf_link_free(),
    which calls __cgroup_bpf_detach() and update_effective_progs().
    If the memory allocation in this function fails, the function restores
    the pointer to the bpf_cgroup_link on the cgroup list, but the memory
    gets freed just after it returns. After this, every subsequent call to
    update_effective_progs() causes this already deallocated pointer to be
    dereferenced in prog_list_length(), and triggers KASAN UAF error.
    
    To fix this issue don't preserve the pointer to the prog or link in the
    list, but remove it and replace it with a dummy prog without shrinking
    the table. The subsequent call to __cgroup_bpf_detach() or
    __cgroup_bpf_detach() will correct it.
    
    Fixes: af6eea57437a ("bpf: Implement bpf_link-based cgroup BPF program attachment")
    Reported-by: <syzbot+f264bffdfbd5614f3bb2@syzkaller.appspotmail.com>
    Signed-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://syzkaller.appspot.com/bug?id=8ebf179a95c2a2670f7cf1ba62429ec044369db4
    Link: https://lore.kernel.org/bpf/20220517180420.87954-1-tadeusz.struk@linaro.org
    Signed-off-by: Pu Lehui <pulehui@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f7286422a7836459f79445fbbdacff53da3b58b
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Wed Mar 31 05:36:42 2021 +0100

    qrtr: Convert qrtr_ports from IDR to XArray
    
    commit 3cbf7530a163d048a6376cd22fecb9cdcb23b192 upstream.
    
    The XArray interface is easier for this driver to use.  Also fixes a
    bug reported by the improper use of GFP_ATOMIC.
    
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Stanislav Goriainov <goriainov@ispras.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1daa7629d2a2a8bfcac5a70592275098afddd6cc
Author: Keith Busch <kbusch@kernel.org>
Date:   Mon Jan 4 15:02:58 2021 -0800

    PCI/ERR: Retain status from error notification
    
    commit 387c72cdd7fb6bef650fb078d0f6ae9682abf631 upstream.
    
    Overwriting the frozen detected status with the result of the link reset
    loses the NEED_RESET result that drivers are depending on for error
    handling to report the .slot_reset() callback. Retain this status so
    that subsequent error handling has the correct flow.
    
    Link: https://lore.kernel.org/r/20210104230300.1277180-4-kbusch@kernel.org
    Reported-by: Hinko Kocevar <hinko.kocevar@ess.eu>
    Tested-by: Hedi Berriche <hedi.berriche@hpe.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Sean V Kelley <sean.v.kelley@intel.com>
    Acked-by: Hedi Berriche <hedi.berriche@hpe.com>
    Cc: Dominique Martinet <dominique.martinet@atmark-techno.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a220ff343396bae8d3b6abee72ab51f1f34b3027
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Fri Aug 5 18:02:16 2022 +0300

    can: j1939: j1939_session_destroy(): fix memory leak of skbs
    
    commit 8c21c54a53ab21842f5050fa090f26b03c0313d6 upstream.
    
    We need to drop skb references taken in j1939_session_skb_queue() when
    destroying a session in j1939_session_destroy(). Otherwise those skbs
    would be lost.
    
    Link to Syzkaller info and repro: https://forge.ispras.ru/issues/11743.
    
    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.
    
    V1: https://lore.kernel.org/all/20220708175949.539064-1-pchelkin@ispras.ru
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Suggested-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/all/20220805150216.66313-1-pchelkin@ispras.ru
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05b9b0a7a7cdc297b63534474bf5ec5976949abf
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Fri Jul 29 17:36:55 2022 +0300

    can: j1939: j1939_sk_queue_activate_next_locked(): replace WARN_ON_ONCE with netdev_warn_once()
    
    commit 8ef49f7f8244424adcf4a546dba4cbbeb0b09c09 upstream.
    
    We should warn user-space that it is doing something wrong when trying
    to activate sessions with identical parameters but WARN_ON_ONCE macro
    can not be used here as it serves a different purpose.
    
    So it would be good to replace it with netdev_warn_once() message.
    
    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/all/20220729143655.1108297-1-pchelkin@ispras.ru
    [mkl: fix indention]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 184e73f12cbad9ccad80a390c7731e8c09598225
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Sat Aug 20 09:43:21 2022 -0400

    tracing/probes: Have kprobes and uprobes use $COMM too
    
    commit ab8384442ee512fc0fc72deeb036110843d0e7ff upstream.
    
    Both $comm and $COMM can be used to get current->comm in eprobes and the
    filtering and histogram logic. Make kprobes and uprobes consistent in this
    regard and allow both $comm and $COMM as well. Currently kprobes and
    uprobes only handle $comm, which is inconsistent with the other utilities,
    and can be confusing to users.
    
    Link: https://lkml.kernel.org/r/20220820134401.317014913@goodmis.org
    Link: https://lore.kernel.org/all/20220820220442.776e1ddaf8836e82edb34d01@kernel.org/
    
    Cc: stable@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tzvetomir Stoyanov <tz.stoyanov@gmail.com>
    Cc: Tom Zanussi <zanussi@kernel.org>
    Fixes: 533059281ee5 ("tracing: probeevent: Introduce new argument fetching code")
    Suggested-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3debec96cae1ca86e713415a5fb8458f44814192
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Wed Jul 14 11:27:03 2021 +0800

    netfilter: nf_tables: fix audit memory leak in nf_tables_commit
    
    commit cfbe3650dd3ef2ea9a4420ca89d9a4df98af3fb6 upstream.
    
    In nf_tables_commit, if nf_tables_commit_audit_alloc fails, it does not
    free the adp variable.
    
    Fix this by adding nf_tables_commit_audit_free which frees
    the linked list with the head node adl.
    
    backtrace:
      kmalloc include/linux/slab.h:591 [inline]
      kzalloc include/linux/slab.h:721 [inline]
      nf_tables_commit_audit_alloc net/netfilter/nf_tables_api.c:8439 [inline]
      nf_tables_commit+0x16e/0x1760 net/netfilter/nf_tables_api.c:8508
      nfnetlink_rcv_batch+0x512/0xa80 net/netfilter/nfnetlink.c:562
      nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:634 [inline]
      nfnetlink_rcv+0x1fa/0x220 net/netfilter/nfnetlink.c:652
      netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
      netlink_unicast+0x2c7/0x3e0 net/netlink/af_netlink.c:1340
      netlink_sendmsg+0x36b/0x6b0 net/netlink/af_netlink.c:1929
      sock_sendmsg_nosec net/socket.c:702 [inline]
      sock_sendmsg+0x56/0x80 net/socket.c:722
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: c520292f29b8 ("audit: log nftables configuration change events once per table")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3d0db3b435a7216d3082c4ddea95f5de4726854
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Apr 2 14:45:44 2021 +0300

    netfilter: nftables: fix a warning message in nf_tables_commit_audit_collect()
    
    commit dadf33c9f6b5f694e842d224a4d071f59ac665ee upstream.
    
    The first argument of a WARN_ONCE() is a condition.  This WARN_ONCE()
    will only print the table name, and is potentially problematic if the
    table name has a %s in it.
    
    Fixes: c520292f29b8 ("audit: log nftables configuration change events once per table")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 059f47b3a433b768135618b6a947084ed9876550
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Aug 2 10:59:36 2022 -0700

    MIPS: tlbex: Explicitly compare _PAGE_NO_EXEC against 0
    
    [ Upstream commit 74de14fe05dd6b151d73cb0c73c8ec874cbdcde6 ]
    
    When CONFIG_XPA is enabled, Clang warns:
    
      arch/mips/mm/tlbex.c:629:24: error: converting the result of '<<' to a boolean; did you mean '(1 << _PAGE_NO_EXEC_SHIFT) != 0'? [-Werror,-Wint-in-bool-context]
              if (cpu_has_rixi && !!_PAGE_NO_EXEC) {
                                  ^
      arch/mips/include/asm/pgtable-bits.h:174:28: note: expanded from macro '_PAGE_NO_EXEC'
      # define _PAGE_NO_EXEC          (1 << _PAGE_NO_EXEC_SHIFT)
                                         ^
      arch/mips/mm/tlbex.c:2568:24: error: converting the result of '<<' to a boolean; did you mean '(1 << _PAGE_NO_EXEC_SHIFT) != 0'? [-Werror,-Wint-in-bool-context]
              if (!cpu_has_rixi || !_PAGE_NO_EXEC) {
                                    ^
      arch/mips/include/asm/pgtable-bits.h:174:28: note: expanded from macro '_PAGE_NO_EXEC'
      # define _PAGE_NO_EXEC          (1 << _PAGE_NO_EXEC_SHIFT)
                                         ^
      2 errors generated.
    
    _PAGE_NO_EXEC can be '0' or '1 << _PAGE_NO_EXEC_SHIFT' depending on the
    build and runtime configuration, which is what the negation operators
    are trying to convey. To silence the warning, explicitly compare against
    0 so the result of the '<<' operator is not implicitly converted to a
    boolean.
    
    According to its documentation, GCC enables -Wint-in-bool-context with
    -Wall but this warning is not visible when building the same
    configuration with GCC. It appears GCC only warns when compiling C++,
    not C, although the documentation makes no note of this:
    https://godbolt.org/z/x39q3brxf
    
    Reported-by: Sudip Mukherjee (Codethink) <sudipm.mukherjee@gmail.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b20c61365140d432dee7da7aa294215e7b900d9
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Aug 3 17:24:19 2022 +0800

    video: fbdev: i740fb: Check the argument of i740_calc_vclk()
    
    [ Upstream commit 40bf722f8064f50200b8c4f8946cd625b441dda9 ]
    
    Since the user can control the arguments of the ioctl() from the user
    space, under special arguments that may result in a divide-by-zero bug.
    
    If the user provides an improper 'pixclock' value that makes the argumet
    of i740_calc_vclk() less than 'I740_RFREQ_FIX', it will cause a
    divide-by-zero bug in:
        drivers/video/fbdev/i740fb.c:353 p_best = min(15, ilog2(I740_MAX_VCO_FREQ / (freq / I740_RFREQ_FIX)));
    
    The following log can reveal it:
    
    divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    RIP: 0010:i740_calc_vclk drivers/video/fbdev/i740fb.c:353 [inline]
    RIP: 0010:i740fb_decode_var drivers/video/fbdev/i740fb.c:646 [inline]
    RIP: 0010:i740fb_set_par+0x163f/0x3b70 drivers/video/fbdev/i740fb.c:742
    Call Trace:
     fb_set_var+0x604/0xeb0 drivers/video/fbdev/core/fbmem.c:1034
     do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110
     fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189
    
    Fix this by checking the argument of i740_calc_vclk() first.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dac28dff90849af4200b8269fcdc84cdc12fa46c
Author: Zhouyi Zhou <zhouzhouyi@gmail.com>
Date:   Tue Jul 26 09:57:47 2022 +0800

    powerpc/64: Init jump labels before parse_early_param()
    
    [ Upstream commit ca829e05d3d4f728810cc5e4b468d9ebc7745eb3 ]
    
    On 64-bit, calling jump_label_init() in setup_feature_keys() is too
    late because static keys may be used in subroutines of
    parse_early_param() which is again subroutine of early_init_devtree().
    
    For example booting with "threadirqs":
    
      static_key_enable_cpuslocked(): static key '0xc000000002953260' used before call to jump_label_init()
      WARNING: CPU: 0 PID: 0 at kernel/jump_label.c:166 static_key_enable_cpuslocked+0xfc/0x120
      ...
      NIP static_key_enable_cpuslocked+0xfc/0x120
      LR  static_key_enable_cpuslocked+0xf8/0x120
      Call Trace:
        static_key_enable_cpuslocked+0xf8/0x120 (unreliable)
        static_key_enable+0x30/0x50
        setup_forced_irqthreads+0x28/0x40
        do_early_param+0xa0/0x108
        parse_args+0x290/0x4e0
        parse_early_options+0x48/0x5c
        parse_early_param+0x58/0x84
        early_init_devtree+0xd4/0x518
        early_setup+0xb4/0x214
    
    So call jump_label_init() just before parse_early_param() in
    early_init_devtree().
    
    Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Zhouyi Zhou <zhouzhouyi@gmail.com>
    [mpe: Add call trace to change log and minor wording edits.]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220726015747.11754-1-zhouzhouyi@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52a408548ab3bd76315f4dc1427430ba0923bf22
Author: Steve French <stfrench@microsoft.com>
Date:   Tue Jul 12 11:43:44 2022 -0500

    smb3: check xattr value length earlier
    
    [ Upstream commit 5fa2cffba0b82336a2244d941322eb1627ff787b ]
    
    Coverity complains about assigning a pointer based on
    value length before checking that value length goes
    beyond the end of the SMB.  Although this is even more
    unlikely as value length is a single byte, and the
    pointer is not dereferenced until laterm, it is clearer
    to check the lengths first.
    
    Addresses-Coverity: 1467704 ("Speculative execution data leak")
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 336936f72ab39f89af879909c6d628a4836990ad
Author: Chao Yu <chao.yu@oppo.com>
Date:   Wed Jul 27 22:51:05 2022 +0800

    f2fs: fix to do sanity check on segment type in build_sit_entries()
    
    [ Upstream commit 09beadf289d6e300553e60d6e76f13c0427ecab3 ]
    
    As Wenqing Liu <wenqingliu0120@gmail.com> reported in bugzilla:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=216285
    
    RIP: 0010:memcpy_erms+0x6/0x10
     f2fs_update_meta_page+0x84/0x570 [f2fs]
     change_curseg.constprop.0+0x159/0xbd0 [f2fs]
     f2fs_do_replace_block+0x5c7/0x18a0 [f2fs]
     f2fs_replace_block+0xeb/0x180 [f2fs]
     recover_data+0x1abd/0x6f50 [f2fs]
     f2fs_recover_fsync_data+0x12ce/0x3250 [f2fs]
     f2fs_fill_super+0x4459/0x6190 [f2fs]
     mount_bdev+0x2cf/0x3b0
     legacy_get_tree+0xed/0x1d0
     vfs_get_tree+0x81/0x2b0
     path_mount+0x47e/0x19d0
     do_mount+0xce/0xf0
     __x64_sys_mount+0x12c/0x1a0
     do_syscall_64+0x38/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    The root cause is segment type is invalid, so in f2fs_do_replace_block(),
    f2fs accesses f2fs_sm_info::curseg_array with out-of-range segment type,
    result in accessing invalid curseg->sum_blk during memcpy in
    f2fs_update_meta_page(). Fix this by adding sanity check on segment type
    in build_sit_entries().
    
    Reported-by: Wenqing Liu <wenqingliu0120@gmail.com>
    Signed-off-by: Chao Yu <chao.yu@oppo.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 800ba8979111184d5194f4233cc83afe683efc54
Author: Chao Yu <chao.yu@oppo.com>
Date:   Mon Jul 25 00:03:23 2022 +0800

    f2fs: fix to avoid use f2fs_bug_on() in f2fs_new_node_page()
    
    [ Upstream commit 141170b759e03958f296033bb7001be62d1d363b ]
    
    As Dipanjan Das <mail.dipanjan.das@gmail.com> reported, syzkaller
    found a f2fs bug as below:
    
    RIP: 0010:f2fs_new_node_page+0x19ac/0x1fc0 fs/f2fs/node.c:1295
    Call Trace:
     write_all_xattrs fs/f2fs/xattr.c:487 [inline]
     __f2fs_setxattr+0xe76/0x2e10 fs/f2fs/xattr.c:743
     f2fs_setxattr+0x233/0xab0 fs/f2fs/xattr.c:790
     f2fs_xattr_generic_set+0x133/0x170 fs/f2fs/xattr.c:86
     __vfs_setxattr+0x115/0x180 fs/xattr.c:182
     __vfs_setxattr_noperm+0x125/0x5f0 fs/xattr.c:216
     __vfs_setxattr_locked+0x1cf/0x260 fs/xattr.c:277
     vfs_setxattr+0x13f/0x330 fs/xattr.c:303
     setxattr+0x146/0x160 fs/xattr.c:611
     path_setxattr+0x1a7/0x1d0 fs/xattr.c:630
     __do_sys_lsetxattr fs/xattr.c:653 [inline]
     __se_sys_lsetxattr fs/xattr.c:649 [inline]
     __x64_sys_lsetxattr+0xbd/0x150 fs/xattr.c:649
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    NAT entry and nat bitmap can be inconsistent, e.g. one nid is free
    in nat bitmap, and blkaddr in its NAT entry is not NULL_ADDR, it
    may trigger BUG_ON() in f2fs_new_node_page(), fix it.
    
    Reported-by: Dipanjan Das <mail.dipanjan.das@gmail.com>
    Signed-off-by: Chao Yu <chao.yu@oppo.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 857ccedcf569665809d351241d22247c6c55887f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jul 28 14:59:45 2022 +0200

    ALSA: control: Use deferred fasync helper
    
    [ Upstream commit 4a971e84a7ae10a38d875cd2d4e487c8d1682ca3 ]
    
    For avoiding the potential deadlock via kill_fasync() call, use the
    new fasync helpers to defer the invocation from the control API.  Note
    that it's merely a workaround.
    
    Another note: although we haven't received reports about the deadlock
    with the control API, the deadlock is still potentially possible, and
    it's better to align the behavior with other core APIs (PCM and
    timer); so let's move altogether.
    
    Link: https://lore.kernel.org/r/20220728125945.29533-5-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 658bc550a4ec7116e345a84f51c5de436b81e6c9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jul 28 14:59:43 2022 +0200

    ALSA: timer: Use deferred fasync helper
    
    [ Upstream commit 95cc637c1afd83fb7dd3d7c8a53710488f4caf9c ]
    
    For avoiding the potential deadlock via kill_fasync() call, use the
    new fasync helpers to defer the invocation from PCI API.  Note that
    it's merely a workaround.
    
    Reported-by: syzbot+1ee0910eca9c94f71f25@syzkaller.appspotmail.com
    Reported-by: syzbot+49b10793b867871ee26f@syzkaller.appspotmail.com
    Reported-by: syzbot+8285e973a41b5aa68902@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/20220728125945.29533-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be094c417a0ee188eb96a6399801686962e6771a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jul 28 14:59:42 2022 +0200

    ALSA: core: Add async signal helpers
    
    [ Upstream commit ef34a0ae7a2654bc9e58675e36898217fb2799d8 ]
    
    Currently the call of kill_fasync() from an interrupt handler might
    lead to potential spin deadlocks, as spotted by syzkaller.
    Unfortunately, it's not so trivial to fix this lock chain as it's
    involved with the tasklist_lock that is touched in allover places.
    
    As a temporary workaround, this patch provides the way to defer the
    async signal notification in a work.  The new helper functions,
    snd_fasync_helper() and snd_kill_faync() are replacements for
    fasync_helper() and kill_fasync(), respectively.  In addition,
    snd_fasync_free() needs to be called at the destructor of the relevant
    file object.
    
    Link: https://lore.kernel.org/r/20220728125945.29533-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ed3e280c7a1c1c9c87ad3ce41c51b86435adae7
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Mon Jul 11 16:19:30 2022 +0200

    powerpc/32: Don't always pass -mcpu=powerpc to the compiler
    
    [ Upstream commit 446cda1b21d9a6b3697fe399c6a3a00ff4a285f5 ]
    
    Since commit 4bf4f42a2feb ("powerpc/kbuild: Set default generic
    machine type for 32-bit compile"), when building a 32 bits kernel
    with a bi-arch version of GCC, or when building a book3s/32 kernel,
    the option -mcpu=powerpc is passed to GCC at all time, relying on it
    being eventually overriden by a subsequent -mcpu=xxxx.
    
    But when building the same kernel with a 32 bits only version of GCC,
    that is not done, relying on gcc being built with the expected default
    CPU.
    
    This logic has two problems. First, it is a bit fragile to rely on
    whether the GCC version is bi-arch or not, because today we can have
    bi-arch versions of GCC configured with a 32 bits default. Second,
    there are some versions of GCC which don't support -mcpu=powerpc,
    for instance for e500 SPE-only versions.
    
    So, stop relying on this approximative logic and allow the user to
    decide whether he/she wants to use the toolchain's default CPU or if
    he/she wants to set one, and allow only possible CPUs based on the
    selected target.
    
    Reported-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Tested-by: Pali Rohár <pali@kernel.org>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/d4df724691351531bf46d685d654689e5dfa0d74.1657549153.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63671b2bdf5f82ac58b6dbbe8a6cd87d1a13eacc
Author: Laurent Dufour <ldufour@linux.ibm.com>
Date:   Wed Jul 13 17:47:27 2022 +0200

    watchdog: export lockup_detector_reconfigure
    
    [ Upstream commit 7c56a8733d0a2a4be2438a7512566e5ce552fccf ]
    
    In some circumstances it may be interesting to reconfigure the watchdog
    from inside the kernel.
    
    On PowerPC, this may helpful before and after a LPAR migration (LPM) is
    initiated, because it implies some latencies, watchdog, and especially NMI
    watchdog is expected to be triggered during this operation. Reconfiguring
    the watchdog with a factor, would prevent it to happen too frequently
    during LPM.
    
    Rename lockup_detector_reconfigure() as __lockup_detector_reconfigure() and
    create a new function lockup_detector_reconfigure() calling
    __lockup_detector_reconfigure() under the protection of watchdog_mutex.
    
    Signed-off-by: Laurent Dufour <ldufour@linux.ibm.com>
    [mpe: Squash in build fix from Laurent, reported by Sachin]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220713154729.80789-3-ldufour@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 399d245775673f47616756a8814ca1dc90581185
Author: Xianting Tian <xianting.tian@linux.alibaba.com>
Date:   Mon Jun 6 16:23:08 2022 +0800

    RISC-V: Add fast call path of crash_kexec()
    
    [ Upstream commit 3f1901110a89b0e2e13adb2ac8d1a7102879ea98 ]
    
    Currently, almost all archs (x86, arm64, mips...) support fast call
    of crash_kexec() when "regs && kexec_should_crash()" is true. But
    RISC-V not, it can only enter crash system via panic(). However panic()
    doesn't pass the regs of the real accident scene to crash_kexec(),
    it caused we can't get accurate backtrace via gdb,
            $ riscv64-linux-gnu-gdb vmlinux vmcore
            Reading symbols from vmlinux...
            [New LWP 95]
            #0  console_unlock () at kernel/printk/printk.c:2557
            2557                    if (do_cond_resched)
            (gdb) bt
            #0  console_unlock () at kernel/printk/printk.c:2557
            #1  0x0000000000000000 in ?? ()
    
    With the patch we can get the accurate backtrace,
            $ riscv64-linux-gnu-gdb vmlinux vmcore
            Reading symbols from vmlinux...
            [New LWP 95]
            #0  0xffffffe00063a4e0 in test_thread (data=<optimized out>) at drivers/test_crash.c:81
            81             *(int *)p = 0xdead;
            (gdb)
            (gdb) bt
            #0  0xffffffe00064d5c0 in test_thread (data=<optimized out>) at drivers/test_crash.c:81
            #1  0x0000000000000000 in ?? ()
    
    Test code to produce NULL address dereference in test_crash.c,
            void *p = NULL;
            *(int *)p = 0xdead;
    
    Reviewed-by: Guo Ren <guoren@kernel.org>
    Tested-by: Xianting Tian <xianting.tian@linux.alibaba.com>
    Signed-off-by: Xianting Tian <xianting.tian@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20220606082308.2883458-1-xianting.tian@linux.alibaba.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d881c98d0a499ef719ba1776fccfa4ee475d3e1e
Author: Celeste Liu <coelacanthus@outlook.com>
Date:   Tue May 31 15:56:52 2022 +0800

    riscv: mmap with PROT_WRITE but no PROT_READ is invalid
    
    [ Upstream commit 2139619bcad7ac44cc8f6f749089120594056613 ]
    
    As mentioned in Table 4.5 in RISC-V spec Volume 2 Section 4.3, write
    but not read is "Reserved for future use.". For now, they are not valid.
    In the current code, -wx is marked as invalid, but -w- is not marked
    as invalid.
    This patch refines that judgment.
    
    Reported-by: xctan <xc-tan@outlook.com>
    Co-developed-by: dram <dramforever@live.com>
    Signed-off-by: dram <dramforever@live.com>
    Co-developed-by: Ruizhe Pan <c141028@gmail.com>
    Signed-off-by: Ruizhe Pan <c141028@gmail.com>
    Signed-off-by: Celeste Liu <coelacanthus@outlook.com>
    Link: https://lore.kernel.org/r/PH7PR14MB559464DBDD310E755F5B21E8CEDC9@PH7PR14MB5594.namprd14.prod.outlook.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 333bdb72be1307421da4bf8692f6040f15d8cbb0
Author: Helge Deller <deller@gmx.de>
Date:   Fri Jul 8 11:44:54 2022 +0200

    modules: Ensure natural alignment for .altinstructions and __bug_table sections
    
    [ Upstream commit 87c482bdfa79f378297d92af49cdf265be199df5 ]
    
    In the kernel image vmlinux.lds.S linker scripts the .altinstructions
    and __bug_table sections are 4- or 8-byte aligned because they hold 32-
    and/or 64-bit values.
    
    Most architectures use altinstructions and BUG() or WARN() in modules as
    well, but in the module linker script (module.lds.S) those sections are
    currently missing. As consequence the linker will store their content
    byte-aligned by default, which then can lead to unnecessary unaligned
    memory accesses by the CPU when those tables are processed at runtime.
    
    Usually unaligned memory accesses are unnoticed, because either the
    hardware (as on x86 CPUs) or in-kernel exception handlers (e.g. on
    parisc or sparc) emulate and fix them up at runtime. Nevertheless, such
    unaligned accesses introduce a performance penalty and can even crash
    the kernel if there is a bug in the unalignment exception handlers
    (which happened once to me on the parisc architecture and which is why I
    noticed that issue at all).
    
    This patch fixes a non-critical issue and might be backported at any time.
    It's trivial and shouldn't introduce any regression because it simply
    tells the linker to use a different (8-byte alignment) for those
    sections by default.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Link: https://lore.kernel.org/all/Yr8%2Fgr8e8I7tVX4d@p100/
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e39037e44d7fa3728686af146f9285ea197097d
Author: Liang He <windhl@126.com>
Date:   Fri Jul 1 20:41:12 2022 +0800

    mips: cavium-octeon: Fix missing of_node_put() in octeon2_usb_clocks_start
    
    [ Upstream commit 7a9f743ceead60ed454c46fbc3085ee9a79cbebb ]
    
    We should call of_node_put() for the reference 'uctl_node' returned by
    of_get_parent() which will increase the refcount. Otherwise, there will
    be a refcount leak bug.
    
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e034e03f416242bb8272bd3866a93281bbfcb24
Author: Schspa Shi <schspa@gmail.com>
Date:   Wed Jun 29 10:29:48 2022 +0800

    vfio: Clear the caps->buf to NULL after free
    
    [ Upstream commit 6641085e8d7b3f061911517f79a2a15a0a21b97b ]
    
    On buffer resize failure, vfio_info_cap_add() will free the buffer,
    report zero for the size, and return -ENOMEM.  As additional
    hardening, also clear the buffer pointer to prevent any chance of a
    double free.
    
    Signed-off-by: Schspa Shi <schspa@gmail.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Link: https://lore.kernel.org/r/20220629022948.55608-1-schspa@gmail.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81939c4fbc2d5c754d0f1c1f05149d4b70d751ed
Author: Liang He <windhl@126.com>
Date:   Sat Jun 18 14:08:50 2022 +0800

    tty: serial: Fix refcount leak bug in ucc_uart.c
    
    [ Upstream commit d24d7bb2cd947676f9b71fb944d045e09b8b282f ]
    
    In soc_info(), of_find_node_by_type() will return a node pointer
    with refcount incremented. We should use of_node_put() when it is
    not used anymore.
    
    Acked-by: Timur Tabi <timur@kernel.org>
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220618060850.4058525-1-windhl@126.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58275db3c7d220121b044d2367c550fba76ec8ef
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue May 31 15:29:51 2022 -0700

    lib/list_debug.c: Detect uninitialized lists
    
    [ Upstream commit 0cc011c576aaa4de505046f7a6c90933d7c749a9 ]
    
    In some circumstances, attempts are made to add entries to or to remove
    entries from an uninitialized list.  A prime example is
    amdgpu_bo_vm_destroy(): It is indirectly called from
    ttm_bo_init_reserved() if that function fails, and tries to remove an
    entry from a list.  However, that list is only initialized in
    amdgpu_bo_create_vm() after the call to ttm_bo_init_reserved() returned
    success.  This results in crashes such as
    
     BUG: kernel NULL pointer dereference, address: 0000000000000000
     #PF: supervisor read access in kernel mode
     #PF: error_code(0x0000) - not-present page
     PGD 0 P4D 0
     Oops: 0000 [#1] PREEMPT SMP NOPTI
     CPU: 1 PID: 1479 Comm: chrome Not tainted 5.10.110-15768-g29a72e65dae5
     Hardware name: Google Grunt/Grunt, BIOS Google_Grunt.11031.149.0 07/15/2020
     RIP: 0010:__list_del_entry_valid+0x26/0x7d
     ...
     Call Trace:
      amdgpu_bo_vm_destroy+0x48/0x8b
      ttm_bo_init_reserved+0x1d7/0x1e0
      amdgpu_bo_create+0x212/0x476
      ? amdgpu_bo_user_destroy+0x23/0x23
      ? kmem_cache_alloc+0x60/0x271
      amdgpu_bo_create_vm+0x40/0x7d
      amdgpu_vm_pt_create+0xe8/0x24b
     ...
    
    Check if the list's prev and next pointers are NULL to catch such problems.
    
    Link: https://lkml.kernel.org/r/20220531222951.92073-1-linux@roeck-us.net
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80288883294c5b4ed18bae0d8bd9c4a12f297074
Author: Kiselev, Oleg <okiselev@amazon.com>
Date:   Wed Jul 20 04:27:48 2022 +0000

    ext4: avoid resizing to a partial cluster size
    
    [ Upstream commit 69cb8e9d8cd97cdf5e293b26d70a9dee3e35e6bd ]
    
    This patch avoids an attempt to resize the filesystem to an
    unaligned cluster boundary.  An online resize to a size that is not
    integral to cluster size results in the last iteration attempting to
    grow the fs by a negative amount, which trips a BUG_ON and leaves the fs
    with a corrupted in-memory superblock.
    
    Signed-off-by: Oleg Kiselev <okiselev@amazon.com>
    Link: https://lore.kernel.org/r/0E92A0AB-4F16-4F1A-94B7-702CC6504FDE@amazon.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 285447b81925ff785533c677d552c97818081181
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Jun 22 17:02:23 2022 +0800

    ext4: avoid remove directory when directory is corrupted
    
    [ Upstream commit b24e77ef1c6d4dbf42749ad4903c97539cc9755a ]
    
    Now if check directoy entry is corrupted, ext4_empty_dir may return true
    then directory will be removed when file system mounted with "errors=continue".
    In order not to make things worse just return false when directory is corrupted.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220622090223.682234-1-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d8325fd15892c8ab1146edc1d7ed8463de39636
Author: Wentao_Liang <Wentao_Liang_g@163.com>
Date:   Thu Jul 28 19:39:19 2022 +0800

    drivers:md:fix a potential use-after-free bug
    
    [ Upstream commit 104212471b1c1817b311771d817fb692af983173 ]
    
    In line 2884, "raid5_release_stripe(sh);" drops the reference to sh and
    may cause sh to be released. However, sh is subsequently used in lines
    2886 "if (sh->batch_head && sh != sh->batch_head)". This may result in an
    use-after-free bug.
    
    It can be fixed by moving "raid5_release_stripe(sh);" to the bottom of
    the function.
    
    Signed-off-by: Wentao_Liang <Wentao_Liang_g@163.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 534e96302ad2cf24dfa6e6c2b18bc7c50ac16844
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Sun Jul 24 11:58:43 2022 +0300

    nvmet-tcp: fix lockdep complaint on nvmet_tcp_wq flush during queue teardown
    
    [ Upstream commit 533d2e8b4d5e4c89772a0adce913525fb86cbbee ]
    
    We probably need nvmet_tcp_wq to have MEM_RECLAIM as we are
    sending/receiving for the socket from works on this workqueue.
    Also this eliminates lockdep complaints:
    --
    [ 6174.010200] workqueue: WQ_MEM_RECLAIM
    nvmet-wq:nvmet_tcp_release_queue_work [nvmet_tcp] is flushing
    !WQ_MEM_RECLAIM nvmet_tcp_wq:nvmet_tcp_io_work [nvmet_tcp]
    [ 6174.010216] WARNING: CPU: 20 PID: 14456 at kernel/workqueue.c:2628
    check_flush_dependency+0x110/0x14c
    
    Reported-by: Yi Zhang <yi.zhang@redhat.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d7aabdba60cc7e6d051617f6c984f5d1bfe2974
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Wed Jun 8 10:27:56 2022 -0600

    md: Notify sysfs sync_completed in md_reap_sync_thread()
    
    [ Upstream commit 9973f0fa7d20269fe6fefe6333997fb5914449c1 ]
    
    The mdadm test 07layouts randomly produces a kernel hung task deadlock.
    The deadlock is caused by the suspend_lo/suspend_hi files being set by
    the mdadm background process during reshape and not being cleared
    because the process hangs. (Leaving aside the issue of the fragility of
    freezing kernel tasks by buggy userspace processes...)
    
    When the background mdadm process hangs it, is waiting (without a
    timeout) on a change to the sync_completed file signalling that the
    reshape has completed. The process is woken up a couple times when
    the reshape finishes but it is woken up before MD_RECOVERY_RUNNING
    is cleared so sync_completed_show() reports 0 instead of "none".
    
    To fix this, notify the sysfs file in md_reap_sync_thread() after
    MD_RECOVERY_RUNNING has been cleared. This wakes up mdadm and causes
    it to continue and write to suspend_lo/suspend_hi to allow IO to
    continue.
    
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f43a72d4da91a96f106122322df40b274a6b205d
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Jul 21 22:40:54 2022 +0200

    dmaengine: sprd: Cleanup in .remove() after pm_runtime_get_sync() failed
    
    [ Upstream commit 1e42f82cbec7b2cc4873751e7791e6611901c5fc ]
    
    It's not allowed to quit remove early without cleaning up completely.
    Otherwise this results in resource leaks that probably yield graver
    problems later. Here for example some tasklets might survive the lifetime
    of the sprd-dma device and access sdev which is freed after .remove()
    returns.
    
    As none of the device freeing requires an active device, just ignore the
    return value of pm_runtime_get_sync().
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Baolin Wang <baolin.wang7@gmail.com>
    Link: https://lore.kernel.org/r/20220721204054.323602-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b30aa4ff11a1f3431952d07ea0c4b18e94fc6011
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Jul 12 16:17:07 2022 -0400

    selftests/kprobe: Do not test for GRP/ without event failures
    
    [ Upstream commit f5eab65ff2b76449286d18efc7fee3e0b72f7d9b ]
    
    A new feature is added where kprobes (and other probes) do not need to
    explicitly state the event name when creating a probe. The event name will
    come from what is being attached.
    
    That is:
    
      # echo 'p:foo/ vfs_read' > kprobe_events
    
    Will no longer error, but instead create an event:
    
      # cat kprobe_events
     p:foo/p_vfs_read_0 vfs_read
    
    This should not be tested as an error case anymore. Remove it from the
    selftest as now this feature "breaks" the selftest as it no longer fails
    as expected.
    
    Link: https://lore.kernel.org/all/1656296348-16111-1-git-send-email-quic_linyyuan@quicinc.com/
    Link: https://lkml.kernel.org/r/20220712161707.6dc08a14@gandalf.local.home
    
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa45327d8c52d82a680cbe48f81ff371a4408514
Author: Liao Chang <liaochang1@huawei.com>
Date:   Wed May 25 16:02:41 2022 +0800

    csky/kprobe: reclaim insn_slot on kprobe unregistration
    
    [ Upstream commit a2310c74d418deca0f1d749c45f1f43162510f51 ]
    
    On kprobe registration kernel allocate one insn_slot for new kprobe,
    but it forget to reclaim the insn_slot on unregistration, leading to a
    potential leakage.
    
    Reported-by: Chen Guokai <chenguokai17@mails.ucas.ac.cn>
    Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Liao Chang <liaochang1@huawei.com>
    Signed-off-by: Guo Ren <guoren@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18f62a453b7222d78d59735773a777ac18af78a5
Author: Bob Pearson <rpearsonhpe@gmail.com>
Date:   Thu Jun 30 14:04:25 2022 -0500

    RDMA/rxe: Limit the number of calls to each tasklet
    
    [ Upstream commit eff6d998ca297cb0b2e53b032a56cf8e04dd8b17 ]
    
    Limit the maximum number of calls to each tasklet from rxe_do_task()
    before yielding the cpu. When the limit is reached reschedule the tasklet
    and exit the calling loop. This patch prevents one tasklet from consuming
    100% of a cpu core and causing a deadlock or soft lockup.
    
    Link: https://lore.kernel.org/r/20220630190425.2251-9-rpearsonhpe@gmail.com
    Signed-off-by: Bob Pearson <rpearsonhpe@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a6178c225e9037013afa603005b322fda760d8c
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Wed Jul 13 13:56:17 2022 +0200

    um: add "noreboot" command line option for PANIC_TIMEOUT=-1 setups
    
    [ Upstream commit dda520d07b95072a0b63f6c52a8eb566d08ea897 ]
    
    QEMU has a -no-reboot option, which halts instead of reboots when the
    guest asks to reboot. This is invaluable when used with
    CONFIG_PANIC_TIMEOUT=-1 (and panic_on_warn), because it allows panics
    and warnings to be caught immediately in CI. Implement this in UML too,
    by way of a basic setup param.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4c9f162193ac2c927f8013d6c9fa9e076ae3424
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Thu Jul 14 20:42:10 2022 +0800

    PCI/ACPI: Guard ARM64-specific mcfg_quirks
    
    [ Upstream commit 40a6cc141b4b9580de140bcb3e893445708acc5d ]
    
    Guard ARM64-specific quirks with CONFIG_ARM64 to avoid build errors,
    since mcfg_quirks will be shared by more than one architectures.
    
    Link: https://lore.kernel.org/r/20220714124216.1489304-2-chenhuacai@loongson.cn
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4be138bcd6d68cec0ce47051b117541061f5141a
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Jul 11 21:14:48 2022 +0200

    cxl: Fix a memory leak in an error handling path
    
    [ Upstream commit 3a15b45b5454da862376b5d69a4967f5c6fa1368 ]
    
    A bitmap_zalloc() must be balanced by a corresponding bitmap_free() in the
    error handling path of afu_allocate_irqs().
    
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/ce5869418f5838187946eb6b11a52715a93ece3d.1657566849.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84d94619c7cfb9274ddad840a99417f8c0b9fd77
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Jun 6 19:41:28 2022 +0300

    pinctrl: intel: Check against matching data instead of ACPI companion
    
    [ Upstream commit c551bd81d198bf1dcd4398d5454acdc0309dbe77 ]
    
    In some cases we may get a platform device that has ACPI companion
    which is different to the pin control described in the ACPI tables.
    This is primarily happens when device is instantiated by board file.
    
    In order to allow this device being enumerated, refactor
    intel_pinctrl_get_soc_data() to check the matching data instead of
    ACPI companion.
    
    Reported-by: Henning Schild <henning.schild@siemens.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Tested-by: Henning Schild <henning.schild@siemens.com>
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ac14f973cb91f0c01776517e6d50981f32b8038
Author: Jozef Martiniak <jomajm@gmail.com>
Date:   Fri Jul 8 09:06:44 2022 +0200

    gadgetfs: ep_io - wait until IRQ finishes
    
    [ Upstream commit 04cb742d4d8f30dc2e83b46ac317eec09191c68e ]
    
    after usb_ep_queue() if wait_for_completion_interruptible() is
    interrupted we need to wait until IRQ gets finished.
    
    Otherwise complete() from epio_complete() can corrupt stack.
    
    Signed-off-by: Jozef Martiniak <jomajm@gmail.com>
    Link: https://lore.kernel.org/r/20220708070645.6130-1-jomajm@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c29a4baaad38a332c0ae480cf6d6c5bf75ac1828
Author: James Smart <jsmart2021@gmail.com>
Date:   Fri Jul 1 14:14:15 2022 -0700

    scsi: lpfc: Prevent buffer overflow crashes in debugfs with malformed user input
    
    [ Upstream commit f8191d40aa612981ce897e66cda6a88db8df17bb ]
    
    Malformed user input to debugfs results in buffer overflow crashes.  Adapt
    input string lengths to fit within internal buffers, leaving space for NULL
    terminators.
    
    Link: https://lore.kernel.org/r/20220701211425.2708-3-jsmart2021@gmail.com
    Co-developed-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb01065fd33743e6a2a68f660714e500c92968ce
Author: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
Date:   Fri Jul 1 09:27:11 2022 +0300

    clk: qcom: clk-alpha-pll: fix clk_trion_pll_configure description
    
    [ Upstream commit 94bed9bb05c7850ff5d80b87cc29004901f37956 ]
    
    After merging lucid and trion pll functions in commit 0b01489475c6
    ("clk: qcom: clk-alpha-pll: same regs and ops for trion and lucid")
    the function clk_trion_pll_configure() is left with an old description
    header, which results in a W=2 compile time warning, fix it.
    
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220701062711.2757855-1-vladimir.zapolskiy@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56a4bccab9c8f008856a4707f990dd1e2e93abf8
Author: Sergey Senozhatsky <senozhatsky@chromium.org>
Date:   Wed Jun 22 11:35:01 2022 +0900

    zram: do not lookup algorithm in backends table
    
    [ Upstream commit dc89997264de565999a1cb55db3f295d3a8e457b ]
    
    Always use crypto_has_comp() so that crypto can lookup module, call
    usermodhelper to load the modules, wait for usermodhelper to finish and so
    on.  Otherwise crypto will do all of these steps under CPU hot-plug lock
    and this looks like too much stuff to handle under the CPU hot-plug lock.
    Besides this can end up in a deadlock when usermodhelper triggers a code
    path that attempts to lock the CPU hot-plug lock, that zram already holds.
    
    An example of such deadlock:
    
    - path A. zram grabs CPU hot-plug lock, execs /sbin/modprobe from crypto
      and waits for modprobe to finish
    
    disksize_store
     zcomp_create
      __cpuhp_state_add_instance
       __cpuhp_state_add_instance_cpuslocked
        zcomp_cpu_up_prepare
         crypto_alloc_base
          crypto_alg_mod_lookup
           call_usermodehelper_exec
            wait_for_completion_killable
             do_wait_for_common
              schedule
    
    - path B. async work kthread that brings in scsi device. It wants to
      register CPUHP states at some point, and it needs the CPU hot-plug
      lock for that, which is owned by zram.
    
    async_run_entry_fn
     scsi_probe_and_add_lun
      scsi_mq_alloc_queue
       blk_mq_init_queue
        blk_mq_init_allocated_queue
         blk_mq_realloc_hw_ctxs
          __cpuhp_state_add_instance
           __cpuhp_state_add_instance_cpuslocked
            mutex_lock
             schedule
    
    - path C. modprobe sleeps, waiting for all aync works to finish.
    
    load_module
     do_init_module
      async_synchronize_full
       async_synchronize_cookie_domain
        schedule
    
    [senozhatsky@chromium.org: add comment]
      Link: https://lkml.kernel.org/r/20220624060606.1014474-1-senozhatsky@chromium.org
    Link: https://lkml.kernel.org/r/20220622023501.517125-1-senozhatsky@chromium.org
    Signed-off-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Nitin Gupta <ngupta@vflare.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09c90f89b2e6be9b3cabe3ee256c8479ec68a54b
Author: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date:   Fri Jul 1 11:48:43 2022 +0800

    uacce: Handle parent device removal or parent driver module rmmod
    
    [ Upstream commit 80fc671bcc0173836e9032b0c698ea74c13b9d7c ]
    
    The uacce driver must deal with a possible removal of the parent device
    or parent driver module rmmod at any time.
    
    Although uacce_remove(), called on device removal and on driver unbind,
    prevents future use of the uacce fops by removing the cdev, fops that
    were called before that point may still be running.
    
    Serialize uacce_fops_open() and uacce_remove() with uacce->mutex.
    Serialize other fops against uacce_remove() with q->mutex.
    Since we need to protect uacce_fops_poll() which gets called on the fast
    path, replace uacce->queues_lock with q->mutex to improve scalability.
    The other fops are only used during setup.
    
    uacce_queue_is_valid(), checked under q->mutex or uacce->mutex, denotes
    whether uacce_remove() has disabled all queues. If that is the case,
    don't go any further since the parent device is being removed and
    uacce->ops should not be called anymore.
    
    Reported-by: Yang Shen <shenyang39@huawei.com>
    Signed-off-by: Zhangfei Gao <zhangfei.gao@linaro.org>
    Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
    Link: https://lore.kernel.org/r/20220701034843.7502-1-zhangfei.gao@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b90ab952401bd6c1a321dcfc0e0df080f2bc905
Author: Robert Marko <robimarko@gmail.com>
Date:   Sun May 15 23:00:47 2022 +0200

    clk: qcom: ipq8074: dont disable gcc_sleep_clk_src
    
    [ Upstream commit 1bf7305e79aab095196131bdc87a97796e0e3fac ]
    
    Once the usb sleep clocks are disabled, clock framework is trying to
    disable the sleep clock source also.
    
    However, it seems that it cannot be disabled and trying to do so produces:
    [  245.436390] ------------[ cut here ]------------
    [  245.441233] gcc_sleep_clk_src status stuck at 'on'
    [  245.441254] WARNING: CPU: 2 PID: 223 at clk_branch_wait+0x130/0x140
    [  245.450435] Modules linked in: xhci_plat_hcd xhci_hcd dwc3 dwc3_qcom leds_gpio
    [  245.456601] CPU: 2 PID: 223 Comm: sh Not tainted 5.18.0-rc4 #215
    [  245.463889] Hardware name: Xiaomi AX9000 (DT)
    [  245.470050] pstate: 204000c5 (nzCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [  245.474307] pc : clk_branch_wait+0x130/0x140
    [  245.481073] lr : clk_branch_wait+0x130/0x140
    [  245.485588] sp : ffffffc009f2bad0
    [  245.489838] x29: ffffffc009f2bad0 x28: ffffff8003e6c800 x27: 0000000000000000
    [  245.493057] x26: 0000000000000000 x25: 0000000000000000 x24: ffffff800226ef20
    [  245.500175] x23: ffffffc0089ff550 x22: 0000000000000000 x21: ffffffc008476ad0
    [  245.507294] x20: 0000000000000000 x19: ffffffc00965ac70 x18: fffffffffffc51a7
    [  245.514413] x17: 68702e3030303837 x16: 3a6d726f6674616c x15: ffffffc089f2b777
    [  245.521531] x14: ffffffc0095c9d18 x13: 0000000000000129 x12: 0000000000000129
    [  245.528649] x11: 00000000ffffffea x10: ffffffc009621d18 x9 : 0000000000000001
    [  245.535767] x8 : 0000000000000001 x7 : 0000000000017fe8 x6 : 0000000000000001
    [  245.542885] x5 : ffffff803fdca6d8 x4 : 0000000000000000 x3 : 0000000000000027
    [  245.550002] x2 : 0000000000000027 x1 : 0000000000000023 x0 : 0000000000000026
    [  245.557122] Call trace:
    [  245.564229]  clk_branch_wait+0x130/0x140
    [  245.566490]  clk_branch2_disable+0x2c/0x40
    [  245.570656]  clk_core_disable+0x60/0xb0
    [  245.574561]  clk_core_disable+0x68/0xb0
    [  245.578293]  clk_disable+0x30/0x50
    [  245.582113]  dwc3_qcom_remove+0x60/0xc0 [dwc3_qcom]
    [  245.585588]  platform_remove+0x28/0x60
    [  245.590361]  device_remove+0x4c/0x80
    [  245.594179]  device_release_driver_internal+0x1dc/0x230
    [  245.597914]  device_driver_detach+0x18/0x30
    [  245.602861]  unbind_store+0xec/0x110
    [  245.607027]  drv_attr_store+0x24/0x40
    [  245.610847]  sysfs_kf_write+0x44/0x60
    [  245.614405]  kernfs_fop_write_iter+0x128/0x1c0
    [  245.618052]  new_sync_write+0xc0/0x130
    [  245.622391]  vfs_write+0x1d4/0x2a0
    [  245.626123]  ksys_write+0x58/0xe0
    [  245.629508]  __arm64_sys_write+0x1c/0x30
    [  245.632895]  invoke_syscall.constprop.0+0x5c/0x110
    [  245.636890]  do_el0_svc+0xa0/0x150
    [  245.641488]  el0_svc+0x18/0x60
    [  245.644872]  el0t_64_sync_handler+0xa4/0x130
    [  245.647914]  el0t_64_sync+0x174/0x178
    [  245.652340] ---[ end trace 0000000000000000 ]---
    
    So, add CLK_IS_CRITICAL flag to the clock so that the kernel won't try
    to disable the sleep clock.
    
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220515210048.483898-10-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eddb352a807d16682ac73f6e5c2ab0a7fe1c139e
Author: Pascal Terjan <pterjan@google.com>
Date:   Sun Jun 12 14:37:44 2022 +0100

    vboxguest: Do not use devm for irq
    
    [ Upstream commit 6169525b76764acb81918aa387ac168fb9a55575 ]
    
    When relying on devm it doesn't get freed early enough which causes the
    following warning when unloading the module:
    
    [249348.837181] remove_proc_entry: removing non-empty directory 'irq/20', leaking at least 'vboxguest'
    [249348.837219] WARNING: CPU: 0 PID: 6708 at fs/proc/generic.c:715 remove_proc_entry+0x119/0x140
    
    [249348.837379] Call Trace:
    [249348.837385]  unregister_irq_proc+0xbd/0xe0
    [249348.837392]  free_desc+0x23/0x60
    [249348.837396]  irq_free_descs+0x4a/0x70
    [249348.837401]  irq_domain_free_irqs+0x160/0x1a0
    [249348.837452]  mp_unmap_irq+0x5c/0x60
    [249348.837458]  acpi_unregister_gsi_ioapic+0x29/0x40
    [249348.837463]  acpi_unregister_gsi+0x17/0x30
    [249348.837467]  acpi_pci_irq_disable+0xbf/0xe0
    [249348.837473]  pcibios_disable_device+0x20/0x30
    [249348.837478]  pci_disable_device+0xef/0x120
    [249348.837482]  vbg_pci_remove+0x6c/0x70 [vboxguest]
    
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Pascal Terjan <pterjan@google.com>
    Link: https://lore.kernel.org/r/20220612133744.4030602-1-pterjan@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a87f33f1dd0484306987cf742944425057e109b
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Wed Jun 22 18:07:17 2022 +0200

    usb: dwc2: gadget: remove D+ pull-up while no vbus with usb-role-switch
    
    [ Upstream commit db638c6500abaffb8f7770b2a69c40d003d54ae1 ]
    
    When using usb-role-switch, D+ pull-up is set as soon as DTCL_SFTDISCON is
    cleared, whatever the vbus valid signal state is. The pull-up should not
    be set when vbus isn't present (this is determined by the drd controller).
    
    This patch ensures that B-Session (so Peripheral role + vbus valid signal)
    is valid before clearing the DCTL_SFTDISCON bit when role switch is used.
    Keep original behavior when usb-role-switch isn't used.
    
    Acked-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/20220622160717.314580-1-fabrice.gasnier@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9790a5a4f07f38a5add85ec58c44797d3a7c3677
Author: Liang He <windhl@126.com>
Date:   Sat Jun 18 10:32:05 2022 +0800

    usb: renesas: Fix refcount leak bug
    
    [ Upstream commit 9d6d5303c39b8bc182475b22f45504106a07f086 ]
    
    In usbhs_rza1_hardware_init(), of_find_node_by_name() will return
    a node pointer with refcount incremented. We should use of_node_put()
    when it is not used anymore.
    
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220618023205.4056548-1-windhl@126.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb5dd65e889163e723df1c2f02288cc527a57785
Author: Liang He <windhl@126.com>
Date:   Fri Jun 17 11:46:37 2022 +0800

    usb: host: ohci-ppc-of: Fix refcount leak bug
    
    [ Upstream commit 40a959d7042bb7711e404ad2318b30e9f92c6b9b ]
    
    In ohci_hcd_ppc_of_probe(), of_find_compatible_node() will return
    a node pointer with refcount incremented. We should use of_node_put()
    when it is not used anymore.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220617034637.4003115-1-windhl@126.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d86c6447ee250822256470ad43add20470d1cd3d
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Jun 15 09:43:06 2022 +0300

    clk: ti: Stop using legacy clkctrl names for omap4 and 5
    
    [ Upstream commit 255584b138343d4a28c6d25bd82d04b09460d672 ]
    
    With the addition of clock-output-names, we can now unify the internal
    clock naming for omap4 and 5 to follow the other TI SoCs.
    
    We are still using legacy clkctrl names for omap4 and 5 based on the clock
    manager name which is wrong. Instead, we want to use the clkctrl clock
    based naming.
    
    We must now also drop the legacy TI_CLK_CLKCTRL_COMPAT quirk for the
    clkctrl clock.
    
    This change will allow further devicetree warning cleanup as already
    done for am3/4 and dra7.
    
    Cc: linux-clk@vger.kernel.org
    Cc: Stephen Boyd <sboyd@kernel.org>
    Cc: Tero Kristo <kristo@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20220615064306.22254-1-tony@atomide.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 152c94c10bc470ee5aded8be5a67663398ee6c94
Author: Sai Prakash Ranjan <quic_saipraka@quicinc.com>
Date:   Wed May 18 22:14:13 2022 +0530

    drm/meson: Fix overflow implicit truncation warnings
    
    [ Upstream commit 98692f52c588225034cbff458622c2c06dfcb544 ]
    
    Fix -Woverflow warnings for drm/meson driver which is a result
    of moving arm64 custom MMIO accessor macros to asm-generic function
    implementations giving a bonus type-checking now and uncovering these
    overflow warnings.
    
    drivers/gpu/drm/meson/meson_viu.c: In function ‘meson_viu_init’:
    drivers/gpu/drm/meson/meson_registers.h:1826:48: error: large integer implicitly truncated to unsigned type [-Werror=overflow]
     #define  VIU_OSD_BLEND_REORDER(dest, src)      ((src) << (dest * 4))
                                                    ^
    drivers/gpu/drm/meson/meson_viu.c:472:18: note: in expansion of macro ‘VIU_OSD_BLEND_REORDER’
       writel_relaxed(VIU_OSD_BLEND_REORDER(0, 1) |
                      ^~~~~~~~~~~~~~~~~~~~~
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da6b37983a397a6d45846291b91908ebe744ae3f
Author: Sai Prakash Ranjan <quic_saipraka@quicinc.com>
Date:   Wed May 18 22:14:12 2022 +0530

    irqchip/tegra: Fix overflow implicit truncation warnings
    
    [ Upstream commit 443685992bda9bb4f8b17fc02c9f6c60e62b1461 ]
    
    Fix -Woverflow warnings for tegra irqchip driver which is a result
    of moving arm64 custom MMIO accessor macros to asm-generic function
    implementations giving a bonus type-checking now and uncovering these
    overflow warnings.
    
    drivers/irqchip/irq-tegra.c: In function ‘tegra_ictlr_suspend’:
    drivers/irqchip/irq-tegra.c:151:18: warning: large integer implicitly truncated to unsigned type [-Woverflow]
       writel_relaxed(~0ul, ictlr + ICTLR_COP_IER_CLR);
                      ^
    
    Suggested-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Sai Prakash Ranjan <quic_saipraka@quicinc.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24304c6f9c1176b31ff8669f5fd5ae94d729fa48
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Mon May 30 00:38:48 2022 +0200

    usb: gadget: uvc: call uvc uvcg_warn on completed status instead of uvcg_info
    
    [ Upstream commit a725d0f6dfc5d3739d6499f30ec865305ba3544d ]
    
    Likewise to the uvcvideo hostside driver, this patch is changing the
    usb_request message of an non zero completion handler call from dev_info
    to dev_warn.
    
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Link: https://lore.kernel.org/r/20220529223848.105914-4-m.grzeschik@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d7ac60098b206d0472475b666cb09d556bec03d
Author: Frank Li <Frank.Li@nxp.com>
Date:   Wed Jun 8 14:04:30 2022 -0500

    usb: cdns3 fix use-after-free at workaround 2
    
    [ Upstream commit 7d602f30149a117eea260208b1661bc404c21dfd ]
    
    BUG: KFENCE: use-after-free read in __list_del_entry_valid+0x10/0xac
    
    cdns3_wa2_remove_old_request()
    {
            ...
            kfree(priv_req->request.buf);
            cdns3_gadget_ep_free_request(&priv_ep->endpoint, &priv_req->request);
            list_del_init(&priv_req->list);
            ^^^ use after free
            ...
    }
    
    cdns3_gadget_ep_free_request() free the space pointed by priv_req,
    but priv_req is used in the following list_del_init().
    
    This patch move list_del_init() before cdns3_gadget_ep_free_request().
    
    Signed-off-by: Frank Li <Frank.Li@nxp.com>
    Signed-off-by: Faqiang Zhu <faqiang.zhu@nxp.com>
    Link: https://lore.kernel.org/r/20220608190430.2814358-1-Frank.Li@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a0da5ef5b4e92324fdbd2d0c24d24a79d2f87f4
Author: Tzung-Bi Shih <tzungbi@kernel.org>
Date:   Thu Jun 9 08:49:49 2022 +0000

    platform/chrome: cros_ec_proto: don't show MKBP version if unsupported
    
    [ Upstream commit b36f0643ff14a2fb281b105418e4e73c9d7c11d0 ]
    
    It wrongly showed the following message when it doesn't support MKBP:
    "MKBP support version 4294967295".
    
    Fix it.
    
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Link: https://lore.kernel.org/r/20220609084957.3684698-14-tzungbi@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2ab7afe6665526e319593f3eb722e1751483825
Author: Pavan Chebbi <pavan.chebbi@broadcom.com>
Date:   Thu Jun 9 13:41:47 2022 -0400

    PCI: Add ACS quirk for Broadcom BCM5750x NICs
    
    [ Upstream commit afd306a65cedb9589564bdb23a0c368abc4215fd ]
    
    The Broadcom BCM5750x NICs may be multi-function devices.  They do not
    advertise ACS capability. Peer-to-peer transactions are not possible
    between the individual functions, so it is safe to treat them as fully
    isolated.
    
    Add an ACS quirk for these devices so the functions can be in independent
    IOMMU groups and attached individually to userspace applications using
    VFIO.
    
    Link: https://lore.kernel.org/r/1654796507-28610-1-git-send-email-michael.chan@broadcom.com
    Signed-off-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1e7908f78f5a7f53f8cd83c7dcdfec974c95f26
Author: Samuel Holland <samuel@sholland.org>
Date:   Thu Aug 11 22:16:23 2022 -0500

    drm/sun4i: dsi: Prevent underflow when computing packet sizes
    
    [ Upstream commit 82a1356a933d8443139f8886f11b63c974a09a67 ]
    
    Currently, the packet overhead is subtracted using unsigned arithmetic.
    With a short sync pulse, this could underflow and wrap around to near
    the maximal u16 value. Fix this by using signed subtraction. The call to
    max() will correctly handle any negative numbers that are produced.
    
    Apply the same fix to the other timings, even though those subtractions
    are less likely to underflow.
    
    Fixes: 133add5b5ad4 ("drm/sun4i: Add Allwinner A31 MIPI-DSI controller support")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220812031623.34057-1-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd6165b8023288a8a6fe0d65b7b446e69596fdbb
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Tue Mar 30 16:58:37 2021 +0200

    netfilter: add helper function to set up the nfnetlink header and use it
    
    [ Upstream commit 19c28b1374fb1073a9ec873a6c10bf5f16b10b9d ]
    
    This patch adds a helper function to set up the netlink and nfnetlink headers.
    Update existing codebase to use it.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06fde3cd0b536ad5f992af08af114deba362fe36
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed Mar 31 00:18:02 2021 +0200

    netfilter: nftables: add helper function to set the base sequence number
    
    [ Upstream commit 802b805162a1b7d8391c40ac8a878e9e63287aff ]
    
    This patch adds a helper function to calculate the base sequence number
    field that is stored in the nfnetlink header. Use the helper function
    whenever possible.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2a49009ba037e3710fd1d6a285d688415ddcbe1
Author: Richard Guy Briggs <rgb@redhat.com>
Date:   Fri Mar 26 13:38:59 2021 -0400

    audit: log nftables configuration change events once per table
    
    [ Upstream commit c520292f29b8047285bcfbc2322fa2a9bf02521a ]
    
    Reduce logging of nftables events to a level similar to iptables.
    Restore the table field to list the table, adding the generation.
    
    Indicate the op as the most significant operation in the event.
    
    A couple of sample events:
    
    type=PROCTITLE msg=audit(2021-03-18 09:30:49.801:143) : proctitle=/usr/bin/python3 -s /usr/sbin/firewalld --nofork --nopid
    type=SYSCALL msg=audit(2021-03-18 09:30:49.801:143) : arch=x86_64 syscall=sendmsg success=yes exit=172 a0=0x6 a1=0x7ffdcfcbe650 a2=0x0 a3=0x7ffdcfcbd52c items=0 ppid=1 pid=367 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=roo
    t sgid=root fsgid=root tty=(none) ses=unset comm=firewalld exe=/usr/bin/python3.9 subj=system_u:system_r:firewalld_t:s0 key=(null)
    type=NETFILTER_CFG msg=audit(2021-03-18 09:30:49.801:143) : table=firewalld:2 family=ipv6 entries=1 op=nft_register_table pid=367 subj=system_u:system_r:firewalld_t:s0 comm=firewalld
    type=NETFILTER_CFG msg=audit(2021-03-18 09:30:49.801:143) : table=firewalld:2 family=ipv4 entries=1 op=nft_register_table pid=367 subj=system_u:system_r:firewalld_t:s0 comm=firewalld
    type=NETFILTER_CFG msg=audit(2021-03-18 09:30:49.801:143) : table=firewalld:2 family=inet entries=1 op=nft_register_table pid=367 subj=system_u:system_r:firewalld_t:s0 comm=firewalld
    
    type=PROCTITLE msg=audit(2021-03-18 09:30:49.839:144) : proctitle=/usr/bin/python3 -s /usr/sbin/firewalld --nofork --nopid
    type=SYSCALL msg=audit(2021-03-18 09:30:49.839:144) : arch=x86_64 syscall=sendmsg success=yes exit=22792 a0=0x6 a1=0x7ffdcfcbe650 a2=0x0 a3=0x7ffdcfcbd52c items=0 ppid=1 pid=367 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=r
    oot sgid=root fsgid=root tty=(none) ses=unset comm=firewalld exe=/usr/bin/python3.9 subj=system_u:system_r:firewalld_t:s0 key=(null)
    type=NETFILTER_CFG msg=audit(2021-03-18 09:30:49.839:144) : table=firewalld:3 family=ipv6 entries=30 op=nft_register_chain pid=367 subj=system_u:system_r:firewalld_t:s0 comm=firewalld
    type=NETFILTER_CFG msg=audit(2021-03-18 09:30:49.839:144) : table=firewalld:3 family=ipv4 entries=30 op=nft_register_chain pid=367 subj=system_u:system_r:firewalld_t:s0 comm=firewalld
    type=NETFILTER_CFG msg=audit(2021-03-18 09:30:49.839:144) : table=firewalld:3 family=inet entries=165 op=nft_register_chain pid=367 subj=system_u:system_r:firewalld_t:s0 comm=firewalld
    
    The issue was originally documented in
    https://github.com/linux-audit/audit-kernel/issues/124
    
    Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3aa710e96747c8b4e52ba12ffe09edcb2755897c
Author: Liang He <windhl@126.com>
Date:   Tue Jul 26 09:07:22 2022 +0800

    drm/meson: Fix refcount bugs in meson_vpu_has_available_connectors()
    
    [ Upstream commit 91b3c8dbe898df158fd2a84675f3a284ff6666f7 ]
    
    In this function, there are two refcount leak bugs:
    (1) when breaking out of for_each_endpoint_of_node(), we need call
    the of_node_put() for the 'ep';
    (2) we should call of_node_put() for the reference returned by
    of_graph_get_remote_port() when it is not used anymore.
    
    Fixes: bbbe775ec5b5 ("drm: Add support for Amlogic Meson Graphic Controller")
    Signed-off-by: Liang He <windhl@126.com>
    Acked-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220726010722.1319416-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bfdb1912cb3e062a41bfd4975ce9907912a70c0
Author: Bard Liao <yung-chuan.liao@linux.intel.com>
Date:   Fri Jul 23 19:54:49 2021 +0800

    ASoC: SOF: intel: move sof_intel_dsp_desc() forward
    
    [ Upstream commit 2f1315ae94b46bf0d5b4be29be15cc3641364404 ]
    
    sof_intel_dsp_desc() will be used by hda_dsp_check_sdw_irq() in the
    following commit.
    
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/20210723115451.7245-5-yung-chuan.liao@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 823280a8fba3e5de2b2d8708546c807c3bce525d
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Aug 16 16:03:11 2022 +0900

    locking/atomic: Make test_and_*_bit() ordered on failure
    
    commit 415d832497098030241605c52ea83d4e2cfa7879 upstream.
    
    These operations are documented as always ordered in
    include/asm-generic/bitops/instrumented-atomic.h, and producer-consumer
    type use cases where one side needs to ensure a flag is left pending
    after some shared data was updated rely on this ordering, even in the
    failure case.
    
    This is the case with the workqueue code, which currently suffers from a
    reproducible ordering violation on Apple M1 platforms (which are
    notoriously out-of-order) that ends up causing the TTY layer to fail to
    deliver data to userspace properly under the right conditions.  This
    change fixes that bug.
    
    Change the documentation to restrict the "no order on failure" story to
    the _lock() variant (for which it makes sense), and remove the
    early-exit from the generic implementation, which is what causes the
    missing barrier semantics in that case.  Without this, the remaining
    atomic op is fully ordered (including on ARM64 LSE, as of recent
    versions of the architecture spec).
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Fixes: e986a0d6cb36 ("locking/atomics, asm-generic/bitops/atomic.h: Rewrite using atomic_*() APIs")
    Fixes: 61e02392d3c7 ("locking/atomic/bitops: Document and clarify ordering semantics for failed test_and_{}_bit()")
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Acked-by: Will Deacon <will@kernel.org>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bd35968bcd028658f86418e8a5e64c89bd18d45
Author: Andrew Donnellan <ajd@linux.ibm.com>
Date:   Tue Aug 16 15:17:20 2022 +1000

    gcc-plugins: Undefine LATENT_ENTROPY_PLUGIN when plugin disabled for a file
    
    commit 012e8d2034f1bda8863435cd589636e618d6a659 upstream.
    
    Commit 36d4b36b6959 ("lib/nodemask: inline next_node_in() and
    node_random()") refactored some code by moving node_random() from
    lib/nodemask.c to include/linux/nodemask.h, thus requiring nodemask.h to
    include random.h, which conditionally defines add_latent_entropy()
    depending on whether the macro LATENT_ENTROPY_PLUGIN is defined.
    
    This broke the build on powerpc, where nodemask.h is indirectly included
    in arch/powerpc/kernel/prom_init.c, part of the early boot machinery that
    is excluded from the latent entropy plugin using
    DISABLE_LATENT_ENTROPY_PLUGIN. It turns out that while we add a gcc flag
    to disable the actual plugin, we don't undefine LATENT_ENTROPY_PLUGIN.
    
    This leads to the following:
    
        CC      arch/powerpc/kernel/prom_init.o
      In file included from ./include/linux/nodemask.h:97,
                       from ./include/linux/mmzone.h:17,
                       from ./include/linux/gfp.h:7,
                       from ./include/linux/xarray.h:15,
                       from ./include/linux/radix-tree.h:21,
                       from ./include/linux/idr.h:15,
                       from ./include/linux/kernfs.h:12,
                       from ./include/linux/sysfs.h:16,
                       from ./include/linux/kobject.h:20,
                       from ./include/linux/pci.h:35,
                       from arch/powerpc/kernel/prom_init.c:24:
      ./include/linux/random.h: In function 'add_latent_entropy':
      ./include/linux/random.h:25:46: error: 'latent_entropy' undeclared (first use in this function); did you mean 'add_latent_entropy'?
         25 |         add_device_randomness((const void *)&latent_entropy, sizeof(latent_entropy));
            |                                              ^~~~~~~~~~~~~~
            |                                              add_latent_entropy
      ./include/linux/random.h:25:46: note: each undeclared identifier is reported only once for each function it appears in
      make[2]: *** [scripts/Makefile.build:249: arch/powerpc/kernel/prom_init.o] Fehler 1
      make[1]: *** [scripts/Makefile.build:465: arch/powerpc/kernel] Fehler 2
      make: *** [Makefile:1855: arch/powerpc] Error 2
    
    Change the DISABLE_LATENT_ENTROPY_PLUGIN flags to undefine
    LATENT_ENTROPY_PLUGIN for files where the plugin is disabled.
    
    Cc: Yury Norov <yury.norov@gmail.com>
    Fixes: 38addce8b600 ("gcc-plugins: Add latent_entropy plugin")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216367
    Link: https://lore.kernel.org/linuxppc-dev/alpine.DEB.2.22.394.2208152006320.289321@ramsan.of.borg/
    Reported-by: Erhard Furtner <erhard_f@mailbox.org>
    Signed-off-by: Andrew Donnellan <ajd@linux.ibm.com>
    Reviewed-by: Yury Norov <yury.norov@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220816051720.44108-1-ajd@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9112826f28ee3a1cd3e7c9b16f9cce0340d6b69f
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Aug 14 08:09:28 2022 +0900

    kbuild: fix the modules order between drivers and libs
    
    commit 113147510b48e764e624e3d0e6707a1e48bc05a9 upstream.
    
    Commit b2c885549122 ("kbuild: update modules.order only when contained
    modules are updated") accidentally changed the modules order.
    
    Prior to that commit, the modules order was determined based on
    vmlinux-dirs, which lists core-y/m, drivers-y/m, libs-y/m, in this order.
    
    Now, subdir-modorder lists them in a different order: core-y/m, libs-y/m,
    drivers-y/m.
    
    Presumably, there was no practical issue because the modules in drivers
    and libs are orthogonal, but there is no reason to have this distortion.
    
    Get back to the original order.
    
    Fixes: b2c885549122 ("kbuild: update modules.order only when contained modules are updated")
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f516dcd1456b18b56a7de0c1f67b8a4aa54c2ef
Author: Lin Ma <linma@zju.edu.cn>
Date:   Wed Aug 17 11:49:21 2022 -0700

    igb: Add lock to avoid data race
    
    commit 6faee3d4ee8be0f0367d0c3d826afb3571b7a5e0 upstream.
    
    The commit c23d92b80e0b ("igb: Teardown SR-IOV before
    unregister_netdev()") places the unregister_netdev() call after the
    igb_disable_sriov() call to avoid functionality issue.
    
    However, it introduces several race conditions when detaching a device.
    For example, when .remove() is called, the below interleaving leads to
    use-after-free.
    
     (FREE from device detaching)      |   (USE from netdev core)
    igb_remove                         |  igb_ndo_get_vf_config
     igb_disable_sriov                 |  vf >= adapter->vfs_allocated_count?
      kfree(adapter->vf_data)          |
      adapter->vfs_allocated_count = 0 |
                                       |    memcpy(... adapter->vf_data[vf]
    
    Moreover, the igb_disable_sriov() also suffers from data race with the
    requests from VF driver.
    
     (FREE from device detaching)      |   (USE from requests)
    igb_remove                         |  igb_msix_other
     igb_disable_sriov                 |   igb_msg_task
      kfree(adapter->vf_data)          |    vf < adapter->vfs_allocated_count
      adapter->vfs_allocated_count = 0 |
    
    To this end, this commit first eliminates the data races from netdev
    core by using rtnl_lock (similar to commit 719479230893 ("dpaa2-eth: add
    MAC/PHY support through phylink")). And then adds a spinlock to
    eliminate races from driver requests. (similar to commit 1e53834ce541
    ("ixgbe: Add locking to prevent panic when setting sriov_numvfs to zero")
    
    Fixes: c23d92b80e0b ("igb: Teardown SR-IOV before unregister_netdev()")
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Link: https://lore.kernel.org/r/20220817184921.735244-1-anthony.l.nguyen@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02f3642d8e657c05f382729c165bed46745dc18c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Aug 16 16:23:57 2022 +0200

    stmmac: intel: Add a missing clk_disable_unprepare() call in intel_eth_pci_remove()
    
    commit 5c23d6b717e4e956376f3852b90f58e262946b50 upstream.
    
    Commit 09f012e64e4b ("stmmac: intel: Fix clock handling on error and remove
    paths") removed this clk_disable_unprepare()
    
    This was partly revert by commit ac322f86b56c ("net: stmmac: Fix clock
    handling on remove path") which removed this clk_disable_unprepare()
    because:
    "
       While unloading the dwmac-intel driver, clk_disable_unprepare() is
       being called twice in stmmac_dvr_remove() and
       intel_eth_pci_remove(). This causes kernel panic on the second call.
    "
    
    However later on, commit 5ec55823438e8 ("net: stmmac: add clocks management
    for gmac driver") has updated stmmac_dvr_remove() which do not call
    clk_disable_unprepare() anymore.
    
    So this call should now be called from intel_eth_pci_remove().
    
    Fixes: 5ec55823438e8 ("net: stmmac: add clocks management for gmac driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/d7c8c1dadf40df3a7c9e643f76ffadd0ccc1ad1b.1660659689.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efae1735ff153fe3786dc589f25e76c03ff862d3
Author: Csókás Bence <csokas.bence@prolan.hu>
Date:   Thu Aug 11 12:13:49 2022 +0200

    fec: Fix timer capture timing in `fec_ptp_enable_pps()`
    
    commit 61d5e2a251fb20c2c5e998c3f1d52ed6d5360319 upstream.
    
    Code reimplements functionality already in `fec_ptp_read()`,
    but misses check for FEC_QUIRK_BUG_CAPTURE. Replace with function call.
    
    Fixes: 28b5f058cf1d ("net: fec: ptp: fix convergence issue to support LinuxPTP stack")
    Signed-off-by: Csókás Bence <csokas.bence@prolan.hu>
    Link: https://lore.kernel.org/r/20220811101348.13755-1-csokas.bence@prolan.hu
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 668f38fb9a8ce4218f635d758e64d675359f00f6
Author: Alan Brady <alan.brady@intel.com>
Date:   Tue Aug 2 10:19:17 2022 +0200

    i40e: Fix to stop tx_timeout recovery if GLOBR fails
    
    commit 57c942bc3bef0970f0b21f8e0998e76a900ea80d upstream.
    
    When a tx_timeout fires, the PF attempts to recover by incrementally
    resetting.  First we try a PFR, then CORER and finally a GLOBR.  If the
    GLOBR fails, then we keep hitting the tx_timeout and incrementing the
    recovery level and issuing dmesgs, which is both annoying to the user
    and accomplishes nothing.
    
    If the GLOBR fails, then we're pretty much totally hosed, and there's
    not much else we can do to recover, so this makes it such that we just
    kill the VSI and stop hitting the tx_timeout in such a case.
    
    Fixes: 41c445ff0f48 ("i40e: main driver core")
    Signed-off-by: Alan Brady <alan.brady@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Tested-by: Gurucharan <gurucharanx.g@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbd6723d7584a78f6f44dd194afd5f31bd5e56b7
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Tue Aug 2 08:43:34 2022 +0200

    regulator: pca9450: Remove restrictions for regulator-name
    
    commit b0de7fa706506bf0591037908376351beda8c5d6 upstream.
    
    The device bindings shouldn't put any constraints on the regulator-name
    property specified in the generic bindings. This allows using arbitrary
    and descriptive names for the regulators.
    
    Suggested-by: Mark Brown <broonie@kernel.org>
    Fixes: 7ae9e3a6bf3f ("dt-bindings: regulator: add pca9450 regulator yaml")
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Link: https://lore.kernel.org/r/20220802064335.8481-1-frieder@fris.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5ba5c36694d25e8267b767228a08df4e81760bd
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 20 17:09:33 2022 +0200

    i2c: imx: Make sure to unregister adapter on remove()
    
    commit d98bdd3a5b50446d8e010be5b04ce81c4eabf728 upstream.
    
    If for whatever reasons pm_runtime_resume_and_get() fails and .remove() is
    exited early, the i2c adapter stays around and the irq still calls its
    handler, while the driver data and the register mapping go away. So if
    later the i2c adapter is accessed or the irq triggers this results in
    havoc accessing freed memory and unmapped registers.
    
    So unregister the software resources even if resume failed, and only skip
    the hardware access in that case.
    
    Fixes: 588eb93ea49f ("i2c: imx: add runtime pm support to improve the performance")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19cb691faf47bcd2ce16fececaf509ecb15a42c3
Author: Grzegorz Siwik <grzegorz.siwik@intel.com>
Date:   Fri Aug 12 15:25:48 2022 +0200

    ice: Ignore EEXIST when setting promisc mode
    
    commit 11e551a2efa4481bd4f616ab75374a2710b480e9 upstream.
    
    Ignore EEXIST error when setting promiscuous mode.
    This fix is needed because the driver could set promiscuous mode
    when it still has not cleared properly.
    Promiscuous mode could be set only once, so setting it second
    time will be rejected.
    
    Fixes: 5eda8afd6bcc ("ice: Add support for PF/VF promiscuous mode")
    Signed-off-by: Grzegorz Siwik <grzegorz.siwik@intel.com>
    Link: https://lore.kernel.org/all/CAK8fFZ7m-KR57M_rYX6xZN39K89O=LGooYkKsu6HKt0Bs+x6xQ@mail.gmail.com/
    Tested-by: Jaroslav Pulchart <jaroslav.pulchart@gooddata.com>
    Tested-by: Igor Raits <igor@gooddata.com>
    Tested-by: Gurucharan <gurucharanx.g@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7983e1e44cb322eba6af84160b6d18df80603fb8
Author: Rustam Subkhankulov <subkhankulov@ispras.ru>
Date:   Wed Aug 17 03:38:45 2022 +0300

    net: dsa: sja1105: fix buffer overflow in sja1105_setup_devlink_regions()
    
    commit fd8e899cdb5ecaf8e8ee73854a99e10807eef1de upstream.
    
    If an error occurs in dsa_devlink_region_create(), then 'priv->regions'
    array will be accessed by negative index '-1'.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Signed-off-by: Rustam Subkhankulov <subkhankulov@ispras.ru>
    Fixes: bf425b82059e ("net: dsa: sja1105: expose static config as devlink region")
    Link: https://lore.kernel.org/r/20220817003845.389644-1-subkhankulov@ispras.ru
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83411c9f05d5a8b637293b3389eca3d378197c04
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Tue Aug 16 09:19:39 2022 -0700

    net: genl: fix error path memory leak in policy dumping
    
    commit 249801360db3dec4f73768c502192020bfddeacc upstream.
    
    If construction of the array of policies fails when recording
    non-first policy we need to unwind.
    
    netlink_policy_dump_add_policy() itself also needs fixing as
    it currently gives up on error without recording the allocated
    pointer in the pstate pointer.
    
    Reported-by: syzbot+dc54d9ba8153b216cae0@syzkaller.appspotmail.com
    Fixes: 50a896cf2d6f ("genetlink: properly support per-op policy dumping")
    Link: https://lore.kernel.org/r/20220816161939.577583-1-kuba@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af1748ee51b31e0d0d9e566fd2fec588eda78a0d
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Aug 16 16:53:45 2022 +0300

    net: dsa: felix: fix ethtool 256-511 and 512-1023 TX packet counters
    
    commit 40d21c4565bce064c73a03b79a157a3493c518b9 upstream.
    
    What the driver actually reports as 256-511 is in fact 512-1023, and the
    TX packets in the 256-511 bucket are not reported. Fix that.
    
    Fixes: 56051948773e ("net: dsa: ocelot: add driver for Felix switch family")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9900af65f2d1f571c022061f42a8c3ded8eb16a0
Author: Arun Ramadoss <arun.ramadoss@microchip.com>
Date:   Tue Aug 16 16:25:16 2022 +0530

    net: dsa: microchip: ksz9477: fix fdb_dump last invalid entry
    
    commit 36c0d935015766bf20d621c18313f17691bda5e3 upstream.
    
    In the ksz9477_fdb_dump function it reads the ALU control register and
    exit from the timeout loop if there is valid entry or search is
    complete. After exiting the loop, it reads the alu entry and report to
    the user space irrespective of entry is valid. It works till the valid
    entry. If the loop exited when search is complete, it reads the alu
    table. The table returns all ones and it is reported to user space. So
    bridge fdb show gives ff:ff:ff:ff:ff:ff as last entry for every port.
    To fix it, after exiting the loop the entry is reported only if it is
    valid one.
    
    Fixes: b987e98e50ab ("dsa: add DSA switch driver for Microchip KSZ9477")
    Signed-off-by: Arun Ramadoss <arun.ramadoss@microchip.com>
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Link: https://lore.kernel.org/r/20220816105516.18350-1-arun.ramadoss@microchip.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d51385ae019e069f10fcc636c1716518ae2f3b4
Author: Sergei Antonov <saproj@gmail.com>
Date:   Fri Aug 12 20:13:39 2022 +0300

    net: moxa: pass pdev instead of ndev to DMA functions
    
    commit 3a12df22a8f68954a4ba48435c06b3d1791c87c4 upstream.
    
    dma_map_single() calls fail in moxart_mac_setup_desc_ring() and
    moxart_mac_start_xmit() which leads to an incessant output of this:
    
    [   16.043925] moxart-ethernet 92000000.mac eth0: DMA mapping error
    [   16.050957] moxart-ethernet 92000000.mac eth0: DMA mapping error
    [   16.058229] moxart-ethernet 92000000.mac eth0: DMA mapping error
    
    Passing pdev to DMA is a common approach among net drivers.
    
    Fixes: 6c821bd9edc9 ("net: Add MOXA ART SoCs ethernet driver")
    Signed-off-by: Sergei Antonov <saproj@gmail.com>
    Suggested-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20220812171339.2271788-1-saproj@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92dc64e8f591425ce4dabf7d479ebf6e67fb8853
Author: Sergei Antonov <saproj@gmail.com>
Date:   Thu Aug 11 10:09:39 2022 +0300

    net: dsa: mv88e6060: prevent crash on an unused port
    
    commit 246bbf2f977ea36aaf41f5d24370fef433250728 upstream.
    
    If the port isn't a CPU port nor a user port, 'cpu_dp'
    is a null pointer and a crash happened on dereferencing
    it in mv88e6060_setup_port():
    
    [    9.575872] Unable to handle kernel NULL pointer dereference at virtual address 00000014
    ...
    [    9.942216]  mv88e6060_setup from dsa_register_switch+0x814/0xe84
    [    9.948616]  dsa_register_switch from mdio_probe+0x2c/0x54
    [    9.954433]  mdio_probe from really_probe.part.0+0x98/0x2a0
    [    9.960375]  really_probe.part.0 from driver_probe_device+0x30/0x10c
    [    9.967029]  driver_probe_device from __device_attach_driver+0xb8/0x13c
    [    9.973946]  __device_attach_driver from bus_for_each_drv+0x90/0xe0
    [    9.980509]  bus_for_each_drv from __device_attach+0x110/0x184
    [    9.986632]  __device_attach from bus_probe_device+0x8c/0x94
    [    9.992577]  bus_probe_device from deferred_probe_work_func+0x78/0xa8
    [    9.999311]  deferred_probe_work_func from process_one_work+0x290/0x73c
    [   10.006292]  process_one_work from worker_thread+0x30/0x4b8
    [   10.012155]  worker_thread from kthread+0xd4/0x10c
    [   10.017238]  kthread from ret_from_fork+0x14/0x3c
    
    Fixes: 0abfd494deef ("net: dsa: use dedicated CPU port")
    CC: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
    CC: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sergei Antonov <saproj@gmail.com>
    Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
    Link: https://lore.kernel.org/r/20220811070939.1717146-1-saproj@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa16c8c4e830b9173e6a296ef88e44dc84f5a1de
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Thu Aug 11 15:44:45 2022 +0200

    spi: meson-spicc: add local pow2 clock ops to preserve rate between messages
    
    commit 09992025dacd258c823f50e82db09d7ef06cdac4 upstream.
    
    At the end of a message, the HW gets a reset in meson_spicc_unprepare_transfer(),
    this resets the SPICC_CONREG register and notably the value set by the
    Common Clock Framework.
    
    This is problematic because:
    - the register value CCF can be different from the corresponding CCF cached rate
    - CCF is allowed to change the clock rate whenever the HW state
    
    This introduces:
    - local pow2 clock ops checking the HW state before allowing a clock operation
    - separation of legacy pow2 clock patch and new enhanced clock path
    - SPICC_CONREG datarate value is now value kepts across messages
    
    It has been checked that:
    - SPICC_CONREG datarate value is kept across messages
    - CCF is only allowed to change the SPICC_CONREG datarate value when busy
    - SPICC_CONREG datarate value is correct for each transfer
    
    This didn't appear before commit 3e0cf4d3fc29 ("spi: meson-spicc: add a linear clock divider support")
    because we recalculated and wrote the rate for each xfer.
    
    Fixes: 3e0cf4d3fc29 ("spi: meson-spicc: add a linear clock divider support")
    Reported-by: Da Xue <da@libre.computer>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20220811134445.678446-1-narmstrong@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a868f771ee41c97a25a04b8c632a7f06689b307b
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Aug 15 16:55:23 2022 +1000

    powerpc/pci: Fix get_phb_number() locking
    
    commit 8d48562a2729742f767b0fdd994d6b2a56a49c63 upstream.
    
    The recent change to get_phb_number() causes a DEBUG_ATOMIC_SLEEP
    warning on some systems:
    
      BUG: sleeping function called from invalid context at kernel/locking/mutex.c:580
      in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: swapper
      preempt_count: 1, expected: 0
      RCU nest depth: 0, expected: 0
      1 lock held by swapper/1:
       #0: c157efb0 (hose_spinlock){+.+.}-{2:2}, at: pcibios_alloc_controller+0x64/0x220
      Preemption disabled at:
      [<00000000>] 0x0
      CPU: 0 PID: 1 Comm: swapper Not tainted 5.19.0-yocto-standard+ #1
      Call Trace:
      [d101dc90] [c073b264] dump_stack_lvl+0x50/0x8c (unreliable)
      [d101dcb0] [c0093b70] __might_resched+0x258/0x2a8
      [d101dcd0] [c0d3e634] __mutex_lock+0x6c/0x6ec
      [d101dd50] [c0a84174] of_alias_get_id+0x50/0xf4
      [d101dd80] [c002ec78] pcibios_alloc_controller+0x1b8/0x220
      [d101ddd0] [c140c9dc] pmac_pci_init+0x198/0x784
      [d101de50] [c140852c] discover_phbs+0x30/0x4c
      [d101de60] [c0007fd4] do_one_initcall+0x94/0x344
      [d101ded0] [c1403b40] kernel_init_freeable+0x1a8/0x22c
      [d101df10] [c00086e0] kernel_init+0x34/0x160
      [d101df30] [c001b334] ret_from_kernel_thread+0x5c/0x64
    
    This is because pcibios_alloc_controller() holds hose_spinlock but
    of_alias_get_id() takes of_mutex which can sleep.
    
    The hose_spinlock protects the phb_bitmap, and also the hose_list, but
    it doesn't need to be held while get_phb_number() calls the OF routines,
    because those are only looking up information in the device tree.
    
    So fix it by having get_phb_number() take the hose_spinlock itself, only
    where required, and then dropping the lock before returning.
    pcibios_alloc_controller() then needs to take the lock again before the
    list_add() but that's safe, the order of the list is not important.
    
    Fixes: 0fe1e96fef0a ("powerpc/pci: Prefer PCI domain assignment via DT 'linux,pci-domain' and alias")
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220815065550.1303620-1-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3561f4d12fb92a5749a2f0f87706e3bc1fc55e68
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Aug 15 17:55:07 2022 +0200

    netfilter: nf_tables: check NFT_SET_CONCAT flag if field_count is specified
    
    commit 1b6345d4160ecd3d04bd8cd75df90c67811e8cc9 upstream.
    
    Since f3a2181e16f1 ("netfilter: nf_tables: Support for sets with
    multiple ranged fields"), it possible to combine intervals and
    concatenations. Later on, ef516e8625dd ("netfilter: nf_tables:
    reintroduce the NFT_SET_CONCAT flag") provides the NFT_SET_CONCAT flag
    for userspace to report that the set stores a concatenation.
    
    Make sure NFT_SET_CONCAT is set on if field_count is specified for
    consistency. Otherwise, if NFT_SET_CONCAT is specified with no
    field_count, bail out with EINVAL.
    
    Fixes: ef516e8625dd ("netfilter: nf_tables: reintroduce the NFT_SET_CONCAT flag")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01b0cae6b74f28259a8ee444a9a9106531054a93
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Aug 12 16:19:23 2022 +0200

    netfilter: nf_tables: validate NFTA_SET_ELEM_OBJREF based on NFT_SET_OBJECT flag
    
    commit 5a2f3dc31811e93be15522d9eb13ed61460b76c8 upstream.
    
    If the NFTA_SET_ELEM_OBJREF netlink attribute is present and
    NFT_SET_OBJECT flag is set on, report EINVAL.
    
    Move existing sanity check earlier to validate that NFT_SET_OBJECT
    requires NFTA_SET_ELEM_OBJREF.
    
    Fixes: 8aeff920dcc9 ("netfilter: nf_tables: add stateful object reference to set elements")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d2fe4b9ed4e27340a58743de207f54d424c52f0
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Tue Aug 9 17:23:53 2022 +0200

    netfilter: nf_tables: really skip inactive sets when allocating name
    
    commit 271c5ca826e0c3c53e0eb4032f8eaedea1ee391c upstream.
    
    While looping to build the bitmap of used anonymous set names, check the
    current set in the iteration, instead of the one that is being created.
    
    Fixes: 37a9cc525525 ("netfilter: nf_tables: add generation mask to sets")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 330f0a552bcfe9eb725c83871d33b25221fe32bc
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Mon Aug 8 16:12:46 2022 +0200

    ASoC: tas2770: Fix handling of mute/unmute
    
    commit 1e5907bcb3a3b569be0a03ebe668bba2ed320a50 upstream.
    
    Because the PWR_CTRL field is modeled as the power state of the DAC
    widget, and at the same time it is used to implement mute/unmute, we
    need some additional book-keeping to have the right end result no matter
    the sequence of calls. Without this fix, one can mute an ongoing stream
    by toggling a speaker pin control.
    
    Fixes: 1a476abc723e ("tas2770: add tas2770 smart PA kernel driver")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220808141246.5749-5-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 353cc4cb97d9b7b17ce0984d9dffec06c122d65a
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Mon Aug 8 16:12:45 2022 +0200

    ASoC: tas2770: Drop conflicting set_bias_level power setting
    
    commit 482c23fbc7e9bf5a7a74defd0735d5346215db58 upstream.
    
    The driver is setting the PWR_CTRL field in both the set_bias_level
    callback and on DAPM events of the DAC widget (and also in the
    mute_stream method). Drop the set_bias_level callback altogether as the
    power setting it does is in conflict with the other code paths.
    
    Fixes: 1a476abc723e ("tas2770: add tas2770 smart PA kernel driver")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220808141246.5749-4-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dffe1c4780e09b6fa6c1e8e28f2b231ad2cab7ce
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Mon Aug 8 16:12:44 2022 +0200

    ASoC: tas2770: Allow mono streams
    
    commit bf54d97a835dfe62d4d29e245e170c63d0089be7 upstream.
    
    The part is a mono speaker amp, but it can do downmix and switch between
    left and right channel, so the right channel range is 1 to 2.
    
    Fixes: 1a476abc723e ("tas2770: add tas2770 smart PA kernel driver")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220808141246.5749-3-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc57e3fde219e50687392d95101cb63bbb1afacc
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Mon Aug 8 16:12:43 2022 +0200

    ASoC: tas2770: Set correct FSYNC polarity
    
    commit e9ac31f0a5d0e246b046c20348954519f91a297f upstream.
    
    Fix setting of FSYNC polarity for DAI formats other than I2S. Also
    add support for polarity inversion.
    
    Fixes: 1a476abc723e ("tas2770: add tas2770 smart PA kernel driver")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220808141246.5749-2-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fe80492d53971d9a49f39f3c86d2d67c6f3638a
Author: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>
Date:   Tue Jul 19 11:16:52 2022 +0200

    iavf: Fix adminq error handling
    
    commit 419831617ed349992c84344dbd9e627f9e68f842 upstream.
    
    iavf_alloc_asq_bufs/iavf_alloc_arq_bufs allocates with dma_alloc_coherent
    memory for VF mailbox.
    Free DMA regions for both ASQ and ARQ in case error happens during
    configuration of ASQ/ARQ registers.
    Without this change it is possible to see when unloading interface:
    74626.583369: dma_debug_device_change: device driver has pending DMA allocations while released from device [count=32]
    One of leaked entries details: [device address=0x0000000b27ff9000] [size=4096 bytes] [mapped with DMA_BIDIRECTIONAL] [mapped as coherent]
    
    Fixes: d358aa9a7a2d ("i40evf: init code and hardware support")
    Signed-off-by: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>
    Signed-off-by: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
    Tested-by: Marek Szlosek <marek.szlosek@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63684e467b1949b38376265f21b1f34df068f430
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Aug 8 16:09:45 2022 +0100

    nios2: add force_successful_syscall_return()
    
    commit fd0c153daad135d0ec1a53c5dbe6936a724d6ae1 upstream.
    
    If we use the ancient SysV syscall ABI, we'd better have tell the
    kernel how to claim that a negative return value is a success.
    Use ->orig_r2 for that - it's inaccessible via ptrace, so it's
    a fair game for changes and it's normally[*] non-negative on return
    from syscall.  Set to -1; syscall is not going to be restart-worthy
    by definition, so we won't interfere with that use either.
    
    [*] the only exception is rt_sigreturn(), where we skip the entire
    messing with r1/r2 anyway.
    
    Fixes: 82ed08dd1b0e ("nios2: Exception handling")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 600ff4b13b0ecb94e7ba21531c7386074cca56ea
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Aug 8 16:09:16 2022 +0100

    nios2: restarts apply only to the first sigframe we build...
    
    commit 411a76b7219555c55867466c82d70ce928d6c9e1 upstream.
    
    Fixes: b53e906d255d ("nios2: Signal handling support")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f20bc59ccf9e4502375b4eb90268c968341a86e4
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Aug 8 16:08:48 2022 +0100

    nios2: fix syscall restart checks
    
    commit 2d631bd58fe0ea3e3350212e23c9aba1fb606514 upstream.
    
    sys_foo() returns -512 (aka -ERESTARTSYS) => do_signal() sees
    512 in r2 and 1 in r1.
    
    sys_foo() returns 512 => do_signal() sees 512 in r2 and 0 in r1.
    
    The former is restart-worthy; the latter obviously isn't.
    
    Fixes: b53e906d255d ("nios2: Signal handling support")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d0118a027e3c9ab39e31b1fafdb7103922ef3c3
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Aug 8 16:07:21 2022 +0100

    nios2: traced syscall does need to check the syscall number
    
    commit 25ba820ef36bdbaf9884adeac69b6e1821a7df76 upstream.
    
    all checks done before letting the tracer modify the register
    state are worthless...
    
    Fixes: 82ed08dd1b0e ("nios2: Exception handling")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d2c89dc4837cdd9d0e672ec6d3357cd1362b1b7
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Aug 8 16:06:46 2022 +0100

    nios2: don't leave NULLs in sys_call_table[]
    
    commit 45ec746c65097c25e77d24eae8fee0def5b6cc5d upstream.
    
    fill the gaps in there with sys_ni_syscall, as everyone does...
    
    Fixes: 82ed08dd1b0e ("nios2: Exception handling")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d29cdf865ae133810e55d15867d9ebf45fc75f37
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Aug 8 16:06:04 2022 +0100

    nios2: page fault et.al. are *not* restartable syscalls...
    
    commit 8535c239ac674f7ead0f2652932d35c52c4123b2 upstream.
    
    make sure that ->orig_r2 is negative for everything except
    the syscalls.
    
    Fixes: 82ed08dd1b0e ("nios2: Exception handling")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76be9818820320b4efdc39287f4c8263527b3bd3
Author: Chen Lin <chen45464546@163.com>
Date:   Thu Aug 11 23:16:51 2022 +0800

    dpaa2-eth: trace the allocated address instead of page struct
    
    commit e34f49348f8b7a53205b6f77707a3a6a40cf420b upstream.
    
    We should trace the allocated address instead of page struct.
    
    Fixes: 27c874867c4e ("dpaa2-eth: Use a single page per Rx buffer")
    Signed-off-by: Chen Lin <chen.lin5@zte.com.cn>
    Reviewed-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Link: https://lore.kernel.org/r/20220811151651.3327-1-chen45464546@163.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 787511c768b527a1590a98306892e01d6c6fce26
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Aug 6 16:51:26 2022 +0200

    perf probe: Fix an error handling path in 'parse_perf_probe_command()'
    
    commit 4bf6dcaa93bcd083a13c278a91418fe10e6d23a0 upstream.
    
    If a memory allocation fail, we should branch to the error handling path
    in order to free some resources allocated a few lines above.
    
    Fixes: 15354d54698648e2 ("perf probe: Generate event name with line number")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: kernel-janitors@vger.kernel.org
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: https://lore.kernel.org/r/b71bcb01fa0c7b9778647235c3ab490f699ba278.1659797452.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c746ec91de76e095e4f18367dbb5103a6ed09e1
Author: Matthias May <matthias.may@westermo.com>
Date:   Fri Aug 5 21:00:06 2022 +0200

    geneve: fix TOS inheriting for ipv4
    
    commit b4ab94d6adaa5cf842b68bd28f4b50bc774496bd upstream.
    
    The current code retrieves the TOS field after the lookup
    on the ipv4 routing table. The routing process currently
    only allows routing based on the original 3 TOS bits, and
    not on the full 6 DSCP bits.
    As a result the retrieved TOS is cut to the 3 bits.
    However for inheriting purposes the full 6 bits should be used.
    
    Extract the full 6 bits before the route lookup and use
    that instead of the cut off 3 TOS bits.
    
    Fixes: e305ac6cf5a1 ("geneve: Add support to collect tunnel metadata.")
    Signed-off-by: Matthias May <matthias.may@westermo.com>
    Acked-by: Guillaume Nault <gnault@redhat.com>
    Link: https://lore.kernel.org/r/20220805190006.8078-1-matthias.may@westermo.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0ae122e9aeccbff75014c4d36d11a9d32e7fb5e
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Fri Aug 5 15:00:08 2022 +0800

    atm: idt77252: fix use-after-free bugs caused by tst_timer
    
    commit 3f4093e2bf4673f218c0bf17d8362337c400e77b upstream.
    
    There are use-after-free bugs caused by tst_timer. The root cause
    is that there are no functions to stop tst_timer in idt77252_exit().
    One of the possible race conditions is shown below:
    
        (thread 1)          |        (thread 2)
                            |  idt77252_init_one
                            |    init_card
                            |      fill_tst
                            |        mod_timer(&card->tst_timer, ...)
    idt77252_exit           |  (wait a time)
                            |  tst_timer
                            |
                            |    ...
      kfree(card) // FREE   |
                            |    card->soft_tst[e] // USE
    
    The idt77252_dev is deallocated in idt77252_exit() and used in
    timer handler.
    
    This patch adds del_timer_sync() in idt77252_exit() in order that
    the timer handler could be stopped before the idt77252_dev is
    deallocated.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Link: https://lore.kernel.org/r/20220805070008.18007-1-duoming@zju.edu.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 291cba960bb89a7fa6f138b0dd7da9ef7e1a9034
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 4 10:11:33 2022 +0300

    xen/xenbus: fix return type in xenbus_file_read()
    
    commit 32ad11127b95236dfc52375f3707853194a7f4b4 upstream.
    
    This code tries to store -EFAULT in an unsigned int.  The
    xenbus_file_read() function returns type ssize_t so the negative value
    is returned as a positive value to the user.
    
    This change forces another change to the min() macro.  Originally, the
    min() macro used "unsigned" type which checkpatch complains about.  Also
    unsigned type would break if "len" were not capped at MAX_RW_COUNT.  Use
    size_t for the min().  (No effect on runtime for the min_t() change).
    
    Fixes: 2fb3683e7b16 ("xen: Add xenbus device driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Oleksandr Tyshchenko <oleksandr_tyshchenko@epam.com>
    Link: https://lore.kernel.org/r/YutxJUaUYRG/VLVc@kili
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c555a0599bff8abd28b711a76ca30d1dbb664d5
Author: Yu Xiao <yu.xiao@corigine.com>
Date:   Tue Aug 2 10:33:55 2022 +0100

    nfp: ethtool: fix the display error of `ethtool -m DEVNAME`
    
    commit 4ae97cae07e15d41e5c0ebabba64c6eefdeb0bbe upstream.
    
    The port flag isn't set to `NFP_PORT_CHANGED` when using
    `ethtool -m DEVNAME` before, so the port state (e.g. interface)
    cannot be updated. Therefore, it caused that `ethtool -m DEVNAME`
    sometimes cannot read the correct information.
    
    E.g. `ethtool -m DEVNAME` cannot work when load driver before plug
    in optical module, as the port interface is still NONE without port
    update.
    
    Now update the port state before sending info to NIC to ensure that
    port interface is correct (latest state).
    
    Fixes: 61f7c6f44870 ("nfp: implement ethtool get module EEPROM")
    Reviewed-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Yu Xiao <yu.xiao@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20220802093355.69065-1-simon.horman@corigine.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76f3b97e56c69fc6ebce492a825befd311e57c4d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 20 21:28:18 2022 +0300

    NTB: ntb_tool: uninitialized heap data in tool_fn_write()
    
    commit 45e1058b77feade4e36402828bfe3e0d3363177b upstream.
    
    The call to:
    
            ret = simple_write_to_buffer(buf, size, offp, ubuf, size);
    
    will return success if it is able to write even one byte to "buf".
    The value of "*offp" controls which byte.  This could result in
    reading uninitialized data when we do the sscanf() on the next line.
    
    This code is not really desigined to handle partial writes where
    *offp is non-zero and the "buf" is preserved and re-used between writes.
    Just ban partial writes and replace the simple_write_to_buffer() with
    copy_from_user().
    
    Fixes: 578b881ba9c4 ("NTB: Add tool test client")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jon Mason <jdmason@kudzu.us>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ef9f0efbeb1e177b57b22bcdd1a771b040af76b
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Tue Jul 19 19:05:55 2022 +0200

    tools build: Switch to new openssl API for test-libcrypto
    
    commit 5b245985a6de5ac18b5088c37068816d413fb8ed upstream.
    
    Switch to new EVP API for detecting libcrypto, as Fedora 36 returns an
    error when it encounters the deprecated function MD5_Init() and the others.
    
    The error would be interpreted as missing libcrypto, while in reality it is
    not.
    
    Fixes: 6e8ccb4f624a73c5 ("tools/bpf: properly account for libbfd variations")
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Andrii Nakryiko <andrii@kernel.org>
    Cc: bpf@vger.kernel.org
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: KP Singh <kpsingh@kernel.org>
    Cc: llvm@lists.linux.dev
    Cc: Martin KaFai Lau <martin.lau@linux.dev>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Nick Terrell <terrelln@fb.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Quentin Monnet <quentin@isovalent.com>
    Cc: Song Liu <song@kernel.org>
    Cc: Stanislav Fomichev <sdf@google.com>
    Link: https://lore.kernel.org/r/20220719170555.2576993-4-roberto.sassu@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ef0645ebecfff2d3c2a69a7dd6713a216b73049
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Mon Jul 11 14:09:23 2022 +0200

    kbuild: dummy-tools: avoid tmpdir leak in dummy gcc
    
    commit aac289653fa5adf9e9985e4912c1d24a3e8cbab2 upstream.
    
    When passed -print-file-name=plugin, the dummy gcc script creates a
    temporary directory that is never cleaned up. To avoid cluttering
    $TMPDIR, instead use a static directory included in the source tree.
    
    Fixes: 76426e238834 ("kbuild: add dummy toolchains to enable all cc-option etc. in Kconfig")
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aee18421bda6bf12a7cba6a3d7751c0e1cfd0094
Author: Jeff Layton <jlayton@kernel.org>
Date:   Fri Jun 3 16:39:57 2022 -0400

    ceph: don't leak snap_rwsem in handle_cap_grant
    
    commit 58dd4385577ed7969b80cdc9e2a31575aba6c712 upstream.
    
    When handle_cap_grant is called on an IMPORT op, then the snap_rwsem is
    held and the function is expected to release it before returning. It
    currently fails to do that in all cases which could lead to a deadlock.
    
    Fixes: 6f05b30ea063 ("ceph: reset i_requested_max_size if file write is not wanted")
    Link: https://tracker.ceph.com/issues/55857
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Luís Henriques <lhenriques@suse.de>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eea0d84a4fc7ab84a672f42eafeea48c02c2bf4e
Author: Yuanzheng Song <songyuanzheng@huawei.com>
Date:   Sat May 28 06:31:17 2022 +0000

    tools/vm/slabinfo: use alphabetic order when two values are equal
    
    commit 4f5ceb8851f0081af54313abbf56de1615911faf upstream.
    
    When the number of partial slabs in each cache is the same (e.g., the
    value are 0), the results of the `slabinfo -X -N5` and `slabinfo -P -N5`
    are different.
    
    / # slabinfo -X -N5
    ...
    Slabs sorted by number of partial slabs
    ---------------------------------------
    Name                   Objects Objsize           Space Slabs/Part/Cpu  O/S O %Fr %Ef Flg
    inode_cache              15180     392         6217728        758/0/1   20 1   0  95 a
    kernfs_node_cache        22494      88         2002944        488/0/1   46 0   0  98
    shmem_inode_cache          663     464          319488         38/0/1   17 1   0  96
    biovec-max                  50    3072          163840          4/0/1   10 3   0  93 A
    dentry                   19050     136         2600960        633/0/2   30 0   0  99 a
    
    / # slabinfo -P -N5
    Name                   Objects Objsize           Space Slabs/Part/Cpu  O/S O %Fr %Ef Flg
    bdev_cache                  32     984           32.7K          1/0/1   16 2   0  96 Aa
    ext4_inode_cache            42     752           32.7K          1/0/1   21 2   0  96 a
    dentry                   19050     136            2.6M        633/0/2   30 0   0  99 a
    TCPv6                       17    1840           32.7K          0/0/1   17 3   0  95 A
    RAWv6                       18     856           16.3K          0/0/1   18 2   0  94 A
    
    This problem is caused by the sort_slabs().  So let's use alphabetic order
    when two values are equal in the sort_slabs().
    
    By the way, the content of the `slabinfo -h` is not aligned because the
    
    `-P|--partial Sort by number of partial slabs`
    
    uses tabs instead of spaces.  So let's use spaces instead of tabs to fix
    it.
    
    Link: https://lkml.kernel.org/r/20220528063117.935158-1-songyuanzheng@huawei.com
    Fixes: 1106b205a3fe ("tools/vm/slabinfo: add partial slab listing to -X")
    Signed-off-by: Yuanzheng Song <songyuanzheng@huawei.com>
    Cc: "Tobin C. Harding" <tobin@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97cea2cb7c861f9c2f7870c6068c1131f59311ae
Author: Luís Henriques <lhenriques@suse.de>
Date:   Tue May 24 17:06:27 2022 +0100

    ceph: use correct index when encoding client supported features
    
    commit fea013e020e6ecc7be75bea0d61697b7e916b44d upstream.
    
    Feature bits have to be encoded into the correct locations.  This hasn't
    been an issue so far because the only hole in the feature bits was in bit
    10 (CEPHFS_FEATURE_RECLAIM_CLIENT), which is located in the 2nd byte.  When
    adding more bits that go beyond the this 2nd byte, the bug will show up.
    
    [xiubli: remove incorrect comment for CEPHFS_FEATURES_CLIENT_SUPPORTED]
    
    Fixes: 9ba1e224538a ("ceph: allocate the correct amount of extra bytes for the session features")
    Signed-off-by: Luís Henriques <lhenriques@suse.de>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a327285a7b04daca52fe1e7b277cd5da2a957d2
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Mon Jun 20 10:19:33 2022 +0300

    dt-bindings: clock: qcom,gcc-msm8996: add more GCC clock sources
    
    commit 2b4e75a7a7c8d3531a40ebb103b92f88ff693f79 upstream.
    
    Add additional GCC clock sources. This includes PCIe and USB PIPE and
    UFS symbol clocks.
    
    Fixes: 2a8aa18c1131 ("dt-bindings: clk: qcom: Fix self-validation, split, and clean cruft")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220620071936.1558906-2-dmitry.baryshkov@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87c4b359e343ae44019d2d477d3994cf8a323739
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Fri May 20 14:32:46 2022 +0200

    dt-bindings: arm: qcom: fix MSM8916 MTP compatibles
    
    commit bb35fe1efbae4114bd288fae0f56070f563adcfc upstream.
    
    The order of compatibles for MSM8916 MTP board is different:
    
      msm8916-mtp.dtb: /: compatible: 'oneOf' conditional failed, one must be fixed:
        ['qcom,msm8916-mtp', 'qcom,msm8916-mtp/1', 'qcom,msm8916'] is too long
    
    Fixes: 9d3ef77fe568 ("dt-bindings: arm: Convert QCom board/soc bindings to json-schema")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Acked-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20220520123252.365762-3-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55fdefcb52c5485a357a4a9cbc4d4da34c021369
Author: Peilin Ye <peilin.ye@bytedance.com>
Date:   Mon Aug 8 11:05:25 2022 -0700

    vsock: Set socket state back to SS_UNCONNECTED in vsock_connect_timeout()
    
    commit a3e7b29e30854ed67be0d17687e744ad0c769c4b upstream.
    
    Imagine two non-blocking vsock_connect() requests on the same socket.
    The first request schedules @connect_work, and after it times out,
    vsock_connect_timeout() sets *sock* state back to TCP_CLOSE, but keeps
    *socket* state as SS_CONNECTING.
    
    Later, the second request returns -EALREADY, meaning the socket "already
    has a pending connection in progress", even though the first request has
    already timed out.
    
    As suggested by Stefano, fix it by setting *socket* state back to
    SS_UNCONNECTED, so that the second request will return -ETIMEDOUT.
    
    Suggested-by: Stefano Garzarella <sgarzare@redhat.com>
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Peilin Ye <peilin.ye@bytedance.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38ddccbda5e8b762c8ee06670bb1f64f1be5ee50
Author: Peilin Ye <peilin.ye@bytedance.com>
Date:   Mon Aug 8 11:04:47 2022 -0700

    vsock: Fix memory leak in vsock_connect()
    
    commit 7e97cfed9929eaabc41829c395eb0d1350fccb9d upstream.
    
    An O_NONBLOCK vsock_connect() request may try to reschedule
    @connect_work.  Imagine the following sequence of vsock_connect()
    requests:
    
      1. The 1st, non-blocking request schedules @connect_work, which will
         expire after 200 jiffies.  Socket state is now SS_CONNECTING;
    
      2. Later, the 2nd, blocking request gets interrupted by a signal after
         a few jiffies while waiting for the connection to be established.
         Socket state is back to SS_UNCONNECTED, but @connect_work is still
         pending, and will expire after 100 jiffies.
    
      3. Now, the 3rd, non-blocking request tries to schedule @connect_work
         again.  Since @connect_work is already scheduled,
         schedule_delayed_work() silently returns.  sock_hold() is called
         twice, but sock_put() will only be called once in
         vsock_connect_timeout(), causing a memory leak reported by syzbot:
    
      BUG: memory leak
      unreferenced object 0xffff88810ea56a40 (size 1232):
        comm "syz-executor756", pid 3604, jiffies 4294947681 (age 12.350s)
        hex dump (first 32 bytes):
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
          28 00 07 40 00 00 00 00 00 00 00 00 00 00 00 00  (..@............
        backtrace:
          [<ffffffff837c830e>] sk_prot_alloc+0x3e/0x1b0 net/core/sock.c:1930
          [<ffffffff837cbe22>] sk_alloc+0x32/0x2e0 net/core/sock.c:1989
          [<ffffffff842ccf68>] __vsock_create.constprop.0+0x38/0x320 net/vmw_vsock/af_vsock.c:734
          [<ffffffff842ce8f1>] vsock_create+0xc1/0x2d0 net/vmw_vsock/af_vsock.c:2203
          [<ffffffff837c0cbb>] __sock_create+0x1ab/0x2b0 net/socket.c:1468
          [<ffffffff837c3acf>] sock_create net/socket.c:1519 [inline]
          [<ffffffff837c3acf>] __sys_socket+0x6f/0x140 net/socket.c:1561
          [<ffffffff837c3bba>] __do_sys_socket net/socket.c:1570 [inline]
          [<ffffffff837c3bba>] __se_sys_socket net/socket.c:1568 [inline]
          [<ffffffff837c3bba>] __x64_sys_socket+0x1a/0x20 net/socket.c:1568
          [<ffffffff84512815>] do_syscall_x64 arch/x86/entry/common.c:50 [inline]
          [<ffffffff84512815>] do_syscall_64+0x35/0x80 arch/x86/entry/common.c:80
          [<ffffffff84600068>] entry_SYSCALL_64_after_hwframe+0x44/0xae
      <...>
    
    Use mod_delayed_work() instead: if @connect_work is already scheduled,
    reschedule it, and undo sock_hold() to keep the reference count
    balanced.
    
    Reported-and-tested-by: syzbot+b03f55bf128f9a38f064@syzkaller.appspotmail.com
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Co-developed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Peilin Ye <peilin.ye@bytedance.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 549822e0dc9e92d5c31f3e67e3c33f5b633e54b5
Author: Florian Westphal <fw@strlen.de>
Date:   Sun Aug 7 13:53:04 2022 +0200

    plip: avoid rcu debug splat
    
    commit bc3c8fe3c79bcdae4d90e3726054fac5cca8ac32 upstream.
    
    WARNING: suspicious RCU usage
    5.2.0-rc2-00605-g2638eb8b50cfc #1 Not tainted
    drivers/net/plip/plip.c:1110 suspicious rcu_dereference_check() usage!
    
    plip_open is called with RTNL held, switch to the correct helper.
    
    Fixes: 2638eb8b50cf ("net: ipv4: provide __rcu annotation for ifa_list")
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Link: https://lore.kernel.org/r/20220807115304.13257-1-fw@strlen.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c4542cb6ac82b405e9844592623b4a0e568dce7
Author: Matthias May <matthias.may@westermo.com>
Date:   Fri Aug 5 21:19:06 2022 +0200

    ipv6: do not use RT_TOS for IPv6 flowlabel
    
    commit ab7e2e0dfa5d37540ab1dc5376e9a2cb9188925d upstream.
    
    According to Guillaume Nault RT_TOS should never be used for IPv6.
    
    Quote:
    RT_TOS() is an old macro used to interprete IPv4 TOS as described in
    the obsolete RFC 1349. It's conceptually wrong to use it even in IPv4
    code, although, given the current state of the code, most of the
    existing calls have no consequence.
    
    But using RT_TOS() in IPv6 code is always a bug: IPv6 never had a "TOS"
    field to be interpreted the RFC 1349 way. There's no historical
    compatibility to worry about.
    
    Fixes: 571912c69f0e ("net: UDP tunnel encapsulation module for tunnelling different protocols like MPLS, IP, NSH etc.")
    Acked-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Matthias May <matthias.may@westermo.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38b83883ce4e4efe8ff0a727192219cac2668d42
Author: Matthias May <matthias.may@westermo.com>
Date:   Fri Aug 5 21:19:03 2022 +0200

    geneve: do not use RT_TOS for IPv6 flowlabel
    
    commit ca2bb69514a8bc7f83914122f0d596371352416c upstream.
    
    According to Guillaume Nault RT_TOS should never be used for IPv6.
    
    Quote:
    RT_TOS() is an old macro used to interprete IPv4 TOS as described in
    the obsolete RFC 1349. It's conceptually wrong to use it even in IPv4
    code, although, given the current state of the code, most of the
    existing calls have no consequence.
    
    But using RT_TOS() in IPv6 code is always a bug: IPv6 never had a "TOS"
    field to be interpreted the RFC 1349 way. There's no historical
    compatibility to worry about.
    
    Fixes: 3a56f86f1be6 ("geneve: handle ipv6 priority like ipv4 tos")
    Acked-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Matthias May <matthias.may@westermo.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0c3eec4ac6971821089f4f7f7acf3d3cb79d5d3
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Mon Jul 11 14:25:59 2022 +0300

    ACPI: property: Return type of acpi_add_nondev_subnodes() should be bool
    
    commit 85140ef275f577f64e8a2c5789447222dfc14fc4 upstream.
    
    The value acpi_add_nondev_subnodes() returns is bool so change the return
    type of the function to match that.
    
    Fixes: 445b0eb058f5 ("ACPI / property: Add support for data-only subnodes")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc0bfd933c815b4ec8868b189da65db426cd1ff3
Author: Jianhua Lu <lujianhua000@gmail.com>
Date:   Wed Aug 3 09:56:45 2022 +0800

    pinctrl: qcom: sm8250: Fix PDC map
    
    commit 4b759ca15a4914f96ea204ea9200ceeb01d70666 upstream.
    
    Fix the PDC mapping for SM8250, gpio39 is mapped to irq73(not irq37).
    
    Fixes: b41efeed507a("pinctrl: qcom: sm8250: Specify PDC map.")
    Signed-off-by: Jianhua Lu <lujianhua000@gmail.com>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Link: https://lore.kernel.org/r/20220803015645.22388-1-lujianhua000@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d35d9bba2940fe46989736ea5a8b3b9471e6690e
Author: Samuel Holland <samuel@sholland.org>
Date:   Tue Jul 12 21:52:29 2022 -0500

    pinctrl: sunxi: Add I/O bias setting for H6 R-PIO
    
    commit fc153c8f283bf5925615195fc9d4056414d7b168 upstream.
    
    H6 requires I/O bias configuration on both of its PIO devices.
    Previously it was only done for the main PIO.
    
    The setting for Port L is at bit 0, so the bank calculation needs to
    account for the pin base. Otherwise the wrong bit is used.
    
    Fixes: cc62383fcebe ("pinctrl: sunxi: Support I/O bias voltage setting on H6")
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Link: https://lore.kernel.org/r/20220713025233.27248-3-samuel@sholland.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8f5699a82f2911f72bc111511c8b9eb6889ed5d
Author: Nikita Travkin <nikita@trvn.ru>
Date:   Sun Jun 12 19:59:54 2022 +0500

    pinctrl: qcom: msm8916: Allow CAMSS GP clocks to be muxed
    
    commit 44339391c666e46cba522d19c65a6ad1071c68b7 upstream.
    
    GPIO 31, 32 can be muxed to GCC_CAMSS_GP(1,2)_CLK respectively but the
    function was never assigned to the pingroup (even though the function
    exists already).
    
    Add this mode to the related pins.
    
    Fixes: 5373a2c5abb6 ("pinctrl: qcom: Add msm8916 pinctrl driver")
    Signed-off-by: Nikita Travkin <nikita@trvn.ru>
    Link: https://lore.kernel.org/r/20220612145955.385787-4-nikita@trvn.ru
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78d05103891d3e96144b846fbc39f2cfb3384eae
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Jun 7 15:16:01 2022 +0400

    pinctrl: nomadik: Fix refcount leak in nmk_pinctrl_dt_subnode_to_map
    
    commit 4b32e054335ea0ce50967f63a7bfd4db058b14b9 upstream.
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak."
    
    Fixes: c2f6d059abfc ("pinctrl: nomadik: refactor DT parser to take two paths")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220607111602.57355-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab2b55bb25db289ba0b68e3d58494476bdb1041d
Author: Sandor Bodo-Merle <sbodomerle@gmail.com>
Date:   Mon Aug 8 19:39:39 2022 +0200

    net: bgmac: Fix a BUG triggered by wrong bytes_compl
    
    commit 1b7680c6c1f6de9904f1d9b05c952f0c64a03350 upstream.
    
    On one of our machines we got:
    
    kernel BUG at lib/dynamic_queue_limits.c:27!
    Internal error: Oops - BUG: 0 [#1] PREEMPT SMP ARM
    CPU: 0 PID: 1166 Comm: irq/41-bgmac Tainted: G        W  O    4.14.275-rt132 #1
    Hardware name: BRCM XGS iProc
    task: ee3415c0 task.stack: ee32a000
    PC is at dql_completed+0x168/0x178
    LR is at bgmac_poll+0x18c/0x6d8
    pc : [<c03b9430>]    lr : [<c04b5a18>]    psr: 800a0313
    sp : ee32be14  ip : 000005ea  fp : 00000bd4
    r10: ee558500  r9 : c0116298  r8 : 00000002
    r7 : 00000000  r6 : ef128810  r5 : 01993267  r4 : 01993851
    r3 : ee558000  r2 : 000070e1  r1 : 00000bd4  r0 : ee52c180
    Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 12c5387d  Table: 8e88c04a  DAC: 00000051
    Process irq/41-bgmac (pid: 1166, stack limit = 0xee32a210)
    Stack: (0xee32be14 to 0xee32c000)
    be00:                                              ee558520 ee52c100 ef128810
    be20: 00000000 00000002 c0116298 c04b5a18 00000000 c0a0c8c4 c0951780 00000040
    be40: c0701780 ee558500 ee55d520 ef05b340 ef6f9780 ee558520 00000001 00000040
    be60: ffffe000 c0a56878 ef6fa040 c0952040 0000012c c0528744 ef6f97b0 fffcfb6a
    be80: c0a04104 2eda8000 c0a0c4ec c0a0d368 ee32bf44 c0153534 ee32be98 ee32be98
    bea0: ee32bea0 ee32bea0 ee32bea8 ee32bea8 00000000 c01462e4 ffffe000 ef6f22a8
    bec0: ffffe000 00000008 ee32bee4 c0147430 ffffe000 c094a2a8 00000003 ffffe000
    bee0: c0a54528 00208040 0000000c c0a0c8c4 c0a65980 c0124d3c 00000008 ee558520
    bf00: c094a23c c0a02080 00000000 c07a9910 ef136970 ef136970 ee30a440 ef136900
    bf20: ee30a440 00000001 ef136900 ee30a440 c016d990 00000000 c0108db0 c012500c
    bf40: ef136900 c016da14 ee30a464 ffffe000 00000001 c016dd14 00000000 c016db28
    bf60: ffffe000 ee21a080 ee30a400 00000000 ee32a000 ee30a440 c016dbfc ee25fd70
    bf80: ee21a09c c013edcc ee32a000 ee30a400 c013ec7c 00000000 00000000 00000000
    bfa0: 00000000 00000000 00000000 c0108470 00000000 00000000 00000000 00000000
    bfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    bfe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [<c03b9430>] (dql_completed) from [<c04b5a18>] (bgmac_poll+0x18c/0x6d8)
    [<c04b5a18>] (bgmac_poll) from [<c0528744>] (net_rx_action+0x1c4/0x494)
    [<c0528744>] (net_rx_action) from [<c0124d3c>] (do_current_softirqs+0x1ec/0x43c)
    [<c0124d3c>] (do_current_softirqs) from [<c012500c>] (__local_bh_enable+0x80/0x98)
    [<c012500c>] (__local_bh_enable) from [<c016da14>] (irq_forced_thread_fn+0x84/0x98)
    [<c016da14>] (irq_forced_thread_fn) from [<c016dd14>] (irq_thread+0x118/0x1c0)
    [<c016dd14>] (irq_thread) from [<c013edcc>] (kthread+0x150/0x158)
    [<c013edcc>] (kthread) from [<c0108470>] (ret_from_fork+0x14/0x24)
    Code: a83f15e0 0200001a 0630a0e1 c3ffffea (f201f0e7)
    
    The issue seems similar to commit 90b3b339364c ("net: hisilicon: Fix a BUG
    trigered by wrong bytes_compl") and potentially introduced by commit
    b38c83dd0866 ("bgmac: simplify tx ring index handling").
    
    If there is an RX interrupt between setting ring->end
    and netdev_sent_queue() we can hit the BUG_ON as bgmac_dma_tx_free()
    can miscalculate the queue size while called from bgmac_poll().
    
    The machine which triggered the BUG runs a v4.14 RT kernel - but the issue
    seems present in mainline too.
    
    Fixes: b38c83dd0866 ("bgmac: simplify tx ring index handling")
    Signed-off-by: Sandor Bodo-Merle <sbodomerle@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220808173939.193804-1-sbodomerle@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e28678a770df7989108327cfe86f835d8760c33
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Tue Aug 9 14:35:06 2022 +0300

    devlink: Fix use-after-free after a failed reload
    
    commit 6b4db2e528f650c7fb712961aac36455468d5902 upstream.
    
    After a failed devlink reload, devlink parameters are still registered,
    which means user space can set and get their values. In the case of the
    mlxsw "acl_region_rehash_interval" parameter, these operations will
    trigger a use-after-free [1].
    
    Fix this by rejecting set and get operations while in the failed state.
    Return the "-EOPNOTSUPP" error code which does not abort the parameters
    dump, but instead causes it to skip over the problematic parameter.
    
    Another possible fix is to perform these checks in the mlxsw parameter
    callbacks, but other drivers might be affected by the same problem and I
    am not aware of scenarios where these stricter checks will cause a
    regression.
    
    [1]
    mlxsw_spectrum3 0000:00:10.0: Port 125: Failed to register netdev
    mlxsw_spectrum3 0000:00:10.0: Failed to create ports
    
    ==================================================================
    BUG: KASAN: use-after-free in mlxsw_sp_acl_tcam_vregion_rehash_intrvl_get+0xbd/0xd0 drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c:904
    Read of size 4 at addr ffff8880099dcfd8 by task kworker/u4:4/777
    
    CPU: 1 PID: 777 Comm: kworker/u4:4 Not tainted 5.19.0-rc7-custom-126601-gfe26f28c586d #1
    Hardware name: QEMU MSN4700, BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
    Workqueue: netns cleanup_net
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0x92/0xbd lib/dump_stack.c:106
     print_address_description mm/kasan/report.c:313 [inline]
     print_report.cold+0x5e/0x5cf mm/kasan/report.c:429
     kasan_report+0xb9/0xf0 mm/kasan/report.c:491
     __asan_report_load4_noabort+0x14/0x20 mm/kasan/report_generic.c:306
     mlxsw_sp_acl_tcam_vregion_rehash_intrvl_get+0xbd/0xd0 drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c:904
     mlxsw_sp_acl_region_rehash_intrvl_get+0x49/0x60 drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c:1106
     mlxsw_sp_params_acl_region_rehash_intrvl_get+0x33/0x80 drivers/net/ethernet/mellanox/mlxsw/spectrum.c:3854
     devlink_param_get net/core/devlink.c:4981 [inline]
     devlink_nl_param_fill+0x238/0x12d0 net/core/devlink.c:5089
     devlink_param_notify+0xe5/0x230 net/core/devlink.c:5168
     devlink_ns_change_notify net/core/devlink.c:4417 [inline]
     devlink_ns_change_notify net/core/devlink.c:4396 [inline]
     devlink_reload+0x15f/0x700 net/core/devlink.c:4507
     devlink_pernet_pre_exit+0x112/0x1d0 net/core/devlink.c:12272
     ops_pre_exit_list net/core/net_namespace.c:152 [inline]
     cleanup_net+0x494/0xc00 net/core/net_namespace.c:582
     process_one_work+0x9fc/0x1710 kernel/workqueue.c:2289
     worker_thread+0x675/0x10b0 kernel/workqueue.c:2436
     kthread+0x30c/0x3d0 kernel/kthread.c:376
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306
     </TASK>
    
    The buggy address belongs to the physical page:
    page:ffffea0000267700 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x99dc
    flags: 0x100000000000000(node=0|zone=1)
    raw: 0100000000000000 0000000000000000 dead000000000122 0000000000000000
    raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8880099dce80: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
     ffff8880099dcf00: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    >ffff8880099dcf80: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
                                                        ^
     ffff8880099dd000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
     ffff8880099dd080: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    ==================================================================
    
    Fixes: 98bbf70c1c41 ("mlxsw: spectrum: add "acl_region_rehash_interval" devlink param")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit faafa2a87f697ee537c29446097e1cc3143506fa
Author: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
Date:   Thu Aug 4 14:32:48 2022 +0800

    virtio_net: fix memory leak inside XPD_TX with mergeable
    
    commit 7a542bee27c6a57e45c33cbbdc963325fd6493af upstream.
    
    When we call xdp_convert_buff_to_frame() to get xdpf, if it returns
    NULL, we should check if xdp_page was allocated by xdp_linearize_page().
    If it is newly allocated, it should be freed here alone. Just like any
    other "goto err_xdp".
    
    Fixes: 44fa2dbd4759 ("xdp: transition into using xdp_frame for ndo_xdp_xmit")
    Signed-off-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd70ebf2999be258f15c790f53f3247f9f2f905e
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Jul 27 12:27:54 2022 -0400

    SUNRPC: Reinitialise the backchannel request buffers before reuse
    
    commit 6622e3a73112fc336c1c2c582428fb5ef18e456a upstream.
    
    When we're reusing the backchannel requests instead of freeing them,
    then we should reinitialise any values of the send/receive xdr_bufs so
    that they reflect the available space.
    
    Fixes: 0d2a970d0ae5 ("SUNRPC: Fix a backchannel race")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59d2e8fa4127c1417a5b3e0f33e59ae8216df720
Author: Dan Aloni <dan.aloni@vastdata.com>
Date:   Mon Jul 4 15:56:57 2022 +0300

    sunrpc: fix expiry of auth creds
    
    commit f1bafa7375c01ff71fb7cb97c06caadfcfe815f3 upstream.
    
    Before this commit, with a large enough LRU of expired items (100), the
    loop skipped all the expired items and was entirely ineffectual in
    trimming the LRU list.
    
    Fixes: 95cd623250ad ('SUNRPC: Clean up the AUTH cache code')
    Signed-off-by: Dan Aloni <dan.aloni@vastdata.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df60c534d4c5a681172952dd4b475a5d818b3a86
Author: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
Date:   Mon Aug 8 16:18:45 2022 +0800

    net: atlantic: fix aq_vec index out of range error
    
    commit 2ba5e47fb75fbb8fab45f5c1bc8d5c33d8834bd3 upstream.
    
    The final update statement of the for loop exceeds the array range, the
    dereference of self->aq_vec[i] is not checked and then leads to the
    index out of range error.
    Also fixed this kind of coding style in other for loop.
    
    [   97.937604] UBSAN: array-index-out-of-bounds in drivers/net/ethernet/aquantia/atlantic/aq_nic.c:1404:48
    [   97.937607] index 8 is out of range for type 'aq_vec_s *[8]'
    [   97.937608] CPU: 38 PID: 3767 Comm: kworker/u256:18 Not tainted 5.19.0+ #2
    [   97.937610] Hardware name: Dell Inc. Precision 7865 Tower/, BIOS 1.0.0 06/12/2022
    [   97.937611] Workqueue: events_unbound async_run_entry_fn
    [   97.937616] Call Trace:
    [   97.937617]  <TASK>
    [   97.937619]  dump_stack_lvl+0x49/0x63
    [   97.937624]  dump_stack+0x10/0x16
    [   97.937626]  ubsan_epilogue+0x9/0x3f
    [   97.937627]  __ubsan_handle_out_of_bounds.cold+0x44/0x49
    [   97.937629]  ? __scm_send+0x348/0x440
    [   97.937632]  ? aq_vec_stop+0x72/0x80 [atlantic]
    [   97.937639]  aq_nic_stop+0x1b6/0x1c0 [atlantic]
    [   97.937644]  aq_suspend_common+0x88/0x90 [atlantic]
    [   97.937648]  aq_pm_suspend_poweroff+0xe/0x20 [atlantic]
    [   97.937653]  pci_pm_suspend+0x7e/0x1a0
    [   97.937655]  ? pci_pm_suspend_noirq+0x2b0/0x2b0
    [   97.937657]  dpm_run_callback+0x54/0x190
    [   97.937660]  __device_suspend+0x14c/0x4d0
    [   97.937661]  async_suspend+0x23/0x70
    [   97.937663]  async_run_entry_fn+0x33/0x120
    [   97.937664]  process_one_work+0x21f/0x3f0
    [   97.937666]  worker_thread+0x4a/0x3c0
    [   97.937668]  ? process_one_work+0x3f0/0x3f0
    [   97.937669]  kthread+0xf0/0x120
    [   97.937671]  ? kthread_complete_and_exit+0x20/0x20
    [   97.937672]  ret_from_fork+0x22/0x30
    [   97.937676]  </TASK>
    
    v2. fixed "warning: variable 'aq_vec' set but not used"
    
    v3. simplified a for loop
    
    Fixes: 97bde5c4f909 ("net: ethernet: aquantia: Support for NIC-specific code")
    Signed-off-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Acked-by: Sudarsana Reddy Kalluru <skalluru@marvell.com>
    Link: https://lore.kernel.org/r/20220808081845.42005-1-acelan.kao@canonical.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc25abcec82c943b4dac2acb8a37c56f6e8b7078
Author: Sebastian Würl <sebastian.wuerl@ororatech.com>
Date:   Thu Aug 4 10:14:11 2022 +0200

    can: mcp251x: Fix race condition on receive interrupt
    
    commit d80d60b0db6ff3dd2e29247cc2a5166d7e9ae37e upstream.
    
    The mcp251x driver uses both receiving mailboxes of the CAN controller
    chips. For retrieving the CAN frames from the controller via SPI, it checks
    once per interrupt which mailboxes have been filled and will retrieve the
    messages accordingly.
    
    This introduces a race condition, as another CAN frame can enter mailbox 1
    while mailbox 0 is emptied. If now another CAN frame enters mailbox 0 until
    the interrupt handler is called next, mailbox 0 is emptied before
    mailbox 1, leading to out-of-order CAN frames in the network device.
    
    This is fixed by checking the interrupt flags once again after freeing
    mailbox 0, to correctly also empty mailbox 1 before leaving the handler.
    
    For reproducing the bug I created the following setup:
     - Two CAN devices, one Raspberry Pi with MCP2515, the other can be any.
     - Setup CAN to 1 MHz
     - Spam bursts of 5 CAN-messages with increasing CAN-ids
     - Continue sending the bursts while sleeping a second between the bursts
     - Check on the RPi whether the received messages have increasing CAN-ids
     - Without this patch, every burst of messages will contain a flipped pair
    
    v3: https://lore.kernel.org/all/20220804075914.67569-1-sebastian.wuerl@ororatech.com
    v2: https://lore.kernel.org/all/20220804064803.63157-1-sebastian.wuerl@ororatech.com
    v1: https://lore.kernel.org/all/20220803153300.58732-1-sebastian.wuerl@ororatech.com
    
    Fixes: bf66f3736a94 ("can: mcp251x: Move to threaded interrupts instead of workqueues.")
    Signed-off-by: Sebastian Würl <sebastian.wuerl@ororatech.com>
    Link: https://lore.kernel.org/all/20220804081411.68567-1-sebastian.wuerl@ororatech.com
    [mkl: reduce scope of intf1, eflag1]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9d9cf88c828d5c6071c8e8c025210d5269cb499
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Aug 10 16:05:34 2022 +0800

    bpf: Check the validity of max_rdwr_access for sock local storage map iterator
    
    commit 52bd05eb7c88e1ad8541a48873188ccebca9da26 upstream.
    
    The value of sock local storage map is writable in map iterator, so check
    max_rdwr_access instead of max_rdonly_access.
    
    Fixes: 5ce6e77c7edf ("bpf: Implement bpf iterator for sock local storage map")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Acked-by: Yonghong Song <yhs@fb.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/r/20220810080538.1845898-6-houtao@huaweicloud.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7d844df5e20dd1ca32a697f188e98ad90f29d8e
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Aug 10 16:05:33 2022 +0800

    bpf: Acquire map uref in .init_seq_private for sock{map,hash} iterator
    
    commit f0d2b2716d71778d0b0c8eaa433c073287d69d93 upstream.
    
    sock_map_iter_attach_target() acquires a map uref, and the uref may be
    released before or in the middle of iterating map elements. For example,
    the uref could be released in sock_map_iter_detach_target() as part of
    bpf_link_release(), or could be released in bpf_map_put_with_uref() as
    part of bpf_map_release().
    
    Fixing it by acquiring an extra map uref in .init_seq_private and
    releasing it in .fini_seq_private.
    
    Fixes: 0365351524d7 ("net: Allow iterating sockmap and sockhash")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/r/20220810080538.1845898-5-houtao@huaweicloud.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7ad7e65aa2fb5608b3b499aeaf1697f2e2e0cfd
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Aug 10 16:05:32 2022 +0800

    bpf: Acquire map uref in .init_seq_private for sock local storage map iterator
    
    commit 3c5f6e698b5c538bbb23cd453b22e1e4922cffd8 upstream.
    
    bpf_iter_attach_map() acquires a map uref, and the uref may be released
    before or in the middle of iterating map elements. For example, the uref
    could be released in bpf_iter_detach_map() as part of
    bpf_link_release(), or could be released in bpf_map_put_with_uref() as
    part of bpf_map_release().
    
    So acquiring an extra map uref in bpf_iter_init_sk_storage_map() and
    releasing it in bpf_iter_fini_sk_storage_map().
    
    Fixes: 5ce6e77c7edf ("bpf: Implement bpf iterator for sock local storage map")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Acked-by: Yonghong Song <yhs@fb.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/r/20220810080538.1845898-4-houtao@huaweicloud.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bda6fe3ea8932129881684ab52034673e36e6ae6
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Aug 10 16:05:31 2022 +0800

    bpf: Acquire map uref in .init_seq_private for hash map iterator
    
    commit ef1e93d2eeb58a1f08c37b22a2314b94bc045f15 upstream.
    
    bpf_iter_attach_map() acquires a map uref, and the uref may be released
    before or in the middle of iterating map elements. For example, the uref
    could be released in bpf_iter_detach_map() as part of
    bpf_link_release(), or could be released in bpf_map_put_with_uref() as
    part of bpf_map_release().
    
    So acquiring an extra map uref in bpf_iter_init_hash_map() and
    releasing it in bpf_iter_fini_hash_map().
    
    Fixes: d6c4503cc296 ("bpf: Implement bpf iterator for hash maps")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/r/20220810080538.1845898-3-houtao@huaweicloud.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30d7198da84f8767c38bebf21c3b7eb2a87ff46a
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Aug 10 16:05:30 2022 +0800

    bpf: Acquire map uref in .init_seq_private for array map iterator
    
    commit f76fa6b338055054f80c72b29c97fb95c1becadc upstream.
    
    bpf_iter_attach_map() acquires a map uref, and the uref may be released
    before or in the middle of iterating map elements. For example, the uref
    could be released in bpf_iter_detach_map() as part of
    bpf_link_release(), or could be released in bpf_map_put_with_uref() as
    part of bpf_map_release().
    
    Alternative fix is acquiring an extra bpf_link reference just like
    a pinned map iterator does, but it introduces unnecessary dependency
    on bpf_link instead of bpf_map.
    
    So choose another fix: acquiring an extra map uref in .init_seq_private
    for array map iterator.
    
    Fixes: d3cc2ab546ad ("bpf: Implement bpf iterator for array maps")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/r/20220810080538.1845898-2-houtao@huaweicloud.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76ffd2042438769298f34b76102b40dea89de616
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Aug 2 15:48:50 2022 -0400

    NFSv4/pnfs: Fix a use-after-free bug in open
    
    commit 2135e5d56278ffdb1c2e6d325dc6b87f669b9dac upstream.
    
    If someone cancels the open RPC call, then we must not try to free
    either the open slot or the layoutget operation arguments, since they
    are likely still in use by the hung RPC call.
    
    Fixes: 6949493884fe ("NFSv4: Don't hold the layoutget locks across multiple RPC calls")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2bd1cc1fe7a58af9f701e82a84d035104ceb87f
Author: Zhang Xianwei <zhang.xianwei8@zte.com.cn>
Date:   Wed Jul 27 18:01:07 2022 +0800

    NFSv4.1: RECLAIM_COMPLETE must handle EACCES
    
    commit e35a5e782f67ed76a65ad0f23a484444a95f000f upstream.
    
    A client should be able to handle getting an EACCES error while doing
    a mount operation to reclaim state due to NFS4CLNT_RECLAIM_REBOOT
    being set. If the server returns RPC_AUTH_BADCRED because authentication
    failed when we execute "exportfs -au", then RECLAIM_COMPLETE will go a
    wrong way. After mount succeeds, all OPEN call will fail due to an
    NFS4ERR_GRACE error being returned. This patch is to fix it by resending
    a RPC request.
    
    Signed-off-by: Zhang Xianwei <zhang.xianwei8@zte.com.cn>
    Signed-off-by: Yi Wang <wang.yi59@zte.com.cn>
    Fixes: aa5190d0ed7d ("NFSv4: Kill nfs4_async_handle_error() abuses by NFSv4.1")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfde64bd315d6845416f34e7754e475d4179337c
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Jul 13 17:46:52 2022 -0400

    NFSv4: Fix races in the legacy idmapper upcall
    
    commit 51fd2eb52c0ca8275a906eed81878ef50ae94eb0 upstream.
    
    nfs_idmap_instantiate() will cause the process that is waiting in
    request_key_with_auxdata() to wake up and exit. If there is a second
    process waiting for the idmap->idmap_mutex, then it may wake up and
    start a new call to request_key_with_auxdata(). If the call to
    idmap_pipe_downcall() from the first process has not yet finished
    calling nfs_idmap_complete_pipe_upcall_locked(), then we may end up
    triggering the WARN_ON_ONCE() in nfs_idmap_prepare_pipe_upcall().
    
    The fix is to ensure that we clear idmap->idmap_upcall_data before
    calling nfs_idmap_instantiate().
    
    Fixes: e9ab41b620e4 ("NFSv4: Clean up the legacy idmapper upcall")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 060c111373ee809f4b44a1d648cf704a39532c34
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Jul 12 09:22:40 2022 -0400

    NFSv4.1: Handle NFS4ERR_DELAY replies to OP_SEQUENCE correctly
    
    commit 7ccafd4b2b9f34e6d8185f796f151c47424e273e upstream.
    
    Don't assume that the NFS4ERR_DELAY means that the server is processing
    this slot id.
    
    Fixes: 3453d5708b33 ("NFSv4.1: Avoid false retries when RPC calls are interrupted")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a351a73d90641240d2de6b41682475edd9671bf3
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Jul 12 09:16:04 2022 -0400

    NFSv4.1: Don't decrease the value of seq_nr_highest_sent
    
    commit f07a5d2427fc113dc50c5c818eba8929bc27b8ca upstream.
    
    When we're trying to figure out what the server may or may not have seen
    in terms of request numbers, do not assume that requests with a larger
    number were missed, just because we saw a reply to a request with a
    smaller number.
    
    Fixes: 3453d5708b33 ("NFSv4.1: Avoid false retries when RPC calls are interrupted")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a408f135c4c2ba3948e1bbdbe5eff115f3d5d058
Author: Qifu Zhang <zhangqifu@bytedance.com>
Date:   Tue Jul 19 19:50:13 2022 +0800

    Documentation: ACPI: EINJ: Fix obsolete example
    
    commit 9066e151c37950af92c3be6a7270daa8e8063db9 upstream.
    
    Since commit 488dac0c9237 ("libfs: fix error cast of negative value in
    simple_attr_write()"), the EINJ debugfs interface no longer accepts
    negative values as input. Attempt to do so will result in EINVAL.
    
    Fixes: 488dac0c9237 ("libfs: fix error cast of negative value in simple_attr_write()")
    Signed-off-by: Qifu Zhang <zhangqifu@bytedance.com>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8aab4295582eb397a125d2788b829fa62b88dbf7
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Tue Jun 14 17:00:01 2022 +0800

    apparmor: Fix memleak in aa_simple_write_to_buffer()
    
    commit 417ea9fe972d2654a268ad66e89c8fcae67017c3 upstream.
    
    When copy_from_user failed, the memory is freed by kvfree. however the
    management struct and data blob are allocated independently, so only
    kvfree(data) cause a memleak issue here. Use aa_put_loaddata(data) to
    fix this issue.
    
    Fixes: a6a52579e52b5 ("apparmor: split load data into management struct and data blob")
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ceeb3296e9dde1d5772348046affcefdea605e2
Author: Xin Xiong <xiongx18@fudan.edu.cn>
Date:   Thu Apr 28 11:39:08 2022 +0800

    apparmor: fix reference count leak in aa_pivotroot()
    
    commit 11c3627ec6b56c1525013f336f41b79a983b4d46 upstream.
    
    The aa_pivotroot() function has a reference counting bug in a specific
    path. When aa_replace_current_label() returns on success, the function
    forgets to decrement the reference count of “target”, which is
    increased earlier by build_pivotroot(), causing a reference leak.
    
    Fix it by decreasing the refcount of “target” in that path.
    
    Fixes: 2ea3ffb7782a ("apparmor: add mount mediation")
    Co-developed-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Co-developed-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2672f3eb7a7f8bc076a146c6f062233f56b1d3c1
Author: John Johansen <john.johansen@canonical.com>
Date:   Sat Mar 26 01:58:15 2022 -0700

    apparmor: fix overlapping attachment computation
    
    commit 2504db207146543736e877241f3b3de005cbe056 upstream.
    
    When finding the profile via patterned attachments, the longest left
    match is being set to the static compile time value and not using the
    runtime computed value.
    
    Fix this by setting the candidate value to the greater of the
    precomputed value or runtime computed value.
    
    Fixes: 21f606610502 ("apparmor: improve overlapping domain attachment resolution")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ac89741a2e7ce6d446df33ad610a1e41f6c3241
Author: John Johansen <john.johansen@canonical.com>
Date:   Sat Mar 26 01:52:06 2022 -0700

    apparmor: fix setting unconfined mode on a loaded profile
    
    commit 3bbb7b2e9bbcd22e539e23034da753898fe3b4dc upstream.
    
    When loading a profile that is set to unconfined mode, that label
    flag is not set when it should be. Ensure it is set so that when
    used in a label the unconfined check will be applied correctly.
    
    Fixes: 038165070aa5 ("apparmor: allow setting any profile into the unconfined state")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4188f91c82e3720afd6c65f698ce88c867e02588
Author: Tom Rix <trix@redhat.com>
Date:   Sun Feb 13 13:32:28 2022 -0800

    apparmor: fix aa_label_asxprint return check
    
    commit 3e2a3a0830a2090e766d0d887d52c67de2a6f323 upstream.
    
    Clang static analysis reports this issue
    label.c:1802:3: warning: 2nd function call argument
      is an uninitialized value
      pr_info("%s", str);
      ^~~~~~~~~~~~~~~~~~
    
    str is set from a successful call to aa_label_asxprint(&str, ...)
    On failure a negative value is returned, not a -1.  So change
    the check.
    
    Fixes: f1bd904175e8 ("apparmor: add the base fns() for domain labels")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0ca0156a78666f630f469271b4a48ef6ddc0704
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Jan 25 00:37:42 2022 -0800

    apparmor: Fix failed mount permission check error message
    
    commit ec240b5905bbb09a03dccffee03062cf39e38dc2 upstream.
    
    When the mount check fails due to a permission check failure instead
    of explicitly at one of the subcomponent checks, AppArmor is reporting
    a failure in the flags match. However this is not true and AppArmor
    can not attribute the error at this point to any particular component,
    and should only indicate the mount failed due to missing permissions.
    
    Fixes: 2ea3ffb7782a ("apparmor: add mount mediation")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08f8128bc9f2b4489e8dd84b91cb69abc0b9c963
Author: John Johansen <john.johansen@canonical.com>
Date:   Tue Dec 14 02:59:28 2021 -0800

    apparmor: fix absroot causing audited secids to begin with =
    
    commit 511f7b5b835726e844a5fc7444c18e4b8672edfd upstream.
    
    AppArmor is prefixing secids that are converted to secctx with the =
    to indicate the secctx should only be parsed from an absolute root
    POV. This allows catching errors where secctx are reparsed back into
    internal labels.
    
    Unfortunately because audit is using secid to secctx conversion this
    means that subject and object labels can result in a very unfortunate
    == that can break audit parsing.
    
    eg. the subj==unconfined term in the below audit message
    
    type=USER_LOGIN msg=audit(1639443365.233:160): pid=1633 uid=0 auid=1000
    ses=3 subj==unconfined msg='op=login id=1000 exe="/usr/sbin/sshd"
    hostname=192.168.122.1 addr=192.168.122.1 terminal=/dev/pts/1 res=success'
    
    Fix this by switch the prepending of = to a _. This still works as a
    special character to flag this case without breaking audit. Also move
    this check behind debug as it should not be needed during normal
    operqation.
    
    Fixes: 26b7899510ae ("apparmor: add support for absolute root view based labels")
    Reported-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bca03f0bbc3be412d875221418504b14185fc9b1
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Apr 29 01:48:28 2021 -0700

    apparmor: fix quiet_denied for file rules
    
    commit 68ff8540cc9e4ab557065b3f635c1ff4c96e1f1c upstream.
    
    Global quieting of denied AppArmor generated file events is not
    handled correctly. Unfortunately the is checking if quieting of all
    audit events is set instead of just denied events.
    
    Fixes: 67012e8209df ("AppArmor: basic auditing infrastructure.")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b74344135fc68c7bd833206f584f45eabf65e92
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Mon Aug 1 22:47:16 2022 +0200

    can: ems_usb: fix clang's -Wunaligned-access warning
    
    commit a4cb6e62ea4d36e53fb3c0f18ea4503d7b76674f upstream.
    
    clang emits a -Wunaligned-access warning on struct __packed
    ems_cpc_msg.
    
    The reason is that the anonymous union msg (not declared as packed) is
    being packed right after some non naturally aligned variables (3*8
    bits + 2*32) inside a packed struct:
    
    | struct __packed ems_cpc_msg {
    |       u8 type;        /* type of message */
    |       u8 length;      /* length of data within union 'msg' */
    |       u8 msgid;       /* confirmation handle */
    |       __le32 ts_sec;  /* timestamp in seconds */
    |       __le32 ts_nsec; /* timestamp in nano seconds */
    |       /* ^ not naturally aligned */
    |
    |       union {
    |       /* ^ not declared as packed */
    |               u8 generic[64];
    |               struct cpc_can_msg can_msg;
    |               struct cpc_can_params can_params;
    |               struct cpc_confirm confirmation;
    |               struct cpc_overrun overrun;
    |               struct cpc_can_error error;
    |               struct cpc_can_err_counter err_counter;
    |               u8 can_state;
    |       } msg;
    | };
    
    Starting from LLVM 14, having an unpacked struct nested in a packed
    struct triggers a warning. c.f. [1].
    
    Fix the warning by marking the anonymous union as packed.
    
    [1] https://github.com/llvm/llvm-project/issues/55520
    
    Fixes: 702171adeed3 ("ems_usb: Added support for EMS CPC-USB/ARM7 CAN/USB interface")
    Link: https://lore.kernel.org/all/20220802094021.959858-1-mkl@pengutronix.de
    Cc: Gerhard Uttenthaler <uttenthaler@ems-wuensche.com>
    Cc: Sebastian Haas <haas@ems-wuensche.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f06c7821187653529dba3879a3a8128a3cc3604
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 9 09:32:59 2022 +0200

    ALSA: usb-audio: More comprehensive mixer map for ASUS ROG Zenith II
    
    commit 6bc2906253e723d1ab1acc652b55b83e286bfec2 upstream.
    
    ASUS ROG Zenith II has two USB interfaces, one for the front headphone
    and another for the rest I/O.  Currently we provided the mixer mapping
    for the latter but with an incomplete form.
    
    This patch corrects and provides more comprehensive mixer mapping, as
    well as providing the proper device names for both the front headphone
    and main audio.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=211005
    Fixes: 2a48218f8e23 ("ALSA: usb-audio: Add mixer workaround for TRX40 and co")
    Link: https://lore.kernel.org/r/20220809073259.18849-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d3b02b80d9307b6e70977ce716a4219dd995668
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Sat Aug 20 09:43:22 2022 -0400

    tracing: Have filter accept "common_cpu" to be consistent
    
    commit b2380577d4fe1c0ef3fa50417f1e441c016e4cbe upstream.
    
    Make filtering consistent with histograms. As "cpu" can be a field of an
    event, allow for "common_cpu" to keep it from being confused with the
    "cpu" field of the event.
    
    Link: https://lkml.kernel.org/r/20220820134401.513062765@goodmis.org
    Link: https://lore.kernel.org/all/20220820220920.e42fa32b70505b1904f0a0ad@kernel.org/
    
    Cc: stable@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tzvetomir Stoyanov <tz.stoyanov@gmail.com>
    Cc: Tom Zanussi <zanussi@kernel.org>
    Fixes: 1e3bac71c5053 ("tracing/histogram: Rename "cpu" to "common_cpu"")
    Suggested-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6359850f9d8f704e15906c833b4e7a21045dea4b
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Aug 1 14:57:51 2022 +0100

    btrfs: fix lost error handling when looking up extended ref on log replay
    
    commit 7a6b75b79902e47f46328b57733f2604774fa2d9 upstream.
    
    During log replay, when processing inode references, if we get an error
    when looking up for an extended reference at __add_inode_ref(), we ignore
    it and proceed, returning success (0) if no other error happens after the
    lookup. This is obviously wrong because in case an extended reference
    exists and it encodes some name not in the log, we need to unlink it,
    otherwise the filesystem state will not match the state it had after the
    last fsync.
    
    So just make __add_inode_ref() return an error it gets from the extended
    reference lookup.
    
    Fixes: f186373fef005c ("btrfs: extended inode refs")
    CC: stable@vger.kernel.org # 4.9+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79895cefa4c6573a8f6f55d09e9bab267dd25449
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 7 08:56:38 2022 +0200

    mmc: meson-gx: Fix an error handling path in meson_mmc_probe()
    
    commit b3e1cf31154136da855f3cb6117c17eb0b6bcfb4 upstream.
    
    The commit in Fixes has introduced a new error handling which should goto
    the existing error handling path.
    Otherwise some resources leak.
    
    Fixes: 19c6beaa064c ("mmc: meson-gx: add device reset")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/be4b863bacf323521ba3a02efdc4fca9cdedd1a6.1659855351.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13a497c3c598b2b63cad64cdb0082f2e67145987
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Jul 26 21:15:43 2022 +0200

    mmc: pxamci: Fix an error handling path in pxamci_probe()
    
    commit 98d7c5e5792b8ce3e1352196dac7f404bb1b46ec upstream.
    
    The commit in Fixes: has moved some code around without updating gotos to
    the error handling path.
    
    Update it now and release some resources if pxamci_of_init() fails.
    
    Fixes: fa3a5115469c ("mmc: pxamci: call mmc_of_parse()")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/6d75855ad4e2470e9ed99e0df21bc30f0c925a29.1658862932.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a211dd4856ee00fc76370db7889415e16a7ae2a
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Jul 26 21:15:51 2022 +0200

    mmc: pxamci: Fix another error handling path in pxamci_probe()
    
    commit b886f54c300d31c109d2e4336b22922b64e7ba7d upstream.
    
    The commit in Fixes: has introduced an new error handling without branching
    to the existing error handling path.
    
    Update it now and release some resources if pxamci_init_ocr() fails.
    
    Fixes: 61951fd6cb49 ("mmc: pxamci: let mmc core handle regulators")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/07a2dcebf8ede69b484103de8f9df043f158cffd.1658862932.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a785d8417812979b31e6c8e3263701ecdeca0770
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Fri Aug 12 02:29:53 2022 +0900

    ata: libata-eh: Add missing command name
    
    commit d3122bf9aa4c974f5e2c0112f799757b3a2779da upstream.
    
    Add the missing command name for ATA_CMD_NCQ_NON_DATA to
    ata_get_cmd_name().
    
    Fixes: 661ce1f0c4a6 ("libata/libsas: Define ATA_CMD_NCQ_NON_DATA")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb1857c2e41a4b4d215b5e799016169a1356fc10
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Aug 10 09:00:42 2022 -0400

    rds: add missing barrier to release_refill
    
    commit 9f414eb409daf4f778f011cf8266d36896bb930b upstream.
    
    The functions clear_bit and set_bit do not imply a memory barrier, thus it
    may be possible that the waitqueue_active function (which does not take
    any locks) is moved before clear_bit and it could miss a wakeup event.
    
    Fix this bug by adding a memory barrier after clear_bit.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6876b4804b041856a8a390b949983ae00d1fd5b8
Author: Aaron Lu <aaron.lu@intel.com>
Date:   Fri Aug 19 10:30:01 2022 +0800

    x86/mm: Use proper mask when setting PUD mapping
    
    commit 88e0a74902f894fbbc55ad3ad2cb23b4bfba555c upstream.
    
    Commit c164fbb40c43f("x86/mm: thread pgprot_t through
    init_memory_mapping()") mistakenly used __pgprot() which doesn't respect
    __default_kernel_pte_mask when setting PUD mapping.
    
    Fix it by only setting the one bit we actually need (PSE) and leaving
    the other bits (that have been properly masked) alone.
    
    Fixes: c164fbb40c43 ("x86/mm: thread pgprot_t through init_memory_mapping()")
    Signed-off-by: Aaron Lu <aaron.lu@intel.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b68e40b52f179f27912c4f35598f9c9b2e93a40c
Author: Christoffer Sandberg <cs@tuxedo.de>
Date:   Wed Aug 17 15:51:44 2022 +0200

    ALSA: hda/realtek: Add quirk for Clevo NS50PU, NS70PU
    
    commit 90d74fdbd8059bf041ac797092c9b1d461555280 upstream.
    
    Fixes headset microphone detection on Clevo NS50PU and NS70PU.
    
    Signed-off-by: Christoffer Sandberg <cs@tuxedo.de>
    Signed-off-by: Werner Sembach <wse@tuxedocomputers.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220817135144.34103-1-wse@tuxedocomputers.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e14e2fec35d3a1a3e8f8e6ee81ba2be4b6530c30
Author: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Date:   Wed Aug 17 14:49:24 2022 +0200

    ALSA: info: Fix llseek return value when using callback
    
    commit 9be080edcca330be4af06b19916c35227891e8bc upstream.
    
    When using callback there was a flow of
    
            ret = -EINVAL
            if (callback) {
                    offset = callback();
                    goto out;
            }
            ...
            offset = some other value in case of no callback;
            ret = offset;
    out:
            return ret;
    
    which causes the snd_info_entry_llseek() to return -EINVAL when there is
    callback handler. Fix this by setting "ret" directly to callback return
    value before jumping to "out".
    
    Fixes: 73029e0ff18d ("ALSA: info - Implement common llseek for binary mode")
    Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220817124924.3974577-1-amadeuszx.slawinski@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
