commit a10a57a224f32035b58ef68b069f5b7491dd13e2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 26 13:25:57 2022 +0200

    Linux 5.10.150
    
    Link: https://lore.kernel.org/r/20221024113022.510008560@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 243c8f42ba107216ab9c903e0470cc417672ae33
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Oct 20 11:38:57 2022 -0400

    Revert "drm/amdgpu: make sure to init common IP before gmc"
    
    This reverts commit 7b0db849ea030a70b8fb9c9afec67c81f955482e which is
    commit a8671493d2074950553da3cf07d1be43185ef6c6 upstream.
    
    The patches that this patch depends on were not backported properly
    and the patch that caused the regression that this patch set fixed
    was reverted in commit 412b844143e3 ("Revert "PCI/portdrv: Don't disable AER reporting in get_port_device_capability()"").
    This isn't necessary and causes a regression so drop it.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/2216
    Cc: Shuah Khan <skhan@linuxfoundation.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: <stable@vger.kernel.org>    # 5.10
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8026d58b495a2c1143b126b9161113696ec4e77e
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Oct 13 09:40:59 2022 +0200

    gcov: support GCC 12.1 and newer compilers
    
    commit 977ef30a7d888eeb52fb6908f99080f33e5309a8 upstream.
    
    Starting with GCC 12.1, the created .gcda format can't be read by gcov
    tool.  There are 2 significant changes to the .gcda file format that
    need to be supported:
    
    a) [gcov: Use system IO buffering]
       (23eb66d1d46a34cb28c4acbdf8a1deb80a7c5a05) changed that all sizes in
       the format are in bytes and not in words (4B)
    
    b) [gcov: make profile merging smarter]
       (72e0c742bd01f8e7e6dcca64042b9ad7e75979de) add a new checksum to the
       file header.
    
    Tested with GCC 7.5, 10.4, 12.2 and the current master.
    
    Link: https://lkml.kernel.org/r/624bda92-f307-30e9-9aaa-8cc678b2dfb2@suse.cz
    Signed-off-by: Martin Liska <mliska@suse.cz>
    Tested-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbf2c43b36e0c439fe4c47dd1cec78b18d54e980
Author: Chao Yu <chao@kernel.org>
Date:   Wed Sep 29 03:19:14 2021 +0800

    f2fs: fix wrong condition to trigger background checkpoint correctly
    
    commit cd6d697a6e2013a0a85f8b261b16c8cfd50c1f5f upstream.
    
    In f2fs_balance_fs_bg(), it needs to check both NAT_ENTRIES and INO_ENTRIES
    memory usage to decide whether we should skip background checkpoint, otherwise
    we may always skip checking INO_ENTRIES memory usage, so that INO_ENTRIES may
    potentially cause high memory footprint.
    
    Fixes: 493720a48543 ("f2fs: fix to avoid REQ_TIME and CP_TIME collision")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b19858803d7f2f61449a62116721e8230e6d2fd
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Oct 13 14:50:28 2022 +0200

    thermal: intel_powerclamp: Use first online CPU as control_cpu
    
    commit 4bb7f6c2781e46fc5bd00475a66df2ea30ef330d upstream.
    
    Commit 68b99e94a4a2 ("thermal: intel_powerclamp: Use get_cpu() instead
    of smp_processor_id() to avoid crash") fixed an issue related to using
    smp_processor_id() in preemptible context by replacing it with a pair
    of get_cpu()/put_cpu(), but what is needed there really is any online
    CPU and not necessarily the one currently running the code.  Arguably,
    getting the one that's running the code in there is confusing.
    
    For this reason, simply give the control CPU role to the first online
    one which automatically will be CPU0 if it is online, so one check
    can be dropped from the code for an added benefit.
    
    Link: https://lore.kernel.org/linux-pm/20221011113646.GA12080@duo.ucw.cz/
    Fixes: 68b99e94a4a2 ("thermal: intel_powerclamp: Use get_cpu() instead of smp_processor_id() to avoid crash")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Chen Yu <yu.c.chen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f039b43cbaea5e0700980c2f0052da05a70782e0
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Dec 20 06:33:30 2021 -0800

    inet: fully convert sk->sk_rx_dst to RCU rules
    
    commit 8f905c0e7354ef261360fb7535ea079b1082c105 upstream.
    
    syzbot reported various issues around early demux,
    one being included in this changelog [1]
    
    sk->sk_rx_dst is using RCU protection without clearly
    documenting it.
    
    And following sequences in tcp_v4_do_rcv()/tcp_v6_do_rcv()
    are not following standard RCU rules.
    
    [a]    dst_release(dst);
    [b]    sk->sk_rx_dst = NULL;
    
    They look wrong because a delete operation of RCU protected
    pointer is supposed to clear the pointer before
    the call_rcu()/synchronize_rcu() guarding actual memory freeing.
    
    In some cases indeed, dst could be freed before [b] is done.
    
    We could cheat by clearing sk_rx_dst before calling
    dst_release(), but this seems the right time to stick
    to standard RCU annotations and debugging facilities.
    
    [1]
    BUG: KASAN: use-after-free in dst_check include/net/dst.h:470 [inline]
    BUG: KASAN: use-after-free in tcp_v4_early_demux+0x95b/0x960 net/ipv4/tcp_ipv4.c:1792
    Read of size 2 at addr ffff88807f1cb73a by task syz-executor.5/9204
    
    CPU: 0 PID: 9204 Comm: syz-executor.5 Not tainted 5.16.0-rc5-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     print_address_description.constprop.0.cold+0x8d/0x320 mm/kasan/report.c:247
     __kasan_report mm/kasan/report.c:433 [inline]
     kasan_report.cold+0x83/0xdf mm/kasan/report.c:450
     dst_check include/net/dst.h:470 [inline]
     tcp_v4_early_demux+0x95b/0x960 net/ipv4/tcp_ipv4.c:1792
     ip_rcv_finish_core.constprop.0+0x15de/0x1e80 net/ipv4/ip_input.c:340
     ip_list_rcv_finish.constprop.0+0x1b2/0x6e0 net/ipv4/ip_input.c:583
     ip_sublist_rcv net/ipv4/ip_input.c:609 [inline]
     ip_list_rcv+0x34e/0x490 net/ipv4/ip_input.c:644
     __netif_receive_skb_list_ptype net/core/dev.c:5508 [inline]
     __netif_receive_skb_list_core+0x549/0x8e0 net/core/dev.c:5556
     __netif_receive_skb_list net/core/dev.c:5608 [inline]
     netif_receive_skb_list_internal+0x75e/0xd80 net/core/dev.c:5699
     gro_normal_list net/core/dev.c:5853 [inline]
     gro_normal_list net/core/dev.c:5849 [inline]
     napi_complete_done+0x1f1/0x880 net/core/dev.c:6590
     virtqueue_napi_complete drivers/net/virtio_net.c:339 [inline]
     virtnet_poll+0xca2/0x11b0 drivers/net/virtio_net.c:1557
     __napi_poll+0xaf/0x440 net/core/dev.c:7023
     napi_poll net/core/dev.c:7090 [inline]
     net_rx_action+0x801/0xb40 net/core/dev.c:7177
     __do_softirq+0x29b/0x9c2 kernel/softirq.c:558
     invoke_softirq kernel/softirq.c:432 [inline]
     __irq_exit_rcu+0x123/0x180 kernel/softirq.c:637
     irq_exit_rcu+0x5/0x20 kernel/softirq.c:649
     common_interrupt+0x52/0xc0 arch/x86/kernel/irq.c:240
     asm_common_interrupt+0x1e/0x40 arch/x86/include/asm/idtentry.h:629
    RIP: 0033:0x7f5e972bfd57
    Code: 39 d1 73 14 0f 1f 80 00 00 00 00 48 8b 50 f8 48 83 e8 08 48 39 ca 77 f3 48 39 c3 73 3e 48 89 13 48 8b 50 f8 48 89 38 49 8b 0e <48> 8b 3e 48 83 c3 08 48 83 c6 08 eb bc 48 39 d1 72 9e 48 39 d0 73
    RSP: 002b:00007fff8a413210 EFLAGS: 00000283
    RAX: 00007f5e97108990 RBX: 00007f5e97108338 RCX: ffffffff81d3aa45
    RDX: ffffffff81d3aa45 RSI: 00007f5e97108340 RDI: ffffffff81d3aa45
    RBP: 00007f5e97107eb8 R08: 00007f5e97108d88 R09: 0000000093c2e8d9
    R10: 0000000000000000 R11: 0000000000000000 R12: 00007f5e97107eb0
    R13: 00007f5e97108338 R14: 00007f5e97107ea8 R15: 0000000000000019
     </TASK>
    
    Allocated by task 13:
     kasan_save_stack+0x1e/0x50 mm/kasan/common.c:38
     kasan_set_track mm/kasan/common.c:46 [inline]
     set_alloc_info mm/kasan/common.c:434 [inline]
     __kasan_slab_alloc+0x90/0xc0 mm/kasan/common.c:467
     kasan_slab_alloc include/linux/kasan.h:259 [inline]
     slab_post_alloc_hook mm/slab.h:519 [inline]
     slab_alloc_node mm/slub.c:3234 [inline]
     slab_alloc mm/slub.c:3242 [inline]
     kmem_cache_alloc+0x202/0x3a0 mm/slub.c:3247
     dst_alloc+0x146/0x1f0 net/core/dst.c:92
     rt_dst_alloc+0x73/0x430 net/ipv4/route.c:1613
     ip_route_input_slow+0x1817/0x3a20 net/ipv4/route.c:2340
     ip_route_input_rcu net/ipv4/route.c:2470 [inline]
     ip_route_input_noref+0x116/0x2a0 net/ipv4/route.c:2415
     ip_rcv_finish_core.constprop.0+0x288/0x1e80 net/ipv4/ip_input.c:354
     ip_list_rcv_finish.constprop.0+0x1b2/0x6e0 net/ipv4/ip_input.c:583
     ip_sublist_rcv net/ipv4/ip_input.c:609 [inline]
     ip_list_rcv+0x34e/0x490 net/ipv4/ip_input.c:644
     __netif_receive_skb_list_ptype net/core/dev.c:5508 [inline]
     __netif_receive_skb_list_core+0x549/0x8e0 net/core/dev.c:5556
     __netif_receive_skb_list net/core/dev.c:5608 [inline]
     netif_receive_skb_list_internal+0x75e/0xd80 net/core/dev.c:5699
     gro_normal_list net/core/dev.c:5853 [inline]
     gro_normal_list net/core/dev.c:5849 [inline]
     napi_complete_done+0x1f1/0x880 net/core/dev.c:6590
     virtqueue_napi_complete drivers/net/virtio_net.c:339 [inline]
     virtnet_poll+0xca2/0x11b0 drivers/net/virtio_net.c:1557
     __napi_poll+0xaf/0x440 net/core/dev.c:7023
     napi_poll net/core/dev.c:7090 [inline]
     net_rx_action+0x801/0xb40 net/core/dev.c:7177
     __do_softirq+0x29b/0x9c2 kernel/softirq.c:558
    
    Freed by task 13:
     kasan_save_stack+0x1e/0x50 mm/kasan/common.c:38
     kasan_set_track+0x21/0x30 mm/kasan/common.c:46
     kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370
     ____kasan_slab_free mm/kasan/common.c:366 [inline]
     ____kasan_slab_free mm/kasan/common.c:328 [inline]
     __kasan_slab_free+0xff/0x130 mm/kasan/common.c:374
     kasan_slab_free include/linux/kasan.h:235 [inline]
     slab_free_hook mm/slub.c:1723 [inline]
     slab_free_freelist_hook+0x8b/0x1c0 mm/slub.c:1749
     slab_free mm/slub.c:3513 [inline]
     kmem_cache_free+0xbd/0x5d0 mm/slub.c:3530
     dst_destroy+0x2d6/0x3f0 net/core/dst.c:127
     rcu_do_batch kernel/rcu/tree.c:2506 [inline]
     rcu_core+0x7ab/0x1470 kernel/rcu/tree.c:2741
     __do_softirq+0x29b/0x9c2 kernel/softirq.c:558
    
    Last potentially related work creation:
     kasan_save_stack+0x1e/0x50 mm/kasan/common.c:38
     __kasan_record_aux_stack+0xf5/0x120 mm/kasan/generic.c:348
     __call_rcu kernel/rcu/tree.c:2985 [inline]
     call_rcu+0xb1/0x740 kernel/rcu/tree.c:3065
     dst_release net/core/dst.c:177 [inline]
     dst_release+0x79/0xe0 net/core/dst.c:167
     tcp_v4_do_rcv+0x612/0x8d0 net/ipv4/tcp_ipv4.c:1712
     sk_backlog_rcv include/net/sock.h:1030 [inline]
     __release_sock+0x134/0x3b0 net/core/sock.c:2768
     release_sock+0x54/0x1b0 net/core/sock.c:3300
     tcp_sendmsg+0x36/0x40 net/ipv4/tcp.c:1441
     inet_sendmsg+0x99/0xe0 net/ipv4/af_inet.c:819
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     sock_write_iter+0x289/0x3c0 net/socket.c:1057
     call_write_iter include/linux/fs.h:2162 [inline]
     new_sync_write+0x429/0x660 fs/read_write.c:503
     vfs_write+0x7cd/0xae0 fs/read_write.c:590
     ksys_write+0x1ee/0x250 fs/read_write.c:643
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    The buggy address belongs to the object at ffff88807f1cb700
     which belongs to the cache ip_dst_cache of size 176
    The buggy address is located 58 bytes inside of
     176-byte region [ffff88807f1cb700, ffff88807f1cb7b0)
    The buggy address belongs to the page:
    page:ffffea0001fc72c0 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x7f1cb
    flags: 0xfff00000000200(slab|node=0|zone=1|lastcpupid=0x7ff)
    raw: 00fff00000000200 dead000000000100 dead000000000122 ffff8881413bb780
    raw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    page_owner tracks the page as allocated
    page last allocated via order 0, migratetype Unmovable, gfp_mask 0x112a20(GFP_ATOMIC|__GFP_NOWARN|__GFP_NORETRY|__GFP_HARDWALL), pid 5, ts 108466983062, free_ts 108048976062
     prep_new_page mm/page_alloc.c:2418 [inline]
     get_page_from_freelist+0xa72/0x2f50 mm/page_alloc.c:4149
     __alloc_pages+0x1b2/0x500 mm/page_alloc.c:5369
     alloc_pages+0x1a7/0x300 mm/mempolicy.c:2191
     alloc_slab_page mm/slub.c:1793 [inline]
     allocate_slab mm/slub.c:1930 [inline]
     new_slab+0x32d/0x4a0 mm/slub.c:1993
     ___slab_alloc+0x918/0xfe0 mm/slub.c:3022
     __slab_alloc.constprop.0+0x4d/0xa0 mm/slub.c:3109
     slab_alloc_node mm/slub.c:3200 [inline]
     slab_alloc mm/slub.c:3242 [inline]
     kmem_cache_alloc+0x35c/0x3a0 mm/slub.c:3247
     dst_alloc+0x146/0x1f0 net/core/dst.c:92
     rt_dst_alloc+0x73/0x430 net/ipv4/route.c:1613
     __mkroute_output net/ipv4/route.c:2564 [inline]
     ip_route_output_key_hash_rcu+0x921/0x2d00 net/ipv4/route.c:2791
     ip_route_output_key_hash+0x18b/0x300 net/ipv4/route.c:2619
     __ip_route_output_key include/net/route.h:126 [inline]
     ip_route_output_flow+0x23/0x150 net/ipv4/route.c:2850
     ip_route_output_key include/net/route.h:142 [inline]
     geneve_get_v4_rt+0x3a6/0x830 drivers/net/geneve.c:809
     geneve_xmit_skb drivers/net/geneve.c:899 [inline]
     geneve_xmit+0xc4a/0x3540 drivers/net/geneve.c:1082
     __netdev_start_xmit include/linux/netdevice.h:4994 [inline]
     netdev_start_xmit include/linux/netdevice.h:5008 [inline]
     xmit_one net/core/dev.c:3590 [inline]
     dev_hard_start_xmit+0x1eb/0x920 net/core/dev.c:3606
     __dev_queue_xmit+0x299a/0x3650 net/core/dev.c:4229
    page last free stack trace:
     reset_page_owner include/linux/page_owner.h:24 [inline]
     free_pages_prepare mm/page_alloc.c:1338 [inline]
     free_pcp_prepare+0x374/0x870 mm/page_alloc.c:1389
     free_unref_page_prepare mm/page_alloc.c:3309 [inline]
     free_unref_page+0x19/0x690 mm/page_alloc.c:3388
     qlink_free mm/kasan/quarantine.c:146 [inline]
     qlist_free_all+0x5a/0xc0 mm/kasan/quarantine.c:165
     kasan_quarantine_reduce+0x180/0x200 mm/kasan/quarantine.c:272
     __kasan_slab_alloc+0xa2/0xc0 mm/kasan/common.c:444
     kasan_slab_alloc include/linux/kasan.h:259 [inline]
     slab_post_alloc_hook mm/slab.h:519 [inline]
     slab_alloc_node mm/slub.c:3234 [inline]
     kmem_cache_alloc_node+0x255/0x3f0 mm/slub.c:3270
     __alloc_skb+0x215/0x340 net/core/skbuff.c:414
     alloc_skb include/linux/skbuff.h:1126 [inline]
     alloc_skb_with_frags+0x93/0x620 net/core/skbuff.c:6078
     sock_alloc_send_pskb+0x783/0x910 net/core/sock.c:2575
     mld_newpack+0x1df/0x770 net/ipv6/mcast.c:1754
     add_grhead+0x265/0x330 net/ipv6/mcast.c:1857
     add_grec+0x1053/0x14e0 net/ipv6/mcast.c:1995
     mld_send_initial_cr.part.0+0xf6/0x230 net/ipv6/mcast.c:2242
     mld_send_initial_cr net/ipv6/mcast.c:1232 [inline]
     mld_dad_work+0x1d3/0x690 net/ipv6/mcast.c:2268
     process_one_work+0x9b2/0x1690 kernel/workqueue.c:2298
     worker_thread+0x658/0x11f0 kernel/workqueue.c:2445
    
    Memory state around the buggy address:
     ffff88807f1cb600: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff88807f1cb680: fb fb fb fb fb fb fc fc fc fc fc fc fc fc fc fc
    >ffff88807f1cb700: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                            ^
     ffff88807f1cb780: fb fb fb fb fb fb fc fc fc fc fc fc fc fc fc fc
     ffff88807f1cb800: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    
    Fixes: 41063e9dd119 ("ipv4: Early TCP socket demux.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20211220143330.680945-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    [cmllamas: fixed trivial merge conflict]
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67de22cb0b6c6a6a71a472dbe8f0b3f3eb60565d
Author: Jerry Lee 李修賢 <jerrylee@qnap.com>
Date:   Mon Jul 18 10:25:19 2022 +0000

    ext4: continue to expand file system when the target size doesn't reach
    
    commit df3cb754d13d2cd5490db9b8d536311f8413a92e upstream.
    
    When expanding a file system from (16TiB-2MiB) to 18TiB, the operation
    exits early which leads to result inconsistency between resize2fs and
    Ext4 kernel driver.
    
    === before ===
    ○ → resize2fs /dev/mapper/thin
    resize2fs 1.45.5 (07-Jan-2020)
    Filesystem at /dev/mapper/thin is mounted on /mnt/test; on-line resizing required
    old_desc_blocks = 2048, new_desc_blocks = 2304
    The filesystem on /dev/mapper/thin is now 4831837696 (4k) blocks long.
    
    [  865.186308] EXT4-fs (dm-5): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
    [  912.091502] dm-4: detected capacity change from 34359738368 to 38654705664
    [  970.030550] dm-5: detected capacity change from 34359734272 to 38654701568
    [ 1000.012751] EXT4-fs (dm-5): resizing filesystem from 4294966784 to 4831837696 blocks
    [ 1000.012878] EXT4-fs (dm-5): resized filesystem to 4294967296
    
    === after ===
    [  129.104898] EXT4-fs (dm-5): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
    [  143.773630] dm-4: detected capacity change from 34359738368 to 38654705664
    [  198.203246] dm-5: detected capacity change from 34359734272 to 38654701568
    [  207.918603] EXT4-fs (dm-5): resizing filesystem from 4294966784 to 4831837696 blocks
    [  207.918754] EXT4-fs (dm-5): resizing filesystem from 4294967296 to 4831837696 blocks
    [  207.918758] EXT4-fs (dm-5): Converting file system to meta_bg
    [  207.918790] EXT4-fs (dm-5): resizing filesystem from 4294967296 to 4831837696 blocks
    [  221.454050] EXT4-fs (dm-5): resized to 4658298880 blocks
    [  227.634613] EXT4-fs (dm-5): resized filesystem to 4831837696
    
    Signed-off-by: Jerry Lee <jerrylee@qnap.com>
    Link: https://lore.kernel.org/r/PU1PR04MB22635E739BD21150DC182AC6A18C9@PU1PR04MB2263.apcprd04.prod.outlook.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 357db159e965efa6a0b7b6f9efa1c34bf876db2d
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Oct 17 19:07:46 2022 -0600

    Revert "drm/amdgpu: use dirty framebuffer helper"
    
    This reverts commit 867b2b2b6802fb3995a0065fc39e0e7e20d8004d which is
    commit 66f99628eb24409cb8feb5061f78283c8b65f820 upstream.
    
    With this commit, dmesg fills up with the following messages and drm
    initialization takes a very long time. This commit has bee reverted
    from 5.4
    
    [drm] Fence fallback timer expired on ring sdma0
    [drm] Fence fallback timer expired on ring gfx
    [drm] Fence fallback timer expired on ring sdma0
    [drm] Fence fallback timer expired on ring gfx
    [drm] Fence fallback timer expired on ring sdma0
    [drm] Fence fallback timer expired on ring sdma0
    [drm] Fence fallback timer expired on ring sdma0
    [drm] Fence fallback timer expired on ring gfx
    
    Cc: <stable@vger.kernel.org>    # 5.10
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98ab15bfdcda748aa1ecf2d91dede893934bca60
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Oct 17 19:07:45 2022 -0600

    Revert "drm/amdgpu: move nbio sdma_doorbell_range() into sdma code for vega"
    
    This reverts commit 9f55f36f749a7608eeef57d7d72991a9bd557341 which is
    commit e3163bc8ffdfdb405e10530b140135b2ee487f89 upstream.
    
    This commit causes repeated WARN_ONs from
    
    drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amd
    gpu_dm.c:7391 amdgpu_dm_atomic_commit_tail+0x23b9/0x2430 [amdgpu]
    
    dmesg fills up with the following messages and drm initialization takes
    a very long time.
    
    Cc: <stable@vger.kernel.org>    # 5.10
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 791489a5c56396ddfed75fc525066d4738dace46
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Tue Oct 4 21:47:50 2022 -0400

    net/ieee802154: don't warn zero-sized raw_sendmsg()
    
    [ Upstream commit b12e924a2f5b960373459c8f8a514f887adf5cac ]
    
    syzbot is hitting skb_assert_len() warning at __dev_queue_xmit() [1],
    for PF_IEEE802154 socket's zero-sized raw_sendmsg() request is hitting
    __dev_queue_xmit() with skb->len == 0.
    
    Since PF_IEEE802154 socket's zero-sized raw_sendmsg() request was
    able to return 0, don't call __dev_queue_xmit() if packet length is 0.
    
      ----------
      #include <sys/socket.h>
      #include <netinet/in.h>
    
      int main(int argc, char *argv[])
      {
        struct sockaddr_in addr = { .sin_family = AF_INET, .sin_addr.s_addr = htonl(INADDR_LOOPBACK) };
        struct iovec iov = { };
        struct msghdr hdr = { .msg_name = &addr, .msg_namelen = sizeof(addr), .msg_iov = &iov, .msg_iovlen = 1 };
        sendmsg(socket(PF_IEEE802154, SOCK_RAW, 0), &hdr, 0);
        return 0;
      }
      ----------
    
    Note that this might be a sign that commit fd1894224407c484 ("bpf: Don't
    redirect packets with invalid pkt_len") should be reverted, for
    skb->len == 0 was acceptable for at least PF_IEEE802154 socket.
    
    Link: https://syzkaller.appspot.com/bug?extid=5ea725c25d06fb9114c4 [1]
    Reported-by: syzbot <syzbot+5ea725c25d06fb9114c4@syzkaller.appspotmail.com>
    Fixes: fd1894224407c484 ("bpf: Don't redirect packets with invalid pkt_len")
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20221005014750.3685555-2-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a96336a5f28b91eba4c5575e0434cbf02d8597fd
Author: Alexander Aring <aahringo@redhat.com>
Date:   Tue Oct 4 21:47:49 2022 -0400

    Revert "net/ieee802154: reject zero-sized raw_sendmsg()"
    
    [ Upstream commit 2eb2756f6c9e9621e022d78321ce40a62c4520b5 ]
    
    This reverts commit 3a4d061c699bd3eedc80dc97a4b2a2e1af83c6f5.
    
    There is a v2 which does return zero if zero length is given.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20221005014750.3685555-1-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc54ff9fc4a4886f4cd409054c6505ca352a146a
Author: Alexander Aring <aahringo@redhat.com>
Date:   Wed Oct 5 22:02:37 2022 -0400

    net: ieee802154: return -EINVAL for unknown addr type
    
    commit 30393181fdbc1608cc683b4ee99dcce05ffcc8c7 upstream.
    
    This patch adds handling to return -EINVAL for an unknown addr type. The
    current behaviour is to return 0 as successful but the size of an
    unknown addr type is not defined and should return an error like -EINVAL.
    
    Fixes: 94160108a70c ("net/ieee802154: fix uninit value bug in dgram_sendmsg")
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c33966759ea1b4040c08dacda99ef623c0ca29
Author: Liu Shixin <liushixin2@huawei.com>
Date:   Fri Sep 23 12:21:13 2022 +0800

    mm: hugetlb: fix UAF in hugetlb_handle_userfault
    
    commit 958f32ce832ba781ac20e11bb2d12a9352ea28fc upstream.
    
    The vma_lock and hugetlb_fault_mutex are dropped before handling userfault
    and reacquire them again after handle_userfault(), but reacquire the
    vma_lock could lead to UAF[1,2] due to the following race,
    
    hugetlb_fault
      hugetlb_no_page
        /*unlock vma_lock */
        hugetlb_handle_userfault
          handle_userfault
            /* unlock mm->mmap_lock*/
                                               vm_mmap_pgoff
                                                 do_mmap
                                                   mmap_region
                                                     munmap_vma_range
                                                       /* clean old vma */
            /* lock vma_lock again  <--- UAF */
        /* unlock vma_lock */
    
    Since the vma_lock will unlock immediately after
    hugetlb_handle_userfault(), let's drop the unneeded lock and unlock in
    hugetlb_handle_userfault() to fix the issue.
    
    [1] https://lore.kernel.org/linux-mm/000000000000d5e00a05e834962e@google.com/
    [2] https://lore.kernel.org/linux-mm/20220921014457.1668-1-liuzixian4@huawei.com/
    Link: https://lkml.kernel.org/r/20220923042113.137273-1-liushixin2@huawei.com
    Fixes: 1a1aad8a9b7b ("userfaultfd: hugetlbfs: add userfaultfd hugetlb hook")
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Reported-by: syzbot+193f9cee8638750b23cf@syzkaller.appspotmail.com
    Reported-by: Liu Zixian <liuzixian4@huawei.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Muchun Song <songmuchun@bytedance.com>
    Cc: Sidhartha Kumar <sidhartha.kumar@oracle.com>
    Cc: <stable@vger.kernel.org>    [4.14+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c378c479c5175833bb22ff71974cda47d7b05401
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Sun Oct 16 23:31:26 2022 +0100

    io_uring/af_unix: defer registered files gc to io_uring release
    
    [ upstream commit 0091bfc81741b8d3aeb3b7ab8636f911b2de6e80 ]
    
    Instead of putting io_uring's registered files in unix_gc() we want it
    to be done by io_uring itself. The trick here is to consider io_uring
    registered files for cycle detection but not actually putting them down.
    Because io_uring can't register other ring instances, this will remove
    all refs to the ring file triggering the ->release path and clean up
    with io_ring_ctx_free().
    
    Cc: stable@vger.kernel.org
    Fixes: 6b06314c47e1 ("io_uring: add file set registration")
    Reported-and-tested-by: David Bouman <dbouman03@gmail.com>
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    [axboe: add kerneldoc comment to skb, fold in skb leak fix]
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67cbc8865a66533fa08c1c13fe9acbaaae63c403
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Sun Oct 16 23:31:25 2022 +0100

    io_uring: correct pinned_vm accounting
    
    [ upstream commit 42b6419d0aba47c5d8644cdc0b68502254671de5 ]
    
    ->mm_account should be released only after we free all registered
    buffers, otherwise __io_sqe_buffers_unregister() will see a NULL
    ->mm_account and skip locked_vm accounting.
    
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/6d798f65ed4ab8db3664c4d3397d4af16ca98846.1664849932.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 904f881b57360cf85de962d84d8614d94431f60e
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Fri Sep 16 23:17:07 2022 +0300

    arm64: topology: fix possible overflow in amu_fie_setup()
    
    commit d4955c0ad77dbc684fc716387070ac24801b8bca upstream.
    
    cpufreq_get_hw_max_freq() returns max frequency in kHz as *unsigned int*,
    while freq_inv_set_max_ratio() gets passed this frequency in Hz as 'u64'.
    Multiplying max frequency by 1000 can potentially result in overflow --
    multiplying by 1000ULL instead should avoid that...
    
    Found by Linux Verification Center (linuxtesting.org) with the SVACE static
    analysis tool.
    
    Fixes: cd0ed03a8903 ("arm64: use activity monitors for frequency invariance")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/01493d64-2bce-d968-86dc-11a122a9c07d@omp.ru
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5dc2f25789dde48e518bfb9ded5cc12a0166fc0
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Oct 12 11:22:58 2022 +0300

    perf intel-pt: Fix segfault in intel_pt_print_info() with uClibc
    
    commit 5a3d47071f0ced0431ef82a5fb6bd077ed9493db upstream.
    
    uClibc segfaulted because NULL was passed as the format to fprintf().
    
    That happened because one of the format strings was missing and
    intel_pt_print_info() didn't check that before calling fprintf().
    
    Add the missing format string, and check format is not NULL before calling
    fprintf().
    
    Fixes: 11fa7cb86b56d361 ("perf tools: Pass Intel PT information for decoding MTC and CYC")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20221012082259.22394-2-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b4e849777a9a5828844259059981f8f8265687f
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Mon Sep 26 10:45:09 2022 +0200

    clk: bcm2835: Make peripheral PLLC critical
    
    [ Upstream commit 6c5422851d8be8c7451e968fd2e6da41b6109e17 ]
    
    When testing for a series affecting the VEC, it was discovered that
    turning off and on the VEC clock is crashing the system.
    
    It turns out that, when disabling the VEC clock, it's the only child of
    the PLLC-per clock which will also get disabled. The source of the crash
    is PLLC-per being disabled.
    
    It's likely that some other device might not take a clock reference that
    it actually needs, but it's unclear which at this point. Let's make
    PLLC-per critical so that we don't have that crash.
    
    Reported-by: Noralf Trønnes <noralf@tronnes.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220926084509.12233-1-maxime@cerno.tech
    Reviewed-by: Stefan Wahren <stefan.wahren@i2se.com>
    Acked-by: Noralf Trønnes <noralf@tronnes.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8bbae3236ab7dccc66c42bc3f7cdbcfc0786e54
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Thu Sep 22 21:48:44 2022 +0800

    usb: idmouse: fix an uninit-value in idmouse_open
    
    [ Upstream commit bce2b0539933e485d22d6f6f076c0fcd6f185c4c ]
    
    In idmouse_create_image, if any ftip_command fails, it will
    go to the reset label. However, this leads to the data in
    bulk_in_buffer[HEADER..IMGSIZE] uninitialized. And the check
    for valid image incurs an uninitialized dereference.
    
    Fix this by moving the check before reset label since this
    check only be valid if the data after bulk_in_buffer[HEADER]
    has concrete data.
    
    Note that this is found by KMSAN, so only kernel compilation
    is tested.
    
    Reported-by: syzbot+79832d33eb89fb3cd092@syzkaller.appspotmail.com
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Link: https://lore.kernel.org/r/20220922134847.1101921-1-dzm91@hust.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5bb45f47b37d10f010355686b28c9ebacb361d4
Author: Varun Prakash <varun@chelsio.com>
Date:   Wed Sep 21 00:06:49 2022 +0530

    nvmet-tcp: add bounds check on Transfer Tag
    
    [ Upstream commit b6a545ffa2c192b1e6da4a7924edac5ba9f4ea2b ]
    
    ttag is used as an index to get cmd in nvmet_tcp_handle_h2c_data_pdu(),
    add a bounds check to avoid out-of-bounds access.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b79da0080d81063868d1cf4715d67ed5075dd9cc
Author: Keith Busch <kbusch@kernel.org>
Date:   Mon Sep 19 12:45:08 2022 -0700

    nvme: copy firmware_rev on each init
    
    [ Upstream commit a8eb6c1ba48bddea82e8d74cbe6e119f006be97d ]
    
    The firmware revision can change on after a reset so copy the most
    recent info each time instead of just the first time, otherwise the
    sysfs firmware_rev entry may contain stale data.
    
    Reported-by: Jeff Lien <jeff.lien@wdc.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Reviewed-by: Chao Leng <lengchao@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6cc39db24a63f68314473621020ed8cad7be423
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Fri Sep 9 19:27:21 2022 +0800

    staging: rtl8723bs: fix a potential memory leak in rtw_init_cmd_priv()
    
    [ Upstream commit 708056fba733a73d926772ea4ce9a42d240345da ]
    
    In rtw_init_cmd_priv(), if `pcmdpriv->rsp_allocated_buf` is allocated
    in failure, then `pcmdpriv->cmd_allocated_buf` will be not properly
    released. Besides, considering there are only two error paths and the
    first one can directly return, so we do not need implicitly jump to the
    `exit` tag to execute the error handler.
    
    So this patch added `kfree(pcmdpriv->cmd_allocated_buf);` on the error
    path to release the resource and simplified the return logic of
    rtw_init_cmd_priv(). As there is no proper device to test with, no runtime
    testing was performed.
    
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Link: https://lore.kernel.org/r/tencent_2B7931B79BA38E22205C5A09EFDF11E48805@qq.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a5a34ed9d68ffb008a60946ac1619b40a111716
Author: sunghwan jung <onenowy@gmail.com>
Date:   Tue Sep 13 20:49:13 2022 +0900

    Revert "usb: storage: Add quirk for Samsung Fit flash"
    
    [ Upstream commit ad5dbfc123e6ffbbde194e2a4603323e09f741ee ]
    
    This reverts commit 86d92f5465958752481269348d474414dccb1552,
    which fix the timeout issue for "Samsung Fit Flash".
    
    But the commit affects not only "Samsung Fit Flash" but also other usb
    storages that use the same controller and causes severe performance
    regression.
    
     # hdparm -t /dev/sda (without the quirk)
     Timing buffered disk reads: 622 MB in  3.01 seconds = 206.66 MB/sec
    
     # hdparm -t /dev/sda (with the quirk)
     Timing buffered disk reads: 220 MB in  3.00 seconds =  73.32 MB/sec
    
    The commit author mentioned that "Issue was reproduced after device has
    bad block", so this quirk should be applied when we have the timeout
    issue with a device that has bad blocks.
    
    We revert the commit so that we apply this quirk by adding kernel
    paramters using a bootloader or other ways when we really need it,
    without the performance regression with devices that don't have the
    issue.
    
    Signed-off-by: sunghwan jung <onenowy@gmail.com>
    Link: https://lore.kernel.org/r/20220913114913.3073-1-onenowy@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acf0006f2b2b2ca672988875fd154429aafb2a9b
Author: Robin Guo <guoweibin@inspur.com>
Date:   Tue Sep 6 10:21:19 2022 +0800

    usb: musb: Fix musb_gadget.c rxstate overflow bug
    
    [ Upstream commit eea4c860c3b366369eff0489d94ee4f0571d467d ]
    
    The usb function device call musb_gadget_queue() adds the passed
    request to musb_ep::req_list,If the (request->length > musb_ep->packet_sz)
    and (is_buffer_mapped(req) return false),the rxstate() will copy all data
    in fifo to request->buf which may cause request->buf out of bounds.
    
    Fix it by add the length check :
    fifocnt = min_t(unsigned, request->length - request->actual, fifocnt);
    
    Signed-off-by: Robin Guo <guoweibin@inspur.com>
    Link: https://lore.kernel.org/r/20220906102119.1b071d07a8391ff115e6d1ef@inspur.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91271a3e772e180bbb8afb114c72fd294a02f93d
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Wed Sep 21 15:34:45 2022 +0300

    usb: host: xhci: Fix potential memory leak in xhci_alloc_stream_info()
    
    [ Upstream commit 7e271f42a5cc3768cd2622b929ba66859ae21f97 ]
    
    xhci_alloc_stream_info() allocates stream context array for stream_info
    ->stream_ctx_array with xhci_alloc_stream_ctx(). When some error occurs,
    stream_info->stream_ctx_array is not released, which will lead to a
    memory leak.
    
    We can fix it by releasing the stream_info->stream_ctx_array with
    xhci_free_stream_ctx() on the error path to avoid the potential memory
    leak.
    
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220921123450.671459-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 782b3e71c957991ac8ae53318bc369049d49bb53
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Wed Sep 21 10:28:37 2022 -0600

    md/raid5: Wait for MD_SB_CHANGE_PENDING in raid5d
    
    [ Upstream commit 5e2cf333b7bd5d3e62595a44d598a254c697cd74 ]
    
    A complicated deadlock exists when using the journal and an elevated
    group_thrtead_cnt. It was found with loop devices, but its not clear
    whether it can be seen with real disks. The deadlock can occur simply
    by writing data with an fio script.
    
    When the deadlock occurs, multiple threads will hang in different ways:
    
     1) The group threads will hang in the blk-wbt code with bios waiting to
        be submitted to the block layer:
    
            io_schedule+0x70/0xb0
            rq_qos_wait+0x153/0x210
            wbt_wait+0x115/0x1b0
            io_schedule+0x70/0xb0
            rq_qos_wait+0x153/0x210
            wbt_wait+0x115/0x1b0
            __rq_qos_throttle+0x38/0x60
            blk_mq_submit_bio+0x589/0xcd0
            wbt_wait+0x115/0x1b0
            __rq_qos_throttle+0x38/0x60
            blk_mq_submit_bio+0x589/0xcd0
            __submit_bio+0xe6/0x100
            submit_bio_noacct_nocheck+0x42e/0x470
            submit_bio_noacct+0x4c2/0xbb0
            ops_run_io+0x46b/0x1a30
            handle_stripe+0xcd3/0x36b0
            handle_active_stripes.constprop.0+0x6f6/0xa60
            raid5_do_work+0x177/0x330
    
        Or:
            io_schedule+0x70/0xb0
            rq_qos_wait+0x153/0x210
            wbt_wait+0x115/0x1b0
            __rq_qos_throttle+0x38/0x60
            blk_mq_submit_bio+0x589/0xcd0
            __submit_bio+0xe6/0x100
            submit_bio_noacct_nocheck+0x42e/0x470
            submit_bio_noacct+0x4c2/0xbb0
            flush_deferred_bios+0x136/0x170
            raid5_do_work+0x262/0x330
    
     2) The r5l_reclaim thread will hang in the same way, submitting a
        bio to the block layer:
    
            io_schedule+0x70/0xb0
            rq_qos_wait+0x153/0x210
            wbt_wait+0x115/0x1b0
            __rq_qos_throttle+0x38/0x60
            blk_mq_submit_bio+0x589/0xcd0
            __submit_bio+0xe6/0x100
            submit_bio_noacct_nocheck+0x42e/0x470
            submit_bio_noacct+0x4c2/0xbb0
            submit_bio+0x3f/0xf0
            md_super_write+0x12f/0x1b0
            md_update_sb.part.0+0x7c6/0xff0
            md_update_sb+0x30/0x60
            r5l_do_reclaim+0x4f9/0x5e0
            r5l_reclaim_thread+0x69/0x30b
    
        However, before hanging, the MD_SB_CHANGE_PENDING flag will be
        set for sb_flags in r5l_write_super_and_discard_space(). This
        flag will never be cleared because the submit_bio() call never
        returns.
    
     3) Due to the MD_SB_CHANGE_PENDING flag being set, handle_stripe()
        will do no processing on any pending stripes and re-set
        STRIPE_HANDLE. This will cause the raid5d thread to enter an
        infinite loop, constantly trying to handle the same stripes
        stuck in the queue.
    
        The raid5d thread has a blk_plug that holds a number of bios
        that are also stuck waiting seeing the thread is in a loop
        that never schedules. These bios have been accounted for by
        blk-wbt thus preventing the other threads above from
        continuing when they try to submit bios. --Deadlock.
    
    To fix this, add the same wait_event() that is used in raid5_do_work()
    to raid5d() such that if MD_SB_CHANGE_PENDING is set, the thread will
    schedule and wait until the flag is cleared. The schedule action will
    flush the plug which will allow the r5l_reclaim thread to continue,
    thus preventing the deadlock.
    
    However, md_check_recovery() calls can also clear MD_SB_CHANGE_PENDING
    from the same thread and can thus deadlock if the thread is put to
    sleep. So avoid waiting if md_check_recovery() is being called in the
    loop.
    
    It's not clear when the deadlock was introduced, but the similar
    wait_event() call in raid5_do_work() was added in 2017 by this
    commit:
    
        16d997b78b15 ("md/raid5: simplfy delaying of writes while metadata
                       is updated.")
    
    Link: https://lore.kernel.org/r/7f3b87b6-b52a-f737-51d7-a4eec5c44112@deltatee.com
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dbcca76435a606a352c794956e6df62eedd3a353
Author: Hyunwoo Kim <imv4bel@gmail.com>
Date:   Sun Sep 4 12:31:15 2022 -0700

    HID: roccat: Fix use-after-free in roccat_read()
    
    [ Upstream commit cacdb14b1c8d3804a3a7d31773bc7569837b71a4 ]
    
    roccat_report_event() is responsible for registering
    roccat-related reports in struct roccat_device.
    
    int roccat_report_event(int minor, u8 const *data)
    {
            struct roccat_device *device;
            struct roccat_reader *reader;
            struct roccat_report *report;
            uint8_t *new_value;
    
            device = devices[minor];
    
            new_value = kmemdup(data, device->report_size, GFP_ATOMIC);
            if (!new_value)
                    return -ENOMEM;
    
            report = &device->cbuf[device->cbuf_end];
    
            /* passing NULL is safe */
            kfree(report->value);
            ...
    
    The registered report is stored in the struct roccat_device member
    "struct roccat_report cbuf[ROCCAT_CBUF_SIZE];".
    If more reports are received than the "ROCCAT_CBUF_SIZE" value,
    kfree() the saved report from cbuf[0] and allocates a new reprot.
    Since there is no lock when this kfree() is performed,
    kfree() can be performed even while reading the saved report.
    
    static ssize_t roccat_read(struct file *file, char __user *buffer,
                    size_t count, loff_t *ppos)
    {
            struct roccat_reader *reader = file->private_data;
            struct roccat_device *device = reader->device;
            struct roccat_report *report;
            ssize_t retval = 0, len;
            DECLARE_WAITQUEUE(wait, current);
    
            mutex_lock(&device->cbuf_lock);
    
            ...
    
            report = &device->cbuf[reader->cbuf_start];
            /*
             * If report is larger than requested amount of data, rest of report
             * is lost!
             */
            len = device->report_size > count ? count : device->report_size;
    
            if (copy_to_user(buffer, report->value, len)) {
                    retval = -EFAULT;
                    goto exit_unlock;
            }
            ...
    
    The roccat_read() function receives the device->cbuf report and
    delivers it to the user through copy_to_user().
    If the N+ROCCAT_CBUF_SIZE th report is received while copying of
    the Nth report->value is in progress, the pointer that copy_to_user()
    is working on is kfree()ed and UAF read may occur. (race condition)
    
    Since the device node of this driver does not set separate permissions,
    this is not a security vulnerability, but because it is used for
    requesting screen display of profile or dpi settings,
    a user using the roccat device can apply udev to this device node or
    There is a possibility to use it by giving.
    
    Signed-off-by: Hyunwoo Kim <imv4bel@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f00c049ede46226ee4ececbbcb547abe35b1a45b
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Tue Sep 20 01:57:11 2022 +0800

    soundwire: intel: fix error handling on dai registration issues
    
    [ Upstream commit c6867cda906aadbce5e71efde9c78a26108b2bad ]
    
    The call to intel_register_dai() may fail because of memory allocation
    issues or problems reported by the ASoC core. In all cases, when a
    error is thrown the component is not registered, it's invalid to
    unregister it.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Rander Wang <rander.wang@intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20220919175721.354679-2-yung-chuan.liao@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f04a673d4a27438d19b08a4d2842c5426b1cbeb5
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Fri Sep 16 11:35:05 2022 +0100

    soundwire: cadence: Don't overwrite msg->buf during write commands
    
    [ Upstream commit ba05b39d265bdd16913f7684600d9d41e2796745 ]
    
    The buf passed in struct sdw_msg must only be written for a READ,
    in that case the RDATA part of the response is the data value of the
    register.
    
    For a write command there is no RDATA, and buf should be assumed to
    be const and unmodifable. The original caller should not expect its data
    buffer to be corrupted by an sdw_nwrite().
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20220916103505.1562210-1-rf@opensource.cirrus.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c263516c2c20df9c29f33baeb4a817af7212fb69
Author: Coly Li <colyli@suse.de>
Date:   Tue Sep 20 00:16:47 2022 +0800

    bcache: fix set_at_max_writeback_rate() for multiple attached devices
    
    [ Upstream commit d2d05b88035d2d51a5bb6c5afec88a0880c73df4 ]
    
    Inside set_at_max_writeback_rate() the calculation in following if()
    check is wrong,
            if (atomic_inc_return(&c->idle_counter) <
                atomic_read(&c->attached_dev_nr) * 6)
    
    Because each attached backing device has its own writeback thread
    running and increasing c->idle_counter, the counter increates much
    faster than expected. The correct calculation should be,
            (counter / dev_nr) < dev_nr * 6
    which equals to,
            counter < dev_nr * dev_nr * 6
    
    This patch fixes the above mistake with correct calculation, and helper
    routine idle_counter_exceeded() is added to make code be more clear.
    
    Reported-by: Mingzhe Zou <mingzhe.zou@easystack.cn>
    Signed-off-by: Coly Li <colyli@suse.de>
    Acked-by: Mingzhe Zou <mingzhe.zou@easystack.cn>
    Link: https://lore.kernel.org/r/20220919161647.81238-6-colyli@suse.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcad2ac86399e7cc2df3170b4464821f1247c792
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Sep 9 22:36:06 2022 +0300

    ata: libahci_platform: Sanity check the DT child nodes number
    
    [ Upstream commit 3c132ea6508b34956e5ed88d04936983ec230601 ]
    
    Having greater than AHCI_MAX_PORTS (32) ports detected isn't that critical
    from the further AHCI-platform initialization point of view since
    exceeding the ports upper limit will cause allocating more resources than
    will be used afterwards. But detecting too many child DT-nodes doesn't
    seem right since it's very unlikely to have it on an ordinary platform. In
    accordance with the AHCI specification there can't be more than 32 ports
    implemented at least due to having the CAP.NP field of 5 bits wide and the
    PI register of dword size. Thus if such situation is found the DTB must
    have been corrupted and the data read from it shouldn't be reliable. Let's
    consider that as an erroneous situation and halt further resources
    allocation.
    
    Note it's logically more correct to have the nports set only after the
    initialization value is checked for being sane. So while at it let's make
    sure nports is assigned with a correct value.
    
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19c010ae44f0ce52b5436080492a61a092ee0cf4
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Mon Aug 29 10:22:38 2022 +0800

    blk-throttle: prevent overflow while calculating wait time
    
    [ Upstream commit 8d6bbaada2e0a65f9012ac4c2506460160e7237a ]
    
    There is a problem found by code review in tg_with_in_bps_limit() that
    'bps_limit * jiffy_elapsed_rnd' might overflow. Fix the problem by
    calling mul_u64_u64_div_u64() instead.
    
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Link: https://lore.kernel.org/r/20220829022240.3348319-3-yukuai1@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b3cebeca99e8e0aa4fa57faac8dbf41e967317a
Author: Nam Cao <namcaov@gmail.com>
Date:   Fri Sep 9 16:13:39 2022 +0200

    staging: vt6655: fix potential memory leak
    
    [ Upstream commit c8ff91535880d41b49699b3829fb6151942de29e ]
    
    In function device_init_td0_ring, memory is allocated for member
    td_info of priv->apTD0Rings[i], with i increasing from 0. In case of
    allocation failure, the memory is freed in reversed order, with i
    decreasing to 0. However, the case i=0 is left out and thus memory is
    leaked.
    
    Modify the memory freeing loop to include the case i=0.
    
    Tested-by: Philipp Hortmann <philipp.g.hortmann@gmail.com>
    Signed-off-by: Nam Cao <namcaov@gmail.com>
    Link: https://lore.kernel.org/r/20220909141338.19343-1-namcaov@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89f305a71418591cdda18180f712f91c9820f03b
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Sat Aug 27 07:32:23 2022 +0000

    power: supply: adp5061: fix out-of-bounds read in adp5061_get_chg_type()
    
    [ Upstream commit 9d47e01b9d807808224347935562f7043a358054 ]
    
    ADP5061_CHG_STATUS_1_CHG_STATUS is masked with 0x07, which means a length
    of 8, but adp5061_chg_type array size is 4, may end up reading 4 elements
    beyond the end of the adp5061_chg_type[] array.
    
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Acked-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2700f98b3f4dd19fb4315b70581e5caff89eb49
Author: Shigeru Yoshida <syoshida@redhat.com>
Date:   Thu Sep 8 01:35:02 2022 +0900

    nbd: Fix hung when signal interrupts nbd_start_device_ioctl()
    
    [ Upstream commit 1de7c3cf48fc41cd95adb12bd1ea9033a917798a ]
    
    syzbot reported hung task [1].  The following program is a simplified
    version of the reproducer:
    
    int main(void)
    {
            int sv[2], fd;
    
            if (socketpair(AF_UNIX, SOCK_STREAM, 0, sv) < 0)
                    return 1;
            if ((fd = open("/dev/nbd0", 0)) < 0)
                    return 1;
            if (ioctl(fd, NBD_SET_SIZE_BLOCKS, 0x81) < 0)
                    return 1;
            if (ioctl(fd, NBD_SET_SOCK, sv[0]) < 0)
                    return 1;
            if (ioctl(fd, NBD_DO_IT) < 0)
                    return 1;
            return 0;
    }
    
    When signal interrupt nbd_start_device_ioctl() waiting the condition
    atomic_read(&config->recv_threads) == 0, the task can hung because it
    waits the completion of the inflight IOs.
    
    This patch fixes the issue by clearing queue, not just shutdown, when
    signal interrupt nbd_start_device_ioctl().
    
    Link: https://syzkaller.appspot.com/bug?id=7d89a3ffacd2b83fdd39549bc4d8e0a89ef21239 [1]
    Reported-by: syzbot+38e6c55d4969a14c1534@syzkaller.appspotmail.com
    Signed-off-by: Shigeru Yoshida <syoshida@redhat.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Link: https://lore.kernel.org/r/20220907163502.577561-1-syoshida@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5942e5c63dc99b51fd5cbda8aa30099e4d0b4a35
Author: Letu Ren <fantasquex@gmail.com>
Date:   Mon Aug 29 19:01:15 2022 +0800

    scsi: 3w-9xxx: Avoid disabling device if failing to enable it
    
    [ Upstream commit 7eff437b5ee1309b34667844361c6bbb5c97df05 ]
    
    The original code will "goto out_disable_device" and call
    pci_disable_device() if pci_enable_device() fails. The kernel will generate
    a warning message like "3w-9xxx 0000:00:05.0: disabling already-disabled
    device".
    
    We shouldn't disable a device that failed to be enabled. A simple return is
    fine.
    
    Link: https://lore.kernel.org/r/20220829110115.38789-1-fantasquex@gmail.com
    Reported-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Letu Ren <fantasquex@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48727117bd6243f1c7fc6ed35ad131d27c505be8
Author: Justin Chen <justinpopo6@gmail.com>
Date:   Wed Aug 10 15:27:35 2022 -0700

    usb: host: xhci-plat: suspend/resume clks for brcm
    
    [ Upstream commit c69400b09e471a3f1167adead55a808f0da6534a ]
    
    The xhci_plat_brcm xhci block can enter suspend with clock disabled to save
    power and re-enable them on resume. Make use of the XHCI_SUSPEND_RESUME_CLKS
    quirk to do so.
    
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Justin Chen <justinpopo6@gmail.com>
    Link: https://lore.kernel.org/r/1660170455-15781-3-git-send-email-justinpopo6@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c13d0d2f5a4806cef87693966091b5fd3f5c225f
Author: Justin Chen <justinpopo6@gmail.com>
Date:   Wed Aug 10 15:27:34 2022 -0700

    usb: host: xhci-plat: suspend and resume clocks
    
    [ Upstream commit 8bd954c56197caf5e3a804d989094bc3fe6329aa ]
    
    Introduce XHCI_SUSPEND_RESUME_CLKS quirk as a means to suspend and resume
    clocks if the hardware is capable of doing so. We assume that clocks will
    be needed if the device may wake.
    
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Justin Chen <justinpopo6@gmail.com>
    Link: https://lore.kernel.org/r/1660170455-15781-2-git-send-email-justinpopo6@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12d31182de8deb7a8e0be6246d661291773427c8
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Fri Aug 26 22:20:30 2022 +0800

    clk: zynqmp: pll: rectify rate rounding in zynqmp_pll_round_rate
    
    [ Upstream commit 30eaf02149ecc3c5815e45d27187bf09e925071d ]
    
    The function zynqmp_pll_round_rate is used to find a most appropriate
    PLL frequency which the hardware can generate according to the desired
    frequency. For example, if the desired frequency is 297MHz, considering
    the limited range from PS_PLL_VCO_MIN (1.5GHz) to PS_PLL_VCO_MAX (3.0GHz)
    of PLL, zynqmp_pll_round_rate should return 1.872GHz (297MHz * 5).
    
    There are two problems with the current code of zynqmp_pll_round_rate:
    
    1) When the rate is below PS_PLL_VCO_MIN, it can't find a correct rate
    when the parameter "rate" is an integer multiple of *prate, in other words,
    if "f" is zero, zynqmp_pll_round_rate won't return a valid frequency which
    is from PS_PLL_VCO_MIN to PS_PLL_VCO_MAX. For example, *prate is 33MHz
    and the rate is 660MHz, zynqmp_pll_round_rate will not boost up rate and
    just return 660MHz, and this will cause clk_calc_new_rates failure since
    zynqmp_pll_round_rate returns an invalid rate out of its boundaries.
    
    2) Even if the rate is higher than PS_PLL_VCO_MIN, there is still a risk
    that zynqmp_pll_round_rate returns an invalid rate because the function
    DIV_ROUND_CLOSEST makes some loss in the fractional part. If the parent
    clock *prate is 33333333Hz and we want to set the PLL rate to 1.5GHz,
    this function will return 1499999985Hz by using the formula below:
        value = *prate * DIV_ROUND_CLOSEST(rate, *prate)).
    This value is also invalid since it's slightly smaller than PS_PLL_VCO_MIN.
    because DIV_ROUND_CLOSEST makes some loss in the fractional part.
    
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Link: https://lore.kernel.org/r/20220826142030.213805-1-quanyang.wang@windriver.com
    Reviewed-by: Shubhrajyoti Datta <shubhrajyoti.datta@amd.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2257c8a501537afab276c306cb717b7260276e1
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Thu Jul 28 04:23:38 2022 +0200

    media: cx88: Fix a null-ptr-deref bug in buffer_prepare()
    
    [ Upstream commit 2b064d91440b33fba5b452f2d1b31f13ae911d71 ]
    
    When the driver calls cx88_risc_buffer() to prepare the buffer, the
    function call may fail, resulting in a empty buffer and null-ptr-deref
    later in buffer_queue().
    
    The following log can reveal it:
    
    [   41.822762] general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI
    [   41.824488] KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
    [   41.828027] RIP: 0010:buffer_queue+0xc2/0x500
    [   41.836311] Call Trace:
    [   41.836945]  __enqueue_in_driver+0x141/0x360
    [   41.837262]  vb2_start_streaming+0x62/0x4a0
    [   41.838216]  vb2_core_streamon+0x1da/0x2c0
    [   41.838516]  __vb2_init_fileio+0x981/0xbc0
    [   41.839141]  __vb2_perform_fileio+0xbf9/0x1120
    [   41.840072]  vb2_fop_read+0x20e/0x400
    [   41.840346]  v4l2_read+0x215/0x290
    [   41.840603]  vfs_read+0x162/0x4c0
    
    Fix this by checking the return value of cx88_risc_buffer()
    
    [hverkuil: fix coding style issues]
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9e2585c3bcecb1c83febad31b9f450e93d2509e
Author: Ian Nam <young.kwan.nam@xilinx.com>
Date:   Tue May 10 12:31:54 2022 +0530

    clk: zynqmp: Fix stack-out-of-bounds in strncpy`
    
    [ Upstream commit dd80fb2dbf1cd8751efbe4e53e54056f56a9b115 ]
    
    "BUG: KASAN: stack-out-of-bounds in strncpy+0x30/0x68"
    
    Linux-ATF interface is using 16 bytes of SMC payload. In case clock name is
    longer than 15 bytes, string terminated NULL character will not be received
    by Linux. Add explicit NULL character at last byte to fix issues when clock
    name is longer.
    
    This fixes below bug reported by KASAN:
    
     ==================================================================
     BUG: KASAN: stack-out-of-bounds in strncpy+0x30/0x68
     Read of size 1 at addr ffff0008c89a7410 by task swapper/0/1
    
     CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.4.0-00396-g81ef9e7-dirty #3
     Hardware name: Xilinx Versal vck190 Eval board revA (QSPI) (DT)
     Call trace:
      dump_backtrace+0x0/0x1e8
      show_stack+0x14/0x20
      dump_stack+0xd4/0x108
      print_address_description.isra.0+0xbc/0x37c
      __kasan_report+0x144/0x198
      kasan_report+0xc/0x18
      __asan_load1+0x5c/0x68
      strncpy+0x30/0x68
      zynqmp_clock_probe+0x238/0x7b8
      platform_drv_probe+0x6c/0xc8
      really_probe+0x14c/0x418
      driver_probe_device+0x74/0x130
      __device_attach_driver+0xc4/0xe8
      bus_for_each_drv+0xec/0x150
      __device_attach+0x160/0x1d8
      device_initial_probe+0x10/0x18
      bus_probe_device+0xe0/0xf0
      device_add+0x528/0x950
      of_device_add+0x5c/0x80
      of_platform_device_create_pdata+0x120/0x168
      of_platform_bus_create+0x244/0x4e0
      of_platform_populate+0x50/0xe8
      zynqmp_firmware_probe+0x370/0x3a8
      platform_drv_probe+0x6c/0xc8
      really_probe+0x14c/0x418
      driver_probe_device+0x74/0x130
      device_driver_attach+0x94/0xa0
      __driver_attach+0x70/0x108
      bus_for_each_dev+0xe4/0x158
      driver_attach+0x30/0x40
      bus_add_driver+0x21c/0x2b8
      driver_register+0xbc/0x1d0
      __platform_driver_register+0x7c/0x88
      zynqmp_firmware_driver_init+0x1c/0x24
      do_one_initcall+0xa4/0x234
      kernel_init_freeable+0x1b0/0x24c
      kernel_init+0x10/0x110
      ret_from_fork+0x10/0x18
    
     The buggy address belongs to the page:
     page:ffff0008f9be1c88 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0
     raw: 0008d00000000000 ffff0008f9be1c90 ffff0008f9be1c90 0000000000000000
     raw: 0000000000000000 0000000000000000 00000000ffffffff
     page dumped because: kasan: bad access detected
    
     addr ffff0008c89a7410 is located in stack of task swapper/0/1 at offset 112 in frame:
      zynqmp_clock_probe+0x0/0x7b8
    
     this frame has 3 objects:
      [32, 44) 'response'
      [64, 80) 'ret_payload'
      [96, 112) 'name'
    
     Memory state around the buggy address:
      ffff0008c89a7300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffff0008c89a7380: 00 00 00 00 f1 f1 f1 f1 00 04 f2 f2 00 00 f2 f2
     >ffff0008c89a7400: 00 00 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
                              ^
      ffff0008c89a7480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffff0008c89a7500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ==================================================================
    
    Signed-off-by: Ian Nam <young.kwan.nam@xilinx.com>
    Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
    Link: https://lore.kernel.org/r/20220510070154.29528-3-shubhrajyoti.datta@xilinx.com
    Acked-by: Michal Simek <michal.simek@amd.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70f8b48d0b61b2b31f58cc2890ba86fdf89e5c53
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Aug 2 14:53:03 2022 +0800

    btrfs: scrub: try to fix super block errors
    
    [ Upstream commit f9eab5f0bba76742af654f33d517bf62a0db8f12 ]
    
    [BUG]
    The following script shows that, although scrub can detect super block
    errors, it never tries to fix it:
    
            mkfs.btrfs -f -d raid1 -m raid1 $dev1 $dev2
            xfs_io -c "pwrite 67108864 4k" $dev2
    
            mount $dev1 $mnt
            btrfs scrub start -B $dev2
            btrfs scrub start -Br $dev2
            umount $mnt
    
    The first scrub reports the super error correctly:
    
      scrub done for f3289218-abd3-41ac-a630-202f766c0859
      Scrub started:    Tue Aug  2 14:44:11 2022
      Status:           finished
      Duration:         0:00:00
      Total to scrub:   1.26GiB
      Rate:             0.00B/s
      Error summary:    super=1
        Corrected:      0
        Uncorrectable:  0
        Unverified:     0
    
    But the second read-only scrub still reports the same super error:
    
      Scrub started:    Tue Aug  2 14:44:11 2022
      Status:           finished
      Duration:         0:00:00
      Total to scrub:   1.26GiB
      Rate:             0.00B/s
      Error summary:    super=1
        Corrected:      0
        Uncorrectable:  0
        Unverified:     0
    
    [CAUSE]
    The comments already shows that super block can be easily fixed by
    committing a transaction:
    
            /*
             * If we find an error in a super block, we just report it.
             * They will get written with the next transaction commit
             * anyway
             */
    
    But the truth is, such assumption is not always true, and since scrub
    should try to repair every error it found (except for read-only scrub),
    we should really actively commit a transaction to fix this.
    
    [FIX]
    Just commit a transaction if we found any super block errors, after
    everything else is done.
    
    We cannot do this just after scrub_supers(), as
    btrfs_commit_transaction() will try to pause and wait for the running
    scrub, thus we can not call it with scrub_lock hold.
    
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f554dd23c18fa4a1ca77c8ce2a49e6fb8d8f9c8
Author: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date:   Fri Sep 2 10:42:13 2022 +0200

    arm64: dts: imx8mq-librem5: Add bq25895 as max17055's power supply
    
    [ Upstream commit 6effe295e1a87408033c29dbcea9d5a5c8b937d5 ]
    
    This allows the userspace to notice that there's not enough
    current provided to charge the battery, and also fixes issues
    with 0% SOC values being considered invalid.
    
    Signed-off-by: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Signed-off-by: Martin Kepplinger <martin.kepplinger@puri.sm>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 451ce2521c2191054c578ba715da29db5a7720a7
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Aug 29 17:06:56 2022 +0100

    kselftest/arm64: Fix validatation termination record after EXTRA_CONTEXT
    
    [ Upstream commit 5c152c2f66f9368394b89ac90dc7483476ef7b88 ]
    
    When arm64 signal context data overflows the base struct sigcontext it gets
    placed in an extra buffer pointed to by a record of type EXTRA_CONTEXT in
    the base struct sigcontext which is required to be the last record in the
    base struct sigframe. The current validation code attempts to check this
    by using GET_RESV_NEXT_HEAD() to step forward from the current record to
    the next but that is a macro which assumes it is being provided with a
    struct _aarch64_ctx and uses the size there to skip forward to the next
    record. Instead validate_extra_context() passes it a struct extra_context
    which has a separate size field. This compiles but results in us trying
    to validate a termination record in completely the wrong place, at best
    failing validation and at worst just segfaulting. Fix this by passing
    the struct _aarch64_ctx we meant to into the macro.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20220829160703.874492-4-broonie@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 017cabfb3f869aed2cb62b9bebf46348ad0326ae
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Fri Aug 26 07:53:36 2022 +0200

    ARM: dts: imx6sx: add missing properties for sram
    
    [ Upstream commit 415432c008b2bce8138841356ba444631cabaa50 ]
    
    All 3 properties are required by sram.yaml. Fixes the dtbs_check warning:
    sram@900000: '#address-cells' is a required property
    sram@900000: '#size-cells' is a required property
    sram@900000: 'ranges' is a required property
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d3ca48722d37243edd8dc892a272cc3540c3d3f
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Fri Aug 26 07:53:35 2022 +0200

    ARM: dts: imx6sll: add missing properties for sram
    
    [ Upstream commit 7492a83ed9b7a151e2dd11d64b06da7a7f0fa7f9 ]
    
    All 3 properties are required by sram.yaml. Fixes the dtbs_check warning:
    sram@900000: '#address-cells' is a required property
    sram@900000: '#size-cells' is a required property
    sram@900000: 'ranges' is a required property
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9735f2b62be928d96414ecadcf79ea45032ef059
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Fri Aug 26 07:53:34 2022 +0200

    ARM: dts: imx6sl: add missing properties for sram
    
    [ Upstream commit 60c9213a1d9941a8b33db570796c3f9be8984974 ]
    
    All 3 properties are required by sram.yaml. Fixes the dtbs_check warning:
    sram@900000: '#address-cells' is a required property
    sram@900000: '#size-cells' is a required property
    sram@900000: 'ranges' is a required property
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2829b6ad30c20c5dc7911c31b23e01ca53cc2056
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Fri Aug 26 07:53:33 2022 +0200

    ARM: dts: imx6qp: add missing properties for sram
    
    [ Upstream commit 088fe5237435ee2f7ed4450519b2ef58b94c832f ]
    
    All 3 properties are required by sram.yaml. Fixes the dtbs_check warning:
    sram@940000: '#address-cells' is a required property
    sram@940000: '#size-cells' is a required property
    sram@940000: 'ranges' is a required property
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c3a0b3d5e9c681b19c2d845714bdd7f906dd5e7
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Fri Aug 26 07:53:32 2022 +0200

    ARM: dts: imx6dl: add missing properties for sram
    
    [ Upstream commit f5848b95633d598bacf0500e0108dc5961af88c0 ]
    
    All 3 properties are required by sram.yaml. Fixes the dtbs_check warning:
    sram@900000: '#address-cells' is a required property
    sram@900000: '#size-cells' is a required property
    sram@900000: 'ranges' is a required property
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2763a3b43ac3a71a73944b9f2ce472931d152a1e
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Fri Aug 26 07:53:31 2022 +0200

    ARM: dts: imx6q: add missing properties for sram
    
    [ Upstream commit b11d083c5dcec7c42fe982c854706d404ddd3a5f ]
    
    All 3 properties are required by sram.yaml. Fixes the dtbs_check warning:
    sram@900000: '#address-cells' is a required property
    sram@900000: '#size-cells' is a required property
    sram@900000: 'ranges' is a required property
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82e0d91484f79475b59a586be8815098a0e7b1e2
Author: Haibo Chen <haibo.chen@nxp.com>
Date:   Mon Jul 25 18:16:22 2022 +0800

    ARM: dts: imx7d-sdb: config the max pressure for tsc2046
    
    [ Upstream commit e7c4ebe2f9cd68588eb24ba4ed122e696e2d5272 ]
    
    Use the general touchscreen method to config the max pressure for
    touch tsc2046(data sheet suggest 8 bit pressure), otherwise, for
    ABS_PRESSURE, when config the same max and min value, weston will
    meet the following issue,
    
    [17:19:39.183] event1  - ADS7846 Touchscreen: is tagged by udev as: Touchscreen
    [17:19:39.183] event1  - ADS7846 Touchscreen: kernel bug: device has min == max on ABS_PRESSURE
    [17:19:39.183] event1  - ADS7846 Touchscreen: was rejected
    [17:19:39.183] event1  - not using input device '/dev/input/event1'
    
    This will then cause the APP weston-touch-calibrator can't list touch devices.
    
    root@imx6ul7d:~# weston-touch-calibrator
    could not load cursor 'dnd-move'
    could not load cursor 'dnd-copy'
    could not load cursor 'dnd-none'
    No devices listed.
    
    And accroding to binding Doc, "ti,x-max", "ti,y-max", "ti,pressure-max"
    belong to the deprecated properties, so remove them. Also for "ti,x-min",
    "ti,y-min", "ti,x-plate-ohms", the value set in dts equal to the default
    value in driver, so are redundant, also remove here.
    
    Signed-off-by: Haibo Chen <haibo.chen@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 166feb964fc8d9065eae8301b08e39a9fdbebcda
Author: Aric Cyr <aric.cyr@amd.com>
Date:   Fri Sep 9 18:07:59 2022 -0400

    drm/amd/display: Remove interface for periodic interrupt 1
    
    [ Upstream commit 97d8d6f075bd8f988589be02b91f6fa644d0b0b8 ]
    
    [why]
    Only a single VLINE interrupt is available so interface should not
    expose the second one which is used by DMU firmware.
    
    [how]
    Remove references to periodic_interrupt1 and VLINE1 from DC interfaces.
    
    Reviewed-by: Jaehyun Chung <jaehyun.chung@amd.com>
    Acked-by: Jasdeep Dhillon <jdhillon@amd.com>
    Signed-off-by: Aric Cyr <aric.cyr@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bb6f4a8db5ae91194973f98e0b43d5dde3889c4
Author: Khaled Almahallawy <khaled.almahallawy@intel.com>
Date:   Thu Sep 15 22:49:00 2022 -0700

    drm/dp: Don't rewrite link config when setting phy test pattern
    
    [ Upstream commit 7b4d8db657192066bc6f1f6635d348413dac1e18 ]
    
    The sequence for Source DP PHY CTS automation is [2][1]:
    1- Emulate successful Link Training(LT)
    2- Short HPD and change link rates and number of lanes by LT.
    (This is same flow for Link Layer CTS)
    3- Short HPD and change PHY test pattern and swing/pre-emphasis
    levels (This step should not trigger LT)
    
    The problem is with DP PHY compliance setup as follow:
    
         [DPTX + on board LTTPR]------Main Link--->[Scope]
                            ^                         |
                            |                         |
                            |                         |
                            ----------Aux Ch------>[Aux Emulator]
    
    At step 3, before writing TRAINING_LANEx_SET/LINK_QUAL_PATTERN_SET
    to declare the pattern/swing requested by scope, we write link
    config in LINK_BW_SET/LANE_COUNT_SET on a port that has LTTPR.
    As LTTPR snoops aux transaction, LINK_BW_SET/LANE_COUNT_SET writes
    indicate a LT will start [Check DP 2.0 E11 -Sec 3.6.8.2 & 3.6.8.6.3],
    and LTTPR will reset the link and stop sending DP signals to
    DPTX/Scope causing the measurements to fail. Note that step 3 will
    not trigger LT and DP link will never recovered by the
    Aux Emulator/Scope.
    
    The reset of link can be tested with a monitor connected to LTTPR
    port simply by writing to LINK_BW_SET or LANE_COUNT_SET as follow
    
      igt/tools/dpcd_reg write --offset=0x100 --value 0x14 --device=2
    
    OR
    
      printf '\x14' | sudo dd of=/dev/drm_dp_aux2 bs=1 count=1 conv=notrunc
      seek=$((0x100))
    
    This single aux write causes the screen to blank, sending short HPD to
    DPTX, setting LINK_STATUS_UPDATE = 1 in DPCD 0x204, and triggering LT.
    
    As stated in [1]:
    "Before any TX electrical testing can be performed, the link between a
    DPTX and DPRX (in this case, a piece of test equipment), including all
    LTTPRs within the path, shall be trained as defined in this Standard."
    
    In addition, changing Phy pattern/Swing/Pre-emphasis (Step 3) uses the
    same link rate and lane count applied on step 2, so no need to redo LT.
    
    The fix is to not rewrite link config in step 3, and just writes
    TRAINING_LANEx_SET and LINK_QUAL_PATTERN_SET
    
    [1]: DP 2.0 E11 - 3.6.11.1 LTTPR DPTX_PHY Electrical Compliance
    
    [2]: Configuring UnigrafDPTC Controller - Automation Test Sequence
    https://www.keysight.com/us/en/assets/9922-01244/help-files/
    D9040DPPC-DisplayPort-Test-Software-Online-Help-latest.chm
    
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Or Cochvi <or.cochvi@intel.com>
    Signed-off-by: Khaled Almahallawy <khaled.almahallawy@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220916054900.415804-1-khaled.almahallawy@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb91c06b0be4637f304d5c2d9fbcb90fa4f1dbd9
Author: Richard Acayan <mailingradian@gmail.com>
Date:   Thu Sep 22 21:43:22 2022 -0400

    mmc: sdhci-msm: add compatible string check for sdm670
    
    [ Upstream commit 4de95950d970c71a9e82a24573bb7a44fd95baa1 ]
    
    The Snapdragon 670 has the same quirk as Snapdragon 845 (needing to
    restore the dll config). Add a compatible string check to detect the need
    for this.
    
    Signed-off-by: Richard Acayan <mailingradian@gmail.com>
    Reviewed-by: Bhupesh Sharma <bhupesh.sharma@linaro.org>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220923014322.33620-3-mailingradian@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a427a22839daacd36531a62c83d5c9cd6f20657
Author: Adrián Larumbe <adrian.larumbe@collabora.com>
Date:   Mon Sep 19 02:09:39 2022 +0100

    drm/meson: explicitly remove aggregate driver at module unload time
    
    [ Upstream commit 8616f2a0589a80e08434212324250eb22f6a66ce ]
    
    Because component_master_del wasn't being called when unloading the
    meson_drm module, the aggregate device would linger forever in the global
    aggregate_devices list. That means when unloading and reloading the
    meson_dw_hdmi module, component_add would call into
    try_to_bring_up_aggregate_device and find the unbound meson_drm aggregate
    device.
    
    This would in turn dereference some of the aggregate_device's struct
    entries which point to memory automatically freed by the devres API when
    unbinding the aggregate device from meson_drv_unbind, and trigger an
    use-after-free bug:
    
    [  +0.000014] =============================================================
    [  +0.000007] BUG: KASAN: use-after-free in find_components+0x468/0x500
    [  +0.000017] Read of size 8 at addr ffff000006731688 by task modprobe/2536
    [  +0.000018] CPU: 4 PID: 2536 Comm: modprobe Tainted: G         C O      5.19.0-rc6-lrmbkasan+ #1
    [  +0.000010] Hardware name: Hardkernel ODROID-N2Plus (DT)
    [  +0.000008] Call trace:
    [  +0.000005]  dump_backtrace+0x1ec/0x280
    [  +0.000011]  show_stack+0x24/0x80
    [  +0.000007]  dump_stack_lvl+0x98/0xd4
    [  +0.000010]  print_address_description.constprop.0+0x80/0x520
    [  +0.000011]  print_report+0x128/0x260
    [  +0.000007]  kasan_report+0xb8/0xfc
    [  +0.000007]  __asan_report_load8_noabort+0x3c/0x50
    [  +0.000009]  find_components+0x468/0x500
    [  +0.000008]  try_to_bring_up_aggregate_device+0x64/0x390
    [  +0.000009]  __component_add+0x1dc/0x49c
    [  +0.000009]  component_add+0x20/0x30
    [  +0.000008]  meson_dw_hdmi_probe+0x28/0x34 [meson_dw_hdmi]
    [  +0.000013]  platform_probe+0xd0/0x220
    [  +0.000008]  really_probe+0x3ac/0xa80
    [  +0.000008]  __driver_probe_device+0x1f8/0x400
    [  +0.000008]  driver_probe_device+0x68/0x1b0
    [  +0.000008]  __driver_attach+0x20c/0x480
    [  +0.000009]  bus_for_each_dev+0x114/0x1b0
    [  +0.000007]  driver_attach+0x48/0x64
    [  +0.000009]  bus_add_driver+0x390/0x564
    [  +0.000007]  driver_register+0x1a8/0x3e4
    [  +0.000009]  __platform_driver_register+0x6c/0x94
    [  +0.000007]  meson_dw_hdmi_platform_driver_init+0x30/0x1000 [meson_dw_hdmi]
    [  +0.000014]  do_one_initcall+0xc4/0x2b0
    [  +0.000008]  do_init_module+0x154/0x570
    [  +0.000010]  load_module+0x1a78/0x1ea4
    [  +0.000008]  __do_sys_init_module+0x184/0x1cc
    [  +0.000008]  __arm64_sys_init_module+0x78/0xb0
    [  +0.000008]  invoke_syscall+0x74/0x260
    [  +0.000008]  el0_svc_common.constprop.0+0xcc/0x260
    [  +0.000009]  do_el0_svc+0x50/0x70
    [  +0.000008]  el0_svc+0x68/0x1a0
    [  +0.000009]  el0t_64_sync_handler+0x11c/0x150
    [  +0.000009]  el0t_64_sync+0x18c/0x190
    
    [  +0.000014] Allocated by task 902:
    [  +0.000007]  kasan_save_stack+0x2c/0x5c
    [  +0.000009]  __kasan_kmalloc+0x90/0xd0
    [  +0.000007]  __kmalloc_node+0x240/0x580
    [  +0.000010]  memcg_alloc_slab_cgroups+0xa4/0x1ac
    [  +0.000010]  memcg_slab_post_alloc_hook+0xbc/0x4c0
    [  +0.000008]  kmem_cache_alloc_node+0x1d0/0x490
    [  +0.000009]  __alloc_skb+0x1d4/0x310
    [  +0.000010]  alloc_skb_with_frags+0x8c/0x620
    [  +0.000008]  sock_alloc_send_pskb+0x5ac/0x6d0
    [  +0.000010]  unix_dgram_sendmsg+0x2e0/0x12f0
    [  +0.000010]  sock_sendmsg+0xcc/0x110
    [  +0.000007]  sock_write_iter+0x1d0/0x304
    [  +0.000008]  new_sync_write+0x364/0x460
    [  +0.000007]  vfs_write+0x420/0x5ac
    [  +0.000008]  ksys_write+0x19c/0x1f0
    [  +0.000008]  __arm64_sys_write+0x78/0xb0
    [  +0.000007]  invoke_syscall+0x74/0x260
    [  +0.000008]  el0_svc_common.constprop.0+0x1a8/0x260
    [  +0.000009]  do_el0_svc+0x50/0x70
    [  +0.000007]  el0_svc+0x68/0x1a0
    [  +0.000008]  el0t_64_sync_handler+0x11c/0x150
    [  +0.000008]  el0t_64_sync+0x18c/0x190
    
    [  +0.000013] Freed by task 2509:
    [  +0.000008]  kasan_save_stack+0x2c/0x5c
    [  +0.000007]  kasan_set_track+0x2c/0x40
    [  +0.000008]  kasan_set_free_info+0x28/0x50
    [  +0.000008]  ____kasan_slab_free+0x128/0x1d4
    [  +0.000008]  __kasan_slab_free+0x18/0x24
    [  +0.000007]  slab_free_freelist_hook+0x108/0x230
    [  +0.000010]  kfree+0x110/0x35c
    [  +0.000008]  release_nodes+0xf0/0x16c
    [  +0.000008]  devres_release_all+0xfc/0x180
    [  +0.000008]  device_unbind_cleanup+0x24/0x164
    [  +0.000008]  device_release_driver_internal+0x3e8/0x5b0
    [  +0.000010]  driver_detach+0xac/0x1b0
    [  +0.000008]  bus_remove_driver+0x158/0x29c
    [  +0.000008]  driver_unregister+0x70/0xb0
    [  +0.000009]  platform_driver_unregister+0x20/0x2c
    [  +0.000007]  0xffff800003722d98
    [  +0.000012]  __do_sys_delete_module+0x288/0x400
    [  +0.000009]  __arm64_sys_delete_module+0x5c/0x80
    [  +0.000008]  invoke_syscall+0x74/0x260
    [  +0.000008]  el0_svc_common.constprop.0+0xcc/0x260
    [  +0.000008]  do_el0_svc+0x50/0x70
    [  +0.000007]  el0_svc+0x68/0x1a0
    [  +0.000008]  el0t_64_sync_handler+0x11c/0x150
    [  +0.000009]  el0t_64_sync+0x18c/0x190
    
    [  +0.000013] Last potentially related work creation:
    [  +0.000007]  kasan_save_stack+0x2c/0x5c
    [  +0.000007]  __kasan_record_aux_stack+0xb8/0xf0
    [  +0.000009]  kasan_record_aux_stack_noalloc+0x14/0x20
    [  +0.000008]  insert_work+0x54/0x290
    [  +0.000009]  __queue_work+0x48c/0xd24
    [  +0.000008]  queue_work_on+0x90/0x11c
    [  +0.000008]  call_usermodehelper_exec+0x188/0x404
    [  +0.000010]  kobject_uevent_env+0x5a8/0x794
    [  +0.000010]  kobject_uevent+0x14/0x20
    [  +0.000008]  driver_register+0x230/0x3e4
    [  +0.000009]  __platform_driver_register+0x6c/0x94
    [  +0.000007]  gxbb_driver_init+0x28/0x34
    [  +0.000010]  do_one_initcall+0xc4/0x2b0
    [  +0.000008]  do_initcalls+0x20c/0x24c
    [  +0.000010]  kernel_init_freeable+0x22c/0x278
    [  +0.000009]  kernel_init+0x3c/0x170
    [  +0.000008]  ret_from_fork+0x10/0x20
    
    [  +0.000013] The buggy address belongs to the object at ffff000006731600
                   which belongs to the cache kmalloc-256 of size 256
    [  +0.000009] The buggy address is located 136 bytes inside of
                   256-byte region [ffff000006731600, ffff000006731700)
    
    [  +0.000015] The buggy address belongs to the physical page:
    [  +0.000008] page:fffffc000019cc00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff000006730a00 pfn:0x6730
    [  +0.000011] head:fffffc000019cc00 order:2 compound_mapcount:0 compound_pincount:0
    [  +0.000008] flags: 0xffff00000010200(slab|head|node=0|zone=0|lastcpupid=0xffff)
    [  +0.000016] raw: 0ffff00000010200 fffffc00000c3d08 fffffc0000ef2b08 ffff000000002680
    [  +0.000009] raw: ffff000006730a00 0000000000150014 00000001ffffffff 0000000000000000
    [  +0.000006] page dumped because: kasan: bad access detected
    
    [  +0.000011] Memory state around the buggy address:
    [  +0.000007]  ffff000006731580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  +0.000007]  ffff000006731600: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [  +0.000007] >ffff000006731680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [  +0.000007]                       ^
    [  +0.000006]  ffff000006731700: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  +0.000007]  ffff000006731780: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  +0.000006] ==================================================================
    
    Fix by adding 'remove' driver callback for meson-drm, and explicitly deleting the
    aggregate device.
    
    Signed-off-by: Adrián Larumbe <adrian.larumbe@collabora.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220919010940.419893-3-adrian.larumbe@collabora.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c7d957c5d81930b5cf514c0f42150796c1823e0
Author: hongao <hongao@uniontech.com>
Date:   Tue Sep 20 17:24:53 2022 +0800

    drm/amdgpu: fix initial connector audio value
    
    [ Upstream commit 4bb71fce58f30df3f251118291d6b0187ce531e6 ]
    
    This got lost somewhere along the way, This fixes
    audio not working until set_property was called.
    
    Signed-off-by: hongao <hongao@uniontech.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69130888b226e1156fcd2a35bd7c1ca33e4ac516
Author: Jairaj Arava <jairaj.arava@intel.com>
Date:   Mon Sep 19 13:44:29 2022 +0200

    ASoC: SOF: pci: Change DMI match info to support all Chrome platforms
    
    [ Upstream commit c1c1fc8103f794a10c5c15e3c17879caf4f42c8f ]
    
    In some Chrome platforms if OEM's use their own string as SYS_VENDOR than
    "Google", it leads to firmware load failure from intel/sof/community path.
    
    Hence, changing SYS_VENDOR to PRODUCT_FAMILY in which "Google" is used
    as common prefix and is supported in all Chrome platforms.
    
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Chao Song <chao.song@intel.com>
    Reviewed-by: Curtis Malainey <curtis@malainey.com>
    Signed-off-by: Jairaj Arava <jairaj.arava@intel.com>
    Signed-off-by: Curtis Malainey <cujomalainey@chromium.org>
    Signed-off-by: Sathyanarayana Nujella <sathyanarayana.nujella@intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20220919114429.42700-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54f2585e2de09b64010df06dfe48488e32727c97
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Sep 17 23:04:07 2022 +0200

    platform/x86: msi-laptop: Change DMI match / alias strings to fix module autoloading
    
    [ Upstream commit 2a2565272a3628e45d61625e36ef17af7af4e3de ]
    
    On a MSI S270 with Fedora 37 x86_64 / systemd-251.4 the module does not
    properly autoload.
    
    This is likely caused by issues with how systemd-udevd handles the single
    quote char (') which is part of the sys_vendor / chassis_vendor strings
    on this laptop. As a workaround remove the single quote char + everything
    behind it from the sys_vendor + chassis_vendor matches. This fixes
    the module not autoloading.
    
    Link: https://github.com/systemd/systemd/issues/24715
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220917210407.647432-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9d6a7c9b685fce285e14009fd725e61a280f542
Author: Jameson Thies <jthies@google.com>
Date:   Tue Sep 13 20:49:54 2022 +0000

    platform/chrome: cros_ec: Notify the PM of wake events during resume
    
    [ Upstream commit 8edd2752b0aa498b3a61f3caee8f79f7e0567fad ]
    
    cros_ec_handle_event in the cros_ec driver can notify the PM of wake
    events. When a device is suspended, cros_ec_handle_event will not check
    MKBP events. Instead, received MKBP events are checked during resume by
    cros_ec_report_events_during_suspend. But
    cros_ec_report_events_during_suspend cannot notify the PM if received
    events are wake events, causing wake events to not be reported if
    received while the device is suspended.
    
    Update cros_ec_report_events_during_suspend to notify the PM of wake
    events during resume by calling pm_wakeup_event.
    
    Signed-off-by: Jameson Thies <jthies@google.com>
    Reviewed-by: Prashant Malani <pmalani@chromium.org>
    Reviewed-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Link: https://lore.kernel.org/r/20220913204954.2931042-1-jthies@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e29d20deaf9a457835df66b8c48e5bc4735db118
Author: Maya Matuszczyk <maccraft123mc@gmail.com>
Date:   Wed Aug 3 20:24:03 2022 +0200

    drm: panel-orientation-quirks: Add quirk for Anbernic Win600
    
    [ Upstream commit 770e19076065e079a32f33eb11be2057c87f1cde ]
    
    This device is another x86 gaming handheld, and as (hopefully) there is
    only one set of DMI IDs it's using DMI_EXACT_MATCH
    
    Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220803182402.1217293-1-maccraft123mc@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfdb391d57df9aad8cb5ed241d71bf9655b40730
Author: Mateusz Kwiatkowski <kfyatek+publicgit@gmail.com>
Date:   Mon Aug 29 15:11:42 2022 +0200

    drm/vc4: vec: Fix timings for VEC modes
    
    [ Upstream commit 30d7565be96b3946c18a1ce3fd538f7946839092 ]
    
    This commit fixes vertical timings of the VEC (composite output) modes
    to accurately represent the 525-line ("NTSC") and 625-line ("PAL") ITU-R
    standards.
    
    Previous timings were actually defined as 502 and 601 lines, resulting
    in non-standard 62.69 Hz and 52 Hz signals being generated,
    respectively.
    
    Signed-off-by: Mateusz Kwiatkowski <kfyatek+publicgit@gmail.com>
    Acked-by: Noralf Trønnes <noralf@tronnes.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220728-rpi-analog-tv-properties-v2-28-459522d653a7@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b70f8abc1a440be6802f27631ecb9acb0a158c66
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 26 20:57:33 2022 +0200

    drm: bridge: dw_hdmi: only trigger hotplug event on link change
    
    [ Upstream commit da09daf881082266e4075657fac53c7966de8e4d ]
    
    There are two events that signal a real change of the link state: HPD going
    high means the sink is newly connected or wants the source to re-read the
    EDID, RX sense going low is a indication that the link has been disconnected.
    
    Ignore the other two events that also trigger interrupts, but don't need
    immediate attention: HPD going low does not necessarily mean the link has
    been lost and should not trigger a immediate read of the status. RX sense
    going high also does not require a detect cycle, as HPD going high is the
    right point in time to read the EDID.
    
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com> (v1)
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220826185733.3213248-1-l.stach@pengutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbe2f6f90310b3a0b5de4e0dc022b36faabfd718
Author: Vivek Kasireddy <vivek.kasireddy@intel.com>
Date:   Wed Aug 24 23:35:22 2022 -0700

    udmabuf: Set ubuf->sg = NULL if the creation of sg table fails
    
    [ Upstream commit d9c04a1b7a15b5e74b2977461d9511e497f05d8f ]
    
    When userspace tries to map the dmabuf and if for some reason
    (e.g. OOM) the creation of the sg table fails, ubuf->sg needs to be
    set to NULL. Otherwise, when the userspace subsequently closes the
    dmabuf fd, we'd try to erroneously free the invalid sg table from
    release_udmabuf resulting in the following crash reported by syzbot:
    
    general protection fault, probably for non-canonical address
    0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN
    KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
    CPU: 0 PID: 3609 Comm: syz-executor487 Not tainted
    5.19.0-syzkaller-13930-g7ebfc85e2cd7 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 07/22/2022
    RIP: 0010:dma_unmap_sgtable include/linux/dma-mapping.h:378 [inline]
    RIP: 0010:put_sg_table drivers/dma-buf/udmabuf.c:89 [inline]
    RIP: 0010:release_udmabuf+0xcb/0x4f0 drivers/dma-buf/udmabuf.c:114
    Code: 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 2b 04 00 00 48 8d 7d 0c 4c
    8b 63 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 14
    02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 e2
    RSP: 0018:ffffc900037efd30 EFLAGS: 00010246
    RAX: dffffc0000000000 RBX: ffffffff8cb67800 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffffff84ad27e0 RDI: 0000000000000000
    RBP: fffffffffffffff4 R08: 0000000000000005 R09: 0000000000000000
    R10: 0000000000000000 R11: 000000000008c07c R12: ffff88801fa05000
    R13: ffff888073db07e8 R14: ffff888025c25440 R15: 0000000000000000
    FS:  0000555555fc4300(0000) GS:ffff8880b9a00000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fc1c0ce06e4 CR3: 00000000715e6000 CR4: 00000000003506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     dma_buf_release+0x157/0x2d0 drivers/dma-buf/dma-buf.c:78
     __dentry_kill+0x42b/0x640 fs/dcache.c:612
     dentry_kill fs/dcache.c:733 [inline]
     dput+0x806/0xdb0 fs/dcache.c:913
     __fput+0x39c/0x9d0 fs/file_table.c:333
     task_work_run+0xdd/0x1a0 kernel/task_work.c:177
     ptrace_notify+0x114/0x140 kernel/signal.c:2353
     ptrace_report_syscall include/linux/ptrace.h:420 [inline]
     ptrace_report_syscall_exit include/linux/ptrace.h:482 [inline]
     syscall_exit_work kernel/entry/common.c:249 [inline]
     syscall_exit_to_user_mode_prepare+0x129/0x280 kernel/entry/common.c:276
     __syscall_exit_to_user_mode_work kernel/entry/common.c:281 [inline]
     syscall_exit_to_user_mode+0x9/0x50 kernel/entry/common.c:294
     do_syscall_64+0x42/0xb0 arch/x86/entry/common.c:86
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    RIP: 0033:0x7fc1c0c35b6b
    Code: 0f 05 48 3d 00 f0 ff ff 77 45 c3 0f 1f 40 00 48 83 ec 18 89 7c 24
    0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00
    f0 ff ff 77 35 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
    RSP: 002b:00007ffd78a06090 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
    RAX: 0000000000000000 RBX: 0000000000000007 RCX: 00007fc1c0c35b6b
    RDX: 0000000020000280 RSI: 0000000040086200 RDI: 0000000000000006
    RBP: 0000000000000007 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000293 R12: 000000000000000c
    R13: 0000000000000003 R14: 00007fc1c0cfe4a0 R15: 00007ffd78a06140
     </TASK>
    Modules linked in:
    ---[ end trace 0000000000000000 ]---
    RIP: 0010:dma_unmap_sgtable include/linux/dma-mapping.h:378 [inline]
    RIP: 0010:put_sg_table drivers/dma-buf/udmabuf.c:89 [inline]
    RIP: 0010:release_udmabuf+0xcb/0x4f0 drivers/dma-buf/udmabuf.c:114
    
    Reported-by: syzbot+c80e9ef5d8bb45894db0@syzkaller.appspotmail.com
    Cc: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Vivek Kasireddy <vivek.kasireddy@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20220825063522.801264-1-vivek.kasireddy@intel.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a4fddc95c63fa5460f778885965281360fc3d90
Author: David Gow <davidgow@google.com>
Date:   Thu Aug 11 17:43:26 2022 -0300

    drm/amd/display: fix overflow on MIN_I64 definition
    
    [ Upstream commit 6ae0632d17759852c07e2d1e0a31c728eb6ba246 ]
    
    The definition of MIN_I64 in bw_fixed.c can cause gcc to whinge about
    integer overflow, because it is treated as a positive value, which is
    then negated. The temporary positive value is not necessarily
    representable.
    
    This causes the following warning:
    ../drivers/gpu/drm/amd/amdgpu/../display/dc/dml/calcs/bw_fixed.c:30:19:
    warning: integer overflow in expression ‘-9223372036854775808’ of type
    ‘long long int’ results in ‘-9223372036854775808’ [-Woverflow]
      30 |         (int64_t)(-(1LL << 63))
         |                   ^
    
    Writing out (-MAX_I64 - 1) works instead.
    
    Signed-off-by: David Gow <davidgow@google.com>
    Signed-off-by: Tales Aparecida <tales.aparecida@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3959e8faf8bf6bea619e8856c736db64e6eced37
Author: Zeng Jingxiang <linuszeng@tencent.com>
Date:   Wed Jul 27 15:31:19 2022 +0800

    gpu: lontium-lt9611: Fix NULL pointer dereference in lt9611_connector_init()
    
    [ Upstream commit ef8886f321c5dab8124b9153d25afa2a71d05323 ]
    
    A NULL check for bridge->encoder shows that it may be NULL, but it
    already been dereferenced on all paths leading to the check.
    812     if (!bridge->encoder) {
    
    Dereference the pointer bridge->encoder.
    810     drm_connector_attach_encoder(&lt9611->connector, bridge->encoder);
    
    Signed-off-by: Zeng Jingxiang <linuszeng@tencent.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220727073119.1578972-1-zengjx95@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c28a8082b25ce4ec94999e10a30c50d20bd44a25
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Tue Jul 5 12:02:14 2022 +0200

    drm: Prevent drm_copy_field() to attempt copying a NULL pointer
    
    [ Upstream commit f6ee30407e883042482ad4ad30da5eaba47872ee ]
    
    There are some struct drm_driver fields that are required by drivers since
    drm_copy_field() attempts to copy them to user-space via DRM_IOCTL_VERSION.
    
    But it can be possible that a driver has a bug and did not set some of the
    fields, which leads to drm_copy_field() attempting to copy a NULL pointer:
    
    [ +10.395966] Unable to handle kernel access to user memory outside uaccess routines at virtual address 0000000000000000
    [  +0.010955] Mem abort info:
    [  +0.002835]   ESR = 0x0000000096000004
    [  +0.003872]   EC = 0x25: DABT (current EL), IL = 32 bits
    [  +0.005395]   SET = 0, FnV = 0
    [  +0.003113]   EA = 0, S1PTW = 0
    [  +0.003182]   FSC = 0x04: level 0 translation fault
    [  +0.004964] Data abort info:
    [  +0.002919]   ISV = 0, ISS = 0x00000004
    [  +0.003886]   CM = 0, WnR = 0
    [  +0.003040] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000115dad000
    [  +0.006536] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000
    [  +0.006925] Internal error: Oops: 96000004 [#1] SMP
    ...
    [  +0.011113] pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [  +0.007061] pc : __pi_strlen+0x14/0x150
    [  +0.003895] lr : drm_copy_field+0x30/0x1a4
    [  +0.004156] sp : ffff8000094b3a50
    [  +0.003355] x29: ffff8000094b3a50 x28: ffff8000094b3b70 x27: 0000000000000040
    [  +0.007242] x26: ffff443743c2ba00 x25: 0000000000000000 x24: 0000000000000040
    [  +0.007243] x23: ffff443743c2ba00 x22: ffff8000094b3b70 x21: 0000000000000000
    [  +0.007241] x20: 0000000000000000 x19: ffff8000094b3b90 x18: 0000000000000000
    [  +0.007241] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaab14b9af40
    [  +0.007241] x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000
    [  +0.007239] x11: 0000000000000000 x10: 0000000000000000 x9 : ffffa524ad67d4d8
    [  +0.007242] x8 : 0101010101010101 x7 : 7f7f7f7f7f7f7f7f x6 : 6c6e6263606e7141
    [  +0.007239] x5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000000000
    [  +0.007241] x2 : 0000000000000000 x1 : ffff8000094b3b90 x0 : 0000000000000000
    [  +0.007240] Call trace:
    [  +0.002475]  __pi_strlen+0x14/0x150
    [  +0.003537]  drm_version+0x84/0xac
    [  +0.003448]  drm_ioctl_kernel+0xa8/0x16c
    [  +0.003975]  drm_ioctl+0x270/0x580
    [  +0.003448]  __arm64_sys_ioctl+0xb8/0xfc
    [  +0.003978]  invoke_syscall+0x78/0x100
    [  +0.003799]  el0_svc_common.constprop.0+0x4c/0xf4
    [  +0.004767]  do_el0_svc+0x38/0x4c
    [  +0.003357]  el0_svc+0x34/0x100
    [  +0.003185]  el0t_64_sync_handler+0x11c/0x150
    [  +0.004418]  el0t_64_sync+0x190/0x194
    [  +0.003716] Code: 92402c04 b200c3e8 f13fc09f 5400088c (a9400c02)
    [  +0.006180] ---[ end trace 0000000000000000 ]---
    
    Reported-by: Peter Robinson <pbrobinson@gmail.com>
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220705100215.572498-3-javierm@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7d701800365d2dd3ef2252497dcaed9a2d2fada
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Tue Jul 5 12:02:13 2022 +0200

    drm: Use size_t type for len variable in drm_copy_field()
    
    [ Upstream commit 94dc3471d1b2b58b3728558d0e3f264e9ce6ff59 ]
    
    The strlen() function returns a size_t which is an unsigned int on 32-bit
    arches and an unsigned long on 64-bit arches. But in the drm_copy_field()
    function, the strlen() return value is assigned to an 'int len' variable.
    
    Later, the len variable is passed as copy_from_user() third argument that
    is an unsigned long parameter as well.
    
    In theory, this can lead to an integer overflow via type conversion. Since
    the assignment happens to a signed int lvalue instead of a size_t lvalue.
    
    In practice though, that's unlikely since the values copied are set by DRM
    drivers and not controlled by userspace. But using a size_t for len is the
    correct thing to do anyways.
    
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Tested-by: Peter Robinson <pbrobinson@gmail.com>
    Reviewed-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220705100215.572498-2-javierm@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3339a51bcd89fce33011abf226b17c1c522b5e24
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Tue Jul 5 17:43:06 2022 +0800

    drm/nouveau/nouveau_bo: fix potential memory leak in nouveau_bo_alloc()
    
    [ Upstream commit 6dc548745d5b5102e3c53dc5097296ac270b6c69 ]
    
    nouveau_bo_alloc() allocates a memory chunk for "nvbo" with kzalloc().
    When some error occurs, "nvbo" should be released. But when
    WARN_ON(pi < 0)) equals true, the function return ERR_PTR without
    releasing the "nvbo", which will lead to a memory leak.
    
    We should release the "nvbo" with kfree() if WARN_ON(pi < 0)) equals true.
    
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220705094306.2244103-1-niejianglei2021@163.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 484400d433ca1903a87268c55f019e932297538a
Author: Andrew Gaul <gaul@gaul.org>
Date:   Sun Oct 2 12:41:28 2022 +0900

    r8152: Rate limit overflow messages
    
    [ Upstream commit 93e2be344a7db169b7119de21ac1bf253b8c6907 ]
    
    My system shows almost 10 million of these messages over a 24-hour
    period which pollutes my logs.
    
    Signed-off-by: Andrew Gaul <gaul@google.com>
    Link: https://lore.kernel.org/r/20221002034128.2026653-1-gaul@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c108cf3ad386e0084277093b55a351c49e0be27
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Sep 29 13:27:13 2022 -0700

    Bluetooth: L2CAP: Fix user-after-free
    
    [ Upstream commit 35fcbc4243aad7e7d020b7c1dfb14bb888b20a4f ]
    
    This uses l2cap_chan_hold_unless_zero() after calling
    __l2cap_get_chan_blah() to prevent the following trace:
    
    Bluetooth: l2cap_core.c:static void l2cap_chan_destroy(struct kref
    *kref)
    Bluetooth: chan 0000000023c4974d
    Bluetooth: parent 00000000ae861c08
    ==================================================================
    BUG: KASAN: use-after-free in __mutex_waiter_is_first
    kernel/locking/mutex.c:191 [inline]
    BUG: KASAN: use-after-free in __mutex_lock_common
    kernel/locking/mutex.c:671 [inline]
    BUG: KASAN: use-after-free in __mutex_lock+0x278/0x400
    kernel/locking/mutex.c:729
    Read of size 8 at addr ffff888006a49b08 by task kworker/u3:2/389
    
    Link: https://lore.kernel.org/lkml/20220622082716.478486-1-lee.jones@linaro.org
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sungwoo Kim <iam@sung-woo.kim>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65029aaedd15d9fe5ea1a899134e236d83f627bb
Author: Liu Jian <liujian56@huawei.com>
Date:   Tue Aug 23 21:37:54 2022 +0800

    net: If sock is dead don't access sock's sk_wq in sk_stream_wait_memory
    
    [ Upstream commit 3f8ef65af927db247418d4e1db49164d7a158fc5 ]
    
    Fixes the below NULL pointer dereference:
    
      [...]
      [   14.471200] Call Trace:
      [   14.471562]  <TASK>
      [   14.471882]  lock_acquire+0x245/0x2e0
      [   14.472416]  ? remove_wait_queue+0x12/0x50
      [   14.473014]  ? _raw_spin_lock_irqsave+0x17/0x50
      [   14.473681]  _raw_spin_lock_irqsave+0x3d/0x50
      [   14.474318]  ? remove_wait_queue+0x12/0x50
      [   14.474907]  remove_wait_queue+0x12/0x50
      [   14.475480]  sk_stream_wait_memory+0x20d/0x340
      [   14.476127]  ? do_wait_intr_irq+0x80/0x80
      [   14.476704]  do_tcp_sendpages+0x287/0x600
      [   14.477283]  tcp_bpf_push+0xab/0x260
      [   14.477817]  tcp_bpf_sendmsg_redir+0x297/0x500
      [   14.478461]  ? __local_bh_enable_ip+0x77/0xe0
      [   14.479096]  tcp_bpf_send_verdict+0x105/0x470
      [   14.479729]  tcp_bpf_sendmsg+0x318/0x4f0
      [   14.480311]  sock_sendmsg+0x2d/0x40
      [   14.480822]  ____sys_sendmsg+0x1b4/0x1c0
      [   14.481390]  ? copy_msghdr_from_user+0x62/0x80
      [   14.482048]  ___sys_sendmsg+0x78/0xb0
      [   14.482580]  ? vmf_insert_pfn_prot+0x91/0x150
      [   14.483215]  ? __do_fault+0x2a/0x1a0
      [   14.483738]  ? do_fault+0x15e/0x5d0
      [   14.484246]  ? __handle_mm_fault+0x56b/0x1040
      [   14.484874]  ? lock_is_held_type+0xdf/0x130
      [   14.485474]  ? find_held_lock+0x2d/0x90
      [   14.486046]  ? __sys_sendmsg+0x41/0x70
      [   14.486587]  __sys_sendmsg+0x41/0x70
      [   14.487105]  ? intel_pmu_drain_pebs_core+0x350/0x350
      [   14.487822]  do_syscall_64+0x34/0x80
      [   14.488345]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
      [...]
    
    The test scenario has the following flow:
    
    thread1                               thread2
    -----------                           ---------------
     tcp_bpf_sendmsg
      tcp_bpf_send_verdict
       tcp_bpf_sendmsg_redir              sock_close
        tcp_bpf_push_locked                 __sock_release
         tcp_bpf_push                         //inet_release
          do_tcp_sendpages                    sock->ops->release
           sk_stream_wait_memory               // tcp_close
              sk_wait_event                      sk->sk_prot->close
               release_sock(__sk);
                ***
                                                    lock_sock(sk);
                                                      __tcp_close
                                                        sock_orphan(sk)
                                                          sk->sk_wq  = NULL
                                                    release_sock
                ****
               lock_sock(__sk);
              remove_wait_queue(sk_sleep(sk), &wait);
                 sk_sleep(sk)
                 //NULL pointer dereference
                 &rcu_dereference_raw(sk->sk_wq)->wait
    
    While waiting for memory in thread1, the socket is released with its wait
    queue because thread2 has closed it. This caused by tcp_bpf_send_verdict
    didn't increase the f_count of psock->sk_redir->sk_socket->file in thread1.
    
    We should check if SOCK_DEAD flag is set on wakeup in sk_stream_wait_memory
    before accessing the wait queue.
    
    Suggested-by: Jakub Sitnicki <jakub@cloudflare.com>
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/bpf/20220823133755.314697-2-liujian56@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4851303c853919f27310edec80181fd1c4185b41
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Sat Sep 17 21:30:09 2022 +0100

    wifi: rt2x00: correctly set BBP register 86 for MT7620
    
    [ Upstream commit c9aada64fe6493461127f1522d7e2f01792d2424 ]
    
    Instead of 0 set the correct value for BBP register 86 for MT7620.
    
    Reported-by: Serge Vasilugin <vasilugin@yandex.ru>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Acked-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/257267247ee4fa7ebc6a5d0c4948b3f8119c0d77.1663445157.git.daniel@makrotopia.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a01614447954733a020ae15260d19f8e89a1ad1b
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Sat Sep 17 21:29:55 2022 +0100

    wifi: rt2x00: set SoC wmac clock register
    
    [ Upstream commit cbde6ed406a51092d9e8a2df058f5f8490f27443 ]
    
    Instead of using the default value 33 (pci), set US_CYC_CNT init based
    on Programming guide:
    If available, set chipset bus clock with fallback to cpu clock/3.
    
    Reported-by: Serge Vasilugin <vasilugin@yandex.ru>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Acked-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/3e275d259f476f597dab91a9c395015ef3fe3284.1663445157.git.daniel@makrotopia.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5aa0461d11806599cf3b42bea1a3e68656bd0dd2
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Sat Sep 17 21:29:40 2022 +0100

    wifi: rt2x00: set VGC gain for both chains of MT7620
    
    [ Upstream commit 0e09768c085709e10ece3b68f6ac921d3f6a9caa ]
    
    Set bbp66 for all chains of the MT7620.
    
    Reported-by: Serge Vasilugin <vasilugin@yandex.ru>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Acked-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/29e161397e5c9d9399da0fe87d44458aa2b90a78.1663445157.git.daniel@makrotopia.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d9c00979a7e1607b4403378cf016ecc118cbeea
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Sat Sep 17 21:29:26 2022 +0100

    wifi: rt2x00: set correct TX_SW_CFG1 MAC register for MT7620
    
    [ Upstream commit eeb50acf15762b61921f9df18663f839f387c054 ]
    
    Set correct TX_SW_CFG1 MAC register as it is done also in v3 of the
    vendor driver[1].
    
    [1]: https://gitlab.com/dm38/padavan-ng/-/blob/master/trunk/proprietary/rt_wifi/rtpci/3.0.X.X/mt76x2/chips/rt6352.c#L531
    Reported-by: Serge Vasilugin <vasilugin@yandex.ru>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Acked-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/4be38975ce600a34249e12d09a3cb758c6e71071.1663445157.git.daniel@makrotopia.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27ed98e8a9b053ef893e7191cbe1a73057928c57
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Sat Sep 17 21:28:29 2022 +0100

    wifi: rt2x00: don't run Rt5592 IQ calibration on MT7620
    
    [ Upstream commit d3aad83d05aec0cfd7670cf0028f2ad4b81de92e ]
    
    The function rt2800_iq_calibrate is intended for Rt5592 only.
    Don't call it for MT7620 which has it's own calibration functions.
    
    Reported-by: Serge Vasilugin <vasilugin@yandex.ru>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/31a1c34ddbd296b82f38c18c9ae7339059215fdc.1663445157.git.daniel@makrotopia.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d67986e72087733390e50936722a60dd4139639
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Thu Sep 15 09:55:56 2022 +0800

    can: bcm: check the result of can_send() in bcm_can_tx()
    
    [ Upstream commit 3fd7bfd28cfd68ae80a2fe92ea1615722cc2ee6e ]
    
    If can_send() fail, it should not update frames_abs counter
    in bcm_can_tx(). Add the result check for can_send() in bcm_can_tx().
    
    Suggested-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Suggested-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Link: https://lore.kernel.org/all/9851878e74d6d37aee2f1ee76d68361a46f89458.1663206163.git.william.xuanziyang@huawei.com
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b674dce4162bb46d396586e30e4653427023875
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Mon Sep 19 10:56:59 2022 -0700

    Bluetooth: hci_sysfs: Fix attempting to call device_add multiple times
    
    [ Upstream commit 448a496f760664d3e2e79466aa1787e6abc922b5 ]
    
    device_add shall not be called multiple times as stated in its
    documentation:
    
     'Do not call this routine or device_register() more than once for
     any device structure'
    
    Syzkaller reports a bug as follows [1]:
    ------------[ cut here ]------------
    kernel BUG at lib/list_debug.c:33!
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN
    [...]
    Call Trace:
     <TASK>
     __list_add include/linux/list.h:69 [inline]
     list_add_tail include/linux/list.h:102 [inline]
     kobj_kset_join lib/kobject.c:164 [inline]
     kobject_add_internal+0x18f/0x8f0 lib/kobject.c:214
     kobject_add_varg lib/kobject.c:358 [inline]
     kobject_add+0x150/0x1c0 lib/kobject.c:410
     device_add+0x368/0x1e90 drivers/base/core.c:3452
     hci_conn_add_sysfs+0x9b/0x1b0 net/bluetooth/hci_sysfs.c:53
     hci_le_cis_estabilished_evt+0x57c/0xae0 net/bluetooth/hci_event.c:6799
     hci_le_meta_evt+0x2b8/0x510 net/bluetooth/hci_event.c:7110
     hci_event_func net/bluetooth/hci_event.c:7440 [inline]
     hci_event_packet+0x63d/0xfd0 net/bluetooth/hci_event.c:7495
     hci_rx_work+0xae7/0x1230 net/bluetooth/hci_core.c:4007
     process_one_work+0x991/0x1610 kernel/workqueue.c:2289
     worker_thread+0x665/0x1080 kernel/workqueue.c:2436
     kthread+0x2e4/0x3a0 kernel/kthread.c:376
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306
     </TASK>
    
    Link: https://syzkaller.appspot.com/bug?id=da3246e2d33afdb92d66bc166a0934c5b146404a
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Tested-by: Hawkins Jiawei <yin31149@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e25ca9af8a139422e347a3346bb9a03a10ae73f1
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Sun Sep 4 00:32:56 2022 +0900

    Bluetooth: L2CAP: initialize delayed works at l2cap_chan_create()
    
    [ Upstream commit 2d2cb3066f2c90cd8ca540b36ba7a55e7f2406e0 ]
    
    syzbot is reporting cancel_delayed_work() without INIT_DELAYED_WORK() at
    l2cap_chan_del() [1], for CONF_NOT_COMPLETE flag (which meant to prevent
    l2cap_chan_del() from calling cancel_delayed_work()) is cleared by timer
    which fires before l2cap_chan_del() is called by closing file descriptor
    created by socket(AF_BLUETOOTH, SOCK_STREAM, BTPROTO_L2CAP).
    
    l2cap_bredr_sig_cmd(L2CAP_CONF_REQ) and l2cap_bredr_sig_cmd(L2CAP_CONF_RSP)
    are calling l2cap_ertm_init(chan), and they call l2cap_chan_ready() (which
    clears CONF_NOT_COMPLETE flag) only when l2cap_ertm_init(chan) succeeded.
    
    l2cap_sock_init() does not call l2cap_ertm_init(chan), and it instead sets
    CONF_NOT_COMPLETE flag by calling l2cap_chan_set_defaults(). However, when
    connect() is requested, "command 0x0409 tx timeout" happens after 2 seconds
     from connect() request, and CONF_NOT_COMPLETE flag is cleared after 4
    seconds from connect() request, for l2cap_conn_start() from
    l2cap_info_timeout() callback scheduled by
    
      schedule_delayed_work(&conn->info_timer, L2CAP_INFO_TIMEOUT);
    
    in l2cap_connect() is calling l2cap_chan_ready().
    
    Fix this problem by initializing delayed works used by L2CAP_MODE_ERTM
    mode as soon as l2cap_chan_create() allocates a channel, like I did in
    commit be8597239379f0f5 ("Bluetooth: initialize skb_queue_head at
    l2cap_chan_create()").
    
    Link: https://syzkaller.appspot.com/bug?extid=83672956c7aa6af698b3 [1]
    Reported-by: syzbot <syzbot+83672956c7aa6af698b3@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b051d9bf98bd9cea312b228e264eb6542a9beb67
Author: Patrick Rudolph <patrick.rudolph@9elements.com>
Date:   Fri Sep 9 14:59:53 2022 +0200

    regulator: core: Prevent integer underflow
    
    [ Upstream commit 8d8e16592022c9650df8aedfe6552ed478d7135b ]
    
    By using a ratio of delay to poll_enabled_time that is not integer
    time_remaining underflows and does not exit the loop as expected.
    As delay could be derived from DT and poll_enabled_time is defined
    in the driver this can easily happen.
    
    Use a signed iterator to make sure that the loop exits once
    the remaining time is negative.
    
    Signed-off-by: Patrick Rudolph <patrick.rudolph@9elements.com>
    Link: https://lore.kernel.org/r/20220909125954.577669-1-patrick.rudolph@9elements.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e01d96494a9de0f48b1167f0494f6d929fa773ed
Author: Alexander Coffin <alex.coffin@matician.com>
Date:   Mon Aug 8 10:49:26 2022 -0700

    wifi: brcmfmac: fix use-after-free bug in brcmf_netdev_start_xmit()
    
    [ Upstream commit 3f42faf6db431e04bf942d2ebe3ae88975723478 ]
    
    > ret = brcmf_proto_tx_queue_data(drvr, ifp->ifidx, skb);
    
    may be schedule, and then complete before the line
    
    > ndev->stats.tx_bytes += skb->len;
    
    [   46.912801] ==================================================================
    [   46.920552] BUG: KASAN: use-after-free in brcmf_netdev_start_xmit+0x718/0x8c8 [brcmfmac]
    [   46.928673] Read of size 4 at addr ffffff803f5882e8 by task systemd-resolve/328
    [   46.935991]
    [   46.937514] CPU: 1 PID: 328 Comm: systemd-resolve Tainted: G           O      5.4.199-[REDACTED] #1
    [   46.947255] Hardware name: [REDACTED]
    [   46.954568] Call trace:
    [   46.957037]  dump_backtrace+0x0/0x2b8
    [   46.960719]  show_stack+0x24/0x30
    [   46.964052]  dump_stack+0x128/0x194
    [   46.967557]  print_address_description.isra.0+0x64/0x380
    [   46.972877]  __kasan_report+0x1d4/0x240
    [   46.976723]  kasan_report+0xc/0x18
    [   46.980138]  __asan_report_load4_noabort+0x18/0x20
    [   46.985027]  brcmf_netdev_start_xmit+0x718/0x8c8 [brcmfmac]
    [   46.990613]  dev_hard_start_xmit+0x1bc/0xda0
    [   46.994894]  sch_direct_xmit+0x198/0xd08
    [   46.998827]  __qdisc_run+0x37c/0x1dc0
    [   47.002500]  __dev_queue_xmit+0x1528/0x21f8
    [   47.006692]  dev_queue_xmit+0x24/0x30
    [   47.010366]  neigh_resolve_output+0x37c/0x678
    [   47.014734]  ip_finish_output2+0x598/0x2458
    [   47.018927]  __ip_finish_output+0x300/0x730
    [   47.023118]  ip_output+0x2e0/0x430
    [   47.026530]  ip_local_out+0x90/0x140
    [   47.030117]  igmpv3_sendpack+0x14c/0x228
    [   47.034049]  igmpv3_send_cr+0x384/0x6b8
    [   47.037895]  igmp_ifc_timer_expire+0x4c/0x118
    [   47.042262]  call_timer_fn+0x1cc/0xbe8
    [   47.046021]  __run_timers+0x4d8/0xb28
    [   47.049693]  run_timer_softirq+0x24/0x40
    [   47.053626]  __do_softirq+0x2c0/0x117c
    [   47.057387]  irq_exit+0x2dc/0x388
    [   47.060715]  __handle_domain_irq+0xb4/0x158
    [   47.064908]  gic_handle_irq+0x58/0xb0
    [   47.068581]  el0_irq_naked+0x50/0x5c
    [   47.072162]
    [   47.073665] Allocated by task 328:
    [   47.077083]  save_stack+0x24/0xb0
    [   47.080410]  __kasan_kmalloc.isra.0+0xc0/0xe0
    [   47.084776]  kasan_slab_alloc+0x14/0x20
    [   47.088622]  kmem_cache_alloc+0x15c/0x468
    [   47.092643]  __alloc_skb+0xa4/0x498
    [   47.096142]  igmpv3_newpack+0x158/0xd78
    [   47.099987]  add_grhead+0x210/0x288
    [   47.103485]  add_grec+0x6b0/0xb70
    [   47.106811]  igmpv3_send_cr+0x2e0/0x6b8
    [   47.110657]  igmp_ifc_timer_expire+0x4c/0x118
    [   47.115027]  call_timer_fn+0x1cc/0xbe8
    [   47.118785]  __run_timers+0x4d8/0xb28
    [   47.122457]  run_timer_softirq+0x24/0x40
    [   47.126389]  __do_softirq+0x2c0/0x117c
    [   47.130142]
    [   47.131643] Freed by task 180:
    [   47.134712]  save_stack+0x24/0xb0
    [   47.138041]  __kasan_slab_free+0x108/0x180
    [   47.142146]  kasan_slab_free+0x10/0x18
    [   47.145904]  slab_free_freelist_hook+0xa4/0x1b0
    [   47.150444]  kmem_cache_free+0x8c/0x528
    [   47.154292]  kfree_skbmem+0x94/0x108
    [   47.157880]  consume_skb+0x10c/0x5a8
    [   47.161466]  __dev_kfree_skb_any+0x88/0xa0
    [   47.165598]  brcmu_pkt_buf_free_skb+0x44/0x68 [brcmutil]
    [   47.171023]  brcmf_txfinalize+0xec/0x190 [brcmfmac]
    [   47.176016]  brcmf_proto_bcdc_txcomplete+0x1c0/0x210 [brcmfmac]
    [   47.182056]  brcmf_sdio_sendfromq+0x8dc/0x1e80 [brcmfmac]
    [   47.187568]  brcmf_sdio_dpc+0xb48/0x2108 [brcmfmac]
    [   47.192529]  brcmf_sdio_dataworker+0xc8/0x238 [brcmfmac]
    [   47.197859]  process_one_work+0x7fc/0x1a80
    [   47.201965]  worker_thread+0x31c/0xc40
    [   47.205726]  kthread+0x2d8/0x370
    [   47.208967]  ret_from_fork+0x10/0x18
    [   47.212546]
    [   47.214051] The buggy address belongs to the object at ffffff803f588280
    [   47.214051]  which belongs to the cache skbuff_head_cache of size 208
    [   47.227086] The buggy address is located 104 bytes inside of
    [   47.227086]  208-byte region [ffffff803f588280, ffffff803f588350)
    [   47.238814] The buggy address belongs to the page:
    [   47.243618] page:ffffffff00dd6200 refcount:1 mapcount:0 mapping:ffffff804b6bf800 index:0xffffff803f589900 compound_mapcount: 0
    [   47.255007] flags: 0x10200(slab|head)
    [   47.258689] raw: 0000000000010200 ffffffff00dfa980 0000000200000002 ffffff804b6bf800
    [   47.266439] raw: ffffff803f589900 0000000080190018 00000001ffffffff 0000000000000000
    [   47.274180] page dumped because: kasan: bad access detected
    [   47.279752]
    [   47.281251] Memory state around the buggy address:
    [   47.286051]  ffffff803f588180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   47.293277]  ffffff803f588200: fb fb fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [   47.300502] >ffffff803f588280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   47.307723]                                                           ^
    [   47.314343]  ffffff803f588300: fb fb fb fb fb fb fb fb fb fb fc fc fc fc fc fc
    [   47.321569]  ffffff803f588380: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
    [   47.328789] ==================================================================
    
    Signed-off-by: Alexander Coffin <alex.coffin@matician.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220808174925.3922558-1-alex.coffin@matician.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be81c44242b20fc3bdcc73480ef8aaee56f5d0b6
Author: Khalid Masum <khalid.masum.92@gmail.com>
Date:   Thu Sep 1 13:12:10 2022 +0600

    xfrm: Update ipcomp_scratches with NULL when freed
    
    [ Upstream commit 8a04d2fc700f717104bfb95b0f6694e448a4537f ]
    
    Currently if ipcomp_alloc_scratches() fails to allocate memory
    ipcomp_scratches holds obsolete address. So when we try to free the
    percpu scratches using ipcomp_free_scratches() it tries to vfree non
    existent vm area. Described below:
    
    static void * __percpu *ipcomp_alloc_scratches(void)
    {
            ...
            scratches = alloc_percpu(void *);
            if (!scratches)
                    return NULL;
    ipcomp_scratches does not know about this allocation failure.
    Therefore holding the old obsolete address.
            ...
    }
    
    So when we free,
    
    static void ipcomp_free_scratches(void)
    {
            ...
            scratches = ipcomp_scratches;
    Assigning obsolete address from ipcomp_scratches
    
            if (!scratches)
                    return;
    
            for_each_possible_cpu(i)
                   vfree(*per_cpu_ptr(scratches, i));
    Trying to free non existent page, causing warning: trying to vfree
    existent vm area.
            ...
    }
    
    Fix this breakage by updating ipcomp_scrtches with NULL when scratches
    is freed
    
    Suggested-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reported-by: syzbot+5ec9bb042ddfe9644773@syzkaller.appspotmail.com
    Tested-by: syzbot+5ec9bb042ddfe9644773@syzkaller.appspotmail.com
    Signed-off-by: Khalid Masum <khalid.masum.92@gmail.com>
    Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9661724f6206bd606ecf13acada676a9975d230b
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Tue Aug 16 23:46:13 2022 +0900

    wifi: ath9k: avoid uninit memory read in ath9k_htc_rx_msg()
    
    [ Upstream commit b383e8abed41cc6ff1a3b34de75df9397fa4878c ]
    
    syzbot is reporting uninit value at ath9k_htc_rx_msg() [1], for
    ioctl(USB_RAW_IOCTL_EP_WRITE) can call ath9k_hif_usb_rx_stream() with
    pkt_len = 0 but ath9k_hif_usb_rx_stream() uses
    __dev_alloc_skb(pkt_len + 32, GFP_ATOMIC) based on an assumption that
    pkt_len is valid. As a result, ath9k_hif_usb_rx_stream() allocates skb
    with uninitialized memory and ath9k_htc_rx_msg() is reading from
    uninitialized memory.
    
    Since bytes accessed by ath9k_htc_rx_msg() is not known until
    ath9k_htc_rx_msg() is called, it would be difficult to check minimal valid
    pkt_len at "if (pkt_len > 2 * MAX_RX_BUF_SIZE) {" line in
    ath9k_hif_usb_rx_stream().
    
    We have two choices. One is to workaround by adding __GFP_ZERO so that
    ath9k_htc_rx_msg() sees 0 if pkt_len is invalid. The other is to let
    ath9k_htc_rx_msg() validate pkt_len before accessing. This patch chose
    the latter.
    
    Note that I'm not sure threshold condition is correct, for I can't find
    details on possible packet length used by this protocol.
    
    Link: https://syzkaller.appspot.com/bug?extid=2ca247c2d60c7023de7f [1]
    Reported-by: syzbot <syzbot+2ca247c2d60c7023de7f@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/7acfa1be-4b5c-b2ce-de43-95b0593fb3e5@I-love.SAKURA.ne.jp
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0958e487e81bdb5ca658a3b6e72c8252d6e163f9
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Aug 22 21:15:28 2022 +0000

    tcp: annotate data-race around tcp_md5sig_pool_populated
    
    [ Upstream commit aacd467c0a576e5e44d2de4205855dc0fe43f6fb ]
    
    tcp_md5sig_pool_populated can be read while another thread
    changes its value.
    
    The race has no consequence because allocations
    are protected with tcp_md5sig_mutex.
    
    This patch adds READ_ONCE() and WRITE_ONCE() to document
    the race and silence KCSAN.
    
    Reported-by: Abhishek Shah <abhishek.shah@columbia.edu>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 129ca0db956e1e2483f55d2217756f9258f52737
Author: Mike Pattrick <mkp@redhat.com>
Date:   Wed Aug 17 11:06:35 2022 -0400

    openvswitch: Fix overreporting of drops in dropwatch
    
    [ Upstream commit c21ab2afa2c64896a7f0e3cbc6845ec63dcfad2e ]
    
    Currently queue_userspace_packet will call kfree_skb for all frames,
    whether or not an error occurred. This can result in a single dropped
    frame being reported as multiple drops in dropwatch. This functions
    caller may also call kfree_skb in case of an error. This patch will
    consume the skbs instead and allow caller's to use kfree_skb.
    
    Signed-off-by: Mike Pattrick <mkp@redhat.com>
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2109957
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4398e8a7fd6abf9cdfc69ee2a75434bf47c2a210
Author: Mike Pattrick <mkp@redhat.com>
Date:   Wed Aug 17 11:06:34 2022 -0400

    openvswitch: Fix double reporting of drops in dropwatch
    
    [ Upstream commit 1100248a5c5ccd57059eb8d02ec077e839a23826 ]
    
    Frames sent to userspace can be reported as dropped in
    ovs_dp_process_packet, however, if they are dropped in the netlink code
    then netlink_attachskb will report the same frame as dropped.
    
    This patch checks for error codes which indicate that the frame has
    already been freed.
    
    Signed-off-by: Mike Pattrick <mkp@redhat.com>
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2109946
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3c9b94734531a08c9bf51057ca3a9022cc90f91
Author: Quentin Monnet <quentin@isovalent.com>
Date:   Mon Aug 15 17:22:05 2022 +0100

    bpftool: Clear errno after libcap's checks
    
    [ Upstream commit cea558855c39b7f1f02ff50dcf701ca6596bc964 ]
    
    When bpftool is linked against libcap, the library runs a "constructor"
    function to compute the number of capabilities of the running kernel
    [0], at the beginning of the execution of the program. As part of this,
    it performs multiple calls to prctl(). Some of these may fail, and set
    errno to a non-zero value:
    
        # strace -e prctl ./bpftool version
        prctl(PR_CAPBSET_READ, CAP_MAC_OVERRIDE) = 1
        prctl(PR_CAPBSET_READ, 0x30 /* CAP_??? */) = -1 EINVAL (Invalid argument)
        prctl(PR_CAPBSET_READ, CAP_CHECKPOINT_RESTORE) = 1
        prctl(PR_CAPBSET_READ, 0x2c /* CAP_??? */) = -1 EINVAL (Invalid argument)
        prctl(PR_CAPBSET_READ, 0x2a /* CAP_??? */) = -1 EINVAL (Invalid argument)
        prctl(PR_CAPBSET_READ, 0x29 /* CAP_??? */) = -1 EINVAL (Invalid argument)
        ** fprintf added at the top of main(): we have errno == 1
        ./bpftool v7.0.0
        using libbpf v1.0
        features: libbfd, libbpf_strict, skeletons
        +++ exited with 0 +++
    
    This has been addressed in libcap 2.63 [1], but until this version is
    available everywhere, we can fix it on bpftool side.
    
    Let's clean errno at the beginning of the main() function, to make sure
    that these checks do not interfere with the batch mode, where we error
    out if errno is set after a bpftool command.
    
      [0] https://git.kernel.org/pub/scm/libs/libcap/libcap.git/tree/libcap/cap_alloc.c?h=libcap-2.65#n20
      [1] https://git.kernel.org/pub/scm/libs/libcap/libcap.git/commit/?id=f25a1b7e69f7b33e6afb58b3e38f3450b7d2d9a0
    
    Signed-off-by: Quentin Monnet <quentin@isovalent.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220815162205.45043-1-quentin@isovalent.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50e45034c5802cedbf5b707364ea76ace29ad984
Author: Wright Feng <wright.feng@cypress.com>
Date:   Fri Jul 22 13:56:28 2022 +0200

    wifi: brcmfmac: fix invalid address access when enabling SCAN log level
    
    [ Upstream commit aa666b68e73fc06d83c070d96180b9010cf5a960 ]
    
    The variable i is changed when setting random MAC address and causes
    invalid address access when printing the value of pi->reqs[i]->reqid.
    
    We replace reqs index with ri to fix the issue.
    
    [  136.726473] Unable to handle kernel access to user memory outside uaccess routines at virtual address 0000000000000000
    [  136.737365] Mem abort info:
    [  136.740172]   ESR = 0x96000004
    [  136.743359]   Exception class = DABT (current EL), IL = 32 bits
    [  136.749294]   SET = 0, FnV = 0
    [  136.752481]   EA = 0, S1PTW = 0
    [  136.755635] Data abort info:
    [  136.758514]   ISV = 0, ISS = 0x00000004
    [  136.762487]   CM = 0, WnR = 0
    [  136.765522] user pgtable: 4k pages, 48-bit VAs, pgdp = 000000005c4e2577
    [  136.772265] [0000000000000000] pgd=0000000000000000
    [  136.777160] Internal error: Oops: 96000004 [#1] PREEMPT SMP
    [  136.782732] Modules linked in: brcmfmac(O) brcmutil(O) cfg80211(O) compat(O)
    [  136.789788] Process wificond (pid: 3175, stack limit = 0x00000000053048fb)
    [  136.796664] CPU: 3 PID: 3175 Comm: wificond Tainted: G           O      4.19.42-00001-g531a5f5 #1
    [  136.805532] Hardware name: Freescale i.MX8MQ EVK (DT)
    [  136.810584] pstate: 60400005 (nZCv daif +PAN -UAO)
    [  136.815429] pc : brcmf_pno_config_sched_scans+0x6cc/0xa80 [brcmfmac]
    [  136.821811] lr : brcmf_pno_config_sched_scans+0x67c/0xa80 [brcmfmac]
    [  136.828162] sp : ffff00000e9a3880
    [  136.831475] x29: ffff00000e9a3890 x28: ffff800020543400
    [  136.836786] x27: ffff8000b1008880 x26: ffff0000012bf6a0
    [  136.842098] x25: ffff80002054345c x24: ffff800088d22400
    [  136.847409] x23: ffff0000012bf638 x22: ffff0000012bf6d8
    [  136.852721] x21: ffff8000aced8fc0 x20: ffff8000ac164400
    [  136.858032] x19: ffff00000e9a3946 x18: 0000000000000000
    [  136.863343] x17: 0000000000000000 x16: 0000000000000000
    [  136.868655] x15: ffff0000093f3b37 x14: 0000000000000050
    [  136.873966] x13: 0000000000003135 x12: 0000000000000000
    [  136.879277] x11: 0000000000000000 x10: ffff000009a61888
    [  136.884589] x9 : 000000000000000f x8 : 0000000000000008
    [  136.889900] x7 : 303a32303d726464 x6 : ffff00000a1f957d
    [  136.895211] x5 : 0000000000000000 x4 : ffff00000e9a3942
    [  136.900523] x3 : 0000000000000000 x2 : ffff0000012cead8
    [  136.905834] x1 : ffff0000012bf6d8 x0 : 0000000000000000
    [  136.911146] Call trace:
    [  136.913623]  brcmf_pno_config_sched_scans+0x6cc/0xa80 [brcmfmac]
    [  136.919658]  brcmf_pno_start_sched_scan+0xa4/0x118 [brcmfmac]
    [  136.925430]  brcmf_cfg80211_sched_scan_start+0x80/0xe0 [brcmfmac]
    [  136.931636]  nl80211_start_sched_scan+0x140/0x308 [cfg80211]
    [  136.937298]  genl_rcv_msg+0x358/0x3f4
    [  136.940960]  netlink_rcv_skb+0xb4/0x118
    [  136.944795]  genl_rcv+0x34/0x48
    [  136.947935]  netlink_unicast+0x264/0x300
    [  136.951856]  netlink_sendmsg+0x2e4/0x33c
    [  136.955781]  __sys_sendto+0x120/0x19c
    
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Signed-off-by: Alvin Šipraga <alsi@bang-olufsen.dk>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220722115632.620681-4-alvin@pqrs.dk
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbacfcde5fff25ac22597e8373a065c647da6738
Author: Dai Ngo <dai.ngo@oracle.com>
Date:   Mon Sep 26 10:59:16 2022 -0700

    NFSD: fix use-after-free on source server when doing inter-server copy
    
    [ Upstream commit 019805fea91599b22dfa62ffb29c022f35abeb06 ]
    
    Use-after-free occurred when the laundromat tried to free expired
    cpntf_state entry on the s2s_cp_stateids list after inter-server
    copy completed. The sc_cp_list that the expired copy state was
    inserted on was already freed.
    
    When COPY completes, the Linux client normally sends LOCKU(lock_state x),
    FREE_STATEID(lock_state x) and CLOSE(open_state y) to the source server.
    The nfs4_put_stid call from nfsd4_free_stateid cleans up the copy state
    from the s2s_cp_stateids list before freeing the lock state's stid.
    
    However, sometimes the CLOSE was sent before the FREE_STATEID request.
    When this happens, the nfsd4_close_open_stateid call from nfsd4_close
    frees all lock states on its st_locks list without cleaning up the copy
    state on the sc_cp_list list. When the time the FREE_STATEID arrives the
    server returns BAD_STATEID since the lock state was freed. This causes
    the use-after-free error to occur when the laundromat tries to free
    the expired cpntf_state.
    
    This patch adds a call to nfs4_free_cpntf_statelist in
    nfsd4_close_open_stateid to clean up the copy state before calling
    free_ol_stateid_reaplist to free the lock state's stid on the reaplist.
    
    Signed-off-by: Dai Ngo <dai.ngo@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3de402a5248a9de841d47b5a11b5dbe5c30da682
Author: Anna Schumaker <Anna.Schumaker@Netapp.com>
Date:   Tue Sep 13 14:01:50 2022 -0400

    NFSD: Return nfserr_serverfault if splice_ok but buf->pages have data
    
    [ Upstream commit 06981d560606ac48d61e5f4fff6738b925c93173 ]
    
    This was discussed with Chuck as part of this patch set. Returning
    nfserr_resource was decided to not be the best error message here, and
    he suggested changing to nfserr_serverfault instead.
    
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Link: https://lore.kernel.org/linux-nfs/20220907195259.926736-1-anna@kernel.org/T/#t
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f730d4ae6f9ea8aa3b5e0c6c338fe8903b4647d
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Sep 19 19:45:14 2022 -0700

    x86/entry: Work around Clang __bdos() bug
    
    [ Upstream commit 3e1730842f142add55dc658929221521a9ea62b6 ]
    
    Clang produces a false positive when building with CONFIG_FORTIFY_SOURCE=y
    and CONFIG_UBSAN_BOUNDS=y when operating on an array with a dynamic
    offset. Work around this by using a direct assignment of an empty
    instance. Avoids this warning:
    
    ../include/linux/fortify-string.h:309:4: warning: call to __write_overflow_field declared with 'warn
    ing' attribute: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Wat
    tribute-warning]
                            __write_overflow_field(p_size_field, size);
                            ^
    
    which was isolated to the memset() call in xen_load_idt().
    
    Note that this looks very much like another bug that was worked around:
    https://github.com/ClangBuiltLinux/linux/issues/1592
    
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: x86@kernel.org
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: xen-devel@lists.xenproject.org
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/lkml/41527d69-e8ab-3f86-ff37-6b298c01d5bc@oracle.com
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 513943bf879d45005213e6f5cfb7d9e9943f589f
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Tue Sep 20 04:06:57 2022 -0700

    thermal: intel_powerclamp: Use get_cpu() instead of smp_processor_id() to avoid crash
    
    [ Upstream commit 68b99e94a4a2db6ba9b31fe0485e057b9354a640 ]
    
    When CPU 0 is offline and intel_powerclamp is used to inject
    idle, it generates kernel BUG:
    
    BUG: using smp_processor_id() in preemptible [00000000] code: bash/15687
    caller is debug_smp_processor_id+0x17/0x20
    CPU: 4 PID: 15687 Comm: bash Not tainted 5.19.0-rc7+ #57
    Call Trace:
    <TASK>
    dump_stack_lvl+0x49/0x63
    dump_stack+0x10/0x16
    check_preemption_disabled+0xdd/0xe0
    debug_smp_processor_id+0x17/0x20
    powerclamp_set_cur_state+0x7f/0xf9 [intel_powerclamp]
    ...
    ...
    
    Here CPU 0 is the control CPU by default and changed to the current CPU,
    if CPU 0 offlined. This check has to be performed under cpus_read_lock(),
    hence the above warning.
    
    Use get_cpu() instead of smp_processor_id() to avoid this BUG.
    
    Suggested-by: Chen Yu <yu.c.chen@intel.com>
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    [ rjw: Subject edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 708b9abe1b4a2f050a483db4b7edfc446b13df1f
Author: Chao Qin <chao.qin@intel.com>
Date:   Tue Sep 20 14:08:26 2022 +0800

    powercap: intel_rapl: fix UBSAN shift-out-of-bounds issue
    
    [ Upstream commit 2d93540014387d1c73b9ccc4d7895320df66d01b ]
    
    When value < time_unit, the parameter of ilog2() will be zero and
    the return value is -1. u64(-1) is too large for shift exponent
    and then will trigger shift-out-of-bounds:
    
    shift exponent 18446744073709551615 is too large for 32-bit type 'int'
    Call Trace:
     rapl_compute_time_window_core
     rapl_write_data_raw
     set_time_window
     store_constraint_time_window_us
    
    Signed-off-by: Chao Qin <chao.qin@intel.com>
    Acked-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b434edb0e9d159741f909eeb20843ae008e30e62
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Sep 7 16:05:56 2022 -0700

    MIPS: BCM47XX: Cast memcmp() of function to (void *)
    
    [ Upstream commit 0dedcf6e3301836eb70cfa649052e7ce4fcd13ba ]
    
    Clang is especially sensitive about argument type matching when using
    __overloaded functions (like memcmp(), etc). Help it see that function
    pointers are just "void *". Avoids this error:
    
    arch/mips/bcm47xx/prom.c:89:8: error: no matching function for call to 'memcmp'
                       if (!memcmp(prom_init, prom_init + mem, 32))
                            ^~~~~~
    include/linux/string.h:156:12: note: candidate function not viable: no known conversion from 'void (void)' to 'const void *' for 1st argument extern int memcmp(const void *,const void *,__kernel_size_t);
    
    Cc: Hauke Mehrtens <hauke@hauke-m.de>
    Cc: "Rafał Miłecki" <zajec5@gmail.com>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: linux-mips@vger.kernel.org
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: llvm@lists.linux.dev
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/lkml/202209080652.sz2d68e5-lkp@intel.com
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c61a37ea70e18998158fa57554eb9e571e3f3aa
Author: Arvid Norlander <lkml@vorpal.se>
Date:   Wed Aug 24 20:49:50 2022 +0200

    ACPI: video: Add Toshiba Satellite/Portege Z830 quirk
    
    [ Upstream commit 574160b8548deff8b80b174f03201e94ab8431e2 ]
    
    Toshiba Satellite Z830 needs the quirk video_disable_backlight_sysfs_if
    for proper backlight control after suspend/resume cycles.
    
    Toshiba Portege Z830 is simply the same laptop rebranded for certain
    markets (I looked through the manual to other language sections to confirm
    this) and thus also needs this quirk.
    
    Thanks to Hans de Goede for suggesting this fix.
    
    Link: https://www.spinics.net/lists/platform-driver-x86/msg34394.html
    Suggested-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Arvid Norlander <lkml@vorpal.se>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Tested-by: Arvid Norlander <lkml@vorpal.se>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0dd025483f150f329842c36ef8c3a24fb60f3bbb
Author: Zqiang <qiang1.zhang@intel.com>
Date:   Tue Jul 12 16:26:05 2022 +0800

    rcu-tasks: Convert RCU_LOCKDEP_WARN() to WARN_ONCE()
    
    [ Upstream commit fcd53c8a4dfa38bafb89efdd0b0f718f3a03f884 ]
    
    Kernels built with CONFIG_PROVE_RCU=y and CONFIG_DEBUG_LOCK_ALLOC=y
    attempt to emit a warning when the synchronize_rcu_tasks_generic()
    function is called during early boot while the rcu_scheduler_active
    variable is RCU_SCHEDULER_INACTIVE.  However the warnings is not
    actually be printed because the debug_lockdep_rcu_enabled() returns
    false, exactly because the rcu_scheduler_active variable is still equal
    to RCU_SCHEDULER_INACTIVE.
    
    This commit therefore replaces RCU_LOCKDEP_WARN() with WARN_ONCE()
    to force these warnings to actually be printed.
    
    Signed-off-by: Zqiang <qiang1.zhang@intel.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36d4ffbedff718a0701234069ab3b38d5dd32799
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Jun 22 13:47:11 2022 +0200

    rcu: Back off upon fill_page_cache_func() allocation failure
    
    [ Upstream commit 093590c16b447f53e66771c8579ae66c96f6ef61 ]
    
    The fill_page_cache_func() function allocates couple of pages to store
    kvfree_rcu_bulk_data structures. This is a lightweight (GFP_NORETRY)
    allocation which can fail under memory pressure. The function will,
    however keep retrying even when the previous attempt has failed.
    
    This retrying is in theory correct, but in practice the allocation is
    invoked from workqueue context, which means that if the memory reclaim
    gets stuck, these retries can hog the worker for quite some time.
    Although the workqueues subsystem automatically adjusts concurrency, such
    adjustment is not guaranteed to happen until the worker context sleeps.
    And the fill_page_cache_func() function's retry loop is not guaranteed
    to sleep (see the should_reclaim_retry() function).
    
    And we have seen this function cause workqueue lockups:
    
    kernel: BUG: workqueue lockup - pool cpus=93 node=1 flags=0x1 nice=0 stuck for 32s!
    [...]
    kernel: pool 74: cpus=37 node=0 flags=0x1 nice=0 hung=32s workers=2 manager: 2146
    kernel:   pwq 498: cpus=249 node=1 flags=0x1 nice=0 active=4/256 refcnt=5
    kernel:     in-flight: 1917:fill_page_cache_func
    kernel:     pending: dbs_work_handler, free_work, kfree_rcu_monitor
    
    Originally, we thought that the root cause of this lockup was several
    retries with direct reclaim, but this is not yet confirmed.  Furthermore,
    we have seen similar lockups without any heavy memory pressure.  This
    suggests that there are other factors contributing to these lockups.
    However, it is not really clear that endless retries are desireable.
    
    So let's make the fill_page_cache_func() function back off after
    allocation failure.
    
    Cc: Uladzislau Rezki (Sony) <urezki@gmail.com>
    Cc: "Paul E. McKenney" <paulmck@kernel.org>
    Cc: Frederic Weisbecker <frederic@kernel.org>
    Cc: Neeraj Upadhyay <quic_neeraju@quicinc.com>
    Cc: Josh Triplett <josh@joshtriplett.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: Joel Fernandes <joel@joelfernandes.org>
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Uladzislau Rezki (Sony) <urezki@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 278d8ba2b288e8f7928f2333f8611a5f0fdbdd68
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Tue Sep 20 09:15:18 2022 -0400

    selftest: tpm2: Add Client.__del__() to close /dev/tpm* handle
    
    [ Upstream commit 2d869f0b458547386fbcd8cf3004b271b7347b7f ]
    
    The following output can bee seen when the test is executed:
    
      test_flush_context (tpm2_tests.SpaceTest) ... \
        /usr/lib64/python3.6/unittest/case.py:605: ResourceWarning: \
        unclosed file <_io.FileIO name='/dev/tpmrm0' mode='rb+' closefd=True>
    
    An instance of Client does not implicitly close /dev/tpm* handle, once it
    gets destroyed. Close the file handle in the class destructor
    Client.__del__().
    
    Fixes: 6ea3dfe1e0732 ("selftests: add TPM 2.0 tests")
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: linux-kselftest@vger.kernel.org
    Cc: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b60aa21e2f3ab0cfccefcd3f4963d184ec801eea
Author: Chao Yu <chao@kernel.org>
Date:   Wed Sep 14 21:28:46 2022 +0800

    f2fs: fix to account FS_CP_DATA_IO correctly
    
    [ Upstream commit d80afefb17e01aa0c46a8eebc01882e0ebd8b0f6 ]
    
    f2fs_inode_info.cp_task was introduced for FS_CP_DATA_IO accounting
    since commit b0af6d491a6b ("f2fs: add app/fs io stat").
    
    However, cp_task usage coverage has been increased due to below
    commits:
    commit 040d2bb318d1 ("f2fs: fix to avoid deadloop if data_flush is on")
    commit 186857c5a14a ("f2fs: fix potential recursive call when enabling data_flush")
    
    So that, if data_flush mountoption is on, when data flush was
    triggered from background, the IO from data flush will be accounted
    as checkpoint IO type incorrectly.
    
    In order to fix this issue, this patch splits cp_task into two:
    a) cp_task: used for IO accounting
    b) wb_task: used to avoid deadlock
    
    Fixes: 040d2bb318d1 ("f2fs: fix to avoid deadloop if data_flush is on")
    Fixes: 186857c5a14a ("f2fs: fix potential recursive call when enabling data_flush")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b8230d44ce763ed3811e8f18a77c9b8cdc9bf3c
Author: Chao Yu <chao@kernel.org>
Date:   Wed Nov 25 10:57:36 2020 +0800

    f2fs: fix to avoid REQ_TIME and CP_TIME collision
    
    [ Upstream commit 493720a4854343b7c3fe100cda6a3a2c3f8d4b5d ]
    
    Lei Li reported a issue: if foreground operations are frequent, background
    checkpoint may be always skipped due to below check, result in losing more
    data after sudden power-cut.
    
    f2fs_balance_fs_bg()
    ...
            if (!is_idle(sbi, REQ_TIME) &&
                    (!excess_dirty_nats(sbi) && !excess_dirty_nodes(sbi)))
                    return;
    
    E.g:
    cp_interval = 5 second
    idle_interval = 2 second
    foreground operation interval = 1 second (append 1 byte per second into file)
    
    In such case, no matter when it calls f2fs_balance_fs_bg(), is_idle(, REQ_TIME)
    returns false, result in skipping background checkpoint.
    
    This patch changes as below to make trigger condition being more reasonable:
    - trigger sync_fs() if dirty_{nats,nodes} and prefree segs exceeds threshold;
    - skip triggering sync_fs() if there is any background inflight IO or there is
    foreground operation recently and meanwhile cp_rwsem is being held by someone;
    
    Reported-by: Lei Li <noctis.akm@gmail.com>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Stable-dep-of: d80afefb17e0 ("f2fs: fix to account FS_CP_DATA_IO correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecbd95958c484780afa6f71b73c3dbdc647cc6ca
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Mon Sep 5 12:59:17 2022 +0800

    f2fs: fix race condition on setting FI_NO_EXTENT flag
    
    [ Upstream commit 07725adc55c0a414c10acb5c8c86cea34b95ddef ]
    
    The following scenarios exist.
    process A:               process B:
    ->f2fs_drop_extent_tree  ->f2fs_update_extent_cache_range
                              ->f2fs_update_extent_tree_range
                               ->write_lock
     ->set_inode_flag
                               ->is_inode_flag_set
                               ->__free_extent_tree // Shouldn't
                                                    // have been
                                                    // cleaned up
                                                    // here
      ->write_lock
    
    In this case, the "FI_NO_EXTENT" flag is set between
    f2fs_update_extent_tree_range and is_inode_flag_set
    by other process. it leads to clearing the whole exten
    tree which should not have happened. And we fix it by
    move the setting it to the range of write_lock.
    
    Fixes:5f281fab9b9a3 ("f2fs: disable extent_cache for fcollapse/finsert inodes")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 110146ce8f84f8f0ef6f09d36e7c5936d5e2f0cf
Author: Shuai Xue <xueshuai@linux.alibaba.com>
Date:   Sat Sep 24 15:49:53 2022 +0800

    ACPI: APEI: do not add task_work to kernel thread to avoid memory leak
    
    [ Upstream commit 415fed694fe11395df56e05022d6e7cee1d39dd3 ]
    
    If an error is detected as a result of user-space process accessing a
    corrupt memory location, the CPU may take an abort. Then the platform
    firmware reports kernel via NMI like notifications, e.g. NOTIFY_SEA,
    NOTIFY_SOFTWARE_DELEGATED, etc.
    
    For NMI like notifications, commit 7f17b4a121d0 ("ACPI: APEI: Kick the
    memory_failure() queue for synchronous errors") keep track of whether
    memory_failure() work was queued, and make task_work pending to flush out
    the queue so that the work is processed before return to user-space.
    
    The code use init_mm to check whether the error occurs in user space:
    
        if (current->mm != &init_mm)
    
    The condition is always true, becase _nobody_ ever has "init_mm" as a real
    VM any more.
    
    In addition to abort, errors can also be signaled as asynchronous
    exceptions, such as interrupt and SError. In such case, the interrupted
    current process could be any kind of thread. When a kernel thread is
    interrupted, the work ghes_kick_task_work deferred to task_work will never
    be processed because entry_handler returns to call ret_to_kernel() instead
    of ret_to_user(). Consequently, the estatus_node alloced from
    ghes_estatus_pool in ghes_in_nmi_queue_one_entry() will not be freed.
    After around 200 allocations in our platform, the ghes_estatus_pool will
    run of memory and ghes_in_nmi_queue_one_entry() returns ENOMEM. As a
    result, the event failed to be processed.
    
        sdei: event 805 on CPU 113 failed with error: -2
    
    Finally, a lot of unhandled events may cause platform firmware to exceed
    some threshold and reboot.
    
    The condition should generally just do
    
        if (current->mm)
    
    as described in active_mm.rst documentation.
    
    Then if an asynchronous error is detected when a kernel thread is running,
    (e.g. when detected by a background scrubber), do not add task_work to it
    as the original patch intends to do.
    
    Fixes: 7f17b4a121d0 ("ACPI: APEI: Kick the memory_failure() queue for synchronous errors")
    Signed-off-by: Shuai Xue <xueshuai@linux.alibaba.com>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dce07e87ee1ec98f29fdd684020c7f6e387652eb
Author: Vincent Knecht <vincent.knecht@mailoo.org>
Date:   Thu Aug 11 12:50:14 2022 +0200

    thermal/drivers/qcom/tsens-v0_1: Fix MSM8939 fourth sensor hw_id
    
    [ Upstream commit b0c883e900702f408d62cf92b0ef01303ed69be9 ]
    
    Reading temperature from this sensor fails with 'Invalid argument'.
    
    Looking at old vendor dts [1], its hw_id should be 3 instead of 4.
    Change this hw_id accordingly.
    
    [1] https://github.com/msm8916-mainline/android_kernel_qcom_msm8916/blob/master/arch/arm/boot/dts/qcom/msm8939-common.dtsi#L511
    
    Fixes: 332bc8ebab2c ("thermal: qcom: tsens-v0_1: Add support for MSM8939")
    Signed-off-by: Vincent Knecht <vincent.knecht@mailoo.org>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Bjorn Andersson <andersson@kernel.org>
    Reviewed-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Link: https://lore.kernel.org/r/20220811105014.7194-1-vincent.knecht@mailoo.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a720eb89026c5241b8c4abb33370dc6fb565eee
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Sep 19 09:43:27 2022 +0300

    crypto: cavium - prevent integer overflow loading firmware
    
    [ Upstream commit 2526d6bf27d15054bb0778b2f7bc6625fd934905 ]
    
    The "code_length" value comes from the firmware file.  If your firmware
    is untrusted realistically there is probably very little you can do to
    protect yourself.  Still we try to limit the damage as much as possible.
    Also Smatch marks any data read from the filesystem as untrusted and
    prints warnings if it not capped correctly.
    
    The "ntohl(ucode->code_length) * 2" multiplication can have an
    integer overflow.
    
    Fixes: 9e2c7d99941d ("crypto: cavium - Add Support for Octeon-tx CPT Engine")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bfa7d67735381715c98091194e81e7685f9b7db
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Sep 19 09:43:19 2022 +0300

    crypto: marvell/octeontx - prevent integer overflows
    
    [ Upstream commit caca37cf6c749ff0303f68418cfe7b757a4e0697 ]
    
    The "code_length" value comes from the firmware file.  If your firmware
    is untrusted realistically there is probably very little you can do to
    protect yourself.  Still we try to limit the damage as much as possible.
    Also Smatch marks any data read from the filesystem as untrusted and
    prints warnings if it not capped correctly.
    
    The "code_length * 2" can overflow.  The round_up(ucode_size, 16) +
    sizeof() expression can overflow too.  Prevent these overflows.
    
    Fixes: d9110b0b01ff ("crypto: marvell - add support for OCTEON TX CPT engine")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdd42eb4689ba5c9ecaacbfabeb7974ab29bb527
Author: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
Date:   Fri Sep 16 14:41:12 2022 +0200

    kbuild: rpm-pkg: fix breakage when V=1 is used
    
    [ Upstream commit 2e07005f4813a9ff6e895787e0c2d1fea859b033 ]
    
    Doing make V=1 binrpm-pkg results in:
    
     Executing(%install): /bin/sh -e /var/tmp/rpm-tmp.EgV6qJ
     + umask 022
     + cd .
     + /bin/rm -rf /home/scgl/rpmbuild/BUILDROOT/kernel-6.0.0_rc5+-1.s390x
     + /bin/mkdir -p /home/scgl/rpmbuild/BUILDROOT
     + /bin/mkdir /home/scgl/rpmbuild/BUILDROOT/kernel-6.0.0_rc5+-1.s390x
     + mkdir -p /home/scgl/rpmbuild/BUILDROOT/kernel-6.0.0_rc5+-1.s390x/boot
     + make -f ./Makefile image_name
     + cp test -e include/generated/autoconf.h -a -e include/config/auto.conf || ( \ echo >&2; \ echo >&2 " ERROR: Kernel configuration is invalid."; \ echo >&2 " include/generated/autoconf.h or include/config/auto.conf are missing.";\ echo >&2 " Run 'make oldconfig && make prepare' on kernel src to fix it."; \ echo >&2 ; \ /bin/false) arch/s390/boot/bzImage /home/scgl/rpmbuild/BUILDROOT/kernel-6.0.0_rc5+-1.s390x/boot/vmlinuz-6.0.0-rc5+
     cp: invalid option -- 'e'
     Try 'cp --help' for more information.
     error: Bad exit status from /var/tmp/rpm-tmp.EgV6qJ (%install)
    
    Because the make call to get the image name is verbose and prints
    additional information.
    
    Fixes: 993bdde94547 ("kbuild: add image_name to no-sync-config-targets")
    Signed-off-by: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d1aef17e7f26d315efd0cf46f4340bb932afac1
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Aug 7 09:48:09 2022 +0900

    kbuild: remove the target in signal traps when interrupted
    
    [ Upstream commit a7f3257da8a86b96fb9bf1bba40ae0bbd7f1885a ]
    
    When receiving some signal, GNU Make automatically deletes the target if
    it has already been changed by the interrupted recipe.
    
    If the target is possibly incomplete due to interruption, it must be
    deleted so that it will be remade from scratch on the next run of make.
    Otherwise, the target would remain corrupted permanently because its
    timestamp had already been updated.
    
    Thanks to this behavior of Make, you can stop the build any time by
    pressing Ctrl-C, and just run 'make' to resume it.
    
    Kbuild also relies on this feature, but it is equivalently important
    for any build systems that make decisions based on timestamps (if you
    want to support Ctrl-C reliably).
    
    However, this does not always work as claimed; Make immediately dies
    with Ctrl-C if its stderr goes into a pipe.
    
      [Test Makefile]
    
        foo:
                echo hello > $@
                sleep 3
                echo world >> $@
    
      [Test Result]
    
        $ make                         # hit Ctrl-C
        echo hello > foo
        sleep 3
        ^Cmake: *** Deleting file 'foo'
        make: *** [Makefile:3: foo] Interrupt
    
        $ make 2>&1 | cat              # hit Ctrl-C
        echo hello > foo
        sleep 3
        ^C$                            # 'foo' is often left-over
    
    The reason is because SIGINT is sent to the entire process group.
    In this example, SIGINT kills 'cat', and 'make' writes the message to
    the closed pipe, then dies with SIGPIPE before cleaning the target.
    
    A typical bad scenario (as reported by [1], [2]) is to save build log
    by using the 'tee' command:
    
        $ make 2>&1 | tee log
    
    This can be problematic for any build systems based on Make, so I hope
    it will be fixed in GNU Make. The maintainer of GNU Make stated this is
    a long-standing issue and difficult to fix [3]. It has not been fixed
    yet as of writing.
    
    So, we cannot rely on Make cleaning the target. We can do it by
    ourselves, in signal traps.
    
    As far as I understand, Make takes care of SIGHUP, SIGINT, SIGQUIT, and
    SITERM for the target removal. I added the traps for them, and also for
    SIGPIPE just in case cmd_* rule prints something to stdout or stderr
    (but I did not observe an actual case where SIGPIPE was triggered).
    
    [Note 1]
    
    The trap handler might be worth explaining.
    
        rm -f $@; trap - $(sig); kill -s $(sig) $$
    
    This lets the shell kill itself by the signal it caught, so the parent
    process can tell the child has exited on the signal. Generally, this is
    a proper manner for handling signals, in case the calling program (like
    Bash) may monitor WIFSIGNALED() and WTERMSIG() for WCE although this may
    not be a big deal here because GNU Make handles SIGHUP, SIGINT, SIGQUIT
    in WUE and SIGTERM in IUE.
    
      IUE - Immediate Unconditional Exit
      WUE - Wait and Unconditional Exit
      WCE - Wait and Cooperative Exit
    
    For details, see "Proper handling of SIGINT/SIGQUIT" [4].
    
    [Note 2]
    
    Reverting 392885ee82d3 ("kbuild: let fixdep directly write to .*.cmd
    files") would directly address [1], but it only saves if_changed_dep.
    As reported in [2], all commands that use redirection can potentially
    leave an empty (i.e. broken) target.
    
    [Note 3]
    
    Another (even safer) approach might be to always write to a temporary
    file, and rename it to $@ at the end of the recipe.
    
       <command>  > $(tmp-target)
       mv $(tmp-target) $@
    
    It would require a lot of Makefile changes, and result in ugly code,
    so I did not take it.
    
    [Note 4]
    
    A little more thoughts about a pattern rule with multiple targets (or
    a grouped target).
    
        %.x %.y: %.z
                <recipe>
    
    When interrupted, GNU Make deletes both %.x and %.y, while this solution
    only deletes $@. Probably, this is not a big deal. The next run of make
    will execute the rule again to create $@ along with the other files.
    
    [1]: https://lore.kernel.org/all/YLeot94yAaM4xbMY@gmail.com/
    [2]: https://lore.kernel.org/all/20220510221333.2770571-1-robh@kernel.org/
    [3]: https://lists.gnu.org/archive/html/help-make/2021-06/msg00001.html
    [4]: https://www.cons.org/cracauer/sigint.html
    
    Fixes: 392885ee82d3 ("kbuild: let fixdep directly write to .*.cmd files")
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Reported-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Tested-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Nicolas Schier <nicolas@fjasle.eu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d76dd508093f7af6befe2142133b5572e316d56
Author: Yipeng Zou <zouyipeng@huawei.com>
Date:   Mon Sep 19 20:56:29 2022 +0800

    tracing: kprobe: Make gen test module work in arm and riscv
    
    [ Upstream commit d8ef45d66c01425ff748e13ef7dd1da7a91cc93c ]
    
    For now, this selftest module can only work in x86 because of the
    kprobe cmd was fixed use of x86 registers.
    This patch adapted to register names under arm and riscv, So that
    this module can be worked on those platform.
    
    Link: https://lkml.kernel.org/r/20220919125629.238242-3-zouyipeng@huawei.com
    
    Cc: <linux-riscv@lists.infradead.org>
    Cc: <mingo@redhat.com>
    Cc: <paul.walmsley@sifive.com>
    Cc: <palmer@dabbelt.com>
    Cc: <aou@eecs.berkeley.edu>
    Cc: <zanussi@kernel.org>
    Cc: <liaochang1@huawei.com>
    Cc: <chris.zjh@huawei.com>
    Fixes: 64836248dda2 ("tracing: Add kprobe event command generation test module")
    Signed-off-by: Yipeng Zou <zouyipeng@huawei.com>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6512a6f0cb19dcfc02a6bfb2cfacdeed14e6269
Author: Yipeng Zou <zouyipeng@huawei.com>
Date:   Mon Sep 19 20:56:28 2022 +0800

    tracing: kprobe: Fix kprobe event gen test module on exit
    
    [ Upstream commit ac48e189527fae87253ef2bf58892e782fb36874 ]
    
    Correct gen_kretprobe_test clr event para on module exit.
    This will make it can't to delete.
    
    Link: https://lkml.kernel.org/r/20220919125629.238242-2-zouyipeng@huawei.com
    
    Cc: <linux-riscv@lists.infradead.org>
    Cc: <mingo@redhat.com>
    Cc: <paul.walmsley@sifive.com>
    Cc: <palmer@dabbelt.com>
    Cc: <aou@eecs.berkeley.edu>
    Cc: <zanussi@kernel.org>
    Cc: <liaochang1@huawei.com>
    Cc: <chris.zjh@huawei.com>
    Fixes: 64836248dda2 ("tracing: Add kprobe event command generation test module")
    Signed-off-by: Yipeng Zou <zouyipeng@huawei.com>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e6ba62d418d48ba4bf2b993b62d61f2de16ad50
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Tue Sep 13 12:47:20 2022 +0100

    iommu/iova: Fix module config properly
    
    [ Upstream commit 4f58330fcc8482aa90674e1f40f601e82f18ed4a ]
    
    IOMMU_IOVA is intended to be an optional library for users to select as
    and when they desire. Since it can be a module now, this means that
    built-in code which has chosen not to select it should not fail to link
    if it happens to have selected as a module by someone else. Replace
    IS_ENABLED() with IS_REACHABLE() to do the right thing.
    
    CC: Thierry Reding <thierry.reding@gmail.com>
    Reported-by: John Garry <john.garry@huawei.com>
    Fixes: 15bbdec3931e ("iommu: Make the iova library a module")
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Link: https://lore.kernel.org/r/548c2f683ca379aface59639a8f0cccc3a1ac050.1663069227.git.robin.murphy@arm.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 426d5bc089e7731e36b514d1beca19e777a2d653
Author: Damian Muszynski <damian.muszynski@intel.com>
Date:   Fri Sep 9 11:49:12 2022 +0100

    crypto: qat - fix DMA transfer direction
    
    [ Upstream commit cf5bb835b7c8a5fee7f26455099cca7feb57f5e9 ]
    
    When CONFIG_DMA_API_DEBUG is selected, while running the crypto self
    test on the QAT crypto algorithms, the function add_dma_entry() reports
    a warning similar to the one below, saying that overlapping mappings
    are not supported. This occurs in tests where the input and the output
    scatter list point to the same buffers (i.e. two different scatter lists
    which point to the same chunks of memory).
    
    The logic that implements the mapping uses the flag DMA_BIDIRECTIONAL
    for both the input and the output scatter lists which leads to
    overlapped write mappings. These are not supported by the DMA layer.
    
    Fix by specifying the correct DMA transfer directions when mapping
    buffers. For in-place operations where the input scatter list
    matches the output scatter list, buffers are mapped once with
    DMA_BIDIRECTIONAL, otherwise input buffers are mapped using the flag
    DMA_TO_DEVICE and output buffers are mapped with DMA_FROM_DEVICE.
    Overlapping a read mapping with a write mapping is a valid case in
    dma-coherent devices like QAT.
    The function that frees and unmaps the buffers, qat_alg_free_bufl()
    has been changed accordingly to the changes to the mapping function.
    
       DMA-API: 4xxx 0000:06:00.0: cacheline tracking EEXIST, overlapping mappings aren't supported
       WARNING: CPU: 53 PID: 4362 at kernel/dma/debug.c:570 add_dma_entry+0x1e9/0x270
       ...
       Call Trace:
       dma_map_page_attrs+0x82/0x2d0
       ? preempt_count_add+0x6a/0xa0
       qat_alg_sgl_to_bufl+0x45b/0x990 [intel_qat]
       qat_alg_aead_dec+0x71/0x250 [intel_qat]
       crypto_aead_decrypt+0x3d/0x70
       test_aead_vec_cfg+0x649/0x810
       ? number+0x310/0x3a0
       ? vsnprintf+0x2a3/0x550
       ? scnprintf+0x42/0x70
       ? valid_sg_divisions.constprop.0+0x86/0xa0
       ? test_aead_vec+0xdf/0x120
       test_aead_vec+0xdf/0x120
       alg_test_aead+0x185/0x400
       alg_test+0x3d8/0x500
       ? crypto_acomp_scomp_free_ctx+0x30/0x30
       ? __schedule+0x32a/0x12a0
       ? ttwu_queue_wakelist+0xbf/0x110
       ? _raw_spin_unlock_irqrestore+0x23/0x40
       ? try_to_wake_up+0x83/0x570
       ? _raw_spin_unlock_irqrestore+0x23/0x40
       ? __set_cpus_allowed_ptr_locked+0xea/0x1b0
       ? crypto_acomp_scomp_free_ctx+0x30/0x30
       cryptomgr_test+0x27/0x50
       kthread+0xe6/0x110
       ? kthread_complete_and_exit+0x20/0x20
       ret_from_fork+0x1f/0x30
    
    Fixes: d370cec ("crypto: qat - Intel(R) QAT crypto interface")
    Link: https://lore.kernel.org/linux-crypto/20220223080400.139367-1-gilad@benyossef.com/
    Signed-off-by: Damian Muszynski <damian.muszynski@intel.com>
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a43babc059a7a992bd9d3bb14c4caf053ee7f7a5
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Mon May 9 14:34:08 2022 +0100

    crypto: qat - use pre-allocated buffers in datapath
    
    [ Upstream commit e0831e7af4e03f2715de102e18e9179ec0a81562 ]
    
    In order to do DMAs, the QAT device requires that the scatterlist
    structures are mapped and translated into a format that the firmware can
    understand. This is defined as the composition of a scatter gather list
    (SGL) descriptor header, the struct qat_alg_buf_list, plus a variable
    number of flat buffer descriptors, the struct qat_alg_buf.
    
    The allocation and mapping of these data structures is done each time a
    request is received from the skcipher and aead APIs.
    In an OOM situation, this behaviour might lead to a dead-lock if an
    allocation fails.
    
    Based on the conversation in [1], increase the size of the aead and
    skcipher request contexts to include an SGL descriptor that can handle
    a maximum of 4 flat buffers.
    If requests exceed 4 entries buffers, memory is allocated dynamically.
    
    [1] https://lore.kernel.org/linux-crypto/20200722072932.GA27544@gondor.apana.org.au/
    
    Cc: stable@vger.kernel.org
    Fixes: d370cec32194 ("crypto: qat - Intel(R) QAT crypto interface")
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Reviewed-by: Marco Chiappero <marco.chiappero@intel.com>
    Reviewed-by: Wojciech Ziemba <wojciech.ziemba@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Stable-dep-of: cf5bb835b7c8 ("crypto: qat - fix DMA transfer direction")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a91af50850270554a4ff032a12eaa4c2fed0dd44
Author: Hui Tang <tanghui20@huawei.com>
Date:   Fri Mar 5 14:35:02 2021 +0800

    crypto: qat - fix use of 'dma_map_single'
    
    [ Upstream commit 7cc05071f930a631040fea16a41f9d78771edc49 ]
    
    DMA_TO_DEVICE synchronisation must be done after the last modification
    of the memory region by the software and before it is handed off to
    the device.
    
    Signed-off-by: Hui Tang <tanghui20@huawei.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Stable-dep-of: cf5bb835b7c8 ("crypto: qat - fix DMA transfer direction")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a4ed09ed816a434c942fc7026651a3b99680612
Author: Peter Harliman Liem <pliem@maxlinear.com>
Date:   Tue Sep 6 10:51:28 2022 +0800

    crypto: inside-secure - Change swab to swab32
    
    [ Upstream commit 664593407e936b6438fbfaaf98876910fd31cf9a ]
    
    The use of swab() is causing failures in 64-bit arch, as it
    translates to __swab64() instead of the intended __swab32().
    It eventually causes wrong results in xcbcmac & cmac algo.
    
    Fixes: 78cf1c8bfcb8 ("crypto: inside-secure - Move ipad/opad into safexcel_context")
    Signed-off-by: Peter Harliman Liem <pliem@maxlinear.com>
    Acked-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d33935e666043f560abdd040a84f03d6d3868c89
Author: Koba Ko <koba.ko@canonical.com>
Date:   Thu Sep 1 22:47:12 2022 +0800

    crypto: ccp - Release dma channels before dmaengine unrgister
    
    [ Upstream commit 68dbe80f5b510c66c800b9e8055235c5b07e37d1 ]
    
    A warning is shown during shutdown,
    
    __dma_async_device_channel_unregister called while 2 clients hold a reference
    WARNING: CPU: 15 PID: 1 at drivers/dma/dmaengine.c:1110 __dma_async_device_channel_unregister+0xb7/0xc0
    
    Call dma_release_channel for occupied channles before dma_async_device_unregister.
    
    Fixes: 54cce8ecb925 ("crypto: ccp - ccp_dmaengine_unregister release dma channels")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Koba Ko <koba.ko@canonical.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1354bdd191d533211b7cb723aa76a66f516f197
Author: Ignat Korchagin <ignat@cloudflare.com>
Date:   Wed Aug 31 19:37:06 2022 +0100

    crypto: akcipher - default implementation for setting a private key
    
    [ Upstream commit bc155c6c188c2f0c5749993b1405673d25a80389 ]
    
    Changes from v1:
      * removed the default implementation from set_pub_key: it is assumed that
        an implementation must always have this callback defined as there are
        no use case for an algorithm, which doesn't need a public key
    
    Many akcipher implementations (like ECDSA) support only signature
    verifications, so they don't have all callbacks defined.
    
    Commit 78a0324f4a53 ("crypto: akcipher - default implementations for
    request callbacks") introduced default callbacks for sign/verify
    operations, which just return an error code.
    
    However, these are not enough, because before calling sign the caller would
    likely call set_priv_key first on the instantiated transform (as the
    in-kernel testmgr does). This function does not have a default stub, so the
    kernel crashes, when trying to set a private key on an akcipher, which
    doesn't support signature generation.
    
    I've noticed this, when trying to add a KAT vector for ECDSA signature to
    the testmgr.
    
    With this patch the testmgr returns an error in dmesg (as it should)
    instead of crashing the kernel NULL ptr dereference.
    
    Fixes: 78a0324f4a53 ("crypto: akcipher - default implementations for request callbacks")
    Signed-off-by: Ignat Korchagin <ignat@cloudflare.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fee0dbfaeaaa4bda04279ce772c4572b1429d04
Author: Dan Carpenter <error27@gmail.com>
Date:   Thu Aug 4 17:32:39 2022 +0300

    iommu/omap: Fix buffer overflow in debugfs
    
    [ Upstream commit 184233a5202786b20220acd2d04ddf909ef18f29 ]
    
    There are two issues here:
    
    1) The "len" variable needs to be checked before the very first write.
       Otherwise if omap2_iommu_dump_ctx() with "bytes" less than 32 it is a
       buffer overflow.
    2) The snprintf() function returns the number of bytes that *would* have
       been copied if there were enough space.  But we want to know the
       number of bytes which were *actually* copied so use scnprintf()
       instead.
    
    Fixes: bd4396f09a4a ("iommu/omap: Consolidate OMAP IOMMU modules")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Link: https://lore.kernel.org/r/YuvYh1JbE3v+abd5@kili
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfde58a8e41f4b5a1015d6a7e289fe986594df37
Author: Waiman Long <longman@redhat.com>
Date:   Thu Sep 1 16:57:36 2022 -0400

    cgroup/cpuset: Enable update_tasks_cpumask() on top_cpuset
    
    [ Upstream commit ec5fbdfb99d18482619ac42605cb80fbb56068ee ]
    
    Previously, update_tasks_cpumask() is not supposed to be called with
    top cpuset. With cpuset partition that takes CPUs away from the top
    cpuset, adjusting the cpus_mask of the tasks in the top cpuset is
    necessary. Percpu kthreads, however, are ignored.
    
    Fixes: ee8dde0cd2ce ("cpuset: Add new v2 cpuset.sched.partition flag")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab2485eb5dfab4519a6551611a1dbd12d17b518d
Author: Kshitiz Varshney <kshitiz.varshney@nxp.com>
Date:   Mon Aug 22 13:19:03 2022 +0200

    hwrng: imx-rngc - Moving IRQ handler registering after imx_rngc_irq_mask_clear()
    
    [ Upstream commit 10a2199caf437e893d9027d97700b3c6010048b7 ]
    
    Issue:
    While servicing interrupt, if the IRQ happens to be because of a SEED_DONE
    due to a previous boot stage, you end up completing the completion
    prematurely, hence causing kernel to crash while booting.
    
    Fix:
    Moving IRQ handler registering after imx_rngc_irq_mask_clear()
    
    Fixes: 1d5449445bd0 (hwrng: mx-rngc - add a driver for Freescale RNGC)
    Signed-off-by: Kshitiz Varshney <kshitiz.varshney@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d88b88514ef28515ccfa1f1787c2aedef75a79dd
Author: Ye Weihua <yeweihua4@huawei.com>
Date:   Thu Jul 28 10:07:58 2022 +0800

    crypto: hisilicon/zip - fix mismatch in get/set sgl_sge_nr
    
    [ Upstream commit d74f9340097a881869c4c22ca376654cc2516ecc ]
    
    KASAN reported this Bug:
    
            [17619.659757] BUG: KASAN: global-out-of-bounds in param_get_int+0x34/0x60
            [17619.673193] Read of size 4 at addr fffff01332d7ed00 by task read_all/1507958
            ...
            [17619.698934] The buggy address belongs to the variable:
            [17619.708371]  sgl_sge_nr+0x0/0xffffffffffffa300 [hisi_zip]
    
    There is a mismatch in hisi_zip when get/set the variable sgl_sge_nr.
    The type of sgl_sge_nr is u16, and get/set sgl_sge_nr by
    param_get/set_int.
    
    Replacing param_get/set_int to param_get/set_ushort can fix this bug.
    
    Fixes: f081fda293ffb ("crypto: hisilicon - add sgl_sge_nr module param for zip")
    Signed-off-by: Ye Weihua <yeweihua4@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25f13424737232d5ef5337916dac9fe303b5b0c6
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Mon Jul 25 12:09:28 2022 +0800

    crypto: sahara - don't sleep when in softirq
    
    [ Upstream commit 108586eba094b318e6a831f977f4ddcc403a15da ]
    
    Function of sahara_aes_crypt maybe could be called by function
    of crypto_skcipher_encrypt during the rx softirq, so it is not
    allowed to use mutex lock.
    
    Fixes: c0c3c89ae347 ("crypto: sahara - replace tasklets with...")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d285164fbe41a5f8bb1d46a18685b5c4c870870
Author: Pali Rohár <pali@kernel.org>
Date:   Fri Sep 2 23:21:02 2022 +0200

    powerpc: Fix SPE Power ISA properties for e500v1 platforms
    
    [ Upstream commit 37b9345ce7f4ab17538ea62def6f6d430f091355 ]
    
    Commit 2eb28006431c ("powerpc/e500v2: Add Power ISA properties to comply
    with ePAPR 1.1") introduced new include file e500v2_power_isa.dtsi and
    should have used it for all e500v2 platforms. But apparently it was used
    also for e500v1 platforms mpc8540, mpc8541, mpc8555 and mpc8560.
    
    e500v1 cores compared to e500v2 do not support double precision floating
    point SPE instructions. Hence power-isa-sp.fd should not be set on e500v1
    platforms, which is in e500v2_power_isa.dtsi include file.
    
    Fix this issue by introducing a new e500v1_power_isa.dtsi include file and
    use it in all e500v1 device tree files.
    
    Fixes: 2eb28006431c ("powerpc/e500v2: Add Power ISA properties to comply with ePAPR 1.1")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220902212103.22534-1-pali@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bde4e1e4f017ac6acebab28e6440af9a8c9cc77
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Sep 21 11:41:02 2022 +1000

    powerpc/64s: Fix GENERIC_CPU build flags for PPC970 / G5
    
    [ Upstream commit 58ec7f06b74e0d6e76c4110afce367c8b5f0837d ]
    
    Big-endian GENERIC_CPU supports 970, but builds with -mcpu=power5.
    POWER5 is ISA v2.02 whereas 970 is v2.01 plus Altivec. 2.02 added
    the popcntb instruction which a compiler might use.
    
    Use -mcpu=power4.
    
    Fixes: 471d7ff8b51b ("powerpc/64s: Remove POWER4 support")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220921014103.587954-1-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ae8bed9087a904201ac39b159ef4b1947049465
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Tue Aug 30 15:37:05 2022 +0200

    x86/hyperv: Fix 'struct hv_enlightened_vmcs' definition
    
    [ Upstream commit ea9da788a61e47e7ab9cbad397453e51cd82ac0d ]
    
    Section 1.9 of TLFS v6.0b says:
    
    "All structures are padded in such a way that fields are aligned
    naturally (that is, an 8-byte field is aligned to an offset of 8 bytes
    and so on)".
    
    'struct enlightened_vmcs' has a glitch:
    
    ...
            struct {
                    u32                nested_flush_hypercall:1; /*   836: 0  4 */
                    u32                msr_bitmap:1;         /*   836: 1  4 */
                    u32                reserved:30;          /*   836: 2  4 */
            } hv_enlightenments_control;                     /*   836     4 */
            u32                        hv_vp_id;             /*   840     4 */
            u64                        hv_vm_id;             /*   844     8 */
            u64                        partition_assist_page; /*   852     8 */
    ...
    
    And the observed values in 'partition_assist_page' make no sense at
    all. Fix the layout by padding the structure properly.
    
    Fixes: 68d1eb72ee99 ("x86/hyper-v: define struct hv_enlightened_vmcs and clean field bits")
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Link: https://lore.kernel.org/r/20220830133737.1539624-2-vkuznets@redhat.com
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6315998170b481ac263075d2bd4fb4aafc133914
Author: Zheng Yongjun <zhengyongjun3@huawei.com>
Date:   Tue Sep 6 14:17:03 2022 +0000

    powerpc/powernv: add missing of_node_put() in opal_export_attrs()
    
    [ Upstream commit 71a92e99c47900cc164620948b3863382cec4f1a ]
    
    After using 'np' returned by of_find_node_by_path(), of_node_put()
    need be called to decrease the refcount.
    
    Fixes: 11fe909d2362 ("powerpc/powernv: Add OPAL exports attributes to sysfs")
    Signed-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220906141703.118192-1-zhengyongjun3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 434db6d17b6bb7638b90387b5606a4c67be12774
Author: Liang He <windhl@126.com>
Date:   Fri Jul 1 21:17:50 2022 +0800

    powerpc/pci_dn: Add missing of_node_put()
    
    [ Upstream commit 110a1fcb6c4d55144d8179983a475f17a1d6f832 ]
    
    In pci_add_device_node_info(), use of_node_put() to drop the reference
    to 'parent' returned by of_get_parent() to keep refcount balance.
    
    Fixes: cca87d303c85 ("powerpc/pci: Refactor pci_dn")
    Co-authored-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Link: https://lore.kernel.org/r/20220701131750.240170-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 718e2d802388749e35d6213651f19db1818dbf97
Author: Liang He <windhl@126.com>
Date:   Mon Jul 4 22:52:33 2022 +0800

    powerpc/sysdev/fsl_msi: Add missing of_node_put()
    
    [ Upstream commit def435c04ee984a5f9ed2711b2bfe946936c6a21 ]
    
    In fsl_setup_msi_irqs(), use of_node_put() to drop the reference
    returned by of_parse_phandle().
    
    Fixes: 895d603f945ba ("powerpc/fsl_msi: add support for the fsl, msi property in PCI nodes")
    Co-authored-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220704145233.278539-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 592d283a656ddede253e360a5c2e8b4c3c96c4fe
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Fri Sep 2 18:00:08 2022 +0200

    powerpc/math_emu/efp: Include module.h
    
    [ Upstream commit cfe0d370e0788625ce0df3239aad07a2506c1796 ]
    
    When building with a recent version of clang, there are a couple of
    errors around the call to module_init():
    
      arch/powerpc/math-emu/math_efp.c:927:1: error: type specifier missing, defaults to 'int'; ISO C99 and later do not support implicit int [-Wimplicit-int]
      module_init(spe_mathemu_init);
      ^
      int
      arch/powerpc/math-emu/math_efp.c:927:13: error: a parameter list without types is only allowed in a function definition
      module_init(spe_mathemu_init);
                  ^
      2 errors generated.
    
    module_init() is a macro, which is not getting expanded because module.h
    is not included in this file. Add the include so that the macro can
    expand properly, clearing up the build failure.
    
    Fixes: ac6f120369ff ("powerpc/85xx: Workaroudn e500 CPU erratum A005")
    [chleroy: added fixes tag]
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Link: https://lore.kernel.org/r/8403854a4c187459b2f4da3537f51227b70b9223.1662134272.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44c26ceffaa39029336f83010978f380767b2620
Author: Jack Wang <jinpu.wang@ionos.com>
Date:   Fri Aug 26 12:13:35 2022 +0200

    mailbox: bcm-ferxrm-mailbox: Fix error check for dma_map_sg
    
    [ Upstream commit 6b207ce8a96a71e966831e3a13c38143ba9a73c1 ]
    
    dma_map_sg return 0 on error, fix the error check, and return -EIO
    to caller.
    
    Fixes: dbc049eee730 ("mailbox: Add driver for Broadcom FlexRM ring manager")
    Signed-off-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1616599c99a090b50ef87b1465145343c3bfff3
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Apr 21 13:34:26 2022 +0930

    clk: ast2600: BCLK comes from EPLL
    
    [ Upstream commit b8c1dc9c00b252b3be853720a71b05ed451ddd9f ]
    
    This correction was made in the u-boot SDK recently. There are no
    in-tree users of this clock so the impact is minimal.
    
    Fixes: d3d04f6c330a ("clk: Add support for AST2600 SoC")
    Link: https://github.com/AspeedTech-BMC/u-boot/commit/8ad54a5ae15f27fea5e894cc2539a20d90019717
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Link: https://lore.kernel.org/r/20220421040426.171256-1-joel@jms.id.au
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d01017247eee3fba399f601b0bcb38e4fb88a72
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jun 2 07:08:36 2022 +0400

    clk: ti: dra7-atl: Fix reference leak in of_dra7_atl_clk_probe
    
    [ Upstream commit 9c59a01caba26ec06fefd6ca1f22d5fd1de57d63 ]
    
    pm_runtime_get_sync() will increment pm usage counter.
    Forgetting to putting operation will result in reference leak.
    Add missing pm_runtime_put_sync in some error paths.
    
    Fixes: 9ac33b0ce81f ("CLK: TI: Driver for DRA7 ATL (Audio Tracking Logic)")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220602030838.52057-1-linmq006@gmail.com
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b65fd651334675d17bf681c51602b3739437315
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Sun Sep 4 16:10:37 2022 +0200

    clk: bcm2835: fix bcm2835_clock_rate_from_divisor declaration
    
    [ Upstream commit 0b919a3728691c172312dee99ba654055ccd8c84 ]
    
    The return value of bcm2835_clock_rate_from_divisor is always unsigned
    and also all caller expect this. So fix the declaration accordingly.
    
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the audio domain clocks")
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Link: https://lore.kernel.org/r/20220904141037.38816-1-stefan.wahren@i2se.com
    Reviewed-by: Ivan T. Ivanov <iivanov@suse.de>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a6087a438ef56e4c6fd904664bd1fe88cf5e0d6
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Sep 30 01:53:58 2022 +0300

    clk: baikal-t1: Add SATA internal ref clock buffer
    
    [ Upstream commit 081a9b7c74eae4e12b2cb1b86720f836a8f29247 ]
    
    It turns out the internal SATA reference clock signal will stay
    unavailable for the SATA interface consumer until the buffer on it's way
    is ungated. So aside with having the actual clock divider enabled we need
    to ungate a buffer placed on the signal way to the SATA controller (most
    likely some rudiment from the initial SoC release). Seeing the switch flag
    is placed in the same register as the SATA-ref clock divider at a
    non-standard ffset, let's implement it as a separate clock controller with
    the set-rate propagation to the parental clock divider wrapper. As such
    we'll be able to disable/enable and still change the original clock source
    rate.
    
    Fixes: 353afa3a8d2e ("clk: Add Baikal-T1 CCU Dividers driver")
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Link: https://lore.kernel.org/r/20220929225402.9696-5-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f143f3bc2e0a501e945e4bcda882f2eff90eaac
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Sep 30 01:53:57 2022 +0300

    clk: baikal-t1: Add shared xGMAC ref/ptp clocks internal parent
    
    [ Upstream commit e2eef312762e0b5a5a70d29fe59a245c0a3cffa0 ]
    
    Baikal-T1 CCU reference manual says that both xGMAC reference and xGMAC
    PTP clocks are generated by two different wrappers with the same constant
    divider thus each producing a 156.25 MHz signal. But for some reason both
    of these clock sources are gated by a single switch-flag in the CCU
    registers space - CCU_SYS_XGMAC_BASE.BIT(0). In order to make the clocks
    handled independently we need to define a shared parental gate so the base
    clock signal would be switched off only if both of the child-clocks are
    disabled.
    
    Note the ID is intentionally set to -2 since we are going to add a one
    more internal clock identifier in the next commit.
    
    Fixes: 353afa3a8d2e ("clk: Add Baikal-T1 CCU Dividers driver")
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Link: https://lore.kernel.org/r/20220929225402.9696-4-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 823fd523912ff4fc8edf2a2ac93f57329c90f36e
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Sep 30 01:53:56 2022 +0300

    clk: baikal-t1: Fix invalid xGMAC PTP clock divider
    
    [ Upstream commit 3c742088686ce922704aec5b11d09bcc5a396589 ]
    
    Most likely due to copy-paste mistake the divider has been set to 10 while
    according to the SoC reference manual it's supposed to be 8 thus having
    PTP clock frequency of 156.25 MHz.
    
    Fixes: 353afa3a8d2e ("clk: Add Baikal-T1 CCU Dividers driver")
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Link: https://lore.kernel.org/r/20220929225402.9696-3-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f19a1050e1b2e63c326550a92f884f79c2f089f
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Sep 30 01:53:55 2022 +0300

    clk: vc5: Fix 5P49V6901 outputs disabling when enabling FOD
    
    [ Upstream commit c388cc804016cf0f65afdc2362b120aa594ff3e6 ]
    
    We have discovered random glitches during the system boot up procedure.
    The problem investigation led us to the weird outcomes: when none of the
    Renesas 5P49V6901 ports are explicitly enabled by the kernel driver, the
    glitches disappeared. It was a mystery since the SoC external clock
    domains were fed with different 5P49V6901 outputs. The driver code didn't
    seem like bogus either. We almost despaired to find out a root cause when
    the solution has been found for a more modern revision of the chip. It
    turned out the 5P49V6901 clock generator stopped its output for a short
    period of time during the VC5_OUT_DIV_CONTROL register writing. The same
    problem was found for the 5P49V6965 revision of the chip and was
    successfully fixed in commit fc336ae622df ("clk: vc5: fix output disabling
    when enabling a FOD") by enabling the "bypass_sync" flag hidden inside
    "Unused Factory Reserved Register". Even though the 5P49V6901 registers
    description and programming guide doesn't provide any intel regarding that
    flag, setting it up anyway in the officially unused register completely
    eliminated the denoted glitches. Thus let's activate the functionality
    submitted in commit fc336ae622df ("clk: vc5: fix output disabling when
    enabling a FOD") for the Renesas 5P49V6901 chip too in order to remove the
    ports implicit inter-dependency.
    
    Fixes: dbf6b16f5683 ("clk: vc5: Add support for IDT VersaClock 5P49V6901")
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Reviewed-by: Luca Ceresoli <luca@lucaceresoli.net>
    Link: https://lore.kernel.org/r/20220929225402.9696-2-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92f52770a7af6988b3c2bbb9b76a2963e3d950a8
Author: David Collins <collinsd@codeaurora.org>
Date:   Thu Sep 29 17:50:16 2022 -0700

    spmi: pmic-arb: correct duplicate APID to PPID mapping logic
    
    [ Upstream commit 1f1693118c2476cb1666ad357edcf3cf48bf9b16 ]
    
    Correct the way that duplicate PPID mappings are handled for PMIC
    arbiter v5.  The final APID mapped to a given PPID should be the
    one which has write owner = APPS EE, if it exists, or if not
    that, then the first APID mapped to the PPID, if it exists.
    
    Fixes: 40f318f0ed67 ("spmi: pmic-arb: add support for HW version 5")
    Signed-off-by: David Collins <collinsd@codeaurora.org>
    Signed-off-by: Fenglin Wu <quic_fenglinw@quicinc.com>
    Link: https://lore.kernel.org/r/1655004286-11493-7-git-send-email-quic_fenglinw@quicinc.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Link: https://lore.kernel.org/r/20220930005019.2663064-8-sboyd@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a01c0c160049637f19390069bdba3e87a7050144
Author: Dave Jiang <dave.jiang@intel.com>
Date:   Mon Sep 19 09:58:42 2022 -0700

    dmaengine: ioat: stop mod_timer from resurrecting deleted timer in __cleanup()
    
    [ Upstream commit 898ec89dbb55b8294695ad71694a0684e62b2a73 ]
    
    User reports observing timer event report channel halted but no error
    observed in CHANERR register. The driver finished self-test and released
    channel resources. Debug shows that __cleanup() can call
    mod_timer() after the timer has been deleted and thus resurrect the
    timer. While harmless, it causes suprious error message to be emitted.
    Use mod_timer_pending() call to prevent deleted timer from being
    resurrected.
    
    Fixes: 3372de5813e4 ("dmaengine: ioatdma: removal of dma_v3.c and relevant ioat3 references")
    Signed-off-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/166360672197.3851724.17040290563764838369.stgit@djiang5-desk3.ch.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1dd5148445eb7a32a086e214f6f46ce9aa1c1ca7
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Sep 27 12:11:20 2022 +0200

    clk: mediatek: mt8183: mfgcfg: Propagate rate changes to parent
    
    [ Upstream commit 9f94f545f258b15bfa6357eb62e1e307b712851e ]
    
    The only clock in the MT8183 MFGCFG block feeds the GPU. Propagate its
    rate change requests to its parent, so that DVFS for the GPU can work
    properly.
    
    Fixes: acddfc2c261b ("clk: mediatek: Add MT8183 clock support")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220927101128.44758-3-angelogioacchino.delregno@collabora.com
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e58f2469ec5c3a4325bbeec0b0bd3e37d21e138
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Sep 13 17:11:12 2022 +0800

    mfd: sm501: Add check for platform_driver_register()
    
    [ Upstream commit 8325a6c24ad78b8c1acc3c42b098ee24105d68e5 ]
    
    As platform_driver_register() can return error numbers,
    it should be better to check platform_driver_register()
    and deal with the exception.
    
    Fixes: b6d6454fdb66 ("[PATCH] mfd: SM501 core driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/20220913091112.1739138-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3469dd8e22ffb0dc446dd0ec36eb5ef51cb5a3d3
Author: Dan Carpenter <error27@gmail.com>
Date:   Thu Aug 11 13:53:05 2022 +0300

    mfd: fsl-imx25: Fix check for platform_get_irq() errors
    
    [ Upstream commit 75db7907355ca5e2ff606e9dd3e86b6c3a455fe2 ]
    
    The mx25_tsadc_remove() function assumes all non-zero returns are success
    but the platform_get_irq() function returns negative on error and
    positive non-zero values on success.  It never returns zero, but if it
    did then treat that as a success.
    
    Fixes: 18f773937968 ("mfd: fsl-imx25: Clean up irq settings during removal")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Martin Kaiser <martin@kaiser.cx>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/YvTfkbVQWYKMKS/t@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b425e03c9639cdeaccf1165909cb56a1ddbf6e6d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jul 31 11:55:38 2022 +0200

    mfd: lp8788: Fix an error handling path in lp8788_irq_init() and lp8788_irq_init()
    
    [ Upstream commit 557244f6284f30613f2d61f14b579303165876c3 ]
    
    In lp8788_irq_init(), if an error occurs after a successful
    irq_domain_add_linear() call, it must be undone by a corresponding
    irq_domain_remove() call.
    
    irq_domain_remove() should also be called in lp8788_irq_exit() for the same
    reason.
    
    Fixes: eea6b7cc53aa ("mfd: Add lp8788 mfd driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/bcd5a72c9c1c383dd6324680116426e32737655a.1659261275.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7b4388636227f543a88d7389017adb4f4ef5b65
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jul 31 11:55:27 2022 +0200

    mfd: lp8788: Fix an error handling path in lp8788_probe()
    
    [ Upstream commit becfdcd75126b20b8ec10066c5e85b34f8994ad5 ]
    
    Should an error occurs in mfd_add_devices(), some resources need to be
    released, as already done in the .remove() function.
    
    Add an error handling path and a lp8788_irq_exit() call to undo a previous
    lp8788_irq_init().
    
    Fixes: eea6b7cc53aa ("mfd: Add lp8788 mfd driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/18398722da9df9490722d853e4797350189ae79b.1659261275.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08d40518033dc3663b1bd334a7481cd6b116f49b
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jul 31 14:06:23 2022 +0200

    mfd: fsl-imx25: Fix an error handling path in mx25_tsadc_setup_irq()
    
    [ Upstream commit 3fa9e4cfb55da512ebfd57336fde468830719298 ]
    
    If devm_of_platform_populate() fails, some resources need to be
    released.
    
    Introduce a mx25_tsadc_unset_irq() function that undoes
    mx25_tsadc_setup_irq() and call it both from the new error handling path
    of the probe and in the remove function.
    
    Fixes: a55196eff6d6 ("mfd: fsl-imx25: Use devm_of_platform_populate()")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/d404e04828fc06bcfddf81f9f3e9b4babbe35415.1659269156.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28868b940b53c63f62c2cf8fbdc1ea539448c105
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Aug 1 14:42:02 2022 +0300

    mfd: intel_soc_pmic: Fix an error handling path in intel_soc_pmic_i2c_probe()
    
    [ Upstream commit 48749cabba109397b4e7dd556e85718ec0ec114d ]
    
    The commit in Fixes: has added a pwm_add_table() call in the probe() and
    a pwm_remove_table() call in the remove(), but forget to update the error
    handling path of the probe.
    
    Add the missing pwm_remove_table() call.
    
    Fixes: a3aa9a93df9f ("mfd: intel_soc_pmic_core: ADD PWM lookup table for CRC PMIC based PWM")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/20220801114211.36267-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 382a5fc49e6eee5b05b4e91744b7a5fd9f9bcbbb
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Jan 11 15:34:11 2022 +0800

    fsi: core: Check error number after calling ida_simple_get
    
    [ Upstream commit 35af9fb49bc5c6d61ef70b501c3a56fe161cce3e ]
    
    If allocation fails, the ida_simple_get() will return error number.
    So master->idx could be error number and be used in dev_set_name().
    Therefore, it should be better to check it and return error if fails,
    like the ida_simple_get() in __fsi_get_new_minor().
    
    Fixes: 09aecfab93b8 ("drivers/fsi: Add fsi master definition")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Eddie James <eajames@linux.ibm.com>
    Link: https://lore.kernel.org/r/20220111073411.614138-1-jiasheng@iscas.ac.cn
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed8e6011b9532ccaab6c434dcc08894e6b933706
Author: Robert Marko <robimarko@gmail.com>
Date:   Fri Aug 19 00:06:22 2022 +0200

    clk: qcom: apss-ipq6018: mark apcs_alias0_core_clk as critical
    
    [ Upstream commit 86e78995c93ee182433f965babfccd48417d4dcf ]
    
    While fixing up the driver I noticed that my IPQ8074 board was hanging
    after CPUFreq switched the frequency during boot, WDT would eventually
    reset it.
    
    So mark apcs_alias0_core_clk as critical since its the clock feeding the
    CPU cluster and must never be disabled.
    
    Fixes: 5e77b4ef1b19 ("clk: qcom: Add ipq6018 apss clock controller")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220818220628.339366-3-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 884a788f065578bb640382279a83d1df433b13e6
Author: Mike Christie <michael.christie@oracle.com>
Date:   Wed Sep 7 17:17:00 2022 -0500

    scsi: iscsi: iscsi_tcp: Fix null-ptr-deref while calling getpeername()
    
    [ Upstream commit 57569c37f0add1b6489e1a1563c71519daf732cf ]
    
    Fix a NULL pointer crash that occurs when we are freeing the socket at the
    same time we access it via sysfs.
    
    The problem is that:
    
     1. iscsi_sw_tcp_conn_get_param() and iscsi_sw_tcp_host_get_param() take
        the frwd_lock and do sock_hold() then drop the frwd_lock. sock_hold()
        does a get on the "struct sock".
    
     2. iscsi_sw_tcp_release_conn() does sockfd_put() which does the last put
        on the "struct socket" and that does __sock_release() which sets the
        sock->ops to NULL.
    
     3. iscsi_sw_tcp_conn_get_param() and iscsi_sw_tcp_host_get_param() then
        call kernel_getpeername() which accesses the NULL sock->ops.
    
    Above we do a get on the "struct sock", but we needed a get on the "struct
    socket". Originally, we just held the frwd_lock the entire time but in
    commit bcf3a2953d36 ("scsi: iscsi: iscsi_tcp: Avoid holding spinlock while
    calling getpeername()") we switched to refcount based because the network
    layer changed and started taking a mutex in that path, so we could no
    longer hold the frwd_lock.
    
    Instead of trying to maintain multiple refcounts, this just has us use a
    mutex for accessing the socket in the interface code paths.
    
    Link: https://lore.kernel.org/r/20220907221700.10302-1-michael.christie@oracle.com
    Fixes: bcf3a2953d36 ("scsi: iscsi: iscsi_tcp: Avoid holding spinlock while calling getpeername()")
    Signed-off-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9e5176ead6de64f572ad5c87a72825d9d3c82ae
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Tue Sep 20 22:42:13 2022 +0800

    scsi: libsas: Fix use-after-free bug in smp_execute_task_sg()
    
    [ Upstream commit 46ba53c30666717cb06c2b3c5d896301cd00d0c0 ]
    
    When executing SMP task failed, the smp_execute_task_sg() calls del_timer()
    to delete "slow_task->timer". However, if the timer handler
    sas_task_internal_timedout() is running, the del_timer() in
    smp_execute_task_sg() will not stop it and a UAF will happen. The process
    is shown below:
    
          (thread 1)               |        (thread 2)
    smp_execute_task_sg()          | sas_task_internal_timedout()
     ...                           |
     del_timer()                   |
     ...                           |  ...
     sas_free_task(task)           |
      kfree(task->slow_task) //FREE|
                                   |  task->slow_task->... //USE
    
    Fix by calling del_timer_sync() in smp_execute_task_sg(), which makes sure
    the timer handler have finished before the "task->slow_task" is
    deallocated.
    
    Link: https://lore.kernel.org/r/20220920144213.10536-1-duoming@zju.edu.cn
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Reviewed-by: Jason Yan <yanaijie@huawei.com>
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f740c11d89157bd74849ae388288075e05e2a34
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Sep 24 12:43:24 2022 +0200

    serial: 8250: Fix restoring termios speed after suspend
    
    [ Upstream commit 379a33786d489ab81885ff0b3935cfeb36137fea ]
    
    Since commit edc6afc54968 ("tty: switch to ktermios and new framework")
    termios speed is no longer stored only in c_cflag member but also in new
    additional c_ispeed and c_ospeed members. If BOTHER flag is set in c_cflag
    then termios speed is stored only in these new members.
    
    Since commit 027b57170bf8 ("serial: core: Fix initializing and restoring
    termios speed") termios speed is available also in struct console.
    
    So properly restore also c_ispeed and c_ospeed members after suspend to fix
    restoring termios speed which is not represented by Bnnn constant.
    
    Fixes: 4516d50aabed ("serial: 8250: Use canary to restart console after suspend")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20220924104324.4035-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab5a3e714437bbd944cf1d6d1cec819c3ed826aa
Author: Guilherme G. Piccoli <gpiccoli@igalia.com>
Date:   Fri Sep 9 17:07:55 2022 -0300

    firmware: google: Test spinlock on panic path to avoid lockups
    
    [ Upstream commit 3e081438b8e639cc76ef1a5ce0c1bd8a154082c7 ]
    
    Currently the gsmi driver registers a panic notifier as well as
    reboot and die notifiers. The callbacks registered are called in
    atomic and very limited context - for instance, panic disables
    preemption and local IRQs, also all secondary CPUs (not executing
    the panic path) are shutdown.
    
    With that said, taking a spinlock in this scenario is a dangerous
    invitation for lockup scenarios. So, fix that by checking if the
    spinlock is free to acquire in the panic notifier callback - if not,
    bail-out and avoid a potential hang.
    
    Fixes: 74c5b31c6618 ("driver: Google EFI SMI")
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: David Gow <davidgow@google.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Julius Werner <jwerner@chromium.org>
    Cc: Petr Mladek <pmladek@suse.com>
    Reviewed-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Link: https://lore.kernel.org/r/20220909200755.189679-1-gpiccoli@igalia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95ac62e8545be2b0a8cae0beef7c682e2e470e48
Author: Nam Cao <namcaov@gmail.com>
Date:   Mon Sep 12 19:04:31 2022 +0200

    staging: vt6655: fix some erroneous memory clean-up loops
    
    [ Upstream commit 2a2db520e3ca5aafba7c211abfd397666c9b5f9d ]
    
    In some initialization functions of this driver, memory is allocated with
    'i' acting as an index variable and increasing from 0. The commit in
    "Fixes" introduces some clean-up codes in case of allocation failure,
    which free memory in reverse order with 'i' decreasing to 0. However,
    there are some problems:
      - The case i=0 is left out. Thus memory is leaked.
      - In case memory allocation fails right from the start, the memory
        freeing loops will start with i=-1 and invalid memory locations will
        be accessed.
    
    One of these loops has been fixed in commit c8ff91535880 ("staging:
    vt6655: fix potential memory leak"). Fix the remaining erroneous loops.
    
    Link: https://lore.kernel.org/linux-staging/Yx9H1zSpxmNqx6Xc@kadam/
    Fixes: 5341ee0adb17 ("staging: vt6655: check for memory allocation failures")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Tested-by: Philipp Hortmann <philipp.g.hortmann@gmail.com>
    Signed-off-by: Nam Cao <namcaov@gmail.com>
    Link: https://lore.kernel.org/r/20220912170429.29852-1-namcaov@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 878f9871668f4b46eea1e3644b8bce1fcdfc8b10
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Wed Sep 14 13:13:33 2022 +0800

    phy: qualcomm: call clk_disable_unprepare in the error handling
    
    [ Upstream commit c3966ced8eb8dc53b6c8d7f97d32cc8a2107d83e ]
    
    Smatch reports the following error:
    
    drivers/phy/qualcomm/phy-qcom-usb-hsic.c:82 qcom_usb_hsic_phy_power_on()
    warn: 'uphy->cal_clk' from clk_prepare_enable() not released on lines:
    58.
    drivers/phy/qualcomm/phy-qcom-usb-hsic.c:82 qcom_usb_hsic_phy_power_on()
    warn: 'uphy->cal_sleep_clk' from clk_prepare_enable() not released on
    lines: 58.
    drivers/phy/qualcomm/phy-qcom-usb-hsic.c:82 qcom_usb_hsic_phy_power_on()
    warn: 'uphy->phy_clk' from clk_prepare_enable() not released on lines:
    58.
    
    Fix this by calling proper clk_disable_unprepare calls.
    
    Fixes: 0b56e9a7e835 ("phy: Group vendor specific phy drivers")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://lore.kernel.org/r/20220914051334.69282-1-dzm91@hust.edu.cn
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a56ade124d4891a31ab1300c57665f07f5b24d5
Author: Sherry Sun <sherry.sun@nxp.com>
Date:   Tue Sep 20 19:17:03 2022 +0800

    tty: serial: fsl_lpuart: disable dma rx/tx use flags in lpuart_dma_shutdown
    
    [ Upstream commit 316ae95c175a7d770d1bfe4c011192712f57aa4a ]
    
    lpuart_dma_shutdown tears down lpuart dma, but lpuart_flush_buffer can
    still occur which in turn tries to access dma apis if lpuart_dma_tx_use
    flag is true. At this point since dma is torn down, these dma apis can
    abort. Set lpuart_dma_tx_use and the corresponding rx flag
    lpuart_dma_rx_use to false in lpuart_dma_shutdown so that dmas are not
    accessed after they are relinquished.
    
    Otherwise, when try to kill btattach, kernel may panic. This patch may
    fix this issue.
    root@imx8ulpevk:~# btattach -B /dev/ttyLP2 -S 115200
    ^C[   90.182296] Internal error: synchronous external abort: 96000210 [#1] PREEMPT SMP
    [   90.189806] Modules linked in: moal(O) mlan(O)
    [   90.194258] CPU: 0 PID: 503 Comm: btattach Tainted: G           O      5.15.32-06136-g34eecdf2f9e4 #37
    [   90.203554] Hardware name: NXP i.MX8ULP 9X9 EVK (DT)
    [   90.208513] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [   90.215470] pc : fsl_edma3_disable_request+0x8/0x60
    [   90.220358] lr : fsl_edma3_terminate_all+0x34/0x20c
    [   90.225237] sp : ffff800013f0bac0
    [   90.228548] x29: ffff800013f0bac0 x28: 0000000000000001 x27: ffff000008404800
    [   90.235681] x26: ffff000008404960 x25: ffff000008404a08 x24: ffff000008404a00
    [   90.242813] x23: ffff000008404a60 x22: 0000000000000002 x21: 0000000000000000
    [   90.249946] x20: ffff800013f0baf8 x19: ffff00000559c800 x18: 0000000000000000
    [   90.257078] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000
    [   90.264211] x14: 0000000000000003 x13: 0000000000000000 x12: 0000000000000040
    [   90.271344] x11: ffff00000600c248 x10: ffff800013f0bb10 x9 : ffff000057bcb090
    [   90.278477] x8 : fffffc0000241a08 x7 : ffff00000534ee00 x6 : ffff000008404804
    [   90.285609] x5 : 0000000000000000 x4 : 0000000000000000 x3 : ffff0000055b3480
    [   90.292742] x2 : ffff8000135c0000 x1 : ffff00000534ee00 x0 : ffff00000559c800
    [   90.299876] Call trace:
    [   90.302321]  fsl_edma3_disable_request+0x8/0x60
    [   90.306851]  lpuart_flush_buffer+0x40/0x160
    [   90.311037]  uart_flush_buffer+0x88/0x120
    [   90.315050]  tty_driver_flush_buffer+0x20/0x30
    [   90.319496]  hci_uart_flush+0x44/0x90
    [   90.323162]  +0x34/0x12c
    [   90.327253]  tty_ldisc_close+0x38/0x70
    [   90.331005]  tty_ldisc_release+0xa8/0x190
    [   90.335018]  tty_release_struct+0x24/0x8c
    [   90.339022]  tty_release+0x3ec/0x4c0
    [   90.342593]  __fput+0x70/0x234
    [   90.345652]  ____fput+0x14/0x20
    [   90.348790]  task_work_run+0x84/0x17c
    [   90.352455]  do_exit+0x310/0x96c
    [   90.355688]  do_group_exit+0x3c/0xa0
    [   90.359259]  __arm64_sys_exit_group+0x1c/0x20
    [   90.363609]  invoke_syscall+0x48/0x114
    [   90.367362]  el0_svc_common.constprop.0+0xd4/0xfc
    [   90.372068]  do_el0_svc+0x2c/0x94
    [   90.375379]  el0_svc+0x28/0x80
    [   90.378438]  el0t_64_sync_handler+0xa8/0x130
    [   90.382711]  el0t_64_sync+0x1a0/0x1a4
    [   90.386376] Code: 17ffffda d503201f d503233f f9409802 (b9400041)
    [   90.392467] ---[ end trace 2f60524b4a43f1f6 ]---
    [   90.397073] note: btattach[503] exited with preempt_count 1
    [   90.402636] Fixing recursive fault but reboot is needed!
    
    Fixes: 6250cc30c4c4 ("tty: serial: fsl_lpuart: Use scatter/gather DMA for Tx")
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Thara Gopinath <tgopinath@microsoft.com>
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Link: https://lore.kernel.org/r/20220920111703.1532-1-sherry.sun@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 572fb97fce35a3cc5694b9c8a7e83c97d11461b9
Author: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Date:   Thu Sep 22 10:00:05 2022 +0300

    serial: 8250: Toggle IER bits on only after irq has been set up
    
    [ Upstream commit 039d4926379b1d1c17b51cf21c500a5eed86899e ]
    
    Invoking TIOCVHANGUP on 8250_mid port on Ice Lake-D and then reopening
    the port triggers these faults during serial8250_do_startup():
    
      DMAR: DRHD: handling fault status reg 3
      DMAR: [DMA Write NO_PASID] Request device [00:1a.0] fault addr 0x0 [fault reason 0x05] PTE Write access is not set
    
    If the IRQ hasn't been set up yet, the UART will have zeroes in its MSI
    address/data registers. Disabling the IRQ at the interrupt controller
    won't stop the UART from performing a DMA write to the address programmed
    in its MSI address register (zero) when it wants to signal an interrupt.
    
    The UARTs (in Ice Lake-D) implement PCI 2.1 style MSI without masking
    capability, so there is no way to mask the interrupt at the source PCI
    function level, except disabling the MSI capability entirely, but that
    would cause it to fall back to INTx# assertion, and the PCI specification
    prohibits disabling the MSI capability as a way to mask a function's
    interrupt service request.
    
    The MSI address register is zeroed by the hangup as the irq is freed.
    The interrupt is signalled during serial8250_do_startup() performing a
    THRE test that temporarily toggles THRI in IER. The THRE test currently
    occurs before UART's irq (and MSI address) is properly set up.
    
    Refactor serial8250_do_startup() such that irq is set up before the
    THRE test. The current irq setup code is intermixed with the timer
    setup code. As THRE test must be performed prior to the timer setup,
    extract it into own function and call it only after the THRE test.
    
    The ->setup_timer() needs to be part of the struct uart_8250_ops in
    order to not create circular dependency between 8250 and 8250_base
    modules.
    
    Fixes: 40b36daad0ac ("[PATCH] 8250 UART backup timer")
    Reported-by: Lennert Buytenhek <buytenh@arista.com>
    Tested-by: Lennert Buytenhek <buytenh@arista.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Link: https://lore.kernel.org/r/20220922070005.2965-1-ilpo.jarvinen@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fbfa5e3cc0dcc11345a4eb3da1ee4e6e6a61efe
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Apr 28 09:30:52 2021 +0200

    serial: 8250: Add an empty line and remove some useless {}
    
    [ Upstream commit 26f7591632d74f637f346f5d642d8ebe6b433fc9 ]
    
    This fixes the following checkpatch.pl warnings:
       WARNING: Missing a blank line after declarations
       WARNING: braces {} are not necessary for any arm of this statement
    
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/257ffd691b4a062ad017333c9430d69da6dbd29a.1619594713.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: 039d4926379b ("serial: 8250: Toggle IER bits on only after irq has been set up")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71ffe5111f0ffa2fd43c14fd176c6f05d4e82212
Author: Dan Carpenter <error27@gmail.com>
Date:   Thu Sep 22 14:22:47 2022 +0300

    drivers: serial: jsm: fix some leaks in probe
    
    [ Upstream commit 1d5859ef229e381f4db38dce8ed58e4bf862006b ]
    
    This error path needs to unwind instead of just returning directly.
    
    Fixes: 03a8482c17dd ("drivers: serial: jsm: Enable support for Digi Classic adapters")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/YyxFh1+lOeZ9WfKO@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7efdd91d54cbf42a8079ebbdc677a16984b2f9b7
Author: Albert Briscoe <albertsbriscoe@gmail.com>
Date:   Sun Sep 11 15:37:55 2022 -0700

    usb: gadget: function: fix dangling pnp_string in f_printer.c
    
    [ Upstream commit 24b7ba2f88e04800b54d462f376512e8c41b8a3c ]
    
    When opts->pnp_string is changed with configfs, new memory is allocated for
    the string. It does not, however, update dev->pnp_string, even though the
    memory is freed. When rquesting the string, the host then gets old or
    corrupted data rather than the new string. The ieee 1284 id string should
    be allowed to change while the device is connected.
    
    The bug was introduced in commit fdc01cc286be ("usb: gadget: printer:
    Remove pnp_string static buffer"), which changed opts->pnp_string from a
    char[] to a char*.
    This patch changes dev->pnp_string from a char* to a char** pointing to
    opts->pnp_string.
    
    Fixes: fdc01cc286be ("usb: gadget: printer: Remove pnp_string static buffer")
    Signed-off-by: Albert Briscoe <albertsbriscoe@gmail.com>
    Link: https://lore.kernel.org/r/20220911223753.20417-1-albertsbriscoe@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc952e3bf61cf83e51dab80aba656da22dbc6d00
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Wed Sep 21 15:34:47 2022 +0300

    xhci: Don't show warning for reinit on known broken suspend
    
    [ Upstream commit 484d6f7aa3283d082c87654b7fe7a7f725423dfb ]
    
    commit 8b328f8002bc ("xhci: re-initialize the HC during resume if HCE was
    set") introduced a new warning message when the host controller error
    was set and re-initializing.
    
    This is expected behavior on some designs which already set
    `xhci->broken_suspend` so the new warning is alarming to some users.
    
    Modify the code to only show the warning if this was a surprising behavior
    to the XHCI driver.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216470
    Fixes: 8b328f8002bc ("xhci: re-initialize the HC during resume if HCE was set")
    Reported-by: Artem S. Tashkinov <aros@gmx.com>
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220921123450.671459-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dac769dd7dc812bc001e14fa2733b62f1c555155
Author: Daisuke Matsuda <matsuda-daisuke@fujitsu.com>
Date:   Wed Sep 21 17:08:43 2022 +0900

    IB: Set IOVA/LENGTH on IB_MR in core/uverbs layers
    
    [ Upstream commit 241f9a27e0fc0eaf23e3d52c8450f10648cd11f1 ]
    
    Set 'iova' and 'length' on ib_mr in ib_uverbs and ib_core layers to let all
    drivers have the members filled. Also, this commit removes redundancy in
    the respective drivers.
    
    Previously, commit 04c0a5fcfcf65 ("IB/uverbs: Set IOVA on IB MR in uverbs
    layer") changed to set 'iova', but seems to have missed 'length' and the
    ib_core layer at that time.
    
    Fixes: 04c0a5fcfcf65 ("IB/uverbs: Set IOVA on IB MR in uverbs layer")
    Signed-off-by: Daisuke Matsuda <matsuda-daisuke@fujitsu.com>
    Link: https://lore.kernel.org/r/20220921080844.1616883-1-matsuda-daisuke@fujitsu.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 360386e11c8d2e3b7e34749b5ee206c04282806c
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Thu Sep 8 13:09:02 2022 +0300

    RDMA/cm: Use SLID in the work completion as the DLID in responder side
    
    [ Upstream commit b7d95040c13f61a4a6a859c5355faf583eff9658 ]
    
    The responder should always use WC's SLID as the dlid, to follow the
    IB SPEC section "13.5.4.2 COMMON RESPONSE ACTIONS":
    A responder always takes the following actions in constructing a
    response packet:
    - The SLID of the received packet is used as the DLID in the response
      packet.
    
    Fixes: ac3a949fb2ff ("IB/CM: Set appropriate slid and dlid when handling CM request")
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Reviewed-by: Mark Bloch <mbloch@nvidia.com>
    Link: https://lore.kernel.org/r/cd17c240231e059d2fc07c17dfe555d548b917eb.1662631201.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1263294b55c948842a2c058a47fb330223b0f6e
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Thu Aug 25 09:46:27 2022 -0600

    md/raid5: Ensure stripe_fill happens on non-read IO with journal
    
    [ Upstream commit e2eed85bc75138a9eeb63863d20f8904ac42a577 ]
    
    When doing degrade/recover tests using the journal a kernel BUG
    is hit at drivers/md/raid5.c:4381 in handle_parity_checks5():
    
      BUG_ON(!test_bit(R5_UPTODATE, &dev->flags));
    
    This was found to occur because handle_stripe_fill() was skipped
    for stripes in the journal due to a condition in that function.
    Thus blocks were not fetched and R5_UPTODATE was not set when
    the code reached handle_parity_checks5().
    
    To fix this, don't skip handle_stripe_fill() unless the stripe is
    for read.
    
    Fixes: 07e83364845e ("md/r5cache: shift complex rmw from read path to write path")
    Link: https://lore.kernel.org/linux-raid/e05c4239-41a9-d2f7-3cfa-4aa9d2cea8c1@deltatee.com/
    Suggested-by: Song Liu <song@kernel.org>
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76694e9ce0b2238c0a5f3ba54f9361dd3770ec78
Author: Saurabh Sengar <ssengar@linux.microsoft.com>
Date:   Tue Aug 23 11:51:04 2022 -0700

    md: Replace snprintf with scnprintf
    
    [ Upstream commit 1727fd5015d8f93474148f94e34cda5aa6ad4a43 ]
    
    Current code produces a warning as shown below when total characters
    in the constituent block device names plus the slashes exceeds 200.
    snprintf() returns the number of characters generated from the given
    input, which could cause the expression “200 – len” to wrap around
    to a large positive number. Fix this by using scnprintf() instead,
    which returns the actual number of characters written into the buffer.
    
    [ 1513.267938] ------------[ cut here ]------------
    [ 1513.267943] WARNING: CPU: 15 PID: 37247 at <snip>/lib/vsprintf.c:2509 vsnprintf+0x2c8/0x510
    [ 1513.267944] Modules linked in:  <snip>
    [ 1513.267969] CPU: 15 PID: 37247 Comm: mdadm Not tainted 5.4.0-1085-azure #90~18.04.1-Ubuntu
    [ 1513.267969] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.1 05/09/2022
    [ 1513.267971] RIP: 0010:vsnprintf+0x2c8/0x510
    <-snip->
    [ 1513.267982] Call Trace:
    [ 1513.267986]  snprintf+0x45/0x70
    [ 1513.267990]  ? disk_name+0x71/0xa0
    [ 1513.267993]  dump_zones+0x114/0x240 [raid0]
    [ 1513.267996]  ? _cond_resched+0x19/0x40
    [ 1513.267998]  raid0_run+0x19e/0x270 [raid0]
    [ 1513.268000]  md_run+0x5e0/0xc50
    [ 1513.268003]  ? security_capable+0x3f/0x60
    [ 1513.268005]  do_md_run+0x19/0x110
    [ 1513.268006]  md_ioctl+0x195e/0x1f90
    [ 1513.268007]  blkdev_ioctl+0x91f/0x9f0
    [ 1513.268010]  block_ioctl+0x3d/0x50
    [ 1513.268012]  do_vfs_ioctl+0xa9/0x640
    [ 1513.268014]  ? __fput+0x162/0x260
    [ 1513.268016]  ksys_ioctl+0x75/0x80
    [ 1513.268017]  __x64_sys_ioctl+0x1a/0x20
    [ 1513.268019]  do_syscall_64+0x5e/0x200
    [ 1513.268021]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: 766038846e875 ("md/raid0: replace printk() with pr_*()")
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Acked-by: Guoqing Jiang <guoqing.jiang@linux.dev>
    Signed-off-by: Saurabh Sengar <ssengar@linux.microsoft.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bd5f3b4a805036892da047010b43d067603b139
Author: Dan Carpenter <error27@gmail.com>
Date:   Thu Jul 28 10:12:12 2022 +0300

    mtd: rawnand: meson: fix bit map use in meson_nfc_ecc_correct()
    
    [ Upstream commit 3e4ad3212cf22687410b1e8f4e68feec50646113 ]
    
    The meson_nfc_ecc_correct() function accidentally does a right shift
    instead of a left shift so it only works for BIT(0).  Also use
    BIT_ULL() because "correct_bitmap" is a u64 and we want to avoid
    shift wrapping bugs.
    
    Fixes: 8fae856c5350 ("mtd: rawnand: meson: add support for Amlogic NAND flash controller")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Liang Yang <liang.yang@amlogic.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/YuI2zF1hP65+LE7r@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5325f3202b878c7352c9940d55f4b667b3c9eef
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Fri Sep 16 14:28:35 2022 +0200

    ata: fix ata_id_has_dipm()
    
    [ Upstream commit 630624cb1b5826d753ac8e01a0e42de43d66dedf ]
    
    ACS-5 section
    7.13.6.36 Word 78: Serial ATA features supported
    states that:
    
    If word 76 is not 0000h or FFFFh, word 78 reports the features supported
    by the device. If this word is not supported, the word shall be cleared
    to zero.
    
    (This text also exists in really old ACS standards, e.g. ACS-3.)
    
    The problem with ata_id_has_dipm() is that the while it performs a
    check against 0 and 0xffff, it performs the check against
    ATA_ID_FEATURE_SUPP (word 78), the same word where the feature bit
    is stored.
    
    Fix this by performing the check against ATA_ID_SATA_CAPABILITY
    (word 76), like required by the spec. The feature bit check itself
    is of course still performed against ATA_ID_FEATURE_SUPP (word 78).
    
    Additionally, move the macro to the other ATA_ID_FEATURE_SUPP macros
    (which already have this check), thus making it more likely that the
    next ATA_ID_FEATURE_SUPP macro that is added will include this check.
    
    Fixes: ca77329fb713 ("[libata] Link power management infrastructure")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5a6fa1877f409985cf3a30e347205bec43c7880
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Fri Sep 16 14:28:34 2022 +0200

    ata: fix ata_id_has_ncq_autosense()
    
    [ Upstream commit a5fb6bf853148974dbde092ec1bde553bea5e49f ]
    
    ACS-5 section
    7.13.6.36 Word 78: Serial ATA features supported
    states that:
    
    If word 76 is not 0000h or FFFFh, word 78 reports the features supported
    by the device. If this word is not supported, the word shall be cleared
    to zero.
    
    (This text also exists in really old ACS standards, e.g. ACS-3.)
    
    Additionally, move the macro to the other ATA_ID_FEATURE_SUPP macros
    (which already have this check), thus making it more likely that the
    next ATA_ID_FEATURE_SUPP macro that is added will include this check.
    
    Fixes: 5b01e4b9efa0 ("libata: Implement NCQ autosense")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c34a91c8aa7ba97822b80e748e3ce0a47bc8807
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Fri Sep 16 14:28:33 2022 +0200

    ata: fix ata_id_has_devslp()
    
    [ Upstream commit 9c6e09a434e1317e09b78b3b69cd384022ec9a03 ]
    
    ACS-5 section
    7.13.6.36 Word 78: Serial ATA features supported
    states that:
    
    If word 76 is not 0000h or FFFFh, word 78 reports the features supported
    by the device. If this word is not supported, the word shall be cleared
    to zero.
    
    (This text also exists in really old ACS standards, e.g. ACS-3.)
    
    Additionally, move the macro to the other ATA_ID_FEATURE_SUPP macros
    (which already have this check), thus making it more likely that the
    next ATA_ID_FEATURE_SUPP macro that is added will include this check.
    
    Fixes: 65fe1f0f66a5 ("ahci: implement aggressive SATA device sleep support")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc61a0c8200ab7c058f69df94d3fb32edbde1dce
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Fri Sep 16 14:28:32 2022 +0200

    ata: fix ata_id_sense_reporting_enabled() and ata_id_has_sense_reporting()
    
    [ Upstream commit 690aa8c3ae308bc696ec8b1b357b995193927083 ]
    
    ACS-5 section
    7.13.6.41 Words 85..87, 120: Commands and feature sets supported or enabled
    states that:
    
    If bit 15 of word 86 is set to one, bit 14 of word 119 is set to one,
    and bit 15 of word 119 is cleared to zero, then word 119 is valid.
    
    If bit 15 of word 86 is set to one, bit 14 of word 120 is set to one,
    and bit 15 of word 120 is cleared to zero, then word 120 is valid.
    
    (This text also exists in really old ACS standards, e.g. ACS-3.)
    
    Currently, ata_id_sense_reporting_enabled() and
    ata_id_has_sense_reporting() both check bit 15 of word 86,
    but neither of them check that bit 14 of word 119 is set to one,
    or that bit 15 of word 119 is cleared to zero.
    
    Additionally, make ata_id_sense_reporting_enabled() return false
    if !ata_id_has_sense_reporting(), similar to how e.g.
    ata_id_flush_ext_enabled() returns false if !ata_id_has_flush_ext().
    
    Fixes: e87fd28cf9a2 ("libata: Implement support for sense data reporting")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3917c85f41ef1df64e27dc0e46ab0d803c5e73e
Author: Bernard Metzler <bmt@zurich.ibm.com>
Date:   Tue Sep 20 10:12:02 2022 +0200

    RDMA/siw: Always consume all skbuf data in sk_data_ready() upcall.
    
    [ Upstream commit 754209850df8367c954ac1de7671c7430b1f342c ]
    
    For header and trailer/padding processing, siw did not consume new
    skb data until minimum amount present to fill current header or trailer
    structure, including potential payload padding. Not consuming any
    data during upcall may cause a receive stall, since tcp_read_sock()
    is not upcalling again if no new data arrive.
    A NFSoRDMA client got stuck at RDMA Write reception of unaligned
    payload, if the current skb did contain only the expected 3 padding
    bytes, but not the 4 bytes CRC trailer. Expecting 4 more bytes already
    arrived in another skb, and not consuming those 3 bytes in the current
    upcall left the Write incomplete, waiting for the CRC forever.
    
    Fixes: 8b6a361b8c48 ("rdma/siw: receive path")
    Reported-by: Olga Kornievskaia <kolga@netapp.com>
    Tested-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Bernard Metzler <bmt@zurich.ibm.com>
    Link: https://lore.kernel.org/r/20220920081202.223629-1-bmt@zurich.ibm.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a9d7d8dcf9803783fbc1066bb6d022e75af232b
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jul 7 20:43:28 2022 +0200

    mtd: rawnand: fsl_elbc: Fix none ECC mode
    
    [ Upstream commit 049e43b9fd8fd2966940485da163d67e96ee3fea ]
    
    Commit f6424c22aa36 ("mtd: rawnand: fsl_elbc: Make SW ECC work") added
    support for specifying ECC mode via DTS and skipping autodetection.
    
    But it broke explicit specification of HW ECC mode in DTS as correct
    settings for HW ECC mode are applied only when NONE mode or nothing was
    specified in DTS file.
    
    Also it started aliasing NONE mode to be same as when ECC mode was not
    specified and disallowed usage of ON_DIE mode.
    
    Fix all these issues. Use autodetection of ECC mode only in case when mode
    was really not specified in DTS file by checking that ecc value is invalid.
    Set HW ECC settings either when HW ECC was specified in DTS or it was
    autodetected. And do not fail when ON_DIE mode is set.
    
    Fixes: f6424c22aa36 ("mtd: rawnand: fsl_elbc: Make SW ECC work")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220707184328.3845-1-pali@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f87f720811323a83f701679632b479b1e92fdccd
Author: William Dean <williamsukatube@gmail.com>
Date:   Fri Jul 22 17:16:44 2022 +0800

    mtd: devices: docg3: check the return value of devm_ioremap() in the probe
    
    [ Upstream commit 26e784433e6c65735cd6d93a8db52531970d9a60 ]
    
    The function devm_ioremap() in docg3_probe() can fail, so
    its return value should be checked.
    
    Fixes: 82402aeb8c81e ("mtd: docg3: Use devm_*() functions")
    Reported-by: Hacash Robot <hacashRobot@santino.com>
    Signed-off-by: William Dean <williamsukatube@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220722091644.2937953-1-williamsukatube@163.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d06cc0e11d5bac31ac60f552bc93a9a6300bcbe2
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Sun Sep 4 15:40:46 2022 -0600

    dyndbg: drop EXPORTed dynamic_debug_exec_queries
    
    [ Upstream commit e26ef3af964acfea311403126acee8c56c89e26b ]
    
    This exported fn is unused, and will not be needed. Lets dump it.
    
    The export was added to let drm control pr_debugs, as part of using
    them to avoid drm_debug_enabled overheads.  But its better to just
    implement the drm.debug bitmap interface, then its available for
    everyone.
    
    Fixes: a2d375eda771 ("dyndbg: refine export, rename to dynamic_debug_exec_queries()")
    Fixes: 4c0d77828d4f ("dyndbg: export ddebug_exec_queries")
    Acked-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Jim Cromie <jim.cromie@gmail.com>
    Link: https://lore.kernel.org/r/20220904214134.408619-10-jim.cromie@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d6598558914b68415ba56bc85a30d02222c9587
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Sun Sep 4 15:40:44 2022 -0600

    dyndbg: let query-modname override actual module name
    
    [ Upstream commit e75ef56f74965f426dd819a41336b640ffdd8fbc ]
    
    dyndbg's control-parser: ddebug_parse_query(), requires that search
    terms: module, func, file, lineno, are used only once in a query; a
    thing cannot be named both foo and bar.
    
    The cited commit added an overriding module modname, taken from the
    module loader, which is authoritative.  So it set query.module 1st,
    which disallowed its use in the query-string.
    
    But now, its useful to allow a module-load to enable classes across a
    whole (or part of) a subsystem at once.
    
      # enable (dynamic-debug in) drm only
      modprobe drm dyndbg="class DRM_UT_CORE +p"
    
      # get drm_helper too
      modprobe drm dyndbg="class DRM_UT_CORE module drm* +p"
    
      # get everything that knows DRM_UT_CORE
      modprobe drm dyndbg="class DRM_UT_CORE module * +p"
    
      # also for boot-args:
      drm.dyndbg="class DRM_UT_CORE module * +p"
    
    So convert the override into a default, by filling it only when/after
    the query-string omitted the module.
    
    NB: the query class FOO handling is forthcoming.
    
    Fixes: 8e59b5cfb9a6 dynamic_debug: add modname arg to exec_query callchain
    Acked-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Jim Cromie <jim.cromie@gmail.com>
    Link: https://lore.kernel.org/r/20220904214134.408619-8-jim.cromie@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0e206da44e572f1ef0d82f1a42e71b166c0746a
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Sun Sep 4 15:40:39 2022 -0600

    dyndbg: fix module.dyndbg handling
    
    [ Upstream commit 85d6b66d31c35158364058ee98fb69ab5bb6a6b1 ]
    
    For CONFIG_DYNAMIC_DEBUG=N, the ddebug_dyndbg_module_param_cb()
    stub-fn is too permissive:
    
    bash-5.1# modprobe drm JUNKdyndbg
    bash-5.1# modprobe drm dyndbgJUNK
    [   42.933220] dyndbg param is supported only in CONFIG_DYNAMIC_DEBUG builds
    [   42.937484] ACPI: bus type drm_connector registered
    
    This caused no ill effects, because unknown parameters are either
    ignored by default with an "unknown parameter" warning, or ignored
    because dyndbg allows its no-effect use on non-dyndbg builds.
    
    But since the code has an explicit feedback message, it should be
    issued accurately.  Fix with strcmp for exact param-name match.
    
    Fixes: b48420c1d301 dynamic_debug: make dynamic-debug work for module initialization
    Reported-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Acked-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Jim Cromie <jim.cromie@gmail.com>
    Link: https://lore.kernel.org/r/20220904214134.408619-3-jim.cromie@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5047bd3bd739e3d7cc825d342363c6b0d0b46549
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Sun Sep 4 15:40:38 2022 -0600

    dyndbg: fix static_branch manipulation
    
    [ Upstream commit ee879be38bc87f8cedc79ae2742958db6533ca59 ]
    
    In https://lore.kernel.org/lkml/20211209150910.GA23668@axis.com/
    
    Vincent's patch commented on, and worked around, a bug toggling
    static_branch's, when a 2nd PRINTK-ish flag was added.  The bug
    results in a premature static_branch_disable when the 1st of 2 flags
    was disabled.
    
    The cited commit computed newflags, but then in the JUMP_LABEL block,
    failed to use that result, instead using just one of the terms in it.
    Using newflags instead made the code work properly.
    
    This is Vincents test-case, reduced.  It needs the 2nd flag to
    demonstrate the bug, but it's explanatory here.
    
    pt_test() {
        echo 5 > /sys/module/dynamic_debug/verbose
    
        site="module tcp" # just one callsite
        echo " $site =_ " > /proc/dynamic_debug/control # clear it
    
        # A B ~A ~B
        for flg in +T +p "-T #broke here" -p; do
            echo " $site $flg " > /proc/dynamic_debug/control
        done;
    
        # A B ~B ~A
        for flg in +T +p "-p #broke here" -T; do
            echo " $site $flg " > /proc/dynamic_debug/control
        done
    }
    pt_test
    
    Fixes: 84da83a6ffc0 dyndbg: combine flags & mask into a struct, simplify with it
    CC: vincent.whitchurch@axis.com
    Acked-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Jim Cromie <jim.cromie@gmail.com>
    Link: https://lore.kernel.org/r/20220904214134.408619-2-jim.cromie@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af12e209a9d559394d35875ba0e6c80407605888
Author: Jie Hai <haijie1@huawei.com>
Date:   Tue Aug 30 14:22:47 2022 +0800

    dmaengine: hisilicon: Add multi-thread support for a DMA channel
    
    [ Upstream commit 2cbb95883c990d0002a77e13d3278913ab26ad79 ]
    
    When we get a DMA channel and try to use it in multiple threads it
    will cause oops and hanging the system.
    
    % echo 100 > /sys/module/dmatest/parameters/threads_per_chan
    % echo 100 > /sys/module/dmatest/parameters/iterations
    % echo 1 > /sys/module/dmatest/parameters/run
    [383493.327077] Unable to handle kernel paging request at virtual
                    address dead000000000108
    [383493.335103] Mem abort info:
    [383493.335103]   ESR = 0x96000044
    [383493.335105]   EC = 0x25: DABT (current EL), IL = 32 bits
    [383493.335107]   SET = 0, FnV = 0
    [383493.335108]   EA = 0, S1PTW = 0
    [383493.335109]   FSC = 0x04: level 0 translation fault
    [383493.335110] Data abort info:
    [383493.335111]   ISV = 0, ISS = 0x00000044
    [383493.364739]   CM = 0, WnR = 1
    [383493.367793] [dead000000000108] address between user and kernel
                    address ranges
    [383493.375021] Internal error: Oops: 96000044 [#1] PREEMPT SMP
    [383493.437574] CPU: 63 PID: 27895 Comm: dma0chan0-copy2 Kdump:
                    loaded Tainted: GO 5.17.0-rc4+ #2
    [383493.457851] pstate: 204000c9 (nzCv daIF +PAN -UAO -TCO -DIT
                    -SSBS BTYPE=--)
    [383493.465331] pc : vchan_tx_submit+0x64/0xa0
    [383493.469957] lr : vchan_tx_submit+0x34/0xa0
    
    This occurs because the transmission timed out, and that's due
    to data race. Each thread rewrite channels's descriptor as soon as
    device_issue_pending is called. It leads to the situation that
    the driver thinks that it uses the right descriptor in interrupt
    handler while channels's descriptor has been changed by other
    thread. The descriptor which in fact reported interrupt will not
    be handled any more, as well as its tx->callback.
    That's why timeout reports.
    
    With current fixes channels' descriptor changes it's value only
    when it has been used. A new descriptor is acquired from
    vc->desc_issued queue that is already filled with descriptors
    that are ready to be sent. Threads have no direct access to DMA
    channel descriptor. In case of channel's descriptor is busy, try
    to submit to HW again when a descriptor is completed. In this case,
    vc->desc_issued may be empty when hisi_dma_start_transfer is called,
    so delete error reporting on this. Now it is just possible to queue
    a descriptor for further processing.
    
    Fixes: e9f08b65250d ("dmaengine: hisilicon: Add Kunpeng DMA engine support")
    Signed-off-by: Jie Hai <haijie1@huawei.com>
    Acked-by: Zhou Wang <wangzhou1@hisilicon.com>
    Link: https://lore.kernel.org/r/20220830062251.52993-4-haijie1@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3fd838536dff43adb4dda34fd15ea3a574125f9
Author: Jie Hai <haijie1@huawei.com>
Date:   Tue Aug 30 14:22:46 2022 +0800

    dmaengine: hisilicon: Fix CQ head update
    
    [ Upstream commit 94477a79cf80e8ab55b68f14bc579a12ddea1e0b ]
    
    After completion of data transfer of one or multiple descriptors,
    the completion status and the current head pointer to submission
    queue are written into the CQ and interrupt can be generated to
    inform the software. In interrupt process CQ is read and cq_head
    is updated.
    
    hisi_dma_irq updates cq_head only when the completion status is
    success. When an abnormal interrupt reports, cq_head will not update
    which will cause subsequent interrupt processes read the error CQ
    and never report the correct status.
    
    This patch updates cq_head whenever CQ is accessed.
    
    Fixes: e9f08b65250d ("dmaengine: hisilicon: Add Kunpeng DMA engine support")
    Signed-off-by: Jie Hai <haijie1@huawei.com>
    Acked-by: Zhou Wang <wangzhou1@hisilicon.com>
    Link: https://lore.kernel.org/r/20220830062251.52993-3-haijie1@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5065ca461a4a0abd8682b6934cbe228a7f2d8c1
Author: Jie Hai <haijie1@huawei.com>
Date:   Tue Aug 30 14:22:45 2022 +0800

    dmaengine: hisilicon: Disable channels when unregister hisi_dma
    
    [ Upstream commit e3bdaa04ada31f46d0586df83a2789b8913053c5 ]
    
    When hisi_dma is unloaded or unbinded, all of channels should be
    disabled. This patch disables DMA channels when driver is unloaded
    or unbinded.
    
    Fixes: e9f08b65250d ("dmaengine: hisilicon: Add Kunpeng DMA engine support")
    Signed-off-by: Jie Hai <haijie1@huawei.com>
    Acked-by: Zhou Wang <wangzhou1@hisilicon.com>
    Link: https://lore.kernel.org/r/20220830062251.52993-2-haijie1@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f59861946fa51bcc1f305809e4ebc1013b0ee61c
Author: Dan Carpenter <error27@gmail.com>
Date:   Thu Sep 1 08:18:45 2022 +0300

    fpga: prevent integer overflow in dfl_feature_ioctl_set_irq()
    
    [ Upstream commit 939bc5453b8cbdde9f1e5110ce8309aedb1b501a ]
    
    The "hdr.count * sizeof(s32)" multiplication can overflow on 32 bit
    systems leading to memory corruption.  Use array_size() to fix that.
    
    Fixes: 322b598be4d9 ("fpga: dfl: introduce interrupt trigger setting API")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Xu Yilun <yilun.xu@intel.com>
    Link: https://lore.kernel.org/r/YxBAtYCM38dM7yzI@kili
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ba19a60c74fb0057d4daef2fa2cbfc9522f3ba1
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Wed Aug 24 16:26:00 2022 +0800

    misc: ocxl: fix possible refcount leak in afu_ioctl()
    
    [ Upstream commit c3b69ba5114c860d730870c03ab4ee45276e5e35 ]
    
    eventfd_ctx_put need to be called to put the refcount that gotten by
    eventfd_ctx_fdget when ocxl_irq_set_handler fails.
    
    Fixes: 060146614643 ("ocxl: move event_fd handling to frontend")
    Acked-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Link: https://lore.kernel.org/r/20220824082600.36159-1-hbh25y@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf3bb86edd8fdcbd8a4743f212ef9b8fd6644350
Author: Zhu Yanjun <yanjun.zhu@linux.dev>
Date:   Sun Aug 21 21:16:14 2022 -0400

    RDMA/rxe: Fix the error caused by qp->sk
    
    [ Upstream commit 548ce2e66725dcba4e27d1e8ac468d5dd17fd509 ]
    
    When sock_create_kern in the function rxe_qp_init_req fails,
    qp->sk is set to NULL.
    
    Then the function rxe_create_qp will call rxe_qp_do_cleanup
    to handle allocated resource.
    
    Before handling qp->sk, this variable should be checked.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20220822011615.805603-3-yanjun.zhu@linux.dev
    Signed-off-by: Zhu Yanjun <yanjun.zhu@linux.dev>
    Reviewed-by: Li Zhijian <lizhijian@fujitsu.com>
    Reviewed-by: Bob Pearson <rpearsonhpe@gmail.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdce36a88def550773142a34ef727a830cad96a8
Author: Zhu Yanjun <yanjun.zhu@linux.dev>
Date:   Sun Aug 21 21:16:13 2022 -0400

    RDMA/rxe: Fix "kernel NULL pointer dereference" error
    
    [ Upstream commit a625ca30eff806395175ebad3ac1399014bdb280 ]
    
    When rxe_queue_init in the function rxe_qp_init_req fails,
    both qp->req.task.func and qp->req.task.arg are not initialized.
    
    Because of creation of qp fails, the function rxe_create_qp will
    call rxe_qp_do_cleanup to handle allocated resource.
    
    Before calling __rxe_do_task, both qp->req.task.func and
    qp->req.task.arg should be checked.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20220822011615.805603-2-yanjun.zhu@linux.dev
    Reported-by: syzbot+ab99dc4c6e961eed8b8e@syzkaller.appspotmail.com
    Signed-off-by: Zhu Yanjun <yanjun.zhu@linux.dev>
    Reviewed-by: Li Zhijian <lizhijian@fujitsu.com>
    Reviewed-by: Bob Pearson <rpearsonhpe@gmail.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2630cc88327a5557aa0d9cc63be95e3c6e0a55b3
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jun 1 06:25:14 2022 +0200

    media: xilinx: vipp: Fix refcount leak in xvip_graph_dma_init
    
    [ Upstream commit 1c78f19c3a0ea312a8178a6bfd8934eb93e9b10a ]
    
    of_get_child_by_name() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: df3305156f98 ("[media] v4l: xilinx: Add Xilinx Video IP core")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40aa0999a3e43b14e925db835aeb7535dbdad671
Author: Xu Qiang <xuqiang36@huawei.com>
Date:   Thu Aug 18 08:57:53 2022 +0200

    media: meson: vdec: add missing clk_disable_unprepare on error in vdec_hevc_start()
    
    [ Upstream commit 4029372233e13e281f8c387f279f9f064ced3810 ]
    
    Add the missing clk_disable_unprepare() before return
    from vdec_hevc_start() in the error handling case.
    
    Fixes: 823a7300340e (“media: meson: vdec: add common HEVC decoder support”)
    Signed-off-by: Xu Qiang <xuqiang36@huawei.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 551b87976a0c3a164a75b59a34650a0b4e564b57
Author: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Date:   Fri Jul 29 17:17:45 2022 +0530

    tty: xilinx_uartps: Fix the ignore_status
    
    [ Upstream commit b8a6c3b3d4654fba19881cc77da61eac29f57cae ]
    
    Currently the ignore_status is not considered in the isr.
    Add a check to add the ignore_status.
    
    Fixes: 61ec9016988f ("tty/serial: add support for Xilinx PS UART")
    Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
    Link: https://lore.kernel.org/r/20220729114748.18332-5-shubhrajyoti.datta@xilinx.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28cdf6c6fb7a2501eb2db511e75ae83a03e11aca
Author: Liang He <windhl@126.com>
Date:   Wed Jul 20 16:30:03 2022 +0200

    media: exynos4-is: fimc-is: Add of_node_put() when breaking out of loop
    
    [ Upstream commit 211f8304fa21aaedc2c247f0c9d6c7f1aaa61ad7 ]
    
    In fimc_is_register_subdevs(), we need to call of_node_put() for
    the reference 'i2c_bus' when breaking out of the
    for_each_compatible_node() which has increased the refcount.
    
    Fixes: 9a761e436843 ("[media] exynos4-is: Add Exynos4x12 FIMC-IS driver")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f683bff1a9c7b833b66caa6f1ea07c0d37ac342
Author: Jack Wang <jinpu.wang@ionos.com>
Date:   Fri Aug 26 12:12:27 2022 +0200

    HSI: omap_ssi_port: Fix dma_map_sg error check
    
    [ Upstream commit 551e325bbd3fb8b5a686ac1e6cf76e5641461cf2 ]
    
    dma_map_sg return 0 on error, in case of error return -EIO
    to caller.
    
    Cc: Sebastian Reichel <sre@kernel.org>
    Cc: linux-kernel@vger.kernel.org (open list)
    Fixes: b209e047bc74 ("HSI: Introduce OMAP SSI driver")
    Signed-off-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 962f22e7f7698f7718d95bd9b63e41fb8cca01a9
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Apr 4 08:52:32 2022 +0000

    HSI: omap_ssi: Fix refcount leak in ssi_probe
    
    [ Upstream commit 9a2ea132df860177b33c9fd421b26c4e9a0a9396 ]
    
    When returning or breaking early from a
    for_each_available_child_of_node() loop, we need to explicitly call
    of_node_put() on the child node to possibly release the node.
    
    Fixes: b209e047bc74 ("HSI: Introduce OMAP SSI driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70f0a0a27d79f689defc5f5f0bd47d07813e6dea
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon May 23 19:28:11 2022 +0400

    clk: tegra20: Fix refcount leak in tegra20_clock_init
    
    [ Upstream commit 4e343bafe03ff68a62f48f8235cf98f2c685468b ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 37c26a906527 ("clk: tegra: add clock support for Tegra20")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220523152811.19692-1-linmq006@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c01bfd23cc13a420b3f6a36bcab98410f49d480d
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon May 23 18:38:34 2022 +0400

    clk: tegra: Fix refcount leak in tegra114_clock_init
    
    [ Upstream commit db16a80c76ea395766913082b1e3f939dde29b2c ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 2cb5efefd6f7 ("clk: tegra: Implement clocks for Tegra114")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220523143834.7587-1-linmq006@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f487137a53b1a0692211f7ae82c0a7f87c30bdbe
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon May 23 18:26:08 2022 +0400

    clk: tegra: Fix refcount leak in tegra210_clock_init
    
    [ Upstream commit 56c78cb1f00a9dde8cd762131ce8f4c5eb046fbb ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 6b301a059eb2 ("clk: tegra: Add support for Tegra210 clocks")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220523142608.65074-1-linmq006@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59e90c4d9861048d8efdbd0660721a09ed487791
Author: Liang He <windhl@126.com>
Date:   Mon Jul 4 08:47:29 2022 +0800

    clk: sprd: Hold reference returned by of_get_parent()
    
    [ Upstream commit 91e6455bf715fb1558a0bf8f645ec1c131254a3c ]
    
    We should hold the reference returned by of_get_parent() and use it
    to call of_node_put() for refcount balance.
    
    Fixes: f95e8c7923d1 ("clk: sprd: support to get regmap from parent node")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220704004729.272481-1-windhl@126.com
    Reviewed-by: Orson Zhai <orsonzhai@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57141b1dd689caede9dc5ecf054fe314cda0d344
Author: Liang He <windhl@126.com>
Date:   Fri Jul 8 16:49:00 2022 +0800

    clk: berlin: Add of_node_put() for of_get_parent()
    
    [ Upstream commit 37c381b812dcbfde9c3f1f3d3e75fdfc1b40d5bc ]
    
    In berlin2_clock_setup() and berlin2q_clock_setup(), we need to
    call of_node_put() for the reference returned by of_get_parent()
    which has increased the refcount. We should call *_put() in fail
    path or when it is not used anymore.
    
    Fixes: 26b3b6b959b2 ("clk: berlin: prepare simple-mfd conversion")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220708084900.311684-1-windhl@126.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc190b46c63f9018cb4ed7155eaade9f1ba4139e
Author: Liang He <windhl@126.com>
Date:   Tue Jun 28 22:38:51 2022 +0800

    clk: qoriq: Hold reference returned by of_get_parent()
    
    [ Upstream commit a8ea4273bc26256ce3cce83164f0f51c5bf6e127 ]
    
    In legacy_init_clockgen(), we need to hold the reference returned
    by of_get_parent() and use it to call of_node_put() for refcount
    balance.
    
    Beside, in create_sysclk(), we need to call of_node_put() on 'sysclk'
    also for refcount balance.
    
    Fixes: 0dfc86b3173f ("clk: qoriq: Move chip-specific knowledge into driver")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220628143851.171299-1-windhl@126.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit baadc6f58fa8a1b24bc463bf3431ab165fb636ef
Author: Liang He <windhl@126.com>
Date:   Tue Jun 28 22:31:55 2022 +0800

    clk: oxnas: Hold reference returned by of_get_parent()
    
    [ Upstream commit 1d6aa08c54cd0e005210ab8e3b1e92ede70f8a4f ]
    
    In oxnas_stdclk_probe(), we need to hold the reference returned by
    of_get_parent() and use it to call of_node_put() for refcount
    balance.
    
    Fixes: 0bbd72b4c64f ("clk: Add Oxford Semiconductor OXNAS Standard Clocks")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220628143155.170550-1-windhl@126.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b95f4f905461731c6ee825225b3b47e2dc270be9
Author: Liang He <windhl@126.com>
Date:   Tue Jun 28 22:10:38 2022 +0800

    clk: meson: Hold reference returned by of_get_parent()
    
    [ Upstream commit 89ab396d712f7c91fe94f55cff23460426f5fc81 ]
    
    We should hold the reference returned by of_get_parent() and use it
    to call of_node_put() for refcount balance.
    
    Fixes: 88e2da81241e ("clk: meson: aoclk: refactor common code into dedicated file")
    Fixes: 6682bd4d443f ("clk: meson: factorise meson64 peripheral clock controller drivers")
    Fixes: bb6eddd1d28c ("clk: meson: meson8b: use the HHI syscon if available")
    
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220628141038.168383-1-windhl@126.com
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit beec2f02555c7e9d47fd455f40d7bf7c46fb4b8d
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Wed Jul 27 18:38:01 2022 -0700

    usb: common: debug: Check non-standard control requests
    
    [ Upstream commit b6155eaf6b05e558218b44b88a6cad03f15a586c ]
    
    Previously usb_decode_ctrl() only decodes standard control requests, but
    it was used for non-standard requests also. If it's non-standard or
    unknown standard bRequest, print the Setup data values.
    
    Fixes: af32423a2d86 ("usb: dwc3: trace: decode ctrl request")
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/8d6a30f2f2f953eff833a5bc5aac640a4cc2fc9f.1658971571.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d965a22f65716dc452fd682a89c58db9235ec61
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Mon Mar 8 10:52:07 2021 +0800

    usb: common: move function's kerneldoc next to its definition
    
    [ Upstream commit 365038f24b3e9d2b7c9e499f03f432040e28a35c ]
    
    Following a general rule, add the kerneldoc for a function next
    to it's definition, but not next to its declaration in a header
    file.
    
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Suggested-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/c4d2e010ae2bf67cdfa0b55e6d1deb9339d9d3dc.1615170625.git.chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: b6155eaf6b05 ("usb: common: debug: Check non-standard control requests")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20b63631a38a94a7542b570cfee005ff4c0df911
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Mon Mar 8 10:52:05 2021 +0800

    usb: common: add function to get interval expressed in us unit
    
    [ Upstream commit fb95c7cf5600b7b74412f27dfb39a1e13fd8a90d ]
    
    Add a new function to convert bInterval into the time expressed
    in 1us unit.
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/25c8a09b055f716c1e5bf11fea72c3418f844482.1615170625.git.chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: b6155eaf6b05 ("usb: common: debug: Check non-standard control requests")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1ef8c66a362979f5c48dd01b808ccecd5497fe4
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Tue Jan 19 17:36:14 2021 -0800

    usb: common: Parse for USB SSP genXxY
    
    [ Upstream commit 52c2d15703c3a900d5f78cd599b823db40d5100b ]
    
    The USB "maximum-speed" property can now take the SSP signaling rate
    generation and lane count with these new strings:
    
    "super-speed-plus-gen2x2"
    "super-speed-plus-gen2x1"
    "super-speed-plus-gen1x2"
    
    Introduce usb_get_maximum_ssp_rate() to parse for the corresponding
    usb_ssp_rate enum. The original usb_get_maximum_speed() will return
    USB_SPEED_SUPER_PLUS if it matches one of these new strings.
    
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/f8ed896313d8cd8e2d2b540fc82db92b3ddf8a47.1611106162.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: b6155eaf6b05 ("usb: common: debug: Check non-standard control requests")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffffb159e1e52907e3b4a11de7c78ae3bcd3f247
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Wed Jan 13 18:52:46 2021 -0800

    usb: ch9: Add USB 3.2 SSP attributes
    
    [ Upstream commit f2fc9ff28d1c9bef7760516feadd38164044caae ]
    
    In preparation for USB 3.2 dual-lane support, add sublink speed
    attribute macros and enum usb_ssp_rate. A USB device that operates in
    SuperSpeed Plus may operate at different speed and lane count. These
    additional macros and enum values help specifying that.
    
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/ae9293ebd63a29f2a2035054753534d9eb123d74.1610592135.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: b6155eaf6b05 ("usb: common: debug: Check non-standard control requests")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa7aada4b7b853303c5658b4b04b641bc9d64fa9
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jun 26 13:29:23 2022 +0100

    iio: ABI: Fix wrong format of differential capacitance channel ABI.
    
    [ Upstream commit 1efc41035f1841acf0af2bab153158e27ce94f10 ]
    
    in_ only occurs once in these attributes.
    
    Fixes: 0baf29d658c7 ("staging:iio:documentation Add abi docs for capacitance adcs.")
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220626122938.582107-3-jic23@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9a0526cd02bccf98d38cd428c451acc40539989
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Fri Jul 15 14:28:49 2022 +0200

    iio: inkern: only release the device node when done with it
    
    [ Upstream commit 79c3e84874c7d14f04ad58313b64955a0d2e9437 ]
    
    'of_node_put()' can potentially release the memory pointed to by
    'iiospec.np' which would leave us with an invalid pointer (and we would
    still pass it in 'of_xlate()'). Note that it is not guaranteed for the
    of_node lifespan to be attached to the device (to which is attached)
    lifespan so that there is (even though very unlikely) the possibility
    for the node to be freed while the device is still around. Thus, as there
    are indeed some of_xlate users which do access the node, a race is indeed
    possible.
    
    As such, we can only release the node after we are done with it.
    
    Fixes: 17d82b47a215d ("iio: Add OF support")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20220715122903.332535-2-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44ec4b04fc9950678e266f1ad07a4868120fcb7b
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Aug 3 13:28:40 2022 +0300

    iio: adc: at91-sama5d2_adc: disable/prepare buffer on suspend/resume
    
    [ Upstream commit 808175e21d9b7f866eda742e8970f27b78afe5db ]
    
    In case triggered buffers are enabled while system is suspended they will
    not work anymore after resume. For this call at91_adc_buffer_postdisable()
    on suspend and at91_adc_buffer_prepare() on resume. On tests it has been
    seen that at91_adc_buffer_postdisable() call is not necessary but it has
    been kept because it also does the book keeping for DMA. On resume path
    there is no need to call at91_adc_configure_touch() as it is embedded in
    at91_adc_buffer_prepare().
    
    Fixes: 073c662017f2f ("iio: adc: at91-sama5d2_adc: add support for DMA")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220803102855.2191070-5-claudiu.beznea@microchip.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 513c72d76df653ab8a15750c3f520a39b514b2dd
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Aug 3 13:28:39 2022 +0300

    iio: adc: at91-sama5d2_adc: lock around oversampling and sample freq
    
    [ Upstream commit 9780a23ed5a0a0a63683e078f576719a98d4fb70 ]
    
    .read_raw()/.write_raw() could be called asynchronously from user space
    or other in kernel drivers. Without locking on st->lock these could be
    called asynchronously while there is a conversion in progress. Read will
    be harmless but changing registers while conversion is in progress may
    lead to inconsistent results. Thus, to avoid this lock st->lock.
    
    Fixes: 27e177190891 ("iio:adc:at91_adc8xx: introduce new atmel adc driver")
    Fixes: 6794e23fa3fe ("iio: adc: at91-sama5d2_adc: add support for oversampling resolution")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220803102855.2191070-4-claudiu.beznea@microchip.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d259b90f0c3d38700c5ad4ab8031cdf3a43215b2
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Aug 3 13:28:38 2022 +0300

    iio: adc: at91-sama5d2_adc: check return status for pressure and touch
    
    [ Upstream commit d84ace944a3b24529798dbae1340dea098473155 ]
    
    Check return status of at91_adc_read_position() and
    at91_adc_read_pressure() in at91_adc_read_info_raw().
    
    Fixes: 6794e23fa3fe ("iio: adc: at91-sama5d2_adc: add support for oversampling resolution")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220803102855.2191070-3-claudiu.beznea@microchip.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc2b97e177a953d7317d8ccd44ff18f84a1429ec
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Aug 3 13:28:37 2022 +0300

    iio: adc: at91-sama5d2_adc: fix AT91_SAMA5D2_MR_TRACKTIM_MAX
    
    [ Upstream commit bb73d5d9164c57c4bb916739a98e5cd8e0a5ed8c ]
    
    All ADC HW versions handled by this driver (SAMA5D2, SAM9X60, SAMA7G5)
    have MR.TRACKTIM on 4 bits. Fix AT91_SAMA5D2_MR_TRACKTIM_MAX to reflect
    this.
    
    Fixes: 27e177190891 ("iio:adc:at91_adc8xx: introduce new atmel adc driver")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220803102855.2191070-2-claudiu.beznea@microchip.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b9bb0cbd9e7b69ed5416a28aa338acf2fd050d5
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Sep 27 15:05:03 2022 -0700

    ARM: dts: exynos: fix polarity of VBUS GPIO of Origen
    
    [ Upstream commit a08137bd1e0a7ce951dce9ce4a83e39d379b6e1b ]
    
    EHCI Oxynos (drivers/usb/host/ehci-exynos.c) drives VBUS GPIO high when
    trying to power up the bus, therefore the GPIO in DTS must be marked as
    "active high". This will be important when EHCI driver is converted to
    gpiod API that respects declared polarities.
    
    Fixes: 4e8991def565 ("ARM: dts: exynos: Enable AX88760 USB hub on Origen board")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Link: https://lore.kernel.org/r/20220927220504.3744878-1-dmitry.torokhov@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 657de36c72f57fa172a66b06f826b3f5bc56f42e
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Thu Sep 29 14:45:25 2022 +0100

    arm64: ftrace: fix module PLTs with mcount
    
    [ Upstream commit 8cfb08575c6d4585f1ce0deeb189e5c824776b04 ]
    
    Li Huafei reports that mcount-based ftrace with module PLTs was broken
    by commit:
    
      a6253579977e4c6f ("arm64: ftrace: consistently handle PLTs.")
    
    When a module PLTs are used and a module is loaded sufficiently far away
    from the kernel, we'll create PLTs for any branches which are
    out-of-range. These are separate from the special ftrace trampoline
    PLTs, which the module PLT code doesn't directly manipulate.
    
    When mcount is in use this is a problem, as each mcount callsite in a
    module will be initialized to point to a module PLT, but since commit
    a6253579977e4c6f ftrace_make_nop() will assume that the callsite has
    been initialized to point to the special ftrace trampoline PLT, and
    ftrace_find_callable_addr() rejects other cases.
    
    This means that when ftrace tries to initialize a callsite via
    ftrace_make_nop(), the call to ftrace_find_callable_addr() will find
    that the `_mcount` stub is out-of-range and is not handled by the ftrace
    PLT, resulting in a splat:
    
    | ftrace_test: loading out-of-tree module taints kernel.
    | ftrace: no module PLT for _mcount
    | ------------[ ftrace bug ]------------
    | ftrace failed to modify
    | [<ffff800029180014>] 0xffff800029180014
    |  actual:   44:00:00:94
    | Initializing ftrace call sites
    | ftrace record flags: 2000000
    |  (0)
    |  expected tramp: ffff80000802eb3c
    | ------------[ cut here ]------------
    | WARNING: CPU: 3 PID: 157 at kernel/trace/ftrace.c:2120 ftrace_bug+0x94/0x270
    | Modules linked in:
    | CPU: 3 PID: 157 Comm: insmod Tainted: G           O       6.0.0-rc6-00151-gcd722513a189-dirty #22
    | Hardware name: linux,dummy-virt (DT)
    | pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    | pc : ftrace_bug+0x94/0x270
    | lr : ftrace_bug+0x21c/0x270
    | sp : ffff80000b2bbaf0
    | x29: ffff80000b2bbaf0 x28: 0000000000000000 x27: ffff0000c4d38000
    | x26: 0000000000000001 x25: ffff800009d7e000 x24: ffff0000c4d86e00
    | x23: 0000000002000000 x22: ffff80000a62b000 x21: ffff8000098ebea8
    | x20: ffff0000c4d38000 x19: ffff80000aa24158 x18: ffffffffffffffff
    | x17: 0000000000000000 x16: 0a0d2d2d2d2d2d2d x15: ffff800009aa9118
    | x14: 0000000000000000 x13: 6333626532303830 x12: 3030303866666666
    | x11: 203a706d61727420 x10: 6465746365707865 x9 : 3362653230383030
    | x8 : c0000000ffffefff x7 : 0000000000017fe8 x6 : 000000000000bff4
    | x5 : 0000000000057fa8 x4 : 0000000000000000 x3 : 0000000000000001
    | x2 : ad2cb14bb5438900 x1 : 0000000000000000 x0 : 0000000000000022
    | Call trace:
    |  ftrace_bug+0x94/0x270
    |  ftrace_process_locs+0x308/0x430
    |  ftrace_module_init+0x44/0x60
    |  load_module+0x15b4/0x1ce8
    |  __do_sys_init_module+0x1ec/0x238
    |  __arm64_sys_init_module+0x24/0x30
    |  invoke_syscall+0x54/0x118
    |  el0_svc_common.constprop.4+0x84/0x100
    |  do_el0_svc+0x3c/0xd0
    |  el0_svc+0x1c/0x50
    |  el0t_64_sync_handler+0x90/0xb8
    |  el0t_64_sync+0x15c/0x160
    | ---[ end trace 0000000000000000 ]---
    | ---------test_init-----------
    
    Fix this by reverting to the old behaviour of ignoring the old
    instruction when initialising an mcount callsite in a module, which was
    the behaviour prior to commit a6253579977e4c6f.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Fixes: a6253579977e ("arm64: ftrace: consistently handle PLTs.")
    Reported-by: Li Huafei <lihuafei1@huawei.com>
    Link: https://lore.kernel.org/linux-arm-kernel/20220929094134.99512-1-lihuafei1@huawei.com
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Will Deacon <will@kernel.org>
    Link: https://lore.kernel.org/r/20220929134525.798593-1-mark.rutland@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40e966a404c74f44b070e6e82da97a1ba2043fbb
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Tue Sep 27 15:28:26 2022 +0200

    ARM: Drop CMDLINE_* dependency on ATAGS
    
    [ Upstream commit 136f4b1ec7c962ee37a787e095fd37b058d72bd3 ]
    
    On arm32, the configuration options to specify the kernel command line
    type depend on ATAGS.  However, the actual CMDLINE cofiguration option
    does not depend on ATAGS, and the code that handles this is not specific
    to ATAGS (see drivers/of/fdt.c:early_init_dt_scan_chosen()).
    
    Hence users who desire to override the kernel command line on arm32 must
    enable support for ATAGS, even on a pure-DT system.  Other architectures
    (arm64, loongarch, microblaze, nios2, powerpc, and riscv) do not impose
    such a restriction.
    
    Hence drop the dependency on ATAGS.
    
    Fixes: bd51e2f595580fb6 ("ARM: 7506/1: allow for ATAGS to be configured out when DT support is selected")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 477dbf9d1bd553bb5df842ce0395cb98a4a4363f
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Sep 26 12:43:53 2022 +0200

    ARM: dts: exynos: correct s5k6a3 reset polarity on Midas family
    
    [ Upstream commit 3ba2d4bb9592bf7a6a3fe3dbe711ecfc3d004bab ]
    
    According to s5k6a3 driver code, the reset line for the chip appears to
    be active low. This also matches the typical polarity of reset lines in
    general. Let's fix it up as having correct polarity in DTS is important
    when the driver will be switched over to gpiod API.
    
    Fixes: b4fec64758ab ("ARM: dts: Add camera device nodes for Exynos4412 TRATS2 board")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20220913164104.203957-1-dmitry.torokhov@gmail.com
    Link: https://lore.kernel.org/r/20220926104354.118578-2-krzysztof.kozlowski@linaro.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bbd3dd7f92349cd836e64186dce7539348d88ac
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Wed Sep 23 03:34:21 2020 +0300

    soc/tegra: fuse: Drop Kconfig dependency on TEGRA20_APB_DMA
    
    [ Upstream commit 2254182807fc09ba9dec9a42ef239e373796f1b2 ]
    
    The DMA subsystem could be entirely disabled in Kconfig and then the
    TEGRA20_APB_DMA option isn't available too. Hence kernel configuration
    fails if DMADEVICES Kconfig option is disabled due to the unsatisfiable
    dependency.
    
    The FUSE driver isn't a critical driver and currently it only provides
    NVMEM interface to userspace which isn't known to be widely used, and
    thus, it's fine if FUSE driver fails to load.
    
    Let's remove the erroneous Kconfig dependency and let the FUSE driver to
    fail the probing if DMA is unavailable.
    
    Fixes: 19d41e5e9c68 ("soc/tegra: fuse: Add APB DMA dependency for Tegra20")
    Reported-by: Necip Fazil Yildiran <fazilyildiran@gmail.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209301
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09c35f1520e773c89cc32edb7abcfbcf3f4f4c9b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Sep 10 18:26:16 2022 -0700

    ia64: export memory_add_physaddr_to_nid to fix cxl build error
    
    [ Upstream commit 97c318bfbe84efded246e80428054f300042f110 ]
    
    cxl_pmem.ko uses memory_add_physaddr_to_nid() but ia64 does not export it,
    so this causes a build error:
    
    ERROR: modpost: "memory_add_physaddr_to_nid" [drivers/cxl/cxl_pmem.ko] undefined!
    
    Fix this by exporting that function.
    
    Fixes: 8c2676a5870a ("hot-add-mem x86_64: memory_add_physaddr_to_nid node fixup")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Ben Widawsky <bwidawsk@kernel.org>
    Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: linux-ia64@vger.kernel.org
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Keith Mannthey <kmannth@us.ibm.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e31c0e14cfad8a621832def190f63b72a701cfff
Author: Michael Walle <michael@walle.cc>
Date:   Tue Aug 16 02:10:25 2022 +0200

    ARM: dts: kirkwood: lsxl: remove first ethernet port
    
    [ Upstream commit 2d528eda7c96ce5c70f895854ecd5684bd5d80b9 ]
    
    Both the Linkstation LS-CHLv2 and the LS-XHL have only one ethernet
    port. This has always been wrong, i.e. the board code used to set up
    both ports, but the driver will play nice and return -ENODEV if the
    assiciated PHY is not found. Nevertheless, it is wrong. Remove it.
    
    Fixes: 876e23333511 ("ARM: kirkwood: add gigabit ethernet and mvmdio device tree nodes")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df4f05b35634839b070b4171411880fcb4258b94
Author: Michael Walle <michael@walle.cc>
Date:   Tue Aug 16 02:10:24 2022 +0200

    ARM: dts: kirkwood: lsxl: fix serial line
    
    [ Upstream commit 04eabc6ac10fda9424606d9a7ab6ab9a5d95350a ]
    
    Commit 327e15428977 ("ARM: dts: kirkwood: consolidate common pinctrl
    settings") unknowingly broke the serial output on this board. Before
    this commit, the pinmux was still configured by the bootloader and the
    kernel didn't reconfigured it again. This was an oversight by the
    initial board support where the pinmux for the serial line was never
    configured by the kernel. But with this commit, the serial line will be
    reconfigured to the wrong pins. This is especially confusing, because
    the output still works, but the input doesn't. Presumingly, the input is
    reconfigured to MPP10, but the output is connected to both MPP11 and
    MPP5.
    
    Override the pinmux in the board device tree.
    
    Fixes: 327e15428977 ("ARM: dts: kirkwood: consolidate common pinctrl settings")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43faaedf3a7f3d4836f72a5957f2b4bd14a6a553
Author: Marek Behún <kabel@kernel.org>
Date:   Wed Jul 27 14:56:10 2022 +0200

    ARM: dts: turris-omnia: Fix mpp26 pin name and comment
    
    [ Upstream commit 49e93898f0dc177e645c22d0664813567fd9ec00 ]
    
    There is a bug in Turris Omnia's schematics, whereupon the MPP[26] pin,
    which is routed to CN11 pin header, is documented as SPI CS1, but
    MPP[26] pin does not support this function. Instead it controls chip
    select 2 if in "spi0" mode.
    
    Fix the name of the pin node in pinctrl node and fix the comment in SPI
    node.
    
    Fixes: 26ca8b52d6e1 ("ARM: dts: add support for Turris Omnia")
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5c2051898fdaf57ea36eb6fde74190c73f977fa
Author: Liang He <windhl@126.com>
Date:   Thu Jul 21 21:52:17 2022 +0800

    soc: qcom: smem_state: Add refcounting for the 'state->of_node'
    
    [ Upstream commit 90681f53b9381c23ff7762a3b13826d620c272de ]
    
    In qcom_smem_state_register() and qcom_smem_state_release(), we
    should better use of_node_get() and of_node_put() for the reference
    creation and destruction of 'device_node'.
    
    Fixes: 9460ae2ff308 ("soc: qcom: Introduce common SMEM state machine code")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220721135217.1301039-2-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39781c98ad46b4e85053345dff797240c1ed7935
Author: Liang He <windhl@126.com>
Date:   Thu Jul 21 21:52:16 2022 +0800

    soc: qcom: smsm: Fix refcount leak bugs in qcom_smsm_probe()
    
    [ Upstream commit af8f6f39b8afd772fda4f8e61823ef8c021bf382 ]
    
    There are two refcount leak bugs in qcom_smsm_probe():
    
    (1) The 'local_node' is escaped out from for_each_child_of_node() as
    the break of iteration, we should call of_node_put() for it in error
    path or when it is not used anymore.
    (2) The 'node' is escaped out from for_each_available_child_of_node()
    as the 'goto', we should call of_node_put() for it in goto target.
    
    Fixes: c97c4090ff72 ("soc: qcom: smsm: Add driver for Qualcomm SMSM")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220721135217.1301039-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d312c12c91f831fcc48623c921f2d4560edb159
Author: Liang He <windhl@126.com>
Date:   Tue Jul 19 16:56:40 2022 +0800

    memory: of: Fix refcount leak bug in of_lpddr3_get_ddr_timings()
    
    [ Upstream commit 48af14fb0eaa63d9aa68f59fb0b205ec55a95636 ]
    
    We should add the of_node_put() when breaking out of
    for_each_child_of_node() as it will automatically increase
    and decrease the refcount.
    
    Fixes: 976897dd96db ("memory: Extend of_memory with LPDDR3 support")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220719085640.1210583-2-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit daaec4b3fe2297b022c6b2d6bf48b6e5265a60b9
Author: Liang He <windhl@126.com>
Date:   Tue Jul 19 16:56:39 2022 +0800

    memory: of: Fix refcount leak bug in of_get_ddr_timings()
    
    [ Upstream commit 05215fb32010d4afb68fbdbb4d237df6e2d4567b ]
    
    We should add the of_node_put() when breaking out of
    for_each_child_of_node() as it will automatically increase
    and decrease the refcount.
    
    Fixes: e6b42eb6a66c ("memory: emif: add device tree support to emif driver")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220719085640.1210583-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fde46754d5483bc398018bbec3c8ef5c55219e67
Author: Liang He <windhl@126.com>
Date:   Sat Jul 16 11:13:24 2022 +0800

    memory: pl353-smc: Fix refcount leak bug in pl353_smc_probe()
    
    [ Upstream commit 61b3c876c1cbdb1efd1f52a1f348580e6e14efb6 ]
    
    The break of for_each_available_child_of_node() needs a
    corresponding of_node_put() when the reference 'child' is not
    used anymore. Here we do not need to call of_node_put() in
    fail path as '!match' means no break.
    
    While the of_platform_device_create() will created a new
    reference by 'child' but it has considered the refcounting.
    
    Fixes: fee10bd22678 ("memory: pl353: Add driver for arm pl353 static memory controller")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220716031324.447680-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c442b0c0624c56f55d30bcb00e1b9d5cc6787c1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Oct 1 09:48:10 2022 +0200

    ALSA: hda/hdmi: Don't skip notification handling during PM operation
    
    [ Upstream commit 5226c7b9784eee215e3914f440b3c2e1764f67a8 ]
    
    The HDMI driver skips the notification handling from the graphics
    driver when the codec driver is being in the PM operation.  This
    behavior was introduced by the commit eb399d3c99d8 ("ALSA: hda - Skip
    ELD notification during PM process").  This skip may cause a problem,
    as we may miss the ELD update when the connection/disconnection
    happens right at the runtime-PM operation of the audio codec.
    
    Although this workaround was valid at that time, it's no longer true;
    the fix was required just because the ELD update procedure needed to
    wake up the audio codec, which had lead to a runtime-resume during a
    runtime-suspend.  Meanwhile, the ELD update procedure doesn't need a
    codec wake up any longer since the commit 788d441a164c ("ALSA: hda -
    Use component ops for i915 HDMI/DP audio jack handling"); i.e. there
    is no much reason for skipping the notification.
    
    Let's drop those checks for addressing the missing notification.
    
    Fixes: 788d441a164c ("ALSA: hda - Use component ops for i915 HDMI/DP audio jack handling")
    Reported-by: Brent Lu <brent.lu@intel.com>
    Link: https://lore.kernel.org/r/20220927135807.4097052-1-brent.lu@intel.com
    Link: https://lore.kernel.org/r/20221001074809.7461-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f182de42d786becce464ae7a1e7eca3fcbfc2469
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Thu Sep 29 00:01:16 2022 +0800

    ASoC: mt6660: Fix PM disable depth imbalance in mt6660_i2c_probe
    
    [ Upstream commit b73f11e895e140537e7f8c7251211ccd3ce0782b ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context. We fix it by moving
    pm_runtime_enable to the endding of mt6660_i2c_probe.
    
    Fixes:f289e55c6eeb4 ("ASoC: Add MediaTek MT6660 Speaker Amp Driver")
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20220928160116.125020-5-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37e3e01c9a78e9ef18f54c92aed34dda8b4a95f9
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Thu Sep 29 00:01:15 2022 +0800

    ASoC: wm5102: Fix PM disable depth imbalance in wm5102_probe
    
    [ Upstream commit fcbb60820cd3008bb44334a0395e5e57ccb77329 ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context. We fix it by moving
    pm_runtime_enable to the endding of wm5102_probe.
    
    Fixes:93e8791dd34ca ("ASoC: wm5102: Initial driver")
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20220928160116.125020-4-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb23569699359d9fba5bf1257da0445c8776de29
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Thu Sep 29 00:01:14 2022 +0800

    ASoC: wm5110: Fix PM disable depth imbalance in wm5110_probe
    
    [ Upstream commit 86b46bf1feb83898d89a2b4a8d08d21e9ea277a7 ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context. We fix it by moving
    pm_runtime_enable to the endding of wm5110_probe.
    
    Fixes:5c6af635fd772 ("ASoC: wm5110: Add audio CODEC driver")
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20220928160116.125020-3-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1b269dda1e747746f0b13c2fd6296aa4992bc8d
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Thu Sep 29 00:01:13 2022 +0800

    ASoC: wm8997: Fix PM disable depth imbalance in wm8997_probe
    
    [ Upstream commit 41a736ac20602f64773e80f0f5b32cde1830a44a ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context. We fix it by moving
    pm_runtime_enable to the endding of wm8997_probe
    
    Fixes:40843aea5a9bd ("ASoC: wm8997: Initial CODEC driver")
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20220928160116.125020-2-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71704c2e1b2c159db0d6f90e2108a72eb342f101
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Sep 22 21:06:40 2022 +0200

    mmc: wmt-sdmmc: Fix an error handling path in wmt_mci_probe()
    
    [ Upstream commit cb58188ad90a61784a56a64f5107faaf2ad323e7 ]
    
    A dma_free_coherent() call is missing in the error handling path of the
    probe, as already done in the remove function.
    
    Fixes: 3a96dff0f828 ("mmc: SD/MMC Host Controller for Wondermedia WM8505/WM8650")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/53fc6ffa5d1c428fefeae7d313cf4a669c3a1e98.1663873255.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c940636d9c745b1129f7e8d51c16a1b1669c1e40
Author: Andreas Pape <apape@de.adit-jv.com>
Date:   Mon Sep 26 18:58:13 2022 +0200

    ALSA: dmaengine: increment buffer pointer atomically
    
    [ Upstream commit d1c442019594692c64a70a86ad88eb5b6db92216 ]
    
    Setting pointer and afterwards checking for wraparound leads
    to the possibility of returning the inconsistent pointer position.
    
    This patch increments buffer pointer atomically to avoid this issue.
    
    Fixes: e7f73a1613567a ("ASoC: Add dmaengine PCM helper functions")
    Signed-off-by: Andreas Pape <apape@de.adit-jv.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Link: https://lore.kernel.org/r/1664211493-11789-1-git-send-email-erosca@de.adit-jv.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4993c1511d66326f1037bc5156b024a6a96d23ef
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Sep 22 21:44:57 2022 +0200

    ASoC: da7219: Fix an error handling path in da7219_register_dai_clks()
    
    [ Upstream commit abb4e4349afe7eecdb0499582f1c777031e3a7c8 ]
    
    If clk_hw_register() fails, the corresponding clk should not be
    unregistered.
    
    To handle errors from loops, clean up partial iterations before doing the
    goto.  So add a clk_hw_unregister().
    Then use a while (--i >= 0) loop in the unwind section.
    
    Fixes: 78013a1cf297 ("ASoC: da7219: Fix clock handling around codec level probe")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/e4acceab57a0d9e477a8d5890a45c5309e553e7c.1663875789.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef59819976da26e71b885cd43e2b5cf30da2d4d8
Author: Kuogee Hsieh <quic_khsieh@quicinc.com>
Date:   Wed Aug 24 13:15:50 2022 -0700

    drm/msm/dp: correct 1.62G link rate at dp_catalog_ctrl_config_msa()
    
    [ Upstream commit aa0bff10af1c4b92e6b56e3e1b7f81c660d3ba78 ]
    
    At current implementation there is an extra 0 at 1.62G link rate which
    cause no correct pixel_div selected for 1.62G link rate to calculate
    mvid and nvid. This patch delete the extra 0 to have mvid and nvid be
    calculated correctly.
    
    Changes in v2:
    -- fix Fixes tag's text
    
    Changes in v3:
    -- fix misspelling of "Reviewed-by"
    
    Fixes: 937f941ca06f  ("drm/msm/dp: Use qmp phy for DP PLL and PHY")
    Signed-off-by: Kuogee Hsieh <quic_khsieh@quicinc.com>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/499328/
    Link: https://lore.kernel.org/r/1661372150-3764-1-git-send-email-quic_khsieh@quicinc.com
    [DB: rewrapped commit message]
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 598d8f7d86f1405fff8ac38a0912be9a85b00251
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jun 15 15:57:01 2022 +0300

    drm/msm/dpu: index dpu_kms->hw_vbif using vbif_idx
    
    [ Upstream commit 7538f80ae0d98bf51eb89eee5344aec219902d42 ]
    
    Remove loops over hw_vbif. Instead always VBIF's idx as an index in the
    array. This fixes an error in dpu_kms_hw_init(), where we fill
    dpu_kms->hw_vbif[i], but check for an error pointer at
    dpu_kms->hw_vbif[vbif_idx].
    
    Fixes: 25fdd5933e4c ("drm/msm: Add SDM845 DPU support")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/489569/
    Link: https://lore.kernel.org/r/20220615125703.24647-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9a60d64057245700513a9ed4651fa81ec306e37
Author: Liang He <windhl@126.com>
Date:   Wed Sep 14 21:43:54 2022 +0800

    ASoC: eureka-tlv320: Hold reference returned from of_find_xxx API
    
    [ Upstream commit bfb735a3ceff0bab6473bac275da96f9b2a06dec ]
    
    In eukrea_tlv320_probe(), we need to hold the reference returned
    from of_find_compatible_node() which has increased the refcount
    and then call of_node_put() with it when done.
    
    Fixes: 66f232908de2 ("ASoC: eukrea-tlv320: Add DT support.")
    Co-authored-by: Kelin Wang <wangkelin2023@163.com>
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220914134354.3995587-1-windhl@126.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad0b8ed172a15ae6e143b6a5dcea30f4c96f8cbe
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Aug 25 09:33:57 2022 +0200

    mmc: au1xmmc: Fix an error handling path in au1xmmc_probe()
    
    [ Upstream commit 5cbedf52608cc3cbc1c2a9a861fb671620427a20 ]
    
    If clk_prepare_enable() fails, there is no point in calling
    clk_disable_unprepare() in the error handling path.
    
    Move the out_clk label at the right place.
    
    Fixes: b6507596dfd6 ("MIPS: Alchemy: au1xmmc: use clk framework")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/21d99886d07fa7fcbec74992657dabad98c935c4.1661412818.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f340e1c1c74d11c45a6e32663829b26acd4f47b
Author: Liang He <windhl@126.com>
Date:   Fri Jul 22 22:43:48 2022 +0800

    drm/omap: dss: Fix refcount leak bugs
    
    [ Upstream commit 8b42057e62120813ebe9274f508fa785b7cab33a ]
    
    In dss_init_ports() and __dss_uninit_ports(), we should call
    of_node_put() for the reference returned by of_graph_get_port_by_id()
    in fail path or when it is not used anymore.
    
    Fixes: 09bffa6e5192 ("drm: omap: use common OF graph helpers")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220722144348.1306569-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbe37857dda1ceadea4ecc036ab7c6330a00777b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Sep 6 11:23:06 2022 +0200

    ALSA: hda: beep: Simplify keep-power-at-enable behavior
    
    [ Upstream commit 4c8d695cb9bc5f6fd298a586602947b2fc099a64 ]
    
    The recent fix for IDT codecs to keep the power up while the beep is
    enabled can be better integrated into the beep helper code.
    This patch cleans up the code with refactoring.
    
    Fixes: 414d38ba8710 ("ALSA: hda/sigmatel: Keep power up while beep is enabled")
    Link: https://lore.kernel.org/r/20220906092306.26183-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0fb0817ebce3d80a1d1bcd4ce7693a7b6744f0b
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Sep 2 09:30:30 2022 +0800

    ASoC: rsnd: Add check for rsnd_mod_power_on
    
    [ Upstream commit 376be51caf8871419bbcbb755e1e615d30dc3153 ]
    
    As rsnd_mod_power_on() can return negative numbers,
    it should be better to check the return value and
    deal with the exception.
    
    Fixes: e7d850dd10f4 ("ASoC: rsnd: use mod base common method on SSI-parent")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/20220902013030.3691266-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 877e92e9b1bdeb580b31a46061005936be902cd4
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Tue Aug 30 15:34:50 2022 +0800

    drm/bridge: megachips: Fix a null pointer dereference bug
    
    [ Upstream commit 1ff673333d46d2c1b053ebd0c1c7c7c79e36943e ]
    
    When removing the module we will get the following warning:
    
    [   31.911505] i2c-core: driver [stdp2690-ge-b850v3-fw] unregistered
    [   31.912484] general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN PTI
    [   31.913338] KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
    [   31.915280] RIP: 0010:drm_bridge_remove+0x97/0x130
    [   31.921825] Call Trace:
    [   31.922533]  stdp4028_ge_b850v3_fw_remove+0x34/0x60 [megachips_stdpxxxx_ge_b850v3_fw]
    [   31.923139]  i2c_device_remove+0x181/0x1f0
    
    The two bridges (stdp2690, stdp4028) do not probe at the same time, so
    the driver does not call ge_b850v3_resgiter() when probing, causing the
    driver to try to remove the object that has not been initialized.
    
    Fix this by checking whether both the bridges are probed.
    
    Fixes: 11632d4aa2b3 ("drm/bridge: megachips: Ensure both bridges are probed before registration")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220830073450.1897020-1-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c577b4e9722711ee4c93f738c12da32da7e36085
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Aug 22 17:42:43 2022 -0700

    drm: fix drm_mipi_dbi build errors
    
    [ Upstream commit eb7de496451bd969e203f02f66585131228ba4ae ]
    
    drm_mipi_dbi needs lots of DRM_KMS_HELPER support, so select
    that Kconfig symbol like it is done is most other uses, and
    the way that it was before MIPS_DBI was moved from tinydrm
    to its core location.
    
    Fixes these build errors:
    
    ld: drivers/gpu/drm/drm_mipi_dbi.o: in function `mipi_dbi_buf_copy':
    drivers/gpu/drm/drm_mipi_dbi.c:205: undefined reference to `drm_gem_fb_get_obj'
    ld: drivers/gpu/drm/drm_mipi_dbi.c:211: undefined reference to `drm_gem_fb_begin_cpu_access'
    ld: drivers/gpu/drm/drm_mipi_dbi.c:215: undefined reference to `drm_gem_fb_vmap'
    ld: drivers/gpu/drm/drm_mipi_dbi.c:222: undefined reference to `drm_fb_swab'
    ld: drivers/gpu/drm/drm_mipi_dbi.c:224: undefined reference to `drm_fb_memcpy'
    ld: drivers/gpu/drm/drm_mipi_dbi.c:227: undefined reference to `drm_fb_xrgb8888_to_rgb565'
    ld: drivers/gpu/drm/drm_mipi_dbi.c:235: undefined reference to `drm_gem_fb_vunmap'
    ld: drivers/gpu/drm/drm_mipi_dbi.c:237: undefined reference to `drm_gem_fb_end_cpu_access'
    ld: drivers/gpu/drm/drm_mipi_dbi.o: in function `mipi_dbi_dev_init_with_formats':
    ld: drivers/gpu/drm/drm_mipi_dbi.o:/X64/../drivers/gpu/drm/drm_mipi_dbi.c:469: undefined reference to `drm_gem_fb_create_with_dirty'
    
    Fixes: 174102f4de23 ("drm/tinydrm: Move mipi-dbi")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Dillon Min <dillon.minfei@gmail.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Noralf Trønnes <noralf@tronnes.org>
    Cc: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: Thierry Reding <thierry.reding@gmail.com>
    Cc: dri-devel@lists.freedesktop.org
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220823004243.11596-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 804d8e59f34f298cd198134a9e6887f3bbb863c0
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Aug 25 16:13:36 2022 +0200

    platform/x86: msi-laptop: Fix resource cleanup
    
    [ Upstream commit 5523632aa10f906dfe2eb714ee748590dc7fc6b1 ]
    
    Fix the input-device not getting free-ed on probe-errors and
    fix the msi_touchpad_dwork not getting cancelled on neither
    probe-errors nor on remove.
    
    Fixes: 143a4c0284dc ("msi-laptop: send out touchpad on/off key")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220825141336.208597-3-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c21c08fab716a8f8340bce66391cd99d65b14070
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Aug 25 16:13:34 2022 +0200

    platform/x86: msi-laptop: Fix old-ec check for backlight registering
    
    [ Upstream commit 83ac7a1c2ed5f17caa07cbbc84bad3c05dc3bf22 ]
    
    Commit 2cc6c717799f ("msi-laptop: Port to new backlight interface
    selection API") replaced this check:
    
            if (!quirks->old_ec_model || acpi_video_backlight_support())
                    pr_info("Brightness ignored, ...");
            else
                    do_register();
    
    With:
    
            if (quirks->old_ec_model ||
                acpi_video_get_backlight_type() == acpi_backlight_vendor)
                    do_register();
    
    But since the do_register() part was part of the else branch, the entire
    condition should be inverted.  So not only the 2 statements on either
    side of the || should be inverted, but the || itself should be replaced
    with a &&.
    
    In practice this has likely not been an issue because the new-ec models
    (old_ec_model==false) likely all support ACPI video backlight control,
    making acpi_video_get_backlight_type() return acpi_backlight_video
    turning the second part of the || also false when old_ec_model == false.
    
    Fixes: 2cc6c717799f ("msi-laptop: Port to new backlight interface selection API")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220825141336.208597-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b77755f58ede5d6bfefc070d4276971b6d571c1d
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Thu Aug 25 16:02:39 2022 +0200

    ASoC: tas2764: Fix mute/unmute
    
    [ Upstream commit f5ad67f13623548e5aff847f89700c178aaf2a98 ]
    
    Because the PWR_CTRL field is modeled as the power state of the DAC
    widget, and at the same time it is used to implement mute/unmute, we
    need some additional book-keeping to have the right end result no matter
    the sequence of calls. Without this fix, one permanently mutes an
    ongoing stream by toggling the associated speaker pin control.
    
    (This mirrors commit 1e5907bcb3a3 ("ASoC: tas2770: Fix handling of
    mute/unmute") which was a fix to the tas2770 driver.)
    
    Fixes: 827ed8a0fa50 ("ASoC: tas2764: Add the driver for the TAS2764")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220825140241.53963-4-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e6b64df54cde7b39ccb161bf5e2485a1a9a4a35
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Thu Aug 25 16:02:38 2022 +0200

    ASoC: tas2764: Drop conflicting set_bias_level power setting
    
    [ Upstream commit 09273f38832406db19a8907a934687cc10660a6b ]
    
    The driver is setting the PWR_CTRL field in both the set_bias_level
    callback and on DAPM events of the DAC widget (and also in the
    mute_stream method). Drop the set_bias_level callback altogether as the
    power setting it does is in conflict with the other code paths.
    
    (This mirrors commit c8a6ae3fe1c8 ("ASoC: tas2770: Drop conflicting
    set_bias_level power setting") which was a fix to the tas2770 driver.)
    
    Fixes: 827ed8a0fa50 ("ASoC: tas2764: Add the driver for the TAS2764")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220825140241.53963-3-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2c6022e100426e8fc9276e9ebb203687ece5807
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Thu Aug 25 16:02:37 2022 +0200

    ASoC: tas2764: Allow mono streams
    
    [ Upstream commit 23204d928a27146d13e11c9383632775345ecca8 ]
    
    The part is a mono speaker amp, but it can do downmix and switch between
    left and right channel, so the right channel range is 1 to 2.
    
    (This mirrors commit bf54d97a835d ("ASoC: tas2770: Allow mono streams")
    which was a fix to the tas2770 driver.)
    
    Fixes: 827ed8a0fa50 ("ASoC: tas2764: Add the driver for the TAS2764")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220825140241.53963-2-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 868fc93b615b9f6c2b0b1894536618fa6cd66acc
Author: Dan Carpenter <error27@gmail.com>
Date:   Fri Aug 19 08:20:36 2022 +0300

    platform/chrome: fix memory corruption in ioctl
    
    [ Upstream commit 8a07b45fd3c2dda24fad43639be5335a4595196a ]
    
    If "s_mem.bytes" is larger than the buffer size it leads to memory
    corruption.
    
    Fixes: eda2e30c6684 ("mfd / platform: cros_ec: Miscellaneous character device to talk with the EC")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Link: https://lore.kernel.org/r/Yv8dpCFZJdbUT5ye@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84da5cdf43d24768c53984fa05cea60c195b030f
Author: Rustam Subkhankulov <subkhankulov@ispras.ru>
Date:   Sun Aug 14 01:08:43 2022 +0300

    platform/chrome: fix double-free in chromeos_laptop_prepare()
    
    [ Upstream commit 6ad4194d6a1e1d11b285989cd648ef695b4a93c0 ]
    
    If chromeos_laptop_prepare_i2c_peripherals() fails after allocating memory
    for 'cros_laptop->i2c_peripherals', this memory is freed at 'err_out' label
    and nonzero value is returned. Then chromeos_laptop_destroy() is called,
    resulting in double-free error.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Signed-off-by: Rustam Subkhankulov <subkhankulov@ispras.ru>
    Fixes: 5020cd29d8bf ("platform/chrome: chromeos_laptop - supply properties for ACPI devices")
    Reviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Link: https://lore.kernel.org/r/20220813220843.2373004-1-subkhankulov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e25bfcd12d8e90324e27b1adc1fc7410d3664ee
Author: Liang He <windhl@126.com>
Date:   Mon Jul 11 21:15:50 2022 +0800

    drm:pl111: Add of_node_put() when breaking out of for_each_available_child_of_node()
    
    [ Upstream commit e0686dc6f2252e009c455fe99e2ce9d62a60eb47 ]
    
    The reference 'child' in the iteration of for_each_available_child_of_node()
    is only escaped out into a local variable which is only used to check
    its value. So we still need to the of_node_put() when breaking of the
    for_each_available_child_of_node() which will automatically increase
    and decrease the refcount.
    
    Fixes: ca454bd42dc2 ("drm/pl111: Support the Versatile Express")
    Signed-off-by: Liang He <windhl@126.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220711131550.361350-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad06d6bed5f265ade68123dfd35400a025b29011
Author: Simon Ser <contact@emersion.fr>
Date:   Thu Feb 10 15:40:25 2022 +0000

    drm/dp_mst: fix drm_dp_dpcd_read return value checks
    
    [ Upstream commit 2ac6cdd581f48c8f68747156fde5868486a44985 ]
    
    drm_dp_dpcd_read returns the number of bytes read. The previous code
    would print garbage on DPCD error, and would exit with on error on
    success.
    
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Fixes: cb897542c6d2 ("drm/dp_mst: Fix W=1 warnings")
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@st.com>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/473500/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f5889fd65004e84f3b9806bff1ddd0b90aede2d
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Thu Jul 21 17:22:58 2022 +0800

    drm/bridge: parade-ps8640: Fix regulator supply order
    
    [ Upstream commit fc94224c2e0ae8d83ac511a3ef4962178505469d ]
    
    The datasheet says that VDD12 must be enabled and at full voltage before
    VDD33 is enabled.
    
    Reorder the bulk regulator supply names so that VDD12 is enabled before
    VDD33. Any enable ramp delays should be handled by setting proper
    constraints on the regulators.
    
    Fixes: bc1aee7fc8f0 ("drm/bridge: Add I2C based driver for ps8640 bridge")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220721092258.3397461-1-wenst@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45120fa5e522d444e3fc1c5a9afc5d53eed91d00
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Mon Jul 11 19:38:31 2022 +0200

    drm/mipi-dsi: Detach devices when removing the host
    
    [ Upstream commit 668a8f17b5290d04ef7343636a5588a0692731a1 ]
    
    Whenever the MIPI-DSI host is unregistered, the code of
    mipi_dsi_host_unregister() loops over every device currently found on that
    bus and will unregister it.
    
    However, it doesn't detach it from the bus first, which leads to all kind
    of resource leaks if the host wants to perform some clean up whenever a
    device is detached.
    
    Fixes: 068a00233969 ("drm: Add MIPI DSI bus support")
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220711173939.1132294-2-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 050b6505074180e8404be9dc0d182ebeaea75cc1
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Jul 4 13:55:40 2022 +0300

    drm/bridge: Avoid uninitialized variable warning
    
    [ Upstream commit 7d1202738efda60155d98b370b3c70d336be0eea ]
    
    This code works, but technically it uses "num_in_bus_fmts" before it
    has been initialized so it leads to static checker warnings and probably
    KMEMsan warnings at run time.  Initialize the variable to zero to
    silence the warning.
    
    Fixes: f32df58acc68 ("drm/bridge: Add the necessary bits to support bus format negotiation")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/YrrIs3hoGcPVmXc5@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7839f2b3495be9d3dbc9e4a6a166ae8d6d15be68
Author: Alvin Šipraga <alsi@bang-olufsen.dk>
Date:   Sun Jun 12 16:48:53 2022 +0200

    drm: bridge: adv7511: fix CEC power down control register offset
    
    [ Upstream commit 1d22b6033ea113a4c3850dfa2c0770885c81aec8 ]
    
    The ADV7511_REG_CEC_CTRL = 0xE2 register is part of the main register
    map - not the CEC register map. As such, we shouldn't apply an offset to
    the register address. Doing so will cause us to address a bogus register
    for chips with a CEC register map offset (e.g. ADV7533).
    
    Fixes: 3b1b975003e4 ("drm: adv7511/33: add HDMI CEC support")
    Signed-off-by: Alvin Šipraga <alsi@bang-olufsen.dk>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220612144854.2223873-2-alvin@pqrs.dk
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29f50bcf0f8b9e49c3c9b0e08fcae2ec3a88cc9f
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Mon Oct 3 17:19:27 2022 +0100

    net: mvpp2: fix mvpp2 debugfs leak
    
    [ Upstream commit 0152dfee235e87660f52a117fc9f70dc55956bb4 ]
    
    When mvpp2 is unloaded, the driver specific debugfs directory is not
    removed, which technically leads to a memory leak. However, this
    directory is only created when the first device is probed, so the
    hardware is present. Removing the module is only something a developer
    would to when e.g. testing out changes, so the module would be
    reloaded. So this memory leak is minor.
    
    The original attempt in commit fe2c9c61f668 ("net: mvpp2: debugfs: fix
    memory leak when using debugfs_lookup()") that was labelled as a memory
    leak fix was not, it fixed a refcount leak, but in doing so created a
    problem when the module is reloaded - the directory already exists, but
    mvpp2_root is NULL, so we lose all debugfs entries. This fix has been
    reverted.
    
    This is the alternative fix, where we remove the offending directory
    whenever the driver is unloaded.
    
    Fixes: 21da57a23125 ("net: mvpp2: add a debugfs interface for the Header Parser")
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Marcin Wojtas <mw@semihalf.com>
    Link: https://lore.kernel.org/r/E1ofOAB-00CzkG-UO@rmk-PC.armlinux.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cb54f21623d55024b1264184f6e7bf6d613dcde
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Oct 1 13:51:02 2022 -0700

    once: add DO_ONCE_SLOW() for sleepable contexts
    
    [ Upstream commit 62c07983bef9d3e78e71189441e1a470f0d1e653 ]
    
    Christophe Leroy reported a ~80ms latency spike
    happening at first TCP connect() time.
    
    This is because __inet_hash_connect() uses get_random_once()
    to populate a perturbation table which became quite big
    after commit 4c2c8f03a5ab ("tcp: increase source port perturb table to 2^16")
    
    get_random_once() uses DO_ONCE(), which block hard irqs for the duration
    of the operation.
    
    This patch adds DO_ONCE_SLOW() which uses a mutex instead of a spinlock
    for operations where we prefer to stay in process context.
    
    Then __inet_hash_connect() can use get_random_slow_once()
    to populate its perturbation table.
    
    Fixes: 4c2c8f03a5ab ("tcp: increase source port perturb table to 2^16")
    Fixes: 190cc82489f4 ("tcp: change source port randomizarion at connect() time")
    Reported-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Link: https://lore.kernel.org/netdev/CANn89iLAEYBaoYajy0Y9UmGFff5GPxDUoG-ErVB2jDdRNQ5Tug@mail.gmail.com/T/#t
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Tested-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67cb80a9d2c83edac0e42aaa91ed4dd527cec284
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Sun Oct 2 01:43:44 2022 +0900

    net/ieee802154: reject zero-sized raw_sendmsg()
    
    [ Upstream commit 3a4d061c699bd3eedc80dc97a4b2a2e1af83c6f5 ]
    
    syzbot is hitting skb_assert_len() warning at raw_sendmsg() for ieee802154
    socket. What commit dc633700f00f726e ("net/af_packet: check len when
    min_header_len equals to 0") does also applies to ieee802154 socket.
    
    Link: https://syzkaller.appspot.com/bug?extid=5ea725c25d06fb9114c4
    Reported-by: syzbot <syzbot+5ea725c25d06fb9114c4@syzkaller.appspotmail.com>
    Fixes: fd1894224407c484 ("bpf: Don't redirect packets with invalid pkt_len")
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cc0e2afc6a137d45b9523f61a1b1b16a68c9dc0
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Fri Sep 30 14:28:43 2022 +0800

    bnx2x: fix potential memory leak in bnx2x_tpa_stop()
    
    [ Upstream commit b43f9acbb8942b05252be83ac25a81cec70cc192 ]
    
    bnx2x_tpa_stop() allocates a memory chunk from new_data with
    bnx2x_frag_alloc(). The new_data should be freed when gets some error.
    But when "pad + len > fp->rx_buf_size" is true, bnx2x_tpa_stop() returns
    without releasing the new_data, which will lead to a memory leak.
    
    We should free the new_data with bnx2x_frag_free() when "pad + len >
    fp->rx_buf_size" is true.
    
    Fixes: 07b0f00964def8af9321cfd6c4a7e84f6362f728 ("bnx2x: fix possible panic under memory stress")
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da349221c4d2d4ac5f606c1c3b36d4ef0b3e6a0c
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Thu Sep 29 00:25:37 2022 +0900

    net: rds: don't hold sock lock when cancelling work from rds_tcp_reset_callbacks()
    
    [ Upstream commit a91b750fd6629354460282bbf5146c01b05c4859 ]
    
    syzbot is reporting lockdep warning at rds_tcp_reset_callbacks() [1], for
    commit ac3615e7f3cffe2a ("RDS: TCP: Reduce code duplication in
    rds_tcp_reset_callbacks()") added cancel_delayed_work_sync() into a section
    protected by lock_sock() without realizing that rds_send_xmit() might call
    lock_sock().
    
    We don't need to protect cancel_delayed_work_sync() using lock_sock(), for
    even if rds_{send,recv}_worker() re-queued this work while __flush_work()
     from cancel_delayed_work_sync() was waiting for this work to complete,
    retried rds_{send,recv}_worker() is no-op due to the absence of RDS_CONN_UP
    bit.
    
    Link: https://syzkaller.appspot.com/bug?extid=78c55c7bc6f66e53dce2 [1]
    Reported-by: syzbot <syzbot+78c55c7bc6f66e53dce2@syzkaller.appspotmail.com>
    Co-developed-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Tested-by: syzbot <syzbot+78c55c7bc6f66e53dce2@syzkaller.appspotmail.com>
    Fixes: ac3615e7f3cffe2a ("RDS: TCP: Reduce code duplication in rds_tcp_reset_callbacks()")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9e25dc053f6114d3fb5dca0e52409778e28acbc
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri Sep 30 13:34:08 2022 +0200

    spi: Ensure that sg_table won't be used after being freed
    
    [ Upstream commit 8e9204cddcc3fea9affcfa411715ba4f66e97587 ]
    
    SPI code checks for non-zero sgt->orig_nents to determine if the buffer
    has been DMA-mapped. Ensure that sg_table is really zeroed after free to
    avoid potential NULL pointer dereference if the given SPI xfer object is
    reused again without being DMA-mapped.
    
    Fixes: 0c17ba73c08f ("spi: Fix cache corruption due to DMA/PIO overlap")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/r/20220930113408.19720-1-m.szyprowski@samsung.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96a3ddb870313286935a2a7184c08777369089c2
Author: Neal Cardwell <ncardwell@google.com>
Date:   Wed Sep 28 16:03:31 2022 -0400

    tcp: fix tcp_cwnd_validate() to not forget is_cwnd_limited
    
    [ Upstream commit f4ce91ce12a7c6ead19b128ffa8cff6e3ded2a14 ]
    
    This commit fixes a bug in the tracking of max_packets_out and
    is_cwnd_limited. This bug can cause the connection to fail to remember
    that is_cwnd_limited is true, causing the connection to fail to grow
    cwnd when it should, causing throughput to be lower than it should be.
    
    The following event sequence is an example that triggers the bug:
    
     (a) The connection is cwnd_limited, but packets_out is not at its
         peak due to TSO deferral deciding not to send another skb yet.
         In such cases the connection can advance max_packets_seq and set
         tp->is_cwnd_limited to true and max_packets_out to a small
         number.
    
    (b) Then later in the round trip the connection is pacing-limited (not
         cwnd-limited), and packets_out is larger. In such cases the
         connection would raise max_packets_out to a bigger number but
         (unexpectedly) flip tp->is_cwnd_limited from true to false.
    
    This commit fixes that bug.
    
    One straightforward fix would be to separately track (a) the next
    window after max_packets_out reaches a maximum, and (b) the next
    window after tp->is_cwnd_limited is set to true. But this would
    require consuming an extra u32 sequence number.
    
    Instead, to save space we track only the most important
    information. Specifically, we track the strongest available signal of
    the degree to which the cwnd is fully utilized:
    
    (1) If the connection is cwnd-limited then we remember that fact for
    the current window.
    
    (2) If the connection not cwnd-limited then we track the maximum
    number of outstanding packets in the current window.
    
    In particular, note that the new logic cannot trigger the buggy
    (a)/(b) sequence above because with the new logic a condition where
    tp->packets_out > tp->max_packets_out can only trigger an update of
    tp->is_cwnd_limited if tp->is_cwnd_limited is false.
    
    This first showed up in a testing of a BBRv2 dev branch, but this
    buggy behavior highlighted a general issue with the
    tcp_cwnd_validate() logic that can cause cwnd to fail to increase at
    the proper rate for any TCP congestion control, including Reno or
    CUBIC.
    
    Fixes: ca8a22634381 ("tcp: make cwnd-limited checks measurement-based, and gentler")
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Kevin(Yudong) Yang <yyd@google.com>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f65955340e0044f5c41ac799a01698ac7dee8a4e
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Sep 28 14:10:13 2022 -0400

    sctp: handle the error returned from sctp_auth_asoc_init_active_key
    
    [ Upstream commit 022152aaebe116a25c39818a07e175a8cd3c1e11 ]
    
    When it returns an error from sctp_auth_asoc_init_active_key(), the
    active_key is actually not updated. The old sh_key will be freeed
    while it's still used as active key in asoc. Then an use-after-free
    will be triggered when sending patckets, as found by syzbot:
    
      sctp_auth_shkey_hold+0x22/0xa0 net/sctp/auth.c:112
      sctp_set_owner_w net/sctp/socket.c:132 [inline]
      sctp_sendmsg_to_asoc+0xbd5/0x1a20 net/sctp/socket.c:1863
      sctp_sendmsg+0x1053/0x1d50 net/sctp/socket.c:2025
      inet_sendmsg+0x99/0xe0 net/ipv4/af_inet.c:819
      sock_sendmsg_nosec net/socket.c:714 [inline]
      sock_sendmsg+0xcf/0x120 net/socket.c:734
    
    This patch is to fix it by not replacing the sh_key when it returns
    errors from sctp_auth_asoc_init_active_key() in sctp_auth_set_key().
    For sctp_auth_set_active_key(), old active_key_id will be set back
    to asoc->active_key_id when the same thing happens.
    
    Fixes: 58acd1009226 ("sctp: update active_key for asoc when old key is being replaced")
    Reported-by: syzbot+a236dd8e9622ed8954a3@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a1d0363208528a3bacbc2c37264d60182efd482
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Wed Sep 28 21:39:38 2022 +0800

    mISDN: fix use-after-free bugs in l1oip timer handlers
    
    [ Upstream commit 2568a7e0832ee30b0a351016d03062ab4e0e0a3f ]
    
    The l1oip_cleanup() traverses the l1oip_ilist and calls
    release_card() to cleanup module and stack. However,
    release_card() calls del_timer() to delete the timers
    such as keep_tl and timeout_tl. If the timer handler is
    running, the del_timer() will not stop it and result in
    UAF bugs. One of the processes is shown below:
    
        (cleanup routine)          |        (timer handler)
    release_card()                 | l1oip_timeout()
     ...                           |
     del_timer()                   | ...
     ...                           |
     kfree(hc) //FREE              |
                                   | hc->timeout_on = 0 //USE
    
    Fix by calling del_timer_sync() in release_card(), which
    makes sure the timer handlers have finished before the
    resources, such as l1oip and so on, have been deallocated.
    
    What's more, the hc->workq and hc->socket_thread can kick
    those timers right back in. We add a bool flag to show
    if card is released. Then, check this flag in hc->workq
    and hc->socket_thread.
    
    Fixes: 3712b42d4b1b ("Add layer1 over IP support")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4a5905fd2ef841cd61e969ea692c213c2e5c1f7
Author: Junichi Uekawa <uekawa@chromium.org>
Date:   Wed Sep 28 15:45:38 2022 +0900

    vhost/vsock: Use kvmalloc/kvfree for larger packets.
    
    [ Upstream commit 0e3f72931fc47bb81686020cc643cde5d9cd0bb8 ]
    
    When copying a large file over sftp over vsock, data size is usually 32kB,
    and kmalloc seems to fail to try to allocate 32 32kB regions.
    
     vhost-5837: page allocation failure: order:4, mode:0x24040c0
     Call Trace:
      [<ffffffffb6a0df64>] dump_stack+0x97/0xdb
      [<ffffffffb68d6aed>] warn_alloc_failed+0x10f/0x138
      [<ffffffffb68d868a>] ? __alloc_pages_direct_compact+0x38/0xc8
      [<ffffffffb664619f>] __alloc_pages_nodemask+0x84c/0x90d
      [<ffffffffb6646e56>] alloc_kmem_pages+0x17/0x19
      [<ffffffffb6653a26>] kmalloc_order_trace+0x2b/0xdb
      [<ffffffffb66682f3>] __kmalloc+0x177/0x1f7
      [<ffffffffb66e0d94>] ? copy_from_iter+0x8d/0x31d
      [<ffffffffc0689ab7>] vhost_vsock_handle_tx_kick+0x1fa/0x301 [vhost_vsock]
      [<ffffffffc06828d9>] vhost_worker+0xf7/0x157 [vhost]
      [<ffffffffb683ddce>] kthread+0xfd/0x105
      [<ffffffffc06827e2>] ? vhost_dev_set_owner+0x22e/0x22e [vhost]
      [<ffffffffb683dcd1>] ? flush_kthread_worker+0xf3/0xf3
      [<ffffffffb6eb332e>] ret_from_fork+0x4e/0x80
      [<ffffffffb683dcd1>] ? flush_kthread_worker+0xf3/0xf3
    
    Work around by doing kvmalloc instead.
    
    Fixes: 433fc58e6bf2 ("VSOCK: Introduce vhost_vsock.ko")
    Signed-off-by: Junichi Uekawa <uekawa@chromium.org>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/r/20220928064538.667678-1-uekawa@chromium.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2b5dc3a53943a9c146d3a438aa26bd0b1fb671d
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Sun Sep 18 15:42:25 2022 +0300

    wifi: rtl8xxxu: Fix AIFS written to REG_EDCA_*_PARAM
    
    [ Upstream commit 5574d3290449916397f3092dcd2bac92415498e1 ]
    
    ieee80211_tx_queue_params.aifs is not supposed to be written directly
    to the REG_EDCA_*_PARAM registers. Instead process it like the vendor
    drivers do. It's kinda hacky but it works.
    
    This change boosts the download speed and makes it more stable.
    
    Tested with RTL8188FU but all the other supported chips should also
    benefit.
    
    Fixes: 26f1fad29ad9 ("New driver: rtl8xxxu (mac80211)")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Acked-by: Jes Sorensen <jes@trained-monkey.org>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/038cc03f-3567-77ba-a7bd-c4930e3b2fad@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17196f2f98abaa0f2b576310b082adfcbbfe97a0
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Tue Sep 27 13:21:17 2022 +0200

    spi: s3c64xx: Fix large transfers with DMA
    
    [ Upstream commit 1224e29572f655facfcd850cf0f0a4784f36a903 ]
    
    The COUNT_VALUE in the PACKET_CNT register is 16-bit so the maximum
    value is 65535.  Asking the driver to transfer a larger size currently
    leads to the DMA transfer timing out.  Implement ->max_transfer_size()
    and have the core split the transfer as needed.
    
    Fixes: 230d42d422e7 ("spi: Add s3c64xx SPI Controller driver")
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Link: https://lore.kernel.org/r/20220927112117.77599-5-vincent.whitchurch@axis.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b284e1fe15c419717720508b367fe7cbfd8c74af
Author: Phil Sutter <phil@nwl.cc>
Date:   Wed Sep 21 13:07:31 2022 +0200

    netfilter: nft_fib: Fix for rpath check with VRF devices
    
    [ Upstream commit 2a8a7c0eaa8747c16aa4a48d573aa920d5c00a5c ]
    
    Analogous to commit b575b24b8eee3 ("netfilter: Fix rpfilter
    dropping vrf packets by mistake") but for nftables fib expression:
    Add special treatment of VRF devices so that typical reverse path
    filtering via 'fib saddr . iif oif' expression works as expected.
    
    Fixes: f6d0cbcf09c50 ("netfilter: nf_tables: add fib expression")
    Signed-off-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b384e8fb16068702a087e1d09814784753d7e6e2
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Mon Sep 26 15:44:42 2022 -0700

    Bluetooth: hci_core: Fix not handling link timeouts propertly
    
    [ Upstream commit 116523c8fac05d1d26f748fee7919a4ec5df67ea ]
    
    Change that introduced the use of __check_timeout did not account for
    link types properly, it always assumes ACL_LINK is used thus causing
    hdev->acl_last_tx to be used even in case of LE_LINK and then again
    uses ACL_LINK with hci_link_tx_to.
    
    To fix this __check_timeout now takes the link type as parameter and
    then procedure to use the right last_tx based on the link type and pass
    it to hci_link_tx_to.
    
    Fixes: 1b1d29e51499 ("Bluetooth: Make use of __check_timeout on hci_sched_le")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Tested-by: David Beinder <david@beinder.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 129f01116b8c71c632b3b6e0dc9982e887ca2e91
Author: Asmaa Mnebhi <asmaa@nvidia.com>
Date:   Mon Sep 26 15:45:04 2022 -0400

    i2c: mlxbf: support lock mechanism
    
    [ Upstream commit 86067ccfa1424a26491542d6f6d7546d40b61a10 ]
    
    Linux is not the only entity using the BlueField I2C busses so
    support a lock mechanism provided by hardware to avoid issues
    when multiple entities are trying to access the same bus.
    
    The lock is acquired whenever written explicitely or the lock
    register is read. So make sure it is always released at the end
    of a successful or failed transaction.
    
    Fixes: b5b5b32081cd206b (i2c: mlxbf: I2C SMBus driver for Mellanox BlueField SoC)
    Reviewed-by: Khalil Blaiech <kblaiech@nvidia.com>
    Signed-off-by: Asmaa Mnebhi <asmaa@nvidia.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 534909fe3c9253dc929158f89c081bce4cfaa5f7
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Sat Sep 24 20:13:09 2022 +0800

    spi/omap100k:Fix PM disable depth imbalance in omap1_spi100k_probe
    
    [ Upstream commit 29f65f2171c85a9633daa380df14009a365f42f2 ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context.
    
    Fixes:db91841b58f9a ("spi/omap100k: Convert to runtime PM")
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20220924121310.78331-4-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9da61e7b5993ec5442b61254246a4b7944a04262
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Sat Sep 24 20:13:08 2022 +0800

    spi: dw: Fix PM disable depth imbalance in dw_spi_bt1_probe
    
    [ Upstream commit 618d815fc93477b1675878f3c04ff32657cc18b4 ]
    
    The pm_runtime_enable will increase power disable depth. Thus
    a pairing decrement is needed on the error handling path to
    keep it balanced according to context.
    
    Fixes:abf00907538e2 ("spi: dw: Add Baikal-T1 SPI Controller glue driver")
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20220924121310.78331-3-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ef5798638bd2389c25ff784fb4c64e2cd2ec077
Author: Luciano Leão <lucianorsleao@gmail.com>
Date:   Thu Sep 22 17:00:54 2022 -0300

    x86/cpu: Include the header of init_ia32_feat_ctl()'s prototype
    
    [ Upstream commit 30ea703a38ef76ca119673cd8bdd05c6e068e2ac ]
    
    Include the header containing the prototype of init_ia32_feat_ctl(),
    solving the following warning:
    
      $ make W=1 arch/x86/kernel/cpu/feat_ctl.o
      arch/x86/kernel/cpu/feat_ctl.c:112:6: warning: no previous prototype for ‘init_ia32_feat_ctl’ [-Wmissing-prototypes]
        112 | void init_ia32_feat_ctl(struct cpuinfo_x86 *c)
    
    This warning appeared after commit
    
      5d5103595e9e5 ("x86/cpu: Reinitialize IA32_FEAT_CTL MSR on BSP during wakeup")
    
    had moved the function init_ia32_feat_ctl()'s prototype from
    arch/x86/kernel/cpu/cpu.h to arch/x86/include/asm/cpu.h.
    
    Note that, before the commit mentioned above, the header include "cpu.h"
    (arch/x86/kernel/cpu/cpu.h) was added by commit
    
      0e79ad863df43 ("x86/cpu: Fix a -Wmissing-prototypes warning for init_ia32_feat_ctl()")
    
    solely to fix init_ia32_feat_ctl()'s missing prototype. So, the header
    include "cpu.h" is no longer necessary.
    
      [ bp: Massage commit message. ]
    
    Fixes: 5d5103595e9e5 ("x86/cpu: Reinitialize IA32_FEAT_CTL MSR on BSP during wakeup")
    Signed-off-by: Luciano Leão <lucianorsleao@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Nícolas F. R. A. Prado <n@nfraprado.net>
    Link: https://lore.kernel.org/r/20220922200053.1357470-1-lucianorsleao@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ed7b05a3592e96023989417f617f80a5e25dedd
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Sep 21 20:10:10 2022 -0700

    x86/microcode/AMD: Track patch allocation size explicitly
    
    [ Upstream commit 712f210a457d9c32414df246a72781550bc23ef6 ]
    
    In preparation for reducing the use of ksize(), record the actual
    allocation size for later memcpy(). This avoids copying extra
    (uninitialized!) bytes into the patch buffer when the requested
    allocation size isn't exactly the size of a kmalloc bucket.
    Additionally, fix potential future issues where runtime bounds checking
    will notice that the buffer was allocated to a smaller value than
    returned by ksize().
    
    Fixes: 757885e94a22 ("x86, microcode, amd: Early microcode patch loading support for AMD")
    Suggested-by: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/lkml/CA+DvKQ+bp7Y7gmaVhacjv9uF6Ar-o4tet872h4Q8RPYPJjcJQA@mail.gmail.com/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07299e52e5b9ac580dc16e786804dbd517afde2d
Author: Jesus Fernandez Manzano <jesus.manzano@galgus.net>
Date:   Thu Sep 22 10:35:14 2022 +0300

    wifi: ath11k: fix number of VHT beamformee spatial streams
    
    [ Upstream commit 55b5ee3357d7bb98ee578cf9b84a652e7a1bc199 ]
    
    The number of spatial streams used when acting as a beamformee in VHT
    mode are reported by the firmware as 7 (8 sts - 1) both in IPQ6018 and
    IPQ8074 which respectively have 2 and 4 sts each. So the firmware should
    report 1 (2 - 1) and 3 (4 - 1).
    
    Fix this by checking that the number of VHT beamformee sts reported by
    the firmware is not greater than the number of receiving antennas - 1.
    The fix is based on the same approach used in this same function for
    sanitizing the number of sounding dimensions reported by the firmware.
    
    Without this change, acting as a beamformee in VHT mode is not working
    properly.
    
    Tested-on: IPQ6018 hw1.0 AHB WLAN.HK.2.5.0.1-01208-QCAHKSWPL_SILICONZ-1
    Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.5.0.1-01208-QCAHKSWPL_SILICONZ-1
    
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    Signed-off-by: Jesus Fernandez Manzano <jesus.manzano@galgus.net>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220616173947.21901-1-jesus.manzano@galgus.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7cc0d51ffcbfd1caaa809fcf9cff05c46d0fb4d
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Aug 29 23:58:12 2022 +0900

    Bluetooth: hci_{ldisc,serdev}: check percpu_init_rwsem() failure
    
    [ Upstream commit 3124d320c22f3f4388d9ac5c8f37eaad0cefd6b1 ]
    
    syzbot is reporting NULL pointer dereference at hci_uart_tty_close() [1],
    for rcu_sync_enter() is called without rcu_sync_init() due to
    hci_uart_tty_open() ignoring percpu_init_rwsem() failure.
    
    While we are at it, fix that hci_uart_register_device() ignores
    percpu_init_rwsem() failure and hci_uart_unregister_device() does not
    call percpu_free_rwsem().
    
    Link: https://syzkaller.appspot.com/bug?extid=576dfca25381fb6fbc5f [1]
    Reported-by: syzbot <syzbot+576dfca25381fb6fbc5f@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: 67d2f8781b9f00d1 ("Bluetooth: hci_ldisc: Allow sleeping while proto locks are held.")
    Fixes: d73e172816652772 ("Bluetooth: hci_serdev: Init hci_uart proto_lock to avoid oops")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed403bcd979d5be20edfbc98b5c7bcce1b2a5c33
Author: Lee Jones <lee@kernel.org>
Date:   Mon Sep 12 14:38:55 2022 +0100

    bpf: Ensure correct locking around vulnerable function find_vpid()
    
    [ Upstream commit 83c10cc362d91c0d8d25e60779ee52fdbbf3894d ]
    
    The documentation for find_vpid() clearly states:
    
      "Must be called with the tasklist_lock or rcu_read_lock() held."
    
    Presently we do neither for find_vpid() instance in bpf_task_fd_query().
    Add proper rcu_read_lock/unlock() to fix the issue.
    
    Fixes: 41bdc4b40ed6f ("bpf: introduce bpf subcommand BPF_TASK_FD_QUERY")
    Signed-off-by: Lee Jones <lee@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20220912133855.1218900-1-lee@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a1c29dc9b7e8c5dbc96ee3c20bb620984b69474
Author: Zheng Yongjun <zhengyongjun3@huawei.com>
Date:   Thu Sep 8 13:55:13 2022 +0000

    net: fs_enet: Fix wrong check in do_pd_setup
    
    [ Upstream commit ec3f06b542a960806a81345042e4eee3f8c5dec4 ]
    
    Should check of_iomap return value 'fep->fec.fecp' instead of 'fep->fcc.fccp'
    
    Fixes: 976de6a8c304 ("fs_enet: Be an of_platform device when CONFIG_PPC_CPM_NEW_BINDING is set.")
    Signed-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 795954d75197e085e6287d46a73413cb962c81e8
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Fri Sep 2 16:15:30 2022 +0300

    wifi: rtl8xxxu: Remove copy-paste leftover in gen2_update_rate_mask
    
    [ Upstream commit d5350756c03cdf18696295c6b11d7acc4dbf825c ]
    
    It looks like a leftover from copying rtl8xxxu_update_rate_mask,
    which is used with the gen1 chips.
    
    It wasn't causing any problems for my RTL8188FU test device, but it's
    clearly a mistake, so remove it.
    
    Fixes: f653e69009c6 ("rtl8xxxu: Implement basic 8723b specific update_rate_mask() function")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/d5544fe8-9798-28f1-54bd-6839a1974b10@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 226e6f241258186e9e1a1c3fbb88305d001187d1
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Fri Sep 2 14:48:32 2022 +0300

    wifi: rtl8xxxu: gen2: Fix mistake in path B IQ calibration
    
    [ Upstream commit e963a19c64ac0d2f8785d36a27391abd91ac77aa ]
    
    Found by comparing with the vendor driver. Currently this affects
    only the RTL8192EU, which is the only gen2 chip with 2 TX paths
    supported by this driver. It's unclear what kind of effect the
    mistake had in practice, since I don't have any RTL8192EU devices
    to test it.
    
    Fixes: e1547c535ede ("rtl8xxxu: First stab at adding IQK calibration for 8723bu parts")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/30a59f3a-cfa9-8379-7af0-78a8f4c77cfd@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a60ac7a0dadf68169dffad730c3f1ba03d70377
Author: Lorenz Bauer <oss@lmb.io>
Date:   Sat Sep 10 11:01:20 2022 +0000

    bpf: btf: fix truncated last_member_type_id in btf_struct_resolve
    
    [ Upstream commit a37a32583e282d8d815e22add29bc1e91e19951a ]
    
    When trying to finish resolving a struct member, btf_struct_resolve
    saves the member type id in a u16 temporary variable. This truncates
    the 32 bit type id value if it exceeds UINT16_MAX.
    
    As a result, structs that have members with type ids > UINT16_MAX and
    which need resolution will fail with a message like this:
    
        [67414] STRUCT ff_device size=120 vlen=12
            effect_owners type_id=67434 bits_offset=960 Member exceeds struct_size
    
    Fix this by changing the type of last_member_type_id to u32.
    
    Fixes: a0791f0df7d2 ("bpf: fix BTF limits")
    Reviewed-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: Lorenz Bauer <oss@lmb.io>
    Link: https://lore.kernel.org/r/20220910110120.339242-1-oss@lmb.io
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8398a45d3d72a7389b0a301b34f883e0042b9005
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Thu Sep 8 14:18:03 2022 +0200

    spi: meson-spicc: do not rely on busy flag in pow2 clk ops
    
    [ Upstream commit 36acf80fc0c4b5ebe6fa010b524d442ee7f08fd3 ]
    
    Since [1], controller's busy flag isn't set anymore when the
    __spi_transfer_message_noqueue() is used instead of the
    __spi_pump_transfer_message() logic for spi_sync transfers.
    
    Since the pow2 clock ops were limited to only be available when a
    transfer is ongoing (between prepare_transfer_hardware and
    unprepare_transfer_hardware callbacks), the only way to track this
    down is to check for the controller cur_msg.
    
    [1] ae7d2346dc89 ("spi: Don't use the message queue if possible in spi_sync")
    
    Fixes: 09992025dacd ("spi: meson-spicc: add local pow2 clock ops to preserve rate between messages")
    Fixes: ae7d2346dc89 ("spi: Don't use the message queue if possible in spi_sync")
    Reported-by: Markus Schneider-Pargmann <msp@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Tested-by: Markus Schneider-Pargmann <msp@baylibre.com>
    Link: https://lore.kernel.org/r/20220908121803.919943-1-narmstrong@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 351cf55595d3e6636e6d302657eef258dafef70c
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Wed Aug 31 19:12:36 2022 +0300

    wifi: rtl8xxxu: Fix skb misuse in TX queue selection
    
    [ Upstream commit edd5747aa12ed61a5ecbfa58d3908623fddbf1e8 ]
    
    rtl8xxxu_queue_select() selects the wrong TX queues because it's
    reading memory from the wrong address. It expects to find ieee80211_hdr
    at skb->data, but that's not the case after skb_push(). Move the call
    to rtl8xxxu_queue_select() before the call to skb_push().
    
    Fixes: 26f1fad29ad9 ("New driver: rtl8xxxu (mac80211)")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/7fa4819a-4f20-b2af-b7a6-8ee01ac49295@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e911790576fec000a185b64a2810376d03eec4d
Author: Xu Qiang <xuqiang36@huawei.com>
Date:   Thu Aug 25 06:53:24 2022 +0000

    spi: qup: add missing clk_disable_unprepare on error in spi_qup_pm_resume_runtime()
    
    [ Upstream commit 494a22765ce479c9f8ad181c5d24cffda9f534bb ]
    
    Add the missing clk_disable_unprepare() before return
    from spi_qup_pm_resume_runtime() in the error handling case.
    
    Fixes: dae1a7700b34 (“spi: qup: Handle clocks in pm_runtime suspend and resume”)
    Signed-off-by: Xu Qiang <xuqiang36@huawei.com>
    Link: https://lore.kernel.org/r/20220825065324.68446-2-xuqiang36@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b83d11d48ffe2bc451b75f5a83154d720097b9e
Author: Xu Qiang <xuqiang36@huawei.com>
Date:   Thu Aug 25 06:53:23 2022 +0000

    spi: qup: add missing clk_disable_unprepare on error in spi_qup_resume()
    
    [ Upstream commit 70034320fdc597b8f58b4a43bb547f17c4c5557a ]
    
    Add the missing clk_disable_unprepare() before return
    from spi_qup_resume() in the error handling case.
    
    Fixes: 64ff247a978f (“spi: Add Qualcomm QUP SPI controller support”)
    Signed-off-by: Xu Qiang <xuqiang36@huawei.com>
    Link: https://lore.kernel.org/r/20220825065324.68446-1-xuqiang36@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 557600830515199bc4ec31ca53e17791e4100d91
Author: Ian Rogers <irogers@google.com>
Date:   Thu Sep 1 13:26:45 2022 -0700

    selftests/xsk: Avoid use-after-free on ctx
    
    [ Upstream commit af515a5587b8f45f19e11657746e0c89411b0380 ]
    
    The put lowers the reference count to 0 and frees ctx, reading it
    afterwards is invalid. Move the put after the uses and determine the
    last use by the reference count being 1.
    
    Fixes: 39e940d4abfa ("selftests/xsk: Destroy BPF resources only when ctx refcount drops to 0")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Magnus Karlsson <magnus.karlsson@intel.com>
    Link: https://lore.kernel.org/bpf/20220901202645.1463552-1-irogers@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c823df067941898e3ee77bf632e0c9d110d7e5b2
Author: Dan Carpenter <error27@gmail.com>
Date:   Fri Aug 19 08:22:32 2022 +0300

    wifi: rtl8xxxu: tighten bounds checking in rtl8xxxu_read_efuse()
    
    [ Upstream commit 620d5eaeb9059636864bda83ca1c68c20ede34a5 ]
    
    There some bounds checking to ensure that "map_addr" is not out of
    bounds before the start of the loop.  But the checking needs to be
    done as we iterate through the loop because "map_addr" gets larger as
    we iterate.
    
    Fixes: 26f1fad29ad9 ("New driver: rtl8xxxu (mac80211)")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Jes Sorensen <Jes.Sorensen@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/Yv8eGLdBslLAk3Ct@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea1b6b54098ce4e6203d806c1f5a526db6e42f68
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Aug 11 08:49:07 2022 +0800

    Bluetooth: btusb: mediatek: fix WMT failure during runtime suspend
    
    [ Upstream commit fd3f106677bac70437dc12e76c827294ed495a44 ]
    
    WMT cmd/event doesn't follow up the generic HCI cmd/event handling, it
    needs constantly polling control pipe until the host received the WMT
    event, thus, we should require to specifically acquire PM counter on the
    USB to prevent the interface from entering auto suspended while WMT
    cmd/event in progress.
    
    Fixes: a1c49c434e15 ("Bluetooth: btusb: Add protocol support for MediaTek MT7668U USB devices")
    Co-developed-by: Jing Cai <jing.cai@mediatek.com>
    Signed-off-by: Jing Cai <jing.cai@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07194ccbb14c97e8bf3d52a417fabfe1bf32b6db
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 4 16:47:07 2021 +0100

    Bluetooth: btusb: fix excessive stack usage
    
    [ Upstream commit 10888140f09c3472146dc206accd0cfa051d0ed4 ]
    
    Enlarging the size of 'struct btmtk_hci_wmt_cmd' makes it no longer
    fit on the kernel stack, as seen from this compiler warning:
    
    drivers/bluetooth/btusb.c:3365:12: error: stack frame size of 1036 bytes in function 'btusb_mtk_hci_wmt_sync' [-Werror,-Wframe-larger-than=]
    
    Change the function to dynamically allocate the buffer instead.
    As there are other sleeping functions called from the same location,
    using GFP_KERNEL should be fine here, and the runtime overhead should
    not matter as this is rarely called.
    
    Unfortunately, I could not figure out why the message size is
    increased in the previous patch. Using dynamic allocation means
    any size is possible now, but there is still a range check that
    limits the total size (including the five-byte header) to 255
    bytes, so whatever was intended there is now undone.
    
    Fixes: 48c13301e6ba ("Bluetooth: btusb: Fine-tune mt7663 mechanism.")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Stable-dep-of: fd3f106677ba ("Bluetooth: btusb: mediatek: fix WMT failure during runtime suspend")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdadf95435ff464a97035b63bc220b9940df6b7e
Author: Mark Chen <Mark-YW.Chen@mediatek.com>
Date:   Tue Feb 2 18:26:17 2021 +0800

    Bluetooth: btusb: Fine-tune mt7663 mechanism.
    
    [ Upstream commit 48c13301e6baba5fd0960b412af519c0baa98011 ]
    
    Fine-tune read register for mt7663/mt7921.
    For mediatek chip spcific wmt protocol, we add more delay to send EP0
    In-Token.
    
    Signed-off-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Stable-dep-of: fd3f106677ba ("Bluetooth: btusb: mediatek: fix WMT failure during runtime suspend")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 294395caacf19c7017b3ac5404fd2791ab5f73b6
Author: Kohei Tarumizu <tarumizu.kohei@fujitsu.com>
Date:   Wed Aug 24 09:44:10 2022 -0700

    x86/resctrl: Fix to restore to original value when re-enabling hardware prefetch register
    
    [ Upstream commit 499c8bb4693d1c8d8f3d6dd38e5bdde3ff5bd906 ]
    
    The current pseudo_lock.c code overwrites the value of the
    MSR_MISC_FEATURE_CONTROL to 0 even if the original value is not 0.
    Therefore, modify it to save and restore the original values.
    
    Fixes: 018961ae5579 ("x86/intel_rdt: Pseudo-lock region creation/removal core")
    Fixes: 443810fe6160 ("x86/intel_rdt: Create debugfs files for pseudo-locking testing")
    Fixes: 8a2fc0e1bc0c ("x86/intel_rdt: More precise L2 hit/miss measurements")
    Signed-off-by: Kohei Tarumizu <tarumizu.kohei@fujitsu.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Acked-by: Reinette Chatre <reinette.chatre@intel.com>
    Link: https://lkml.kernel.org/r/eb660f3c2010b79a792c573c02d01e8e841206ad.1661358182.git.reinette.chatre@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 029a1de92ce225fe5ee0cd456352167e66da5a91
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Aug 27 13:42:07 2022 +0200

    spi: mt7621: Fix an error message in mt7621_spi_probe()
    
    [ Upstream commit 2b2bf6b7faa9010fae10dc7de76627a3fdb525b3 ]
    
    'status' is known to be 0 at this point. The expected error code is
    PTR_ERR(clk).
    
    Switch to dev_err_probe() in order to display the expected error code (in a
    human readable way).
    This also filters -EPROBE_DEFER cases, should it happen.
    
    Fixes: 1ab7f2a43558 ("staging: mt7621-spi: add mt7621 support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Link: https://lore.kernel.org/r/928f3fb507d53ba0774df27cea0bbba4b055993b.1661599671.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2afb93e4e4166a9b4022db58689986893a4c3653
Author: Lam Thai <lamthai@arista.com>
Date:   Wed Aug 24 15:59:00 2022 -0700

    bpftool: Fix a wrong type cast in btf_dumper_int
    
    [ Upstream commit 7184aef9c0f7a81db8fd18d183ee42481d89bf35 ]
    
    When `data` points to a boolean value, casting it to `int *` is problematic
    and could lead to a wrong value being passed to `jsonw_bool`. Change the
    cast to `bool *` instead.
    
    Fixes: b12d6ec09730 ("bpf: btf: add btf print functionality")
    Signed-off-by: Lam Thai <lamthai@arista.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Reviewed-by: Quentin Monnet <quentin@isovalent.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220824225859.9038-1-lamthai@arista.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61905bbb6116686d04e384265eef9e4ecd4f78a2
Author: Hari Chandrakanthan <quic_haric@quicinc.com>
Date:   Wed Jul 27 12:02:29 2022 +0530

    wifi: mac80211: allow bw change during channel switch in mesh
    
    [ Upstream commit 6b75f133fe05c36c52d691ff21545d5757fff721 ]
    
    From 'IEEE Std 802.11-2020 section 11.8.8.4.1':
      The mesh channel switch may be triggered by the need to avoid
      interference to a detected radar signal, or to reassign mesh STA
      channels to ensure the MBSS connectivity.
    
      A 20/40 MHz MBSS may be changed to a 20 MHz MBSS and a 20 MHz
      MBSS may be changed to a 20/40 MHz MBSS.
    
    Since the standard allows the change of bandwidth during
    the channel switch in mesh, remove the bandwidth check present in
    ieee80211_set_csa_beacon.
    
    Fixes: c6da674aff94 ("{nl,cfg,mac}80211: enable the triggering of CSA frame in mesh")
    Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
    Link: https://lore.kernel.org/r/1658903549-21218-1-git-send-email-quic_haric@quicinc.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75652070667ff6421f2f0eab05834c2e17b2055c
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Aug 15 10:02:27 2022 +0200

    leds: lm3601x: Don't use mutex after it was destroyed
    
    [ Upstream commit 32f7eed0c763a9b89f6b357ec54b48398fc7b99e ]
    
    The mutex might still be in use until the devm cleanup callback
    devm_led_classdev_flash_release() is called. This only happens some time
    after lm3601x_remove() completed.
    
    Fixes: e63a744871a3 ("leds: lm3601x: Convert class registration to device managed")
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08faf07717be0c88b02b5aa45aad2225dfcdd2dc
Author: Wen Gong <quic_wgong@quicinc.com>
Date:   Mon Aug 1 10:19:30 2022 -0400

    wifi: ath10k: add peer map clean up for peer delete in ath10k_sta_state()
    
    [ Upstream commit f020d9570a04df0762a2ac5c50cf1d8c511c9164 ]
    
    When peer delete failed in a disconnect operation, use-after-free
    detected by KFENCE in below log. It is because for each vdev_id and
    address, it has only one struct ath10k_peer, it is allocated in
    ath10k_peer_map_event(). When connected to an AP, it has more than
    one HTT_T2H_MSG_TYPE_PEER_MAP reported from firmware, then the
    array peer_map of struct ath10k will be set muti-elements to the
    same ath10k_peer in ath10k_peer_map_event(). When peer delete failed
    in ath10k_sta_state(), the ath10k_peer will be free for the 1st peer
    id in array peer_map of struct ath10k, and then use-after-free happened
    for the 2nd peer id because they map to the same ath10k_peer.
    
    And clean up all peers in array peer_map for the ath10k_peer, then
    user-after-free disappeared
    
    peer map event log:
    [  306.911021] wlan0: authenticate with b0:2a:43:e6:75:0e
    [  306.957187] ath10k_pci 0000:01:00.0: mac vdev 0 peer create b0:2a:43:e6:75:0e (new sta) sta 1 / 32 peer 1 / 33
    [  306.957395] ath10k_pci 0000:01:00.0: htt peer map vdev 0 peer b0:2a:43:e6:75:0e id 246
    [  306.957404] ath10k_pci 0000:01:00.0: htt peer map vdev 0 peer b0:2a:43:e6:75:0e id 198
    [  306.986924] ath10k_pci 0000:01:00.0: htt peer map vdev 0 peer b0:2a:43:e6:75:0e id 166
    
    peer unmap event log:
    [  435.715691] wlan0: deauthenticating from b0:2a:43:e6:75:0e by local choice (Reason: 3=DEAUTH_LEAVING)
    [  435.716802] ath10k_pci 0000:01:00.0: mac vdev 0 peer delete b0:2a:43:e6:75:0e sta ffff990e0e9c2b50 (sta gone)
    [  435.717177] ath10k_pci 0000:01:00.0: htt peer unmap vdev 0 peer b0:2a:43:e6:75:0e id 246
    [  435.717186] ath10k_pci 0000:01:00.0: htt peer unmap vdev 0 peer b0:2a:43:e6:75:0e id 198
    [  435.717193] ath10k_pci 0000:01:00.0: htt peer unmap vdev 0 peer b0:2a:43:e6:75:0e id 166
    
    use-after-free log:
    [21705.888627] wlan0: deauthenticating from d0:76:8f:82:be:75 by local choice (Reason: 3=DEAUTH_LEAVING)
    [21713.799910] ath10k_pci 0000:01:00.0: failed to delete peer d0:76:8f:82:be:75 for vdev 0: -110
    [21713.799925] ath10k_pci 0000:01:00.0: found sta peer d0:76:8f:82:be:75 (ptr 0000000000000000 id 102) entry on vdev 0 after it was supposedly removed
    [21713.799968] ==================================================================
    [21713.799991] BUG: KFENCE: use-after-free read in ath10k_sta_state+0x265/0xb8a [ath10k_core]
    [21713.799991]
    [21713.799997] Use-after-free read at 0x00000000abe1c75e (in kfence-#69):
    [21713.800010]  ath10k_sta_state+0x265/0xb8a [ath10k_core]
    [21713.800041]  drv_sta_state+0x115/0x677 [mac80211]
    [21713.800059]  __sta_info_destroy_part2+0xb1/0x133 [mac80211]
    [21713.800076]  __sta_info_flush+0x11d/0x162 [mac80211]
    [21713.800093]  ieee80211_set_disassoc+0x12d/0x2f4 [mac80211]
    [21713.800110]  ieee80211_mgd_deauth+0x26c/0x29b [mac80211]
    [21713.800137]  cfg80211_mlme_deauth+0x13f/0x1bb [cfg80211]
    [21713.800153]  nl80211_deauthenticate+0xf8/0x121 [cfg80211]
    [21713.800161]  genl_rcv_msg+0x38e/0x3be
    [21713.800166]  netlink_rcv_skb+0x89/0xf7
    [21713.800171]  genl_rcv+0x28/0x36
    [21713.800176]  netlink_unicast+0x179/0x24b
    [21713.800181]  netlink_sendmsg+0x3a0/0x40e
    [21713.800187]  sock_sendmsg+0x72/0x76
    [21713.800192]  ____sys_sendmsg+0x16d/0x1e3
    [21713.800196]  ___sys_sendmsg+0x95/0xd1
    [21713.800200]  __sys_sendmsg+0x85/0xbf
    [21713.800205]  do_syscall_64+0x43/0x55
    [21713.800210]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [21713.800213]
    [21713.800219] kfence-#69: 0x000000009149b0d5-0x000000004c0697fb, size=1064, cache=kmalloc-2k
    [21713.800219]
    [21713.800224] allocated by task 13 on cpu 0 at 21705.501373s:
    [21713.800241]  ath10k_peer_map_event+0x7e/0x154 [ath10k_core]
    [21713.800254]  ath10k_htt_t2h_msg_handler+0x586/0x1039 [ath10k_core]
    [21713.800265]  ath10k_htt_htc_t2h_msg_handler+0x12/0x28 [ath10k_core]
    [21713.800277]  ath10k_htc_rx_completion_handler+0x14c/0x1b5 [ath10k_core]
    [21713.800283]  ath10k_pci_process_rx_cb+0x195/0x1df [ath10k_pci]
    [21713.800294]  ath10k_ce_per_engine_service+0x55/0x74 [ath10k_core]
    [21713.800305]  ath10k_ce_per_engine_service_any+0x76/0x84 [ath10k_core]
    [21713.800310]  ath10k_pci_napi_poll+0x49/0x144 [ath10k_pci]
    [21713.800316]  net_rx_action+0xdc/0x361
    [21713.800320]  __do_softirq+0x163/0x29a
    [21713.800325]  asm_call_irq_on_stack+0x12/0x20
    [21713.800331]  do_softirq_own_stack+0x3c/0x48
    [21713.800337]  __irq_exit_rcu+0x9b/0x9d
    [21713.800342]  common_interrupt+0xc9/0x14d
    [21713.800346]  asm_common_interrupt+0x1e/0x40
    [21713.800351]  ksoftirqd_should_run+0x5/0x16
    [21713.800357]  smpboot_thread_fn+0x148/0x211
    [21713.800362]  kthread+0x150/0x15f
    [21713.800367]  ret_from_fork+0x22/0x30
    [21713.800370]
    [21713.800374] freed by task 708 on cpu 1 at 21713.799953s:
    [21713.800498]  ath10k_sta_state+0x2c6/0xb8a [ath10k_core]
    [21713.800515]  drv_sta_state+0x115/0x677 [mac80211]
    [21713.800532]  __sta_info_destroy_part2+0xb1/0x133 [mac80211]
    [21713.800548]  __sta_info_flush+0x11d/0x162 [mac80211]
    [21713.800565]  ieee80211_set_disassoc+0x12d/0x2f4 [mac80211]
    [21713.800581]  ieee80211_mgd_deauth+0x26c/0x29b [mac80211]
    [21713.800598]  cfg80211_mlme_deauth+0x13f/0x1bb [cfg80211]
    [21713.800614]  nl80211_deauthenticate+0xf8/0x121 [cfg80211]
    [21713.800619]  genl_rcv_msg+0x38e/0x3be
    [21713.800623]  netlink_rcv_skb+0x89/0xf7
    [21713.800628]  genl_rcv+0x28/0x36
    [21713.800632]  netlink_unicast+0x179/0x24b
    [21713.800637]  netlink_sendmsg+0x3a0/0x40e
    [21713.800642]  sock_sendmsg+0x72/0x76
    [21713.800646]  ____sys_sendmsg+0x16d/0x1e3
    [21713.800651]  ___sys_sendmsg+0x95/0xd1
    [21713.800655]  __sys_sendmsg+0x85/0xbf
    [21713.800659]  do_syscall_64+0x43/0x55
    [21713.800663]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Tested-on: QCA6174 hw3.2 PCI WLAN.RM.4.4.1-00288-QCARMSWPZ-1
    
    Fixes: d0eeafad1189 ("ath10k: Clean up peer when sta goes away.")
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220801141930.16794-1-quic_wgong@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e060c4b9f33c1fca74df26d57a98e784295327e6
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Sep 1 07:27:04 2022 +0200

    nfsd: Fix a memory leak in an error handling path
    
    [ Upstream commit fd1ef88049de09bc70d60b549992524cfc0e66ff ]
    
    If this memdup_user() call fails, the memory allocated in a previous call
    a few lines above should be freed. Otherwise it leaks.
    
    Fixes: 6ee95d1c8991 ("nfsd: add support for upcall version 2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 730191a098d81b89b38149da0a3a1d01149d5893
Author: Sami Tolvanen <samitolvanen@google.com>
Date:   Thu Sep 8 14:54:58 2022 -0700

    objtool: Preserve special st_shndx indexes in elf_update_symbol
    
    [ Upstream commit 5141d3a06b2da1731ac82091298b766a1f95d3d8 ]
    
    elf_update_symbol fails to preserve the special st_shndx values
    between [SHN_LORESERVE, SHN_HIRESERVE], which results in it
    converting SHN_ABS entries into SHN_UNDEF, for example. Explicitly
    check for the special indexes and ensure these symbols are not
    marked undefined.
    
    Fixes: ead165fa1042 ("objtool: Fix symbol creation")
    Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220908215504.3686827-17-samitolvanen@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84837738d406149bb000037b51e5cbc329083c1f
Author: Wang Kefeng <wangkefeng.wang@huawei.com>
Date:   Fri Sep 16 12:10:49 2022 +0100

    ARM: 9247/1: mm: set readonly for MT_MEMORY_RO with ARM_LPAE
    
    [ Upstream commit 14ca1a4690750bb54e1049e49f3140ef48958a6e ]
    
    MT_MEMORY_RO is introduced by commit 598f0a99fa8a ("ARM: 9210/1:
    Mark the FDT_FIXED sections as shareable"), which is a readonly
    memory type for FDT area, but there are some different between
    ARM_LPAE and non-ARM_LPAE, we need to setup PMD_SECT_AP2 and
    L_PMD_SECT_RDONLY for MT_MEMORY_RO when ARM_LAPE enabled.
    
    non-ARM_LPAE    0xff800000-0xffa00000           2M PGD KERNEL      ro NX SHD
    ARM_LPAE        0xff800000-0xffc00000           4M PMD RW NX SHD
    ARM_LPAE+fix    0xff800000-0xffc00000           4M PMD ro NX SHD
    
    Fixes: 598f0a99fa8a ("ARM: 9210/1: Mark the FDT_FIXED sections as shareable")
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1d6edeaa8d06e1c4800473a23be356c89fbd7b6
Author: Wang Kefeng <wangkefeng.wang@huawei.com>
Date:   Tue Sep 13 05:25:51 2022 +0100

    ARM: 9244/1: dump: Fix wrong pg_level in walk_pmd()
    
    [ Upstream commit 2ccd19b3ffac07cc7e75a2bd1ed779728bb67197 ]
    
    After ARM supports p4d page tables, the pg_level for note_page()
    in walk_pmd() should be 4, not 3, fix it.
    
    Fixes: 84e6ffb2c49c ("arm: add support for folded p4d page tables")
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da2aecef866b476438d02c662507a0e4e818da9d
Author: Lin Yujun <linyujun809@huawei.com>
Date:   Wed Sep 14 11:29:17 2022 +0800

    MIPS: SGI-IP27: Fix platform-device leak in bridge_platform_create()
    
    [ Upstream commit 11bec9cba4de06b3c0e9e4041453c2caaa1cbec1 ]
    
    In error case in bridge_platform_create after calling
    platform_device_add()/platform_device_add_data()/
    platform_device_add_resources(), release the failed
    'pdev' or it will be leak, call platform_device_put()
    to fix this problem.
    
    Besides, 'pdev' is divided into 'pdev_wd' and 'pdev_bd',
    use platform_device_unregister() to release sgi_w1
    resources when xtalk-bridge registration fails.
    
    Fixes: 5dc76a96e95a ("MIPS: PCI: use information from 1-wire PROM for IOC3 detection")
    Signed-off-by: Lin Yujun <linyujun809@huawei.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c667858c0266f46a33327259169657bc54b7334
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Apr 23 15:24:03 2022 +0200

    MIPS: SGI-IP27: Free some unused memory
    
    [ Upstream commit 33d7085682b4aa212ebfadbc21da81dfefaaac16 ]
    
    platform_device_add_data() duplicates the memory it is passed. So we can
    free some memory to save a few bytes that would remain unused otherwise.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Stable-dep-of: 11bec9cba4de ("MIPS: SGI-IP27: Fix platform-device leak in bridge_platform_create()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35984456983ba1cd359ccb4a71c8707075f98728
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Sep 7 16:40:44 2022 -0700

    sh: machvec: Use char[] for section boundaries
    
    [ Upstream commit c5783af354688b24abd359f7086c282ec74de993 ]
    
    As done for other sections, define the extern as a character array,
    which relaxes many of the compiler-time object size checks, which would
    otherwise assume it's a single long. Solves the following build error:
    
    arch/sh/kernel/machvec.c: error: array subscript 'struct sh_machine_vector[0]' is partly outside array bounds of 'long int[1]' [-Werror=array-bounds]:  => 105:33
    
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Rich Felker <dalias@libc.org>
    Cc: linux-sh@vger.kernel.org
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Link: https://lore.kernel.org/lkml/alpine.DEB.2.22.394.2209050944290.964530@ramsan.of.borg/
    Fixes: 9655ad03af2d ("sh: Fixup machvec support.")
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Acked-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e4be747f15fa32a6382ca2d9392fb9ba2ce051f
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Fri Jul 8 11:34:51 2022 +0200

    userfaultfd: open userfaultfds with O_RDONLY
    
    [ Upstream commit abec3d015fdfb7c63105c7e1c956188bf381aa55 ]
    
    Since userfaultfd doesn't implement a write operation, it is more
    appropriate to open it read-only.
    
    When userfaultfds are opened read-write like it is now, and such fd is
    passed from one process to another, SELinux will check both read and
    write permissions for the target process, even though it can't actually
    do any write operation on the fd later.
    
    Inspired by the following bug report, which has hit the SELinux scenario
    described above:
    https://bugzilla.redhat.com/show_bug.cgi?id=1974559
    
    Reported-by: Robert O'Callahan <roc@ocallahan.org>
    Fixes: 86039bd3b4e6 ("userfaultfd: add new syscall to provide memory externalization")
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Acked-by: Peter Xu <peterx@redhat.com>
    Acked-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28d9b39733078fe3a7e74a9186872ed5ab496c48
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Sep 20 19:12:52 2022 +0200

    selinux: use "grep -E" instead of "egrep"
    
    commit c969bb8dbaf2f3628927eae73e7c579a74cf1b6e upstream.
    
    The latest version of grep claims that egrep is now obsolete so the build
    now contains warnings that look like:
            egrep: warning: egrep is obsolescent; using grep -E
    fix this by using "grep -E" instead.
    
    Cc: Paul Moore <paul@paul-moore.com>
    Cc: Stephen Smalley <stephen.smalley.work@gmail.com>
    Cc: Eric Paris <eparis@parisplace.org>
    Cc: selinux@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [PM: tweak to remove vdso reference, cleanup subj line]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d11e09953cc00c9e8a263ed05b92f65dad7ab748
Author: Steve French <stfrench@microsoft.com>
Date:   Fri Oct 14 18:50:20 2022 -0500

    smb3: must initialize two ACL struct fields to zero
    
    commit f09bd695af3b8ab46fc24e5d6954a24104c38387 upstream.
    
    Coverity spotted that we were not initalizing Stbz1 and Stbz2 to
    zero in create_sd_buf.
    
    Addresses-Coverity: 1513848 ("Uninitialized scalar variable")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abd13b21004dfbd8efe2871913f36acd1ae0332d
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Oct 3 14:15:40 2022 +0300

    drm/i915: Fix watermark calculations for gen12+ MC CCS modifier
    
    commit 484b2b9281000274ef7c5cb0a9ebc5da6f5c281c upstream.
    
    Take the gen12+ MC CCS modifier into account when calculating the
    watermarks. Othwerwise we'll calculate the watermarks thinking this
    Y-tiled modifier is linear.
    
    The rc_surface part is actually a nop since that is not used
    for any glk+ platform.
    
    v2: Split RC CCS vs. MC CCS to separate patches
    
    Cc: stable@vger.kernel.org
    Fixes: 2dfbf9d2873a ("drm/i915/tgl: Gen-12 display can decompress surfaces compressed by the media engine")
    Reviewed-by: Juha-Pekka Heikkila <juhapekka.heikkila@gmail.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221003111544.8007-3-ville.syrjala@linux.intel.com
    (cherry picked from commit 91c9651425fe955b1387f3637607dda005f3f710)
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd37286f392abd0f7c1e84a1d70ce828ca183ec8
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Oct 3 14:15:39 2022 +0300

    drm/i915: Fix watermark calculations for gen12+ RC CCS modifier
    
    commit c56453a00f19ccddee302f5f9fe96b80e0b47fd3 upstream.
    
    Take the gen12+ RC CCS modifier into account when calculating the
    watermarks. Othwerwise we'll calculate the watermarks thinking this
    Y-tiled modifier is linear.
    
    The rc_surface part is actually a nop since that is not used
    for any glk+ platform.
    
    v2: Split RC CCS vs. MC CCS to separate patches
    
    Cc: stable@vger.kernel.org
    Fixes: b3e57bccd68a ("drm/i915/tgl: Gen-12 render decompression")
    Reviewed-by: Juha-Pekka Heikkila <juhapekka.heikkila@gmail.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221003111544.8007-2-ville.syrjala@linux.intel.com
    (cherry picked from commit a89a96a586114f67598c6391c75678b4dba5c2da)
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d6093c49c098d86c7b136aba9922df44aeb6944
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Tue Jul 5 21:25:46 2022 +0800

    drm/nouveau: fix a use-after-free in nouveau_gem_prime_import_sg_table()
    
    commit 540dfd188ea2940582841c1c220bd035a7db0e51 upstream.
    
    nouveau_bo_init() is backed by ttm_bo_init() and ferries its return code
    back to the caller. On failures, ttm will call nouveau_bo_del_ttm() and
    free the memory.Thus, when nouveau_bo_init() returns an error, the gem
    object has already been released. Then the call to nouveau_bo_ref() will
    use the freed "nvbo->bo" and lead to a use-after-free bug.
    
    We should delete the call to nouveau_bo_ref() to avoid the use-after-free.
    
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Fixes: 019cbd4a4feb ("drm/nouveau: Initialize GEM object before TTM object")
    Cc: Thierry Reding <treding@nvidia.com>
    Cc: <stable@vger.kernel.org> # v5.4+
    Link: https://patchwork.freedesktop.org/patch/msgid/20220705132546.2247677-1-niejianglei2021@163.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57f1a89a8e4ea0ffd3ab7321371e226b2dbbd0a5
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Aug 16 14:04:36 2022 -0400

    drm/nouveau/kms/nv140-: Disable interlacing
    
    commit 8ba9249396bef37cb68be9e8dee7847f1737db9d upstream.
    
    As it turns out: while Nvidia does actually have interlacing knobs on their
    GPU still pretty much no current GPUs since Volta actually support it.
    Trying interlacing on these GPUs will result in NVDisplay being quite
    unhappy like so:
    
    nouveau 0000:1f:00.0: disp: chid 0 stat 00004802 reason 4 [INVALID_ARG] mthd 2008 data 00000001 code 00080000
    nouveau 0000:1f:00.0: disp: chid 0 stat 10005080 reason 5 [INVALID_STATE] mthd 0200 data 00000001 code 00000001
    
    So let's fix this by following the same behavior Nvidia's driver does and
    disable interlacing entirely.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220816180436.156310-1-lyude@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0febad83e29d85bb66e4f5cac0115b022403338
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Sep 2 16:37:15 2022 +0200

    staging: greybus: audio_helper: remove unused and wrong debugfs usage
    
    commit d517cdeb904ddc0cbebcc959d43596426cac40b0 upstream.
    
    In the greybus audio_helper code, the debugfs file for the dapm has the
    potential to be removed and memory will be leaked.  There is also the
    very real potential for this code to remove ALL debugfs entries from the
    system, and it seems like this is what will really happen if this code
    ever runs.  This all is very wrong as the greybus audio driver did not
    create this debugfs file, the sound core did and controls the lifespan
    of it.
    
    So remove all of the debugfs logic from the audio_helper code as there's
    no way it could be correct.  If this really is needed, it can come back
    with a fixup for the incorrect usage of the debugfs_lookup() call which
    is what caused this to be noticed at all.
    
    Cc: Johan Hovold <johan@kernel.org>
    Cc: Alex Elder <elder@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/20220902143715.320500-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ceeb8d4a43acfa9f6d09938d598721c209eee969
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Aug 30 23:15:49 2022 +0000

    KVM: VMX: Drop bits 31:16 when shoving exception error code into VMCS
    
    commit eba9799b5a6efe2993cf92529608e4aa8163d73b upstream.
    
    Deliberately truncate the exception error code when shoving it into the
    VMCS (VM-Entry field for vmcs01 and vmcs02, VM-Exit field for vmcs12).
    Intel CPUs are incapable of handling 32-bit error codes and will never
    generate an error code with bits 31:16, but userspace can provide an
    arbitrary error code via KVM_SET_VCPU_EVENTS.  Failure to drop the bits
    on exception injection results in failed VM-Entry, as VMX disallows
    setting bits 31:16.  Setting the bits on VM-Exit would at best confuse
    L1, and at worse induce a nested VM-Entry failure, e.g. if L1 decided to
    reinject the exception back into L2.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20220830231614.3580124-3-seanjc@google.com
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83fe0b009bd035572438e13c261c7dfc57701db2
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Aug 30 23:15:48 2022 +0000

    KVM: nVMX: Unconditionally purge queued/injected events on nested "exit"
    
    commit d953540430c5af57f5de97ea9e36253908204027 upstream.
    
    Drop pending exceptions and events queued for re-injection when leaving
    nested guest mode, even if the "exit" is due to VM-Fail, SMI, or forced
    by host userspace.  Failure to purge events could result in an event
    belonging to L2 being injected into L1.
    
    This _should_ never happen for VM-Fail as all events should be blocked by
    nested_run_pending, but it's possible if KVM, not the L1 hypervisor, is
    the source of VM-Fail when running vmcs02.
    
    SMI is a nop (barring unknown bugs) as recognition of SMI and thus entry
    to SMM is blocked by pending exceptions and re-injected events.
    
    Forced exit is definitely buggy, but has likely gone unnoticed because
    userspace probably follows the forced exit with KVM_SET_VCPU_EVENTS (or
    some other ioctl() that purges the queue).
    
    Fixes: 4f350c6dbcb9 ("kvm: nVMX: Handle deferred early VMLAUNCH/VMRESUME failure properly")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20220830231614.3580124-2-seanjc@google.com
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 085ca1d33b198048b26d8c5644809b6cdc89d651
Author: Michal Luczaj <mhal@rbox.co>
Date:   Mon Aug 22 00:06:47 2022 +0200

    KVM: x86/emulator: Fix handing of POP SS to correctly set interruptibility
    
    commit 6aa5c47c351b22c21205c87977c84809cd015fcf upstream.
    
    The emulator checks the wrong variable while setting the CPU
    interruptibility state, the target segment is embedded in the instruction
    opcode, not the ModR/M register.  Fix the condition.
    
    Signed-off-by: Michal Luczaj <mhal@rbox.co>
    Fixes: a5457e7bcf9a ("KVM: emulate: POP SS triggers a MOV SS shadow too")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/all/20220821215900.1419215-1-mhal@rbox.co
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bda8120e5b100efd0d820b0a2aa1d2a0469bea51
Author: Dmitry Osipenko <dmitry.osipenko@collabora.com>
Date:   Thu Aug 18 22:33:07 2022 +0200

    media: cedrus: Set the platform driver data earlier
    
    commit 708938f8495147fe2e77a9a3e1015d8e6899323e upstream.
    
    The cedrus_hw_resume() crashes with NULL deference on driver probe if
    runtime PM is disabled because it uses platform data that hasn't been
    set up yet. Fix this by setting the platform data earlier during probe.
    
    Cc: stable@vger.kernel.org
    Fixes: 50e761516f2b (media: platform: Add Cedrus VPU decoder driver)
    Signed-off-by: Dmitry Osipenko <dmitry.osipenko@collabora.com>
    Signed-off-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Reviewed-by: Samuel Holland <samuel@sholland.org>
    Acked-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbdd3b1448e5944b273c178823360f9fe890ae06
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Sep 15 19:00:24 2022 +0200

    efi: libstub: drop pointless get_memory_map() call
    
    commit d80ca810f096ff66f451e7a3ed2f0cd9ef1ff519 upstream.
    
    Currently, the non-x86 stub code calls get_memory_map() redundantly,
    given that the data it returns is never used anywhere. So drop the call.
    
    Cc: <stable@vger.kernel.org> # v4.14+
    Fixes: 24d7c494ce46 ("efi/arm-stub: Round up FDT allocation to mapping size")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68158654b583bedafc50523a540160be115227d7
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Mon Sep 26 09:33:50 2022 -0500

    thunderbolt: Explicitly enable lane adapter hotplug events at startup
    
    commit 5d2569cb4a65c373896ec0217febdf88739ed295 upstream.
    
    Software that has run before the USB4 CM in Linux runs may have disabled
    hotplug events for a given lane adapter.
    
    Other CMs such as that one distributed with Windows 11 will enable hotplug
    events. Do the same thing in the Linux CM which fixes hotplug events on
    "AMD Pink Sardine".
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc08f8438172a036308e0b9a52b67e6f33870100
Author: Waiman Long <longman@redhat.com>
Date:   Thu Sep 22 10:56:22 2022 -0400

    tracing: Disable interrupt or preemption before acquiring arch_spinlock_t
    
    commit c0a581d7126c0bbc96163276f585fd7b4e4d8d0e upstream.
    
    It was found that some tracing functions in kernel/trace/trace.c acquire
    an arch_spinlock_t with preemption and irqs enabled. An example is the
    tracing_saved_cmdlines_size_read() function which intermittently causes
    a "BUG: using smp_processor_id() in preemptible" warning when the LTP
    read_all_proc test is run.
    
    That can be problematic in case preemption happens after acquiring the
    lock. Add the necessary preemption or interrupt disabling code in the
    appropriate places before acquiring an arch_spinlock_t.
    
    The convention here is to disable preemption for trace_cmdline_lock and
    interupt for max_lock.
    
    Link: https://lkml.kernel.org/r/20220922145622.1744826-1-longman@redhat.com
    
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Boqun Feng <boqun.feng@gmail.com>
    Cc: stable@vger.kernel.org
    Fixes: a35873a0993b ("tracing: Add conditional snapshot")
    Fixes: 939c7a4f04fc ("tracing: Introduce saved_cmdlines_size file")
    Suggested-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cf6c09dafeeb6f3d92cc19ea9e024640448c42e
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Thu Sep 29 10:49:09 2022 -0400

    ring-buffer: Fix race between reset page and reading page
    
    commit a0fcaaed0c46cf9399d3a2d6e0c87ddb3df0e044 upstream.
    
    The ring buffer is broken up into sub buffers (currently of page size).
    Each sub buffer has a pointer to its "tail" (the last event written to the
    sub buffer). When a new event is requested, the tail is locally
    incremented to cover the size of the new event. This is done in a way that
    there is no need for locking.
    
    If the tail goes past the end of the sub buffer, the process of moving to
    the next sub buffer takes place. After setting the current sub buffer to
    the next one, the previous one that had the tail go passed the end of the
    sub buffer needs to be reset back to the original tail location (before
    the new event was requested) and the rest of the sub buffer needs to be
    "padded".
    
    The race happens when a reader takes control of the sub buffer. As readers
    do a "swap" of sub buffers from the ring buffer to get exclusive access to
    the sub buffer, it replaces the "head" sub buffer with an empty sub buffer
    that goes back into the writable portion of the ring buffer. This swap can
    happen as soon as the writer moves to the next sub buffer and before it
    updates the last sub buffer with padding.
    
    Because the sub buffer can be released to the reader while the writer is
    still updating the padding, it is possible for the reader to see the event
    that goes past the end of the sub buffer. This can cause obvious issues.
    
    To fix this, add a few memory barriers so that the reader definitely sees
    the updates to the sub buffer, and also waits until the writer has put
    back the "tail" of the sub buffer back to the last event that was written
    on it.
    
    To be paranoid, it will only spin for 1 second, otherwise it will
    warn and shutdown the ring buffer code. 1 second should be enough as
    the writer does have preemption disabled. If the writer doesn't move
    within 1 second (with preemption disabled) something is horribly
    wrong. No interrupt should last 1 second!
    
    Link: https://lore.kernel.org/all/20220830120854.7545-1-jiazi.li@transsion.com/
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216369
    Link: https://lkml.kernel.org/r/20220929104909.0650a36c@gandalf.local.home
    
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Fixes: c7b0930857e22 ("ring-buffer: prevent adding write in discarded area")
    Reported-by: Jiazi.Li <jiazi.li@transsion.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 588f02f8b9d96c4a89db955394ec54e77b1d482f
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Wed Sep 28 13:39:38 2022 -0400

    ring-buffer: Add ring_buffer_wake_waiters()
    
    commit 7e9fbbb1b776d8d7969551565bc246f74ec53b27 upstream.
    
    On closing of a file that represents a ring buffer or flushing the file,
    there may be waiters on the ring buffer that needs to be woken up and exit
    the ring_buffer_wait() function.
    
    Add ring_buffer_wake_waiters() to wake up the waiters on the ring buffer
    and allow them to exit the wait loop.
    
    Link: https://lkml.kernel.org/r/20220928133938.28dc2c27@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Fixes: 15693458c4bc0 ("tracing/ring-buffer: Move poll wake ups into ring buffer code")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 586f02c500b251992206d8a430c80293865ff622
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Sep 27 19:15:25 2022 -0400

    ring-buffer: Check pending waiters when doing wake ups as well
    
    commit ec0bbc5ec5664dcee344f79373852117dc672c86 upstream.
    
    The wake up waiters only checks the "wakeup_full" variable and not the
    "full_waiters_pending". The full_waiters_pending is set when a waiter is
    added to the wait queue. The wakeup_full is only set when an event is
    triggered, and it clears the full_waiters_pending to avoid multiple calls
    to irq_work_queue().
    
    The irq_work callback really needs to check both wakeup_full as well as
    full_waiters_pending such that this code can be used to wake up waiters
    when a file is closed that represents the ring buffer and the waiters need
    to be woken up.
    
    Link: https://lkml.kernel.org/r/20220927231824.209460321@goodmis.org
    
    Cc: stable@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Fixes: 15693458c4bc0 ("tracing/ring-buffer: Move poll wake ups into ring buffer code")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6617e5132c442a6420c84e82d753134d24fb6eeb
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Sep 27 19:15:24 2022 -0400

    ring-buffer: Have the shortest_full queue be the shortest not longest
    
    commit 3b19d614b61b93a131f463817e08219c9ce1fee3 upstream.
    
    The logic to know when the shortest waiters on the ring buffer should be
    woken up or not has uses a less than instead of a greater than compare,
    which causes the shortest_full to actually be the longest.
    
    Link: https://lkml.kernel.org/r/20220927231823.718039222@goodmis.org
    
    Cc: stable@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Fixes: 2c2b0a78b3739 ("ring-buffer: Add percentage of ring buffer full to wake up reader")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a3bbd40e4525fba49b4786c4f5d151dd1826f2d
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Sep 27 14:43:17 2022 -0400

    ring-buffer: Allow splice to read previous partially read pages
    
    commit fa8f4a89736b654125fb254b0db753ac68a5fced upstream.
    
    If a page is partially read, and then the splice system call is run
    against the ring buffer, it will always fail to read, no matter how much
    is in the ring buffer. That's because the code path for a partial read of
    the page does will fail if the "full" flag is set.
    
    The splice system call wants full pages, so if the read of the ring buffer
    is not yet full, it should return zero, and the splice will block. But if
    a previous read was done, where the beginning has been consumed, it should
    still be given to the splice caller if the rest of the page has been
    written to.
    
    This caused the splice command to never consume data in this scenario, and
    let the ring buffer just fill up and lose events.
    
    Link: https://lkml.kernel.org/r/20220927144317.46be6b80@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Fixes: 8789a9e7df6bf ("ring-buffer: read page interface")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2ca4609d0c357c2b8b20f7f10c09450451d22cd
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Mon Sep 26 15:20:08 2022 +0000

    ftrace: Properly unset FTRACE_HASH_FL_MOD
    
    commit 0ce0638edf5ec83343302b884fa208179580700a upstream.
    
    When executing following commands like what document said, but the log
    "#### all functions enabled ####" was not shown as expect:
      1. Set a 'mod' filter:
        $ echo 'write*:mod:ext3' > /sys/kernel/tracing/set_ftrace_filter
      2. Invert above filter:
        $ echo '!write*:mod:ext3' >> /sys/kernel/tracing/set_ftrace_filter
      3. Read the file:
        $ cat /sys/kernel/tracing/set_ftrace_filter
    
    By some debugging, I found that flag FTRACE_HASH_FL_MOD was not unset
    after inversion like above step 2 and then result of ftrace_hash_empty()
    is incorrect.
    
    Link: https://lkml.kernel.org/r/20220926152008.2239274-1-zhengyejian1@huawei.com
    
    Cc: <mingo@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: 8c08f0d5c6fb ("ftrace: Have cached module filters be an active filter")
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 846f041203b9d205890eb3aa14b699f40fff5e2d
Author: Rik van Riel <riel@surriel.com>
Date:   Mon Aug 8 15:00:19 2022 -0400

    livepatch: fix race between fork and KLP transition
    
    commit 747f7a2901174c9afa805dddfb7b24db6f65e985 upstream.
    
    The KLP transition code depends on the TIF_PATCH_PENDING and
    the task->patch_state to stay in sync. On a normal (forward)
    transition, TIF_PATCH_PENDING will be set on every task in
    the system, while on a reverse transition (after a failed
    forward one) first TIF_PATCH_PENDING will be cleared from
    every task, followed by it being set on tasks that need to
    be transitioned back to the original code.
    
    However, the fork code copies over the TIF_PATCH_PENDING flag
    from the parent to the child early on, in dup_task_struct and
    setup_thread_stack. Much later, klp_copy_process will set
    child->patch_state to match that of the parent.
    
    However, the parent's patch_state may have been changed by KLP loading
    or unloading since it was initially copied over into the child.
    
    This results in the KLP code occasionally hitting this warning in
    klp_complete_transition:
    
            for_each_process_thread(g, task) {
                    WARN_ON_ONCE(test_tsk_thread_flag(task, TIF_PATCH_PENDING));
                    task->patch_state = KLP_UNDEFINED;
            }
    
    Set, or clear, the TIF_PATCH_PENDING flag in the child task
    depending on whether or not it is needed at the time
    klp_copy_process is called, at a point in copy_process where the
    tasklist_lock is held exclusively, preventing races with the KLP
    code.
    
    The KLP code does have a few places where the state is changed
    without the tasklist_lock held, but those should not cause
    problems because klp_update_patch_state(current) cannot be
    called while the current task is in the middle of fork,
    klp_check_and_switch_task() which is called under the pi_lock,
    which prevents rescheduling, and manipulation of the patch
    state of idle tasks, which do not fork.
    
    This should prevent this warning from triggering again in the
    future, and close the race for both normal and reverse transitions.
    
    Signed-off-by: Rik van Riel <riel@surriel.com>
    Reported-by: Breno Leitao <leitao@debian.org>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Acked-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Fixes: d83a7cb375ee ("livepatch: change to a per-task consistency model")
    Cc: stable@kernel.org
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20220808150019.03d6a67b@imladris.surriel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2189756eabbb5f8366b4302183dfa3e98bfed196
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Sep 21 14:40:40 2022 +0800

    ext4: update 'state->fc_regions_size' after successful memory allocation
    
    commit 27cd49780381c6ccbf248798e5e8fd076200ffba upstream.
    
    To avoid to 'state->fc_regions_size' mismatch with 'state->fc_regions'
    when fail to reallocate 'fc_reqions',only update 'state->fc_regions_size'
    after 'state->fc_regions' is allocated successfully.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220921064040.3693255-4-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cfb769d60a2a57eb3566765428b6131cd16dcfe
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Sep 21 14:40:39 2022 +0800

    ext4: fix potential memory leak in ext4_fc_record_regions()
    
    commit 7069d105c1f15c442b68af43f7fde784f3126739 upstream.
    
    As krealloc may return NULL, in this case 'state->fc_regions' may not be
    freed by krealloc, but 'state->fc_regions' already set NULL. Then will
    lead to 'state->fc_regions' memory leak.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220921064040.3693255-3-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9ce7766dc4e88e624c62a68221a3bbe8f06e856
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Sep 21 14:40:38 2022 +0800

    ext4: fix potential memory leak in ext4_fc_record_modified_inode()
    
    commit 9305721a309fa1bd7c194e0d4a2335bf3b29dca4 upstream.
    
    As krealloc may return NULL, in this case 'state->fc_modified_inodes'
    may not be freed by krealloc, but 'state->fc_modified_inodes' already
    set NULL. Then will lead to 'state->fc_modified_inodes' memory leak.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220921064040.3693255-2-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d575fb52c46686f169774e409382af4b5990b215
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Sep 14 18:08:59 2022 +0800

    ext4: fix miss release buffer head in ext4_fc_write_inode
    
    commit ccbf8eeb39f2ff00b54726a2b20b35d788c4ecb5 upstream.
    
    In 'ext4_fc_write_inode' function first call 'ext4_get_inode_loc' get 'iloc',
    after use it miss release 'iloc.bh'.
    So just release 'iloc.bh' before 'ext4_fc_write_inode' return.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220914100859.1415196-1-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74d2a398d2d8c54d6468bc1e9da60ed9f3c4739f
Author: Jinke Han <hanjinke.666@bytedance.com>
Date:   Sat Sep 3 09:24:29 2022 +0800

    ext4: place buffer head allocation before handle start
    
    commit d1052d236eddf6aa851434db1897b942e8db9921 upstream.
    
    In our product environment, we encounter some jbd hung waiting handles to
    stop while several writters were doing memory reclaim for buffer head
    allocation in delay alloc write path. Ext4 do buffer head allocation with
    holding transaction handle which may be blocked too long if the reclaim
    works not so smooth. According to our bcc trace, the reclaim time in
    buffer head allocation can reach 258s and the jbd transaction commit also
    take almost the same time meanwhile. Except for these extreme cases,
    we often see several seconds delays for cgroup memory reclaim on our
    servers. This is more likely to happen considering docker environment.
    
    One thing to note, the allocation of buffer heads is as often as page
    allocation or more often when blocksize less than page size. Just like
    page cache allocation, we should also place the buffer head allocation
    before startting the handle.
    
    Cc: stable@kernel.org
    Signed-off-by: Jinke Han <hanjinke.666@bytedance.com>
    Link: https://lore.kernel.org/r/20220903012429.22555-1-hanjinke.666@bytedance.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbb0e601bd51da9ccf88f548279d1745107c4ea2
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Wed Aug 31 15:46:29 2022 +0800

    ext4: ext4_read_bh_lock() should submit IO if the buffer isn't uptodate
    
    commit 0b73284c564d3ae4feef4bc920292f004acf4980 upstream.
    
    Recently we notice that ext4 filesystem would occasionally fail to read
    metadata from disk and report error message, but the disk and block
    layer looks fine. After analyse, we lockon commit 88dbcbb3a484
    ("blkdev: avoid migration stalls for blkdev pages"). It provide a
    migration method for the bdev, we could move page that has buffers
    without extra users now, but it lock the buffers on the page, which
    breaks the fragile metadata read operation on ext4 filesystem,
    ext4_read_bh_lock() was copied from ll_rw_block(), it depends on the
    assumption of that locked buffer means it is under IO. So it just
    trylock the buffer and skip submit IO if it lock failed, after
    wait_on_buffer() we conclude IO error because the buffer is not
    uptodate.
    
    This issue could be easily reproduced by add some delay just after
    buffer_migrate_lock_buffers() in __buffer_migrate_folio() and do
    fsstress on ext4 filesystem.
    
      EXT4-fs error (device pmem1): __ext4_find_entry:1658: inode #73193:
      comm fsstress: reading directory lblock 0
      EXT4-fs error (device pmem1): __ext4_find_entry:1658: inode #75334:
      comm fsstress: reading directory lblock 0
    
    Fix it by removing the trylock logic in ext4_read_bh_lock(), just lock
    the buffer and submit IO if it's not uptodate, and also leave over
    readahead helper.
    
    Cc: stable@kernel.org
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220831074629.3755110-1-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e1764ad71abca735418fd596a82067074b59687
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Wed Aug 24 18:03:47 2022 +0200

    ext4: don't increase iversion counter for ea_inodes
    
    commit 50f094a5580e6297bf10a807d16f0ee23fa576cf upstream.
    
    ea_inodes are using i_version for storing part of the reference count so
    we really need to leave it alone.
    
    The problem can be reproduced by xfstest ext4/026 when iversion is
    enabled. Fix it by not calling inode_inc_iversion() for EXT4_EA_INODE_FL
    inodes in ext4_mark_iloc_dirty().
    
    Cc: stable@kernel.org
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Link: https://lore.kernel.org/r/20220824160349.39664-1-lczerner@redhat.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 483831ad0440f62c10d1707c97ce824bd82d98ae
Author: Jan Kara <jack@suse.cz>
Date:   Mon Aug 22 13:48:32 2022 +0200

    ext4: fix check for block being out of directory size
    
    commit 61a1d87a324ad5e3ed27c6699dfc93218fcf3201 upstream.
    
    The check in __ext4_read_dirblock() for block being outside of directory
    size was wrong because it compared block number against directory size
    in bytes. Fix it.
    
    Fixes: 65f8ea4cd57d ("ext4: check if directory block is within i_size")
    CVE: CVE-2022-1184
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Link: https://lore.kernel.org/r/20220822114832.1482-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac66db1a436504159463f811b9e9864c1d2b03f1
Author: Lalith Rajendran <lalithkraj@google.com>
Date:   Thu Aug 18 21:40:49 2022 +0000

    ext4: make ext4_lazyinit_thread freezable
    
    commit 3b575495ab8dbb4dbe85b4ac7f991693c3668ff5 upstream.
    
    ext4_lazyinit_thread is not set freezable. Hence when the thread calls
    try_to_freeze it doesn't freeze during suspend and continues to send
    requests to the storage during suspend, resulting in suspend failures.
    
    Cc: stable@kernel.org
    Signed-off-by: Lalith Rajendran <lalithkraj@google.com>
    Link: https://lore.kernel.org/r/20220818214049.1519544-1-lalithkraj@google.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f34ab95162763cd7352f46df169296eec28b688d
Author: Baokun Li <libaokun1@huawei.com>
Date:   Fri Aug 5 20:39:47 2022 +0800

    ext4: fix null-ptr-deref in ext4_write_info
    
    commit f9c1f248607d5546075d3f731e7607d5571f2b60 upstream.
    
    I caught a null-ptr-deref bug as follows:
    ==================================================================
    KASAN: null-ptr-deref in range [0x0000000000000068-0x000000000000006f]
    CPU: 1 PID: 1589 Comm: umount Not tainted 5.10.0-02219-dirty #339
    RIP: 0010:ext4_write_info+0x53/0x1b0
    [...]
    Call Trace:
     dquot_writeback_dquots+0x341/0x9a0
     ext4_sync_fs+0x19e/0x800
     __sync_filesystem+0x83/0x100
     sync_filesystem+0x89/0xf0
     generic_shutdown_super+0x79/0x3e0
     kill_block_super+0xa1/0x110
     deactivate_locked_super+0xac/0x130
     deactivate_super+0xb6/0xd0
     cleanup_mnt+0x289/0x400
     __cleanup_mnt+0x16/0x20
     task_work_run+0x11c/0x1c0
     exit_to_user_mode_prepare+0x203/0x210
     syscall_exit_to_user_mode+0x5b/0x3a0
     do_syscall_64+0x59/0x70
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
     ==================================================================
    
    Above issue may happen as follows:
    -------------------------------------
    exit_to_user_mode_prepare
     task_work_run
      __cleanup_mnt
       cleanup_mnt
        deactivate_super
         deactivate_locked_super
          kill_block_super
           generic_shutdown_super
            shrink_dcache_for_umount
             dentry = sb->s_root
             sb->s_root = NULL              <--- Here set NULL
            sync_filesystem
             __sync_filesystem
              sb->s_op->sync_fs > ext4_sync_fs
               dquot_writeback_dquots
                sb->dq_op->write_info > ext4_write_info
                 ext4_journal_start(d_inode(sb->s_root), EXT4_HT_QUOTA, 2)
                  d_inode(sb->s_root)
                   s_root->d_inode          <--- Null pointer dereference
    
    To solve this problem, we use ext4_journal_start_sb directly
    to avoid s_root being used.
    
    Cc: stable@kernel.org
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220805123947.565152-1-libaokun1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb98cb61efff3b2a1964939465ccaaf906af1d4f
Author: Jan Kara <jack@suse.cz>
Date:   Wed Jul 27 17:57:53 2022 +0200

    ext4: avoid crash when inline data creation follows DIO write
    
    commit 4bb26f2885ac6930984ee451b952c5a6042f2c0e upstream.
    
    When inode is created and written to using direct IO, there is nothing
    to clear the EXT4_STATE_MAY_INLINE_DATA flag. Thus when inode gets
    truncated later to say 1 byte and written using normal write, we will
    try to store the data as inline data. This confuses the code later
    because the inode now has both normal block and inline data allocated
    and the confusion manifests for example as:
    
    kernel BUG at fs/ext4/inode.c:2721!
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN
    CPU: 0 PID: 359 Comm: repro Not tainted 5.19.0-rc8-00001-g31ba1e3b8305-dirty #15
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-1.fc36 04/01/2014
    RIP: 0010:ext4_writepages+0x363d/0x3660
    RSP: 0018:ffffc90000ccf260 EFLAGS: 00010293
    RAX: ffffffff81e1abcd RBX: 0000008000000000 RCX: ffff88810842a180
    RDX: 0000000000000000 RSI: 0000008000000000 RDI: 0000000000000000
    RBP: ffffc90000ccf650 R08: ffffffff81e17d58 R09: ffffed10222c680b
    R10: dfffe910222c680c R11: 1ffff110222c680a R12: ffff888111634128
    R13: ffffc90000ccf880 R14: 0000008410000000 R15: 0000000000000001
    FS:  00007f72635d2640(0000) GS:ffff88811b000000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000565243379180 CR3: 000000010aa74000 CR4: 0000000000150eb0
    Call Trace:
     <TASK>
     do_writepages+0x397/0x640
     filemap_fdatawrite_wbc+0x151/0x1b0
     file_write_and_wait_range+0x1c9/0x2b0
     ext4_sync_file+0x19e/0xa00
     vfs_fsync_range+0x17b/0x190
     ext4_buffered_write_iter+0x488/0x530
     ext4_file_write_iter+0x449/0x1b90
     vfs_write+0xbcd/0xf40
     ksys_write+0x198/0x2c0
     __x64_sys_write+0x7b/0x90
     do_syscall_64+0x3d/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
     </TASK>
    
    Fix the problem by clearing EXT4_STATE_MAY_INLINE_DATA when we are doing
    direct IO write to a file.
    
    Cc: stable@kernel.org
    Reported-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Reported-by: syzbot+bd13648a53ed6933ca49@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=a1e89d09bbbcbd5c4cb45db230ee28c822953984
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Tested-by: Tadeusz Struk<tadeusz.struk@linaro.org>
    Link: https://lore.kernel.org/r/20220727155753.13969-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e65506ff181fc176088f32117d69b9cb1ddda777
Author: Ye Bin <yebin10@huawei.com>
Date:   Sat Sep 17 17:38:05 2022 +0800

    jbd2: add miss release buffer head in fc_do_one_pass()
    
    commit dfff66f30f66b9524b661f311bbed8ff3d2ca49f upstream.
    
    In fc_do_one_pass() miss release buffer head after use which will lead
    to reference count leak.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220917093805.1782845-1-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d4d16daec2a6689b6d3fbfc7d2078643adc6619
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Sep 14 18:08:12 2022 +0800

    jbd2: fix potential use-after-free in jbd2_fc_wait_bufs
    
    commit 243d1a5d505d0b0460c9af0ad56ed4a56ef0bebd upstream.
    
    In 'jbd2_fc_wait_bufs' use 'bh' after put buffer head reference count
    which may lead to use-after-free.
    So judge buffer if uptodate before put buffer head reference count.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220914100812.1414768-3-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a33dde572fceb45d02d188e0213c47059401c93
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Sep 14 18:08:11 2022 +0800

    jbd2: fix potential buffer head reference count leak
    
    commit e0d5fc7a6d80ac2406c7dfc6bb625201d0250a8a upstream.
    
    As in 'jbd2_fc_wait_bufs' if buffer isn't uptodate, will return -EIO without
    update 'journal->j_fc_off'. But 'jbd2_fc_release_bufs' will release buffer head
    from ‘j_fc_off - 1’ if 'bh' is NULL will terminal release which will lead to
    buffer head buffer head reference count leak.
    To solve above issue, update 'journal->j_fc_off' before return -EIO.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220914100812.1414768-2-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eea3e455a3ae60fd3da1aeffb161123b8c15535b
Author: Andrew Perepechko <anserper@ya.ru>
Date:   Wed Sep 7 19:59:59 2022 +0300

    jbd2: wake up journal waiters in FIFO order, not LIFO
    
    commit 34fc8768ec6089565d6d73bad26724083cecf7bd upstream.
    
    LIFO wakeup order is unfair and sometimes leads to a journal
    user not being able to get a journal handle for hundreds of
    transactions in a row.
    
    FIFO wakeup can make things more fair.
    
    Cc: stable@kernel.org
    Signed-off-by: Alexey Lyashkov <alexey.lyashkov@gmail.com>
    Reviewed-by: Ritesh Harjani (IBM) <ritesh.list@gmail.com>
    Link: https://lore.kernel.org/r/20220907165959.1137482-1-alexey.lyashkov@gmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba52e685d29b942f436ce6d51e787510ed93ef5a
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Sep 29 22:57:43 2022 -0700

    hardening: Remove Clang's enable flag for -ftrivial-auto-var-init=zero
    
    commit 607e57c6c62c00965ae276902c166834ce73014a upstream.
    
    Now that Clang's -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
    option is no longer required, remove it from the command line. Clang 16
    and later will warn when it is used, which will cause Kconfig to think
    it can't use -ftrivial-auto-var-init=zero at all. Check for whether it
    is required and only use it when so.
    
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: linux-kbuild@vger.kernel.org
    Cc: llvm@lists.linux.dev
    Cc: stable@vger.kernel.org
    Fixes: f02003c860d9 ("hardening: Avoid harmless Clang option under CONFIG_INIT_STACK_ALL_ZERO")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdcb1d7cf285a024dedef2863b661517a87c72cc
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Sep 14 12:49:03 2021 -0700

    hardening: Avoid harmless Clang option under CONFIG_INIT_STACK_ALL_ZERO
    
    commit f02003c860d921171be4a27e2893766eb3bc6871 upstream.
    
    Currently under Clang, CC_HAS_AUTO_VAR_INIT_ZERO requires an extra
    -enable flag compared to CC_HAS_AUTO_VAR_INIT_PATTERN. GCC 12[1] will
    not, and will happily ignore the Clang-specific flag. However, its
    presence on the command-line is both cumbersome and confusing. Due to
    GCC's tolerant behavior, though, we can continue to use a single Kconfig
    cc-option test for the feature on both compilers, but then drop the
    Clang-specific option in the Makefile.
    
    In other words, this patch does not change anything other than making the
    compiler command line shorter once GCC supports -ftrivial-auto-var-init=zero.
    
    [1] https://gcc.gnu.org/git/?p=gcc.git;a=commitdiff;h=a25e0b5e6ac8a77a71c229e0a7b744603365b0e9
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Masahiro Yamada <masahiroy@kernel.org>
    Cc: llvm@lists.linux.dev
    Fixes: dcb7c0b9461c ("hardening: Clarify Kconfig text for auto-var-init")
    Suggested-by: Will Deacon <will@kernel.org>
    Link: https://lore.kernel.org/lkml/20210914102837.6172-1-will@kernel.org/
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Acked-by: Will Deacon <will@kernel.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d621a87064fa5e58845855cc505cb2039c3c2693
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jul 20 14:54:17 2021 -0700

    hardening: Clarify Kconfig text for auto-var-init
    
    commit dcb7c0b9461c2a30f6616262736daac6f01ecb09 upstream.
    
    Clarify the details around the automatic variable initialization modes
    available. Specifically this details the values used for pattern init
    and expands on the rationale for zero init safety. Additionally makes
    zero init the default when available.
    
    Cc: glider@google.com
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: linux-security-module@vger.kernel.org
    Cc: clang-built-linux@googlegroups.com
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a8e8bf280703e04e0b9d91f101e1fdd9a5bd09e
Author: Chao Yu <chao@kernel.org>
Date:   Wed Sep 14 19:51:51 2022 +0800

    f2fs: fix to do sanity check on summary info
    
    commit c6ad7fd16657ebd34a87a97d9588195aae87597d upstream.
    
    As Wenqing Liu reported in bugzilla:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=216456
    
    BUG: KASAN: use-after-free in recover_data+0x63ae/0x6ae0 [f2fs]
    Read of size 4 at addr ffff8881464dcd80 by task mount/1013
    
    CPU: 3 PID: 1013 Comm: mount Tainted: G        W          6.0.0-rc4 #1
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014
    Call Trace:
     dump_stack_lvl+0x45/0x5e
     print_report.cold+0xf3/0x68d
     kasan_report+0xa8/0x130
     recover_data+0x63ae/0x6ae0 [f2fs]
     f2fs_recover_fsync_data+0x120d/0x1fc0 [f2fs]
     f2fs_fill_super+0x4665/0x61e0 [f2fs]
     mount_bdev+0x2cf/0x3b0
     legacy_get_tree+0xed/0x1d0
     vfs_get_tree+0x81/0x2b0
     path_mount+0x47e/0x19d0
     do_mount+0xce/0xf0
     __x64_sys_mount+0x12c/0x1a0
     do_syscall_64+0x38/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    The root cause is: in fuzzed image, SSA table is corrupted: ofs_in_node
    is larger than ADDRS_PER_PAGE(), result in out-of-range access on 4k-size
    page.
    
    - recover_data
     - do_recover_data
      - check_index_in_prev_nodes
       - f2fs_data_blkaddr
    
    This patch adds sanity check on summary info in recovery and GC flow
    in where the flows rely on them.
    
    After patch:
    [   29.310883] F2FS-fs (loop0): Inconsistent ofs_in_node:65286 in summary, ino:0, nid:6, max:1018
    
    Cc: stable@vger.kernel.org
    Reported-by: Wenqing Liu <wenqingliu0120@gmail.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73fb4bd2c055a393816f078f158cdd3025006f1d
Author: Chao Yu <chao@kernel.org>
Date:   Tue Sep 13 10:08:41 2022 +0800

    f2fs: fix to do sanity check on destination blkaddr during recovery
    
    commit 0ef4ca04a3f9223ff8bc440041c524b2123e09a3 upstream.
    
    As Wenqing Liu reported in bugzilla:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=216456
    
    loop5: detected capacity change from 0 to 131072
    F2FS-fs (loop5): recover_inode: ino = 6, name = hln, inline = 1
    F2FS-fs (loop5): recover_data: ino = 6 (i_size: recover) err = 0
    F2FS-fs (loop5): recover_inode: ino = 6, name = hln, inline = 1
    F2FS-fs (loop5): recover_data: ino = 6 (i_size: recover) err = 0
    F2FS-fs (loop5): recover_inode: ino = 6, name = hln, inline = 1
    F2FS-fs (loop5): recover_data: ino = 6 (i_size: recover) err = 0
    F2FS-fs (loop5): Bitmap was wrongly set, blk:5634
    ------------[ cut here ]------------
    WARNING: CPU: 3 PID: 1013 at fs/f2fs/segment.c:2198
    RIP: 0010:update_sit_entry+0xa55/0x10b0 [f2fs]
    Call Trace:
     <TASK>
     f2fs_do_replace_block+0xa98/0x1890 [f2fs]
     f2fs_replace_block+0xeb/0x180 [f2fs]
     recover_data+0x1a69/0x6ae0 [f2fs]
     f2fs_recover_fsync_data+0x120d/0x1fc0 [f2fs]
     f2fs_fill_super+0x4665/0x61e0 [f2fs]
     mount_bdev+0x2cf/0x3b0
     legacy_get_tree+0xed/0x1d0
     vfs_get_tree+0x81/0x2b0
     path_mount+0x47e/0x19d0
     do_mount+0xce/0xf0
     __x64_sys_mount+0x12c/0x1a0
     do_syscall_64+0x38/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    If we enable CONFIG_F2FS_CHECK_FS config, it will trigger a kernel panic
    instead of warning.
    
    The root cause is: in fuzzed image, SIT table is inconsistent with inode
    mapping table, result in triggering such warning during SIT table update.
    
    This patch introduces a new flag DATA_GENERIC_ENHANCE_UPDATE, w/ this
    flag, data block recovery flow can check destination blkaddr's validation
    in SIT table, and skip f2fs_replace_block() to avoid inconsistent status.
    
    Cc: stable@vger.kernel.org
    Reported-by: Wenqing Liu <wenqingliu0120@gmail.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12014eaf1b3fa601ff544585180307cbf83a8ee8
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Tue Aug 23 10:18:42 2022 -0700

    f2fs: increase the limit for reserve_root
    
    commit da35fe96d12d15779f3cb74929b7ed03941cf983 upstream.
    
    This patch increases the threshold that limits the reserved root space from 0.2%
    to 12.5% by using simple shift operation.
    
    Typically Android sets 128MB, but if the storage capacity is 32GB, 0.2% which is
    around 64MB becomes too small. Let's relax it.
    
    Cc: stable@vger.kernel.org
    Reported-by: Aran Dalton <arda@allwinnertech.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b5ffe86332af95f0f52be0a63d4da7c2b37b55
Author: Filipe Manana <fdmanana@suse.com>
Date:   Tue Aug 23 12:45:42 2022 +0100

    btrfs: fix race between quota enable and quota rescan ioctl
    
    commit 331cd9461412e103d07595a10289de90004ac890 upstream.
    
    When enabling quotas, at btrfs_quota_enable(), after committing the
    transaction, we change fs_info->quota_root to point to the quota root we
    created and set BTRFS_FS_QUOTA_ENABLED at fs_info->flags. Then we try
    to start the qgroup rescan worker, first by initializing it with a call
    to qgroup_rescan_init() - however if that fails we end up freeing the
    quota root but we leave fs_info->quota_root still pointing to it, this
    can later result in a use-after-free somewhere else.
    
    We have previously set the flags BTRFS_FS_QUOTA_ENABLED and
    BTRFS_QGROUP_STATUS_FLAG_ON, so we can only fail with -EINPROGRESS at
    btrfs_quota_enable(), which is possible if someone already called the
    quota rescan ioctl, and therefore started the rescan worker.
    
    So fix this by ignoring an -EINPROGRESS and asserting we can't get any
    other error.
    
    Reported-by: Ye Bin <yebin10@huawei.com>
    Link: https://lore.kernel.org/linux-btrfs/20220823015931.421355-1-yebin10@huawei.com/
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e50472949604f385e09ce3fa4e74dce9f44fb19b
Author: Hyunwoo Kim <imv4bel@gmail.com>
Date:   Sun Sep 25 06:32:43 2022 -0700

    fbdev: smscufx: Fix use-after-free in ufx_ops_open()
    
    commit 5610bcfe8693c02e2e4c8b31427f1bdbdecc839c upstream.
    
    A race condition may occur if the user physically removes the
    USB device while calling open() for this device node.
    
    This is a race condition between the ufx_ops_open() function and
    the ufx_usb_disconnect() function, which may eventually result in UAF.
    
    So, add a mutex to the ufx_ops_open() and ufx_usb_disconnect() functions
    to avoid race contidion of krefs.
    
    Signed-off-by: Hyunwoo Kim <imv4bel@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9931bd05bb8d1d8602d3834bb6ba0c6d87a451b7
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Sep 19 06:44:34 2022 -0700

    scsi: qedf: Populate sysfs attributes for vport
    
    commit 592642e6b11e620e4b43189f8072752429fc8dc3 upstream.
    
    Few vport parameters were displayed by systool as 'Unknown' or 'NULL'.
    Copy speed, supported_speed, frame_size and update port_type for NPIV port.
    
    Link: https://lore.kernel.org/r/20220919134434.3513-1-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Tested-by: Guangwu Zhang <guazhang@redhat.com>
    Reviewed-by: John Meneghini <jmeneghi@redhat.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 102c4b6e8c4b5ba8571df8f88d45730ebcb7f5a9
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Aug 27 15:44:54 2022 +0200

    powerpc/boot: Explicitly disable usage of SPE instructions
    
    commit 110a58b9f91c66f743c01a2c217243d94c899c23 upstream.
    
    uImage boot wrapper should not use SPE instructions, like kernel itself.
    Boot wrapper has already disabled Altivec and VSX instructions but not SPE.
    Options -mno-spe and -mspe=no already set when compilation of kernel, but
    not when compiling uImage wrapper yet. Fix it.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220827134454.17365-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7db60fd46e0c8492f72551010f50fc6b39909fbb
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Sat Sep 24 13:47:36 2022 +0800

    powercap: intel_rapl: Use standard Energy Unit for SPR Dram RAPL domain
    
    commit 4c081324df5608b73428662ca54d5221ea03a6bd upstream.
    
    Intel Xeon servers used to use a fixed energy resolution (15.3uj) for
    Dram RAPL domain. But on SPR, Dram RAPL domain follows the standard
    energy resolution as described in MSR_RAPL_POWER_UNIT.
    
    Remove the SPR dram_domain_energy_unit quirk.
    
    Fixes: 2d798d9f5967 ("powercap: intel_rapl: add support for Sapphire Rapids")
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Tested-by: Wang Wendy <wendy.wang@intel.com>
    Cc: 5.9+ <stable@vger.kernel.org> # 5.9+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9119a92ad93eae59ac3238949976ccd568baee1f
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Wed Sep 21 20:49:16 2022 +0100

    PCI: Sanitise firmware BAR assignments behind a PCI-PCI bridge
    
    commit 0e32818397426a688f598f35d3bc762eca6d7592 upstream.
    
    When pci_assign_resource() is unable to assign resources to a BAR, it uses
    pci_revert_fw_address() to fall back to a firmware assignment (if any).
    Previously pci_revert_fw_address() assumed all addresses could reach the
    device, but this is not true if the device is below a bridge that only
    forwards addresses within its windows.
    
    This problem was observed on a Tyan Tomcat IV S1564D system where the BIOS
    did not assign valid addresses to several bridges and USB devices:
    
      pci 0000:00:11.0: PCI-to-PCIe bridge to [bus 01-ff]
      pci 0000:00:11.0:   bridge window [io  0xe000-0xefff]
      pci 0000:01:00.0: PCIe Upstream Port to [bus 02-ff]
      pci 0000:01:00.0:   bridge window [io  0x0000-0x0fff]   # unreachable
      pci 0000:02:02.0: PCIe Downstream Port to [bus 05-ff]
      pci 0000:02:02.0:   bridge window [io  0x0000-0x0fff]   # unreachable
      pci 0000:05:00.0: PCIe-to-PCI bridge to [bus 06-ff]
      pci 0000:05:00.0:   bridge window [io  0x0000-0x0fff]   # unreachable
      pci 0000:06:08.0: USB UHCI 1.1
      pci 0000:06:08.0: BAR 4: [io  0xfce0-0xfcff]            # unreachable
      pci 0000:06:08.1: USB UHCI 1.1
      pci 0000:06:08.1: BAR 4: [io  0xfce0-0xfcff]            # unreachable
      pci 0000:06:08.0: can't claim BAR 4 [io  0xfce0-0xfcff]: no compatible bridge window
      pci 0000:06:08.1: can't claim BAR 4 [io  0xfce0-0xfcff]: no compatible bridge window
    
    During the first pass of assigning unassigned resources, there was not
    enough I/O space available, so we couldn't assign the 06:08.0 BAR and
    reverted to the firmware assignment (still unreachable).  Reverting the
    06:08.1 assignment failed because it conflicted with 06:08.0:
    
      pci 0000:00:11.0:   bridge window [io  0xe000-0xefff]
      pci 0000:01:00.0: no space for bridge window [io  size 0x2000]
      pci 0000:02:02.0: no space for bridge window [io  size 0x1000]
      pci 0000:05:00.0: no space for bridge window [io  size 0x1000]
      pci 0000:06:08.0: BAR 4: no space for [io  size 0x0020]
      pci 0000:06:08.0: BAR 4: trying firmware assignment [io  0xfce0-0xfcff]
      pci 0000:06:08.1: BAR 4: no space for [io  size 0x0020]
      pci 0000:06:08.1: BAR 4: trying firmware assignment [io  0xfce0-0xfcff]
      pci 0000:06:08.1: BAR 4: [io  0xfce0-0xfcff] conflicts with 0000:06:08.0 [io  0xfce0-0xfcff]
    
    A subsequent pass assigned valid bridge windows and a valid 06:08.1 BAR,
    but left the 06:08.0 BAR alone, so the UHCI device was still unusable:
    
      pci 0000:00:11.0:   bridge window [io  0xe000-0xefff] released
      pci 0000:00:11.0:   bridge window [io  0x1000-0x2fff]   # reassigned
      pci 0000:01:00.0:   bridge window [io  0x1000-0x2fff]   # reassigned
      pci 0000:02:02.0:   bridge window [io  0x2000-0x2fff]   # reassigned
      pci 0000:05:00.0:   bridge window [io  0x2000-0x2fff]   # reassigned
      pci 0000:06:08.0: BAR 4: assigned [io  0xfce0-0xfcff]   # left alone
      pci 0000:06:08.1: BAR 4: assigned [io  0x2000-0x201f]
      ...
      uhci_hcd 0000:06:08.0: host system error, PCI problems?
      uhci_hcd 0000:06:08.0: host controller process error, something bad happened!
      uhci_hcd 0000:06:08.0: host controller halted, very bad!
      uhci_hcd 0000:06:08.0: HCRESET not completed yet!
      uhci_hcd 0000:06:08.0: HC died; cleaning up
    
    If the address assigned by firmware is not reachable because it's not
    within upstream bridge windows, fail instead of assigning the unusable
    address from firmware.
    
    [bhelgaas: commit log, use pci_upstream_bridge()]
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=16263
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2203012338460.46819@angie.orcam.me.uk
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2209211921250.29493@angie.orcam.me.uk
    Fixes: 58c84eda0756 ("PCI: fall back to original BIOS BAR addresses")
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org # v2.6.35+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3c08c021778dad30f69895e378843e9f423d734
Author: Carlos Llamas <cmllamas@google.com>
Date:   Fri Sep 30 00:38:43 2022 +0000

    mm/mmap: undo ->mmap() when arch_validate_flags() fails
    
    commit deb0f6562884b5b4beb883d73e66a7d3a1b96d99 upstream.
    
    Commit c462ac288f2c ("mm: Introduce arch_validate_flags()") added a late
    check in mmap_region() to let architectures validate vm_flags.  The check
    needs to happen after calling ->mmap() as the flags can potentially be
    modified during this callback.
    
    If arch_validate_flags() check fails we unmap and free the vma.  However,
    the error path fails to undo the ->mmap() call that previously succeeded
    and depending on the specific ->mmap() implementation this translates to
    reference increments, memory allocations and other operations what will
    not be cleaned up.
    
    There are several places (mainly device drivers) where this is an issue.
    However, one specific example is bpf_map_mmap() which keeps count of the
    mappings in map->writecnt.  The count is incremented on ->mmap() and then
    decremented on vm_ops->close().  When arch_validate_flags() fails this
    count is off since bpf_map_mmap_close() is never called.
    
    One can reproduce this issue in arm64 devices with MTE support.  Here the
    vm_flags are checked to only allow VM_MTE if VM_MTE_ALLOWED has been set
    previously.  From userspace then is enough to pass the PROT_MTE flag to
    mmap() syscall to trigger the arch_validate_flags() failure.
    
    The following program reproduces this issue:
    
      #include <stdio.h>
      #include <unistd.h>
      #include <linux/unistd.h>
      #include <linux/bpf.h>
      #include <sys/mman.h>
    
      int main(void)
      {
            union bpf_attr attr = {
                    .map_type = BPF_MAP_TYPE_ARRAY,
                    .key_size = sizeof(int),
                    .value_size = sizeof(long long),
                    .max_entries = 256,
                    .map_flags = BPF_F_MMAPABLE,
            };
            int fd;
    
            fd = syscall(__NR_bpf, BPF_MAP_CREATE, &attr, sizeof(attr));
            mmap(NULL, 4096, PROT_WRITE | PROT_MTE, MAP_SHARED, fd, 0);
    
            return 0;
      }
    
    By manually adding some log statements to the vm_ops callbacks we can
    confirm that when passing PROT_MTE to mmap() the map->writecnt is off upon
    ->release():
    
    With PROT_MTE flag:
      root@debian:~# ./bpf-test
      [  111.263874] bpf_map_write_active_inc: map=9 writecnt=1
      [  111.288763] bpf_map_release: map=9 writecnt=1
    
    Without PROT_MTE flag:
      root@debian:~# ./bpf-test
      [  157.816912] bpf_map_write_active_inc: map=10 writecnt=1
      [  157.830442] bpf_map_write_active_dec: map=10 writecnt=0
      [  157.832396] bpf_map_release: map=10 writecnt=0
    
    This patch fixes the above issue by calling vm_ops->close() when the
    arch_validate_flags() check fails, after this we can proceed to unmap and
    free the vma on the error path.
    
    Link: https://lkml.kernel.org/r/20220930003844.1210987-1-cmllamas@google.com
    Fixes: c462ac288f2c ("mm: Introduce arch_validate_flags()")
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Reviewed-by: Liam Howlett <liam.howlett@oracle.com>
    Cc: Christian Brauner (Microsoft) <brauner@kernel.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Suren Baghdasaryan <surenb@google.com>
    Cc: <stable@vger.kernel.org>    [5.10+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d551b7d611493bcb964722e65c98d6b2b26a0d1
Author: Jeffle Xu <jefflexu@linux.alibaba.com>
Date:   Wed Dec 2 19:11:45 2020 +0800

    block: fix inflight statistics of part0
    
    commit b0d97557ebfc9d5ba5f2939339a9fdd267abafeb upstream.
    
    The inflight of partition 0 doesn't include inflight IOs to all
    sub-partitions, since currently mq calculates inflight of specific
    partition by simply camparing the value of the partition pointer.
    
    Thus the following case is possible:
    
    $ cat /sys/block/vda/inflight
           0        0
    $ cat /sys/block/vda/vda1/inflight
           0      128
    
    While single queue device (on a previous version, e.g. v3.10) has no
    this issue:
    
    $cat /sys/block/sda/sda3/inflight
           0       33
    $cat /sys/block/sda/inflight
           0       33
    
    Partition 0 should be specially handled since it represents the whole
    disk. This issue is introduced since commit bf0ddaba65dd ("blk-mq: fix
    sysfs inflight counter").
    
    Besides, this patch can also fix the inflight statistics of part 0 in
    /proc/diskstats. Before this patch, the inflight statistics of part 0
    doesn't include that of sub partitions. (I have marked the 'inflight'
    field with asterisk.)
    
    $cat /proc/diskstats
     259       0 nvme0n1 45974469 0 367814768 6445794 1 0 1 0 *0* 111062 6445794 0 0 0 0 0 0
     259       2 nvme0n1p1 45974058 0 367797952 6445727 0 0 0 0 *33* 111001 6445727 0 0 0 0 0 0
    
    This is introduced since commit f299b7c7a9de ("blk-mq: provide internal
    in-flight variant").
    
    Fixes: bf0ddaba65dd ("blk-mq: fix sysfs inflight counter")
    Fixes: f299b7c7a9de ("blk-mq: provide internal in-flight variant")
    Signed-off-by: Jeffle Xu <jefflexu@linux.alibaba.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    [axboe: adapt for 5.11 partition change]
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    [khazhy: adapt for 5.10 partition]
    Signed-off-by: Khazhismel Kumykov <khazhy@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a129790893b765bef4ba02fcdeb73cbc56d5b99
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Sep 8 11:51:04 2022 +0200

    drm/udl: Restore display mode on resume
    
    commit 6d6e732835db92e66c28dbcf258a7e3d3c71420d upstream.
    
    Restore the display mode whne resuming from suspend. Currently, the
    display remains dark.
    
    On resume, the CRTC's mode does not change, but the 'active' flag
    changes to 'true'. Taking this into account when considering a mode
    switch restores the display mode.
    
    The bug is reproducable by using Gnome with udl and observing the
    adapter's suspend/resume behavior.
    
    Actually, the whole check added in udl_simple_display_pipe_enable()
    about the crtc_state->mode_changed was bogus.  We should drop the
    whole check and always apply the mode change in this function.
    
    [ tiwai -- Drop the mode_changed check entirely instead, per Daniel's
      suggestion ]
    
    Fixes: 997d33c35618 ("drm/udl: Inline DPMS code into CRTC enable and disable functions")
    Cc: <stable@vger.kernel.org>
    Suggested-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220908095115.23396-2-tiwai@suse.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f134f261d76ae3d5ecf68db642eaa746ceb84cfb
Author: Dmitry Osipenko <dmitry.osipenko@collabora.com>
Date:   Thu Jun 30 23:07:19 2022 +0300

    drm/virtio: Check whether transferred 2D BO is shmem
    
    commit e473216b42aa1fd9fc6b94b608b42c210c655908 upstream.
    
    Transferred 2D BO always must be a shmem BO. Add check for that to prevent
    NULL dereference if userspace passes a VRAM BO.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Emil Velikov <emil.l.velikov@gmail.com>
    Signed-off-by: Dmitry Osipenko <dmitry.osipenko@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20220630200726.1884320-3-dmitry.osipenko@collabora.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 303436e301ba72021c3894c7a44bcfc1dcf17122
Author: Rishabh Bhatnagar <risbhat@amazon.com>
Date:   Tue Sep 20 19:19:32 2022 +0000

    nvme-pci: set min_align_mask before calculating max_hw_sectors
    
    commit 61ce339f19fabbc3e51237148a7ef6f2270e44fa upstream.
    
    If swiotlb is force enabled dma_max_mapping_size ends up calling
    swiotlb_max_mapping_size which takes into account the min align mask for
    the device.  Set the min align mask for nvme driver before calling
    dma_max_mapping_size while calculating max hw sectors.
    
    Signed-off-by: Rishabh Bhatnagar <risbhat@amazon.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a73e6edcbf3cdd82796dcdf0c0f5fe5d91021af
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Tue Jul 12 15:52:55 2022 +0800

    UM: cpuinfo: Fix a warning for CONFIG_CPUMASK_OFFSTACK
    
    commit 16c546e148fa6d14a019431436a6f7b4087dbccd upstream.
    
    When CONFIG_CPUMASK_OFFSTACK and CONFIG_DEBUG_PER_CPU_MAPS is selected,
    cpu_max_bits_warn() generates a runtime warning similar as below while
    we show /proc/cpuinfo. Fix this by using nr_cpu_ids (the runtime limit)
    instead of NR_CPUS to iterate CPUs.
    
    [    3.052463] ------------[ cut here ]------------
    [    3.059679] WARNING: CPU: 3 PID: 1 at include/linux/cpumask.h:108 show_cpuinfo+0x5e8/0x5f0
    [    3.070072] Modules linked in: efivarfs autofs4
    [    3.076257] CPU: 0 PID: 1 Comm: systemd Not tainted 5.19-rc5+ #1052
    [    3.099465] Stack : 9000000100157b08 9000000000f18530 9000000000cf846c 9000000100154000
    [    3.109127]         9000000100157a50 0000000000000000 9000000100157a58 9000000000ef7430
    [    3.118774]         90000001001578e8 0000000000000040 0000000000000020 ffffffffffffffff
    [    3.128412]         0000000000aaaaaa 1ab25f00eec96a37 900000010021de80 900000000101c890
    [    3.138056]         0000000000000000 0000000000000000 0000000000000000 0000000000aaaaaa
    [    3.147711]         ffff8000339dc220 0000000000000001 0000000006ab4000 0000000000000000
    [    3.157364]         900000000101c998 0000000000000004 9000000000ef7430 0000000000000000
    [    3.167012]         0000000000000009 000000000000006c 0000000000000000 0000000000000000
    [    3.176641]         9000000000d3de08 9000000001639390 90000000002086d8 00007ffff0080286
    [    3.186260]         00000000000000b0 0000000000000004 0000000000000000 0000000000071c1c
    [    3.195868]         ...
    [    3.199917] Call Trace:
    [    3.203941] [<90000000002086d8>] show_stack+0x38/0x14c
    [    3.210666] [<9000000000cf846c>] dump_stack_lvl+0x60/0x88
    [    3.217625] [<900000000023d268>] __warn+0xd0/0x100
    [    3.223958] [<9000000000cf3c90>] warn_slowpath_fmt+0x7c/0xcc
    [    3.231150] [<9000000000210220>] show_cpuinfo+0x5e8/0x5f0
    [    3.238080] [<90000000004f578c>] seq_read_iter+0x354/0x4b4
    [    3.245098] [<90000000004c2e90>] new_sync_read+0x17c/0x1c4
    [    3.252114] [<90000000004c5174>] vfs_read+0x138/0x1d0
    [    3.258694] [<90000000004c55f8>] ksys_read+0x70/0x100
    [    3.265265] [<9000000000cfde9c>] do_syscall+0x7c/0x94
    [    3.271820] [<9000000000202fe4>] handle_syscall+0xc4/0x160
    [    3.281824] ---[ end trace 8b484262b4b8c24c ]---
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a053f597f42941eeebefc1b686e7c2ccd24104e
Author: Fangrui Song <maskray@google.com>
Date:   Sun Sep 18 02:29:34 2022 -0700

    riscv: Pass -mno-relax only on lld < 15.0.0
    
    commit 3cebf80e9a0d3adcb174053be32c88a640b3344b upstream.
    
    lld since llvm:6611d58f5bbc ("[ELF] Relax R_RISCV_ALIGN"), which will be
    included in the 15.0.0 release, has implemented some RISC-V linker
    relaxation.  -mno-relax is no longer needed in
    KBUILD_CFLAGS/KBUILD_AFLAGS to suppress R_RISCV_ALIGN which older lld
    can not handle:
    
        ld.lld: error: capability.c:(.fixup+0x0): relocation R_RISCV_ALIGN
        requires unimplemented linker relaxation; recompile with -mno-relax
        but the .o is already compiled with -mno-relax
    
    Signed-off-by: Fangrui Song <maskray@google.com>
    Link: https://lore.kernel.org/r/20220710071117.446112-1-maskray@google.com/
    Link: https://lore.kernel.org/r/20220918092933.19943-1-palmer@rivosinc.com
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Tested-by: Conor Dooley <conor.dooley@microchip.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d15dca1d46ab6fcdb17914cf780989bdd49db9f5
Author: Andrew Bresticker <abrestic@rivosinc.com>
Date:   Thu Sep 15 15:37:01 2022 -0400

    riscv: Make VM_WRITE imply VM_READ
    
    commit 7ab72c597356be1e7f0f3d856e54ce78527f43c8 upstream.
    
    RISC-V does not presently have write-only mappings as that PTE bit pattern
    is considered reserved in the privileged spec, so allow handling of read
    faults in VMAs that have VM_WRITE without VM_READ in order to be consistent
    with other architectures that have similar limitations.
    
    Fixes: 2139619bcad7 ("riscv: mmap with PROT_WRITE but no PROT_READ is invalid")
    Reviewed-by: Atish Patra <atishp@rivosinc.com>
    Signed-off-by: Andrew Bresticker <abrestic@rivosinc.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220915193702.2201018-2-abrestic@rivosinc.com/
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8c6f9b2e1948700e9e0c33b4829de9fbf8d547e
Author: Andrew Bresticker <abrestic@rivosinc.com>
Date:   Thu Sep 15 15:37:02 2022 -0400

    riscv: Allow PROT_WRITE-only mmap()
    
    commit 9e2e6042a7ec6504fe8e366717afa2f40cf16488 upstream.
    
    Commit 2139619bcad7 ("riscv: mmap with PROT_WRITE but no PROT_READ is
    invalid") made mmap() return EINVAL if PROT_WRITE was set wihtout
    PROT_READ with the justification that a write-only PTE is considered a
    reserved PTE permission bit pattern in the privileged spec. This check
    is unnecessary since we let VM_WRITE imply VM_READ on RISC-V, and it is
    inconsistent with other architectures that don't support write-only PTEs,
    creating a potential software portability issue. Just remove the check
    altogether and let PROT_WRITE imply PROT_READ as is the case on other
    architectures.
    
    Note that this also allows PROT_WRITE|PROT_EXEC mappings which were
    disallowed prior to the aforementioned commit; PROT_READ is implied in
    such mappings as well.
    
    Fixes: 2139619bcad7 ("riscv: mmap with PROT_WRITE but no PROT_READ is invalid")
    Reviewed-by: Atish Patra <atishp@rivosinc.com>
    Signed-off-by: Andrew Bresticker <abrestic@rivosinc.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220915193702.2201018-3-abrestic@rivosinc.com/
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6dcc6cfa2934afe2133f44241a3a1b4c758cc2b
Author: Helge Deller <deller@gmx.de>
Date:   Fri Oct 14 10:13:55 2022 +0200

    parisc: fbdev/stifb: Align graphics memory size to 4MB
    
    commit aca7c13d3bee81a968337a5515411409ae9d095d upstream.
    
    Independend of the current graphics resolution, adjust the reported
    graphics card memory size to the next 4MB boundary.
    This fixes the fbtest program which expects a naturally aligned size.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce9fab94b8db61f014e43ddf80dd1524ae6dff4
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Thu Sep 22 22:56:06 2022 +0100

    RISC-V: Make port I/O string accessors actually work
    
    commit 9cc205e3c17d5716da7ebb7fa0c985555e95d009 upstream.
    
    Fix port I/O string accessors such as `insb', `outsb', etc. which use
    the physical PCI port I/O address rather than the corresponding memory
    mapping to get at the requested location, which in turn breaks at least
    accesses made by our parport driver to a PCIe parallel port such as:
    
    PCI parallel port detected: 1415:c118, I/O at 0x1000(0x1008), IRQ 20
    parport0: PC-style at 0x1000 (0x1008), irq 20, using FIFO [PCSPP,TRISTATE,COMPAT,EPP,ECP]
    
    causing a memory access fault:
    
    Unable to handle kernel access to user memory without uaccess routines at virtual address 0000000000001008
    Oops [#1]
    Modules linked in:
    CPU: 1 PID: 350 Comm: cat Not tainted 6.0.0-rc2-00283-g10d4879f9ef0-dirty #23
    Hardware name: SiFive HiFive Unmatched A00 (DT)
    epc : parport_pc_fifo_write_block_pio+0x266/0x416
     ra : parport_pc_fifo_write_block_pio+0xb4/0x416
    epc : ffffffff80542c3e ra : ffffffff80542a8c sp : ffffffd88899fc60
     gp : ffffffff80fa2700 tp : ffffffd882b1e900 t0 : ffffffd883d0b000
     t1 : ffffffffff000002 t2 : 4646393043330a38 s0 : ffffffd88899fcf0
     s1 : 0000000000001000 a0 : 0000000000000010 a1 : 0000000000000000
     a2 : ffffffd883d0a010 a3 : 0000000000000023 a4 : 00000000ffff8fbb
     a5 : ffffffd883d0a001 a6 : 0000000100000000 a7 : ffffffc800000000
     s2 : ffffffffff000002 s3 : ffffffff80d28880 s4 : ffffffff80fa1f50
     s5 : 0000000000001008 s6 : 0000000000000008 s7 : ffffffd883d0a000
     s8 : 0004000000000000 s9 : ffffffff80dc1d80 s10: ffffffd8807e4000
     s11: 0000000000000000 t3 : 00000000000000ff t4 : 393044410a303930
     t5 : 0000000000001000 t6 : 0000000000040000
    status: 0000000200000120 badaddr: 0000000000001008 cause: 000000000000000f
    [<ffffffff80543212>] parport_pc_compat_write_block_pio+0xfe/0x200
    [<ffffffff8053bbc0>] parport_write+0x46/0xf8
    [<ffffffff8050530e>] lp_write+0x158/0x2d2
    [<ffffffff80185716>] vfs_write+0x8e/0x2c2
    [<ffffffff80185a74>] ksys_write+0x52/0xc2
    [<ffffffff80185af2>] sys_write+0xe/0x16
    [<ffffffff80003770>] ret_from_syscall+0x0/0x2
    ---[ end trace 0000000000000000 ]---
    
    For simplicity address the problem by adding PCI_IOBASE to the physical
    address requested in the respective wrapper macros only, observing that
    the raw accessors such as `__insb', `__outsb', etc. are not supposed to
    be used other than by said macros.  Remove the cast to `long' that is no
    longer needed on `addr' now that it is used as an offset from PCI_IOBASE
    and add parentheses around `addr' needed for predictable evaluation in
    macro expansion.  No need to make said adjustments in separate changes
    given that current code is gravely broken and does not ever work.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Fixes: fab957c11efe2 ("RISC-V: Atomic and Locking Code")
    Cc: stable@vger.kernel.org # v4.15+
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2209220223080.29493@angie.orcam.me.uk
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffb571e1232f4afc62294bc215c0e9f68a9fc35e
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Fri Sep 9 13:25:29 2022 +0200

    regulator: qcom_rpm: Fix circular deferral regression
    
    commit 8478ed5844588703a1a4c96a004b1525fbdbdd5e upstream.
    
    On recent kernels, the PM8058 L16 (or any other PM8058 LDO-regulator)
    does not come up if they are supplied by an SMPS-regulator. This
    is not very strange since the regulators are registered in a long
    array and the L-regulators are registered before the S-regulators,
    and if an L-regulator defers, it will never get around to registering
    the S-regulator that it needs.
    
    See arch/arm/boot/dts/qcom-apq8060-dragonboard.dts:
    
    pm8058-regulators {
        (...)
        vdd_l13_l16-supply = <&pm8058_s4>;
        (...)
    
    Ooops.
    
    Fix this by moving the PM8058 S-regulators first in the array.
    
    Do the same for the PM8901 S-regulators (though this is currently
    not causing any problems with out device trees) so that the pattern
    of registration order is the same on all PMnnnn chips.
    
    Fixes: 087a1b5cdd55 ("regulator: qcom: Rework to single platform device")
    Cc: stable@vger.kernel.org
    Cc: Andy Gross <agross@kernel.org>
    Cc: Bjorn Andersson <andersson@kernel.org>
    Cc: Konrad Dybcio <konrad.dybcio@somainline.org>
    Cc: linux-arm-msm@vger.kernel.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20220909112529.239143-1-linus.walleij@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85909424a1f5ffe0667ea83ca17d1820a78bf597
Author: Liang He <windhl@126.com>
Date:   Fri Sep 16 23:47:08 2022 +0800

    hwmon: (gsc-hwmon) Call of_node_get() before of_find_xxx API
    
    commit 7f62cf781e6567d59c8935dc8c6068ce2bb904b7 upstream.
    
    In gsc_hwmon_get_devtree_pdata(), we should call of_node_get() before
    the of_find_compatible_node() which will automatically call
    of_node_put() for the 'from' argument.
    
    Fixes: 3bce5377ef66 ("hwmon: Add Gateworks System Controller support")
    Signed-off-by: Liang He <windhl@126.com>
    Co-developed-by: Mengda Chen <chenmengda2009@163.com>
    Signed-off-by: Mengda Chen <chenmengda2009@163.com>
    Link: https://lore.kernel.org/r/20220916154708.3084515-1-chenmengda2009@163.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ef0e1c0ae5048879f12b01726c5ac7cfafa6820
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Sep 21 16:53:54 2022 +0200

    ASoC: wcd934x: fix order of Slimbus unprepare/disable
    
    commit e96bca7eaa5747633ec638b065630ff83728982a upstream.
    
    Slimbus streams are first prepared and then enabled, so the cleanup path
    should reverse it.  The unprepare sets stream->num_ports to 0 and frees
    the stream->ports.  Calling disable after unprepare was not really
    effective (channels was not deactivated) and could lead to further
    issues due to making transfers on unprepared stream.
    
    Fixes: a61f3b4f476e ("ASoC: wcd934x: add support to wcd9340/wcd9341 codec")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20220921145354.1683791-2-krzysztof.kozlowski@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b2c82af65f7bef26e53ef9d7cb67e23648272cc
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Sep 21 16:53:53 2022 +0200

    ASoC: wcd9335: fix order of Slimbus unprepare/disable
    
    commit ea8ef003aa53ad23e7705c5cab1c4e664faa6c79 upstream.
    
    Slimbus streams are first prepared and then enabled, so the cleanup path
    should reverse it.  The unprepare sets stream->num_ports to 0 and frees
    the stream->ports.  Calling disable after unprepare was not really
    effective (channels was not deactivated) and could lead to further
    issues due to making transfers on unprepared stream.
    
    Fixes: 20aedafdf492 ("ASoC: wcd9335: add support to wcd9335 codec")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20220921145354.1683791-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c20d672e3a5feaf7ea0eba6f1dcb82601d1bbad
Author: Patryk Duda <pdk@semihalf.com>
Date:   Tue Aug 2 17:41:28 2022 +0200

    platform/chrome: cros_ec_proto: Update version on GET_NEXT_EVENT failure
    
    commit f74c7557ed0d321947e8bb4e9d47c1013f8b2227 upstream.
    
    Some EC based devices (e.g. Fingerpint MCU) can jump to RO part of the
    firmware (intentionally or due to device reboot). The RO part doesn't
    change during the device lifecycle, so it won't support newer version
    of EC_CMD_GET_NEXT_EVENT command.
    
    Function cros_ec_query_all() is responsible for finding maximum
    supported MKBP event version. It's usually called when the device is
    running RW part of the firmware, so the command version can be
    potentially higher than version supported by the RO.
    
    The problem was fixed by updating maximum supported version when the
    device returns EC_RES_INVALID_VERSION (mapped to -ENOPROTOOPT). That way
    the kernel will use highest common version supported by RO and RW.
    
    Fixes: 3300fdd630d4 ("platform/chrome: cros_ec: handle MKBP more events flag")
    Cc: <stable@vger.kernel.org> # 5.10+
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Patryk Duda <pdk@semihalf.com>
    Signed-off-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Link: https://lore.kernel.org/r/20220802154128.21175-1-pdk@semihalf.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b7ae4a904a4dd83cae245c02db88c8b5d49e1cb
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Fri Sep 23 21:45:52 2022 +0800

    quota: Check next/prev free block number after reading from quota file
    
    commit 6c8ea8b8cd4722efd419f91ca46a2dc81b7d89a3 upstream.
    
    Following process:
     Init: v2_read_file_info: <3> dqi_free_blk 0 dqi_free_entry 5 dqi_blks 6
    
     Step 1. chown bin f_a -> dquot_acquire -> v2_write_dquot:
      qtree_write_dquot
       do_insert_tree
        find_free_dqentry
         get_free_dqblk
          write_blk(info->dqi_blocks) // info->dqi_blocks = 6, failure. The
               content in physical block (corresponding to blk 6) is random.
    
     Step 2. chown root f_a -> dquot_transfer -> dqput_all -> dqput ->
             ext4_release_dquot -> v2_release_dquot -> qtree_delete_dquot:
      dquot_release
       remove_tree
        free_dqentry
         put_free_dqblk(6)
          info->dqi_free_blk = blk    // info->dqi_free_blk = 6
    
     Step 3. drop cache (buffer head for block 6 is released)
    
     Step 4. chown bin f_b -> dquot_acquire -> commit_dqblk -> v2_write_dquot:
      qtree_write_dquot
       do_insert_tree
        find_free_dqentry
         get_free_dqblk
          dh = (struct qt_disk_dqdbheader *)buf
          blk = info->dqi_free_blk     // 6
          ret = read_blk(info, blk, buf)  // The content of buf is random
          info->dqi_free_blk = le32_to_cpu(dh->dqdh_next_free)  // random blk
    
     Step 5. chown bin f_c -> notify_change -> ext4_setattr -> dquot_transfer:
      dquot = dqget -> acquire_dquot -> ext4_acquire_dquot -> dquot_acquire ->
              commit_dqblk -> v2_write_dquot -> dq_insert_tree:
       do_insert_tree
        find_free_dqentry
         get_free_dqblk
          blk = info->dqi_free_blk    // If blk < 0 and blk is not an error
                                         code, it will be returned as dquot
    
      transfer_to[USRQUOTA] = dquot  // A random negative value
      __dquot_transfer(transfer_to)
       dquot_add_inodes(transfer_to[cnt])
        spin_lock(&dquot->dq_dqb_lock)  // page fault
    
    , which will lead to kernel page fault:
     Quota error (device sda): qtree_write_dquot: Error -8000 occurred
     while creating quota
     BUG: unable to handle page fault for address: ffffffffffffe120
     #PF: supervisor write access in kernel mode
     #PF: error_code(0x0002) - not-present page
     Oops: 0002 [#1] PREEMPT SMP
     CPU: 0 PID: 5974 Comm: chown Not tainted 6.0.0-rc1-00004
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
     RIP: 0010:_raw_spin_lock+0x3a/0x90
     Call Trace:
      dquot_add_inodes+0x28/0x270
      __dquot_transfer+0x377/0x840
      dquot_transfer+0xde/0x540
      ext4_setattr+0x405/0x14d0
      notify_change+0x68e/0x9f0
      chown_common+0x300/0x430
      __x64_sys_fchownat+0x29/0x40
    
    In order to avoid accessing invalid quota memory address, this patch adds
    block number checking of next/prev free block read from quota file.
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216372
    Fixes: 1da177e4c3f4152 ("Linux-2.6.12-rc2")
    CC: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220923134555.2623931-2-chengzhihao1@huawei.com
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b1a56beb6b8069422a10bb57f3abfa4f4871bc4
Author: Andri Yngvason <andri@yngvason.is>
Date:   Wed Sep 7 15:01:59 2022 +0000

    HID: multitouch: Add memory barriers
    
    commit be6e2b5734a425941fcdcdbd2a9337be498ce2cf upstream.
    
    This fixes broken atomic checks which cause a race between the
    release-timer and processing of hid input.
    
    I noticed that contacts were sometimes sticking, even with the "sticky
    fingers" quirk enabled. This fixes that problem.
    
    Cc: stable@vger.kernel.org
    Fixes: 9609827458c3 ("HID: multitouch: optimize the sticky fingers timer")
    Signed-off-by: Andri Yngvason <andri@yngvason.is>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20220907150159.2285460-1-andri@yngvason.is
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfe60d7641b024142be238f3d584ca6068d9d809
Author: Alexander Aring <aahringo@redhat.com>
Date:   Mon Aug 15 15:43:15 2022 -0400

    fs: dlm: handle -EBUSY first in lock arg validation
    
    commit 44637ca41d551d409a481117b07fa209b330fca9 upstream.
    
    During lock arg validation, first check for -EBUSY cases, then for
    -EINVAL cases. The -EINVAL checks look at lkb state variables
    which are not stable when an lkb is busy and would cause an
    -EBUSY result, e.g. lkb->lkb_grmode.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b2d8e4db40c44d4bfe7c8819888f6299f7c0a54
Author: Alexander Aring <aahringo@redhat.com>
Date:   Mon Aug 15 15:43:14 2022 -0400

    fs: dlm: fix race between test_bit() and queue_work()
    
    commit eef6ec9bf390e836a6c4029f3620fe49528aa1fe upstream.
    
    This patch fixes a race by using ls_cb_mutex around the bit
    operations and conditional code blocks for LSFL_CB_DELAY.
    
    The function dlm_callback_stop() expects to stop all callbacks and
    flush all currently queued onces. The set_bit() is not enough because
    there can still be queue_work() after the workqueue was flushed.
    To avoid queue_work() after set_bit(), surround both by ls_cb_mutex.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 057d5838c795cccde749536daad61f0db251d697
Author: Wenchao Chen <wenchao.chen@unisoc.com>
Date:   Tue Oct 11 18:49:35 2022 +0800

    mmc: sdhci-sprd: Fix minimum clock limit
    
    commit 6e141772e6465f937458b35ddcfd0a981b6f5280 upstream.
    
    The Spreadtrum controller supports 100KHz minimal clock rate, which means
    that the current value 400KHz is wrong.
    
    Unfortunately this has also lead to fail to initialize some cards, which
    are allowed to require 100KHz to work. So, let's fix the problem by
    changing the minimal supported clock rate to 100KHz.
    
    Signed-off-by: Wenchao Chen <wenchao.chen@unisoc.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: fb8bd90f83c4 ("mmc: sdhci-sprd: Add Spreadtrum's initial host controller")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20221011104935.10980-1-wenchao.chen666@gmail.com
    [Ulf: Clarified to commit-message]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 448fffc1aea6cc339f27ae25139a4f655c6dd020
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 17:08:29 2022 +0200

    can: kvaser_usb_leaf: Fix CAN state after restart
    
    commit 0be1a655fe68c8e6dcadbcbddb69cf2fb29881f5 upstream.
    
    can_restart() expects CMD_START_CHIP to set the error state to
    ERROR_ACTIVE as it calls netif_carrier_on() immediately afterwards.
    
    Otherwise the user may immediately trigger restart again and hit a
    BUG_ON() in can_restart().
    
    Fix kvaser_usb_leaf set_mode(CMD_START_CHIP) to set the expected state.
    
    Cc: stable@vger.kernel.org
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010150829.199676-5-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3776e09b361aee925e405ca8fdfe04f83c1d107
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 17:08:28 2022 +0200

    can: kvaser_usb_leaf: Fix TX queue out of sync after restart
    
    commit 455561fb618fde40558776b5b8435f9420f335db upstream.
    
    The TX queue seems to be implicitly flushed by the hardware during
    bus-off or bus-off recovery, but the driver does not reset the TX
    bookkeeping.
    
    Despite not resetting TX bookkeeping the driver still re-enables TX
    queue unconditionally, leading to "cannot find free context" /
    NETDEV_TX_BUSY errors if the TX queue was full at bus-off time.
    
    Fix that by resetting TX bookkeeping on CAN restart.
    
    Tested with 0bfd:0124 Kvaser Mini PCI Express 2xHS FW 4.18.778.
    
    Cc: stable@vger.kernel.org
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010150829.199676-4-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f8c88978da4ec7ed12354f357fe646ee4a9058e
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 17:08:26 2022 +0200

    can: kvaser_usb_leaf: Fix overread with an invalid command
    
    commit 1499ecaea9d2ba68d5e18d80573b4561a8dc4ee7 upstream.
    
    For command events read from the device,
    kvaser_usb_leaf_read_bulk_callback() verifies that cmd->len does not
    exceed the size of the received data, but the actual kvaser_cmd handlers
    will happily read any kvaser_cmd fields without checking for cmd->len.
    
    This can cause an overread if the last cmd in the buffer is shorter than
    expected for the command type (with cmd->len showing the actual short
    size).
    
    Maximum overread seems to be 22 bytes (CMD_LEAF_LOG_MESSAGE), some of
    which are delivered to userspace as-is.
    
    Fix that by verifying the length of command before handling it.
    
    This issue can only occur after RX URBs have been set up, i.e. the
    interface has been opened at least once.
    
    Cc: stable@vger.kernel.org
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010150829.199676-2-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d1cb7bfad21f4ec315cbe659a6fbd8ded5356e8
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Oct 10 17:08:27 2022 +0200

    can: kvaser_usb: Fix use of uninitialized completion
    
    commit cd7f30e174d09a02ca2afa5ef093fb0f0352e0d8 upstream.
    
    flush_comp is initialized when CMD_FLUSH_QUEUE is sent to the device and
    completed when the device sends CMD_FLUSH_QUEUE_RESP.
    
    This causes completion of uninitialized completion if the device sends
    CMD_FLUSH_QUEUE_RESP before CMD_FLUSH_QUEUE is ever sent (e.g. as a
    response to a flush by a previously bound driver, or a misbehaving
    device).
    
    Fix that by initializing flush_comp in kvaser_usb_init_one() like the
    other completions.
    
    This issue is only triggerable after RX URBs have been set up, i.e. the
    interface has been opened at least once.
    
    Cc: stable@vger.kernel.org
    Fixes: aec5fb2268b7 ("can: kvaser_usb: Add support for Kvaser USB hydra family")
    Tested-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Link: https://lore.kernel.org/all/20221010150829.199676-3-extja@kvaser.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b239a0993aa2d603c11bd94fa4a93670fb117d45
Author: Jean-Francois Le Fillatre <jflf_kernel@gmx.com>
Date:   Tue Sep 27 09:34:07 2022 +0200

    usb: add quirks for Lenovo OneLink+ Dock
    
    commit 37d49519b41405b08748392c6a7f193d9f77ecd2 upstream.
    
    The Lenovo OneLink+ Dock contains two VL812 USB3.0 controllers:
    17ef:1018 upstream
    17ef:1019 downstream
    
    These hubs suffer from two separate problems:
    
    1) After the host system was suspended and woken up, the hubs appear to
       be in a random state. Some downstream ports (both internal to the
       built-in audio and network controllers, and external to USB sockets)
       may no longer be functional. The exact list of disabled ports (if
       any) changes from wakeup to wakeup. Ports remain in that state until
       the dock is power-cycled, or until the laptop is rebooted.
    
       Wakeup sources connected to the hubs (keyboard, WoL on the integrated
       gigabit controller) will wake the system up from suspend, but they
       may no longer work after wakeup (and in that case will no longer work
       as wakeup source in a subsequent suspend-wakeup cycle).
    
       This issue appears in the logs with messages such as:
    
         usb 1-6.1-port4: cannot disable (err = -71)
         usb 1-6-port2: cannot disable (err = -71)
         usb 1-6.1: clear tt 1 (80c0) error -71
         usb 1-6-port4: cannot disable (err = -71)
         usb 1-6.4: PM: dpm_run_callback(): usb_dev_resume+0x0/0x10 [usbcore] returns -71
         usb 1-6.4: PM: failed to resume async: error -71
         usb 1-7: reset full-speed USB device number 5 using xhci_hcd
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: Cannot enable. Maybe the USB cable is bad?
         usb 1-6.1-port1: cannot disable (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: cannot reset (err = -71)
         usb 1-6.1-port1: Cannot enable. Maybe the USB cable is bad?
         usb 1-6.1-port1: cannot disable (err = -71)
    
    2) Some USB devices cannot be enumerated properly. So far I have only
       seen the issue with USB 3.0 devices. The same devices work without
       problem directly connected to the host system, to other systems or to
       other hubs (even when those hubs are connected to the OneLink+ dock).
    
       One very reliable reproducer is this USB 3.0 HDD enclosure:
       152d:9561 JMicron Technology Corp. / JMicron USA Technology Corp. Mobius
    
       I have seen it happen sporadically with other USB 3.0 enclosures,
       with controllers from different manufacturers, all self-powered.
    
       Typical messages in the logs:
    
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         usb 2-1.4: device not accepting address 6, error -62
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         usb 2-1.4: device not accepting address 7, error -62
         usb 2-1-port4: attempt power cycle
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         usb 2-1.4: device not accepting address 8, error -62
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         xhci_hcd 0000:00:14.0: Timeout while waiting for setup device command
         usb 2-1.4: device not accepting address 9, error -62
         usb 2-1-port4: unable to enumerate USB device
    
    Through trial and error, I found that the USB_QUIRK_RESET_RESUME solved
    the second issue. Further testing then uncovered the first issue. Test
    results are summarized in this table:
    
    =======================================================================================
    Settings                        USB2 hotplug    USB3 hotplug    State after waking up
    ---------------------------------------------------------------------------------------
    
    power/control=auto              works           fails           broken
    
    usbcore.autosuspend=-1          works           works           broken
    OR power/control=on
    
    power/control=auto              works (1)       works (1)       works
    and USB_QUIRK_RESET_RESUME
    
    power/control=on                works           works           works
    and USB_QUIRK_RESET_RESUME
    
    HUB_QUIRK_DISABLE_AUTOSUSPEND   works           works           works
    and USB_QUIRK_RESET_RESUME
    
    =======================================================================================
    
    In those results, the power/control settings are applied to both hubs,
    both on the USB2 and USB3 side, before each test.
    
    From those results, USB_QUIRK_RESET_RESUME is required to reset the hubs
    properly after a suspend-wakeup cycle, and the hubs must not autosuspend
    to work around the USB3 issue.
    
    A secondary effect of USB_QUIRK_RESET_RESUME is to prevent the hubs'
    upstream links from suspending (the downstream ports can still suspend).
    This secondary effect is used in results (1). It is enough to solve the
    USB3 problem.
    
    Setting USB_QUIRK_RESET_RESUME on those hubs is the smallest patch that
    solves both issues.
    
    Prior to creating this patch, I have used the USB_QUIRK_RESET_RESUME via
    the kernel command line for over a year without noticing any side
    effect.
    
    Thanks to Oliver Neukum @Suse for explanations of the operations of
    USB_QUIRK_RESET_RESUME, and requesting more testing.
    
    Signed-off-by: Jean-Francois Le Fillatre <jflf_kernel@gmx.com>
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/20220927073407.5672-1-jflf_kernel@gmx.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afbbf305dbaca2b98d7f0ae2ed4a6394645b99b7
Author: Eddie James <eajames@linux.ibm.com>
Date:   Thu Sep 15 14:57:19 2022 -0500

    iio: pressure: dps310: Reset chip after timeout
    
    commit 7b4ab4abcea4c0c10b25187bf2569e5a07e9a20c upstream.
    
    The DPS310 chip has been observed to get "stuck" such that pressure
    and temperature measurements are never indicated as "ready" in the
    MEAS_CFG register. The only solution is to reset the device and try
    again. In order to avoid continual failures, use a boolean flag to
    only try the reset after timeout once if errors persist.
    
    Fixes: ba6ec48e76bc ("iio: Add driver for Infineon DPS310")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220915195719.136812-3-eajames@linux.ibm.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9daadd1d101596a45dce7cabdf515bc343a3c976
Author: Eddie James <eajames@linux.ibm.com>
Date:   Thu Sep 15 14:57:18 2022 -0500

    iio: pressure: dps310: Refactor startup procedure
    
    commit c2329717bdd3fa62f8a2f3d8d85ad0bee4556bd7 upstream.
    
    Move the startup procedure into a function, and correct a missing
    check on the return code for writing the PRS_CFG register.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220915195719.136812-2-eajames@linux.ibm.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae49d80400e66505272fd2d8fcbf705002443c75
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Mon Sep 12 10:12:21 2022 +0200

    iio: adc: ad7923: fix channel readings for some variants
    
    commit f4f43f01cff2f29779343ade755191afd2581c77 upstream.
    
    Some of the supported devices have 4 or 2 LSB trailing bits that should
    not be taken into account. Hence we need to shift these bits out which
    fits perfectly on the scan type shift property. This change fixes both
    raw and buffered reads.
    
    Fixes: f2f7a449707e ("iio:adc:ad7923: Add support for the ad7904/ad7914/ad7924")
    Fixes: 851644a60d20 ("iio: adc: ad7923: Add support for the ad7908/ad7918/ad7928")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20220912081223.173584-2-nuno.sa@analog.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea4dcd3d6accf2bbe87314cad428c40ed2b31dae
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Aug 15 09:16:47 2022 +0000

    iio: ltc2497: Fix reading conversion results
    
    commit 7f4f1096d5921f5d90547596f9ce80e0b924f887 upstream.
    
    After the result of the previous conversion is read the chip
    automatically starts a new conversion and doesn't accept new i2c
    transfers until this conversion is completed which makes the function
    return failure.
    
    So add an early return iff the programming of the new address isn't
    needed. Note this will not fix the problem in general, but all cases
    that are currently used. Once this changes we get the failure back, but
    this can be addressed when the need arises.
    
    Fixes: 69548b7c2c4f ("iio: adc: ltc2497: split protocol independent part in a separate module ")
    Reported-by: Meng Li <Meng.Li@windriver.com>
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Denys Zagorui <dzagorui@cisco.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220815091647.1523532-1-dzagorui@cisco.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30e1bd0d3e66d06117110fdffafe11a74c6f13a4
Author: Michael Hennerich <michael.hennerich@analog.com>
Date:   Tue Sep 13 09:34:12 2022 +0200

    iio: dac: ad5593r: Fix i2c read protocol requirements
    
    commit 558a25f903b4af6361b7fbeea08a6446a0745653 upstream.
    
    For reliable operation across the full range of supported
    interface rates, the AD5593R needs a STOP condition between
    address write, and data read (like show in the datasheet Figure 40)
    so in turn i2c_smbus_read_word_swapped cannot be used.
    
    While at it, a simple helper was added to make the code simpler.
    
    Fixes: 56ca9db862bf ("iio: dac: Add support for the AD5592R/AD5593R ADCs/DACs")
    Signed-off-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220913073413.140475-2-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9312e04b6c6bc46354ecd0cc82052a2b3df0b529
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Mon Sep 26 11:36:29 2022 +0800

    cifs: Fix the error length of VALIDATE_NEGOTIATE_INFO message
    
    commit e98ecc6e94f4e6d21c06660b0f336df02836694f upstream.
    
    Commit d5c7076b772a ("smb3: add smb3.1.1 to default dialect list")
    extend the dialects from 3 to 4, but forget to decrease the extended
    length when specific the dialect, then the message length is larger
    than expected.
    
    This maybe leak some info through network because not initialize the
    message body.
    
    After apply this patch, the VALIDATE_NEGOTIATE_INFO message length is
    reduced from 28 bytes to 26 bytes.
    
    Fixes: d5c7076b772a ("smb3: add smb3.1.1 to default dialect list")
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Cc: <stable@vger.kernel.org>
    Acked-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reviewed-by: Tom Talpey <tom@talpey.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64f23e5430d35e5ab81bfd7067eca078bbd20425
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Tue Sep 20 14:32:02 2022 +1000

    cifs: destage dirty pages before re-reading them for cache=none
    
    commit bb44c31cdcac107344dd2fcc3bd0504a53575c51 upstream.
    
    This is the opposite case of kernel bugzilla 216301.
    If we mmap a file using cache=none and then proceed to update the mmapped
    area these updates are not reflected in a later pread() of that part of the
    file.
    To fix this we must first destage any dirty pages in the range before
    we allow the pread() to proceed.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reviewed-by: Enzo Matsumiya <ematsumiya@suse.de>
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50d3d895375cfce305850602ba21431a0e7bb4e5
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Thu Jul 28 10:40:14 2022 +0300

    mtd: rawnand: atmel: Unmap streaming DMA mappings
    
    commit 1161703c9bd664da5e3b2eb1a3bb40c210e026ea upstream.
    
    Every dma_map_single() call should have its dma_unmap_single() counterpart,
    because the DMA address space is a shared resource and one could render the
    machine unusable by consuming all DMA addresses.
    
    Link: https://lore.kernel.org/lkml/13c6c9a2-6db5-c3bf-349b-4c127ad3496a@axentia.se/
    Cc: stable@vger.kernel.org
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Acked-by: Alexander Dahl <ada@thorsis.com>
    Reported-by: Peter Rosin <peda@axentia.se>
    Tested-by: Alexander Dahl <ada@thorsis.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@collabora.com>
    Tested-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220728074014.145406-1-tudor.ambarus@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8eb44eeee59041ab3b18060f2ff2648f52f932b
Author: Saranya Gopal <saranya.gopal@intel.com>
Date:   Tue Oct 11 10:19:16 2022 +0530

    ALSA: hda/realtek: Add Intel Reference SSID to support headset keys
    
    commit 4f2e56a59b9947b3e698d3cabcb858765c12b1e8 upstream.
    
    This patch fixes the issue with 3.5mm headset keys
    on RPL-P platform.
    
    [ Rearranged the entry in SSID order by tiwai ]
    
    Signed-off-by: Saranya Gopal <saranya.gopal@intel.com>
    Signed-off-by: Ninad Naik <ninad.naik@intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20221011044916.2278867-1-saranya.gopal@intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4491fbd0a79c1aaf22c942e9de156f62b471ea24
Author: Luke D. Jones <luke@ljones.dev>
Date:   Mon Oct 10 20:03:47 2022 +1300

    ALSA: hda/realtek: Add quirk for ASUS GV601R laptop
    
    commit 2ea8e1297801f7b0220ebf6ae61a5b74ca83981e upstream.
    
    The ASUS ROG X16 (GV601R) series laptop has the same node-to-DAC pairs
    as early models and the G14, this includes bass speakers which are by
    default mapped incorrectly to the 0x06 node.
    
    Add a quirk to use the same DAC pairs as the G14.
    
    Signed-off-by: Luke D. Jones <luke@ljones.dev>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20221010070347.36883-1-luke@ljones.dev
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4285d06d1296755b28d5ac617b6319313b96f11f
Author: Luke D. Jones <luke@ljones.dev>
Date:   Mon Oct 10 19:57:02 2022 +1300

    ALSA: hda/realtek: Correct pin configs for ASUS G533Z
    
    commit 66ba7c88507344dee68ad1acbdb630473ab36114 upstream.
    
    The initial fix for ASUS G533Z was based on faulty information. This
    fixes the pincfg to values that have been verified with no existing
    module options or other hacks enabled.
    
    Enables headphone jack, and 5.1 surround.
    
    [ corrected the indent level by tiwai ]
    
    Fixes: bc2c23549ccd ("ALSA: hda/realtek: Add pincfg for ASUS G533Z HP jack")
    Signed-off-by: Luke D. Jones <luke@ljones.dev>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20221010065702.35190-1-luke@ljones.dev
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 768cd2cd1ae631bcfb22eb2e8bc1e9d4f7b77a50
Author: Callum Osmotherly <callum.osmotherly@gmail.com>
Date:   Wed Oct 5 17:44:16 2022 +1030

    ALSA: hda/realtek: remove ALC289_FIXUP_DUAL_SPK for Dell 5530
    
    commit 417b9c51f59734d852e47252476fadc293ad994a upstream.
    
    After some feedback from users with Dell Precision 5530 machines, this
    patch reverts the previous change to add ALC289_FIXUP_DUAL_SPK.
    While it improved the speaker output quality, it caused the headphone
    jack to have an audible "pop" sound when power saving was toggled.
    
    Fixes: 1885ff13d4c4 ("ALSA: hda/realtek: Enable 4-speaker output Dell Precision 5530 laptop")
    Signed-off-by: Callum Osmotherly <callum.osmotherly@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/Yz0uyN1zwZhnyRD6@piranha
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e29645fbaa659d50f64dcbeab0ed30df2953477
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Sep 30 12:01:29 2022 +0200

    ALSA: usb-audio: Fix NULL dererence at error path
    
    commit 568be8aaf8a535f79c4db76cabe17b035aa2584d upstream.
    
    At an error path to release URB buffers and contexts, the driver might
    hit a NULL dererence for u->urb pointer, when u->buffer_size has been
    already set but the actual URB allocation failed.
    
    Fix it by adding the NULL check of urb.  Also, make sure that
    buffer_size is cleared after the error path or the close.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Sabri N. Ferreiro <snferreiro1@gmail.com>
    Link: https://lore.kernel.org/r/CAKG+3NRjTey+fFfUEGwuxL-pi_=T4cUskYG9OzpzHytF+tzYng@mail.gmail.com
    Link: https://lore.kernel.org/r/20220930100129.19445-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc1d16d282bca421c6fc31de4b8fd412010f01bd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Sep 30 12:01:51 2022 +0200

    ALSA: usb-audio: Fix potential memory leaks
    
    commit 6382da0828995af87aa8b8bef28cc61aceb4aff3 upstream.
    
    When the driver hits -ENOMEM at allocating a URB or a buffer, it
    aborts and goes to the error path that releases the all previously
    allocated resources.  However, when -ENOMEM hits at the middle of the
    sync EP URB allocation loop, the partially allocated URBs might be
    left without released, because ep->nurbs is still zero at that point.
    
    Fix it by setting ep->nurbs at first, so that the error handler loops
    over the full URB list.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220930100151.19461-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef1658bc482c4ea8d5c55735fd8f4558d2bb5948
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 11 09:01:46 2022 +0200

    ALSA: rawmidi: Drop register_mutex in snd_rawmidi_free()
    
    commit a70aef7982b012e86dfd39fbb235e76a21ae778a upstream.
    
    The register_mutex taken around the dev_unregister callback call in
    snd_rawmidi_free() may potentially lead to a mutex deadlock, when OSS
    emulation and a hot unplug are involved.
    
    Since the mutex doesn't protect the actual race (as the registration
    itself is already protected by another means), let's drop it.
    
    Link: https://lore.kernel.org/r/CAB7eexJP7w1B0mVgDF0dQ+gWor7UdkiwPczmL7pn91xx8xpzOA@mail.gmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20221011070147.7611-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 026fcb6336d6e2917ec375964a36c72183d8fd21
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 11 09:01:47 2022 +0200

    ALSA: oss: Fix potential deadlock at unregistration
    
    commit 97d917879d7f92df09c3f21fd54609a8bcd654b2 upstream.
    
    We took sound_oss_mutex around the calls of unregister_sound_special()
    at unregistering OSS devices.  This may, however, lead to a deadlock,
    because we manage the card release via the card's device object, and
    the release may happen at unregister_sound_special() call -- which
    will take sound_oss_mutex again in turn.
    
    Although the deadlock might be fixed by relaxing the rawmidi mutex in
    the previous commit, it's safer to move unregister_sound_special()
    calls themselves out of the sound_oss_mutex, too.  The call is
    race-safe as the function has a spinlock protection by itself.
    
    Link: https://lore.kernel.org/r/CAB7eexJP7w1B0mVgDF0dQ+gWor7UdkiwPczmL7pn91xx8xpzOA@mail.gmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20221011070147.7611-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
