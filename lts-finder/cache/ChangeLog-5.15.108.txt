commit 3299fb36854fdc288bddc2c4d265f8a2e5105944
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Apr 20 12:13:57 2023 +0200

    Linux 5.15.108
    
    Link: https://lore.kernel.org/r/20230418120305.520719816@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20230419072156.965447596@linuxfoundation.org
    Tested-by: Chris Paterson (CIP) <chris.paterson2@renesas.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20230419093700.102927265@linuxfoundation.org
    Tested-by: Ron Economos <re@w6rz.net>
    Link: https://lore.kernel.org/r/20230419132034.475843587@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adef0cebea85e9b53f6837f8a39f23306a2272c6
Author: Xi Ruoyao <xry111@xry111.site>
Date:   Wed Sep 28 17:39:13 2022 +0800

    nvme-pci: avoid the deepest sleep state on ZHITAI TiPro5000 SSDs
    
    commit d5d3c100ac40dcb03959a6f1d2f0f13204c4f145 upstream.
    
    ZHITAI TiPro5000 SSDs has the same APST sleep problem as its cousin,
    TiPro7000.  The quirk for TiPro7000 has been added in
    commit 6b961bce50e4 ("nvme-pci: avoid the deepest sleep state on
    ZHITAI TiPro7000 SSDs"), use the same quirk for TiPro5000.
    
    The ASPT data from "nvme id-ctrl /dev/nvme1":
    
    vid       : 0x1e49
    ssvid     : 0x1e49
    sn        : ZTA21T0KA2227304LM
    mn        : ZHITAI TiPlus5000 1TB
    fr        : ZTA09139
    [...]
    ps    0 : mp:6.50W operational enlat:0 exlat:0 rrt:0 rrl:0
             rwt:0 rwl:0 idle_power:- active_power:-
    ps    1 : mp:5.80W operational enlat:0 exlat:0 rrt:1 rrl:1
             rwt:1 rwl:1 idle_power:- active_power:-
    ps    2 : mp:3.60W operational enlat:0 exlat:0 rrt:2 rrl:2
             rwt:2 rwl:2 idle_power:- active_power:-
    ps    3 : mp:0.0500W non-operational enlat:5000 exlat:10000 rrt:3 rrl:3
             rwt:3 rwl:3 idle_power:- active_power:-
    ps    4 : mp:0.0025W non-operational enlat:8000 exlat:45000 rrt:4 rrl:4
             rwt:4 rwl:4 idle_power:- active_power:-
    
    Reported-and-tested-by: Chang Feng <flukehn@gmail.com>
    Signed-off-by: Xi Ruoyao <xry111@xry111.site>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6897dfe2bb6efdb6956c8f71370c36cac60d7b3
Author: Yanteng Si <siyanteng01@gmail.com>
Date:   Tue Dec 21 17:16:46 2021 +0900

    counter: Add the necessary colons and indents to the comments of counter_compi
    
    commit 0032ca576a79946492194ae4860b462d32815c66 upstream.
    
    Since commit aaec1a0f76ec ("counter: Internalize sysfs interface code")
    introduce a warning as:
    
    linux-next/Documentation/driver-api/generic-counter:234: ./include/linux/counter.h:43: WARNING: Unexpected indentation.
    linux-next/Documentation/driver-api/generic-counter:234: ./include/linux/counter.h:45: WARNING: Block quote ends without a blank line; unexpected unindent.
    
    Add the necessary colons and indents.
    
    Fixes: aaec1a0f76ec ("counter: Internalize sysfs interface code")
    Signed-off-by: Yanteng Si <siyanteng@loongson.cn>
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Link: https://lore.kernel.org/r/26011e814d6eca02c7ebdbb92f171a49928a7e89.1640072891.git.vilhelm.gray@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa934784fb65fdd8cb68cf86dcc866535987d46a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Oct 4 22:51:57 2021 -0700

    counter: fix docum. build problems after filename change
    
    commit 7110acbdab462b8f2bc30e216c331cbd68c00af9 upstream.
    
    Fix documentation build warnings due to a source file being
    renamed.
    
    WARNING: kernel-doc '../scripts/kernel-doc -rst -enable-lineno -sphinx-version 1.8.5 -export ../drivers/counter/counter.c' failed with return code 2
    
    Error: Cannot open file ../drivers/counter/counter.c
    
    Fixes: aaec1a0f76ec ("counter: Internalize sysfs interface code")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: William Breathitt Gray <vilhelm.gray@gmail.com>
    Cc: linux-iio@vger.kernel.org
    Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: linux-doc@vger.kernel.org
    Acked-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Link: https://lore.kernel.org/r/20211005055157.22937-1-rdunlap@infradead.org
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cf28334002327fce1ff01c29f599ccb6c76c95a
Author: Valentin Schneider <vschneid@redhat.com>
Date:   Thu Jun 30 23:32:58 2022 +0100

    panic, kexec: make __crash_kexec() NMI safe
    
    commit 05c6257433b7212f07a7e53479a8ab038fc1666a upstream.
    
    Attempting to get a crash dump out of a debug PREEMPT_RT kernel via an NMI
    panic() doesn't work.  The cause of that lies in the PREEMPT_RT definition
    of mutex_trylock():
    
            if (IS_ENABLED(CONFIG_DEBUG_RT_MUTEXES) && WARN_ON_ONCE(!in_task()))
                    return 0;
    
    This prevents an nmi_panic() from executing the main body of
    __crash_kexec() which does the actual kexec into the kdump kernel.  The
    warning and return are explained by:
    
      6ce47fd961fa ("rtmutex: Warn if trylock is called from hard/softirq context")
      [...]
      The reasons for this are:
    
          1) There is a potential deadlock in the slowpath
    
          2) Another cpu which blocks on the rtmutex will boost the task
             which allegedly locked the rtmutex, but that cannot work
             because the hard/softirq context borrows the task context.
    
    Furthermore, grabbing the lock isn't NMI safe, so do away with kexec_mutex
    and replace it with an atomic variable.  This is somewhat overzealous as
    *some* callsites could keep using a mutex (e.g.  the sysfs-facing ones
    like crash_shrink_memory()), but this has the benefit of involving a
    single unified lock and preventing any future NMI-related surprises.
    
    Tested by triggering NMI panics via:
    
      $ echo 1 > /proc/sys/kernel/panic_on_unrecovered_nmi
      $ echo 1 > /proc/sys/kernel/unknown_nmi_panic
      $ echo 1 > /proc/sys/kernel/panic
    
      $ ipmitool power diag
    
    Link: https://lkml.kernel.org/r/20220630223258.4144112-3-vschneid@redhat.com
    Fixes: 6ce47fd961fa ("rtmutex: Warn if trylock is called from hard/softirq context")
    Signed-off-by: Valentin Schneider <vschneid@redhat.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: "Eric W . Biederman" <ebiederm@xmission.com>
    Cc: Juri Lelli <jlelli@redhat.com>
    Cc: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
    Cc: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Wen Yang <wenyang.linux@foxmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e1e511119b1859d97e5a68c267b4ff54f85da06
Author: Valentin Schneider <vschneid@redhat.com>
Date:   Thu Jun 30 23:32:57 2022 +0100

    kexec: turn all kexec_mutex acquisitions into trylocks
    
    commit 7bb5da0d490b2d836c5218f5186ee588d2145310 upstream.
    
    Patch series "kexec, panic: Making crash_kexec() NMI safe", v4.
    
    
    This patch (of 2):
    
    Most acquistions of kexec_mutex are done via mutex_trylock() - those were
    a direct "translation" from:
    
      8c5a1cf0ad3a ("kexec: use a mutex for locking rather than xchg()")
    
    there have however been two additions since then that use mutex_lock():
    crash_get_memory_size() and crash_shrink_memory().
    
    A later commit will replace said mutex with an atomic variable, and
    locking operations will become atomic_cmpxchg().  Rather than having those
    mutex_lock() become while (atomic_cmpxchg(&lock, 0, 1)), turn them into
    trylocks that can return -EBUSY on acquisition failure.
    
    This does halve the printable size of the crash kernel, but that's still
    neighbouring 2G for 32bit kernels which should be ample enough.
    
    Link: https://lkml.kernel.org/r/20220630223258.4144112-1-vschneid@redhat.com
    Link: https://lkml.kernel.org/r/20220630223258.4144112-2-vschneid@redhat.com
    Signed-off-by: Valentin Schneider <vschneid@redhat.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: "Eric W . Biederman" <ebiederm@xmission.com>
    Cc: Juri Lelli <jlelli@redhat.com>
    Cc: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
    Cc: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Baoquan He <bhe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Wen Yang <wenyang.linux@foxmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fc7a53fcc4ccb1d3dd217aedf5590eff9e72f14
Author: Duy Truong <dory@dory.moe>
Date:   Thu Apr 13 17:55:48 2023 -0700

    nvme-pci: add NVME_QUIRK_BOGUS_NID for T-FORCE Z330 SSD
    
    [ Upstream commit 74391b3e69855e7dd65a9cef36baf5fc1345affd ]
    
    Added a quirk to fix the TeamGroup T-Force Cardea Zero Z330 SSDs reporting
    duplicate NGUIDs.
    
    Signed-off-by: Duy Truong <dory@dory.moe>
    Cc: stable@vger.kernel.org
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa43e0591900304eb1364ed4fff239dbc6871aab
Author: Juraj Pecigos <kernel@juraj.dev>
Date:   Sun Mar 26 11:29:49 2023 +0200

    nvme-pci: mark Lexar NM760 as IGNORE_DEV_SUBNQN
    
    [ Upstream commit 1231363aec86704a6b0467a12e3ca7bdf890e01d ]
    
    A system with more than one of these SSDs will only have one usable.
    The kernel fails to detect more than one nvme device due to duplicate
    cntlids.
    
    before:
    [    9.395229] nvme 0000:01:00.0: platform quirk: setting simple suspend
    [    9.395262] nvme nvme0: pci function 0000:01:00.0
    [    9.395282] nvme 0000:03:00.0: platform quirk: setting simple suspend
    [    9.395305] nvme nvme1: pci function 0000:03:00.0
    [    9.409873] nvme nvme0: Duplicate cntlid 1 with nvme1, subsys nqn.2022-07.com.siliconmotion:nvm-subsystem-sn-                    , rejecting
    [    9.409982] nvme nvme0: Removing after probe failure status: -22
    [    9.427487] nvme nvme1: allocated 64 MiB host memory buffer.
    [    9.445088] nvme nvme1: 16/0/0 default/read/poll queues
    [    9.449898] nvme nvme1: Ignoring bogus Namespace Identifiers
    
    after:
    [    1.161890] nvme 0000:01:00.0: platform quirk: setting simple suspend
    [    1.162660] nvme nvme0: pci function 0000:01:00.0
    [    1.162684] nvme 0000:03:00.0: platform quirk: setting simple suspend
    [    1.162707] nvme nvme1: pci function 0000:03:00.0
    [    1.191354] nvme nvme0: allocated 64 MiB host memory buffer.
    [    1.193378] nvme nvme1: allocated 64 MiB host memory buffer.
    [    1.211044] nvme nvme1: 16/0/0 default/read/poll queues
    [    1.211080] nvme nvme0: 16/0/0 default/read/poll queues
    [    1.216145] nvme nvme0: Ignoring bogus Namespace Identifiers
    [    1.216261] nvme nvme1: Ignoring bogus Namespace Identifiers
    
    Adding the NVME_QUIRK_IGNORE_DEV_SUBNQN quirk to resolves the issue.
    
    Signed-off-by: Juraj Pecigos <kernel@juraj.dev>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: 74391b3e6985 ("nvme-pci: add NVME_QUIRK_BOGUS_NID for T-FORCE Z330 SSD")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a814fc9e6e590d21b30938f64a48c12a68258848
Author: Abhijit <abhijit@abhijittomar.com>
Date:   Mon Oct 10 10:30:05 2022 +0200

    nvme-pci: add NVME_QUIRK_BOGUS_NID for Lexar NM760
    
    [ Upstream commit 80b2624094c8d369a3c6eab515e8f1564d2e5db2 ]
    
    Add a quirk to fix Lexar NM760 SSD drives reporting duplicate nsids.
    
    Signed-off-by: Abhijit <abhijit@abhijittomar.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: 74391b3e6985 ("nvme-pci: add NVME_QUIRK_BOGUS_NID for T-FORCE Z330 SSD")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 972e06d09e867ef07ee69fb0f606ca1cb0fc738c
Author: Shyamin Ayesh <me@shyamin.com>
Date:   Fri Aug 26 09:51:40 2022 -0700

    nvme-pci: add NVME_QUIRK_BOGUS_NID for Lexar NM610
    
    [ Upstream commit 200dccd07df21b504a2168960059f0a971bf415d ]
    
    Lexar NM610 reports bogus eui64 values that appear to be the same across
    all drives. Quirk them out so they are not marked as "non globally unique"
    duplicates.
    
    Signed-off-by: Shyamin Ayesh <me@shyamin.com>
    [patch formatting]
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: 74391b3e6985 ("nvme-pci: add NVME_QUIRK_BOGUS_NID for T-FORCE Z330 SSD")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf773832139b2355cab7ad2e9f3bff62f7cb553d
Author: Tobias Gruetzmacher <tobias-git@23.gs>
Date:   Fri Jul 22 19:05:57 2022 +0200

    nvme-pci: Crucial P2 has bogus namespace ids
    
    [ Upstream commit d6c52fa3e955b97f8eb3ac824d2a3e0af147b3ce ]
    
    This adds a quirk for the Crucial P2.
    
    Signed-off-by: Tobias Gruetzmacher <tobias-git@23.gs>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: 74391b3e6985 ("nvme-pci: add NVME_QUIRK_BOGUS_NID for T-FORCE Z330 SSD")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a19b9a49aea38674b79b6a97de1d5cea77bdcbf
Author: Ning Wang <ningwang35@outlook.com>
Date:   Sun Jun 5 20:36:48 2022 +0000

    nvme-pci: avoid the deepest sleep state on ZHITAI TiPro7000 SSDs
    
    [ Upstream commit 6b961bce50e489186232cef51036ddb8d672bc3b ]
    
    When ZHITAI TiPro7000 SSDs entered deepest power state(ps4)
    it has the same APST sleep problem as Kingston A2000.
    by chance the system crashes and displays the same dmesg info:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=195039#c65
    
    As the Archlinux wiki suggest (enlat + exlat) < 25000 is fine
    and my testing shows no system crashes ever since.
    Therefore disabling the deepest power state will fix the APST sleep issue.
    
    https://wiki.archlinux.org/title/Solid_state_drive/NVMe
    
    This is the APST data from 'nvme id-ctrl /dev/nvme1'
    
    NVME Identify Controller:
    vid       : 0x1e49
    ssvid     : 0x1e49
    sn        : [...]
    mn        : ZHITAI TiPro7000 1TB
    fr        : ZTA32F3Y
    [...]
    ps    0 : mp:3.50W operational enlat:5 exlat:5 rrt:0 rrl:0
              rwt:0 rwl:0 idle_power:- active_power:-
    ps    1 : mp:3.30W operational enlat:50 exlat:100 rrt:1 rrl:1
              rwt:1 rwl:1 idle_power:- active_power:-
    ps    2 : mp:2.80W operational enlat:50 exlat:200 rrt:2 rrl:2
              rwt:2 rwl:2 idle_power:- active_power:-
    ps    3 : mp:0.1500W non-operational enlat:500 exlat:5000 rrt:3 rrl:3
              rwt:3 rwl:3 idle_power:- active_power:-
    ps    4 : mp:0.0200W non-operational enlat:2000 exlat:60000 rrt:4 rrl:4
              rwt:4 rwl:4 idle_power:- active_power:-
    
    Signed-off-by: Ning Wang <ningwang35@outlook.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: 74391b3e6985 ("nvme-pci: add NVME_QUIRK_BOGUS_NID for T-FORCE Z330 SSD")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65f5dc5dff293534179b15f22bdc53e7c10d1e54
Author: Stefan Reiter <stefan@pimaker.at>
Date:   Mon Jun 6 13:01:29 2022 +0000

    nvme-pci: add NVME_QUIRK_BOGUS_NID for ADATA XPG GAMMIX S50
    
    [ Upstream commit 3765fad508964f433ac111c127d6bedd19bdfa04 ]
    
    ADATA XPG GAMMIX S50 drives report bogus eui64 values that appear to
    be the same across drives in one system. Quirk them out so they are
    not marked as "non globally unique" duplicates.
    
    Signed-off-by: Stefan Reiter <stefan@pimaker.at>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: 74391b3e6985 ("nvme-pci: add NVME_QUIRK_BOGUS_NID for T-FORCE Z330 SSD")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3daaa5f7aae238ed5295e6258d525bf6499373af
Author: Gregor Herburger <gregor.herburger@tq-group.com>
Date:   Thu Apr 13 11:37:37 2023 +0200

    i2c: ocores: generate stop condition after timeout in polling mode
    
    [ Upstream commit f8160d3b35fc94491bb0cb974dbda310ef96c0e2 ]
    
    In polling mode, no stop condition is generated after a timeout. This
    causes SCL to remain low and thereby block the bus. If this happens
    during a transfer it can cause slaves to misinterpret the subsequent
    transfer and return wrong values.
    
    To solve this, pass the ETIMEDOUT error up from ocores_process_polling()
    instead of setting STATE_ERROR directly. The caller is adjusted to call
    ocores_process_timeout() on error both in polling and in IRQ mode, which
    will set STATE_ERROR and generate a stop condition.
    
    Fixes: 69c8c0c0efa8 ("i2c: ocores: add polling interface")
    Signed-off-by: Gregor Herburger <gregor.herburger@tq-group.com>
    Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Acked-by: Peter Korsgaard <peter@korsgaard.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Federico Vaga <federico.vaga@cern.ch>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0af686415ca2f4421b04f747311be5ee494185cc
Author: Matija Glavinic Pecotic <matija.glavinic-pecotic.ext@nokia.com>
Date:   Thu Apr 6 08:26:52 2023 +0200

    x86/rtc: Remove __init for runtime functions
    
    [ Upstream commit 775d3c514c5b2763a50ab7839026d7561795924d ]
    
    set_rtc_noop(), get_rtc_noop() are after booting, therefore their __init
    annotation is wrong.
    
    A crash was observed on an x86 platform where CMOS RTC is unused and
    disabled via device tree. set_rtc_noop() was invoked from ntp:
    sync_hw_clock(), although CONFIG_RTC_SYSTOHC=n, however sync_cmos_clock()
    doesn't honour that.
    
      Workqueue: events_power_efficient sync_hw_clock
      RIP: 0010:set_rtc_noop
      Call Trace:
       update_persistent_clock64
       sync_hw_clock
    
    Fix this by dropping the __init annotation from set/get_rtc_noop().
    
    Fixes: c311ed6183f4 ("x86/init: Allow DT configured systems to disable RTC at boot time")
    Signed-off-by: Matija Glavinic Pecotic <matija.glavinic-pecotic.ext@nokia.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/59f7ceb1-446b-1d3d-0bc8-1f0ee94b1e18@nokia.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b11ff3ef4d096e5bd5c413ed9e1a337d10fce536
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Tue Apr 11 11:06:11 2023 +0200

    sched/fair: Fix imbalance overflow
    
    [ Upstream commit 91dcf1e8068e9a8823e419a7a34ff4341275fb70 ]
    
    When local group is fully busy but its average load is above system load,
    computing the imbalance will overflow and local group is not the best
    target for pulling this load.
    
    Fixes: 0b0695f2b34a ("sched/fair: Rework load_balance()")
    Reported-by: Tingjia Cao <tjcao980311@gmail.com>
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Tingjia Cao <tjcao980311@gmail.com>
    Link: https://lore.kernel.org/lkml/CABcWv9_DAhVBOq2=W=2ypKE9dKM5s2DvoV8-U0+GDwwuKZ89jQ@mail.gmail.com/T/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90e3dc5101060b45470132775ddde44c64167dfb
Author: zgpeng <zgpeng.linux@gmail.com>
Date:   Wed Apr 6 17:57:05 2022 +0800

    sched/fair: Move calculate of avg_load to a better location
    
    [ Upstream commit 06354900787f25bf5be3c07a68e3cdbc5bf0fa69 ]
    
    In calculate_imbalance function, when the value of local->avg_load is
    greater than or equal to busiest->avg_load, the calculated sds->avg_load is
    not used. So this calculation can be placed in a more appropriate position.
    
    Signed-off-by: zgpeng <zgpeng@tencent.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Samuel Liao <samuelliao@tencent.com>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Link: https://lore.kernel.org/r/1649239025-10010-1-git-send-email-zgpeng@tencent.com
    Stable-dep-of: 91dcf1e8068e ("sched/fair: Fix imbalance overflow")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d1353781bbaa227371293f9a157bf58ec453cdf
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Tue Apr 4 09:44:33 2023 +0530

    powerpc/papr_scm: Update the NUMA distance table for the target node
    
    [ Upstream commit b277fc793daf258877b4c0744b52f69d6e6ba22e ]
    
    Platform device helper routines won't update the NUMA distance table
    while creating a platform device, even if the device is present on a
    NUMA node that doesn't have memory or CPU. This is especially true for
    pmem devices. If the target node of the pmem device is not online, we
    find the nearest online node to the device and associate the pmem device
    with that online node. To find the nearest online node, we should have
    the numa distance table updated correctly. Update the distance
    information during the device probe.
    
    For a papr scm device on NUMA node 3 distance_lookup_table value for
    distance_ref_points_depth = 2 before and after fix is below:
    
    Before fix:
      node 3 distance depth 0  - 0
      node 3 distance depth 1  - 0
      node 4 distance depth 0  - 4
      node 4 distance depth 1  - 2
      node 5 distance depth 0  - 5
      node 5 distance depth 1  - 1
    
    After fix
      node 3 distance depth 0  - 3
      node 3 distance depth 1  - 1
      node 4 distance depth 0  - 4
      node 4 distance depth 1  - 2
      node 5 distance depth 0  - 5
      node 5 distance depth 1  - 1
    
    Without the fix, the nearest numa node to the pmem device (NUMA node 3)
    will be picked as 4. After the fix, we get the correct numa node which
    is 5.
    
    Fixes: da1115fdbd6e ("powerpc/nvdimm: Pick nearby online node if the device node is not online")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230404041433.1781804-1-aneesh.kumar@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b031f5983f86762ac7318f71e9aa630b15a913b
Author: ZhaoLong Wang <wangzhaolong1@huawei.com>
Date:   Sat Mar 4 09:41:41 2023 +0800

    ubi: Fix deadlock caused by recursively holding work_sem
    
    [ Upstream commit f773f0a331d6c41733b17bebbc1b6cae12e016f5 ]
    
    During the processing of the bgt, if the sync_erase() return -EBUSY
    or some other error code in __erase_worker(),schedule_erase() called
    again lead to the down_read(ubi->work_sem) hold twice and may get
    block by down_write(ubi->work_sem) in ubi_update_fastmap(),
    which cause deadlock.
    
              ubi bgt                        other task
     do_work
      down_read(&ubi->work_sem)          ubi_update_fastmap
      erase_worker                         # Blocked by down_read
       __erase_worker                      down_write(&ubi->work_sem)
        schedule_erase
         schedule_ubi_work
          down_read(&ubi->work_sem)
    
    Fix this by changing input parameter @nested of the schedule_erase() to
    'true' to avoid recursively acquiring the down_read(&ubi->work_sem).
    
    Also, fix the incorrect comment about @nested parameter of the
    schedule_erase() because when down_write(ubi->work_sem) is held, the
    @nested is also need be true.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217093
    Fixes: 2e8f08deabbc ("ubi: Fix races around ubi_refill_pools()")
    Signed-off-by: ZhaoLong Wang <wangzhaolong1@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85d7a7044b759d865d10395a357632af00de5867
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Mar 6 09:33:08 2023 +0800

    ubi: Fix failure attaching when vid_hdr offset equals to (sub)page size
    
    commit 1e020e1b96afdecd20680b5b5be2a6ffc3d27628 upstream.
    
    Following process will make ubi attaching failed since commit
    1b42b1a36fc946 ("ubi: ensure that VID header offset ... size"):
    
    ID="0xec,0xa1,0x00,0x15" # 128M 128KB 2KB
    modprobe nandsim id_bytes=$ID
    flash_eraseall /dev/mtd0
    modprobe ubi mtd="0,2048"  # set vid_hdr offset as 2048 (one page)
    (dmesg):
      ubi0 error: ubi_attach_mtd_dev [ubi]: VID header offset 2048 too large.
      UBI error: cannot attach mtd0
      UBI error: cannot initialize UBI, error -22
    
    Rework original solution, the key point is making sure
    'vid_hdr_shift + UBI_VID_HDR_SIZE < ubi->vid_hdr_alsize',
    so we should check vid_hdr_shift rather not vid_hdr_offset.
    Then, ubi still support (sub)page aligined VID header offset.
    
    Fixes: 1b42b1a36fc946 ("ubi: ensure that VID header offset ... size")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Tested-by: Nicolas Schichan <nschichan@freebox.fr>
    Tested-by: Miquel Raynal <miquel.raynal@bootlin.com> # v5.10, v4.19
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0b4a4086cf27240fc621a560da9735159049dcc
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Apr 11 22:42:10 2023 +0200

    mptcp: stricter state check in mptcp_worker
    
    commit d6a0443733434408f2cbd4c53fea6910599bab9e upstream.
    
    As reported by Christoph, the mptcp protocol can run the
    worker when the relevant msk socket is in an unexpected state:
    
    connect()
    // incoming reset + fastclose
    // the mptcp worker is scheduled
    mptcp_disconnect()
    // msk is now CLOSED
    listen()
    mptcp_worker()
    
    Leading to the following splat:
    
    divide error: 0000 [#1] PREEMPT SMP
    CPU: 1 PID: 21 Comm: kworker/1:0 Not tainted 6.3.0-rc1-gde5e8fd0123c #11
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
    Workqueue: events mptcp_worker
    RIP: 0010:__tcp_select_window+0x22c/0x4b0 net/ipv4/tcp_output.c:3018
    RSP: 0018:ffffc900000b3c98 EFLAGS: 00010293
    RAX: 000000000000ffd7 RBX: 000000000000ffd7 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffffff8214ce97 RDI: 0000000000000004
    RBP: 000000000000ffd7 R08: 0000000000000004 R09: 0000000000010000
    R10: 000000000000ffd7 R11: ffff888005afa148 R12: 000000000000ffd7
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff88803ed00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000405270 CR3: 000000003011e006 CR4: 0000000000370ee0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     tcp_select_window net/ipv4/tcp_output.c:262 [inline]
     __tcp_transmit_skb+0x356/0x1280 net/ipv4/tcp_output.c:1345
     tcp_transmit_skb net/ipv4/tcp_output.c:1417 [inline]
     tcp_send_active_reset+0x13e/0x320 net/ipv4/tcp_output.c:3459
     mptcp_check_fastclose net/mptcp/protocol.c:2530 [inline]
     mptcp_worker+0x6c7/0x800 net/mptcp/protocol.c:2705
     process_one_work+0x3bd/0x950 kernel/workqueue.c:2390
     worker_thread+0x5b/0x610 kernel/workqueue.c:2537
     kthread+0x138/0x170 kernel/kthread.c:376
     ret_from_fork+0x2c/0x50 arch/x86/entry/entry_64.S:308
     </TASK>
    
    This change addresses the issue explicitly checking for bad states
    before running the mptcp worker.
    
    Fixes: e16163b6e2b7 ("mptcp: refactor shutdown and close")
    Cc: stable@vger.kernel.org
    Reported-by: Christoph Paasch <cpaasch@apple.com>
    Link: https://github.com/multipath-tcp/mptcp_net-next/issues/374
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Tested-by: Christoph Paasch <cpaasch@apple.com>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 925e1a510a2e15a4c0cab958b297c7f4d4c9b992
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Apr 11 22:42:09 2023 +0200

    mptcp: use mptcp_schedule_work instead of open-coding it
    
    commit a5cb752b125766524c921faab1a45cc96065b0a7 upstream.
    
    Beyond reducing code duplication this also avoids scheduling
    the mptcp_worker on a closed socket on some edge scenarios.
    
    The addressed issue is actually older than the blamed commit
    below, but this fix needs it as a pre-requisite.
    
    Fixes: ba8f48f7a4d7 ("mptcp: introduce mptcp_schedule_work")
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4f2a1d491e9d19a660a6100dfcefa47fbed3134
Author: Waiman Long <longman@redhat.com>
Date:   Tue Apr 11 09:35:57 2023 -0400

    cgroup/cpuset: Wake up cpuset_attach_wq tasks in cpuset_cancel_attach()
    
    commit ba9182a89626d5f83c2ee4594f55cb9c1e60f0e2 upstream.
    
    After a successful cpuset_can_attach() call which increments the
    attach_in_progress flag, either cpuset_cancel_attach() or cpuset_attach()
    will be called later. In cpuset_attach(), tasks in cpuset_attach_wq,
    if present, will be woken up at the end. That is not the case in
    cpuset_cancel_attach(). So missed wakeup is possible if the attach
    operation is somehow cancelled. Fix that by doing the wakeup in
    cpuset_cancel_attach() as well.
    
    Fixes: e44193d39e8d ("cpuset: let hotplug propagation work wait for task attaching")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Cc: stable@vger.kernel.org # v3.11+
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19c7f9329bdb6a7696dfa40467dbc1d7b9b76eca
Author: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
Date:   Wed Mar 29 22:58:59 2023 +0530

    x86/PCI: Add quirk for AMD XHCI controller that loses MSI-X state in D3hot
    
    commit f195fc1e9715ba826c3b62d58038f760f66a4fe9 upstream.
    
    The AMD [1022:15b8] USB controller loses some internal functional MSI-X
    context when transitioning from D0 to D3hot. BIOS normally traps D0->D3hot
    and D3hot->D0 transitions so it can save and restore that internal context,
    but some firmware in the field can't do this because it fails to clear the
    AMD_15B8_RCC_DEV2_EPF0_STRAP2 NO_SOFT_RESET bit.
    
    Clear AMD_15B8_RCC_DEV2_EPF0_STRAP2 NO_SOFT_RESET bit before USB controller
    initialization during boot.
    
    Link: https://lore.kernel.org/linux-usb/Y%2Fz9GdHjPyF2rNG3@glanzmann.de/T/#u
    Link: https://lore.kernel.org/r/20230329172859.699743-1-Basavaraj.Natikar@amd.com
    Reported-by: Thomas Glanzmann <thomas@glanzmann.de>
    Tested-by: Thomas Glanzmann <thomas@glanzmann.de>
    Signed-off-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05143d90ac90b7abc6692285895a1ef460e008ee
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Tue Apr 4 21:23:42 2023 +0200

    scsi: ses: Handle enclosure with just a primary component gracefully
    
    commit c8e22b7a1694bb8d025ea636816472739d859145 upstream.
    
    This reverts commit 3fe97ff3d949 ("scsi: ses: Don't attach if enclosure
    has no components") and introduces proper handling of case where there are
    no detected secondary components, but primary component (enumerated in
    num_enclosures) does exist. That fix was originally proposed by Ding Hui
    <dinghui@sangfor.com.cn>.
    
    Completely ignoring devices that have one primary enclosure and no
    secondary one results in ses_intf_add() bailing completely
    
            scsi 2:0:0:254: enclosure has no enumerated components
            scsi 2:0:0:254: Failed to bind enclosure -12ven in valid configurations such
    
    even on valid configurations with 1 primary and 0 secondary enclosures as
    below:
    
            # sg_ses /dev/sg0
              3PARdata  SES               3321
            Supported diagnostic pages:
              Supported Diagnostic Pages [sdp] [0x0]
              Configuration (SES) [cf] [0x1]
              Short Enclosure Status (SES) [ses] [0x8]
            # sg_ses -p cf /dev/sg0
              3PARdata  SES               3321
            Configuration diagnostic page:
              number of secondary subenclosures: 0
              generation code: 0x0
              enclosure descriptor list
                Subenclosure identifier: 0 [primary]
                  relative ES process id: 0, number of ES processes: 1
                  number of type descriptor headers: 1
                  enclosure logical identifier (hex): 20000002ac02068d
                  enclosure vendor: 3PARdata  product: VV                rev: 3321
              type descriptor header and text list
                Element type: Unspecified, subenclosure id: 0
                  number of possible elements: 1
    
    The changelog for the original fix follows
    
    =====
    We can get a crash when disconnecting the iSCSI session,
    the call trace like this:
    
      [ffff00002a00fb70] kfree at ffff00000830e224
      [ffff00002a00fba0] ses_intf_remove at ffff000001f200e4
      [ffff00002a00fbd0] device_del at ffff0000086b6a98
      [ffff00002a00fc50] device_unregister at ffff0000086b6d58
      [ffff00002a00fc70] __scsi_remove_device at ffff00000870608c
      [ffff00002a00fca0] scsi_remove_device at ffff000008706134
      [ffff00002a00fcc0] __scsi_remove_target at ffff0000087062e4
      [ffff00002a00fd10] scsi_remove_target at ffff0000087064c0
      [ffff00002a00fd70] __iscsi_unbind_session at ffff000001c872c4
      [ffff00002a00fdb0] process_one_work at ffff00000810f35c
      [ffff00002a00fe00] worker_thread at ffff00000810f648
      [ffff00002a00fe70] kthread at ffff000008116e98
    
    In ses_intf_add, components count could be 0, and kcalloc 0 size scomp,
    but not saved in edev->component[i].scratch
    
    In this situation, edev->component[0].scratch is an invalid pointer,
    when kfree it in ses_intf_remove_enclosure, a crash like above would happen
    The call trace also could be other random cases when kfree cannot catch
    the invalid pointer
    
    We should not use edev->component[] array when the components count is 0
    We also need check index when use edev->component[] array in
    ses_enclosure_data_process
    =====
    
    Reported-by: Michal Kolar <mich.k@seznam.cz>
    Originally-by: Ding Hui <dinghui@sangfor.com.cn>
    Cc: stable@vger.kernel.org
    Fixes: 3fe97ff3d949 ("scsi: ses: Don't attach if enclosure has no components")
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Link: https://lore.kernel.org/r/nycvar.YFH.7.76.2304042122270.29760@cbobk.fhfr.pm
    Tested-by: Michal Kolar <mich.k@seznam.cz>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aaae6d3031506a754935bc5d89e1055e6f86493e
Author: Radu Pirea (OSS) <radu-nicolae.pirea@oss.nxp.com>
Date:   Thu Apr 6 12:59:53 2023 +0300

    net: phy: nxp-c45-tja11xx: fix unsigned long multiplication overflow
    
    commit bdaaecc127d471c422ee9e994978617c8aa79e1e upstream.
    
    Any multiplication between GENMASK(31, 0) and a number bigger than 1
    will be truncated because of the overflow, if the size of unsigned long
    is 32 bits.
    
    Replaced GENMASK with GENMASK_ULL to make sure that multiplication will
    be between 64 bits values.
    
    Cc: <stable@vger.kernel.org> # 5.15+
    Fixes: 514def5dd339 ("phy: nxp-c45-tja11xx: add timestamping support")
    Signed-off-by: Radu Pirea (OSS) <radu-nicolae.pirea@oss.nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20230406095953.75622-1-radu-nicolae.pirea@oss.nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1ca14361d49563029e3a8e163bfce30b13a9765
Author: Radu Pirea (OSS) <radu-nicolae.pirea@oss.nxp.com>
Date:   Thu Apr 6 12:59:04 2023 +0300

    net: phy: nxp-c45-tja11xx: add remove callback
    
    commit a4506722dc39ca840593f14e3faa4c9ba9408211 upstream.
    
    Unregister PTP clock when the driver is removed.
    Purge the RX and TX skb queues.
    
    Fixes: 514def5dd339 ("phy: nxp-c45-tja11xx: add timestamping support")
    CC: stable@vger.kernel.org # 5.15+
    Signed-off-by: Radu Pirea (OSS) <radu-nicolae.pirea@oss.nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20230406095904.75456-1-radu-nicolae.pirea@oss.nxp.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0359e505bcd76f30cde61529e5c0251692d71abb
Author: Ivan Bornyakov <i.bornyakov@metrotek.ru>
Date:   Thu Apr 6 16:08:32 2023 +0300

    net: sfp: initialize sfp->i2c_block_size at sfp allocation
    
    commit 813c2dd78618f108fdcf9cd726ea90f081ee2881 upstream.
    
    sfp->i2c_block_size is initialized at SFP module insertion in
    sfp_sm_mod_probe(). Because of that, if SFP module was never inserted
    since boot, sfp_read() call will lead to zero-length I2C read attempt,
    and not all I2C controllers are happy with zero-length reads.
    
    One way to issue sfp_read() on empty SFP cage is to execute ethtool -m.
    If SFP module was never plugged since boot, there will be a zero-length
    I2C read attempt.
    
      # ethtool -m xge0
      i2c i2c-3: adapter quirk: no zero length (addr 0x0050, size 0, read)
      Cannot get Module EEPROM data: Operation not supported
    
    If SFP module was plugged then removed at least once,
    sfp->i2c_block_size will be initialized and ethtool -m will fail with
    different exit code and without I2C error
    
      # ethtool -m xge0
      Cannot get Module EEPROM data: Remote I/O error
    
    Fix this by initializing sfp->i2_block_size at struct sfp allocation
    stage so no wild sfp_read() could issue zero-length I2C read.
    
    Signed-off-by: Ivan Bornyakov <i.bornyakov@metrotek.ru>
    Fixes: 0d035bed2a4a ("net: sfp: VSOL V2801F / CarlitoxxPro CPGOS03-0490 v2.0 workaround")
    Cc: stable@vger.kernel.org
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a42f565c0e968227e636655b53e64f7a7a796b46
Author: Mathis Salmen <mathis.salmen@matsal.de>
Date:   Thu Apr 6 12:11:31 2023 +0200

    riscv: add icache flush for nommu sigreturn trampoline
    
    commit 8d736482749f6d350892ef83a7a11d43cd49981e upstream.
    
    In a NOMMU kernel, sigreturn trampolines are generated on the user
    stack by setup_rt_frame. Currently, these trampolines are not instruction
    fenced, thus their visibility to ifetch is not guaranteed.
    
    This patch adds a flush_icache_range in setup_rt_frame to fix this
    problem.
    
    Signed-off-by: Mathis Salmen <mathis.salmen@matsal.de>
    Fixes: 6bd33e1ece52 ("riscv: add nommu support")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230406101130.82304-1-mathis.salmen@matsal.de
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6eeb1cba4c9dc47656ea328afa34953c28783d8c
Author: Min Li <lm0963hack@gmail.com>
Date:   Tue Mar 28 17:36:27 2023 +0800

    drm/i915: fix race condition UAF in i915_perf_add_config_ioctl
    
    [ Upstream commit dc30c011469165d57af9adac5baff7d767d20e5c ]
    
    Userspace can guess the id value and try to race oa_config object creation
    with config remove, resulting in a use-after-free if we dereference the
    object after unlocking the metrics_lock.  For that reason, unlocking the
    metrics_lock must be done after we are done dereferencing the object.
    
    Signed-off-by: Min Li <lm0963hack@gmail.com>
    Fixes: f89823c21224 ("drm/i915/perf: Implement I915_PERF_ADD/REMOVE_CONFIG interface")
    Cc: <stable@vger.kernel.org> # v4.14+
    Reviewed-by: Andi Shyti <andi.shyti@linux.intel.com>
    Reviewed-by: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230328093627.5067-1-lm0963hack@gmail.com
    [tursulin: Manually added stable tag.]
    (cherry picked from commit 49f6f6483b652108bcb73accd0204a464b922395)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b344cf6aea0a69c00e19efdc6e02c6d5aae1a23
Author: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
Date:   Thu Jul 7 12:30:01 2022 -0700

    i915/perf: Replace DRM_DEBUG with driver specific drm_dbg call
    
    [ Upstream commit 2fec539112e89255b6a47f566e21d99937fada7b ]
    
    DRM_DEBUG is not the right debug call to use in i915 OA, replace it with
    driver specific drm_dbg() call (Matt).
    
    Signed-off-by: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
    Acked-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
    Reviewed-by: Andrzej Hajda <andrzej.hajda@intel.com>
    Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220707193002.2859653-1-umesh.nerlige.ramappa@intel.com
    Stable-dep-of: dc30c0114691 ("drm/i915: fix race condition UAF in i915_perf_add_config_ioctl")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b337a13c144739323d9c4cc36ebdf50cf258533
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Apr 4 22:21:14 2023 -0400

    tracing: Have tracing_snapshot_instance_cond() write errors to the appropriate instance
    
    [ Upstream commit 9d52727f8043cfda241ae96896628d92fa9c50bb ]
    
    If a trace instance has a failure with its snapshot code, the error
    message is to be written to that instance's buffer. But currently, the
    message is written to the top level buffer. Worse yet, it may also disable
    the top level buffer and not the instance that had the issue.
    
    Link: https://lkml.kernel.org/r/20230405022341.688730321@goodmis.org
    
    Cc: stable@vger.kernel.org
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Ross Zwisler <zwisler@google.com>
    Fixes: 2824f50332486 ("tracing: Make the snapshot trigger work with instances")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1403518ed0d949e108097a55a2931fcdaa82f147
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Feb 7 12:28:52 2023 -0500

    tracing: Add trace_array_puts() to write into instance
    
    [ Upstream commit d503b8f7474fe7ac616518f7fc49773cbab49f36 ]
    
    Add a generic trace_array_puts() that can be used to "trace_puts()" into
    an allocated trace_array instance. This is just another variant of
    trace_array_printk().
    
    Link: https://lkml.kernel.org/r/20230207173026.584717290@goodmis.org
    
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Ross Zwisler <zwisler@google.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Stable-dep-of: 9d52727f8043 ("tracing: Have tracing_snapshot_instance_cond() write errors to the appropriate instance")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 670e54151b7a51cca0bd8569a2a2cb35ad720114
Author: William Breathitt Gray <william.gray@linaro.org>
Date:   Thu Mar 16 16:34:26 2023 -0400

    counter: 104-quad-8: Fix Synapse action reported for Index signals
    
    [ Upstream commit 00f4bc5184c19cb33f468f1ea409d70d19f8f502 ]
    
    Signal 16 and higher represent the device's Index lines. The
    priv->preset_enable array holds the device configuration for these Index
    lines. The preset_enable configuration is active low on the device, so
    invert the conditional check in quad8_action_read() to properly handle
    the logical state of preset_enable.
    
    Fixes: f1d8a071d45b ("counter: 104-quad-8: Add Generic Counter interface support")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230316203426.224745-1-william.gray@linaro.org/
    Signed-off-by: William Breathitt Gray <william.gray@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e25d374cd952501a1359c4c1ad0ea1c61d04dbf
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Fri Aug 27 12:47:47 2021 +0900

    counter: Internalize sysfs interface code
    
    [ Upstream commit aaec1a0f76ec25f46bbb17b81487c4b0e1c318c5 ]
    
    This is a reimplementation of the Generic Counter driver interface.
    There are no modifications to the Counter subsystem userspace interface,
    so existing userspace applications should continue to run seamlessly.
    
    The purpose of this patch is to internalize the sysfs interface code
    among the various counter drivers into a shared module. Counter drivers
    pass and take data natively (i.e. u8, u64, etc.) and the shared counter
    module handles the translation between the sysfs interface and the
    device drivers. This guarantees a standard userspace interface for all
    counter drivers, and helps generalize the Generic Counter driver ABI in
    order to support the Generic Counter chrdev interface (introduced in a
    subsequent patch) without significant changes to the existing counter
    drivers.
    
    Note, Counter device registration is the same as before: drivers
    populate a struct counter_device with components and callbacks, then
    pass the structure to the devm_counter_register function. However,
    what's different now is how the Counter subsystem code handles this
    registration internally.
    
    Whereas before callbacks would interact directly with sysfs data, this
    interaction is now abstracted and instead callbacks interact with native
    C data types. The counter_comp structure forms the basis for Counter
    extensions.
    
    The counter-sysfs.c file contains the code to parse through the
    counter_device structure and register the requested components and
    extensions. Attributes are created and populated based on type, with
    respective translation functions to handle the mapping between sysfs and
    the counter driver callbacks.
    
    The translation performed for each attribute is straightforward: the
    attribute type and data is parsed from the counter_attribute structure,
    the respective counter driver read/write callback is called, and sysfs
    I/O is handled before or after the driver read/write function is called.
    
    Cc: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Cc: Patrick Havelange <patrick.havelange@essensium.com>
    Cc: Kamel Bouhara <kamel.bouhara@bootlin.com>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Syed Nayyar Waris <syednwaris@gmail.com>
    Reviewed-by: David Lechner <david@lechnology.com>
    Tested-by: David Lechner <david@lechnology.com>
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Reviewed-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com> # for stm32
    Link: https://lore.kernel.org/r/c68b4a1ffb195c1a2f65e8dd5ad7b7c14e79c6ef.1630031207.git.vilhelm.gray@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Stable-dep-of: 00f4bc5184c1 ("counter: 104-quad-8: Fix Synapse action reported for Index signals")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4153e66288323348c8997d4f202657563403323
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Fri Aug 27 12:47:46 2021 +0900

    counter: stm32-timer-cnt: Provide defines for slave mode selection
    
    [ Upstream commit ea434ff82649111de4fcabd76187270f8abdb63a ]
    
    The STM32 timer permits configuration of the counter encoder mode via
    the slave mode control register (SMCR) slave mode selection (SMS) bits.
    This patch provides preprocessor defines for the supported encoder
    modes.
    
    Cc: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Reviewed-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/ad3d9cd7af580d586316d368f74964cbc394f981.1630031207.git.vilhelm.gray@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Stable-dep-of: 00f4bc5184c1 ("counter: 104-quad-8: Fix Synapse action reported for Index signals")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c1010848b12835efefcac04e0724f587a99f13c
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Fri Aug 27 12:47:45 2021 +0900

    counter: stm32-lptimer-cnt: Provide defines for clock polarities
    
    [ Upstream commit 05593a3fd1037b5fee85d3c8c28112f19e7baa06 ]
    
    The STM32 low-power timer permits configuration of the clock polarity
    via the LPTIMX_CFGR register CKPOL bits. This patch provides
    preprocessor defines for the supported clock polarities.
    
    Cc: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Reviewed-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/a111c8905c467805ca530728f88189b59430f27e.1630031207.git.vilhelm.gray@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Stable-dep-of: 00f4bc5184c1 ("counter: 104-quad-8: Fix Synapse action reported for Index signals")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 189ada57e88c8bfcd4e3eeb57185568e3b834c30
Author: Aymeric Wibo <obiwac@gmail.com>
Date:   Sun Mar 19 03:12:05 2023 +0100

    ACPI: resource: Add Medion S17413 to IRQ override quirk
    
    [ Upstream commit 2d0ab14634a26e54f8d6d231b47b7ef233e84599 ]
    
    Add DMI info of the Medion S17413 (board M1xA) to the IRQ override
    quirk table. This fixes the keyboard not working on these laptops.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=213031
    Signed-off-by: Aymeric Wibo <obiwac@gmail.com>
    [ rjw: Fixed up white space ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 248a18a895e200f38db35bb5c771f81f7a7e4c22
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Mar 17 10:53:24 2023 +0100

    wifi: iwlwifi: mvm: fix mvmtxq->stopped handling
    
    [ Upstream commit b58e3d4311b54b6dd0e37165277965da0c9eb21d ]
    
    This could race if the queue is redirected while full, then
    the flushing internally would start it while it's not yet
    usable again. Fix it by using two state bits instead of just
    one.
    
    Reviewed-by: Benjamin Berg <benjamin.berg@intel.com>
    Tested-by: Jose Ignacio Tornos Martinez <jtornosm@redhat.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0efd9ed929260e7ea1899788badb72efca902bd2
Author: Robbie Harwood <rharwood@redhat.com>
Date:   Mon Feb 20 12:12:54 2023 -0500

    asymmetric_keys: log on fatal failures in PE/pkcs7
    
    [ Upstream commit 3584c1dbfffdabf8e3dc1dd25748bb38dd01cd43 ]
    
    These particular errors can be encountered while trying to kexec when
    secureboot lockdown is in place.  Without this change, even with a
    signed debug build, one still needs to reboot the machine to add the
    appropriate dyndbg parameters (since lockdown blocks debugfs).
    
    Accordingly, upgrade all pr_debug() before fatal error into pr_warn().
    
    Signed-off-by: Robbie Harwood <rharwood@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Jarkko Sakkinen <jarkko@kernel.org>
    cc: Eric Biederman <ebiederm@xmission.com>
    cc: Herbert Xu <herbert@gondor.apana.org.au>
    cc: keyrings@vger.kernel.org
    cc: linux-crypto@vger.kernel.org
    cc: kexec@lists.infradead.org
    Link: https://lore.kernel.org/r/20230220171254.592347-3-rharwood@redhat.com/ # v2
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae2b44aeade1b6edf5813f574faf5bbb38d27f91
Author: Robbie Harwood <rharwood@redhat.com>
Date:   Mon Feb 20 12:12:53 2023 -0500

    verify_pefile: relax wrapper length check
    
    [ Upstream commit 4fc5c74dde69a7eda172514aaeb5a7df3600adb3 ]
    
    The PE Format Specification (section "The Attribute Certificate Table
    (Image Only)") states that `dwLength` is to be rounded up to 8-byte
    alignment when used for traversal.  Therefore, the field is not required
    to be an 8-byte multiple in the first place.
    
    Accordingly, pesign has not performed this alignment since version
    0.110.  This causes kexec failure on pesign'd binaries with "PEFILE:
    Signature wrapper len wrong".  Update the comment and relax the check.
    
    Signed-off-by: Robbie Harwood <rharwood@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Jarkko Sakkinen <jarkko@kernel.org>
    cc: Eric Biederman <ebiederm@xmission.com>
    cc: Herbert Xu <herbert@gondor.apana.org.au>
    cc: keyrings@vger.kernel.org
    cc: linux-crypto@vger.kernel.org
    cc: kexec@lists.infradead.org
    Link: https://learn.microsoft.com/en-us/windows/win32/debug/pe-format#the-attribute-certificate-table-image-only
    Link: https://github.com/rhboot/pesign
    Link: https://lore.kernel.org/r/20230220171254.592347-2-rharwood@redhat.com/ # v2
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 744f80ae0716305d2dab6158a5bf7e48b00377d7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Mar 1 10:52:18 2023 +0100

    drm: panel-orientation-quirks: Add quirk for Lenovo Yoga Book X90F
    
    [ Upstream commit 03aecb1acbcd7a660f97d645ca6c09d9de27ff9d ]
    
    Like the Windows Lenovo Yoga Book X91F/L the Android Lenovo Yoga Book
    X90F/L has a portrait 1200x1920 screen used in landscape mode,
    add a quirk for this.
    
    When the quirk for the X91F/L was initially added it was written to
    also apply to the X90F/L but this does not work because the Android
    version of the Yoga Book uses completely different DMI strings.
    Also adjust the X91F/L quirk to reflect that it only applies to
    the X91F/L models.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230301095218.28457-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05a24344296ebe9fc09e12108d35084c80651f6c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Mar 14 13:31:03 2023 +0100

    efi: sysfb_efi: Add quirk for Lenovo Yoga Book X91F/L
    
    [ Upstream commit 5ed213dd64681f84a01ceaa82fb336cf7d59ddcf ]
    
    Another Lenovo convertable which reports a landscape resolution of
    1920x1200 with a pitch of (1920 * 4) bytes, while the actual framebuffer
    has a resolution of 1200x1920 with a pitch of (1200 * 4) bytes.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f9d2fc5882476ef25cb1f6cb306f475281bf5e9
Author: Yicong Yang <yangyicong@hisilicon.com>
Date:   Mon Mar 13 15:45:51 2023 +0800

    i2c: hisi: Avoid redundant interrupts
    
    [ Upstream commit cc9812a3096d1986caca9a23bee99effc45c08df ]
    
    After issuing all the messages we can disable the TX_EMPTY interrupts
    to avoid handling redundant interrupts. For doing a sinlge bus
    detection (i2cdetect -y -r 0) we can reduce ~97% interrupts (before
    ~12000 after ~400).
    
    Signed-off-by: Sheng Feng <fengsheng5@huawei.com>
    Signed-off-by: Yicong Yang <yangyicong@hisilicon.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d21a46212009bb6aeaccdcaffc3635a88ebdcbd7
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jan 30 16:32:46 2023 +0100

    i2c: imx-lpi2c: clean rx/tx buffers upon new message
    
    [ Upstream commit 987dd36c0141f6ab9f0fbf14d6b2ec3342dedb2f ]
    
    When start sending a new message clear the Rx & Tx buffer pointers in
    order to avoid using stale pointers.
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Tested-by: Emanuele Ghidoli <emanuele.ghidoli@toradex.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8451da304b4a6e40dd924b0788785138a36246c6
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sun Mar 12 14:25:23 2023 +0100

    wifi: mwifiex: mark OF related data as maybe unused
    
    [ Upstream commit 139f6973bf140c65d4d1d4bde5485badb4454d7a ]
    
    The driver can be compile tested with !CONFIG_OF making certain data
    unused:
    
      drivers/net/wireless/marvell/mwifiex/sdio.c:498:34: error: ‘mwifiex_sdio_of_match_table’ defined but not used [-Werror=unused-const-variable=]
      drivers/net/wireless/marvell/mwifiex/pcie.c:175:34: error: ‘mwifiex_pcie_of_match_table’ defined but not used [-Werror=unused-const-variable=]
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20230312132523.352182-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9aeff275b7f7655de03d1e18adce5fa8619c71a5
Author: Grant Grundler <grundler@chromium.org>
Date:   Mon Dec 12 13:38:57 2022 -0800

    power: supply: cros_usbpd: reclassify "default case!" as debug
    
    [ Upstream commit 14c76b2e75bca4d96e2b85a0c12aa43e84fe3f74 ]
    
    This doesn't need to be printed every second as an error:
    ...
    <3>[17438.628385] cros-usbpd-charger cros-usbpd-charger.3.auto: Port 1: default case!
    <3>[17439.634176] cros-usbpd-charger cros-usbpd-charger.3.auto: Port 1: default case!
    <3>[17440.640298] cros-usbpd-charger cros-usbpd-charger.3.auto: Port 1: default case!
    ...
    
    Reduce priority from ERROR to DEBUG.
    
    Signed-off-by: Grant Grundler <grundler@chromium.org>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 788f4a3d398757d94e71f2780a2de1cb78f92219
Author: Andrew Jeffery <andrew@aj.id.au>
Date:   Wed Feb 22 00:10:14 2023 +0100

    ARM: 9290/1: uaccess: Fix KASAN false-positives
    
    [ Upstream commit ceac10c83b330680cc01ceaaab86cd49f4f30d81 ]
    
    __copy_to_user_memcpy() and __clear_user_memset() had been calling
    memcpy() and memset() respectively, leading to false-positive KASAN
    reports when starting userspace:
    
        [   10.707901] Run /init as init process
        [   10.731892] process '/bin/busybox' started with executable stack
        [   10.745234] ==================================================================
        [   10.745796] BUG: KASAN: user-memory-access in __clear_user_memset+0x258/0x3ac
        [   10.747260] Write of size 2687 at addr 000de581 by task init/1
    
    Use __memcpy() and __memset() instead to allow userspace access, which
    is of course the intent of these functions.
    
    Signed-off-by: Andrew Jeffery <andrew@aj.id.au>
    Signed-off-by: Zev Weiss <zev@bewilderbeest.net>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53967ac8080b23282096013844824cfadcaa4f27
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Dec 12 13:15:00 2022 -0800

    libbpf: Fix single-line struct definition output in btf_dump
    
    [ Upstream commit 872aec4b5f635d94111d48ec3c57fbe078d64e7d ]
    
    btf_dump APIs emit unnecessary tabs when emitting struct/union
    definition that fits on the single line. Before this patch we'd get:
    
    struct blah {<tab>};
    
    This patch fixes this and makes sure that we get more natural:
    
    struct blah {};
    
    Fixes: 44a726c3f23c ("bpftool: Print newline before '}' for struct with padding only fields")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20221212211505.558851-2-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 906a6689bb0191ad2a44131a3377006aa098af59
Author: Liang Chen <liangchen.linux@gmail.com>
Date:   Thu Apr 13 17:03:53 2023 +0800

    skbuff: Fix a race between coalescing and releasing SKBs
    
    [ Upstream commit 0646dc31ca886693274df5749cd0c8c1eaaeb5ca ]
    
    Commit 1effe8ca4e34 ("skbuff: fix coalescing for page_pool fragment
    recycling") allowed coalescing to proceed with non page pool page and page
    pool page when @from is cloned, i.e.
    
    to->pp_recycle    --> false
    from->pp_recycle  --> true
    skb_cloned(from)  --> true
    
    However, it actually requires skb_cloned(@from) to hold true until
    coalescing finishes in this situation. If the other cloned SKB is
    released while the merging is in process, from_shinfo->nr_frags will be
    set to 0 toward the end of the function, causing the increment of frag
    page _refcount to be unexpectedly skipped resulting in inconsistent
    reference counts. Later when SKB(@to) is released, it frees the page
    directly even though the page pool page is still in use, leading to
    use-after-free or double-free errors. So it should be prohibited.
    
    The double-free error message below prompted us to investigate:
    BUG: Bad page state in process swapper/1  pfn:0e0d1
    page:00000000c6548b28 refcount:-1 mapcount:0 mapping:0000000000000000
    index:0x2 pfn:0xe0d1
    flags: 0xfffffc0000000(node=0|zone=1|lastcpupid=0x1fffff)
    raw: 000fffffc0000000 0000000000000000 ffffffff00000101 0000000000000000
    raw: 0000000000000002 0000000000000000 ffffffffffffffff 0000000000000000
    page dumped because: nonzero _refcount
    
    CPU: 1 PID: 0 Comm: swapper/1 Tainted: G            E      6.2.0+
    Call Trace:
     <IRQ>
    dump_stack_lvl+0x32/0x50
    bad_page+0x69/0xf0
    free_pcp_prepare+0x260/0x2f0
    free_unref_page+0x20/0x1c0
    skb_release_data+0x10b/0x1a0
    napi_consume_skb+0x56/0x150
    net_rx_action+0xf0/0x350
    ? __napi_schedule+0x79/0x90
    __do_softirq+0xc8/0x2b1
    __irq_exit_rcu+0xb9/0xf0
    common_interrupt+0x82/0xa0
    </IRQ>
    <TASK>
    asm_common_interrupt+0x22/0x40
    RIP: 0010:default_idle+0xb/0x20
    
    Fixes: 53e0961da1c7 ("page_pool: add frag page recycling support in page pool")
    Signed-off-by: Liang Chen <liangchen.linux@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20230413090353.14448-1-liangchen.linux@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ccc58a1a75601c936069d4a0741940623990ade
Author: Roman Gushchin <roman.gushchin@linux.dev>
Date:   Wed Apr 12 16:21:44 2023 -0700

    net: macb: fix a memory corruption in extended buffer descriptor mode
    
    [ Upstream commit e8b74453555872851bdd7ea43a7c0ec39659834f ]
    
    For quite some time we were chasing a bug which looked like a sudden
    permanent failure of networking and mmc on some of our devices.
    The bug was very sensitive to any software changes and even more to
    any kernel debug options.
    
    Finally we got a setup where the problem was reproducible with
    CONFIG_DMA_API_DEBUG=y and it revealed the issue with the rx dma:
    
    [   16.992082] ------------[ cut here ]------------
    [   16.996779] DMA-API: macb ff0b0000.ethernet: device driver tries to free DMA memory it has not allocated [device address=0x0000000875e3e244] [size=1536 bytes]
    [   17.011049] WARNING: CPU: 0 PID: 85 at kernel/dma/debug.c:1011 check_unmap+0x6a0/0x900
    [   17.018977] Modules linked in: xxxxx
    [   17.038823] CPU: 0 PID: 85 Comm: irq/55-8000f000 Not tainted 5.4.0 #28
    [   17.045345] Hardware name: xxxxx
    [   17.049528] pstate: 60000005 (nZCv daif -PAN -UAO)
    [   17.054322] pc : check_unmap+0x6a0/0x900
    [   17.058243] lr : check_unmap+0x6a0/0x900
    [   17.062163] sp : ffffffc010003c40
    [   17.065470] x29: ffffffc010003c40 x28: 000000004000c03c
    [   17.070783] x27: ffffffc010da7048 x26: ffffff8878e38800
    [   17.076095] x25: ffffff8879d22810 x24: ffffffc010003cc8
    [   17.081407] x23: 0000000000000000 x22: ffffffc010a08750
    [   17.086719] x21: ffffff8878e3c7c0 x20: ffffffc010acb000
    [   17.092032] x19: 0000000875e3e244 x18: 0000000000000010
    [   17.097343] x17: 0000000000000000 x16: 0000000000000000
    [   17.102647] x15: ffffff8879e4a988 x14: 0720072007200720
    [   17.107959] x13: 0720072007200720 x12: 0720072007200720
    [   17.113261] x11: 0720072007200720 x10: 0720072007200720
    [   17.118565] x9 : 0720072007200720 x8 : 000000000000022d
    [   17.123869] x7 : 0000000000000015 x6 : 0000000000000098
    [   17.129173] x5 : 0000000000000000 x4 : 0000000000000000
    [   17.134475] x3 : 00000000ffffffff x2 : ffffffc010a1d370
    [   17.139778] x1 : b420c9d75d27bb00 x0 : 0000000000000000
    [   17.145082] Call trace:
    [   17.147524]  check_unmap+0x6a0/0x900
    [   17.151091]  debug_dma_unmap_page+0x88/0x90
    [   17.155266]  gem_rx+0x114/0x2f0
    [   17.158396]  macb_poll+0x58/0x100
    [   17.161705]  net_rx_action+0x118/0x400
    [   17.165445]  __do_softirq+0x138/0x36c
    [   17.169100]  irq_exit+0x98/0xc0
    [   17.172234]  __handle_domain_irq+0x64/0xc0
    [   17.176320]  gic_handle_irq+0x5c/0xc0
    [   17.179974]  el1_irq+0xb8/0x140
    [   17.183109]  xiic_process+0x5c/0xe30
    [   17.186677]  irq_thread_fn+0x28/0x90
    [   17.190244]  irq_thread+0x208/0x2a0
    [   17.193724]  kthread+0x130/0x140
    [   17.196945]  ret_from_fork+0x10/0x20
    [   17.200510] ---[ end trace 7240980785f81d6f ]---
    
    [  237.021490] ------------[ cut here ]------------
    [  237.026129] DMA-API: exceeded 7 overlapping mappings of cacheline 0x0000000021d79e7b
    [  237.033886] WARNING: CPU: 0 PID: 0 at kernel/dma/debug.c:499 add_dma_entry+0x214/0x240
    [  237.041802] Modules linked in: xxxxx
    [  237.061637] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        W         5.4.0 #28
    [  237.068941] Hardware name: xxxxx
    [  237.073116] pstate: 80000085 (Nzcv daIf -PAN -UAO)
    [  237.077900] pc : add_dma_entry+0x214/0x240
    [  237.081986] lr : add_dma_entry+0x214/0x240
    [  237.086072] sp : ffffffc010003c30
    [  237.089379] x29: ffffffc010003c30 x28: ffffff8878a0be00
    [  237.094683] x27: 0000000000000180 x26: ffffff8878e387c0
    [  237.099987] x25: 0000000000000002 x24: 0000000000000000
    [  237.105290] x23: 000000000000003b x22: ffffffc010a0fa00
    [  237.110594] x21: 0000000021d79e7b x20: ffffffc010abe600
    [  237.115897] x19: 00000000ffffffef x18: 0000000000000010
    [  237.121201] x17: 0000000000000000 x16: 0000000000000000
    [  237.126504] x15: ffffffc010a0fdc8 x14: 0720072007200720
    [  237.131807] x13: 0720072007200720 x12: 0720072007200720
    [  237.137111] x11: 0720072007200720 x10: 0720072007200720
    [  237.142415] x9 : 0720072007200720 x8 : 0000000000000259
    [  237.147718] x7 : 0000000000000001 x6 : 0000000000000000
    [  237.153022] x5 : ffffffc010003a20 x4 : 0000000000000001
    [  237.158325] x3 : 0000000000000006 x2 : 0000000000000007
    [  237.163628] x1 : 8ac721b3a7dc1c00 x0 : 0000000000000000
    [  237.168932] Call trace:
    [  237.171373]  add_dma_entry+0x214/0x240
    [  237.175115]  debug_dma_map_page+0xf8/0x120
    [  237.179203]  gem_rx_refill+0x190/0x280
    [  237.182942]  gem_rx+0x224/0x2f0
    [  237.186075]  macb_poll+0x58/0x100
    [  237.189384]  net_rx_action+0x118/0x400
    [  237.193125]  __do_softirq+0x138/0x36c
    [  237.196780]  irq_exit+0x98/0xc0
    [  237.199914]  __handle_domain_irq+0x64/0xc0
    [  237.204000]  gic_handle_irq+0x5c/0xc0
    [  237.207654]  el1_irq+0xb8/0x140
    [  237.210789]  arch_cpu_idle+0x40/0x200
    [  237.214444]  default_idle_call+0x18/0x30
    [  237.218359]  do_idle+0x200/0x280
    [  237.221578]  cpu_startup_entry+0x20/0x30
    [  237.225493]  rest_init+0xe4/0xf0
    [  237.228713]  arch_call_rest_init+0xc/0x14
    [  237.232714]  start_kernel+0x47c/0x4a8
    [  237.236367] ---[ end trace 7240980785f81d70 ]---
    
    Lars was fast to find an explanation: according to the datasheet
    bit 2 of the rx buffer descriptor entry has a different meaning in the
    extended mode:
      Address [2] of beginning of buffer, or
      in extended buffer descriptor mode (DMA configuration register [28] = 1),
      indicates a valid timestamp in the buffer descriptor entry.
    
    The macb driver didn't mask this bit while getting an address and it
    eventually caused a memory corruption and a dma failure.
    
    The problem is resolved by explicitly clearing the problematic bit
    if hw timestamping is used.
    
    Fixes: 7b4296148066 ("net: macb: Add support for PTP timestamps in DMA descriptors")
    Signed-off-by: Roman Gushchin <roman.gushchin@linux.dev>
    Co-developed-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
    Link: https://lore.kernel.org/r/20230412232144.770336-1-roman.gushchin@linux.dev
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed2ec39e46fe34f8e490c15f7fbadde1684be30c
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 12 13:03:08 2023 +0000

    udp6: fix potential access to stale information
    
    [ Upstream commit 1c5950fc6fe996235f1d18539b9c6b64b597f50f ]
    
    lena wang reported an issue caused by udpv6_sendmsg()
    mangling msg->msg_name and msg->msg_namelen, which
    are later read from ____sys_sendmsg() :
    
            /*
             * If this is sendmmsg() and sending to current destination address was
             * successful, remember it.
             */
            if (used_address && err >= 0) {
                    used_address->name_len = msg_sys->msg_namelen;
                    if (msg_sys->msg_name)
                            memcpy(&used_address->name, msg_sys->msg_name,
                                   used_address->name_len);
            }
    
    udpv6_sendmsg() wants to pretend the remote address family
    is AF_INET in order to call udp_sendmsg().
    
    A fix would be to modify the address in-place, instead
    of using a local variable, but this could have other side effects.
    
    Instead, restore initial values before we return from udpv6_sendmsg().
    
    Fixes: c71d8ebe7a44 ("net: Fix security_socket_sendmsg() bypass problem.")
    Reported-by: lena wang <lena.wang@mediatek.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Maciej Żenczykowski <maze@google.com>
    Link: https://lore.kernel.org/r/20230412130308.1202254-1-edumazet@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e97ff11b396c320d2cc025b09741ba432fcb20a2
Author: Saravanan Vajravel <saravanan.vajravel@broadcom.com>
Date:   Fri Mar 31 23:34:24 2023 -0700

    RDMA/core: Fix GID entry ref leak when create_ah fails
    
    [ Upstream commit aca3b0fa3d04b40c96934d86cc224cccfa7ea8e0 ]
    
    If AH create request fails, release sgid_attr to avoid GID entry
    referrence leak reported while releasing GID table
    
    Fixes: 1a1f460ff151 ("RDMA: Hold the sgid_attr inside the struct ib_ah/qp")
    Link: https://lore.kernel.org/r/20230401063424.342204-1-saravanan.vajravel@broadcom.com
    Reviewed-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Signed-off-by: Saravanan Vajravel <saravanan.vajravel@broadcom.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6109f5b13ce3e3e537db6f18976ec0e9118d1c6f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Apr 10 15:43:30 2023 -0400

    sctp: fix a potential overflow in sctp_ifwdtsn_skip
    
    [ Upstream commit 32832a2caf82663870126c5186cf8f86c8b2a649 ]
    
    Currently, when traversing ifwdtsn skips with _sctp_walk_ifwdtsn, it only
    checks the pos against the end of the chunk. However, the data left for
    the last pos may be < sizeof(struct sctp_ifwdtsn_skip), and dereference
    it as struct sctp_ifwdtsn_skip may cause coverflow.
    
    This patch fixes it by checking the pos against "the end of the chunk -
    sizeof(struct sctp_ifwdtsn_skip)" in sctp_ifwdtsn_skip, similar to
    sctp_fwdtsn_skip.
    
    Fixes: 0fc2ea922c8a ("sctp: implement validate_ftsn for sctp_stream_interleave")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/2a71bffcd80b4f2c61fac6d344bb2f11c8fd74f7.1681155810.git.lucien.xin@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6a796ee5a639ffb83c6e5469408cc2ec16cac6a
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Mon Apr 10 09:23:52 2023 +0800

    net: qrtr: Fix an uninit variable access bug in qrtr_tx_resume()
    
    [ Upstream commit 6417070918de3bcdbe0646e7256dae58fd8083ba ]
    
    Syzbot reported a bug as following:
    
    =====================================================
    BUG: KMSAN: uninit-value in qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
     qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
     qrtr_endpoint_post+0xf85/0x11b0 net/qrtr/af_qrtr.c:519
     qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
     call_write_iter include/linux/fs.h:2189 [inline]
     aio_write+0x63a/0x950 fs/aio.c:1600
     io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
     __do_sys_io_submit fs/aio.c:2078 [inline]
     __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
     __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:766 [inline]
     slab_alloc_node mm/slub.c:3452 [inline]
     __kmem_cache_alloc_node+0x71f/0xce0 mm/slub.c:3491
     __do_kmalloc_node mm/slab_common.c:967 [inline]
     __kmalloc_node_track_caller+0x114/0x3b0 mm/slab_common.c:988
     kmalloc_reserve net/core/skbuff.c:492 [inline]
     __alloc_skb+0x3af/0x8f0 net/core/skbuff.c:565
     __netdev_alloc_skb+0x120/0x7d0 net/core/skbuff.c:630
     qrtr_endpoint_post+0xbd/0x11b0 net/qrtr/af_qrtr.c:446
     qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
     call_write_iter include/linux/fs.h:2189 [inline]
     aio_write+0x63a/0x950 fs/aio.c:1600
     io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
     __do_sys_io_submit fs/aio.c:2078 [inline]
     __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
     __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    It is because that skb->len requires at least sizeof(struct qrtr_ctrl_pkt)
    in qrtr_tx_resume(). And skb->len equals to size in qrtr_endpoint_post().
    But size is less than sizeof(struct qrtr_ctrl_pkt) when qrtr_cb->type
    equals to QRTR_TYPE_RESUME_TX in qrtr_endpoint_post() under the syzbot
    scenario. This triggers the uninit variable access bug.
    
    Add size check when qrtr_cb->type equals to QRTR_TYPE_RESUME_TX in
    qrtr_endpoint_post() to fix the bug.
    
    Fixes: 5fdeb0d372ab ("net: qrtr: Implement outgoing flow control")
    Reported-by: syzbot+4436c9630a45820fda76@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=c14607f0963d27d5a3d5f4c8639b500909e43540
    Suggested-by: Manivannan Sadhasivam <mani@kernel.org>
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230410012352.3997823-1-william.xuanziyang@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b1ca43bcf3d15be0556c13d3381dc59097e5f3a
Author: Denis Plotnikov <den-plotnikov@yandex-team.ru>
Date:   Fri Apr 7 10:18:49 2023 +0300

    qlcnic: check pci_reset_function result
    
    [ Upstream commit 7573099e10ca69c3be33995c1fcd0d241226816d ]
    
    Static code analyzer complains to unchecked return value.
    The result of pci_reset_function() is unchecked.
    Despite, the issue is on the FLR supported code path and in that
    case reset can be done with pcie_flr(), the patch uses less invasive
    approach by adding the result check of pci_reset_function().
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 7e2cf4feba05 ("qlcnic: change driver hardware interface mechanism")
    Signed-off-by: Denis Plotnikov <den-plotnikov@yandex-team.ru>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffa4f32952e2a563b15247490433900d160546b1
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Dec 26 17:34:16 2021 +0100

    drm/armada: Fix a potential double free in an error handling path
    
    [ Upstream commit b89ce1177d42d5c124e83f3858818cd4e6a2c46f ]
    
    'priv' is a managed resource, so there is no need to free it explicitly or
    there will be a double free().
    
    Fixes: 90ad200b4cbc ("drm/armada: Use devm_drm_dev_alloc")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/c4f3c9207a9fce35cb6dd2cc60e755275961588a.1640536364.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a94f5d35fdbbaf4210cea921a702c9af30f915e9
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Apr 6 14:34:50 2023 +0800

    tcp: restrict net.ipv4.tcp_app_win
    
    [ Upstream commit dc5110c2d959c1707e12df5f792f41d90614adaa ]
    
    UBSAN: shift-out-of-bounds in net/ipv4/tcp_input.c:555:23
    shift exponent 255 is too large for 32-bit type 'int'
    CPU: 1 PID: 7907 Comm: ssh Not tainted 6.3.0-rc4-00161-g62bad54b26db-dirty #206
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
    Call Trace:
     <TASK>
     dump_stack_lvl+0x136/0x150
     __ubsan_handle_shift_out_of_bounds+0x21f/0x5a0
     tcp_init_transfer.cold+0x3a/0xb9
     tcp_finish_connect+0x1d0/0x620
     tcp_rcv_state_process+0xd78/0x4d60
     tcp_v4_do_rcv+0x33d/0x9d0
     __release_sock+0x133/0x3b0
     release_sock+0x58/0x1b0
    
    'maxwin' is int, shifting int for 32 or more bits is undefined behaviour.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a08ec4ed3b6e6f10259beb7b5764f0a249c26b7b
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Wed Apr 5 23:31:18 2023 -0700

    niu: Fix missing unwind goto in niu_alloc_channels()
    
    [ Upstream commit 8ce07be703456acb00e83d99f3b8036252c33b02 ]
    
    Smatch reports: drivers/net/ethernet/sun/niu.c:4525
            niu_alloc_channels() warn: missing unwind goto?
    
    If niu_rbr_fill() fails, then we are directly returning 'err' without
    freeing the channels.
    
    Fix this by changing direct return to a goto 'out_err'.
    
    Fixes: a3138df9f20e ("[NIU]: Add Sun Neptune ethernet driver.")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e35ae49bc198412c9294115677e5acdef95b1fb5
Author: Zheng Wang <zyytlz.wz@163.com>
Date:   Mon Mar 13 22:43:25 2023 +0800

    9p/xen : Fix use after free bug in xen_9pfs_front_remove due to race condition
    
    [ Upstream commit ea4f1009408efb4989a0f139b70fb338e7f687d0 ]
    
    In xen_9pfs_front_probe, it calls xen_9pfs_front_alloc_dataring
    to init priv->rings and bound &ring->work with p9_xen_response.
    
    When it calls xen_9pfs_front_event_handler to handle IRQ requests,
    it will finally call schedule_work to start the work.
    
    When we call xen_9pfs_front_remove to remove the driver, there
    may be a sequence as follows:
    
    Fix it by finishing the work before cleanup in xen_9pfs_front_free.
    
    Note that, this bug is found by static analysis, which might be
    false positive.
    
    CPU0                  CPU1
    
                         |p9_xen_response
    xen_9pfs_front_remove|
      xen_9pfs_front_free|
    kfree(priv)          |
    //free priv          |
                         |p9_tag_lookup
                         |//use priv->client
    
    Fixes: 71ebd71921e4 ("xen/9pfs: connect to the backend")
    Signed-off-by: Zheng Wang <zyytlz.wz@163.com>
    Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
    Signed-off-by: Eric Van Hensbergen <ericvh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b41da67451b0993fbdf1d36e563afa57d805220a
Author: Martin KaFai Lau <martin.lau@kernel.org>
Date:   Mon Mar 27 17:42:32 2023 -0700

    bpf: tcp: Use sock_gen_put instead of sock_put in bpf_iter_tcp
    
    [ Upstream commit 580031ff9952b7dbf48dedba6b56a100ae002bef ]
    
    While reviewing the udp-iter batching patches, noticed the bpf_iter_tcp
    calling sock_put() is incorrect. It should call sock_gen_put instead
    because bpf_iter_tcp is iterating the ehash table which has the req sk
    and tw sk. This patch replaces all sock_put with sock_gen_put in the
    bpf_iter_tcp codepath.
    
    Fixes: 04c7820b776f ("bpf: tcp: Bpf iter batching and lock_sock")
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20230328004232.2134233-1-martin.lau@linux.dev
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48e8e7851dc0b1584d83817a78fc7108c8904b54
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Mon Mar 20 12:59:55 2023 +0200

    RDMA/cma: Allow UD qp_type to join multicast only
    
    [ Upstream commit 58e84f6b3e84e46524b7e5a916b53c1ad798bc8f ]
    
    As for multicast:
    - The SIDR is the only mode that makes sense;
    - Besides PS_UDP, other port spaces like PS_IB is also allowed, as it is
      UD compatible. In this case qkey also needs to be set [1].
    
    This patch allows only UD qp_type to join multicast, and set qkey to
    default if it's not set, to fix an uninit-value error: the ib->rec.qkey
    field is accessed without being initialized.
    
    =====================================================
    BUG: KMSAN: uninit-value in cma_set_qkey drivers/infiniband/core/cma.c:510 [inline]
    BUG: KMSAN: uninit-value in cma_make_mc_event+0xb73/0xe00 drivers/infiniband/core/cma.c:4570
     cma_set_qkey drivers/infiniband/core/cma.c:510 [inline]
     cma_make_mc_event+0xb73/0xe00 drivers/infiniband/core/cma.c:4570
     cma_iboe_join_multicast drivers/infiniband/core/cma.c:4782 [inline]
     rdma_join_multicast+0x2b83/0x30a0 drivers/infiniband/core/cma.c:4814
     ucma_process_join+0xa76/0xf60 drivers/infiniband/core/ucma.c:1479
     ucma_join_multicast+0x1e3/0x250 drivers/infiniband/core/ucma.c:1546
     ucma_write+0x639/0x6d0 drivers/infiniband/core/ucma.c:1732
     vfs_write+0x8ce/0x2030 fs/read_write.c:588
     ksys_write+0x28c/0x520 fs/read_write.c:643
     __do_sys_write fs/read_write.c:655 [inline]
     __se_sys_write fs/read_write.c:652 [inline]
     __ia32_sys_write+0xdb/0x120 fs/read_write.c:652
     do_syscall_32_irqs_on arch/x86/entry/common.c:114 [inline]
     __do_fast_syscall_32+0x96/0xf0 arch/x86/entry/common.c:180
     do_fast_syscall_32+0x34/0x70 arch/x86/entry/common.c:205
     do_SYSENTER_32+0x1b/0x20 arch/x86/entry/common.c:248
     entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    
    Local variable ib.i created at:
    cma_iboe_join_multicast drivers/infiniband/core/cma.c:4737 [inline]
    rdma_join_multicast+0x586/0x30a0 drivers/infiniband/core/cma.c:4814
    ucma_process_join+0xa76/0xf60 drivers/infiniband/core/ucma.c:1479
    
    CPU: 0 PID: 29874 Comm: syz-executor.3 Not tainted 5.16.0-rc3-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    =====================================================
    
    [1] https://lore.kernel.org/linux-rdma/20220117183832.GD84788@nvidia.com/
    
    Fixes: b5de0c60cc30 ("RDMA/cma: Fix use after free race in roce multicast join")
    Reported-by: syzbot+8fcbb77276d43cc8b693@syzkaller.appspotmail.com
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Link: https://lore.kernel.org/r/58a4a98323b5e6b1282e83f6b76960d06e43b9fa.1679309909.git.leon@kernel.org
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1569a4cdb97387e6fa3b2c1f98c335b44285b35b
Author: Maher Sanalla <msanalla@nvidia.com>
Date:   Thu Mar 16 15:40:49 2023 +0200

    IB/mlx5: Add support for 400G_8X lane speed
    
    [ Upstream commit 88c9483faf15ada14eca82714114656893063458 ]
    
    Currently, when driver queries PTYS to report which link speed is being
    used on its RoCE ports, it does not check the case of having 400Gbps
    transmitted over 8 lanes. Thus it fails to report the said speed and
    instead it defaults to report 10G over 4 lanes.
    
    Add a check for the said speed when querying PTYS and report it back
    correctly when needed.
    
    Fixes: 08e8676f1607 ("IB/mlx5: Add support for 50Gbps per lane link modes")
    Signed-off-by: Maher Sanalla <msanalla@nvidia.com>
    Reviewed-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Saeed Mahameed <saeedm@nvidia.com>
    Link: https://lore.kernel.org/r/ec9040548d119d22557d6a4b4070d6f421701fd4.1678973994.git.leon@kernel.org
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6711bc5c016ff58a7d778deeef05c8c98a7cf49
Author: Tatyana Nikolova <tatyana.e.nikolova@intel.com>
Date:   Wed Mar 15 09:52:31 2023 -0500

    RDMA/irdma: Add ipv4 check to irdma_find_listener()
    
    [ Upstream commit e4522c097ec10f23ea0933e9e69d4fa9d8ae9441 ]
    
    Add ipv4 check to irdma_find_listener(). Otherwise the function
    incorrectly finds and returns a listener with a different addr family for
    the zero IP addr, if a listener with a zero IP addr and the same port as
    the one searched for has already been created.
    
    Fixes: 146b9756f14c ("RDMA/irdma: Add connection manager")
    Signed-off-by: Tatyana Nikolova <tatyana.e.nikolova@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230315145231.931-5-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8c7a7aee8612d545f3115c1b18aac507faeebb4
Author: Mustafa Ismail <mustafa.ismail@intel.com>
Date:   Wed Mar 15 09:52:30 2023 -0500

    RDMA/irdma: Increase iWARP CM default rexmit count
    
    [ Upstream commit 8385a875c9eecc429b2f72970efcbb0e5cb5b547 ]
    
    When running perftest with large number of connections in iWARP mode, the
    passive side could be slow to respond. Increase the rexmit counter default
    to allow scaling connections.
    
    Fixes: 146b9756f14c ("RDMA/irdma: Add connection manager")
    Signed-off-by: Mustafa Ismail <mustafa.ismail@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230315145231.931-4-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 810250c9c6616fe131099c0e51c61f2110ed07bf
Author: Mustafa Ismail <mustafa.ismail@intel.com>
Date:   Wed Mar 15 09:52:29 2023 -0500

    RDMA/irdma: Fix memory leak of PBLE objects
    
    [ Upstream commit b69a6979dbaa2453675fe9c71bdc2497fedb11f9 ]
    
    On rmmod of irdma, the PBLE object memory is not being freed. PBLE object
    memory are not statically pre-allocated at function initialization time
    unlike other HMC objects. PBLEs objects and the Segment Descriptors (SD)
    for it can be dynamically allocated during scale up and SD's remain
    allocated till function deinitialization.
    
    Fix this leak by adding IRDMA_HMC_IW_PBLE to the iw_hmc_obj_types[] table
    and skip pbles in irdma_create_hmc_obj but not in irdma_del_hmc_objects().
    
    Fixes: 44d9e52977a1 ("RDMA/irdma: Implement device initialization definitions")
    Signed-off-by: Mustafa Ismail <mustafa.ismail@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230315145231.931-3-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa2607bae45fcabcb0a463ec5f95ecf6c342c6bf
Author: Chunyan Zhang <chunyan.zhang@unisoc.com>
Date:   Thu Mar 16 10:36:24 2023 +0800

    clk: sprd: set max_register according to mapping range
    
    [ Upstream commit 47d43086531f10539470a63e8ad92803e686a3dd ]
    
    In sprd clock driver, regmap_config.max_register was set to a fixed value
    which is likely larger than the address range configured in device tree,
    when reading registers through debugfs it would cause access violation.
    
    Fixes: d41f59fd92f2 ("clk: sprd: Add common infrastructure")
    Signed-off-by: Chunyan Zhang <chunyan.zhang@unisoc.com>
    Link: https://lore.kernel.org/r/20230316023624.758204-1-chunyan.zhang@unisoc.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0004a50c535fcde15dba3722cff03e9e4cb35707
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Wed Mar 1 17:14:09 2023 +0200

    drm/i915/dsi: fix DSS CTL register offsets for TGL+
    
    commit 6b8446859c971a5783a2cdc90adf32e64de3bd23 upstream.
    
    On TGL+ the DSS control registers are at different offsets, and there's
    one per pipe. Fix the offsets to fix dual link DSI for TGL+.
    
    There would be helpers for this in the DSC code, but just do the quick
    fix now for DSI. Long term, we should probably move all the DSS handling
    into intel_vdsc.c, so exporting the helpers seems counter-productive.
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/8232
    Cc: Ville Syrjala <ville.syrjala@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230301151409.1581574-1-jani.nikula@intel.com
    (cherry picked from commit 1a62dd9895dca78bee28bba3a36f08836fdd143d)
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bb4a52c3caa6af049acb8c14dfa978b16999bdc
Author: Reiji Watanabe <reijiw@google.com>
Date:   Tue Mar 28 19:39:44 2023 -0700

    KVM: arm64: PMU: Restore the guest's EL0 event counting after migration
    
    commit f9ea835e99bc8d049bf2a3ec8fa5a7cb4fcade23 upstream.
    
    Currently, with VHE, KVM enables the EL0 event counting for the
    guest on vcpu_load() or KVM enables it as a part of the PMU
    register emulation process, when needed.  However, in the migration
    case (with VHE), the same handling is lacking, as vPMU register
    values that were restored by userspace haven't been propagated yet
    (the PMU events haven't been created) at the vcpu load-time on the
    first KVM_RUN (kvm_vcpu_pmu_restore_guest() called from vcpu_load()
    on the first KVM_RUN won't do anything as events_{guest,host} of
    kvm_pmu_events are still zero).
    
    So, with VHE, enable the guest's EL0 event counting on the first
    KVM_RUN (after the migration) when needed.  More specifically,
    have kvm_pmu_handle_pmcr() call kvm_vcpu_pmu_restore_guest()
    so that kvm_pmu_handle_pmcr() on the first KVM_RUN can take
    care of it.
    
    Fixes: d0c94c49792c ("KVM: arm64: Restore PMU configuration on first run")
    Cc: stable@vger.kernel.org
    Reviewed-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Reiji Watanabe <reijiw@google.com>
    Link: https://lore.kernel.org/r/20230329023944.2488484-1-reijiw@google.com
    Signed-off-by: Oliver Upton <oliver.upton@linux.dev>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7acce3a0eebd93f27646d0f5ec3edb7cc42c8e3
Author: Christophe Kerello <christophe.kerello@foss.st.com>
Date:   Tue Mar 28 17:58:19 2023 +0200

    mtd: rawnand: stm32_fmc2: use timings.mode instead of checking tRC_min
    
    commit ddbb664b6ab8de7dffa388ae0c88cd18616494e5 upstream.
    
    Use timings.mode value instead of checking tRC_min timing
    for EDO mode support.
    
    Signed-off-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Fixes: 2cd457f328c1 ("mtd: rawnand: stm32_fmc2: add STM32 FMC2 NAND flash controller driver")
    Cc: stable@vger.kernel.org #v5.10+
    Reviewed-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20230328155819.225521-3-christophe.kerello@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7233b5baba105d12643b72967f9c1c92f978c7af
Author: Christophe Kerello <christophe.kerello@foss.st.com>
Date:   Tue Mar 28 17:58:18 2023 +0200

    mtd: rawnand: stm32_fmc2: remove unsupported EDO mode
    
    commit f71e0e329c152c7f11ddfd97ffc62aba152fad3f upstream.
    
    Remove the EDO mode support from as the FMC2 controller does not
    support the feature.
    
    Signed-off-by: Christophe Kerello <christophe.kerello@foss.st.com>
    Fixes: 2cd457f328c1 ("mtd: rawnand: stm32_fmc2: add STM32 FMC2 NAND flash controller driver")
    Cc: stable@vger.kernel.org #v5.4+
    Reviewed-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20230328155819.225521-2-christophe.kerello@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ded9b750f30eec19f75646a9aadb9187c03edc5
Author: Arseniy Krasnov <avkrasnov@sberdevices.ru>
Date:   Wed Mar 29 10:47:26 2023 +0300

    mtd: rawnand: meson: fix bitmask for length in command word
    
    commit 93942b70461574ca7fc3d91494ca89b16a4c64c7 upstream.
    
    Valid mask is 0x3FFF, without this patch the following problems were
    found:
    
    1) [    0.938914] Could not find a valid ONFI parameter page, trying
                      bit-wise majority to recover it
       [    0.947384] ONFI parameter recovery failed, aborting
    
    2) Read with disabled ECC mode was broken.
    
    Fixes: 8fae856c5350 ("mtd: rawnand: meson: add support for Amlogic NAND flash controller")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Arseniy Krasnov <AVKrasnov@sberdevices.ru>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/3794ffbf-dfea-e96f-1f97-fe235b005e19@sberdevices.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0162836a51bb4ca8b545bc0b9a41f23bc64c1819
Author: Bang Li <libang.linuxer@gmail.com>
Date:   Wed Mar 29 00:30:12 2023 +0800

    mtdblock: tolerate corrected bit-flips
    
    commit 0c3089601f064d80b3838eceb711fcac04bceaad upstream.
    
    mtd_read() may return -EUCLEAN in case of corrected bit-flips.This
    particular condition should not be treated like an error.
    
    Signed-off-by: Bang Li <libang.linuxer@gmail.com>
    Fixes: e47f68587b82 ("mtd: check for max_bitflips in mtd_read_oob()")
    Cc: <stable@vger.kernel.org> # v3.7
    Acked-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20230328163012.4264-1-libang.linuxer@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad574345ce26e9a31bb968238552397ba70ef64a
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Tue Apr 4 21:39:34 2023 +0200

    fbmem: Reject FB_ACTIVATE_KD_TEXT from userspace
    
    commit 6fd33a3333c7916689b8f051a185defe4dd515b0 upstream.
    
    This is an oversight from dc5bdb68b5b3 ("drm/fb-helper: Fix vt
    restore") - I failed to realize that nasty userspace could set this.
    
    It's not pretty to mix up kernel-internal and userspace uapi flags
    like this, but since the entire fb_var_screeninfo structure is uapi
    we'd need to either add a new parameter to the ->fb_set_par callback
    and fb_set_par() function, which has a _lot_ of users. Or some other
    fairly ugly side-channel int fb_info. Neither is a pretty prospect.
    
    Instead just correct the issue at hand by filtering out this
    kernel-internal flag in the ioctl handling code.
    
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Acked-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Fixes: dc5bdb68b5b3 ("drm/fb-helper: Fix vt restore")
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: shlomo@fastmail.com
    Cc: Michel Dänzer <michel@daenzer.net>
    Cc: Noralf Trønnes <noralf@tronnes.org>
    Cc: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: Daniel Vetter <daniel.vetter@intel.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Maxime Ripard <mripard@kernel.org>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: dri-devel@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v5.7+
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Cc: Qiujun Huang <hqjagain@gmail.com>
    Cc: Peter Rosin <peda@axentia.se>
    Cc: linux-fbdev@vger.kernel.org
    Cc: Helge Deller <deller@gmx.de>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Shigeru Yoshida <syoshida@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230404193934.472457-1-daniel.vetter@ffwll.ch
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a55a95365e0888f4fa7caa09e68f3c18749c33f2
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Mar 29 09:13:05 2023 +0900

    btrfs: fix fast csum implementation detection
    
    commit 68d99ab0e9221ef54506f827576c5a914680eeaf upstream.
    
    The BTRFS_FS_CSUM_IMPL_FAST flag is currently set whenever a non-generic
    crc32c is detected, which is the incorrect check if the file system uses
    a different checksumming algorithm.  Refactor the code to only check
    this if crc32c is actually used.  Note that in an ideal world the
    information if an algorithm is hardware accelerated or not should be
    provided by the crypto API instead, but that's left for another day.
    
    CC: stable@vger.kernel.org # 5.4.x: c8a5f8ca9a9c: btrfs: print checksum type and implementation at mount time
    CC: stable@vger.kernel.org # 5.4.x
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6da03c237d56f0bfbbd6a410b02fb020f1480f1d
Author: David Sterba <dsterba@suse.com>
Date:   Wed Jun 22 20:45:18 2022 +0200

    btrfs: print checksum type and implementation at mount time
    
    commit c8a5f8ca9a9c7d5c5bc31d54f47ea9d86f93ed69 upstream.
    
    Per user request, print the checksum type and implementation at mount
    time among the messages. The checksum is user configurable and the
    actual crypto implementation is useful to see for performance reasons.
    The same information is also available after mount in
    /sys/fs/FSID/checksum file.
    
    Example:
    
      [25.323662] BTRFS info (device vdb): using sha256 (sha256-generic) checksum algorithm
    
    Link: https://github.com/kdave/btrfs-progs/issues/483
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0efb276d5848a3accc37c6f41b85e442c4768169
Author: Min Li <lm0963hack@gmail.com>
Date:   Sat Mar 4 22:23:30 2023 +0800

    Bluetooth: Fix race condition in hidp_session_thread
    
    commit c95930abd687fcd1aa040dc4fe90dff947916460 upstream.
    
    There is a potential race condition in hidp_session_thread that may
    lead to use-after-free. For instance, the timer is active while
    hidp_del_timer is called in hidp_session_thread(). After hidp_session_put,
    then 'session' will be freed, causing kernel panic when hidp_idle_timeout
    is running.
    
    The solution is to use del_timer_sync instead of del_timer.
    
    Here is the call trace:
    
    ? hidp_session_probe+0x780/0x780
    call_timer_fn+0x2d/0x1e0
    __run_timers.part.0+0x569/0x940
    hidp_session_probe+0x780/0x780
    call_timer_fn+0x1e0/0x1e0
    ktime_get+0x5c/0xf0
    lapic_next_deadline+0x2c/0x40
    clockevents_program_event+0x205/0x320
    run_timer_softirq+0xa9/0x1b0
    __do_softirq+0x1b9/0x641
    __irq_exit_rcu+0xdc/0x190
    irq_exit_rcu+0xe/0x20
    sysvec_apic_timer_interrupt+0xa1/0xc0
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Min Li <lm0963hack@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac6725a634f7e8c0330610a8527f20c730b61115
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Apr 6 09:33:09 2023 -0700

    Bluetooth: L2CAP: Fix use-after-free in l2cap_disconnect_{req,rsp}
    
    commit a2a9339e1c9deb7e1e079e12e27a0265aea8421a upstream.
    
    Similar to commit d0be8347c623 ("Bluetooth: L2CAP: Fix use-after-free
    caused by l2cap_chan_put"), just use l2cap_chan_hold_unless_zero to
    prevent referencing a channel that is about to be destroyed.
    
    Cc: stable@kernel.org
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Min Li <lm0963hack@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d98498ad5695b4f5d8885b94bc2a93f47f83b7ce
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:20 2023 +0200

    ALSA: hda/sigmatel: fix S/PDIF out on Intel D*45* motherboards
    
    commit f342ac00da1064eb4f94b1f4bcacbdfea955797a upstream.
    
    The BIOS botches this one completely - it says the 2nd S/PDIF output is
    used, while in fact it's the 1st one. This is tested on DP45SG, but I'm
    assuming it's valid for the other boards in the series as well.
    
    Also add some comments regarding the pins.
    FWIW, the codec is apparently still sold by Tempo Semiconductor, Inc.,
    where one can download the documentation.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201220.2197826-2-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5797c87e74ed4ee3867dba7f841c6158249ce91
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:20 2023 +0200

    ALSA: emu10k1: don't create old pass-through playback device on Audigy
    
    commit 8dd13214a810c695044aa168c0ddba1a9c433e4f upstream.
    
    It could have never worked, as snd_emu10k1_fx8010_playback_prepare() and
    snd_emu10k1_fx8010_playback_hw_free() assume the emu10k1 offset for the
    ETRAM, and the default DSP code includes no handler for it. It also
    wouldn't make a lot of sense to make it work, as Audigy has an own, much
    simpler, pass-through mechanism. So just skip creation of the device.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201220.2197938-1-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1ef453157b47cf48f5c14775d830c50cf11f4db
Author: Xu Biang <xubiang@hust.edu.cn>
Date:   Thu Apr 6 06:28:01 2023 -0700

    ALSA: firewire-tascam: add missing unwind goto in snd_tscm_stream_start_duplex()
    
    commit fb4a624f88f658c7b7ae124452bd42eaa8ac7168 upstream.
    
    Smatch Warns:
    sound/firewire/tascam/tascam-stream.c:493 snd_tscm_stream_start_duplex()
    warn: missing unwind goto?
    
    The direct return will cause the stream list of "&tscm->domain" unemptied
    and the session in "tscm" unfinished if amdtp_domain_start() returns with
    an error.
    
    Fix this by changing the direct return to a goto which will empty the
    stream list of "&tscm->domain" and finish the session in "tscm".
    
    The snd_tscm_stream_start_duplex() function is called in the prepare
    callback of PCM. According to "ALSA Kernel API Documentation", the prepare
    callback of PCM will be called many times at each setup. So, if the
    "&d->streams" list is not emptied, when the prepare callback is called
    next time, snd_tscm_stream_start_duplex() will receive -EBUSY from
    amdtp_domain_add_stream() that tries to add an existing stream to the
    domain. The error handling code after the "error" label will be executed
    in this case, and the "&d->streams" list will be emptied. So not emptying
    the "&d->streams" list will not cause an issue. But it is more efficient
    and readable to empty it on the first error by changing the direct return
    to a goto statement.
    
    The session in "tscm" has been begun before amdtp_domain_start(), so it
    needs to be finished when amdtp_domain_start() fails.
    
    Fixes: c281d46a51e3 ("ALSA: firewire-tascam: support AMDTP domain")
    Signed-off-by: Xu Biang <xubiang@hust.edu.cn>
    Reviewed-by: Dan Carpenter <error27@gmail.com>
    Acked-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230406132801.105108-1-xubiang@hust.edu.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7901d787e4557c8e2746dfb363ba2c3af949a9e8
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:19 2023 +0200

    ALSA: i2c/cs8427: fix iec958 mixer control deactivation
    
    commit e98e7a82bca2b6dce3e03719cff800ec913f9af7 upstream.
    
    snd_cs8427_iec958_active() would always delete
    SNDRV_CTL_ELEM_ACCESS_INACTIVE, even though the function has an
    argument `active`.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201219.2197811-1-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8697aa12ae67b2ebc84faf3a70328ed66b40007
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:19 2023 +0200

    ALSA: hda/sigmatel: add pin overrides for Intel DP45SG motherboard
    
    commit c17f8fd31700392b1bb9e7b66924333568cb3700 upstream.
    
    Like the other boards from the D*45* series, this one sets up the
    outputs not quite correctly.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201220.2197826-1-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34a0ada0a8b2b65d38cd3f2ffaac3ed8d844993a
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Wed Apr 5 22:12:20 2023 +0200

    ALSA: emu10k1: fix capture interrupt handler unlinking
    
    commit b09c551c77c7e01dc6e4f3c8bf06b5ffa7b06db5 upstream.
    
    Due to two copy/pastos, closing the MIC or EFX capture device would
    make a running ADC capture hang due to unsetting its interrupt handler.
    In principle, this would have also allowed dereferencing dangling
    pointers, but we're actually rather thorough at disabling and flushing
    the ints.
    
    While it may sound like one, this actually wasn't a hypothetical bug:
    PortAudio will open a capture stream at startup (and close it right
    away) even if not asked to. If the first device is busy, it will just
    proceed with the next one ... thus killing a concurrent capture.
    
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230405201220.2197923-1-oswald.buddenhagen@gmx.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55e4eef5545d82e63ce195f0cff5c35441337e10
Author: Kornel Dulęba <korneld@chromium.org>
Date:   Tue Apr 11 13:49:32 2023 +0000

    Revert "pinctrl: amd: Disable and mask interrupts on resume"
    
    commit 534e465845ebfb4a97eb5459d3931a0b35e3b9a5 upstream.
    
    This reverts commit b26cd9325be4c1fcd331b77f10acb627c560d4d7.
    
    This patch introduces a regression on Lenovo Z13, which can't wake
    from the lid with it applied; and some unspecified AMD based Dell
    platforms are unable to wake from hitting the power button
    
    Signed-off-by: Kornel Dulęba <korneld@chromium.org>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Link: https://lore.kernel.org/r/20230411134932.292287-1-korneld@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
