commit f4245f05389c29c0d556fea359b2fcfd8dce7bdb
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Dec 2 17:40:07 2022 +0100

    Linux 5.10.157
    
    Link: https://lore.kernel.org/r/20221130180528.466039523@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Rudi Heitbaum <rudi@heitbaum.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4801672fb076d546c67504ec9810a3a467e91768
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Nov 23 09:10:42 2022 +0100

    fuse: lock inode unconditionally in fuse_fallocate()
    
    commit 44361e8cf9ddb23f17bdcc40ca944abf32e83e79 upstream.
    
    file_modified() must be called with inode lock held.  fuse_fallocate()
    didn't lock the inode in case of just FALLOC_KEEP_SIZE flags value, which
    resulted in a kernel Warning in notify_change().
    
    Lock the inode unconditionally, like all other fallocate implementations
    do.
    
    Reported-by: Pengfei Xu <pengfei.xu@intel.com>
    Reported-and-tested-by: syzbot+462da39f0667b357c4b6@syzkaller.appspotmail.com
    Fixes: 4a6f278d4827 ("fuse: add file_modified() to fallocate")
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86f0082fb9470904b15546726417f28077088fee
Author: Andrzej Hajda <andrzej.hajda@intel.com>
Date:   Mon Nov 14 11:38:24 2022 +0100

    drm/i915: fix TLB invalidation for Gen12 video and compute engines
    
    commit 04aa64375f48a5d430b5550d9271f8428883e550 upstream.
    
    In case of Gen12 video and compute engines, TLB_INV registers are masked -
    to modify one bit, corresponding bit in upper half of the register must
    be enabled, otherwise nothing happens.
    
    CVE: CVE-2022-4139
    Suggested-by: Chris Wilson <chris.p.wilson@intel.com>
    Signed-off-by: Andrzej Hajda <andrzej.hajda@intel.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Fixes: 7938d61591d3 ("drm/i915: Flush TLBs before releasing backing store")
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feb97cf45e77ec7dfec56a3e1f0a1c8763f286ff
Author: Christian König <christian.koenig@amd.com>
Date:   Wed Nov 9 12:14:44 2022 +0100

    drm/amdgpu: always register an MMU notifier for userptr
    
    commit b39df63b16b64a3af42695acb9bc567aad144776 upstream.
    
    Since switching to HMM we always need that because we no longer grab
    references to the pages.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Felix Kuehling <Felix.Kuehling@amd.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 596b7d55d7c65984cb5e8f4b97b899e1df22a2d5
Author: Lyude Paul <lyude@redhat.com>
Date:   Mon Nov 14 17:20:45 2022 -0500

    drm/amd/dc/dce120: Fix audio register mapping, stop triggering KASAN
    
    commit 44035ec2fde1114254ee465f9ba3bb246b0b6283 upstream.
    
    There's been a very long running bug that seems to have been neglected for
    a while, where amdgpu consistently triggers a KASAN error at start:
    
      BUG: KASAN: global-out-of-bounds in read_indirect_azalia_reg+0x1d4/0x2a0 [amdgpu]
      Read of size 4 at addr ffffffffc2274b28 by task modprobe/1889
    
    After digging through amd's rather creative method for accessing registers,
    I eventually discovered the problem likely has to do with the fact that on
    my dce120 GPU there are supposedly 7 sets of audio registers. But we only
    define a register mapping for 6 sets.
    
    So, fix this and fix the KASAN warning finally.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c86c1a7037cd271dbbb315c3add2dcb589a5a2c8
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Tue Nov 22 19:50:02 2022 +0800

    btrfs: sysfs: normalize the error handling branch in btrfs_init_sysfs()
    
    commit ffdbb44f2f23f963b8f5672e35c3a26088177a62 upstream.
    
    Although kset_unregister() can eventually remove all attribute files,
    explicitly rolling back with the matching function makes the code logic
    look clearer.
    
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1581830c0eca75c5e77bc8671ab8ba9cc2e00de7
Author: Anand Jain <anand.jain@oracle.com>
Date:   Thu Nov 10 11:36:31 2022 +0530

    btrfs: free btrfs_path before copying subvol info to userspace
    
    commit 013c1c5585ebcfb19c88efe79063d0463b1b6159 upstream.
    
    btrfs_ioctl_get_subvol_info() frees the search path after the userspace
    copy from the temp buffer @subvol_info. This can lead to a lock splat
    warning.
    
    Fix this by freeing the path before we copy it to userspace.
    
    CC: stable@vger.kernel.org # 4.19+
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bdb8f7ef87d534b507142185cd03e02f5e4f0e8
Author: Anand Jain <anand.jain@oracle.com>
Date:   Thu Nov 10 11:36:29 2022 +0530

    btrfs: free btrfs_path before copying fspath to userspace
    
    commit 8cf96b409d9b3946ece58ced13f92d0f775b0442 upstream.
    
    btrfs_ioctl_ino_to_path() frees the search path after the userspace copy
    from the temp buffer @ipath->fspath. Which potentially can lead to a lock
    splat warning.
    
    Fix this by freeing the path before we copy it to userspace.
    
    CC: stable@vger.kernel.org # 4.19+
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24a37ba2cb6616494f9af585a8d5d251c85c0c38
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Nov 7 11:44:51 2022 -0500

    btrfs: free btrfs_path before copying root refs to userspace
    
    commit b740d806166979488e798e41743aaec051f2443f upstream.
    
    Syzbot reported the following lockdep splat
    
    ======================================================
    WARNING: possible circular locking dependency detected
    6.0.0-rc7-syzkaller-18095-gbbed346d5a96 #0 Not tainted
    ------------------------------------------------------
    syz-executor307/3029 is trying to acquire lock:
    ffff0000c02525d8 (&mm->mmap_lock){++++}-{3:3}, at: __might_fault+0x54/0xb4 mm/memory.c:5576
    
    but task is already holding lock:
    ffff0000c958a608 (btrfs-root-00){++++}-{3:3}, at: __btrfs_tree_read_lock fs/btrfs/locking.c:134 [inline]
    ffff0000c958a608 (btrfs-root-00){++++}-{3:3}, at: btrfs_tree_read_lock fs/btrfs/locking.c:140 [inline]
    ffff0000c958a608 (btrfs-root-00){++++}-{3:3}, at: btrfs_read_lock_root_node+0x13c/0x1c0 fs/btrfs/locking.c:279
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #3 (btrfs-root-00){++++}-{3:3}:
           down_read_nested+0x64/0x84 kernel/locking/rwsem.c:1624
           __btrfs_tree_read_lock fs/btrfs/locking.c:134 [inline]
           btrfs_tree_read_lock fs/btrfs/locking.c:140 [inline]
           btrfs_read_lock_root_node+0x13c/0x1c0 fs/btrfs/locking.c:279
           btrfs_search_slot_get_root+0x74/0x338 fs/btrfs/ctree.c:1637
           btrfs_search_slot+0x1b0/0xfd8 fs/btrfs/ctree.c:1944
           btrfs_update_root+0x6c/0x5a0 fs/btrfs/root-tree.c:132
           commit_fs_roots+0x1f0/0x33c fs/btrfs/transaction.c:1459
           btrfs_commit_transaction+0x89c/0x12d8 fs/btrfs/transaction.c:2343
           flush_space+0x66c/0x738 fs/btrfs/space-info.c:786
           btrfs_async_reclaim_metadata_space+0x43c/0x4e0 fs/btrfs/space-info.c:1059
           process_one_work+0x2d8/0x504 kernel/workqueue.c:2289
           worker_thread+0x340/0x610 kernel/workqueue.c:2436
           kthread+0x12c/0x158 kernel/kthread.c:376
           ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:860
    
    -> #2 (&fs_info->reloc_mutex){+.+.}-{3:3}:
           __mutex_lock_common+0xd4/0xca8 kernel/locking/mutex.c:603
           __mutex_lock kernel/locking/mutex.c:747 [inline]
           mutex_lock_nested+0x38/0x44 kernel/locking/mutex.c:799
           btrfs_record_root_in_trans fs/btrfs/transaction.c:516 [inline]
           start_transaction+0x248/0x944 fs/btrfs/transaction.c:752
           btrfs_start_transaction+0x34/0x44 fs/btrfs/transaction.c:781
           btrfs_create_common+0xf0/0x1b4 fs/btrfs/inode.c:6651
           btrfs_create+0x8c/0xb0 fs/btrfs/inode.c:6697
           lookup_open fs/namei.c:3413 [inline]
           open_last_lookups fs/namei.c:3481 [inline]
           path_openat+0x804/0x11c4 fs/namei.c:3688
           do_filp_open+0xdc/0x1b8 fs/namei.c:3718
           do_sys_openat2+0xb8/0x22c fs/open.c:1313
           do_sys_open fs/open.c:1329 [inline]
           __do_sys_openat fs/open.c:1345 [inline]
           __se_sys_openat fs/open.c:1340 [inline]
           __arm64_sys_openat+0xb0/0xe0 fs/open.c:1340
           __invoke_syscall arch/arm64/kernel/syscall.c:38 [inline]
           invoke_syscall arch/arm64/kernel/syscall.c:52 [inline]
           el0_svc_common+0x138/0x220 arch/arm64/kernel/syscall.c:142
           do_el0_svc+0x48/0x164 arch/arm64/kernel/syscall.c:206
           el0_svc+0x58/0x150 arch/arm64/kernel/entry-common.c:636
           el0t_64_sync_handler+0x84/0xf0 arch/arm64/kernel/entry-common.c:654
           el0t_64_sync+0x18c/0x190 arch/arm64/kernel/entry.S:581
    
    -> #1 (sb_internal#2){.+.+}-{0:0}:
           percpu_down_read include/linux/percpu-rwsem.h:51 [inline]
           __sb_start_write include/linux/fs.h:1826 [inline]
           sb_start_intwrite include/linux/fs.h:1948 [inline]
           start_transaction+0x360/0x944 fs/btrfs/transaction.c:683
           btrfs_join_transaction+0x30/0x40 fs/btrfs/transaction.c:795
           btrfs_dirty_inode+0x50/0x140 fs/btrfs/inode.c:6103
           btrfs_update_time+0x1c0/0x1e8 fs/btrfs/inode.c:6145
           inode_update_time fs/inode.c:1872 [inline]
           touch_atime+0x1f0/0x4a8 fs/inode.c:1945
           file_accessed include/linux/fs.h:2516 [inline]
           btrfs_file_mmap+0x50/0x88 fs/btrfs/file.c:2407
           call_mmap include/linux/fs.h:2192 [inline]
           mmap_region+0x7fc/0xc14 mm/mmap.c:1752
           do_mmap+0x644/0x97c mm/mmap.c:1540
           vm_mmap_pgoff+0xe8/0x1d0 mm/util.c:552
           ksys_mmap_pgoff+0x1cc/0x278 mm/mmap.c:1586
           __do_sys_mmap arch/arm64/kernel/sys.c:28 [inline]
           __se_sys_mmap arch/arm64/kernel/sys.c:21 [inline]
           __arm64_sys_mmap+0x58/0x6c arch/arm64/kernel/sys.c:21
           __invoke_syscall arch/arm64/kernel/syscall.c:38 [inline]
           invoke_syscall arch/arm64/kernel/syscall.c:52 [inline]
           el0_svc_common+0x138/0x220 arch/arm64/kernel/syscall.c:142
           do_el0_svc+0x48/0x164 arch/arm64/kernel/syscall.c:206
           el0_svc+0x58/0x150 arch/arm64/kernel/entry-common.c:636
           el0t_64_sync_handler+0x84/0xf0 arch/arm64/kernel/entry-common.c:654
           el0t_64_sync+0x18c/0x190 arch/arm64/kernel/entry.S:581
    
    -> #0 (&mm->mmap_lock){++++}-{3:3}:
           check_prev_add kernel/locking/lockdep.c:3095 [inline]
           check_prevs_add kernel/locking/lockdep.c:3214 [inline]
           validate_chain kernel/locking/lockdep.c:3829 [inline]
           __lock_acquire+0x1530/0x30a4 kernel/locking/lockdep.c:5053
           lock_acquire+0x100/0x1f8 kernel/locking/lockdep.c:5666
           __might_fault+0x7c/0xb4 mm/memory.c:5577
           _copy_to_user include/linux/uaccess.h:134 [inline]
           copy_to_user include/linux/uaccess.h:160 [inline]
           btrfs_ioctl_get_subvol_rootref+0x3a8/0x4bc fs/btrfs/ioctl.c:3203
           btrfs_ioctl+0xa08/0xa64 fs/btrfs/ioctl.c:5556
           vfs_ioctl fs/ioctl.c:51 [inline]
           __do_sys_ioctl fs/ioctl.c:870 [inline]
           __se_sys_ioctl fs/ioctl.c:856 [inline]
           __arm64_sys_ioctl+0xd0/0x140 fs/ioctl.c:856
           __invoke_syscall arch/arm64/kernel/syscall.c:38 [inline]
           invoke_syscall arch/arm64/kernel/syscall.c:52 [inline]
           el0_svc_common+0x138/0x220 arch/arm64/kernel/syscall.c:142
           do_el0_svc+0x48/0x164 arch/arm64/kernel/syscall.c:206
           el0_svc+0x58/0x150 arch/arm64/kernel/entry-common.c:636
           el0t_64_sync_handler+0x84/0xf0 arch/arm64/kernel/entry-common.c:654
           el0t_64_sync+0x18c/0x190 arch/arm64/kernel/entry.S:581
    
    other info that might help us debug this:
    
    Chain exists of:
      &mm->mmap_lock --> &fs_info->reloc_mutex --> btrfs-root-00
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(btrfs-root-00);
                                   lock(&fs_info->reloc_mutex);
                                   lock(btrfs-root-00);
      lock(&mm->mmap_lock);
    
     *** DEADLOCK ***
    
    1 lock held by syz-executor307/3029:
     #0: ffff0000c958a608 (btrfs-root-00){++++}-{3:3}, at: __btrfs_tree_read_lock fs/btrfs/locking.c:134 [inline]
     #0: ffff0000c958a608 (btrfs-root-00){++++}-{3:3}, at: btrfs_tree_read_lock fs/btrfs/locking.c:140 [inline]
     #0: ffff0000c958a608 (btrfs-root-00){++++}-{3:3}, at: btrfs_read_lock_root_node+0x13c/0x1c0 fs/btrfs/locking.c:279
    
    stack backtrace:
    CPU: 0 PID: 3029 Comm: syz-executor307 Not tainted 6.0.0-rc7-syzkaller-18095-gbbed346d5a96 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/30/2022
    Call trace:
     dump_backtrace+0x1c4/0x1f0 arch/arm64/kernel/stacktrace.c:156
     show_stack+0x2c/0x54 arch/arm64/kernel/stacktrace.c:163
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0x104/0x16c lib/dump_stack.c:106
     dump_stack+0x1c/0x58 lib/dump_stack.c:113
     print_circular_bug+0x2c4/0x2c8 kernel/locking/lockdep.c:2053
     check_noncircular+0x14c/0x154 kernel/locking/lockdep.c:2175
     check_prev_add kernel/locking/lockdep.c:3095 [inline]
     check_prevs_add kernel/locking/lockdep.c:3214 [inline]
     validate_chain kernel/locking/lockdep.c:3829 [inline]
     __lock_acquire+0x1530/0x30a4 kernel/locking/lockdep.c:5053
     lock_acquire+0x100/0x1f8 kernel/locking/lockdep.c:5666
     __might_fault+0x7c/0xb4 mm/memory.c:5577
     _copy_to_user include/linux/uaccess.h:134 [inline]
     copy_to_user include/linux/uaccess.h:160 [inline]
     btrfs_ioctl_get_subvol_rootref+0x3a8/0x4bc fs/btrfs/ioctl.c:3203
     btrfs_ioctl+0xa08/0xa64 fs/btrfs/ioctl.c:5556
     vfs_ioctl fs/ioctl.c:51 [inline]
     __do_sys_ioctl fs/ioctl.c:870 [inline]
     __se_sys_ioctl fs/ioctl.c:856 [inline]
     __arm64_sys_ioctl+0xd0/0x140 fs/ioctl.c:856
     __invoke_syscall arch/arm64/kernel/syscall.c:38 [inline]
     invoke_syscall arch/arm64/kernel/syscall.c:52 [inline]
     el0_svc_common+0x138/0x220 arch/arm64/kernel/syscall.c:142
     do_el0_svc+0x48/0x164 arch/arm64/kernel/syscall.c:206
     el0_svc+0x58/0x150 arch/arm64/kernel/entry-common.c:636
     el0t_64_sync_handler+0x84/0xf0 arch/arm64/kernel/entry-common.c:654
     el0t_64_sync+0x18c/0x190 arch/arm64/kernel/entry.S:581
    
    We do generally the right thing here, copying the references into a
    temporary buffer, however we are still holding the path when we do
    copy_to_user from the temporary buffer.  Fix this by freeing the path
    before we copy to user space.
    
    Reported-by: syzbot+4ef9e52e464c6ff47d9d@syzkaller.appspotmail.com
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b56d6e55857bb7dff8f600479df4f11db114417b
Author: Luiz Capitulino <luizcap@amazon.com>
Date:   Mon Nov 28 17:08:35 2022 +0000

    genirq: Take the proposed affinity at face value if force==true
    
    From: Marc Zyngier <maz@kernel.org>
    
    commit c48c8b829d2b966a6649827426bcdba082ccf922 upstream.
    
    Although setting the affinity of an interrupt to a set of CPUs that doesn't
    have any online CPU is generally frowned apon, there are a few limited
    cases where such affinity is set from a CPUHP notifier, setting the
    affinity to a CPU that isn't online yet.
    
    The saving grace is that this is always done using the 'force' attribute,
    which gives a hint that the affinity setting can be outside of the online
    CPU mask and the callsite set this flag with the knowledge that the
    underlying interrupt controller knows to handle it.
    
    This restores the expected behaviour on Marek's system.
    
    Fixes: 33de0aa4bae9 ("genirq: Always limit the affinity to online CPUs")
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/r/4b7fc13c-887b-a664-26e8-45aed13f048a@samsung.com
    Link: https://lore.kernel.org/r/20220414140011.541725-1-maz@kernel.org
    
    Signed-off-by: Luiz Capitulino <luizcap@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d90a2b98e6e5f793cd0c434f28bb98a1eb22fe0
Author: Luiz Capitulino <luizcap@amazon.com>
Date:   Mon Nov 28 17:08:34 2022 +0000

    irqchip/gic-v3: Always trust the managed affinity provided by the core code
    
    From: Marc Zyngier <maz@kernel.org>
    
    commit 3f893a5962d31c0164efdbf6174ed0784f1d7603 upstream.
    
    Now that the core code has been fixed to always give us an affinity
    that only includes online CPUs, directly use this affinity when
    computing a target CPU.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20220405185040.206297-4-maz@kernel.org
    
    Signed-off-by: Luiz Capitulino <luizcap@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d2c59ee9954187737110594220a53007ad0d74
Author: Luiz Capitulino <luizcap@amazon.com>
Date:   Mon Nov 28 17:08:33 2022 +0000

    genirq: Always limit the affinity to online CPUs
    
    From: Marc Zyngier <maz@kernel.org>
    
    commit 33de0aa4bae982ed6f7c777f86b5af3e627ac937 upstream.
    
    [ Fixed small conflicts due to the HK_FLAG_MANAGED_IRQ flag been
      renamed on upstream ]
    
    When booting with maxcpus=<small number> (or even loading a driver
    while most CPUs are offline), it is pretty easy to observe managed
    affinities containing a mix of online and offline CPUs being passed
    to the irqchip driver.
    
    This means that the irqchip cannot trust the affinity passed down
    from the core code, which is a bit annoying and requires (at least
    in theory) all drivers to implement some sort of affinity narrowing.
    
    In order to address this, always limit the cpumask to the set of
    online CPUs.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20220405185040.206297-3-maz@kernel.org
    
    Signed-off-by: Luiz Capitulino <luizcap@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8f80d532f7811a1da04480233dbb4be0256e38d
Author: Luiz Capitulino <luizcap@amazon.com>
Date:   Mon Nov 28 17:08:32 2022 +0000

    genirq/msi: Shutdown managed interrupts with unsatifiable affinities
    
    From: Marc Zyngier <maz@kernel.org>
    
    commit d802057c7c553ad426520a053da9f9fe08e2c35a upstream.
    
    [ This commit is almost a rewrite because it conflicts with Thomas
      Gleixner's refactoring of this code in v5.17-rc1. I wasn't sure if
      I should drop all the s-o-bs (including Mark's), but decided
      to keep as the original commit ]
    
    When booting with maxcpus=<small number>, interrupt controllers
    such as the GICv3 ITS may not be able to satisfy the affinity of
    some managed interrupts, as some of the HW resources are simply
    not available.
    
    The same thing happens when loading a driver using managed interrupts
    while CPUs are offline.
    
    In order to deal with this, do not try to activate such interrupt
    if there is no online CPU capable of handling it. Instead, place
    it in shutdown state. Once a capable CPU shows up, it will be
    activated.
    
    Reported-by: John Garry <john.garry@huawei.com>
    Reported-by: David Decotigny <ddecotig@google.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: John Garry <john.garry@huawei.com>
    Link: https://lore.kernel.org/r/20220405185040.206297-2-maz@kernel.org
    
    Signed-off-by: Luiz Capitulino <luizcap@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eb6b89a4e9f9e44c3170d70d8d16c3c8dc8c800
Author: Phil Turnbull <philipturnbull@github.com>
Date:   Wed Nov 23 10:35:43 2022 -0500

    wifi: wilc1000: validate number of channels
    
    commit 0cdfa9e6f0915e3d243e2393bfa8a22e12d553b0 upstream.
    
    There is no validation of 'e->no_of_channels' which can trigger an
    out-of-bounds write in the following 'memset' call. Validate that the
    number of channels does not extends beyond the size of the channel list
    element.
    
    Signed-off-by: Phil Turnbull <philipturnbull@github.com>
    Tested-by: Ajay Kathat <ajay.kathat@microchip.com>
    Acked-by: Ajay Kathat <ajay.kathat@microchip.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221123153543.8568-5-philipturnbull@github.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a068535c0073c8402aa0755e8ef259fb98a33c5
Author: Phil Turnbull <philipturnbull@github.com>
Date:   Wed Nov 23 10:35:42 2022 -0500

    wifi: wilc1000: validate length of IEEE80211_P2P_ATTR_CHANNEL_LIST attribute
    
    commit f9b62f9843c7b0afdaecabbcebf1dbba18599408 upstream.
    
    Validate that the IEEE80211_P2P_ATTR_CHANNEL_LIST attribute contains
    enough space for a 'struct wilc_attr_oper_ch'. If the attribute is too
    small then it can trigger an out-of-bounds write later in the function.
    
    'struct wilc_attr_oper_ch' is variable sized so also check 'attr_len'
    does not extend beyond the end of 'buf'.
    
    Signed-off-by: Phil Turnbull <philipturnbull@github.com>
    Tested-by: Ajay Kathat <ajay.kathat@microchip.com>
    Acked-by: Ajay Kathat <ajay.kathat@microchip.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221123153543.8568-4-philipturnbull@github.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 905f886eae4b065656a575e8a02544045cbaadcf
Author: Phil Turnbull <philipturnbull@github.com>
Date:   Wed Nov 23 10:35:41 2022 -0500

    wifi: wilc1000: validate length of IEEE80211_P2P_ATTR_OPER_CHANNEL attribute
    
    commit 051ae669e4505abbe05165bebf6be7922de11f41 upstream.
    
    Validate that the IEEE80211_P2P_ATTR_OPER_CHANNEL attribute contains
    enough space for a 'struct struct wilc_attr_oper_ch'. If the attribute is
    too small then it triggers an out-of-bounds write later in the function.
    
    Signed-off-by: Phil Turnbull <philipturnbull@github.com>
    Tested-by: Ajay Kathat <ajay.kathat@microchip.com>
    Acked-by: Ajay Kathat <ajay.kathat@microchip.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221123153543.8568-3-philipturnbull@github.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c6535fb4d67ea37c98a1d1d24ca33dd5ec42693
Author: Phil Turnbull <philipturnbull@github.com>
Date:   Wed Nov 23 10:35:40 2022 -0500

    wifi: wilc1000: validate pairwise and authentication suite offsets
    
    commit cd21d99e595ec1d8721e1058dcdd4f1f7de1d793 upstream.
    
    There is no validation of 'offset' which can trigger an out-of-bounds
    read when extracting RSN capabilities.
    
    Signed-off-by: Phil Turnbull <philipturnbull@github.com>
    Tested-by: Ajay Kathat <ajay.kathat@microchip.com>
    Acked-by: Ajay Kathat <ajay.kathat@microchip.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221123153543.8568-2-philipturnbull@github.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64b7f9a7ddfbcc7cb14a0421fdc18610f862bdde
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 15 12:51:50 2022 -0500

    dm integrity: clear the journal on suspend
    
    [ Upstream commit 984bf2cc531e778e49298fdf6730e0396166aa21 ]
    
    There was a problem that a user burned a dm-integrity image on CDROM
    and could not activate it because it had a non-empty journal.
    
    Fix this problem by flushing the journal (done by the previous commit)
    and clearing the journal (done by this commit). Once the journal is
    cleared, dm-integrity won't attempt to replay it on the next
    activation.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d306f73079f36f38eaee3163c7275f06bf75b5f4
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 15 12:48:26 2022 -0500

    dm integrity: flush the journal on suspend
    
    [ Upstream commit 5e5dab5ec763d600fe0a67837dd9155bdc42f961 ]
    
    This commit flushes the journal on suspend. It is prerequisite for the
    next commit that enables activating dm integrity devices in read-only mode.
    
    Note that we deliberately didn't flush the journal on suspend, so that the
    journal replay code would be tested. However, the dm-integrity code is 5
    years old now, so that journal replay is well-tested, and we can make this
    change now.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79d9a11679785d7c5b10ce5ee85f43165d3f891f
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Oct 20 15:23:40 2022 +0100

    gpu: host1x: Avoid trying to use GART on Tegra20
    
    [ Upstream commit c2418f911a31a266af4fbaca998dc73d3676475a ]
    
    Since commit c7e3ca515e78 ("iommu/tegra: gart: Do not register with
    bus") quite some time ago, the GART driver has effectively disabled
    itself to avoid issues with the GPU driver expecting it to work in ways
    that it doesn't. As of commit 57365a04c921 ("iommu: Move bus setup to
    IOMMU device registration") that bodge no longer works, but really the
    GPU driver should be responsible for its own behaviour anyway. Make the
    workaround explicit.
    
    Reported-by: Jon Hunter <jonathanh@nvidia.com>
    Suggested-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7f30b5b8d7c56920bfc8436b0fcc624d0454497
Author: Enrico Sau <enrico.sau@gmail.com>
Date:   Tue Nov 15 11:58:59 2022 +0100

    net: usb: qmi_wwan: add Telit 0x103a composition
    
    [ Upstream commit e103ba33998d0f25653cc8ebe745b68d1ee10cda ]
    
    Add the following Telit LE910C4-WWX composition:
    
    0x103a: rmnet
    
    Signed-off-by: Enrico Sau <enrico.sau@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Link: https://lore.kernel.org/r/20221115105859.14324-1-enrico.sau@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e8eaa939eea93f961417e33f6d02db41e1f4fb6
Author: Gleb Mazovetskiy <glex.spb@gmail.com>
Date:   Mon Nov 14 22:56:16 2022 +0000

    tcp: configurable source port perturb table size
    
    [ Upstream commit aeac4ec8f46d610a10adbaeff5e2edf6a88ffc62 ]
    
    On embedded systems with little memory and no relevant
    security concerns, it is beneficial to reduce the size
    of the table.
    
    Reducing the size from 2^16 to 2^8 saves 255 KiB
    of kernel RAM.
    
    Makes the table size configurable as an expert option.
    
    The size was previously increased from 2^8 to 2^16
    in commit 4c2c8f03a5ab ("tcp: increase source port perturb table to
    2^16").
    
    Signed-off-by: Gleb Mazovetskiy <glex.spb@gmail.com>
    Reviewed-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0acc008cf98ebe239e23a60ef028662773bfdeaa
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Mon Nov 14 15:38:41 2022 +0800

    platform/x86: hp-wmi: Ignore Smart Experience App event
    
    [ Upstream commit 8b9b6a044b408283b086702b1d9e3cf4ba45b426 ]
    
    Sometimes hp-wmi driver complains on system resume:
    [ 483.116451] hp_wmi: Unknown event_id - 33 - 0x0
    
    According to HP it's a feature called "HP Smart Experience App" and it's
    safe to be ignored.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20221114073842.205392-1-kai.heng.feng@canonical.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0964b77bab5445307177bc6d969d2b57f744ed33
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Tue Oct 25 13:39:31 2022 +0900

    zonefs: fix zone report size in __zonefs_io_error()
    
    [ Upstream commit 7dd12d65ac646046a3fe0bbf9a4e86f4514207b3 ]
    
    When an IO error occurs, the function __zonefs_io_error() is used to
    issue a zone report to obtain the latest zone information from the
    device. This function gets a zone report for all zones used as storage
    for a file, which is always 1 zone except for files representing
    aggregated conventional zones.
    
    The number of zones of a zone report for a file is calculated in
    __zonefs_io_error() by doing a bit-shift of the inode i_zone_size field,
    which is equal to or larger than the device zone size. However, this
    calculation does not take into account that the last zone of a zoned
    device may be smaller than the zone size reported by bdev_zone_sectors()
    (which is used to set the bit shift size). As a result, if an error
    occurs for an IO targetting such last smaller zone, the zone report will
    ask for 0 zones, leading to an invalid zone report.
    
    Fix this by using the fact that all files require a 1 zone report,
    except if the inode i_zone_size field indicates a zone size larger than
    the device zone size. This exception case corresponds to a mount with
    aggregated conventional zones.
    
    A check for this exception is added to the file inode initialization
    during mount. If an invalid setup is detected, emit an error and fail
    the mount (check contributed by Johannes Thumshirn).
    
    Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5937dae662b4419c6782c1b3bcdf237205928e9
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Nov 11 12:16:39 2022 +0100

    platform/x86: acer-wmi: Enable SW_TABLET_MODE on Switch V 10 (SW5-017)
    
    [ Upstream commit 1e817b889c7d8c14e7005258e15fec62edafe03c ]
    
    Like the Acer Switch 10 (SW5-012) and Acer Switch 10 (S1003) models
    the Acer Switch V 10 (SW5-017) supports reporting SW_TABLET_MODE
    through acer-wmi.
    
    Add a DMI quirk for the SW5-017 setting force_caps to ACER_CAP_KBD_DOCK
    (these devices have no other acer-wmi based functionality).
    
    Cc: Rudolf Polzer <rpolzer@google.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20221111111639.35730-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52fb7bcea0c6edc713405ff73a82802006f132e5
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Nov 11 18:07:52 2022 +0800

    platform/x86: asus-wmi: add missing pci_dev_put() in asus_wmi_set_xusb2pr()
    
    [ Upstream commit d0cdd85046b15089df71a50548617ac1025300d0 ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev. We need to use pci_dev_put() to decrease the reference count
    before asus_wmi_set_xusb2pr() returns.
    
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Link: https://lore.kernel.org/r/20221111100752.134311-1-wangxiongfeng2@huawei.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fa717ba2d25ec2a508eb444196c74cc59a15bc1
Author: ruanjinjie <ruanjinjie@huawei.com>
Date:   Mon Nov 14 19:21:24 2022 +0800

    xen/platform-pci: add missing free_irq() in error path
    
    [ Upstream commit c53717e1e3f0d0f9129b2e0dbc6dcc5e0a8132e9 ]
    
    free_irq() is missing in case of error in platform_pci_probe(), fix that.
    
    Signed-off-by: ruanjinjie <ruanjinjie@huawei.com>
    Reviewed-by: Oleksandr Tyshchenko <oleksandr_tyshchenko@epam.com>
    Link: https://lore.kernel.org/r/20221114112124.1965611-1-ruanjinjie@huawei.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f45a5a6c9f6d2967c075467fb7ad39b3a39e9732
Author: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
Date:   Mon Nov 14 11:31:08 2022 +0100

    xen-pciback: Allow setting PCI_MSIX_FLAGS_MASKALL too
    
    [ Upstream commit 5e29500eba2aa19e1323df46f64dafcd4a327092 ]
    
    When Xen domain configures MSI-X, the usual approach is to enable MSI-X
    together with masking all of them via the config space, then fill the
    table and only then clear PCI_MSIX_FLAGS_MASKALL. Allow doing this via
    QEMU running in a stub domain.
    
    Previously, when changing PCI_MSIX_FLAGS_MASKALL was not allowed, the
    whole write was aborted, preventing change to the PCI_MSIX_FLAGS_ENABLE
    bit too.
    
    Note the Xen hypervisor intercepts this write anyway, and may keep the
    PCI_MSIX_FLAGS_MASKALL bit set if it wishes to. It will store the
    guest-requested state and will apply it eventually.
    
    Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Link: https://lore.kernel.org/r/20221114103110.1519413-1-marmarek@invisiblethingslab.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bbb587472435b22414a6c0519fc1dedad1b3132
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 7 10:30:41 2022 -0800

    Input: soc_button_array - add Acer Switch V 10 to dmi_use_low_level_irq[]
    
    [ Upstream commit e13757f52496444b994a7ac67b6e517a15d89bbc ]
    
    Like on the Acer Switch 10 SW5-012, the Acer Switch V 10 SW5-017's _LID
    method messes with home- and power-button GPIO IRQ settings, causing an
    IRQ storm.
    
    Add a quirk entry for the Acer Switch V 10 to the dmi_use_low_level_irq[]
    DMI quirk list, to use low-level IRQs on this model, fixing the IRQ storm.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20221106215320.67109-2-hdegoede@redhat.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ea4316dffda7d83e1997a72f10f8933b9ddb997
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 7 10:30:25 2022 -0800

    Input: soc_button_array - add use_low_level_irq module parameter
    
    [ Upstream commit 8e9ada1d0e72b4737df400fe1bba48dc42a68df7 ]
    
    It seems that the Windows drivers for the ACPI0011 soc_button_array
    device use low level triggered IRQs rather then using edge triggering.
    
    Some ACPI tables depend on this, directly poking the GPIO controller's
    registers to clear the trigger type when closing a laptop's/2-in-1's lid
    and re-instating the trigger when opening the lid again.
    
    Linux sets the edge/level on which to trigger to both low+high since
    it is using edge type IRQs, the ACPI tables then ends up also setting
    the bit for level IRQs and since both low and high level have been
    selected by Linux we get an IRQ storm leading to soft lockups.
    
    As a workaround for this the soc_button_array already contains
    a DMI quirk table with device models known to have this issue.
    
    Add a module parameter for this so that users can easily test if their
    device is affected too and so that they can use the module parameter
    as a workaround.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20221106215320.67109-1-hdegoede@redhat.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1620e996d0a4ed7a3001cca755cff013944850d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Nov 3 11:31:43 2022 -0700

    Input: goodix - try resetting the controller when no config is set
    
    [ Upstream commit c7e37cc6240767f794678d11704935d49cc81d59 ]
    
    On ACPI systems (irq_pin_access_method == IRQ_PIN_ACCESS_ACPI_*) the driver
    does not reset the controller at probe time, because sometimes the system
    firmware loads a config and resetting might loose this config.
    
    On the Nanote UMPC-01 device OTOH the config is in flash of the controller,
    the controller needs a reset to load this; and the system firmware does not
    reset the controller on a cold boot.
    
    To fix the Nanote UMPC-01 touchscreen not working on a cold boot, try
    resetting the controller and then re-reading the config when encountering
    a config with 0 width/height/max_touch_num value and the controller has
    not already been reset by goodix_ts_probe().
    
    This should be safe to do in general because normally we should never
    encounter a config with 0 width/height/max_touch_num. Doing this in
    general not only avoids the need for a DMI quirk, but also might help
    other systems.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Bastien Nocera <hadess@hadess.net>
    Link: https://lore.kernel.org/r/20221025122930.421377-2-hdegoede@redhat.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4db0509587aa33491168354b924dd579f12c987
Author: Lukas Wunner <lukas@wunner.de>
Date:   Tue Sep 27 13:52:34 2022 +0200

    serial: 8250: 8250_omap: Avoid RS485 RTS glitch on ->set_termios()
    
    [ Upstream commit 038ee49fef18710bedd38b531d173ccd746b2d8d ]
    
    RS485-enabled UART ports on TI Sitara SoCs with active-low polarity
    exhibit a Transmit Enable glitch on ->set_termios():
    
    omap8250_restore_regs(), which is called from omap_8250_set_termios(),
    sets the TCRTLR bit in the MCR register and clears all other bits,
    including RTS.  If RTS uses active-low polarity, it is now asserted
    for no reason.
    
    The TCRTLR bit is subsequently cleared by writing up->mcr to the MCR
    register.  That variable is always zero, so the RTS bit is still cleared
    (incorrectly so if RTS is active-high).
    
    (up->mcr is not, as one might think, a cache of the MCR register's
    current value.  Rather, it only caches a single bit of that register,
    the AFE bit.  And it only does so if the UART supports the AFE bit,
    which OMAP does not.  For details see serial8250_do_set_termios() and
    serial8250_do_set_mctrl().)
    
    Finally at the end of omap8250_restore_regs(), the MCR register is
    restored (and RTS deasserted) by a call to up->port.ops->set_mctrl()
    (which equals serial8250_set_mctrl()) and serial8250_em485_stop_tx().
    
    So there's an RTS glitch between setting TCRTLR and calling
    serial8250_em485_stop_tx().  Avoid by using a read-modify-write
    when setting TCRTLR.
    
    While at it, drop a redundant initialization of up->mcr.  As explained
    above, the variable isn't used by the driver and it is already
    initialized to zero because it is part of the static struct
    serial8250_ports[] declared in 8250_core.c.  (Static structs are
    initialized to zero per section 6.7.8 nr. 10 of the C99 standard.)
    
    Cc: Jan Kiszka <jan.kiszka@siemens.com>
    Cc: Su Bao Cheng <baocheng.su@siemens.com>
    Tested-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://lore.kernel.org/r/6554b0241a2c7fd50f32576fdbafed96709e11e8.1664278942.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c3e39ccf5bd5b1e48f725f122b44ab692498d35
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Oct 25 16:09:42 2022 +0200

    ASoC: Intel: bytcht_es8316: Add quirk for the Nanote UMPC-01
    
    [ Upstream commit 8bb0ac0e6f64ebdf15d963c26b028de391c9bcf9 ]
    
    The Nanote UMPC-01 mini laptop has stereo speakers, while the default
    bytcht_es8316 settings assume a mono speaker setup. Add a quirk for this.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20221025140942.509066-1-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36e0b976196ce56a599802f485693bd93d237891
Author: Aman Dhoot <amandhoot12@gmail.com>
Date:   Sat Oct 15 20:41:17 2022 -0700

    Input: synaptics - switch touchpad on HP Laptop 15-da3001TU to RMI mode
    
    [ Upstream commit ac5408991ea6b06e29129b4d4861097c4c3e0d59 ]
    
    The device works fine in native RMI mode, there is no reason to use legacy
    PS/2 mode with it.
    
    Signed-off-by: Aman Dhoot <amandhoot12@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae9e0cc973fb7499ea1b1a8dfd0795f728b84faf
Author: Alessandro Astone <ales.astone@gmail.com>
Date:   Wed Nov 30 03:58:05 2022 +0000

    binder: Gracefully handle BINDER_TYPE_FDA objects with num_fds=0
    
    commit ef38de9217a04c9077629a24652689d8fdb4c6c6 upstream.
    
    Some android userspace is sending BINDER_TYPE_FDA objects with
    num_fds=0. Like the previous patch, this is reproducible when
    playing a video.
    
    Before commit 09184ae9b575 BINDER_TYPE_FDA objects with num_fds=0
    were 'correctly handled', as in no fixup was performed.
    
    After commit 09184ae9b575 we aggregate fixup and skip regions in
    binder_ptr_fixup structs and distinguish between the two by using
    the skip_size field: if it's 0, then it's a fixup, otherwise skip.
    When processing BINDER_TYPE_FDA objects with num_fds=0 we add a
    skip region of skip_size=0, and this causes issues because now
    binder_do_deferred_txn_copies will think this was a fixup region.
    
    To address that, return early from binder_translate_fd_array to
    avoid adding an empty skip region.
    
    Fixes: 09184ae9b575 ("binder: defer copies of pre-patched txn data")
    Acked-by: Todd Kjos <tkjos@google.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Alessandro Astone <ales.astone@gmail.com>
    Link: https://lore.kernel.org/r/20220415120015.52684-1-ales.astone@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 017de842533f4334d646f1d480f591f4ca9f5c7a
Author: Alessandro Astone <ales.astone@gmail.com>
Date:   Wed Nov 30 03:58:04 2022 +0000

    binder: Address corner cases in deferred copy and fixup
    
    commit 2d1746e3fda0c3612143d7c06f8e1d1830c13e23 upstream.
    
    When handling BINDER_TYPE_FDA object we are pushing a parent fixup
    with a certain skip_size but no scatter-gather copy object, since
    the copy is handled standalone.
    If BINDER_TYPE_FDA is the last children the scatter-gather copy
    loop will never stop to skip it, thus we are left with an item in
    the parent fixup list. This will trigger the BUG_ON().
    
    This is reproducible in android when playing a video.
    We receive a transaction that looks like this:
        obj[0] BINDER_TYPE_PTR, parent
        obj[1] BINDER_TYPE_PTR, child
        obj[2] BINDER_TYPE_PTR, child
        obj[3] BINDER_TYPE_FDA, child
    
    Fixes: 09184ae9b575 ("binder: defer copies of pre-patched txn data")
    Acked-by: Todd Kjos <tkjos@google.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Alessandro Astone <ales.astone@gmail.com>
    Link: https://lore.kernel.org/r/20220415120015.52684-2-ales.astone@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e3c27f24173c6f3d799080da82126fa044a2f5e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Nov 30 03:58:03 2022 +0000

    binder: fix pointer cast warning
    
    commit 9a0a930fe2535a76ad70d3f43caeccf0d86a3009 upstream.
    
    binder_uintptr_t is not the same as uintptr_t, so converting it into a
    pointer requires a second cast:
    
    drivers/android/binder.c: In function 'binder_translate_fd_array':
    drivers/android/binder.c:2511:28: error: cast to pointer from integer of different size [-Werror=int-to-pointer-cast]
     2511 |         sender_ufda_base = (void __user *)sender_uparent->buffer + fda->parent_offset;
          |                            ^
    
    Fixes: 656e01f3ab54 ("binder: read pre-translated fds from sender buffer")
    Acked-by: Todd Kjos <tkjos@google.com>
    Acked-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211207122448.1185769-1-arnd@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9d3f25a7f4e3aab3dfd91885e3d428bccdcb0e1
Author: Todd Kjos <tkjos@google.com>
Date:   Wed Nov 30 03:58:02 2022 +0000

    binder: defer copies of pre-patched txn data
    
    commit 09184ae9b5756cc469db6fd1d1cfdcffbf627c2d upstream.
    
    BINDER_TYPE_PTR objects point to memory areas in the
    source process to be copied into the target buffer
    as part of a transaction. This implements a scatter-
    gather model where non-contiguous memory in a source
    process is "gathered" into a contiguous region in
    the target buffer.
    
    The data can include pointers that must be fixed up
    to correctly point to the copied data. To avoid making
    source process pointers visible to the target process,
    this patch defers the copy until the fixups are known
    and then copies and fixeups are done together.
    
    There is a special case of BINDER_TYPE_FDA which applies
    the fixup later in the target process context. In this
    case the user data is skipped (so no untranslated fds
    become visible to the target).
    
    Reviewed-by: Martijn Coenen <maco@android.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20211130185152.437403-5-tkjos@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [cmllamas: fix trivial merge conflict]
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5204296fc76623552d53f042e2dc411b49c151f2
Author: Todd Kjos <tkjos@google.com>
Date:   Wed Nov 30 03:58:01 2022 +0000

    binder: read pre-translated fds from sender buffer
    
    commit 656e01f3ab54afe71bed066996fc2640881e1220 upstream.
    
    This patch is to prepare for an up coming patch where we read
    pre-translated fds from the sender buffer and translate them before
    copying them to the target.  It does not change run time.
    
    The patch adds two new parameters to binder_translate_fd_array() to
    hold the sender buffer and sender buffer parent.  These parameters let
    us call copy_from_user() directly from the sender instead of using
    binder_alloc_copy_from_buffer() to copy from the target.  Also the patch
    adds some new alignment checks.  Previously the alignment checks would
    have been done in a different place, but this lets us print more
    useful error messages.
    
    Reviewed-by: Martijn Coenen <maco@android.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20211130185152.437403-4-tkjos@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23e9d815fad84c1bee3742a8de4bd39510435362
Author: Todd Kjos <tkjos@google.com>
Date:   Wed Nov 30 03:58:00 2022 +0000

    binder: avoid potential data leakage when copying txn
    
    commit 6d98eb95b450a75adb4516a1d33652dc78d2b20c upstream.
    
    Transactions are copied from the sender to the target
    first and objects like BINDER_TYPE_PTR and BINDER_TYPE_FDA
    are then fixed up. This means there is a short period where
    the sender's version of these objects are visible to the
    target prior to the fixups.
    
    Instead of copying all of the data first, copy data only
    after any needed fixups have been applied.
    
    Fixes: 457b9a6f09f0 ("Staging: android: add binder driver")
    Reviewed-by: Martijn Coenen <maco@android.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20211130185152.437403-3-tkjos@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [cmllamas: fix trivial merge conflict]
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22870431cd250df3eec96753d9422bfc9f0d52a4
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Wed Nov 16 10:41:24 2022 -0800

    x86/ioremap: Fix page aligned size calculation in __ioremap_caller()
    
    commit 4dbd6a3e90e03130973688fd79e19425f720d999 upstream.
    
    Current code re-calculates the size after aligning the starting and
    ending physical addresses on a page boundary. But the re-calculation
    also embeds the masking of high order bits that exceed the size of
    the physical address space (via PHYSICAL_PAGE_MASK). If the masking
    removes any high order bits, the size calculation results in a huge
    value that is likely to immediately fail.
    
    Fix this by re-calculating the page-aligned size first. Then mask any
    high order bits using PHYSICAL_PAGE_MASK.
    
    Fixes: ffa71f33a820 ("x86, ioremap: Fix incorrect physical address handling in PAE mode")
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: <stable@kernel.org>
    Link: https://lore.kernel.org/r/1668624097-14884-2-git-send-email-mikelley@microsoft.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fdeacf087ff92c85162b8a0e111dfe2479238ac
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Thu Nov 3 16:13:51 2022 +0200

    KVM: x86: remove exit_int_info warning in svm_handle_exit
    
    commit 05311ce954aebe75935d9ae7d38ac82b5b796e33 upstream.
    
    It is valid to receive external interrupt and have broken IDT entry,
    which will lead to #GP with exit_int_into that will contain the index of
    the IDT entry (e.g any value).
    
    Other exceptions can happen as well, like #NP or #SS
    (if stack switch fails).
    
    Thus this warning can be user triggred and has very little value.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Message-Id: <20221103141351.50662-10-mlevitsk@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e5cb13091e62b2ad2fe1d3a48753c7219a3e9f9
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Thu Nov 3 16:13:43 2022 +0200

    KVM: x86: nSVM: leave nested mode on vCPU free
    
    commit 917401f26a6af5756d89b550a8e1bd50cf42b07e upstream.
    
    If the VM was terminated while nested, we free the nested state
    while the vCPU still is in nested mode.
    
    Soon a warning will be added for this condition.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Message-Id: <20221103141351.50662-2-mlevitsk@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d925dd3e444cb7f0fab0208fed82673fd61f9765
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Tue Aug 2 12:28:11 2022 -0400

    mm: vmscan: fix extreme overreclaim and swap floods
    
    commit f53af4285d775cd9a9a146fc438bd0a1bee1838a upstream.
    
    During proactive reclaim, we sometimes observe severe overreclaim, with
    several thousand times more pages reclaimed than requested.
    
    This trace was obtained from shrink_lruvec() during such an instance:
    
        prio:0 anon_cost:1141521 file_cost:7767
        nr_reclaimed:4387406 nr_to_reclaim:1047 (or_factor:4190)
        nr=[7161123 345 578 1111]
    
    While he reclaimer requested 4M, vmscan reclaimed close to 16G, most of it
    by swapping.  These requests take over a minute, during which the write()
    to memory.reclaim is unkillably stuck inside the kernel.
    
    Digging into the source, this is caused by the proportional reclaim
    bailout logic.  This code tries to resolve a fundamental conflict: to
    reclaim roughly what was requested, while also aging all LRUs fairly and
    in accordance to their size, swappiness, refault rates etc.  The way it
    attempts fairness is that once the reclaim goal has been reached, it stops
    scanning the LRUs with the smaller remaining scan targets, and adjusts the
    remainder of the bigger LRUs according to how much of the smaller LRUs was
    scanned.  It then finishes scanning that remainder regardless of the
    reclaim goal.
    
    This works fine if priority levels are low and the LRU lists are
    comparable in size.  However, in this instance, the cgroup that is
    targeted by proactive reclaim has almost no files left - they've already
    been squeezed out by proactive reclaim earlier - and the remaining anon
    pages are hot.  Anon rotations cause the priority level to drop to 0,
    which results in reclaim targeting all of anon (a lot) and all of file
    (almost nothing).  By the time reclaim decides to bail, it has scanned
    most or all of the file target, and therefor must also scan most or all of
    the enormous anon target.  This target is thousands of times larger than
    the reclaim goal, thus causing the overreclaim.
    
    The bailout code hasn't changed in years, why is this failing now?  The
    most likely explanations are two other recent changes in anon reclaim:
    
    1. Before the series starting with commit 5df741963d52 ("mm: fix LRU
       balancing effect of new transparent huge pages"), the VM was
       overall relatively reluctant to swap at all, even if swap was
       configured. This means the LRU balancing code didn't come into play
       as often as it does now, and mostly in high pressure situations
       where pronounced swap activity wouldn't be as surprising.
    
    2. For historic reasons, shrink_lruvec() loops on the scan targets of
       all LRU lists except the active anon one, meaning it would bail if
       the only remaining pages to scan were active anon - even if there
       were a lot of them.
    
       Before the series starting with commit ccc5dc67340c ("mm/vmscan:
       make active/inactive ratio as 1:1 for anon lru"), most anon pages
       would live on the active LRU; the inactive one would contain only a
       handful of preselected reclaim candidates. After the series, anon
       gets aged similarly to file, and the inactive list is the default
       for new anon pages as well, making it often the much bigger list.
    
       As a result, the VM is now more likely to actually finish large
       anon targets than before.
    
    Change the code such that only one SWAP_CLUSTER_MAX-sized nudge toward the
    larger LRU lists is made before bailing out on a met reclaim goal.
    
    This fixes the extreme overreclaim problem.
    
    Fairness is more subtle and harder to evaluate.  No obvious misbehavior
    was observed on the test workload, in any case.  Conceptually, fairness
    should primarily be a cumulative effect from regular, lower priority
    scans.  Once the VM is in trouble and needs to escalate scan targets to
    make forward progress, fairness needs to take a backseat.  This is also
    acknowledged by the myriad exceptions in get_scan_count().  This patch
    makes fairness decrease gradually, as it keeps fairness work static over
    increasing priority levels with growing scan targets.  This should make
    more sense - although we may have to re-visit the exact values.
    
    Link: https://lkml.kernel.org/r/20220802162811.39216-1-hannes@cmpxchg.org
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4a62a23fadc0f79d867dcf4d9dc96d80ae04c18
Author: Mukesh Ojha <quic_mojha@quicinc.com>
Date:   Thu Nov 10 00:31:37 2022 +0530

    gcov: clang: fix the buffer overflow issue
    
    commit a6f810efabfd789d3bbafeacb4502958ec56c5ce upstream.
    
    Currently, in clang version of gcov code when module is getting removed
    gcov_info_add() incorrectly adds the sfn_ptr->counter to all the
    dst->functions and it result in the kernel panic in below crash report.
    Fix this by properly handling it.
    
    [    8.899094][  T599] Unable to handle kernel write to read-only memory at virtual address ffffff80461cc000
    [    8.899100][  T599] Mem abort info:
    [    8.899102][  T599]   ESR = 0x9600004f
    [    8.899103][  T599]   EC = 0x25: DABT (current EL), IL = 32 bits
    [    8.899105][  T599]   SET = 0, FnV = 0
    [    8.899107][  T599]   EA = 0, S1PTW = 0
    [    8.899108][  T599]   FSC = 0x0f: level 3 permission fault
    [    8.899110][  T599] Data abort info:
    [    8.899111][  T599]   ISV = 0, ISS = 0x0000004f
    [    8.899113][  T599]   CM = 0, WnR = 1
    [    8.899114][  T599] swapper pgtable: 4k pages, 39-bit VAs, pgdp=00000000ab8de000
    [    8.899116][  T599] [ffffff80461cc000] pgd=18000009ffcde003, p4d=18000009ffcde003, pud=18000009ffcde003, pmd=18000009ffcad003, pte=00600000c61cc787
    [    8.899124][  T599] Internal error: Oops: 9600004f [#1] PREEMPT SMP
    [    8.899265][  T599] Skip md ftrace buffer dump for: 0x1609e0
    ....
    ..,
    [    8.899544][  T599] CPU: 7 PID: 599 Comm: modprobe Tainted: G S         OE     5.15.41-android13-8-g38e9b1af6bce #1
    [    8.899547][  T599] Hardware name: XXX (DT)
    [    8.899549][  T599] pstate: 82400005 (Nzcv daif +PAN -UAO +TCO -DIT -SSBS BTYPE=--)
    [    8.899551][  T599] pc : gcov_info_add+0x9c/0xb8
    [    8.899557][  T599] lr : gcov_event+0x28c/0x6b8
    [    8.899559][  T599] sp : ffffffc00e733b00
    [    8.899560][  T599] x29: ffffffc00e733b00 x28: ffffffc00e733d30 x27: ffffffe8dc297470
    [    8.899563][  T599] x26: ffffffe8dc297000 x25: ffffffe8dc297000 x24: ffffffe8dc297000
    [    8.899566][  T599] x23: ffffffe8dc0a6200 x22: ffffff880f68bf20 x21: 0000000000000000
    [    8.899569][  T599] x20: ffffff880f68bf00 x19: ffffff8801babc00 x18: ffffffc00d7f9058
    [    8.899572][  T599] x17: 0000000000088793 x16: ffffff80461cbe00 x15: 9100052952800785
    [    8.899575][  T599] x14: 0000000000000200 x13: 0000000000000041 x12: 9100052952800785
    [    8.899577][  T599] x11: ffffffe8dc297000 x10: ffffffe8dc297000 x9 : ffffff80461cbc80
    [    8.899580][  T599] x8 : ffffff8801babe80 x7 : ffffffe8dc2ec000 x6 : ffffffe8dc2ed000
    [    8.899583][  T599] x5 : 000000008020001f x4 : fffffffe2006eae0 x3 : 000000008020001f
    [    8.899586][  T599] x2 : ffffff8027c49200 x1 : ffffff8801babc20 x0 : ffffff80461cb3a0
    [    8.899589][  T599] Call trace:
    [    8.899590][  T599]  gcov_info_add+0x9c/0xb8
    [    8.899592][  T599]  gcov_module_notifier+0xbc/0x120
    [    8.899595][  T599]  blocking_notifier_call_chain+0xa0/0x11c
    [    8.899598][  T599]  do_init_module+0x2a8/0x33c
    [    8.899600][  T599]  load_module+0x23cc/0x261c
    [    8.899602][  T599]  __arm64_sys_finit_module+0x158/0x194
    [    8.899604][  T599]  invoke_syscall+0x94/0x2bc
    [    8.899607][  T599]  el0_svc_common+0x1d8/0x34c
    [    8.899609][  T599]  do_el0_svc+0x40/0x54
    [    8.899611][  T599]  el0_svc+0x94/0x2f0
    [    8.899613][  T599]  el0t_64_sync_handler+0x88/0xec
    [    8.899615][  T599]  el0t_64_sync+0x1b4/0x1b8
    [    8.899618][  T599] Code: f905f56c f86e69ec f86e6a0f 8b0c01ec (f82e6a0c)
    [    8.899620][  T599] ---[ end trace ed5218e9e5b6e2e6 ]---
    
    Link: https://lkml.kernel.org/r/1668020497-13142-1-git-send-email-quic_mojha@quicinc.com
    Fixes: e178a5beb369 ("gcov: clang support")
    Signed-off-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Tested-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Tom Rix <trix@redhat.com>
    Cc: <stable@vger.kernel.org>    [5.2+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7f21d10e93e9fb3a724933e7a3cb4bb1b6f03a4
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Fri Nov 18 14:33:04 2022 +0800

    nilfs2: fix nilfs_sufile_mark_dirty() not set segment usage as dirty
    
    commit 512c5ca01a3610ab14ff6309db363de51f1c13a6 upstream.
    
    When extending segments, nilfs_sufile_alloc() is called to get an
    unassigned segment, then mark it as dirty to avoid accidentally allocating
    the same segment in the future.
    
    But for some special cases such as a corrupted image it can be unreliable.
    If such corruption of the dirty state of the segment occurs, nilfs2 may
    reallocate a segment that is in use and pick the same segment for writing
    twice at the same time.
    
    This will cause the problem reported by syzkaller:
    https://syzkaller.appspot.com/bug?id=c7c4748e11ffcc367cef04f76e02e931833cbd24
    
    This case started with segbuf1.segnum = 3, nextnum = 4 when constructed.
    It supposed segment 4 has already been allocated and marked as dirty.
    
    However the dirty state was corrupted and segment 4 usage was not dirty.
    For the first time nilfs_segctor_extend_segments() segment 4 was allocated
    again, which made segbuf2 and next segbuf3 had same segment 4.
    
    sb_getblk() will get same bh for segbuf2 and segbuf3, and this bh is added
    to both buffer lists of two segbuf.  It makes the lists broken which
    causes NULL pointer dereference.
    
    Fix the problem by setting usage as dirty every time in
    nilfs_sufile_mark_dirty(), which is called during constructing current
    segment to be written out and before allocating next segment.
    
    [chenzhongjin@huawei.com: add lock protection per Ryusuke]
      Link: https://lkml.kernel.org/r/20221121091141.214703-1-chenzhongjin@huawei.com
    Link: https://lkml.kernel.org/r/20221118063304.140187-1-chenzhongjin@huawei.com
    Fixes: 9ff05123e3bf ("nilfs2: segment constructor")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Reported-by: <syzbot+77e4f0...@syzkaller.appspotmail.com>
    Reported-by: Liu Shixin <liushixin2@huawei.com>
    Acked-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f06b7e6a77c177d30fe3e2d64ccc02daf59b51f8
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Tue Nov 15 17:19:43 2022 -0800

    usb: dwc3: gadget: Clear ep descriptor last
    
    [ Upstream commit f90f5afd5083a7cb4aee13bd4cc0ae600bd381ca ]
    
    Until the endpoint is disabled, its descriptors should remain valid.
    When its requests are removed from ep disable, the request completion
    routine may attempt to access the endpoint's descriptor. Don't clear the
    descriptors before that.
    
    Fixes: f09ddcfcb8c5 ("usb: dwc3: gadget: Prevent EP queuing while stopping transfers")
    Cc: stable@vger.kernel.org
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/45db7c83b209259115bf652af210f8b2b3b1a383.1668561364.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cff7523ab8b87e958c31a52ac7ac31112de269c8
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Mon Nov 7 18:45:44 2022 -0800

    usb: dwc3: gadget: Return -ESHUTDOWN on ep disable
    
    [ Upstream commit ffb9da4a04c69567bad717707b6fdfbc4c216ef4 ]
    
    The usb_request API clearly noted that removed requests due to disabled
    endpoint should have -ESHUTDOWN status returned. Don't change this
    behavior.
    
    Fixes: b44c0e7fef51 ("usb: dwc3: gadget: conditionally remove requests")
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/3421859485cb32d77e2068549679a6c07a7797bc.1667875427.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: f90f5afd5083 ("usb: dwc3: gadget: Clear ep descriptor last")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a32635528d6552cb729968af2db09e64c4ac6f24
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Wed Jul 20 23:35:23 2022 +0200

    usb: dwc3: gadget: conditionally remove requests
    
    [ Upstream commit b44c0e7fef51ee7e8ca8c6efbf706f5613787100 ]
    
    The functions stop_active_transfers and ep_disable are both calling
    remove_requests. This functions in both cases will giveback the requests
    with status ESHUTDOWN, which also represents an physical disconnection.
    For ep_disable this is not true. This patch adds the status parameter to
    remove_requests and sets the status to ECONNRESET on ep_disable.
    
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Link: https://lore.kernel.org/r/20220720213523.1055897-1-m.grzeschik@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: f90f5afd5083 ("usb: dwc3: gadget: Clear ep descriptor last")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca3a08e9d9ebda0557c3a9d316e768f4d52c2168
Author: Xiubo Li <xiubli@redhat.com>
Date:   Thu Nov 10 21:01:59 2022 +0800

    ceph: fix NULL pointer dereference for req->r_session
    
    [ Upstream commit 5bd76b8de5b74fa941a6eafee87728a0fe072267 ]
    
    The request's r_session maybe changed when it was forwarded or
    resent. Both the forwarding and resending cases the requests will
    be protected by the mdsc->mutex.
    
    Cc: stable@vger.kernel.org
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2137955
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00c004c070f22a47063de4ff2a5638fce1f94d95
Author: Kenneth Lee <klee33@uw.edu>
Date:   Thu Aug 18 22:42:55 2022 -0700

    ceph: Use kcalloc for allocating multiple elements
    
    [ Upstream commit aa1d627207cace003163dee24d1c06fa4e910c6b ]
    
    Prefer using kcalloc(a, b) over kzalloc(a * b) as this improves
    semantics since kcalloc is intended for allocating an array of memory.
    
    Signed-off-by: Kenneth Lee <klee33@uw.edu>
    Reviewed-by: Xiubo Li <xiubli@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69263bf781bef3841f22815b834a5243474aa6d4
Author: Xiubo Li <xiubli@redhat.com>
Date:   Thu Apr 14 09:07:21 2022 +0800

    ceph: fix possible NULL pointer dereference for req->r_session
    
    [ Upstream commit 7acae6183cf37c48b8da48bbbdb78820fb3913f3 ]
    
    The request will be inserted into the ci->i_unsafe_dirops before
    assigning the req->r_session, so it's possible that we will hit
    NULL pointer dereference bug here.
    
    Cc: stable@vger.kernel.org
    URL: https://tracker.ceph.com/issues/55327
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Tested-by: Aaron Tomlin <atomlin@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e137ace53339eae14ced15143f95194a14999fd
Author: Xiubo Li <xiubli@redhat.com>
Date:   Wed Jan 12 12:29:04 2022 +0800

    ceph: put the requests/sessions when it fails to alloc memory
    
    [ Upstream commit 89d43d0551a848e70e63d9ba11534aaeabc82443 ]
    
    When failing to allocate the sessions memory we should make sure
    the req1 and req2 and the sessions get put. And also in case the
    max_sessions decreased so when kreallocate the new memory some
    sessions maybe missed being put.
    
    And if the max_sessions is 0 krealloc will return ZERO_SIZE_PTR,
    which will lead to a distinct access fault.
    
    URL: https://tracker.ceph.com/issues/53819
    Fixes: e1a4541ec0b9 ("ceph: flush the mdlog before waiting on unsafe reqs")
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Venky Shankar <vshankar@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38993788f40c78c64ff68aa68877ca6cbeac05a1
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Sep 6 12:43:01 2021 +0300

    ceph: fix off by one bugs in unsafe_request_wait()
    
    [ Upstream commit 708c87168b6121abc74b2a57d0c498baaf70cbea ]
    
    The "> max" tests should be ">= max" to prevent an out of bounds access
    on the next lines.
    
    Fixes: e1a4541ec0b9 ("ceph: flush the mdlog before waiting on unsafe reqs")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a31ae7f77943b390f8d2002751c3a6e136b0bad
Author: Xiubo Li <xiubli@redhat.com>
Date:   Mon Jul 5 09:22:57 2021 +0800

    ceph: flush the mdlog before waiting on unsafe reqs
    
    [ Upstream commit e1a4541ec0b951685a49d1f72d183681e6433a45 ]
    
    For the client requests who will have unsafe and safe replies from
    MDS daemons, in the MDS side the MDS daemons won't flush the mdlog
    (journal log) immediatelly, because they think it's unnecessary.
    That's true for most cases but not all, likes the fsync request.
    The fsync will wait until all the unsafe replied requests to be
    safely replied.
    
    Normally if there have multiple threads or clients are running, the
    whole mdlog in MDS daemons could be flushed in time if any request
    will trigger the mdlog submit thread. So usually we won't experience
    the normal operations will stuck for a long time. But in case there
    has only one client with only thread is running, the stuck phenomenon
    maybe obvious and the worst case it must wait at most 5 seconds to
    wait the mdlog to be flushed by the MDS's tick thread periodically.
    
    This patch will trigger to flush the mdlog in the relevant and auth
    MDSes to which the in-flight requests are sent just before waiting
    the unsafe requests to finish.
    
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78b2f546f789d33ac951921adb61873462a74025
Author: Xiubo Li <xiubli@redhat.com>
Date:   Mon Jul 5 09:22:56 2021 +0800

    ceph: flush mdlog before umounting
    
    [ Upstream commit d095559ce4100f0c02aea229705230deac329c97 ]
    
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d94ba7b3b7e78c6b5ceac35dff0e0a53a2b1a228
Author: Xiubo Li <xiubli@redhat.com>
Date:   Mon Jul 5 09:22:55 2021 +0800

    ceph: make iterate_sessions a global symbol
    
    [ Upstream commit 59b312f36230ea91ebb6ce1b11f2781604495d30 ]
    
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ac038d3c2f2032d0849f2354236ee1603da034b
Author: Xiubo Li <xiubli@redhat.com>
Date:   Mon Jul 5 09:22:54 2021 +0800

    ceph: make ceph_create_session_msg a global symbol
    
    [ Upstream commit fba97e8025015b63b1bdb73cd868c8ea832a1620 ]
    
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 5bd76b8de5b7 ("ceph: fix NULL pointer dereference for req->r_session")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8382cdf0ab5df84cae9603de927145a7f140b937
Author: Pawel Laszczak <pawell@cadence.com>
Date:   Mon Dec 7 11:32:18 2020 +0100

    usb: cdns3: Add support for DRD CDNSP
    
    [ Upstream commit db8892bb1bb64b6e3d1381ac342a2ee31e1b76b6 ]
    
    Patch adds support for Cadence DRD Super Speed Plus controller(CDNSP).
    CDNSP DRD is a part of Cadence CDNSP controller.
    The DRD CDNSP controller has a lot of difference on hardware level but on
    software level is quite compatible with CDNS3 DRD. For this reason
    CDNS3 DRD part of CDNS3 driver was reused for CDNSP driver.
    
    Signed-off-by: Pawel Laszczak <pawell@cadence.com>
    Tested-by: Aswath Govindraju <a-govindraju@ti.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Stable-dep-of: 9d5333c93134 ("usb: cdns3: host: fix endless superspeed hub port reset")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57112da86b1bf8c87540ce82b6be6c99d1d50b23
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Oct 26 12:42:05 2022 -0700

    mmc: sdhci-brcmstb: Fix SDHCI_RESET_ALL for CQHCI
    
    [ Upstream commit 56baa208f91061ff27ec2d93fbc483f624d373b4 ]
    
    [[ NOTE: this is completely untested by the author, but included solely
        because, as noted in commit df57d73276b8 ("mmc: sdhci-pci: Fix
        SDHCI_RESET_ALL for CQHCI for Intel GLK-based controllers"), "other
        drivers using CQHCI might benefit from a similar change, if they
        also have CQHCI reset by SDHCI_RESET_ALL." We've now seen the same
        bug on at least MSM, Arasan, and Intel hardware. ]]
    
    SDHCI_RESET_ALL resets will reset the hardware CQE state, but we aren't
    tracking that properly in software. When out of sync, we may trigger
    various timeouts.
    
    It's not typical to perform resets while CQE is enabled, but this may
    occur in some suspend or error recovery scenarios.
    
    Include this fix by way of the new sdhci_and_cqhci_reset() helper.
    
    I only patch the bcm7216 variant even though others potentially *could*
    provide the 'supports-cqe' property (and thus enable CQHCI), because
    d46ba2d17f90 ("mmc: sdhci-brcmstb: Add support for Command Queuing
    (CQE)") and some Broadcom folks confirm that only the 7216 variant
    actually supports it.
    
    This patch depends on (and should not compile without) the patch
    entitled "mmc: cqhci: Provide helper for resetting both SDHCI and
    CQHCI".
    
    Fixes: d46ba2d17f90 ("mmc: sdhci-brcmstb: Add support for Command Queuing (CQE)")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20221026124150.v4.3.I6a715feab6d01f760455865e968ecf0d85036018@changeid
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5d770977b1846dc74cb78f4dc48c9c0c40a786d
Author: Al Cooper <alcooperx@gmail.com>
Date:   Wed Apr 27 14:08:51 2022 -0400

    mmc: sdhci-brcmstb: Enable Clock Gating to save power
    
    [ Upstream commit 6bcc55fe648b860ef0c2b8dc23adc05bcddb93c2 ]
    
    Enabling this feature will allow the controller to stop the bus
    clock when the bus is idle. The feature is not part of the standard
    and is unique to newer Arasan cores and is enabled with a bit in a
    vendor specific register. This feature will only be enabled for
    non-removable devices because they don't switch the voltage and
    clock gating breaks SD Card volatge switching.
    
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20220427180853.35970-3-kdasu.kdev@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Stable-dep-of: 56baa208f910 ("mmc: sdhci-brcmstb: Fix SDHCI_RESET_ALL for CQHCI")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 049194538cb85bae1f617dc055153f9afdab58df
Author: Al Cooper <alcooperx@gmail.com>
Date:   Wed Apr 27 14:08:50 2022 -0400

    mmc: sdhci-brcmstb: Re-organize flags
    
    [ Upstream commit f3a70f991dd07330225ea11e158e1d07ad5733fb ]
    
    Re-organize the flags by basing the bit names on the flag that they
    apply to. Also change the "flags" member in the "brcmstb_match_priv"
    struct to const.
    
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20220427180853.35970-2-kdasu.kdev@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Stable-dep-of: 56baa208f910 ("mmc: sdhci-brcmstb: Fix SDHCI_RESET_ALL for CQHCI")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbe955be268b0fc9205146789178231ad0ab4820
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Nov 23 19:20:53 2022 -0800

    nios2: add FORCE for vmlinuz.gz
    
    [ Upstream commit 869e4ae4cd2a23d625aaa14ae62dbebf768cb77d ]
    
    Add FORCE to placate a warning from make:
    
    arch/nios2/boot/Makefile:24: FORCE prerequisite is missing
    
    Fixes: 2fc8483fdcde ("nios2: Build infrastructure")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0a9c9973d24f224cabccd5ffec1887a1d77fe2f
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Nov 15 12:01:58 2022 +0100

    init/Kconfig: fix CC_HAS_ASM_GOTO_TIED_OUTPUT test with dash
    
    [ Upstream commit 534bd70374d646f17e2cebe0e6e4cdd478ce4f0c ]
    
    When using dash as /bin/sh, the CC_HAS_ASM_GOTO_TIED_OUTPUT test fails
    with a syntax error which is not the one we are looking for:
    
    <stdin>: In function ‘foo’:
    <stdin>:1:29: warning: missing terminating " character
    <stdin>:1:29: error: missing terminating " character
    <stdin>:2:5: error: expected ‘:’ before ‘+’ token
    <stdin>:2:7: warning: missing terminating " character
    <stdin>:2:7: error: missing terminating " character
    <stdin>:2:5: error: expected declaration or statement at end of input
    
    Removing '\n' solves this.
    
    Fixes: 1aa0e8b144b6 ("Kconfig: Add option for asm goto w/ tied outputs to workaround clang-13 bug")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 456e895fd0b84069a25d316885acae40e62a46a2
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Tue Nov 8 11:28:02 2022 +0800

    iio: core: Fix entry not deleted when iio_register_sw_trigger_type() fails
    
    commit 4ad09d956f8eacff61e67e5b13ba8ebec3232f76 upstream.
    
    In iio_register_sw_trigger_type(), configfs_register_default_group() is
    possible to fail, but the entry add to iio_trigger_types_list is not
    deleted.
    
    This leaves wild in iio_trigger_types_list, which can cause page fault
    when module is loading again. So fix this by list_del(&t->list) in error
    path.
    
    BUG: unable to handle page fault for address: fffffbfff81d7400
    Call Trace:
    <TASK>
     iio_register_sw_trigger_type
     do_one_initcall
     do_init_module
     load_module
     ...
    
    Fixes: b662f809d410 ("iio: core: Introduce IIO software triggers")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Link: https://lore.kernel.org/r/20221108032802.168623-1-chenzhongjin@huawei.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa9efcbfbf77a9b727271935ba99385a4f2d36ee
Author: Alejandro Concepción Rodríguez <asconcepcion@acoro.eu>
Date:   Sun Nov 6 01:56:51 2022 +0000

    iio: light: apds9960: fix wrong register for gesture gain
    
    commit 0aa60ff5d996d4ecdd4a62699c01f6d00f798d59 upstream.
    
    Gesture Gain Control is in REG_GCONF_2 (0xa3), not in REG_CONFIG_2 (0x90).
    
    Fixes: aff268cd532e ("iio: light: add APDS9960 ALS + promixity driver")
    Signed-off-by: Alejandro Concepcion-Rodriguez <asconcepcion@acoro.eu>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/EaT-NKC-H4DNX5z4Lg9B6IWPD5TrTrYBr5DYB784wfDKQkTmzPXkoYqyUOrOgJH-xvTsEkFLcVkeAPZRUODEFI5dGziaWXwjpfBNLeNGfNc=@acoro.eu
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd1b8041c2f6de086ed4b1b25e373e9ab8f62d35
Author: Jakob Unterwurzacher <jakob.unterwurzacher@theobroma-systems.com>
Date:   Wed Oct 19 16:27:27 2022 +0200

    arm64: dts: rockchip: lower rk3399-puma-haikou SD controller clock frequency
    
    commit 91e8b74fe6381e083f8aa55217bb0562785ab398 upstream.
    
    CRC errors (code -84 EILSEQ) have been observed for some SanDisk
    Ultra A1 cards when running at 50MHz.
    
    Waveform analysis suggest that the level shifters that are used on the
    RK3399-Q7 module for voltage translation between 3.0 and 3.3V don't
    handle clock rates at or above 48MHz properly. Back off to 40MHz for
    some safety margin.
    
    Cc: stable@vger.kernel.org
    Fixes: 60fd9f72ce8a ("arm64: dts: rockchip: add Haikou baseboard with RK3399-Q7 SoM")
    Signed-off-by: Jakob Unterwurzacher <jakob.unterwurzacher@theobroma-systems.com>
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20221019-upstream-puma-sd-40mhz-v1-0-754a76421518@theobroma-systems.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86ba9c859577a7f3a6320b328e74b18d8b5bc025
Author: Baokun Li <libaokun1@huawei.com>
Date:   Thu Sep 22 20:04:34 2022 +0800

    ext4: fix use-after-free in ext4_ext_shift_extents
    
    commit f6b1a1cf1c3ee430d3f5e47847047ce789a690aa upstream.
    
    If the starting position of our insert range happens to be in the hole
    between the two ext4_extent_idx, because the lblk of the ext4_extent in
    the previous ext4_extent_idx is always less than the start, which leads
    to the "extent" variable access across the boundary, the following UAF is
    triggered:
    ==================================================================
    BUG: KASAN: use-after-free in ext4_ext_shift_extents+0x257/0x790
    Read of size 4 at addr ffff88819807a008 by task fallocate/8010
    CPU: 3 PID: 8010 Comm: fallocate Tainted: G            E     5.10.0+ #492
    Call Trace:
     dump_stack+0x7d/0xa3
     print_address_description.constprop.0+0x1e/0x220
     kasan_report.cold+0x67/0x7f
     ext4_ext_shift_extents+0x257/0x790
     ext4_insert_range+0x5b6/0x700
     ext4_fallocate+0x39e/0x3d0
     vfs_fallocate+0x26f/0x470
     ksys_fallocate+0x3a/0x70
     __x64_sys_fallocate+0x4f/0x60
     do_syscall_64+0x33/0x40
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    ==================================================================
    
    For right shifts, we can divide them into the following situations：
    
    1. When the first ee_block of ext4_extent_idx is greater than or equal to
       start, make right shifts directly from the first ee_block.
        1) If it is greater than start, we need to continue searching in the
           previous ext4_extent_idx.
        2) If it is equal to start, we can exit the loop (iterator=NULL).
    
    2. When the first ee_block of ext4_extent_idx is less than start, then
       traverse from the last extent to find the first extent whose ee_block
       is less than start.
        1) If extent is still the last extent after traversal, it means that
           the last ee_block of ext4_extent_idx is less than start, that is,
           start is located in the hole between idx and (idx+1), so we can
           exit the loop directly (break) without right shifts.
        2) Otherwise, make right shifts at the corresponding position of the
           found extent, and then exit the loop (iterator=NULL).
    
    Fixes: 331573febb6a ("ext4: Add support FALLOC_FL_INSERT_RANGE for fallocate")
    Cc: stable@vger.kernel.org # v4.2+
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Link: https://lore.kernel.org/r/20220922120434.1294789-1-libaokun1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 350e98a08af1cfa5cc870c93a87a6d7011261836
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Nov 10 16:41:31 2022 +0100

    usb: dwc3: exynos: Fix remove() function
    
    commit e0481e5b3cc12ea7ccf4552d41518c89d3509004 upstream.
    
    The core DWC3 device node was not properly removed by the custom
    dwc3_exynos_remove_child() function. Replace it with generic
    of_platform_depopulate() which does that job right.
    
    Fixes: adcf20dcd262 ("usb: dwc3: exynos: Use of_platform API to create dwc3 core pdev")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Acked-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Sam Protsenko <semen.protsenko@linaro.org>
    Link: https://lore.kernel.org/r/20221110154131.2577-1-m.szyprowski@samsung.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d21d26e65b5f6d14c453f924d1edd689ad7b855e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Sep 20 19:06:33 2022 +0200

    lib/vdso: use "grep -E" instead of "egrep"
    
    commit 8ac3b5cd3e0521d92f9755e90d140382fc292510 upstream.
    
    The latest version of grep claims the egrep is now obsolete so the build
    now contains warnings that look like:
            egrep: warning: egrep is obsolescent; using grep -E
    fix this up by moving the vdso Makefile to use "grep -E" instead.
    
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
    Link: https://lore.kernel.org/r/20220920170633.3133829-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0cf8bc259e002d1518ad4ae1c8829e44c8d415e
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Nov 22 15:09:36 2022 +0200

    net: enetc: preserve TX ring priority across reconfiguration
    
    [ Upstream commit 290b5fe096e7dd0aad730d1af4f7f2d9fea43e11 ]
    
    In the blamed commit, a rudimentary reallocation procedure for RX buffer
    descriptors was implemented, for the situation when their format changes
    between normal (no PTP) and extended (PTP).
    
    enetc_hwtstamp_set() calls enetc_close() and enetc_open() in a sequence,
    and this sequence loses information which was previously configured in
    the TX BDR Mode Register, specifically via the enetc_set_bdr_prio() call.
    The TX ring priority is configured by tc-mqprio and tc-taprio, and
    affects important things for TSN such as the TX time of packets. The
    issue manifests itself most visibly by the fact that isochron --txtime
    reports premature packet transmissions when PTP is first enabled on an
    enetc interface.
    
    Save the TX ring priority in a new field in struct enetc_bdr (occupies a
    2 byte hole on arm64) in order to make this survive a ring reconfiguration.
    
    Fixes: 434cebabd3a2 ("enetc: Add dynamic allocation of extended Rx BD rings")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Link: https://lore.kernel.org/r/20221122130936.1704151-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de4dd4f9b3f648e07a2c3cc7115b655e02ac3672
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Wed Sep 28 12:52:02 2022 +0300

    net: enetc: cache accesses to &priv->si->hw
    
    [ Upstream commit 715bf2610f1d1adf3d4f9b7b3dd729984ec4270a ]
    
    The &priv->si->hw construct dereferences 2 pointers and makes lines
    longer than they need to be, in turn making the code harder to read.
    
    Replace &priv->si->hw accesses with a "hw" variable when there are 2 or
    more accesses within a function that dereference this. This includes
    loops, since &priv->si->hw is a loop invariant.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: 290b5fe096e7 ("net: enetc: preserve TX ring priority across reconfiguration")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f080b8caae9bb59d5db89509f41e17f6d41edd2
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue May 10 19:36:14 2022 +0300

    net: enetc: manage ENETC_F_QBV in priv->active_offloads only when enabled
    
    [ Upstream commit 32bf8e1f6fb9f6dc334b2b98dffc2e5dcd51e513 ]
    
    Future work in this driver would like to look at priv->active_offloads &
    ENETC_F_QBV to determine whether a tc-taprio qdisc offload was
    installed, but this does not produce the intended effect.
    
    All the other flags in priv->active_offloads are managed dynamically,
    except ENETC_F_QBV which is set statically based on the probed SI capability.
    
    This change makes priv->active_offloads & ENETC_F_QBV really track the
    presence of a tc-taprio schedule on the port.
    
    Some existing users, like the enetc_sched_speed_set() call from
    phylink_mac_link_up(), are best kept using the old logic: the tc-taprio
    offload does not re-trigger another link mode resolve, so the scheduler
    needs to be functional from the get go, as long as Qbv is supported at
    all on the port. So to preserve functionality there, look at the static
    station interface capability from pf->si->hw_features instead.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: 290b5fe096e7 ("net: enetc: preserve TX ring priority across reconfiguration")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d840c5d673d3942ae80ad1a15c3bfb572c2421f
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Fri Nov 18 13:05:39 2022 +0100

    s390/crashdump: fix TOD programmable field size
    
    [ Upstream commit f44e07a8afdd713ddc1a8832c39372fe5dd86895 ]
    
    The size of the TOD programmable field was incorrectly increased from
    four to eight bytes with commit 1a2c5840acf9 ("s390/dump: cleanup CPU
    save area handling").
    This leads to an elf notes section NT_S390_TODPREG which has a size of
    eight instead of four bytes in case of kdump, however even worse is
    that the contents is incorrect: it is supposed to contain only the
    contents of the TOD programmable field, but in fact contains a mix of
    the TOD programmable field (32 bit upper bits) and parts of the CPU
    timer register (lower 32 bits).
    
    Fix this by simply changing the size of the todpreg field within the
    save area structure. This will implicitly also fix the size of the
    corresponding elf notes sections.
    
    This also gets rid of this compile time warning:
    
    in function ‘fortify_memcpy_chk’,
        inlined from ‘save_area_add_regs’ at arch/s390/kernel/crash_dump.c:99:2:
    ./include/linux/fortify-string.h:413:25: error: call to ‘__read_overflow2_field’
       declared with attribute warning: detected read beyond size of field
       (2nd parameter); maybe use struct_group()? [-Werror=attribute-warning]
      413 |                         __read_overflow2_field(q_size_field, size);
          |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Fixes: 1a2c5840acf9 ("s390/dump: cleanup CPU save area handling")
    Reviewed-by: Christian Borntraeger <borntraeger@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11052f118879d44e9f954c35f32be461f77e96f4
Author: Yu Liao <liaoyu15@huawei.com>
Date:   Wed Nov 23 16:22:36 2022 +0800

    net: thunderx: Fix the ACPI memory leak
    
    [ Upstream commit 661e5ebbafd26d9d2e3c749f5cf591e55c7364f5 ]
    
    The ACPI buffer memory (string.pointer) should be freed as the buffer is
    not used after returning from bgx_acpi_match_id(), free it to prevent
    memory leak.
    
    Fixes: 46b903a01c05 ("net, thunder, bgx: Add support to get MAC address from ACPI.")
    Signed-off-by: Yu Liao <liaoyu15@huawei.com>
    Link: https://lore.kernel.org/r/20221123082237.1220521-1-liaoyu15@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b034fe2a0800b93ca575ce0d947e3f30b344f87e
Author: Martin Faltesek <mfaltesek@google.com>
Date:   Mon Nov 21 18:42:45 2022 -0600

    nfc: st-nci: fix memory leaks in EVT_TRANSACTION
    
    [ Upstream commit 440f2ae9c9f06e26f5dcea697a53717fc61a318c ]
    
    Error path does not free previously allocated memory. Add devm_kfree() to
    the failure path.
    
    Reported-by: Denis Efremov <denis.e.efremov@oracle.com>
    Reviewed-by: Guenter Roeck <groeck@google.com>
    Fixes: 5d1ceb7f5e56 ("NFC: st21nfcb: Add HCI transaction event support")
    Signed-off-by: Martin Faltesek <mfaltesek@google.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e14583073fc0f31b35b7de4eefbb1e2720914e0f
Author: Martin Faltesek <mfaltesek@google.com>
Date:   Mon Nov 21 18:42:44 2022 -0600

    nfc: st-nci: fix incorrect validating logic in EVT_TRANSACTION
    
    [ Upstream commit c60c152230828825c06e62a8f1ce956d4b659266 ]
    
    The first validation check for EVT_TRANSACTION has two different checks
    tied together with logical AND. One is a check for minimum packet length,
    and the other is for a valid aid_tag. If either condition is true (fails),
    then an error should be triggered. The fix is to change && to ||.
    
    Reported-by: Denis Efremov <denis.e.efremov@oracle.com>
    Reviewed-by: Guenter Roeck <groeck@google.com>
    Fixes: 5d1ceb7f5e56 ("NFC: st21nfcb: Add HCI transaction event support")
    Signed-off-by: Martin Faltesek <mfaltesek@google.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cc863d523999de19f609bf8da49d6dad2bba193
Author: Wang Hai <wanghai38@huawei.com>
Date:   Sun Nov 20 14:24:38 2022 +0800

    arcnet: fix potential memory leak in com20020_probe()
    
    [ Upstream commit 1c40cde6b5171d9c8dfc69be00464fd1c75e210b ]
    
    In com20020_probe(), if com20020_config() fails, dev and info
    will not be freed, which will lead to a memory leak.
    
    This patch adds freeing dev and info after com20020_config()
    fails to fix this bug.
    
    Compile tested only.
    
    Fixes: 15b99ac17295 ("[PATCH] pcmcia: add return value to _config() functions")
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d2be0cf27d9b7b508bf9d7b524cfb79e31a6311
Author: Ahmed S. Darwish <a.darwish@linutronix.de>
Date:   Thu Jan 28 20:48:02 2021 +0100

    net: arcnet: Fix RESET flag handling
    
    [ Upstream commit 01365633bd1c836240f9bbf86bbeee749795480a ]
    
    The main arcnet interrupt handler calls arcnet_close() then
    arcnet_open(), if the RESET status flag is encountered.
    
    This is invalid:
    
      1) In general, interrupt handlers should never call ->ndo_stop() and
         ->ndo_open() functions. They are usually full of blocking calls and
         other methods that are expected to be called only from drivers
         init and exit code paths.
    
      2) arcnet_close() contains a del_timer_sync(). If the irq handler
         interrupts the to-be-deleted timer, del_timer_sync() will just loop
         forever.
    
      3) arcnet_close() also calls tasklet_kill(), which has a warning if
         called from irq context.
    
      4) For device reset, the sequence "arcnet_close(); arcnet_open();" is
         not complete.  Some children arcnet drivers have special init/exit
         code sequences, which then embed a call to arcnet_open() and
         arcnet_close() accordingly. Check drivers/net/arcnet/com20020.c.
    
    Run the device RESET sequence from a scheduled workqueue instead.
    
    Signed-off-by: Ahmed S. Darwish <a.darwish@linutronix.de>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Link: https://lore.kernel.org/r/20210128194802.727770-1-a.darwish@linutronix.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: 1c40cde6b517 ("arcnet: fix potential memory leak in com20020_probe()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e61b00374a6e45c2a13b00d06e09d0000b3386ca
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Wed Nov 23 17:07:18 2022 +0100

    s390/dasd: fix no record found for raw_track_access
    
    [ Upstream commit 590ce6d96d6a224b470a3862c33a483d5022bfdb ]
    
    For DASD devices in raw_track_access mode only full track images are
    read and written.
    For this purpose it is not necessary to do search operation in the
    locate record extended function. The documentation even states that
    this might fail if the searched record is not found on a track.
    
    Currently the driver sets a value of 1 in the search field for the first
    record after record zero. This is the default for disks not in
    raw_track_access mode but record 1 might be missing on a completely
    empty track.
    
    There has not been any problem with this on IBM storage servers but it
    might lead to errors with DASD devices on other vendors storage servers.
    
    Fix this by setting the search field to 0. Record zero is always available
    even on a completely empty track.
    
    Fixes: e4dbb0f2b5dd ("[S390] dasd: Add support for raw ECKD access.")
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Link: https://lore.kernel.org/r/20221123160719.3002694-4-sth@linux.ibm.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aeebb074997251c150d042a33a8673bfea53c247
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Sun Nov 20 15:28:38 2022 +0800

    ipv4: Fix error return code in fib_table_insert()
    
    [ Upstream commit 568fe84940ac0e4e0b2cd7751b8b4911f7b9c215 ]
    
    In fib_table_insert(), if the alias was already inserted, but node not
    exist, the error code should be set before return from error handling path.
    
    Fixes: a6c76c17df02 ("ipv4: Notify route after insertion to the routing table")
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Link: https://lore.kernel.org/r/20221120072838.2167047-1-william.xuanziyang@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0af4d005a260a5f93b5784d6dc26e2cd2ef18dd
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Fri Nov 18 17:49:11 2022 -0800

    dccp/tcp: Reset saddr on failure after inet6?_hash_connect().
    
    [ Upstream commit 77934dc6db0d2b111a8f2759e9ad2fb67f5cffa5 ]
    
    When connect() is called on a socket bound to the wildcard address,
    we change the socket's saddr to a local address.  If the socket
    fails to connect() to the destination, we have to reset the saddr.
    
    However, when an error occurs after inet_hash6?_connect() in
    (dccp|tcp)_v[46]_conect(), we forget to reset saddr and leave
    the socket bound to the address.
    
    From the user's point of view, whether saddr is reset or not varies
    with errno.  Let's fix this inconsistent behaviour.
    
    Note that after this patch, the repro [0] will trigger the WARN_ON()
    in inet_csk_get_port() again, but this patch is not buggy and rather
    fixes a bug papering over the bhash2's bug for which we need another
    fix.
    
    For the record, the repro causes -EADDRNOTAVAIL in inet_hash6_connect()
    by this sequence:
    
      s1 = socket()
      s1.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)
      s1.bind(('127.0.0.1', 10000))
      s1.sendto(b'hello', MSG_FASTOPEN, (('127.0.0.1', 10000)))
      # or s1.connect(('127.0.0.1', 10000))
    
      s2 = socket()
      s2.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)
      s2.bind(('0.0.0.0', 10000))
      s2.connect(('127.0.0.1', 10000))  # -EADDRNOTAVAIL
    
      s2.listen(32)  # WARN_ON(inet_csk(sk)->icsk_bind2_hash != tb2);
    
    [0]: https://syzkaller.appspot.com/bug?extid=015d756bbd1f8b5c8f09
    
    Fixes: 3df80d9320bc ("[DCCP]: Introduce DCCPv6")
    Fixes: 7c657876b63c ("[DCCP]: Initial implementation")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Acked-by: Joanne Koong <joannelkoong@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8e494240e69f91517256adcd6fda62d0671772d
Author: Felix Fietkau <nbd@nbd.name>
Date:   Mon Nov 21 19:26:15 2022 +0100

    netfilter: flowtable_offload: add missing locking
    
    [ Upstream commit bcd9e3c1656d0f7dd9743598c65c3ae24efb38d0 ]
    
    nf_flow_table_block_setup and the driver TC_SETUP_FT call can modify the flow
    block cb list while they are being traversed elsewhere, causing a crash.
    Add a write lock around the calls to protect readers
    
    Fixes: c29f74e0df7a ("netfilter: nf_flow_table: hardware offload support")
    Reported-by: Chad Monroe <chad.monroe@smartrg.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af9de5cdcb1088b1f9b61814bfa8752f39c13b97
Author: Dawei Li <set_pte_at@outlook.com>
Date:   Sat Nov 5 00:05:36 2022 +0800

    dma-buf: fix racing conflict of dma_heap_add()
    
    [ Upstream commit 432e25902b9651622578c6248e549297d03caf66 ]
    
    Racing conflict could be:
    task A                 task B
    list_for_each_entry
    strcmp(h->name))
                           list_for_each_entry
                           strcmp(h->name)
    kzalloc                kzalloc
    ......                 .....
    device_create          device_create
    list_add
                           list_add
    
    The root cause is that task B has no idea about the fact someone
    else(A) has inserted heap with same name when it calls list_add,
    so a potential collision occurs.
    
    Fixes: c02a81fba74f ("dma-buf: Add dma-buf heaps framework")
    Signed-off-by: Dawei Li <set_pte_at@outlook.com>
    Acked-by: Andrew Davis <afd@ti.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/TYCP286MB2323873BBDF88020781FB986CA3B9@TYCP286MB2323.JPNP286.PROD.OUTLOOK.COM
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c40b76dfa7e4b27e861ac7722d1a9f974997d0f0
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Nov 19 15:02:02 2022 +0800

    bnx2x: fix pci device refcount leak in bnx2x_vf_is_pcie_pending()
    
    [ Upstream commit 3637a29ccbb6461b7268c5c5db525935d510afc6 ]
    
    As comment of pci_get_domain_bus_and_slot() says, it returns
    a pci device with refcount increment, when finish using it,
    the caller must decrement the reference count by calling
    pci_dev_put(). Call pci_dev_put() before returning from
    bnx2x_vf_is_pcie_pending() to avoid refcount leak.
    
    Fixes: b56e9670ffa4 ("bnx2x: Prepare device and initialize VF database")
    Suggested-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20221119070202.1407648-1-yangyingliang@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f81e9c0510b02e5f096c16c2f419248f48f647f0
Author: Andreas Kemnade <andreas@kemnade.info>
Date:   Sun Nov 20 23:12:07 2022 +0100

    regulator: twl6030: re-add TWL6032_SUBCLASS
    
    [ Upstream commit 3d6c982b26db94cc21bc9f7784f63e8286b7be62 ]
    
    In former times, info->feature was populated via the parent driver
    by pdata/regulator_init_data->driver_data for all regulators when
    USB_PRODUCT_ID_LSB indicates a TWL6032.
    Today, the information is not set, so re-add it at the regulator
    definitions.
    
    Fixes: 25d82337705e2 ("regulator: twl: make driver DT only")
    Signed-off-by: Andreas Kemnade <andreas@kemnade.info>
    Link: https://lore.kernel.org/r/20221120221208.3093727-2-andreas@kemnade.info
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32b944b9c4b25227ec8d983c27532d4f4a65d8a4
Author: Liu Shixin <liushixin2@huawei.com>
Date:   Fri Nov 18 16:24:19 2022 +0800

    NFC: nci: fix memory leak in nci_rx_data_packet()
    
    [ Upstream commit 53270fb0fd77fe786d8c07a0793981d797836b93 ]
    
    Syzbot reported a memory leak about skb:
    
    unreferenced object 0xffff88810e144e00 (size 240):
      comm "syz-executor284", pid 3701, jiffies 4294952403 (age 12.620s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff83ab79a9>] __alloc_skb+0x1f9/0x270 net/core/skbuff.c:497
        [<ffffffff82a5cf64>] alloc_skb include/linux/skbuff.h:1267 [inline]
        [<ffffffff82a5cf64>] virtual_ncidev_write+0x24/0xe0 drivers/nfc/virtual_ncidev.c:116
        [<ffffffff815f6503>] do_loop_readv_writev fs/read_write.c:759 [inline]
        [<ffffffff815f6503>] do_loop_readv_writev fs/read_write.c:743 [inline]
        [<ffffffff815f6503>] do_iter_write+0x253/0x300 fs/read_write.c:863
        [<ffffffff815f66ed>] vfs_writev+0xdd/0x240 fs/read_write.c:934
        [<ffffffff815f68f6>] do_writev+0xa6/0x1c0 fs/read_write.c:977
        [<ffffffff848802d5>] do_syscall_x64 arch/x86/entry/common.c:50 [inline]
        [<ffffffff848802d5>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
        [<ffffffff84a00087>] entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    In nci_rx_data_packet(), if we don't get a valid conn_info, we will return
    directly but forget to release the skb.
    
    Reported-by: syzbot+cdb9a427d1bc08815104@syzkaller.appspotmail.com
    Fixes: 4aeee6871e8c ("NFC: nci: Add dynamic logical connections support")
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Link: https://lore.kernel.org/r/20221118082419.239475-1-liushixin2@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68a7aec3f4b55caae63a77881dff2c07a2a8f883
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 18 16:33:03 2022 -0500

    net: sched: allow act_ct to be built without NF_NAT
    
    [ Upstream commit 8427fd100c7b7793650e212a81e42f1cf124613d ]
    
    In commit f11fe1dae1c4 ("net/sched: Make NET_ACT_CT depends on NF_NAT"),
    it fixed the build failure when NF_NAT is m and NET_ACT_CT is y by
    adding depends on NF_NAT for NET_ACT_CT. However, it would also cause
    NET_ACT_CT cannot be built without NF_NAT, which is not expected. This
    patch fixes it by changing to use "(!NF_NAT || NF_NAT)" as the depend.
    
    Fixes: f11fe1dae1c4 ("net/sched: Make NET_ACT_CT depends on NF_NAT")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/b6386f28d1ba34721795fb776a91cbdabb203447.1668807183.git.lucien.xin@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e2664e12bc6fa8d2aa642a7027d6a5c2810a674
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Nov 17 15:50:09 2022 +0800

    sfc: fix potential memleak in __ef100_hard_start_xmit()
    
    [ Upstream commit aad98abd5cb8133507f22654f56bcb443aaa2d89 ]
    
    The __ef100_hard_start_xmit() returns NETDEV_TX_OK without freeing skb
    in error handling case, add dev_kfree_skb_any() to fix it.
    
    Fixes: 51b35a454efd ("sfc: skeleton EF100 PF driver")
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Acked-by: Martin Habets <habetsm.xilinx@gmail.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/1668671409-10909-1-git-send-email-zhangchangzhong@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b638a16ead12e3759d80322ab8cabebfd4d7165
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Thu Nov 3 17:07:13 2022 +0800

    xfrm: Fix ignored return value in xfrm6_init()
    
    [ Upstream commit 40781bfb836eda57d19c0baa37c7e72590e05fdc ]
    
    When IPv6 module initializing in xfrm6_init(), register_pernet_subsys()
    is possible to fail but its return value is ignored.
    
    If IPv6 initialization fails later and xfrm6_fini() is called,
    removing uninitialized list in xfrm6_net_ops will cause null-ptr-deref:
    
    KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
    CPU: 1 PID: 330 Comm: insmod
    RIP: 0010:unregister_pernet_operations+0xc9/0x450
    Call Trace:
     <TASK>
     unregister_pernet_subsys+0x31/0x3e
     xfrm6_fini+0x16/0x30 [ipv6]
     ip6_route_init+0xcd/0x128 [ipv6]
     inet6_init+0x29c/0x602 [ipv6]
     ...
    
    Fix it by catching the error return value of register_pernet_subsys().
    
    Fixes: 8d068875caca ("xfrm: make gc_thresh configurable in all namespaces")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7788361a645708a51924d8aa63ead223923a5a8
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Sat Nov 19 15:28:32 2022 +0800

    tipc: check skb_linearize() return value in tipc_disc_rcv()
    
    [ Upstream commit cd0f6421162201e4b22ce757a1966729323185eb ]
    
    If skb_linearize() fails in tipc_disc_rcv(), we need to free the skb instead of
    handle it.
    
    Fixes: 25b0b9c4e835 ("tipc: handle collisions of 32-bit node address hash values")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Link: https://lore.kernel.org/r/20221119072832.7896-1-yuehaibing@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4058e3b74ab3eabe0835cee9a0c6deda79e8a295
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 18 16:45:01 2022 -0500

    tipc: add an extra conn_get in tipc_conn_alloc
    
    [ Upstream commit a7b42969d63f47320853a802efd879fbdc4e010e ]
    
    One extra conn_get() is needed in tipc_conn_alloc(), as after
    tipc_conn_alloc() is called, tipc_conn_close() may free this
    con before deferencing it in tipc_topsrv_accept():
    
       tipc_conn_alloc();
       newsk = newsock->sk;
                                     <---- tipc_conn_close();
       write_lock_bh(&sk->sk_callback_lock);
       newsk->sk_data_ready = tipc_conn_data_ready;
    
    Then an uaf issue can be triggered:
    
      BUG: KASAN: use-after-free in tipc_topsrv_accept+0x1e7/0x370 [tipc]
      Call Trace:
       <TASK>
       dump_stack_lvl+0x33/0x46
       print_report+0x178/0x4b0
       kasan_report+0x8c/0x100
       kasan_check_range+0x179/0x1e0
       tipc_topsrv_accept+0x1e7/0x370 [tipc]
       process_one_work+0x6a3/0x1030
       worker_thread+0x8a/0xdf0
    
    This patch fixes it by holding it in tipc_conn_alloc(), then after
    all accessing in tipc_topsrv_accept() releasing it. Note when does
    this in tipc_topsrv_kern_subscr(), as tipc_conn_rcv_sub() returns
    0 or -1 only, we don't need to check for "> 0".
    
    Fixes: c5fa7b3cf3cb ("tipc: introduce new TIPC server infrastructure")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e87a077d09c05985a0edac7c6c49bb307f775d12
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 18 16:45:00 2022 -0500

    tipc: set con sock in tipc_conn_alloc
    
    [ Upstream commit 0e5d56c64afcd6fd2d132ea972605b66f8a7d3c4 ]
    
    A crash was reported by Wei Chen:
    
      BUG: kernel NULL pointer dereference, address: 0000000000000018
      RIP: 0010:tipc_conn_close+0x12/0x100
      Call Trace:
       tipc_topsrv_exit_net+0x139/0x320
       ops_exit_list.isra.9+0x49/0x80
       cleanup_net+0x31a/0x540
       process_one_work+0x3fa/0x9f0
       worker_thread+0x42/0x5c0
    
    It was caused by !con->sock in tipc_conn_close(). In tipc_topsrv_accept(),
    con is allocated in conn_idr then its sock is set:
    
      con = tipc_conn_alloc();
      ...                    <----[1]
      con->sock = newsock;
    
    If tipc_conn_close() is called in anytime of [1], the null-pointer-def
    is triggered by con->sock->sk due to con->sock is not yet set.
    
    This patch fixes it by moving the con->sock setting to tipc_conn_alloc()
    under s->idr_lock. So that con->sock can never be NULL when getting the
    con from s->conn_idr. It will be also safer to move con->server and flag
    CF_CONNECTED setting under s->idr_lock, as they should all be set before
    tipc_conn_alloc() is called.
    
    Fixes: c5fa7b3cf3cb ("tipc: introduce new TIPC server infrastructure")
    Reported-by: Wei Chen <harperchen1110@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 891daa95b0bb3e739bcea577b6956567ad11005d
Author: Moshe Shemesh <moshe@nvidia.com>
Date:   Thu Nov 17 09:07:20 2022 +0200

    net/mlx5: Fix handling of entry refcount when command is not issued to FW
    
    [ Upstream commit aaf2e65cac7f2e1ae729c2fbc849091df9699f96 ]
    
    In case command interface is down, or the command is not allowed, driver
    did not increment the entry refcount, but might have decrement as part
    of forced completion handling.
    
    Fix that by always increment and decrement the refcount to make it
    symmetric for all flows.
    
    Fixes: 50b2412b7e78 ("net/mlx5: Avoid possible free of command entry while timeout comp handler")
    Signed-off-by: Eran Ben Elisha <eranbe@nvidia.com>
    Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
    Reported-by: Jack Wang <jinpu.wang@ionos.com>
    Tested-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e06ff9f8fedfc523d4f925ee1c0f06e26e1cefd6
Author: Moshe Shemesh <moshe@nvidia.com>
Date:   Thu Oct 20 12:25:59 2022 +0300

    net/mlx5: Fix FW tracer timestamp calculation
    
    [ Upstream commit 61db3d7b99a367416e489ccf764cc5f9b00d62a1 ]
    
    Fix a bug in calculation of FW tracer timestamp. Decreasing one in the
    calculation should effect only bits 52_7 and not effect bits 6_0 of the
    timestamp, otherwise bits 6_0 are always set in this calculation.
    
    Fixes: 70dd6fdb8987 ("net/mlx5: FW tracer, parse traces and kernel tracing support")
    Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
    Reviewed-by: Feras Daoud <ferasda@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5689eba90a20646ec3d7dd50360e28c7d5fdbbfe
Author: Vishwanath Pai <vpai@akamai.com>
Date:   Wed Sep 28 14:26:50 2022 -0400

    netfilter: ipset: regression in ip_set_hash_ip.c
    
    [ Upstream commit c7aa1a76d4a0a3c401025b60c401412bbb60f8c6 ]
    
    This patch introduced a regression: commit 48596a8ddc46 ("netfilter:
    ipset: Fix adding an IPv4 range containing more than 2^31 addresses")
    
    The variable e.ip is passed to adtfn() function which finally adds the
    ip address to the set. The patch above refactored the for loop and moved
    e.ip = htonl(ip) to the end of the for loop.
    
    What this means is that if the value of "ip" changes between the first
    assignement of e.ip and the forloop, then e.ip is pointing to a
    different ip address than "ip".
    
    Test case:
    $ ipset create jdtest_tmp hash:ip family inet hashsize 2048 maxelem 100000
    $ ipset add jdtest_tmp 10.0.1.1/31
    ipset v6.21.1: Element cannot be added to the set: it's already added
    
    The value of ip gets updated inside the  "else if (tb[IPSET_ATTR_CIDR])"
    block but e.ip is still pointing to the old value.
    
    Fixes: 48596a8ddc46 ("netfilter: ipset: Fix adding an IPv4 range containing more than 2^31 addresses")
    Reviewed-by: Joshua Hunt <johunt@akamai.com>
    Signed-off-by: Vishwanath Pai <vpai@akamai.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e62e62ea912a49f7230620f1bdc20410b943a44c
Author: Jozsef Kadlecsik <kadlec@netfilter.org>
Date:   Wed Jul 28 17:01:15 2021 +0200

    netfilter: ipset: Limit the maximal range of consecutive elements to add/delete
    
    [ Upstream commit 5f7b51bf09baca8e4f80cbe879536842bafb5f31 ]
    
    The range size of consecutive elements were not limited. Thus one could
    define a huge range which may result soft lockup errors due to the long
    execution time. Now the range size is limited to 2^20 entries.
    
    Reported-by: Brad Spengler <spender@grsecurity.net>
    Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Stable-dep-of: c7aa1a76d4a0 ("netfilter: ipset: regression in ip_set_hash_ip.c")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dca384970acd94dd88aee60b1264e81e48d4ad1
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Nov 19 16:11:35 2022 +0800

    Drivers: hv: vmbus: fix possible memory leak in vmbus_device_register()
    
    [ Upstream commit 25c94b051592c010abe92c85b0485f1faedc83f3 ]
    
    If device_register() returns error in vmbus_device_register(),
    the name allocated by dev_set_name() must be freed. As comment
    of device_register() says, it should use put_device() to give
    up the reference in the error path. So fix this by calling
    put_device(), then the name can be freed in kobject_cleanup().
    
    Fixes: 09d50ff8a233 ("Staging: hv: make the Hyper-V virtual bus code build")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/20221119081135.1564691-3-yangyingliang@huawei.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 909186cf34de7d761833d064cd58c64cf6884e00
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Nov 19 16:11:34 2022 +0800

    Drivers: hv: vmbus: fix double free in the error path of vmbus_add_channel_work()
    
    [ Upstream commit f92a4b50f0bd7fd52391dc4bb9a309085d278f91 ]
    
    In the error path of vmbus_device_register(), device_unregister()
    is called, which calls vmbus_device_release().  The latter frees
    the struct hv_device that was passed in to vmbus_device_register().
    So remove the kfree() in vmbus_add_channel_work() to avoid a double
    free.
    
    Fixes: c2e5df616e1a ("vmbus: add per-channel sysfs info")
    Suggested-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/20221119081135.1564691-2-yangyingliang@huawei.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f42802e14a8752cebb434954c41f5aa123242996
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Nov 18 09:12:49 2022 +0800

    macsec: Fix invalid error code set
    
    [ Upstream commit 7cef6b73fba96abef731a53501924fc3c4a0f947 ]
    
    'ret' is defined twice in macsec_changelink(), when it is set in macsec_is_offloaded
    case, it will be invalid before return.
    
    Fixes: 3cf3227a21d1 ("net: macsec: hardware offloading infrastructure")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Saeed Mahameed <saeed@kernel.org>
    Reviewed-by: Antoine Tenart <atenart@kernel.org>
    Link: https://lore.kernel.org/r/20221118011249.48112-1-yuehaibing@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72be055615e0d8170ade2a0f750a7171b53fd37c
Author: Jaco Coetzee <jaco.coetzee@corigine.com>
Date:   Thu Nov 17 16:37:44 2022 +0100

    nfp: add port from netdev validation for EEPROM access
    
    [ Upstream commit 0873016d46f6dfafd1bdf4d9b935b3331b226f7c ]
    
    Setting of the port flag `NFP_PORT_CHANGED`, introduced
    to ensure the correct reading of EEPROM data, causes a
    fatal kernel NULL pointer dereference in cases where
    the target netdev type cannot be determined.
    
    Add validation of port struct pointer before attempting
    to set the `NFP_PORT_CHANGED` flag. Return that operation
    is not supported if the netdev type cannot be determined.
    
    Fixes: 4ae97cae07e1 ("nfp: ethtool: fix the display error of `ethtool -m DEVNAME`")
    Signed-off-by: Jaco Coetzee <jaco.coetzee@corigine.com>
    Reviewed-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce41e03cacaa1f15539785a381ef0a27cf6d25da
Author: Diana Wang <na.wang@corigine.com>
Date:   Thu Nov 17 16:37:43 2022 +0100

    nfp: fill splittable of devlink_port_attrs correctly
    
    [ Upstream commit 4abd9600b9d15d3d92a9ac25cf200422a4c415ee ]
    
    The error is reflected in that it shows wrong splittable status of
    port when executing "devlink port show".
    The reason which leads the error is that the assigned operation of
    splittable is just a simple negation operation of split and it does
    not consider port lanes quantity. A splittable port should have
    several lanes that can be split(lanes quantity > 1).
    If without the judgement, it will show wrong message for some
    firmware, such as 2x25G, 2x10G.
    
    Fixes: a0f49b548652 ("devlink: Add a new devlink port split ability attribute and pass to netlink")
    Signed-off-by: Diana Wang <na.wang@corigine.com>
    Reviewed-by: Louis Peens <louis.peens@corigine.com>
    Reviewed-by: Niklas Söderlund <niklas.soderlund@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b553ded34500fd9752ebee18dcabb18c062efb4
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Nov 17 21:51:48 2022 +0800

    net: pch_gbe: fix pci device refcount leak while module exiting
    
    [ Upstream commit 5619537284f1017e9f6c7500b02b859b3830a06d ]
    
    As comment of pci_get_domain_bus_and_slot() says, it returns
    a pci device with refcount increment, when finish using it,
    the caller must decrement the reference count by calling
    pci_dev_put().
    
    In pch_gbe_probe(), pci_get_domain_bus_and_slot() is called,
    so in error path in probe() and remove() function, pci_dev_put()
    should be called to avoid refcount leak. Compile tested only.
    
    Fixes: 1a0bdadb4e36 ("net/pch_gbe: supports eg20t ptp clock")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221117135148.301014-1-yangyingliang@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c59ef9ab63df1ece9b53a3bd1d3779adcb006a4
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Nov 17 16:50:38 2022 +0800

    net/qla3xxx: fix potential memleak in ql3xxx_send()
    
    [ Upstream commit 62a7311fb96c61d281da9852dbee4712fc8c3277 ]
    
    The ql3xxx_send() returns NETDEV_TX_OK without freeing skb in error
    handling case, add dev_kfree_skb_any() to fix it.
    
    Fixes: bd36b0ac5d06 ("qla3xxx: Add support for Qlogic 4032 chip.")
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Link: https://lore.kernel.org/r/1668675039-21138-1-git-send-email-zhangchangzhong@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a24d5f6c8b7bf0f1551573e45dfeb1958d852a91
Author: Peter Kosyh <pkosyh@yandex.ru>
Date:   Thu Nov 17 18:28:06 2022 +0300

    net/mlx4: Check retval of mlx4_bitmap_init
    
    [ Upstream commit 594c61ffc77de0a197934aa0f1df9285c68801c6 ]
    
    If mlx4_bitmap_init fails, mlx4_bitmap_alloc_range will dereference
    the NULL pointer (bitmap->table).
    
    Make sure, that mlx4_bitmap_alloc_range called in no error case.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: d57febe1a478 ("net/mlx4: Add A0 hybrid steering")
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Peter Kosyh <pkosyh@yandex.ru>
    Link: https://lore.kernel.org/r/20221117152806.278072-1-pkosyh@yandex.ru
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da86a63479e5743d8d631bd813a6f0b45423d4ef
Author: Liu Jian <liujian56@huawei.com>
Date:   Thu Nov 17 19:13:56 2022 +0800

    net: ethernet: mtk_eth_soc: fix error handling in mtk_open()
    
    [ Upstream commit f70074140524c59a0935947b06dd6cb6e1ea642d ]
    
    If mtk_start_dma() fails, invoke phylink_disconnect_phy() to perform
    cleanup. phylink_disconnect_phy() contains the put_device action. If
    phylink_disconnect_phy is not performed, the Kref of netdev will leak.
    
    Fixes: b8fc9f30821e ("net: ethernet: mediatek: Add basic PHYLINK support")
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/20221117111356.161547-1-liujian56@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 756534f7cf53f35e9e098c15a6e341f27b5888d9
Author: Fabio Estevam <festevam@denx.de>
Date:   Fri Nov 18 10:41:02 2022 -0300

    ARM: dts: imx6q-prti6q: Fix ref/tcxo-clock-frequency properties
    
    [ Upstream commit e68be7b39f21d8a9291a5a3019787cd3ca999dd7 ]
    
    make dtbs_check gives the following errors:
    
    ref-clock-frequency: size (9) error for type uint32
    tcxo-clock-frequency: size (9) error for type uint32
    
    Fix it by passing the frequencies inside < > as documented in
    Documentation/devicetree/bindings/net/wireless/ti,wlcore.yaml.
    
    Signed-off-by: Fabio Estevam <festevam@denx.de>
    Fixes: 0d446a505592 ("ARM: dts: add Protonic PRTI6Q board")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 290a71ff721b072356c18be0e9bfa505935463d9
Author: Zheng Yongjun <zhengyongjun3@huawei.com>
Date:   Thu Nov 17 06:20:11 2022 +0000

    ARM: mxs: fix memory leak in mxs_machine_init()
    
    [ Upstream commit f31e3c204d1844b8680a442a48868af5ac3d5481 ]
    
    If of_property_read_string() failed, 'soc_dev_attr' should be
    freed before return. Otherwise there is a memory leak.
    
    Fixes: 2046338dcbc6 ("ARM: mxs: Use soc bus infrastructure")
    Signed-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>
    Reviewed-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c97af75f53c626283afd8a800a4bd57614f761f
Author: Daniel Xu <dxu@dxuuu.xyz>
Date:   Wed Nov 9 12:39:07 2022 -0700

    netfilter: conntrack: Fix data-races around ct mark
    
    [ Upstream commit 52d1aa8b8249ff477aaa38b6f74a8ced780d079c ]
    
    nf_conn:mark can be read from and written to in parallel. Use
    READ_ONCE()/WRITE_ONCE() for reads and writes to prevent unwanted
    compiler optimizations.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 459332f8dbfb99d9fb95c0f37c7015d36687fc6d
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Thu Nov 10 20:26:06 2022 +0800

    9p/fd: fix issue of list_del corruption in p9_fd_cancel()
    
    [ Upstream commit 11c10956515b8ec44cf4f2a7b9d8bf8b9dc05ec4 ]
    
    Syz reported the following issue:
    kernel BUG at lib/list_debug.c:53!
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN
    RIP: 0010:__list_del_entry_valid.cold+0x5c/0x72
    Call Trace:
    <TASK>
    p9_fd_cancel+0xb1/0x270
    p9_client_rpc+0x8ea/0xba0
    p9_client_create+0x9c0/0xed0
    v9fs_session_init+0x1e0/0x1620
    v9fs_mount+0xba/0xb80
    legacy_get_tree+0x103/0x200
    vfs_get_tree+0x89/0x2d0
    path_mount+0x4c0/0x1ac0
    __x64_sys_mount+0x33b/0x430
    do_syscall_64+0x35/0x80
    entry_SYSCALL_64_after_hwframe+0x46/0xb0
    </TASK>
    
    The process is as follows:
    Thread A:                       Thread B:
    p9_poll_workfn()                p9_client_create()
    ...                                 ...
        p9_conn_cancel()                p9_fd_cancel()
            list_del()                      ...
            ...                             list_del()  //list_del
                                                          corruption
    There is no lock protection when deleting list in p9_conn_cancel(). After
    deleting list in Thread A, thread B will delete the same list again. It
    will cause issue of list_del corruption.
    
    Setting req->status to REQ_STATUS_ERROR under lock prevents other
    cleanup paths from trying to manipulate req_list.
    The other thread can safely check req->status because it still holds a
    reference to req at this point.
    
    Link: https://lkml.kernel.org/r/20221110122606.383352-1-shaozhengchao@huawei.com
    Fixes: 52f1c45dde91 ("9p: trans_fd/p9_conn_cancel: drop client lock earlier")
    Reported-by: syzbot+9b69b8d10ab4a7d88056@syzkaller.appspotmail.com
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    [Dominique: add description of the fix in commit message]
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26bb8f6aaae303d890265f38c51a3f378d4a57af
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Nov 17 14:55:27 2022 +0800

    net: pch_gbe: fix potential memleak in pch_gbe_tx_queue()
    
    [ Upstream commit 2360f9b8c4e81d242d4cbf99d630a2fffa681fab ]
    
    In pch_gbe_xmit_frame(), NETDEV_TX_OK will be returned whether
    pch_gbe_tx_queue() sends data successfully or not, so pch_gbe_tx_queue()
    needs to free skb before returning. But pch_gbe_tx_queue() returns without
    freeing skb in case of dma_map_single() fails. Add dev_kfree_skb_any()
    to fix it.
    
    Fixes: 77555ee72282 ("net: Add Gigabit Ethernet driver of Topcliff PCH")
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 398a860a44297245ed4cb7ff59b37fef89c379f8
Author: Lin Ma <linma@zju.edu.cn>
Date:   Wed Nov 16 21:02:49 2022 +0800

    nfc/nci: fix race with opening and closing
    
    [ Upstream commit 0ad6bded175e829c2ca261529c9dce39a32a042d ]
    
    Previously we leverage NCI_UNREG and the lock inside nci_close_device to
    prevent the race condition between opening a device and closing a
    device. However, it still has problem because a failed opening command
    will erase the NCI_UNREG flag and allow another opening command to
    bypass the status checking.
    
    This fix corrects that by making sure the NCI_UNREG is held.
    
    Reported-by: syzbot+43475bf3cfbd6e41f5b7@syzkaller.appspotmail.com
    Fixes: 48b71a9e66c2 ("NFC: add NCI_UNREG flag to eliminate the race")
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3535c632e6d16c98f76e615da8dc0cb2750c66cc
Author: David Howells <dhowells@redhat.com>
Date:   Wed Nov 16 14:02:28 2022 +0000

    rxrpc: Fix race between conn bundle lookup and bundle removal [ZDI-CAN-15975]
    
    [ Upstream commit 3bcd6c7eaa53b56c3f584da46a1f7652e759d0e5 ]
    
    After rxrpc_unbundle_conn() has removed a connection from a bundle, it
    checks to see if there are any conns with available channels and, if not,
    removes and attempts to destroy the bundle.
    
    Whilst it does check after grabbing client_bundles_lock that there are no
    connections attached, this races with rxrpc_look_up_bundle() retrieving the
    bundle, but not attaching a connection for the connection to be attached
    later.
    
    There is therefore a window in which the bundle can get destroyed before we
    manage to attach a new connection to it.
    
    Fix this by adding an "active" counter to struct rxrpc_bundle:
    
     (1) rxrpc_connect_call() obtains an active count by prepping/looking up a
         bundle and ditches it before returning.
    
     (2) If, during rxrpc_connect_call(), a connection is added to the bundle,
         this obtains an active count, which is held until the connection is
         discarded.
    
     (3) rxrpc_deactivate_bundle() is created to drop an active count on a
         bundle and destroy it when the active count reaches 0.  The active
         count is checked inside client_bundles_lock() to prevent a race with
         rxrpc_look_up_bundle().
    
     (4) rxrpc_unbundle_conn() then calls rxrpc_deactivate_bundle().
    
    Fixes: 245500d853e9 ("rxrpc: Rewrite the client connection manager")
    Reported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-15975
    Signed-off-by: David Howells <dhowells@redhat.com>
    Tested-by: zdi-disclosures@trendmicro.com
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23c03ee0eec4424a54a5619b23954d9069bac026
Author: David Howells <dhowells@redhat.com>
Date:   Sat May 21 08:45:22 2022 +0100

    rxrpc: Use refcount_t rather than atomic_t
    
    [ Upstream commit a05754295e01f006a651eec759c5dbe682ef6cef ]
    
    Move to using refcount_t rather than atomic_t for refcounts in rxrpc.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: 3bcd6c7eaa53 ("rxrpc: Fix race between conn bundle lookup and bundle removal [ZDI-CAN-15975]")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bddde342c62ee741a5417df6da93c0701b020e86
Author: David Howells <dhowells@redhat.com>
Date:   Sat May 21 08:45:15 2022 +0100

    rxrpc: Allow list of in-use local UDP endpoints to be viewed in /proc
    
    [ Upstream commit 33912c2639ad76660988c8ca97e4d18fca89b668 ]
    
    Allow the list of in-use local UDP endpoints in the current network
    namespace to be viewed in /proc.
    
    To aid with this, the endpoint list is converted to an hlist and RCU-safe
    manipulation is used so that the list can be read with only the RCU
    read lock held.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: 3bcd6c7eaa53 ("rxrpc: Fix race between conn bundle lookup and bundle removal [ZDI-CAN-15975]")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2d5dba2fc694957d564944bb74671c68a2c4d24
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Nov 15 19:34:39 2022 +0200

    net: liquidio: simplify if expression
    
    [ Upstream commit 733d4bbf9514890eb53ebe75827bf1fb4fd25ebe ]
    
    Fix the warning reported by kbuild:
    
    cocci warnings: (new ones prefixed by >>)
    >> drivers/net/ethernet/cavium/liquidio/lio_main.c:1797:54-56: WARNING !A || A && B is equivalent to !A || B
       drivers/net/ethernet/cavium/liquidio/lio_main.c:1827:54-56: WARNING !A || A && B is equivalent to !A || B
    
    Fixes: 8979f428a4af ("net: liquidio: release resources when liquidio driver open failed")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Reviewed-by: Saeed Mahameed <saeed@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8124a02e17175e82e0e9350894775e5f36f3710e
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Mon Nov 14 19:59:23 2022 +0100

    ARM: dts: at91: sam9g20ek: enable udc vbus gpio pinctrl
    
    [ Upstream commit 40a2226e8bfacb79dd154dea68febeead9d847e9 ]
    
    We set the PIOC to GPIO mode. This way the pin becomes an
    input signal will be usable by the controller. Without
    this change the udc on the 9g20ek does not work.
    
    Cc: nicolas.ferre@microchip.com
    Cc: ludovic.desroches@microchip.com
    Cc: alexandre.belloni@bootlin.com
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: kernel@pengutronix.de
    Fixes: 5cb4e73575e3 ("ARM: at91: add at91sam9g20ek boards dt support")
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20221114185923.1023249-3-m.grzeschik@pengutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b547bf71fa7e35e22dd6494588a71ebd318aae09
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Nov 9 22:01:24 2022 +0800

    tee: optee: fix possible memory leak in optee_register_device()
    
    [ Upstream commit cce616e012c215d65c15e5d1afa73182dea49389 ]
    
    If device_register() returns error in optee_register_device(),
    the name allocated by dev_set_name() need be freed. As comment
    of device_register() says, it should use put_device() to give
    up the reference in the error path. So fix this by calling
    put_device(), then the name can be freed in kobject_cleanup(),
    and optee_device is freed in optee_release_device().
    
    Fixes: c3fa24af9244 ("tee: optee: add TEE bus device enumeration support")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Sumit Garg <sumit.garg@linaro.org>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b76c5a99f44a9bcf78df7abf1fcb74dda6c1d10f
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Nov 13 19:57:48 2022 -0600

    bus: sunxi-rsb: Support atomic transfers
    
    [ Upstream commit 077686da0e2162c4ea5ae0df205849c2a7a84479 ]
    
    When communicating with a PMIC during system poweroff (pm_power_off()),
    IRQs are disabled and we are in a RCU read-side critical section, so we
    cannot use wait_for_completion_io_timeout(). Instead, poll the status
    register for transfer completion.
    
    Fixes: d787dcdb9c8f ("bus: sunxi-rsb: Add driver for Allwinner Reduced Serial Bus")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20221114015749.28490-3-samuel@sholland.org
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c059b7d2a6b7ddb75d9e579456f597ff697aca0
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Nov 16 11:37:06 2022 +0800

    regulator: core: fix UAF in destroy_regulator()
    
    [ Upstream commit 1f386d6894d0f1b7de8ef640c41622ddd698e7ab ]
    
    I got a UAF report as following:
    
    ==================================================================
    BUG: KASAN: use-after-free in __lock_acquire+0x935/0x2060
    Read of size 8 at addr ffff88810e838220 by task python3/268
    Call Trace:
     <TASK>
     dump_stack_lvl+0x67/0x83
     print_report+0x178/0x4b0
     kasan_report+0x90/0x190
     __lock_acquire+0x935/0x2060
     lock_acquire+0x156/0x400
     _raw_spin_lock+0x2a/0x40
     lockref_get+0x11/0x30
     simple_recursive_removal+0x41/0x440
     debugfs_remove.part.12+0x32/0x50
     debugfs_remove+0x29/0x30
     _regulator_put.cold.54+0x3e/0x27f
     regulator_put+0x1f/0x30
     release_nodes+0x6a/0xa0
     devres_release_all+0xf8/0x150
    
    Allocated by task 37:
     kasan_save_stack+0x1c/0x40
     kasan_set_track+0x21/0x30
     __kasan_slab_alloc+0x5d/0x70
     slab_post_alloc_hook+0x62/0x510
     kmem_cache_alloc_lru+0x222/0x5a0
     __d_alloc+0x31/0x440
     d_alloc+0x30/0xf0
     d_alloc_parallel+0xc4/0xd20
     __lookup_slow+0x15e/0x2f0
     lookup_one_len+0x13a/0x150
     start_creating+0xea/0x190
     debugfs_create_dir+0x1e/0x210
     create_regulator+0x254/0x4e0
     _regulator_get+0x2a1/0x467
     _devm_regulator_get+0x5a/0xb0
     regulator_virtual_probe+0xb9/0x1a0
    
    Freed by task 30:
     kasan_save_stack+0x1c/0x40
     kasan_set_track+0x21/0x30
     kasan_save_free_info+0x2a/0x50
     __kasan_slab_free+0x102/0x190
     kmem_cache_free+0xf6/0x600
     rcu_core+0x54c/0x12b0
     __do_softirq+0xf2/0x5e3
    
    Last potentially related work creation:
     kasan_save_stack+0x1c/0x40
     __kasan_record_aux_stack+0x98/0xb0
     call_rcu+0x42/0x700
     dentry_free+0x6c/0xd0
     __dentry_kill+0x23b/0x2d0
     dput.part.31+0x431/0x780
     simple_recursive_removal+0xa9/0x440
     debugfs_remove.part.12+0x32/0x50
     debugfs_remove+0x29/0x30
     regulator_unregister+0xe3/0x230
     release_nodes+0x6a/0xa0
    
    ==================================================================
    
    Here is how happened:
    
    processor A                                     processor B
    regulator_register()
      rdev_init_debugfs()
        rdev->debugfs = debugfs_create_dir()
                                                    devm_regulator_get()
                                                      rdev = regulator_dev_lookup()
                                                      create_regulator(rdev)
                                                        // using rdev->debugfs as parent
                                                        debugfs_create_dir(rdev->debugfs)
    
    mfd_remove_devices_fn()
      release_nodes()
        regulator_unregister()
          // free rdev->debugfs
          debugfs_remove_recursive(rdev->debugfs)
                                                    release_nodes()
                                                      destroy_regulator()
                                                        debugfs_remove_recursive() <- causes UAF
    
    In devm_regulator_get(), after getting rdev, the refcount
    is get, so fix this by moving debugfs_remove_recursive()
    to regulator_dev_release(), then it can be proctected by
    the refcount, the 'rdev->debugfs' can not be freed until
    the refcount is 0.
    
    Fixes: 5de705194e98 ("regulator: Add basic per consumer debugfs")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221116033706.3595812-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcb2d286362b19c07d5ea85878738e48422067ce
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Wed Nov 16 17:32:04 2022 +0800

    spi: dw-dma: decrease reference count in dw_spi_dma_init_mfld()
    
    [ Upstream commit 804313b64e412a81b0b3389a10e7622452004aa6 ]
    
    pci_get_device() will increase the reference count for the returned
    pci_dev. Since 'dma_dev' is only used to filter the channel in
    dw_spi_dma_chan_filer() after using it we need to call pci_dev_put() to
    decrease the reference count. Also add pci_dev_put() for the error case.
    
    Fixes: 7063c0d942a1 ("spi/dw_spi: add DMA support")
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Acked-by: Serge Semin <fancer.lancer@gmail.com>
    Link: https://lore.kernel.org/r/20221116093204.46700-1-wangxiongfeng2@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b6441abfa5d3c193ba8b75c220aa61ba5a0040f
Author: Zeng Heng <zengheng4@huawei.com>
Date:   Wed Nov 16 15:43:39 2022 +0800

    regulator: core: fix kobject release warning and memory leak in regulator_register()
    
    [ Upstream commit 5f4b204b6b8153923d5be8002c5f7082985d153f ]
    
    Here is a warning report about lack of registered release()
    from kobject lib:
    
    Device '(null)' does not have a release() function, it is broken and must be fixed.
    WARNING: CPU: 0 PID: 48430 at drivers/base/core.c:2332 device_release+0x104/0x120
    Call Trace:
     kobject_put+0xdc/0x180
     put_device+0x1b/0x30
     regulator_register+0x651/0x1170
     devm_regulator_register+0x4f/0xb0
    
    When regulator_register() returns fail and directly goto `clean` symbol,
    rdev->dev has not registered release() function yet (which is registered
    by regulator_class in the following), so rdev needs to be freed manually.
    If rdev->dev.of_node is not NULL, which means the of_node has gotten by
    regulator_of_get_init_data(), it needs to call of_node_put() to avoid
    refcount leak.
    
    Otherwise, only calling put_device() would lead memory leak of rdev
    in further:
    
    unreferenced object 0xffff88810d0b1000 (size 2048):
      comm "107-i2c-rtq6752", pid 48430, jiffies 4342258431 (age 1341.780s)
      backtrace:
        kmalloc_trace+0x22/0x110
        regulator_register+0x184/0x1170
        devm_regulator_register+0x4f/0xb0
    
    When regulator_register() returns fail and goto `wash` symbol,
    rdev->dev has registered release() function, so directly call
    put_device() to cleanup everything.
    
    Fixes: d3c731564e09 ("regulator: plug of_node leak in regulator_register()'s error path")
    Signed-off-by: Zeng Heng <zengheng4@huawei.com>
    Link: https://lore.kernel.org/r/20221116074339.1024240-1-zengheng4@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26d3d3ffa82b15431e0423dd3464ca56ebf9a0f4
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Wed Nov 9 10:48:42 2022 -0800

    scsi: storvsc: Fix handling of srb_status and capacity change events
    
    [ Upstream commit b8a5376c321b4669f7ffabc708fd30c3970f3084 ]
    
    Current handling of the srb_status is incorrect. Commit 52e1b3b3daa9
    ("scsi: storvsc: Correctly handle multiple flags in srb_status")
    is based on srb_status being a set of flags, when in fact only the
    2 high order bits are flags and the remaining 6 bits are an integer
    status. Because the integer values of interest mostly look like flags,
    the code actually works when treated that way.
    
    But in the interest of correctness going forward, fix this by treating
    the low 6 bits of srb_status as an integer status code. Add handling
    for SRB_STATUS_INVALID_REQUEST, which was the original intent of commit
    52e1b3b3daa9. Furthermore, treat the ERROR, ABORTED, and INVALID_REQUEST
    srb status codes as essentially equivalent for the cases we care about.
    There's no harm in doing so, and it isn't always clear which status code
    current or older versions of Hyper-V report for particular conditions.
    
    Treating the srb status codes as equivalent has the additional benefit
    of ensuring that capacity change events result in an immediate rescan
    so that the new size is known to Linux. Existing code checks SCSI
    sense data for capacity change events when the srb status is ABORTED.
    But capacity change events are also being observed when Hyper-V reports
    the srb status as ERROR. Without the immediate rescan, the new size
    isn't known until something else causes a rescan (such as running
    fdisk to expand a partition), and in the meantime, tools such as "lsblk"
    continue to report the old size.
    
    Fixes: 52e1b3b3daa9 ("scsi: storvsc: Correctly handle multiple flags in srb_status")
    Reported-by: Juan Tian <juantian@microsoft.com>
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/1668019722-1983-1-git-send-email-mikelley@microsoft.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c34db0d6b88b1da95e7ab3353e674f4f574cccee
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Fri Nov 4 13:22:13 2022 +0000

    ASoC: soc-pcm: Don't zero TDM masks in __soc_pcm_open()
    
    [ Upstream commit 39bd801d6908900e9ab0cdc2655150f95ddd4f1a ]
    
    The DAI tx_mask and rx_mask are set by snd_soc_dai_set_tdm_slot()
    and used by later code that depends on the TDM settings. So
    __soc_pcm_open() should not be obliterating those mask values.
    
    The code in __soc_pcm_hw_params() uses these masks to calculate the
    active channels so that only the AIF_IN/AIF_OUT widgets for the
    active TDM slots are enabled. The zeroing of the masks in
    __soc_pcm_open() disables this functionality so all AIF widgets
    were enabled even for channels that are not assigned to a TDM slot.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Fixes: 2e5894d73789 ("ASoC: pcm: Add support for DAI multicodec")
    Link: https://lore.kernel.org/r/20221104132213.121847-1-rf@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f6c7344ab261999847baa78688f55a45875e7b9
Author: Detlev Casanova <detlev.casanova@collabora.com>
Date:   Thu Nov 10 14:06:12 2022 -0500

    ASoC: sgtl5000: Reset the CHIP_CLK_CTRL reg on remove
    
    [ Upstream commit 0bb8e9b36b5b7f2e77892981ff6c27ee831d8026 ]
    
    Since commit bf2aebccddef ("ASoC: sgtl5000: Fix noise on shutdown/remove"),
    the device power control registers are reset when the driver is
    removed/shutdown.
    
    This is an issue when the device is configured to use the PLL clock. The
    device will stop responding if it is still configured to use the PLL
    clock but the PLL clock is powered down.
    
    When rebooting linux, the probe function will show:
    sgtl5000 0-000a: Error reading chip id -11
    
    Make sure that the CHIP_CLK_CTRL is reset to its default value before
    powering down the device.
    
    Fixes: bf2aebccddef ("ASoC: sgtl5000: Fix noise on shutdown/remove")
    Signed-off-by: Detlev Casanova <detlev.casanova@collabora.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/20221110190612.1341469-1-detlev.casanova@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 164a5b50d10488d4b442453aaf71a78fa36e6fb4
Author: Junxiao Chang <junxiao.chang@intel.com>
Date:   Thu Nov 10 07:40:23 2022 +0800

    ASoC: hdac_hda: fix hda pcm buffer overflow issue
    
    [ Upstream commit 37882100cd0629d830db430a8cee0b724fe1fea3 ]
    
    When KASAN is enabled, below log might be dumped with Intel EHL hardware:
    [   48.583597] ==================================================================
    [   48.585921] BUG: KASAN: slab-out-of-bounds in hdac_hda_dai_hw_params+0x20a/0x22b [snd_soc_hdac_hda]
    [   48.587995] Write of size 4 at addr ffff888103489708 by task pulseaudio/759
    
    [   48.589237] CPU: 2 PID: 759 Comm: pulseaudio Tainted: G     U      E     5.15.71-intel-ese-standard-lts #9
    [   48.591272] Hardware name: Intel Corporation Elkhart Lake Embedded Platform/ElkhartLake LPDDR4x T3 CRB, BIOS EHLSFWI1.R00.4251.A01.2206130432 06/13/2022
    [   48.593010] Call Trace:
    [   48.593648]  <TASK>
    [   48.593852]  dump_stack_lvl+0x34/0x48
    [   48.594404]  print_address_description.constprop.0+0x1f/0x140
    [   48.595174]  ? hdac_hda_dai_hw_params+0x20a/0x22b [snd_soc_hdac_hda]
    [   48.595868]  ? hdac_hda_dai_hw_params+0x20a/0x22b [snd_soc_hdac_hda]
    [   48.596519]  kasan_report.cold+0x7f/0x11b
    [   48.597003]  ? hdac_hda_dai_hw_params+0x20a/0x22b [snd_soc_hdac_hda]
    [   48.597885]  hdac_hda_dai_hw_params+0x20a/0x22b [snd_soc_hdac_hda]
    
    HDAC_LAST_DAI_ID is last index id, pcm buffer array size should
    be +1 to avoid out of bound access.
    
    Fixes: 608b8c36c371 ("ASoC: hdac_hda: add support for HDMI/DP as a HDA codec")
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Junxiao Chang <junxiao.chang@intel.com>
    Signed-off-by: Furong Zhou <furong.zhou@intel.com>
    Link: https://lore.kernel.org/r/20221109234023.3111035-1-junxiao.chang@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cfb4b8579d3cbaa69a67dc1fc501b58d0c5f49b
Author: Dominik Haller <d.haller@phytec.de>
Date:   Tue Oct 11 16:31:15 2022 +0200

    ARM: dts: am335x-pcm-953: Define fixed regulators in root node
    
    [ Upstream commit 8950f345a67d8046d2472dd6ea81fa18ef5b4844 ]
    
    Remove the regulators node and define fixed regulators in the root node.
    Prevents the sdhci-omap driver from waiting in probe deferral forever
    because of the missing vmmc-supply and keeps am335x-pcm-953 consistent with
    the other Phytec AM335 boards.
    
    Fixes: bb07a829ec38 ("ARM: dts: Add support for phyCORE-AM335x PCM-953 carrier board")
    Signed-off-by: Dominik Haller <d.haller@phytec.de>
    Message-Id: <20221011143115.248003-1-d.haller@phytec.de>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7000254c12537ea63d9304ac8b2f5379fdc258e
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Tue Oct 25 14:06:48 2022 +0800

    af_key: Fix send_acquire race with pfkey_register
    
    [ Upstream commit 7f57f8165cb6d2c206e2b9ada53b9e2d6d8af42f ]
    
    The function pfkey_send_acquire may race with pfkey_register
    (which could even be in a different name space).  This may result
    in a buffer overrun.
    
    Allocating the maximum amount of memory that could be used prevents
    this.
    
    Reported-by: syzbot+1e9af9185d8850e2c2fa@syzkaller.appspotmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51969d679ba4567e10f6c15061d1dad1063406e7
Author: Christian Langrock <christian.langrock@secunet.com>
Date:   Mon Oct 17 08:34:47 2022 +0200

    xfrm: replay: Fix ESN wrap around for GSO
    
    [ Upstream commit 4b549ccce941798703f159b227aa28c716aa78fa ]
    
    When using GSO it can happen that the wrong seq_hi is used for the last
    packets before the wrap around. This can lead to double usage of a
    sequence number. To avoid this, we should serialize this last GSO
    packet.
    
    Fixes: d7dbefc45cf5 ("xfrm: Add xfrm_replay_overflow functions for offloading")
    Co-developed-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Christian Langrock <christian.langrock@secunet.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 497653f6d2392c8d4abb041f01e1a19781d995d0
Author: Eyal Birger <eyal.birger@gmail.com>
Date:   Sun Oct 9 22:16:43 2022 +0300

    xfrm: fix "disable_policy" on ipv4 early demux
    
    [ Upstream commit 3a5913183aa1b14148c723bda030e6102ad73008 ]
    
    The commit in the "Fixes" tag tried to avoid a case where policy check
    is ignored due to dst caching in next hops.
    
    However, when the traffic is locally consumed, the dst may be cached
    in a local TCP or UDP socket as part of early demux. In this case the
    "disable_policy" flag is not checked as ip_route_input_noref() was only
    called before caching, and thus, packets after the initial packet in a
    flow will be dropped if not matching policies.
    
    Fix by checking the "disable_policy" flag also when a valid dst is
    already available.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216557
    Reported-by: Monil Patel <monil191989@gmail.com>
    Fixes: e6175a2ed1f1 ("xfrm: fix "disable_policy" flag use when arriving from different devices")
    Signed-off-by: Eyal Birger <eyal.birger@gmail.com>
    
    ----
    
    v2: use dev instead of skb->dev
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 836bbdfcf8ef4b9b8a10c1f6fee3cff2b72bedc7
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Fri Oct 28 15:23:44 2022 +0200

    MIPS: pic32: treat port as signed integer
    
    [ Upstream commit 648060902aa302331b5d6e4f26d8ee0761d239ab ]
    
    get_port_from_cmdline() returns an int, yet is assigned to a char, which
    is wrong in its own right, but also, with char becoming unsigned, this
    poses problems, because -1 is used as an error value. Further
    complicating things, fw_init_early_console() is only ever called with a
    -1 argument. Fix this up by removing the unused argument from
    fw_init_early_console() and treating port as a proper signed integer.
    
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0bb600f076832764b43ae4ef6ee003d9a71f7f9
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Nov 8 10:13:23 2022 -0700

    RISC-V: vdso: Do not add missing symbols to version section in linker script
    
    [ Upstream commit fcae44fd36d052e956e69a64642fc03820968d78 ]
    
    Recently, ld.lld moved from '--undefined-version' to
    '--no-undefined-version' as the default, which breaks the compat vDSO
    build:
    
      ld.lld: error: version script assignment of 'LINUX_4.15' to symbol '__vdso_gettimeofday' failed: symbol not defined
      ld.lld: error: version script assignment of 'LINUX_4.15' to symbol '__vdso_clock_gettime' failed: symbol not defined
      ld.lld: error: version script assignment of 'LINUX_4.15' to symbol '__vdso_clock_getres' failed: symbol not defined
    
    These symbols are not present in the compat vDSO or the regular vDSO for
    32-bit but they are unconditionally included in the version section of
    the linker script, which is prohibited with '--no-undefined-version'.
    
    Fix this issue by only including the symbols that are actually exported
    in the version section of the linker script.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1756
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Tested-by: Conor Dooley <conor.dooley@microchip.com>
    Link: https://lore.kernel.org/r/20221108171324.3377226-1-nathan@kernel.org/
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81cc6d8400acae90bba53ed8fb556766ff60253f
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Mon Oct 31 14:57:28 2022 -0700

    arm64/syscall: Include asm/ptrace.h in syscall_wrapper header.
    
    [ Upstream commit acfc35cfcee5df419391671ef1a631f43feee4e3 ]
    
    Add the same change for ARM64 as done in the commit 9440c4294160
    ("x86/syscall: Include asm/ptrace.h in syscall_wrapper header") to
    make sure all syscalls see 'struct pt_regs' definition and resulted
    BTF for '__arm64_sys_*(struct pt_regs *regs)' functions point to
    actual struct.
    
    Without this patch, the BPF verifier refuses to load a tracing prog
    which accesses pt_regs.
    
      bpf(BPF_PROG_LOAD, {prog_type=0x1a, ...}, 128) = -1 EACCES
    
    With this patch, we can see the correct error, which saves us time
    in debugging the prog.
    
      bpf(BPF_PROG_LOAD, {prog_type=0x1a, ...}, 128) = 4
      bpf(BPF_RAW_TRACEPOINT_OPEN, {raw_tracepoint={name=NULL, prog_fd=4}}, 128) = -1 ENOTSUPP
    
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/r/20221031215728.50389-1-kuniyu@amazon.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa5f2c72d39f530740b634b4574df78fba919930
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Nov 8 18:34:34 2022 +0800

    block, bfq: fix null pointer dereference in bfq_bio_bfqg()
    
    [ Upstream commit f02be9002c480cd3ec0fcf184ad27cf531bd6ece ]
    
    Out test found a following problem in kernel 5.10, and the same problem
    should exist in mainline:
    
    BUG: kernel NULL pointer dereference, address: 0000000000000094
    PGD 0 P4D 0
    Oops: 0000 [#1] SMP
    CPU: 7 PID: 155 Comm: kworker/7:1 Not tainted 5.10.0-01932-g19e0ace2ca1d-dirty 4
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-b4
    Workqueue: kthrotld blk_throtl_dispatch_work_fn
    RIP: 0010:bfq_bio_bfqg+0x52/0xc0
    Code: 94 00 00 00 00 75 2e 48 8b 40 30 48 83 05 35 06 c8 0b 01 48 85 c0 74 3d 4b
    RSP: 0018:ffffc90001a1fba0 EFLAGS: 00010002
    RAX: ffff888100d60400 RBX: ffff8881132e7000 RCX: 0000000000000000
    RDX: 0000000000000017 RSI: ffff888103580a18 RDI: ffff888103580a18
    RBP: ffff8881132e7000 R08: 0000000000000000 R09: ffffc90001a1fe10
    R10: 0000000000000a20 R11: 0000000000034320 R12: 0000000000000000
    R13: ffff888103580a18 R14: ffff888114447000 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff88881fdc0000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000094 CR3: 0000000100cdb000 CR4: 00000000000006e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     bfq_bic_update_cgroup+0x3c/0x350
     ? ioc_create_icq+0x42/0x270
     bfq_init_rq+0xfd/0x1060
     bfq_insert_requests+0x20f/0x1cc0
     ? ioc_create_icq+0x122/0x270
     blk_mq_sched_insert_requests+0x86/0x1d0
     blk_mq_flush_plug_list+0x193/0x2a0
     blk_flush_plug_list+0x127/0x170
     blk_finish_plug+0x31/0x50
     blk_throtl_dispatch_work_fn+0x151/0x190
     process_one_work+0x27c/0x5f0
     worker_thread+0x28b/0x6b0
     ? rescuer_thread+0x590/0x590
     kthread+0x153/0x1b0
     ? kthread_flush_work+0x170/0x170
     ret_from_fork+0x1f/0x30
    Modules linked in:
    CR2: 0000000000000094
    ---[ end trace e2e59ac014314547 ]---
    RIP: 0010:bfq_bio_bfqg+0x52/0xc0
    Code: 94 00 00 00 00 75 2e 48 8b 40 30 48 83 05 35 06 c8 0b 01 48 85 c0 74 3d 4b
    RSP: 0018:ffffc90001a1fba0 EFLAGS: 00010002
    RAX: ffff888100d60400 RBX: ffff8881132e7000 RCX: 0000000000000000
    RDX: 0000000000000017 RSI: ffff888103580a18 RDI: ffff888103580a18
    RBP: ffff8881132e7000 R08: 0000000000000000 R09: ffffc90001a1fe10
    R10: 0000000000000a20 R11: 0000000000034320 R12: 0000000000000000
    R13: ffff888103580a18 R14: ffff888114447000 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff88881fdc0000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000094 CR3: 0000000100cdb000 CR4: 00000000000006e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    
    Root cause is quite complex:
    
    1) use bfq elevator for the test device.
    2) create a cgroup CG
    3) config blk throtl in CG
    
       blkg_conf_prep
        blkg_create
    
    4) create a thread T1 and issue async io in CG:
    
       bio_init
        bio_associate_blkg
       ...
       submit_bio
        submit_bio_noacct
         blk_throtl_bio -> io is throttled
         // io submit is done
    
    5) switch elevator:
    
       bfq_exit_queue
        blkcg_deactivate_policy
         list_for_each_entry(blkg, &q->blkg_list, q_node)
          blkg->pd[] = NULL
          // bfq policy is removed
    
    5) thread t1 exist, then remove the cgroup CG:
    
       blkcg_unpin_online
        blkcg_destroy_blkgs
         blkg_destroy
          list_del_init(&blkg->q_node)
          // blkg is removed from queue list
    
    6) switch elevator back to bfq
    
     bfq_init_queue
      bfq_create_group_hierarchy
       blkcg_activate_policy
        list_for_each_entry_reverse(blkg, &q->blkg_list)
         // blkg is removed from list, hence bfq policy is still NULL
    
    7) throttled io is dispatched to bfq:
    
     bfq_insert_requests
      bfq_init_rq
       bfq_bic_update_cgroup
        bfq_bio_bfqg
         bfqg = blkg_to_bfqg(blkg)
         // bfqg is NULL because bfq policy is NULL
    
    The problem is only possible in bfq because only bfq can be deactivated and
    activated while queue is online, while others can only be deactivated while
    the device is removed.
    
    Fix the problem in bfq by checking if blkg is online before calling
    blkg_to_bfqg().
    
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20221108103434.2853269-1-yukuai1@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d29bde868945ba04f0d01ea7cb542fdbdde59fd4
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Nov 6 22:50:52 2022 +0100

    drm: panel-orientation-quirks: Add quirk for Acer Switch V 10 (SW5-017)
    
    [ Upstream commit 653f2d94fcda200b02bd79cea2e0307b26c1b747 ]
    
    Like the Acer Switch One 10 S1003, for which there already is a quirk,
    the Acer Switch V 10 (SW5-017) has a 800x1280 portrait screen mounted
    in the tablet part of a landscape oriented 2-in-1. Add a quirk for this.
    
    Cc: Rudolf Polzer <rpolzer@google.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Simon Ser <contact@emersion.fr>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221106215052.66995-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7ce6fb04e0479528ca0116924f9aaa8ce4f7840
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Nov 2 12:32:48 2022 -0700

    scsi: scsi_debug: Make the READ CAPACITY response compliant with ZBC
    
    [ Upstream commit ecb8c2580d37dbb641451049376d80c8afaa387f ]
    
    From ZBC-1:
    
     - RC BASIS = 0: The RETURNED LOGICAL BLOCK ADDRESS field indicates the
       highest LBA of a contiguous range of zones that are not sequential write
       required zones starting with the first zone.
    
     - RC BASIS = 1: The RETURNED LOGICAL BLOCK ADDRESS field indicates the LBA
       of the last logical block on the logical unit.
    
    The current scsi_debug READ CAPACITY response does not comply with the
    above if there are one or more sequential write required zones. SCSI
    initiators need a way to retrieve the largest valid LBA from SCSI
    devices. Reporting the largest valid LBA if there are one or more
    sequential zones requires to set the RC BASIS field in the READ CAPACITY
    response to one. Hence this patch.
    
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Cc: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Suggested-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20221102193248.3177608-1-bvanassche@acm.org
    Reviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2574903ee260df5281ffc8edea10f8278548abf7
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Wed Oct 26 13:13:56 2022 -0500

    scsi: ibmvfc: Avoid path failures during live migration
    
    [ Upstream commit 62fa3ce05d5d73c5eccc40b2db493f55fecfc446 ]
    
    Fix an issue reported when performing a live migration when multipath is
    configured with a short fast fail timeout of 5 seconds and also to have
    no_path_retry set to fail. In this scenario, all paths would go into the
    devloss state while the ibmvfc driver went through discovery to log back
    in. On a loaded system, the discovery might take longer than 5 seconds,
    which was resulting in all paths being marked failed, which then resulted
    in a read only filesystem.
    
    This patch changes the migration code in ibmvfc to avoid deleting rports at
    all in this scenario, so we avoid losing all paths.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Link: https://lore.kernel.org/r/20221026181356.148517-1-brking@linux.vnet.ibm.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fc62181c1d433b46409e97b2a3c0c954c5bfbad
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Oct 25 16:11:31 2022 +0200

    platform/x86: touchscreen_dmi: Add info for the RCA Cambio W101 v2 2-in-1
    
    [ Upstream commit 0df044b34bf33e7e35c32b3bf6747fde6279c162 ]
    
    Add touchscreen info for the RCA Cambio W101 v2 2-in-1.
    
    Link: https://github.com/onitake/gsl-firmware/discussions/193
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20221025141131.509211-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f54a11b6bf82648577af1b66e5896e80a42caafe
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Nov 2 22:33:12 2022 +0100

    Revert "net: macsec: report real_dev features when HW offloading is enabled"
    
    [ Upstream commit 8bcd560ae8784da57c610d857118c5d6576b1a8f ]
    
    This reverts commit c850240b6c4132574a00f2da439277ab94265b66.
    
    That commit tried to improve the performance of macsec offload by
    taking advantage of some of the NIC's features, but in doing so, broke
    macsec offload when the lower device supports both macsec and ipsec
    offload, as the ipsec offload feature flags (mainly NETIF_F_HW_ESP)
    were copied from the real device. Since the macsec device doesn't
    provide xdo_* ops, the XFRM core rejects the registration of the new
    macsec device in xfrm_api_check.
    
    Example perf trace when running
      ip link add link eni1np1 type macsec port 4 offload mac
    
        ip   737 [003]   795.477676: probe:xfrm_dev_event__REGISTER      name="macsec0" features=0x1c000080014869
                  xfrm_dev_event+0x3a
                  notifier_call_chain+0x47
                  register_netdevice+0x846
                  macsec_newlink+0x25a
    
        ip   737 [003]   795.477687:   probe:xfrm_dev_event__return      ret=0x8002 (NOTIFY_BAD)
                 notifier_call_chain+0x47
                 register_netdevice+0x846
                 macsec_newlink+0x25a
    
    dev->features includes NETIF_F_HW_ESP (0x04000000000000), so
    xfrm_api_check returns NOTIFY_BAD because we don't have
    dev->xfrmdev_ops on the macsec device.
    
    We could probably propagate GSO and a few other features from the
    lower device, similar to macvlan. This will be done in a future patch.
    
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Antoine Tenart <atenart@kernel.org>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4b8c0710ab672a163bbc205978dddf2c556e548
Author: Youlin Li <liulin063@gmail.com>
Date:   Thu Nov 3 17:34:40 2022 +0800

    selftests/bpf: Add verifier test for release_reference()
    
    [ Upstream commit 475244f5e06beeda7b557d9dde46a5f439bf3379 ]
    
    Add a test case to ensure that released pointer registers will not be
    leaked into the map.
    
    Before fix:
    
      ./test_verifier 984
        984/u reference tracking: try to leak released ptr reg FAIL
        Unexpected success to load!
        verification time 67 usec
        stack depth 4
        processed 23 insns (limit 1000000) max_states_per_insn 0 total_states 2
        peak_states 2 mark_read 1
        984/p reference tracking: try to leak released ptr reg OK
        Summary: 1 PASSED, 0 SKIPPED, 1 FAILED
    
    After fix:
    
      ./test_verifier 984
        984/u reference tracking: try to leak released ptr reg OK
        984/p reference tracking: try to leak released ptr reg OK
        Summary: 2 PASSED, 0 SKIPPED, 0 FAILED
    
    Signed-off-by: Youlin Li <liulin063@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20221103093440.3161-2-liulin063@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 361a1650989855ccda14f63c1b2e0b0f1f5a7ded
Author: Sean Nyekjaer <sean@geanix.com>
Date:   Thu Nov 3 09:00:42 2022 +0100

    spi: stm32: fix stm32_spi_prepare_mbr() that halves spi clk for every run
    
    [ Upstream commit 62aa1a344b0904549f6de7af958e8a1136fd5228 ]
    
    When this driver is used with a driver that uses preallocated spi_transfer
    structs. The speed_hz is halved by every run. This results in:
    
    spi_stm32 44004000.spi: SPI transfer setup failed
    ads7846 spi0.0: SPI transfer failed: -22
    
    Example when running with DIV_ROUND_UP():
    - First run; speed_hz = 1000000, spi->clk_rate 125000000
      div 125 -> mbrdiv = 7, cur_speed = 976562
    - Second run; speed_hz = 976562
      div 128,00007 (roundup to 129) -> mbrdiv = 8, cur_speed = 488281
    - Third run; speed_hz = 488281
      div 256,000131072067109 (roundup to 257) and then -EINVAL is returned.
    
    Use DIV_ROUND_CLOSEST to allow to round down and allow us to keep the
    set speed.
    
    Signed-off-by: Sean Nyekjaer <sean@geanix.com>
    Link: https://lore.kernel.org/r/20221103080043.3033414-1-sean@geanix.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c1ca23555ed63ddca59a06214a96ab2bd417c48
Author: Nicolas Cavallari <nicolas.cavallari@green-communications.fr>
Date:   Thu Oct 27 16:01:33 2022 +0200

    wifi: mac80211: Fix ack frame idr leak when mesh has no route
    
    [ Upstream commit 39e7b5de9853bd92ddbfa4b14165babacd7da0ba ]
    
    When trying to transmit an data frame with tx_status to a destination
    that have no route in the mesh, then it is dropped without recrediting
    the ack_status_frames idr.
    
    Once it is exhausted, wpa_supplicant starts failing to do SAE with
    NL80211_CMD_FRAME and logs "nl80211: Frame command failed".
    
    Use ieee80211_free_txskb() instead of kfree_skb() to fix it.
    
    Signed-off-by: Nicolas Cavallari <nicolas.cavallari@green-communications.fr>
    Link: https://lore.kernel.org/r/20221027140133.1504-1-nicolas.cavallari@green-communications.fr
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d39913158ad9e59642672ac03822848582c5767
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Mon Oct 24 18:28:43 2022 +0200

    wifi: airo: do not assign -1 to unsigned char
    
    [ Upstream commit e6cb8769452e8236b52134e5cb4a18b8f5986932 ]
    
    With char becoming unsigned by default, and with `char` alone being
    ambiguous and based on architecture, we get a warning when assigning the
    unchecked output of hex_to_bin() to that unsigned char. Mark `key` as a
    `u8`, which matches the struct's type, and then check each call to
    hex_to_bin() before casting.
    
    Cc: Kalle Valo <kvalo@kernel.org>
    Cc: linux-wireless@vger.kernel.org
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221024162843.535921-1-Jason@zx2c4.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8552e6048ec9e7c904454eb35ccbd1f8572b8e7e
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Mon Oct 31 10:10:21 2022 +0800

    audit: fix undefined behavior in bit shift for AUDIT_BIT
    
    [ Upstream commit 986d93f55bdeab1cac858d1e47b41fac10b2d7f6 ]
    
    Shifting signed 32-bit value by 31 bits is undefined, so changing
    significant bit to unsigned. The UBSAN warning calltrace like below:
    
    UBSAN: shift-out-of-bounds in kernel/auditfilter.c:179:23
    left shift of 1 by 31 places cannot be represented in type 'int'
    Call Trace:
     <TASK>
     dump_stack_lvl+0x7d/0xa5
     dump_stack+0x15/0x1b
     ubsan_epilogue+0xe/0x4e
     __ubsan_handle_shift_out_of_bounds+0x1e7/0x20c
     audit_register_class+0x9d/0x137
     audit_classes_init+0x4d/0xb8
     do_one_initcall+0x76/0x430
     kernel_init_freeable+0x3b3/0x422
     kernel_init+0x24/0x1e0
     ret_from_fork+0x1f/0x30
     </TASK>
    
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    [PM: remove bad 'Fixes' tag as issue predates git, added in v2.6.6-rc1]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c9eb641d13e8dd8c301ead9c395dcc1104c419d
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Oct 12 13:09:28 2022 +0200

    riscv: dts: sifive unleashed: Add PWM controlled LEDs
    
    [ Upstream commit 8bc8824d30193eb7755043d5bb65fa7f0d11a595 ]
    
    This adds the 4 PWM controlled green LEDs to the HiFive Unleashed device
    tree. The schematic doesn't specify any special function for the LEDs,
    so they're added here without any default triggers and named d1, d2, d3
    and d4 just like in the schematic.
    
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Reviewed-by: Conor Dooley <conor.dooley@microchip.com>
    Tested-by: Conor Dooley <conor.dooley@microchip.com>
    Link: https://lore.kernel.org/r/20221012110928.352910-1-emil.renner.berthing@canonical.com
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92ae6facd12981253c16eb9f2773472c0052f0a2
Author: Jonas Jelonek <jelonek.jonas@gmail.com>
Date:   Fri Oct 14 16:54:39 2022 +0200

    wifi: mac80211_hwsim: fix debugfs attribute ps with rc table support
    
    [ Upstream commit 69188df5f6e4cecc6b76b958979ba363cd5240e8 ]
    
    Fixes a warning that occurs when rc table support is enabled
    (IEEE80211_HW_SUPPORTS_RC_TABLE) in mac80211_hwsim and the PS mode
    is changed via the exported debugfs attribute.
    
    When the PS mode is changed, a packet is broadcasted via
    hwsim_send_nullfunc by creating and transmitting a plain skb with only
    header initialized. The ieee80211 rate array in the control buffer is
    zero-initialized. When ratetbl support is enabled, ieee80211_get_tx_rates
    is called for the skb with sta parameter set to NULL and thus no
    ratetbl can be used. The final rate array then looks like
    [-1,0; 0,0; 0,0; 0,0] which causes the warning in ieee80211_get_tx_rate.
    
    The issue is fixed by setting the count of the first rate with idx '0'
    to 1 and hence ieee80211_get_tx_rates won't overwrite it with idx '-1'.
    
    Signed-off-by: Jonas Jelonek <jelonek.jonas@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fcc593b5047183a2b0ed4e4c41ec1e911874911
Author: taozhang <taozhang@bestechnic.com>
Date:   Sat Oct 15 17:38:31 2022 +0800

    wifi: mac80211: fix memory free error when registering wiphy fail
    
    [ Upstream commit 50b2e8711462409cd368c41067405aa446dfa2af ]
    
    ieee80211_register_hw free the allocated cipher suites when
    registering wiphy fail, and ieee80211_free_hw will re-free it.
    
    set wiphy_ciphers_allocated to false after freeing allocated
    cipher suites.
    
    Signed-off-by: taozhang <taozhang@bestechnic.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 044bc6d3c2c0e9090b0841e7b723875756534b45
Author: Xiubo Li <xiubli@redhat.com>
Date:   Wed Nov 9 11:00:39 2022 +0800

    ceph: avoid putting the realm twice when decoding snaps fails
    
    [ Upstream commit 51884d153f7ec85e18d607b2467820a90e0f4359 ]
    
    When decoding the snaps fails it maybe leaving the 'first_realm'
    and 'realm' pointing to the same snaprealm memory. And then it'll
    put it twice and could cause random use-after-free, BUG_ON, etc
    issues.
    
    Cc: stable@vger.kernel.org
    Link: https://tracker.ceph.com/issues/57686
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d43219bb33d597075eb36984e6fe263b41a40f11
Author: Xiubo Li <xiubli@redhat.com>
Date:   Sat Feb 19 14:28:33 2022 +0800

    ceph: do not update snapshot context when there is no new snapshot
    
    [ Upstream commit 2e586641c950e7f3e7e008404bd783a466b9b590 ]
    
    We will only track the uppest parent snapshot realm from which we
    need to rebuild the snapshot contexts _downward_ in hierarchy. For
    all the others having no new snapshot we will do nothing.
    
    This fix will avoid calling ceph_queue_cap_snap() on some inodes
    inappropriately. For example, with the code in mainline, suppose there
    are 2 directory hierarchies (with 6 directories total), like this:
    
    /dir_X1/dir_X2/dir_X3/
    /dir_Y1/dir_Y2/dir_Y3/
    
    Firstly, make a snapshot under /dir_X1/dir_X2/.snap/snap_X2, then make a
    root snapshot under /.snap/root_snap. Every time we make snapshots under
    /dir_Y1/..., the kclient will always try to rebuild the snap context for
    snap_X2 realm and finally will always try to queue cap snaps for dir_Y2
    and dir_Y3, which makes no sense.
    
    That's because the snap_X2's seq is 2 and root_snap's seq is 3. So when
    creating a new snapshot under /dir_Y1/... the new seq will be 4, and
    the mds will send the kclient a snapshot backtrace in _downward_
    order: seqs 4, 3.
    
    When ceph_update_snap_trace() is called, it will always rebuild the from
    the last realm, that's the root_snap. So later when rebuilding the snap
    context, the current logic will always cause it to rebuild the snap_X2
    realm and then try to queue cap snaps for all the inodes related in that
    realm, even though it's not necessary.
    
    This is accompanied by a lot of these sorts of dout messages:
    
        "ceph:  queue_cap_snap 00000000a42b796b nothing dirty|writing"
    
    Fix the logic to avoid this situation.
    
    Also, the 'invalidate' word is not precise here. In actuality, it will
    cause a rebuild of the existing snapshot contexts or just build
    non-existent ones. Rename it to 'rebuild_snapcs'.
    
    URL: https://tracker.ceph.com/issues/44100
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Stable-dep-of: 51884d153f7e ("ceph: avoid putting the realm twice when decoding snaps fails")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49c71b68141edd9e938b20955052ec2a308ed8cd
Author: Mitja Spes <mitja@lxnav.com>
Date:   Fri Oct 21 15:58:20 2022 +0200

    iio: pressure: ms5611: fixed value compensation bug
    
    [ Upstream commit 17f442e7e47579d3881fc4d47354eaef09302e6f ]
    
    When using multiple instances of this driver the compensation PROM was
    overwritten by the last initialized sensor. Now each sensor has own PROM
    storage.
    
    Signed-off-by: Mitja Spes <mitja@lxnav.com>
    Fixes: 9690d81a02dc ("iio: pressure: ms5611: add support for MS5607 temperature and pressure sensor")
    Link: https://lore.kernel.org/r/20221021135827.1444793-2-mitja@lxnav.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 879139bc7afbb4f53aa6e268b3e7a30601d6ba9e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Oct 20 16:21:10 2021 +0200

    iio: ms5611: Simplify IO callback parameters
    
    [ Upstream commit dc19fa63ad80a636fdbc1a02153d1ab140cb901f ]
    
    The ms5611 passes &indio_dev->dev as a parameter to all its IO callbacks
    only to directly cast the struct device back to struct iio_dev. And the
    struct iio_dev is then only used to get the drivers state struct.
    
    Simplify this a bit by passing the state struct directly. This makes it a
    bit easier to follow what the code is doing.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Link: https://lore.kernel.org/r/20211020142110.7060-1-lars@metafoo.de
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Stable-dep-of: 17f442e7e475 ("iio: pressure: ms5611: fixed value compensation bug")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80c825e1e33b3903ab8b70a6bbbd9ba4402721cd
Author: Bean Huo <beanhuo@micron.com>
Date:   Mon Nov 14 14:48:52 2022 +0100

    nvme-pci: add NVME_QUIRK_BOGUS_NID for Micron Nitro
    
    [ Upstream commit d5ceb4d1c50786d21de3d4b06c3f43109ec56dd8 ]
    
    Added a quirk to fix Micron Nitro NVMe reporting duplicate NGUIDs.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4066fb910216e2dde9ccb23faaf79b49ffcc01b
Author: Leo Savernik <l.savernik@aon.at>
Date:   Wed Jun 22 12:19:21 2022 +0200

    nvme: add a bogus subsystem NQN quirk for Micron MTFDKBA2T0TFH
    
    [ Upstream commit 41f38043f884c66af4114a7109cf540d6222f450 ]
    
    The Micron MTFDKBA2T0TFH device reports the same subsysem NQN for
    all devices.  Add a quick to ignore it.
    
    Signed-off-by: Leo Savernik <l.savernik@aon.at>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Stable-dep-of: d5ceb4d1c507 ("nvme-pci: add NVME_QUIRK_BOGUS_NID for Micron Nitro")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f0cea018e0326e53ddfc079fe6379b22099875c
Author: Simon Rettberg <simon.rettberg@rz.uni-freiburg.de>
Date:   Thu Oct 6 11:33:14 2022 +0200

    drm/display: Don't assume dual mode adaptors support i2c sub-addressing
    
    [ Upstream commit 5954acbacbd1946b96ce8ee799d309cb0cd3cb9d ]
    
    Current dual mode adaptor ("DP++") detection code assumes that all
    adaptors support i2c sub-addressing for read operations from the
    DP-HDMI adaptor ID buffer.  It has been observed that multiple
    adaptors do not in fact support this, and always return data starting
    at register 0.  On affected adaptors, the code fails to read the proper
    registers that would identify the device as a type 2 adaptor, and
    handles those as type 1, limiting the TMDS clock to 165MHz, even if
    the according register would announce a higher TMDS clock.
    Fix this by always reading the ID buffer starting from offset 0, and
    discarding any bytes before the actual offset of interest.
    
    We tried finding authoritative documentation on whether or not this is
    allowed behaviour, but since all the official VESA docs are paywalled,
    the best we could come up with was the spec sheet for Texas Instruments'
    SNx5DP149 chip family.[1]  It explicitly mentions that sub-addressing is
    supported for register writes, but *not* for reads (See NOTE in
    section 8.5.3).  Unless TI openly decided to violate the VESA spec, one
    could take that as a hint that sub-addressing is in fact not mandated
    by VESA.
    The other two adaptors affected used the PS8409(A) and the LT8611,
    according to the data returned from their ID buffers.
    
    [1] https://www.ti.com/lit/ds/symlink/sn75dp149.pdf
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Simon Rettberg <simon.rettberg@rz.uni-freiburg.de>
    Reviewed-by: Rafael Gieschke <rafael.gieschke@rz.uni-freiburg.de>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221006113314.41101987@computer
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 347f1793b573466424c550f2748ed837b6690fe7
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Mon Nov 14 10:45:09 2022 +0200

    bridge: switchdev: Fix memory leaks when changing VLAN protocol
    
    [ Upstream commit 9d45921ee4cb364910097e7d1b7558559c2f9fd2 ]
    
    The bridge driver can offload VLANs to the underlying hardware either
    via switchdev or the 8021q driver. When the former is used, the VLAN is
    marked in the bridge driver with the 'BR_VLFLAG_ADDED_BY_SWITCHDEV'
    private flag.
    
    To avoid the memory leaks mentioned in the cited commit, the bridge
    driver will try to delete a VLAN via the 8021q driver if the VLAN is not
    marked with the previously mentioned flag.
    
    When the VLAN protocol of the bridge changes, switchdev drivers are
    notified via the 'SWITCHDEV_ATTR_ID_BRIDGE_VLAN_PROTOCOL' attribute, but
    the 8021q driver is also called to add the existing VLANs with the new
    protocol and delete them with the old protocol.
    
    In case the VLANs were offloaded via switchdev, the above behavior is
    both redundant and buggy. Redundant because the VLANs are already
    programmed in hardware and drivers that support VLAN protocol change
    (currently only mlx5) change the protocol upon the switchdev attribute
    notification. Buggy because the 8021q driver is called despite these
    VLANs being marked with 'BR_VLFLAG_ADDED_BY_SWITCHDEV'. This leads to
    memory leaks [1] when the VLANs are deleted.
    
    Fix by not calling the 8021q driver for VLANs that were already
    programmed via switchdev.
    
    [1]
    unreferenced object 0xffff8881f6771200 (size 256):
      comm "ip", pid 446855, jiffies 4298238841 (age 55.240s)
      hex dump (first 32 bytes):
        00 00 7f 0e 83 88 ff ff 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000012819ac>] vlan_vid_add+0x437/0x750
        [<00000000f2281fad>] __br_vlan_set_proto+0x289/0x920
        [<000000000632b56f>] br_changelink+0x3d6/0x13f0
        [<0000000089d25f04>] __rtnl_newlink+0x8ae/0x14c0
        [<00000000f6276baf>] rtnl_newlink+0x5f/0x90
        [<00000000746dc902>] rtnetlink_rcv_msg+0x336/0xa00
        [<000000001c2241c0>] netlink_rcv_skb+0x11d/0x340
        [<0000000010588814>] netlink_unicast+0x438/0x710
        [<00000000e1a4cd5c>] netlink_sendmsg+0x788/0xc40
        [<00000000e8992d4e>] sock_sendmsg+0xb0/0xe0
        [<00000000621b8f91>] ____sys_sendmsg+0x4ff/0x6d0
        [<000000000ea26996>] ___sys_sendmsg+0x12e/0x1b0
        [<00000000684f7e25>] __sys_sendmsg+0xab/0x130
        [<000000004538b104>] do_syscall_64+0x3d/0x90
        [<0000000091ed9678>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Fixes: 279737939a81 ("net: bridge: Fix VLANs memory leak")
    Reported-by: Vlad Buslov <vladbu@nvidia.com>
    Tested-by: Vlad Buslov <vladbu@nvidia.com>
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Acked-by: Nikolay Aleksandrov <razor@blackwall.org>
    Link: https://lore.kernel.org/r/20221114084509.860831-1-idosch@nvidia.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89a7f155e6b2b7626fa1a978c7ec04a3a0b7ddef
Author: Danielle Ratson <danieller@nvidia.com>
Date:   Sun Nov 29 14:54:05 2020 +0200

    bridge: switchdev: Notify about VLAN protocol changes
    
    [ Upstream commit 22ec19f3aee327806c37c9fa1188741574bc6445 ]
    
    Drivers that support bridge offload need to be notified about changes to
    the bridge's VLAN protocol so that they could react accordingly and
    potentially veto the change.
    
    Add a new switchdev attribute to communicate the change to drivers.
    
    Signed-off-by: Danielle Ratson <danieller@nvidia.com>
    Reviewed-by: Petr Machata <petrm@nvidia.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: 9d45921ee4cb ("bridge: switchdev: Fix memory leaks when changing VLAN protocol")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5cbd86ebf284be5d175d6e8aba67956ef16c44f
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Wed Nov 9 00:15:34 2022 +0100

    ata: libata-core: do not issue non-internal commands once EH is pending
    
    [ Upstream commit e20e81a24a4d58744a29715aac2f795cd1651955 ]
    
    While the ATA specification states that a device should return command
    aborted for all commands queued after the device has entered error state,
    since ATA only keeps the sense data for the latest command (in non-NCQ
    case), we really don't want to send block layer commands to the device
    after it has entered error state. (Only ATA EH commands should be sent,
    to read the sense data etc.)
    
    Currently, scsi_queue_rq() will check if scsi_host_in_recovery()
    (state is SHOST_RECOVERY), and if so, it will _not_ issue a command via:
    scsi_dispatch_cmd() -> host->hostt->queuecommand() (ata_scsi_queuecmd())
    -> __ata_scsi_queuecmd() -> ata_scsi_translate() -> ata_qc_issue()
    
    Before commit e494f6a72839 ("[SCSI] improved eh timeout handler"),
    when receiving a TFES error IRQ, the call chain looked like this:
    ahci_error_intr() -> ata_port_abort() -> ata_do_link_abort() ->
    ata_qc_complete() -> ata_qc_schedule_eh() -> blk_abort_request() ->
    blk_rq_timed_out() -> q->rq_timed_out_fn() (scsi_times_out()) ->
    scsi_eh_scmd_add() -> scsi_host_set_state(shost, SHOST_RECOVERY)
    
    Which meant that as soon as an error IRQ was serviced, SHOST_RECOVERY
    would be set.
    
    However, after commit e494f6a72839 ("[SCSI] improved eh timeout handler"),
    scsi_times_out() will instead call scsi_abort_command() which will queue
    delayed work, and the worker function scmd_eh_abort_handler() will call
    scsi_eh_scmd_add(), which calls scsi_host_set_state(shost, SHOST_RECOVERY).
    
    So now, after the TFES error IRQ has been serviced, we need to wait for
    the SCSI workqueue to run its work before SHOST_RECOVERY gets set.
    
    It is worth noting that, even before commit e494f6a72839 ("[SCSI] improved
    eh timeout handler"), we could receive an error IRQ from the time when
    scsi_queue_rq() checks scsi_host_in_recovery(), to the time when
    ata_scsi_queuecmd() is actually called.
    
    In order to handle both the delayed setting of SHOST_RECOVERY and the
    window where we can receive an error IRQ, add a check against
    ATA_PFLAG_EH_PENDING (which gets set when servicing the error IRQ),
    inside ata_scsi_queuecmd() itself, while holding the ap->lock.
    (Since the ap->lock is held while servicing IRQs.)
    
    Fixes: e494f6a72839 ("[SCSI] improved eh timeout handler")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Tested-by: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4034d06a4dbecab7030a88b735a131357b2dac58
Author: Wenchao Hao <haowenchao@huawei.com>
Date:   Wed Jan 5 19:13:54 2022 -0500

    ata: libata-scsi: simplify __ata_scsi_queuecmd()
    
    [ Upstream commit 84eac327af543f03172085d5ef9f98ea25a51191 ]
    
    This patch cleans up the code of __ata_scsi_queuecmd(). Since each
    branch of the "if" condition check that scmd->cmd_len is not zero, move
    this check out of the "if" to simplify the conditions being checked in
    the "else" branch.
    
    While at it, avoid the if-else-if-else structure using if-else if
    structure and remove the redundant rc local variable.
    
    This patch does not change the function logic.
    
    Signed-off-by: Wenchao Hao <haowenchao@huawei.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Stable-dep-of: e20e81a24a4d ("ata: libata-core: do not issue non-internal commands once EH is pending")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03aabcb88aeeb7221ddb6196ae84ad5fb17b743f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 7 20:48:28 2022 +0800

    scsi: scsi_transport_sas: Fix error handling in sas_phy_add()
    
    [ Upstream commit 5d7bebf2dfb0dc97aac1fbace0910e557ecdb16f ]
    
    If transport_add_device() fails in sas_phy_add(), the kernel will crash
    trying to delete the device in transport_remove_device() called from
    sas_remove_host().
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000000000000108
    CPU: 61 PID: 42829 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc1+ #173
    pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    pc : device_del+0x54/0x3d0
    lr : device_del+0x37c/0x3d0
    Call trace:
     device_del+0x54/0x3d0
     attribute_container_class_device_del+0x28/0x38
     transport_remove_classdev+0x6c/0x80
     attribute_container_device_trigger+0x108/0x110
     transport_remove_device+0x28/0x38
     sas_phy_delete+0x30/0x60 [scsi_transport_sas]
     do_sas_phy_delete+0x6c/0x80 [scsi_transport_sas]
     device_for_each_child+0x68/0xb0
     sas_remove_children+0x40/0x50 [scsi_transport_sas]
     sas_remove_host+0x20/0x38 [scsi_transport_sas]
     hisi_sas_remove+0x40/0x68 [hisi_sas_main]
     hisi_sas_v2_remove+0x20/0x30 [hisi_sas_v2_hw]
     platform_remove+0x2c/0x60
    
    Fix this by checking and handling return value of transport_add_device()
    in sas_phy_add().
    
    Fixes: c7ebbbce366c ("[SCSI] SAS transport class")
    Suggested-by: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20221107124828.115557-1-yangyingliang@huawei.com
    Reviewed-by: John Garry <john.g.garry@oracle.com>
    Reviewed-by: Jason Yan <yanaijie@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
