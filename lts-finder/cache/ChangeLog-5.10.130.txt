commit 26ae9c361414418ed02d6e97b3d0c8eaa93be355
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jul 12 16:32:23 2022 +0200

    Linux 5.10.130
    
    Link: https://lore.kernel.org/r/20220711090541.764895984@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8365b151fd50160aeb7d56551d958e4852522b7f
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 08:27:22 2022 +0400

    dmaengine: ti: Add missing put_device in ti_dra7_xbar_route_allocate
    
    commit 615a4bfc426e11dba05c2cf343f9ac752fb381d2 upstream.
    
    of_find_device_by_node() takes reference, we should use put_device()
    to release it when not need anymore.
    
    Fixes: a074ae38f859 ("dmaengine: Add driver for TI DMA crossbar on DRA7x")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@gmail.com>
    Link: https://lore.kernel.org/r/20220605042723.17668-1-linmq006@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37147e22cd8dfc0412495cb361708836157a4486
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 08:27:23 2022 +0400

    dmaengine: ti: Fix refcount leak in ti_dra7_xbar_route_allocate
    
    commit c132fe78ad7b4ce8b5d49a501a15c29d08eeb23a upstream.
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not needed anymore.
    
    Add missing of_node_put() in to fix this.
    
    Fixes: ec9bfa1e1a79 ("dmaengine: ti-dma-crossbar: dra7: Use bitops instead of idr")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220605042723.17668-2-linmq006@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1be247db203ed5cdd1bbd2c2588cef2185600531
Author: Michael Walle <michael@walle.cc>
Date:   Thu May 26 15:51:11 2022 +0200

    dmaengine: at_xdma: handle errors of at_xdmac_alloc_desc() correctly
    
    commit 3770d92bd5237d686e49da7b2fb86f53ee6ed259 upstream.
    
    It seems that it is valid to have less than the requested number of
    descriptors. But what is not valid and leads to subsequent errors is to
    have zero descriptors. In that case, abort the probing.
    
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel eXtended DMA Controller driver")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Link: https://lore.kernel.org/r/20220526135111.1470926-1-michael@walle.cc
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b721f5aec92593404e1139fb2f50c266eb24e48
Author: Dmitry Osipenko <dmitry.osipenko@collabora.com>
Date:   Fri May 20 21:14:32 2022 +0300

    dmaengine: pl330: Fix lockdep warning about non-static key
    
    commit b64b3b2f1d81f83519582e1feee87d77f51f5f17 upstream.
    
    The DEFINE_SPINLOCK() macro shouldn't be used for dynamically allocated
    spinlocks. The lockdep warns about this and disables locking validator.
    Fix the warning by making lock static.
    
     INFO: trying to register non-static key.
     The code is fine but needs lockdep annotation, or maybe
     you didn't initialize this object before use?
     turning off the locking correctness validator.
     Hardware name: Radxa ROCK Pi 4C (DT)
     Call trace:
      dump_backtrace.part.0+0xcc/0xe0
      show_stack+0x18/0x6c
      dump_stack_lvl+0x8c/0xb8
      dump_stack+0x18/0x34
      register_lock_class+0x4a8/0x4cc
      __lock_acquire+0x78/0x20cc
      lock_acquire.part.0+0xe0/0x230
      lock_acquire+0x68/0x84
      _raw_spin_lock_irqsave+0x84/0xc4
      add_desc+0x44/0xc0
      pl330_get_desc+0x15c/0x1d0
      pl330_prep_dma_cyclic+0x100/0x270
      snd_dmaengine_pcm_trigger+0xec/0x1c0
      dmaengine_pcm_trigger+0x18/0x24
      ...
    
    Fixes: e588710311ee ("dmaengine: pl330: fix descriptor allocation fail")
    Signed-off-by: Dmitry Osipenko <dmitry.osipenko@collabora.com>
    Link: https://lore.kernel.org/r/20220520181432.149904-1-dmitry.osipenko@collabora.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e23cfb3fdcbbc5eb11eeebb97fa2607cd740bd97
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jul 10 13:55:49 2022 -0700

    ida: don't use BUG_ON() for debugging
    
    commit fc82bbf4dede758007763867d0282353c06d1121 upstream.
    
    This is another old BUG_ON() that just shouldn't exist (see also commit
    a382f8fee42c: "signal handling: don't use BUG_ON() for debugging").
    
    In fact, as Matthew Wilcox points out, this condition shouldn't really
    even result in a warning, since a negative id allocation result is just
    a normal allocation failure:
    
      "I wonder if we should even warn here -- sure, the caller is trying to
       free something that wasn't allocated, but we don't warn for
       kfree(NULL)"
    
    and goes on to point out how that current error check is only causing
    people to unnecessarily do their own index range checking before freeing
    it.
    
    This was noted by Itay Iellin, because the bluetooth HCI socket cookie
    code does *not* do that range checking, and ends up just freeing the
    error case too, triggering the BUG_ON().
    
    The HCI code requires CAP_NET_RAW, and seems to just result in an ugly
    splat, but there really is no reason to BUG_ON() here, and we have
    generally striven for allocation models where it's always ok to just do
    
        free(alloc());
    
    even if the allocation were to fail for some random reason (usually
    obviously that "random" reason being some resource limit).
    
    Fixes: 88eca0207cf1 ("ida: simplified functions for id allocation")
    Reported-by: Itay Iellin <ieitayie@gmail.com>
    Suggested-by: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37995f034ff20933f1da12203753a5e6957813d7
Author: Samuel Holland <samuel@sholland.org>
Date:   Fri Jul 1 22:19:02 2022 -0500

    dt-bindings: dma: allwinner,sun50i-a64-dma: Fix min/max typo
    
    commit 607a48c78e6b427b0b684d24e61c19e846ad65d6 upstream.
    
    The conditional block for variants with a second clock should have set
    minItems, not maxItems, which was already 2. Since clock-names requires
    two items, this typo should not have caused any problems.
    
    Fixes: edd14218bd66 ("dt-bindings: dmaengine: Convert Allwinner A31 and A64 DMA to a schema")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20220702031903.21703-1-samuel@sholland.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca4a91958466243d50a28d7029394e5e71ef87a8
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Fri Jul 1 10:53:52 2022 -0600

    misc: rtsx_usb: set return value in rsp_buf alloc err path
    
    commit 2cd37c2e72449a7add6da1183d20a6247d6db111 upstream.
    
    Set return value in rsp_buf alloc error path before going to
    error handling.
    
    drivers/misc/cardreader/rtsx_usb.c:639:6: warning: variable 'ret' is used uninitialized whenever 'if' condition is true [-Wsometimes-uninitialized]
               if (!ucr->rsp_buf)
                   ^~~~~~~~~~~~~
       drivers/misc/cardreader/rtsx_usb.c:678:9: note: uninitialized use occurs here
               return ret;
                      ^~~
       drivers/misc/cardreader/rtsx_usb.c:639:2: note: remove the 'if' if its condition is always false
               if (!ucr->rsp_buf)
               ^~~~~~~~~~~~~~~~~~
       drivers/misc/cardreader/rtsx_usb.c:622:9: note: initialize the variable 'ret' to silence this warning
               int ret;
                      ^
                       = 0
    
    Fixes: 3776c7855985 ("misc: rtsx_usb: use separate command and response buffers")
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20220701165352.15687-1-skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff79e0ca2bea386b3ca2df7fcb8cde2378e03786
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Thu Jun 30 20:32:56 2022 -0600

    misc: rtsx_usb: use separate command and response buffers
    
    commit 3776c78559853fd151be7c41e369fd076fb679d5 upstream.
    
    rtsx_usb uses same buffer for command and response. There could
    be a potential conflict using the same buffer for both especially
    if retries and timeouts are involved.
    
    Use separate command and response buffers to avoid conflicts.
    
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/07e3721804ff07aaab9ef5b39a5691d0718b9ade.1656642167.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af7d9d4abe848d5cb0143d4535b93aa1916086b0
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Thu Jun 30 20:32:55 2022 -0600

    misc: rtsx_usb: fix use of dma mapped buffer for usb bulk transfer
    
    commit eb7f8e28420372787933eec079735c35034bda7d upstream.
    
    rtsx_usb driver allocates coherent dma buffer for urb transfers.
    This buffer is passed to usb_bulk_msg() and usb core tries to
    map already mapped buffer running into a dma mapping error.
    
    xhci_hcd 0000:01:00.0: rejecting DMA map of vmalloc memory
    WARNING: CPU: 1 PID: 279 at include/linux/dma-mapping.h:326 usb_ hcd_map_urb_for_dma+0x7d6/0x820
    
    ...
    
    xhci_map_urb_for_dma+0x291/0x4e0
    usb_hcd_submit_urb+0x199/0x12b0
    ...
    usb_submit_urb+0x3b8/0x9e0
    usb_start_wait_urb+0xe3/0x2d0
    usb_bulk_msg+0x115/0x240
    rtsx_usb_transfer_data+0x185/0x1a8 [rtsx_usb]
    rtsx_usb_send_cmd+0xbb/0x123 [rtsx_usb]
    rtsx_usb_write_register+0x12c/0x143 [rtsx_usb]
    rtsx_usb_probe+0x226/0x4b2 [rtsx_usb]
    
    Fix it to use kmalloc() to get DMA-able memory region instead.
    
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/667d627d502e1ba9ff4f9b94966df3299d2d3c0d.1656642167.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86884017bb634070ffe8be5c35bb09d1da27d98c
Author: Peter Robinson <pbrobinson@gmail.com>
Date:   Mon Jun 6 17:10:34 2022 +0100

    dmaengine: imx-sdma: Allow imx8m for imx7 FW revs
    
    commit a7cd3cf0b2e5aaacfe5e02c472bd28e98e640be7 upstream.
    
    The revision of the imx-sdma IP that is in the i.MX8M series is the
    same is that as that in the i.MX7 series but the imx7d MODULE_FIRMWARE
    directive is wrapped in a condiditional which means it's not defined
    when built for aarch64 SOC_IMX8M platforms and hence you get the
    following errors when the driver loads on imx8m devices:
    
    imx-sdma 302c0000.dma-controller: Direct firmware load for imx/sdma/sdma-imx7d.bin failed with error -2
    imx-sdma 302c0000.dma-controller: external firmware not found, using ROM firmware
    
    Add the SOC_IMX8M into the check so the firmware can load on i.MX8.
    
    Fixes: 1474d48bd639 ("arm64: dts: imx8mq: Add SDMA nodes")
    Fixes: 941acd566b18 ("dmaengine: imx-sdma: Only check ratio on parts that support 1:1")
    Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
    Cc: stable@vger.kernel.org   # v5.2+
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/20220606161034.3544803-1-pbrobinson@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b329edd77cae63cdc59aaa87b0cb81c8a471291
Author: Satish Nagireddy <satish.nagireddy@getcruise.com>
Date:   Tue Jun 28 12:12:16 2022 -0700

    i2c: cadence: Unregister the clk notifier in error path
    
    [ Upstream commit 3501f0c663063513ad604fb1b3f06af637d3396d ]
    
    This patch ensures that the clock notifier is unregistered
    when driver probe is returning error.
    
    Fixes: df8eb5691c48 ("i2c: Add driver for Cadence I2C controller")
    Signed-off-by: Satish Nagireddy <satish.nagireddy@getcruise.com>
    Tested-by: Lars-Peter Clausen <lars@metafoo.de>
    Reviewed-by: Michal Simek <michal.simek@amd.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26938bd28c0c1d177e85db83659766968a8a59d9
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Tue Jul 5 21:15:22 2022 +0200

    r8169: fix accessing unset transport header
    
    [ Upstream commit faa4e04e5e140a6d02260289a8fba8fd8d7a3003 ]
    
    66e4c8d95008 ("net: warn if transport header was not set") added
    a check that triggers a warning in r8169, see [0].
    
    The commit referenced in the Fixes tag refers to the change from
    which the patch applies cleanly, there's nothing wrong with this
    commit. It seems the actual issue (not bug, because the warning
    is harmless here) was introduced with bdfa4ed68187
    ("r8169: use Giant Send").
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=216157
    
    Fixes: 8d520b4de3ed ("r8169: work around RTL8125 UDP hw bug")
    Reported-by: Erhard F. <erhard_f@mailbox.org>
    Tested-by: Erhard F. <erhard_f@mailbox.org>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Link: https://lore.kernel.org/r/1b2c2b29-3dc0-f7b6-5694-97ec526d51a0@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 904f622ec78e0c59d36554f0524956fb43b18dc7
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sun Jul 3 10:36:26 2022 +0300

    selftests: forwarding: fix error message in learning_test
    
    [ Upstream commit 83844aacab2015da1dba1df0cc61fc4b4c4e8076 ]
    
    When packets are not received, they aren't received on $host1_if, so the
    message talking about the second host not receiving them is incorrect.
    Fix it.
    
    Fixes: d4deb01467ec ("selftests: forwarding: Add a test for FDB learning")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9906c223400fbad19c73605b7b0cf7b14b3ac82f
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sun Jul 3 10:36:25 2022 +0300

    selftests: forwarding: fix learning_test when h1 supports IFF_UNICAST_FLT
    
    [ Upstream commit 1a635d3e1c80626237fdae47a5545b6655d8d81c ]
    
    The first host interface has by default no interest in receiving packets
    MAC DA de:ad:be:ef:13:37, so it might drop them before they hit the tc
    filter and this might confuse the selftest.
    
    Enable promiscuous mode such that the filter properly counts received
    packets.
    
    Fixes: d4deb01467ec ("selftests: forwarding: Add a test for FDB learning")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Tested-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 859b889029fc55261003f4eea2e8527c91b9b7aa
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sun Jul 3 10:36:24 2022 +0300

    selftests: forwarding: fix flood_unicast_test when h2 supports IFF_UNICAST_FLT
    
    [ Upstream commit b8e629b05f5d23f9649c901bef09fab8b0c2e4b9 ]
    
    As mentioned in the blamed commit, flood_unicast_test() works by
    checking the match count on a tc filter placed on the receiving
    interface.
    
    But the second host interface (host2_if) has no interest in receiving a
    packet with MAC DA de:ad:be:ef:13:37, so its RX filter drops it even
    before the ingress tc filter gets to be executed. So we will incorrectly
    get the message "Packet was not flooded when should", when in fact, the
    packet was flooded as expected but dropped due to an unrelated reason,
    at some other layer on the receiving side.
    
    Force h2 to accept this packet by temporarily placing it in promiscuous
    mode. Alternatively we could either deliver to its MAC address or use
    tcpdump_start, but this has the fewest complications.
    
    This fixes the "flooding" test from bridge_vlan_aware.sh and
    bridge_vlan_unaware.sh, which calls flood_test from the lib.
    
    Fixes: 236dd50bf67a ("selftests: forwarding: Add a test for flooded traffic")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Tested-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23cdc57d88d14d76f2bf0c9d747ef2508858d7e5
Author: Rick Lindsley <ricklind@us.ibm.com>
Date:   Sat Jul 2 03:37:12 2022 -0700

    ibmvnic: Properly dispose of all skbs during a failover.
    
    [ Upstream commit 1b18f09d31cfa7148df15a7d5c5e0e86f105f7d1 ]
    
    During a reset, there may have been transmits in flight that are no
    longer valid and cannot be fulfilled.  Resetting and clearing the
    queues is insufficient; each skb also needs to be explicitly freed
    so that upper levels are not left waiting for confirmation of a
    transmit that will never happen.  If this happens frequently enough,
    the apparent backlog will cause TCP to begin "congestion control"
    unnecessarily, culminating in permanently decreased throughput.
    
    Fixes: d7c0ef36bde03 ("ibmvnic: Free and re-allocate scrqs when tx/rx scrqs change")
    Tested-by: Nick Child <nnac123@linux.ibm.com>
    Reviewed-by: Brian King <brking@linux.vnet.ibm.com>
    Signed-off-by: Rick Lindsley <ricklind@us.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b4659c145bafe3cdaf2a2cde08fd34b7ecbbba5
Author: Lukasz Cieplicki <lukaszx.cieplicki@intel.com>
Date:   Tue May 31 12:54:20 2022 +0200

    i40e: Fix dropped jumbo frames statistics
    
    [ Upstream commit 1adb1563e7b7ec659379a18e607e8bc3522d8a78 ]
    
    Dropped packets caused by too large frames were not included in
    dropped RX packets statistics.
    Issue was caused by not reading the GL_RXERR1 register. That register
    stores count of packet which was have been dropped due to too large
    size.
    
    Fix it by reading GL_RXERR1 register for each interface.
    
    Repro steps:
    Send a packet larger than the set MTU to SUT
    Observe rx statists: ethtool -S <interface> | grep rx | grep -v ": 0"
    
    Fixes: 41a9e55c89be ("i40e: add missing VSI statistics")
    Signed-off-by: Lukasz Cieplicki <lukaszx.cieplicki@intel.com>
    Signed-off-by: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
    Tested-by: Gurucharan <gurucharanx.g@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5561bddd0599aa94a20036db7d7c495556771757
Author: Ivan Malov <ivan.malov@oktetlabs.ru>
Date:   Tue Jun 28 12:18:48 2022 +0300

    xsk: Clear page contiguity bit when unmapping pool
    
    [ Upstream commit 512d1999b8e94a5d43fba3afc73e774849674742 ]
    
    When a XSK pool gets mapped, xp_check_dma_contiguity() adds bit 0x1
    to pages' DMA addresses that go in ascending order and at 4K stride.
    
    The problem is that the bit does not get cleared before doing unmap.
    As a result, a lot of warnings from iommu_dma_unmap_page() are seen
    in dmesg, which indicates that lookups by iommu_iova_to_phys() fail.
    
    Fixes: 2b43470add8c ("xsk: Introduce AF_XDP buffer allocation API")
    Signed-off-by: Ivan Malov <ivan.malov@oktetlabs.ru>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Magnus Karlsson <magnus.karlsson@intel.com>
    Link: https://lore.kernel.org/bpf/20220628091848.534803-1-ivan.malov@oktetlabs.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87d2bb888259936125106e0e071b883f940658b4
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Tue Jun 7 12:04:55 2022 +0300

    ARM: dts: at91: sama5d2_icp: fix eeprom compatibles
    
    [ Upstream commit 416ce193d73a734ded6d09fe141017b38af1c567 ]
    
    The eeprom memories on the board are microchip 24aa025e48, which are 2 Kbits
    and are compatible with at24c02 not at24c32.
    
    Fixes: 68a95ef72cefe ("ARM: dts: at91: sama5d2-icp: add SAMA5D2-ICP")
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220607090455.80433-2-eugen.hristev@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b7d8e28b686d57e734c3f4877a7acd6f037cf59
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Tue Jun 7 12:04:54 2022 +0300

    ARM: dts: at91: sam9x60ek: fix eeprom compatible and size
    
    [ Upstream commit f2cbbc3f926316ccf8ef9363d8a60c1110afc1c7 ]
    
    The board has a microchip 24aa025e48 eeprom, which is a 2 Kbits memory,
    so it's compatible with at24c02 not at24c32.
    Also the size property is wrong, it's not 128 bytes, but 256 bytes.
    Thus removing and leaving it to the default (256).
    
    Fixes: 1e5f532c27371 ("ARM: dts: at91: sam9x60: add device tree for soc and board")
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220607090455.80433-1-eugen.hristev@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ade03e5ea7782915b917bd36cb28737cdcfa1946
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon May 23 12:24:20 2022 +0300

    ARM: at91: pm: use proper compatibles for sam9x60's rtc and rtt
    
    [ Upstream commit 641522665dbb25ce117c78746df1aad8b58c80e5 ]
    
    Use proper compatible strings for SAM9X60's RTC and RTT IPs. These are
    necessary for configuring wakeup sources for ULP1 PM mode.
    
    Fixes: eaedc0d379da ("ARM: at91: pm: add ULP1 support for SAM9X60")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220523092421.317345-3-claudiu.beznea@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b40ac801cbb11c161f2901bfab39aa42f0e73d4d
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon May 23 12:24:19 2022 +0300

    ARM: at91: pm: use proper compatible for sama5d2's rtc
    
    [ Upstream commit ddc980da8043779119acaca106c6d9b445c9b65b ]
    
    Use proper compatible strings for SAMA5D2's RTC IPs. This is necessary
    for configuring wakeup sources for ULP1 PM mode.
    
    Fixes: d7484f5c6b3b ("ARM: at91: pm: configure wakeup sources for ULP1 mode")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220523092421.317345-2-claudiu.beznea@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c3e73a66a2775723e1c5960424894d8a3394d09
Author: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
Date:   Mon Jun 27 15:59:38 2022 +0200

    arm64: dts: qcom: msm8992-*: Fix vdd_lvs1_2-supply typo
    
    [ Upstream commit 5fb779558f1c97e2bf2794cb59553e569c38e2f9 ]
    
    "make dtbs_check" complains about the missing "-supply" suffix for
    vdd_lvs1_2 which is clearly a typo, originally introduced in the
    msm8994-smd-rpm.dtsi file and apparently later copied to
    msm8992-xiaomi-libra.dts:
    
    msm8992-lg-bullhead-rev-10/101.dtb: pm8994-regulators: 'vdd_lvs1_2'
    does not match any of the regexes:
      '.*-supply$', '^((s|l|lvs|5vs)[0-9]*)|(boost-bypass)|(bob)$', 'pinctrl-[0-9]+'
    From schema: regulator/qcom,smd-rpm-regulator.yaml
    
    msm8992-xiaomi-libra.dtb: pm8994-regulators: 'vdd_lvs1_2'
    does not match any of the regexes:
      '.*-supply$', '^((s|l|lvs|5vs)[0-9]*)|(boost-bypass)|(bob)$', 'pinctrl-[0-9]+'
    From schema: regulator/qcom,smd-rpm-regulator.yaml
    
    Reported-by: Rob Herring <robh@kernel.org>
    Cc: Konrad Dybcio <konrad.dybcio@somainline.org>
    Fixes: f3b2c99e73be ("arm64: dts: Enable onboard SDHCI on msm8992")
    Fixes: 0f5cdb31e850 ("arm64: dts: qcom: Add Xiaomi Libra (Mi 4C) device tree")
    Signed-off-by: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220627135938.2901871-1-stephan.gerhold@kernkonzept.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d0c3ced2d1c1c0858ee042d29d4c9ed07d987bf
Author: Andrei Lalaev <andrey.lalaev@gmail.com>
Date:   Wed May 25 22:04:25 2022 +0300

    pinctrl: sunxi: sunxi_pconf_set: use correct offset
    
    [ Upstream commit cd4c1e65a32afd003b08ad4aafe1e4d3e4e8e61b ]
    
    Some Allwinner SoCs have 2 pinctrls (PIO and R_PIO).
    Previous implementation used absolute pin numbering and it was incorrect
    for R_PIO pinctrl.
    It's necessary to take into account the base pin number.
    
    Fixes: 90be64e27621 ("pinctrl: sunxi: implement pin_config_set")
    Signed-off-by: Andrei Lalaev <andrey.lalaev@gmail.com>
    Reviewed-by: Samuel Holland <samuel@sholland.org>
    Link: https://lore.kernel.org/r/20220525190423.410609-1-andrey.lalaev@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1cda2a03d81560ac0badb5fce3aae66bc8a4ae3
Author: Peng Fan <peng.fan@nxp.com>
Date:   Wed Jun 22 14:14:05 2022 +0800

    arm64: dts: imx8mp-evk: correct I2C3 pad settings
    
    [ Upstream commit 0836de513ebaae5f03014641eac996290d67493d ]
    
    According to RM bit layout, BIT3 and BIT0 are reserved.
     8  7   6   5   4   3  2 1  0
    PE HYS PUE ODE FSEL X  DSE  X
    
    Although function is not broken, we should not set reserved bit.
    
    Fixes: 5e4a67ff7f69 ("arm64: dts: imx8mp-evk: Add i2c3 support")
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ade1b1d92f674063ec5e4008bb6353392d771a4
Author: Peng Fan <peng.fan@nxp.com>
Date:   Wed Jun 22 14:13:59 2022 +0800

    arm64: dts: imx8mp-evk: correct gpio-led pad settings
    
    [ Upstream commit b838582ab8d5fb11b2c0275056a9f34e1d94fece ]
    
    0x19 is not a valid setting. According to RM bit layout,
    BIT3 and BIT0 are reserved.
      8  7   6   5   4   3  2 1  0
     PE HYS PUE ODE FSEL X  DSE  X
    
    Correct setting with PE PUE set, DSE set to 0.
    
    Fixes: 50d336b12f34 ("arm64: dts: imx8mp-evk: Add GPIO LED support")
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17b3883ba55f1e4f76bc676dfb284055e0f4d4df
Author: Sherry Sun <sherry.sun@nxp.com>
Date:   Wed Jun 22 14:13:58 2022 +0800

    arm64: dts: imx8mp-evk: correct the uart2 pinctl value
    
    [ Upstream commit 2d4fb72b681205eed4553d8802632bd3270be3ba ]
    
    According to the IOMUXC_SW_PAD_CTL_PAD_UART2_RXD/TXD register define in
    imx8mp RM, bit0 and bit3 are reserved, and the uart2 rx/tx pin should
    enable the pull up, so need to set bit8 to 1. The original pinctl value
    0x49 is incorrect and needs to be changed to 0x140, same as uart1 and
    uart3.
    
    Fixes: 9e847693c6f3 ("arm64: dts: freescale: Add i.MX8MP EVK board support")
    Reviewed-by: Haibo Chen <haibo.chen@nxp.com>
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43319ee6a07516afc5e6926441dbd8da1fb4ab98
Author: Peng Fan <peng.fan@nxp.com>
Date:   Wed Jun 22 14:13:57 2022 +0800

    arm64: dts: imx8mp-evk: correct mmc pad settings
    
    [ Upstream commit 01785f1f156511c4f285786b4192245d4f476bf1 ]
    
    According to RM bit layout, BIT3 and BIT0 are reserved.
      8  7   6   5   4   3  2 1  0
     PE HYS PUE ODE FSEL X  DSE  X
    
    Not set reserved bit.
    
    Fixes: 9e847693c6f3 ("arm64: dts: freescale: Add i.MX8MP EVK board support")
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bf74a1e748fff9413a330775454871ba0936643
Author: Konrad Dybcio <konrad.dybcio@somainline.org>
Date:   Sun May 1 20:40:16 2022 +0200

    arm64: dts: qcom: msm8994: Fix CPU6/7 reg values
    
    [ Upstream commit 47bf59c4755930f616dd90c8c6a85f40a6d347ea ]
    
    CPU6 and CPU7 were mistakengly pointing to CPU5 reg. Fix it.
    
    Fixes: 02d8091bbca0 ("arm64: dts: qcom: msm8994: Add a proper CPU map")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220501184016.64138-1-konrad.dybcio@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c0d10ce002aca369605d88898623c0bece1576a
Author: Samuel Holland <samuel@sholland.org>
Date:   Wed May 25 21:49:56 2022 -0500

    pinctrl: sunxi: a83t: Fix NAND function name for some pins
    
    [ Upstream commit aaefa29270d9551b604165a08406543efa9d16f5 ]
    
    The other NAND pins on Port C use the "nand0" function name.
    "nand0" also matches all of the other Allwinner SoCs.
    
    Fixes: 4730f33f0d82 ("pinctrl: sunxi: add allwinner A83T PIO controller support")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220526024956.49500-1-samuel@sholland.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d90607e7e6afa89768b0aaa915b58bd2b849276
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu May 12 06:16:10 2022 +0400

    ARM: meson: Fix refcount leak in meson_smp_prepare_cpus
    
    [ Upstream commit 34d2cd3fccced12b958b8848e3eff0ee4296764c ]
    
    of_find_compatible_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: d850f3e5d296 ("ARM: meson: Add SMP bringup code for Meson8 and Meson8b")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20220512021611.47921-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e14930e9f9c657cf109326752871d3c701b12326
Author: Eric Sandeen <sandeen@redhat.com>
Date:   Thu Jul 7 16:07:53 2022 -0700

    xfs: remove incorrect ASSERT in xfs_rename
    
    commit e445976537ad139162980bee015b7364e5b64fff upstream.
    
    This ASSERT in xfs_rename is a) incorrect, because
    (RENAME_WHITEOUT|RENAME_NOREPLACE) is a valid combination, and
    b) unnecessary, because actual invalid flag combinations are already
    handled at the vfs level in do_renameat2() before we get called.
    So, remove it.
    
    Reported-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Fixes: 7dcf5c3e4527 ("xfs: add RENAME_WHITEOUT support")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Acked-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 852952ea0e15728d8bfbe34dc224b53a030372d4
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Fri Jul 8 20:48:19 2022 +0200

    can: kvaser_usb: kvaser_usb_leaf: fix bittiming limits
    
    commit b3b6df2c56d80b8c6740433cff5f016668b8de70 upstream.
    
    Use correct bittiming limits depending on device. For devices based on
    USBcanII, Leaf M32C or Leaf i.MX28.
    
    Fixes: 080f40a6fa28 ("can: kvaser_usb: Add support for Kvaser CAN/USB devices")
    Fixes: b4f20130af23 ("can: kvaser_usb: add support for Kvaser Leaf v2 and usb mini PCIe")
    Fixes: f5d4abea3ce0 ("can: kvaser_usb: Add support for the USBcan-II family")
    Link: https://lore.kernel.org/all/20220603083820.800246-4-extja@kvaser.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    [mkl: remove stray netlink.h include]
    [mkl: keep struct can_bittiming_const kvaser_usb_flexc_bittiming_const in kvaser_usb_hydra.c]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a741e762e1995096572774a1bf93243f8c44b913
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Fri Jul 8 20:48:18 2022 +0200

    can: kvaser_usb: kvaser_usb_leaf: fix CAN clock frequency regression
    
    commit e6c80e601053ffdac5709f11ff3ec1e19ed05f7b upstream.
    
    The firmware of M32C based Leaf devices expects bittiming parameters
    calculated for 16MHz clock. Since we use the actual clock frequency of
    the device, the device may end up with wrong bittiming parameters,
    depending on user requested parameters.
    
    This regression affects M32C based Leaf devices with non-16MHz clock.
    
    Fixes: 854a2bede1f0 ("can: kvaser_usb: get CAN clock frequency from device")
    Link: https://lore.kernel.org/all/20220603083820.800246-3-extja@kvaser.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f439d08ef1a2d469f36dce3fb2767acab5903124
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Fri Jul 8 20:48:17 2022 +0200

    can: kvaser_usb: replace run-time checks with struct kvaser_usb_driver_info
    
    commit 49f274c72357d2d74cba70b172cf369768909707 upstream.
    
    Unify and move compile-time known information into new struct
    kvaser_usb_driver_info, in favor of run-time checks.
    
    All Kvaser USBcanII supports listen-only mode and error counter
    reporting.
    
    Link: https://lore.kernel.org/all/20220603083820.800246-2-extja@kvaser.com
    Suggested-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    [mkl: move struct kvaser_usb_driver_info into kvaser_usb_core.c]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79af7be44ccb14e09ed13f56fc0cd1523f453b4f
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Jun 30 14:16:54 2022 +0200

    powerpc/powernv: delay rng platform device creation until later in boot
    
    commit 887502826549caa7e4215fd9e628f48f14c0825a upstream.
    
    The platform device for the rng must be created much later in boot.
    Otherwise it tries to connect to a parent that doesn't yet exist,
    resulting in this splat:
    
      [    0.000478] kobject: '(null)' ((____ptrval____)): is not initialized, yet kobject_get() is being called.
      [    0.002925] [c000000002a0fb30] [c00000000073b0bc] kobject_get+0x8c/0x100 (unreliable)
      [    0.003071] [c000000002a0fba0] [c00000000087e464] device_add+0xf4/0xb00
      [    0.003194] [c000000002a0fc80] [c000000000a7f6e4] of_device_add+0x64/0x80
      [    0.003321] [c000000002a0fcb0] [c000000000a800d0] of_platform_device_create_pdata+0xd0/0x1b0
      [    0.003476] [c000000002a0fd00] [c00000000201fa44] pnv_get_random_long_early+0x240/0x2e4
      [    0.003623] [c000000002a0fe20] [c000000002060c38] random_init+0xc0/0x214
    
    This patch fixes the issue by doing the platform device creation inside
    of machine_subsys_initcall.
    
    Fixes: f3eac426657d ("powerpc/powernv: wire up rng during setup_arch")
    Cc: stable@vger.kernel.org
    Reported-by: Sachin Sant <sachinp@linux.ibm.com>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Tested-by: Sachin Sant <sachinp@linux.ibm.com>
    [mpe: Change "of node" to "platform device" in change log]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220630121654.1939181-1-Jason@zx2c4.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19104425c962e0b4cbdaa94cecec7be1b5197a83
Author: Hsin-Yi Wang <hsinyi@chromium.org>
Date:   Fri Jul 1 01:33:29 2022 +0800

    video: of_display_timing.h: include errno.h
    
    commit 3663a2fb325b8782524f3edb0ae32d6faa615109 upstream.
    
    If CONFIG_OF is not enabled, default of_get_display_timing() returns an
    errno, so include the header.
    
    Fixes: 422b67e0b31a ("videomode: provide dummy inline functions for !CONFIG_OF")
    Suggested-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96fa24eb1a383f6473c591cec953fcddfa950fdb
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Jun 23 13:02:31 2022 -0700

    memregion: Fix memregion_free() fallback definition
    
    commit f50974eee5c4a5de1e4f1a3d873099f170df25f8 upstream.
    
    In the CONFIG_MEMREGION=n case, memregion_free() is meant to be a static
    inline. 0day reports:
    
        In file included from drivers/cxl/core/port.c:4:
        include/linux/memregion.h:19:6: warning: no previous prototype for
        function 'memregion_free' [-Wmissing-prototypes]
    
    Mark memregion_free() static.
    
    Fixes: 33dd70752cd7 ("lib: Uplevel the pmem "region" ida to a global allocator")
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Alison Schofield <alison.schofield@intel.com>
    Link: https://lore.kernel.org/r/165601455171.4042645.3350844271068713515.stgit@dwillia2-xfh
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6931bff1cc19bfbea7becd1c7be4296a86f737f
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Jun 27 20:42:18 2022 +0200

    PM: runtime: Redefine pm_runtime_release_supplier()
    
    commit 07358194badf73e267289b40b761f5dc56928eab upstream.
    
    Instead of passing an extra bool argument to pm_runtime_release_supplier(),
    make its callers take care of triggering a runtime-suspend of the
    supplier device as needed.
    
    No expected functional impact.
    
    Suggested-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: 5.1+ <stable@vger.kernel.org> # 5.1+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cecb806c766c78e1be62b6b7b1483ef59bbaeabe
Author: Helge Deller <deller@gmx.de>
Date:   Sat Jun 25 13:00:34 2022 +0200

    fbcon: Prevent that screen size is smaller than font size
    
    commit e64242caef18b4a5840b0e7a9bff37abd4f4f933 upstream.
    
    We need to prevent that users configure a screen size which is smaller than the
    currently selected font size. Otherwise rendering chars on the screen will
    access memory outside the graphics memory region.
    
    This patch adds a new function fbcon_modechange_possible() which
    implements this check and which later may be extended with other checks
    if necessary.  The new function is called from the FBIOPUT_VSCREENINFO
    ioctl handler in fbmem.c, which will return -EINVAL if userspace asked
    for a too small screen size.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: stable@vger.kernel.org # v5.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b727561ddc9360de9631af2d970d8ffed676a750
Author: Helge Deller <deller@gmx.de>
Date:   Sat Jun 25 12:56:49 2022 +0200

    fbcon: Disallow setting font bigger than screen size
    
    commit 65a01e601dbba8b7a51a2677811f70f783766682 upstream.
    
    Prevent that users set a font size which is bigger than the physical screen.
    It's unlikely this may happen (because screens are usually much larger than the
    fonts and each font char is limited to 32x32 pixels), but it may happen on
    smaller screens/LCD displays.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: stable@vger.kernel.org # v4.14+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b81212828ad19ab3eccf00626cd04099215060bf
Author: Helge Deller <deller@gmx.de>
Date:   Wed Jun 29 15:53:55 2022 +0200

    fbmem: Check virtual screen sizes in fb_set_var()
    
    commit 6c11df58fd1ac0aefcb3b227f72769272b939e56 upstream.
    
    Verify that the fbdev or drm driver correctly adjusted the virtual
    screen sizes. On failure report the failing driver and reject the screen
    size change.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: stable@vger.kernel.org # v5.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d03e8ed72d7dae6874ee6cf7ae02029a727e7559
Author: Guiling Deng <greens9@163.com>
Date:   Tue Jun 28 09:36:41 2022 -0700

    fbdev: fbmem: Fix logo center image dx issue
    
    commit 955f04766d4e6eb94bf3baa539e096808c74ebfb upstream.
    
    Image.dx gets wrong value because of missing '()'.
    
    If xres == logo->width and n == 1, image.dx = -16.
    
    Signed-off-by: Guiling Deng <greens9@163.com>
    Fixes: 3d8b1933eb1c ("fbdev: fbmem: add config option to center the bootup logo")
    Cc: stable@vger.kernel.org # v5.0+
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 963c80f070ed513b9c6ac29c9236801fba6eefc4
Author: Yian Chen <yian.chen@intel.com>
Date:   Fri May 20 17:21:15 2022 -0700

    iommu/vt-d: Fix PCI bus rescan device hot add
    
    commit 316f92a705a4c2bf4712135180d56f3cca09243a upstream.
    
    Notifier calling chain uses priority to determine the execution
    order of the notifiers or listeners registered to the chain.
    PCI bus device hot add utilizes the notification mechanism.
    
    The current code sets low priority (INT_MIN) to Intel
    dmar_pci_bus_notifier and postpones DMAR decoding after adding
    new device into IOMMU. The result is that struct device pointer
    cannot be found in DRHD search for the new device's DMAR/IOMMU.
    Subsequently, the device is put under the "catch-all" IOMMU
    instead of the correct one. This could cause system hang when
    device TLB invalidation is sent to the wrong IOMMU. Invalidation
    timeout error and hard lockup have been observed and data
    inconsistency/crush may occur as well.
    
    This patch fixes the issue by setting a positive priority(1) for
    dmar_pci_bus_notifier while the priority of IOMMU bus notifier
    uses the default value(0), therefore DMAR decoding will be in
    advance of DRHD search for a new device to find the correct IOMMU.
    
    Following is a 2-step example that triggers the bug by simulating
    PCI device hot add behavior in Intel Sapphire Rapids server.
    
    echo 1 > /sys/bus/pci/devices/0000:6a:01.0/remove
    echo 1 > /sys/bus/pci/rescan
    
    Fixes: 59ce0515cdaf ("iommu/vt-d: Update DRHD/RMRR/ATSR device scope")
    Cc: stable@vger.kernel.org # v3.15+
    Reported-by: Zhang, Bernice <bernice.zhang@intel.com>
    Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Signed-off-by: Yian Chen <yian.chen@intel.com>
    Link: https://lore.kernel.org/r/20220521002115.1624069-1-yian.chen@intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a5e36dbcb448a7a8ba63d1d4b6ade2c9d3cc8bf
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sat Jul 2 04:16:30 2022 +0200

    netfilter: nf_tables: stricter validation of element data
    
    commit 7e6bc1f6cabcd30aba0b11219d8e01b952eacbb6 upstream.
    
    Make sure element data type and length do not mismatch the one specified
    by the set declaration.
    
    Fixes: 7d7402642eaf ("netfilter: nf_tables: variable sized set element keys / data")
    Reported-by: Hugues ANGUELKOV <hanguelkov@randorisec.fr>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a6430b99f67842617c7208ca55a411e903ba03a
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sat Jul 2 04:16:31 2022 +0200

    netfilter: nft_set_pipapo: release elements in clone from abort path
    
    commit 9827a0e6e23bf43003cd3d5b7fb11baf59a35e1e upstream.
    
    New elements that reside in the clone are not released in case that the
    transaction is aborted.
    
    [16302.231754] ------------[ cut here ]------------
    [16302.231756] WARNING: CPU: 0 PID: 100509 at net/netfilter/nf_tables_api.c:1864 nf_tables_chain_destroy+0x26/0x127 [nf_tables]
    [...]
    [16302.231882] CPU: 0 PID: 100509 Comm: nft Tainted: G        W         5.19.0-rc3+ #155
    [...]
    [16302.231887] RIP: 0010:nf_tables_chain_destroy+0x26/0x127 [nf_tables]
    [16302.231899] Code: f3 fe ff ff 41 55 41 54 55 53 48 8b 6f 10 48 89 fb 48 c7 c7 82 96 d9 a0 8b 55 50 48 8b 75 58 e8 de f5 92 e0 83 7d 50 00 74 09 <0f> 0b 5b 5d 41 5c 41 5d c3 4c 8b 65 00 48 8b 7d 08 49 39 fc 74 05
    [...]
    [16302.231917] Call Trace:
    [16302.231919]  <TASK>
    [16302.231921]  __nf_tables_abort.cold+0x23/0x28 [nf_tables]
    [16302.231934]  nf_tables_abort+0x30/0x50 [nf_tables]
    [16302.231946]  nfnetlink_rcv_batch+0x41a/0x840 [nfnetlink]
    [16302.231952]  ? __nla_validate_parse+0x48/0x190
    [16302.231959]  nfnetlink_rcv+0x110/0x129 [nfnetlink]
    [16302.231963]  netlink_unicast+0x211/0x340
    [16302.231969]  netlink_sendmsg+0x21e/0x460
    
    Add nft_set_pipapo_match_destroy() helper function to release the
    elements in the lookup tables.
    
    Stefano Brivio says: "We additionally look for elements pointers in the
    cloned matching data if priv->dirty is set, because that means that
    cloned data might point to additional elements we did not commit to the
    working copy yet (such as the abort path case, but perhaps not limited
    to it)."
    
    Fixes: 3c4287f62044 ("nf_tables: Add set type for arbitrary concatenation of ranges")
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f59d12efe3067661a66be13166d790341831948
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Tue Jul 5 20:56:10 2022 +0800

    net: rose: fix UAF bug caused by rose_t0timer_expiry
    
    commit 148ca04518070910739dfc4eeda765057856403d upstream.
    
    There are UAF bugs caused by rose_t0timer_expiry(). The
    root cause is that del_timer() could not stop the timer
    handler that is running and there is no synchronization.
    One of the race conditions is shown below:
    
        (thread 1)             |        (thread 2)
                               | rose_device_event
                               |   rose_rt_device_down
                               |     rose_remove_neigh
    rose_t0timer_expiry        |       rose_stop_t0timer(rose_neigh)
      ...                      |         del_timer(&neigh->t0timer)
                               |         kfree(rose_neigh) //[1]FREE
      neigh->dce_mode //[2]USE |
    
    The rose_neigh is deallocated in position [1] and use in
    position [2].
    
    The crash trace triggered by POC is like below:
    
    BUG: KASAN: use-after-free in expire_timers+0x144/0x320
    Write of size 8 at addr ffff888009b19658 by task swapper/0/0
    ...
    Call Trace:
     <IRQ>
     dump_stack_lvl+0xbf/0xee
     print_address_description+0x7b/0x440
     print_report+0x101/0x230
     ? expire_timers+0x144/0x320
     kasan_report+0xed/0x120
     ? expire_timers+0x144/0x320
     expire_timers+0x144/0x320
     __run_timers+0x3ff/0x4d0
     run_timer_softirq+0x41/0x80
     __do_softirq+0x233/0x544
     ...
    
    This patch changes rose_stop_ftimer() and rose_stop_t0timer()
    in rose_remove_neigh() to del_timer_sync() in order that the
    timer handler could be finished before the resources such as
    rose_neigh and so on are deallocated. As a result, the UAF
    bugs could be mitigated.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Link: https://lore.kernel.org/r/20220705125610.77971-1-duoming@zju.edu.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0085da9df3dced730027923a6b48f58e9016af91
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Jul 5 14:53:51 2022 +0200

    usbnet: fix memory leak in error case
    
    commit b55a21b764c1e182014630fa5486d717484ac58f upstream.
    
    usbnet_write_cmd_async() mixed up which buffers
    need to be freed in which error case.
    
    v2: add Fixes tag
    v3: fix uninitialized buf pointer
    
    Fixes: 877bd862f32b8 ("usbnet: introduce usbnet 3 command helpers")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Link: https://lore.kernel.org/r/20220705125351.17309-1-oneukum@suse.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e917be1f83ea14a68b3cf64d3da9968eaf991dae
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Jul 1 14:47:25 2022 +0200

    bpf: Fix insufficient bounds propagation from adjust_scalar_min_max_vals
    
    commit 3844d153a41adea718202c10ae91dc96b37453b5 upstream.
    
    Kuee reported a corner case where the tnum becomes constant after the call
    to __reg_bound_offset(), but the register's bounds are not, that is, its
    min bounds are still not equal to the register's max bounds.
    
    This in turn allows to leak pointers through turning a pointer register as
    is into an unknown scalar via adjust_ptr_min_max_vals().
    
    Before:
    
      func#0 @0
      0: R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))
      0: (b7) r0 = 1                        ; R0_w=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0))
      1: (b7) r3 = 0                        ; R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0))
      2: (87) r3 = -r3                      ; R3_w=scalar()
      3: (87) r3 = -r3                      ; R3_w=scalar()
      4: (47) r3 |= 32767                   ; R3_w=scalar(smin=-9223372036854743041,umin=32767,var_off=(0x7fff; 0xffffffffffff8000),s32_min=-2147450881)
      5: (75) if r3 s>= 0x0 goto pc+1       ; R3_w=scalar(umin=9223372036854808575,var_off=(0x8000000000007fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)
      6: (95) exit
    
      from 5 to 7: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))
      7: (d5) if r3 s<= 0x8000 goto pc+1    ; R3=scalar(umin=32769,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)
      8: (95) exit
    
      from 7 to 9: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=32768,var_off=(0x7fff; 0x8000)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))
      9: (07) r3 += -32767                  ; R3_w=scalar(imm=0,umax=1,var_off=(0x0; 0x0))  <--- [*]
      10: (95) exit
    
    What can be seen here is that R3=scalar(umin=32767,umax=32768,var_off=(0x7fff;
    0x8000)) after the operation R3 += -32767 results in a 'malformed' constant, that
    is, R3_w=scalar(imm=0,umax=1,var_off=(0x0; 0x0)). Intersecting with var_off has
    not been done at that point via __update_reg_bounds(), which would have improved
    the umax to be equal to umin.
    
    Refactor the tnum <> min/max bounds information flow into a reg_bounds_sync()
    helper and use it consistently everywhere. After the fix, bounds have been
    corrected to R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0)) and thus the register
    is regarded as a 'proper' constant scalar of 0.
    
    After:
    
      func#0 @0
      0: R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))
      0: (b7) r0 = 1                        ; R0_w=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0))
      1: (b7) r3 = 0                        ; R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0))
      2: (87) r3 = -r3                      ; R3_w=scalar()
      3: (87) r3 = -r3                      ; R3_w=scalar()
      4: (47) r3 |= 32767                   ; R3_w=scalar(smin=-9223372036854743041,umin=32767,var_off=(0x7fff; 0xffffffffffff8000),s32_min=-2147450881)
      5: (75) if r3 s>= 0x0 goto pc+1       ; R3_w=scalar(umin=9223372036854808575,var_off=(0x8000000000007fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)
      6: (95) exit
    
      from 5 to 7: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))
      7: (d5) if r3 s<= 0x8000 goto pc+1    ; R3=scalar(umin=32769,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)
      8: (95) exit
    
      from 7 to 9: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=32768,var_off=(0x7fff; 0x8000)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))
      9: (07) r3 += -32767                  ; R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0))  <--- [*]
      10: (95) exit
    
    Fixes: b03c9f9fdc37 ("bpf/verifier: track signed and unsigned min/max values")
    Reported-by: Kuee K1r0a <liulin063@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220701124727.11153-2-daniel@iogearbox.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9adec7334969d9a20b9359ee745d17efc8f9890f
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Jul 1 14:47:24 2022 +0200

    bpf: Fix incorrect verifier simulation around jmp32's jeq/jne
    
    commit a12ca6277eca6aeeccf66e840c23a2b520e24c8f upstream.
    
    Kuee reported a quirk in the jmp32's jeq/jne simulation, namely that the
    register value does not match expectations for the fall-through path. For
    example:
    
    Before fix:
    
      0: R1=ctx(off=0,imm=0) R10=fp0
      0: (b7) r2 = 0                        ; R2_w=P0
      1: (b7) r6 = 563                      ; R6_w=P563
      2: (87) r2 = -r2                      ; R2_w=Pscalar()
      3: (87) r2 = -r2                      ; R2_w=Pscalar()
      4: (4c) w2 |= w6                      ; R2_w=Pscalar(umin=563,umax=4294967295,var_off=(0x233; 0xfffffdcc),s32_min=-2147483085) R6_w=P563
      5: (56) if w2 != 0x8 goto pc+1        ; R2_w=P571  <--- [*]
      6: (95) exit
      R0 !read_ok
    
    After fix:
    
      0: R1=ctx(off=0,imm=0) R10=fp0
      0: (b7) r2 = 0                        ; R2_w=P0
      1: (b7) r6 = 563                      ; R6_w=P563
      2: (87) r2 = -r2                      ; R2_w=Pscalar()
      3: (87) r2 = -r2                      ; R2_w=Pscalar()
      4: (4c) w2 |= w6                      ; R2_w=Pscalar(umin=563,umax=4294967295,var_off=(0x233; 0xfffffdcc),s32_min=-2147483085) R6_w=P563
      5: (56) if w2 != 0x8 goto pc+1        ; R2_w=P8  <--- [*]
      6: (95) exit
      R0 !read_ok
    
    As can be seen on line 5 for the branch fall-through path in R2 [*] is that
    given condition w2 != 0x8 is false, verifier should conclude that r2 = 8 as
    upper 32 bit are known to be zero. However, verifier incorrectly concludes
    that r2 = 571 which is far off.
    
    The problem is it only marks false{true}_reg as known in the switch for JE/NE
    case, but at the end of the function, it uses {false,true}_{64,32}off to
    update {false,true}_reg->var_off and they still hold the prior value of
    {false,true}_reg->var_off before it got marked as known. The subsequent
    __reg_combine_32_into_64() then propagates this old var_off and derives new
    bounds. The information between min/max bounds on {false,true}_reg from
    setting the register to known const combined with the {false,true}_reg->var_off
    based on the old information then derives wrong register data.
    
    Fix it by detangling the BPF_JEQ/BPF_JNE cases and updating relevant
    {false,true}_{64,32}off tnums along with the register marking to known
    constant.
    
    Fixes: 3f50f132d840 ("bpf: Verifier, do explicit ALU32 bounds tracking")
    Reported-by: Kuee K1r0a <liulin063@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220701124727.11153-1-daniel@iogearbox.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0b8e223998866b3e7b2895927d4e9689b0a80d8
Author: Rhett Aultman <rhett.aultman@samsara.com>
Date:   Sun Jul 3 19:33:06 2022 +0200

    can: gs_usb: gs_usb_open/close(): fix memory leak
    
    commit 2bda24ef95c0311ab93bda00db40486acf30bd0a upstream.
    
    The gs_usb driver appears to suffer from a malady common to many USB
    CAN adapter drivers in that it performs usb_alloc_coherent() to
    allocate a number of USB request blocks (URBs) for RX, and then later
    relies on usb_kill_anchored_urbs() to free them, but this doesn't
    actually free them. As a result, this may be leaking DMA memory that's
    been used by the driver.
    
    This commit is an adaptation of the techniques found in the esd_usb2
    driver where a similar design pattern led to a memory leak. It
    explicitly frees the RX URBs and their DMA memory via a call to
    usb_free_coherent(). Since the RX URBs were allocated in the
    gs_can_open(), we remove them in gs_can_close() rather than in the
    disconnect function as was done in esd_usb2.
    
    For more information, see the 928150fad41b ("can: esd_usb2: fix memory
    leak").
    
    Link: https://lore.kernel.org/all/alpine.DEB.2.22.394.2206031547001.1630869@thelappy
    Fixes: d08e973a77d1 ("can: gs_usb: Added support for the GS_USB CAN devices")
    Cc: stable@vger.kernel.org
    Signed-off-by: Rhett Aultman <rhett.aultman@samsara.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f4b347a1fb4ddf217ca3ed15ce04c7d4d8cbeb
Author: Liang He <windhl@126.com>
Date:   Sun Jun 19 15:02:57 2022 +0800

    can: grcan: grcan_probe(): remove extra of_node_get()
    
    commit 562fed945ea482833667f85496eeda766d511386 upstream.
    
    In grcan_probe(), of_find_node_by_path() has already increased the
    refcount. There is no need to call of_node_get() again, so remove it.
    
    Link: https://lore.kernel.org/all/20220619070257.4067022-1-windhl@126.com
    Fixes: 1e93ed26acf0 ("can: grcan: grcan_probe(): fix broken system id check for errata workaround needs")
    Cc: stable@vger.kernel.org # v5.18
    Cc: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85cd41070df992d3c0dfd828866fdd243d3b774a
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Fri May 20 20:32:39 2022 +0200

    can: bcm: use call_rcu() instead of costly synchronize_rcu()
    
    commit f1b4e32aca0811aa011c76e5d6cf2fa19224b386 upstream.
    
    In commit d5f9023fa61e ("can: bcm: delay release of struct bcm_op
    after synchronize_rcu()") Thadeu Lima de Souza Cascardo introduced two
    synchronize_rcu() calls in bcm_release() (only once at socket close)
    and in bcm_delete_rx_op() (called on removal of each single bcm_op).
    
    Unfortunately this slow removal of the bcm_op's affects user space
    applications like cansniffer where the modification of a filter
    removes 2048 bcm_op's which blocks the cansniffer application for
    40(!) seconds.
    
    In commit 181d4447905d ("can: gw: use call_rcu() instead of costly
    synchronize_rcu()") Eric Dumazet replaced the synchronize_rcu() calls
    with several call_rcu()'s to safely remove the data structures after
    the removal of CAN ID subscriptions with can_rx_unregister() calls.
    
    This patch adopts Erics approach for the can-bcm which should be
    applicable since the removal of tasklet_kill() in bcm_remove_op() and
    the introduction of the HRTIMER_MODE_SOFT timer handling in Linux 5.4.
    
    Fixes: d5f9023fa61e ("can: bcm: delay release of struct bcm_op after synchronize_rcu()") # >= 5.4
    Link: https://lore.kernel.org/all/20220520183239.19111-1-socketcan@hartkopp.net
    Cc: stable@vger.kernel.org
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Norbert Slusarek <nslusarek@gmx.net>
    Cc: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b75d4bec85b81109726c0a7d982067e766714509
Author: Tim Crawford <tcrawford@system76.com>
Date:   Fri Jun 24 08:41:09 2022 -0600

    ALSA: hda/realtek: Add quirk for Clevo L140PU
    
    commit 11bea26929a1a3a9dd1a287b60c2f471701bf706 upstream.
    
    Fixes headset detection on Clevo L140PU.
    
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220624144109.3957-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c32496964da0dc230cea763a0e934b2e02dabd5
Author: Jann Horn <jannh@google.com>
Date:   Wed Jun 8 20:22:05 2022 +0200

    mm/slub: add missing TID updates on slab deactivation
    
    commit eeaa345e128515135ccb864c04482180c08e3259 upstream.
    
    The fastpath in slab_alloc_node() assumes that c->slab is stable as long as
    the TID stays the same. However, two places in __slab_alloc() currently
    don't update the TID when deactivating the CPU slab.
    
    If multiple operations race the right way, this could lead to an object
    getting lost; or, in an even more unlikely situation, it could even lead to
    an object being freed onto the wrong slab's freelist, messing up the
    `inuse` counter and eventually causing a page to be freed to the page
    allocator while it still contains slab objects.
    
    (I haven't actually tested these cases though, this is just based on
    looking at the code. Writing testcases for this stuff seems like it'd be
    a pain...)
    
    The race leading to state inconsistency is (all operations on the same CPU
    and kmem_cache):
    
     - task A: begin do_slab_free():
        - read TID
        - read pcpu freelist (==NULL)
        - check `slab == c->slab` (true)
     - [PREEMPT A->B]
     - task B: begin slab_alloc_node():
        - fastpath fails (`c->freelist` is NULL)
        - enter __slab_alloc()
        - slub_get_cpu_ptr() (disables preemption)
        - enter ___slab_alloc()
        - take local_lock_irqsave()
        - read c->freelist as NULL
        - get_freelist() returns NULL
        - write `c->slab = NULL`
        - drop local_unlock_irqrestore()
        - goto new_slab
        - slub_percpu_partial() is NULL
        - get_partial() returns NULL
        - slub_put_cpu_ptr() (enables preemption)
     - [PREEMPT B->A]
     - task A: finish do_slab_free():
        - this_cpu_cmpxchg_double() succeeds()
        - [CORRUPT STATE: c->slab==NULL, c->freelist!=NULL]
    
    From there, the object on c->freelist will get lost if task B is allowed to
    continue from here: It will proceed to the retry_load_slab label,
    set c->slab, then jump to load_freelist, which clobbers c->freelist.
    
    But if we instead continue as follows, we get worse corruption:
    
     - task A: run __slab_free() on object from other struct slab:
        - CPU_PARTIAL_FREE case (slab was on no list, is now on pcpu partial)
     - task A: run slab_alloc_node() with NUMA node constraint:
        - fastpath fails (c->slab is NULL)
        - call __slab_alloc()
        - slub_get_cpu_ptr() (disables preemption)
        - enter ___slab_alloc()
        - c->slab is NULL: goto new_slab
        - slub_percpu_partial() is non-NULL
        - set c->slab to slub_percpu_partial(c)
        - [CORRUPT STATE: c->slab points to slab-1, c->freelist has objects
          from slab-2]
        - goto redo
        - node_match() fails
        - goto deactivate_slab
        - existing c->freelist is passed into deactivate_slab()
        - inuse count of slab-1 is decremented to account for object from
          slab-2
    
    At this point, the inuse count of slab-1 is 1 lower than it should be.
    This means that if we free all allocated objects in slab-1 except for one,
    SLUB will think that slab-1 is completely unused, and may free its page,
    leading to use-after-free.
    
    Fixes: c17dda40a6a4e ("slub: Separate out kmem_cache_cpu processing from deactivate_slab")
    Fixes: 03e404af26dc2 ("slub: fast release on full slab")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Christoph Lameter <cl@linux.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Reviewed-by: Muchun Song <songmuchun@bytedance.com>
    Tested-by: Hyeonggon Yoo <42.hyeyoo@gmail.com>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Link: https://lore.kernel.org/r/20220608182205.2945720-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
