commit ecda77b46871007ab0e6c671fe9df5795dd8154a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Oct 6 14:57:07 2023 +0200

    Linux 6.1.56
    
    Link: https://lore.kernel.org/r/20231004175217.404851126@linuxfoundation.org
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: SeongJae Park <sj@kernel.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Takeshi Ogasawara <takeshi.ogasawara@futuring-girl.com>
    Tested-by: Allen Pais <apais@linux.microsoft.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c515d4f2d668c1a3ba43b2d219be237087b7380
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Wed Sep 6 13:22:57 2023 -0500

    ASoC: amd: yc: Fix a non-functional mic on Lenovo 82TL
    
    commit cfff2a7794d23b03a3ddedd318bf1df1876c598f upstream.
    
    Lenovo 82TL has DMIC connected like 82V2 does.  Also match
    82TL.
    
    Reported-by: wildjim@kiwinet.org
    Closes: https://bugzilla.kernel.org/show_bug.cgi?id=217063
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Link: https://lore.kernel.org/r/20230906182257.45736-1-mario.limonciello@amd.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3c1da44835357f67f2d4d2c2e11f4c8e7618ad4
Author: Michal Hocko <mhocko@suse.com>
Date:   Thu Sep 21 09:38:29 2023 +0200

    mm, memcg: reconsider kmem.limit_in_bytes deprecation
    
    commit 4597648fddeadef5877610d693af11906aa666ac upstream.
    
    This reverts commits 86327e8eb94c ("memcg: drop kmem.limit_in_bytes") and
    partially reverts 58056f77502f ("memcg, kmem: further deprecate
    kmem.limit_in_bytes") which have incrementally removed support for the
    kernel memory accounting hard limit.  Unfortunately it has turned out that
    there is still userspace depending on the existence of
    memory.kmem.limit_in_bytes [1].  The underlying functionality is not
    really required but the non-existent file just confuses the userspace
    which fails in the result.  The patch to fix this on the userspace side
    has been submitted but it is hard to predict how it will propagate through
    the maze of 3rd party consumers of the software.
    
    Now, reverting alone 86327e8eb94c is not an option because there is
    another set of userspace which cannot cope with ENOTSUPP returned when
    writing to the file.  Therefore we have to go and revisit 58056f77502f as
    well.  There are two ways to go ahead.  Either we give up on the
    deprecation and fully revert 58056f77502f as well or we can keep
    kmem.limit_in_bytes but make the write a noop and warn about the fact.
    This should work for both known breaking workloads which depend on the
    existence but do not depend on the hard limit enforcement.
    
    Note to backporters to stable trees.  a8c49af3be5f ("memcg: add per-memcg
    total kernel memory stat") introduced in 4.18 has added memcg_account_kmem
    so the accounting is not done by obj_cgroup_charge_pages directly for v1
    anymore.  Prior kernels need to add it explicitly (thanks to Johannes for
    pointing this out).
    
    [akpm@linux-foundation.org: fix build - remove unused local]
    Link: http://lkml.kernel.org/r/20230920081101.GA12096@linuxonhyperv3.guj3yctzbm1etfxqx2vob5hsef.xx.internal.cloudapp.net [1]
    Link: https://lkml.kernel.org/r/ZRE5VJozPZt9bRPy@dhcp22.suse.cz
    Fixes: 86327e8eb94c ("memcg: drop kmem.limit_in_bytes")
    Fixes: 58056f77502f ("memcg, kmem: further deprecate kmem.limit_in_bytes")
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jeremi Piotrowski <jpiotrowski@linux.microsoft.com>
    Cc: Muchun Song <muchun.song@linux.dev>
    Cc: Roman Gushchin <roman.gushchin@linux.dev>
    Cc: Tejun heo <tj@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8901b6c2e9bf7f9c18af447942468a51ba6bf5f
Author: Michal Hocko <mhocko@suse.com>
Date:   Tue Jul 4 13:52:40 2023 +0200

    memcg: drop kmem.limit_in_bytes
    
    commit 86327e8eb94c52eca4f93cfece2e29d1bf52acbf upstream.
    
    kmem.limit_in_bytes (v1 way to limit kernel memory usage) has been
    deprecated since 58056f77502f ("memcg, kmem: further deprecate
    kmem.limit_in_bytes") merged in 5.16.  We haven't heard about any serious
    users since then but it seems that the mere presence of the file is
    causing more harm thatn good.  We (SUSE) have had several bug reports from
    customers where Docker based containers started to fail because a write to
    kmem.limit_in_bytes has failed.
    
    This was unexpected because runc code only expects ENOENT (kmem disabled)
    or EBUSY (tasks already running within cgroup).  So a new error code was
    unexpected and the whole container startup failed.  This has been later
    addressed by
    https://github.com/opencontainers/runc/commit/52390d68040637dfc77f9fda6bbe70952423d380
    so current Docker runtimes do not suffer from the problem anymore.  There
    are still older version of Docker in use and likely hard to get rid of
    completely.
    
    Address this by wiping out the file completely and effectively get back to
    pre 4.5 era and CONFIG_MEMCG_KMEM=n configuration.
    
    I would recommend backporting to stable trees which have picked up
    58056f77502f ("memcg, kmem: further deprecate kmem.limit_in_bytes").
    
    [mhocko@suse.com: restore _KMEM switch case]
      Link: https://lkml.kernel.org/r/ZKe5wxdbvPi5Cwd7@dhcp22.suse.cz
    Link: https://lkml.kernel.org/r/20230704115240.14672-1-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Roman Gushchin <roman.gushchin@linux.dev>
    Cc: Muchun Song <muchun.song@linux.dev>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee335e0094add7fc2c7034e0534e1920d61d2078
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Thu Sep 14 16:10:15 2023 +0300

    drm/meson: fix memory leak on ->hpd_notify callback
    
    commit 099f0af9d98231bb74956ce92508e87cbcb896be upstream.
    
    The EDID returned by drm_bridge_get_edid() needs to be freed.
    
    Fixes: 0af5e0b41110 ("drm/meson: encoder_hdmi: switch to bridge DRM_BRIDGE_ATTACH_NO_CONNECTOR")
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Cc: Neil Armstrong <neil.armstrong@linaro.org>
    Cc: Kevin Hilman <khilman@baylibre.com>
    Cc: Jerome Brunet <jbrunet@baylibre.com>
    Cc: dri-devel@lists.freedesktop.org
    Cc: linux-amlogic@lists.infradead.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org # v5.17+
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230914131015.2472029-1-jani.nikula@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b60028c81e463b0930191a4fa2ba770ff6d40e3a
Author: YuBiao Wang <YuBiao.Wang@amd.com>
Date:   Fri Sep 15 10:47:50 2023 +0800

    drm/amdkfd: Use gpu_offset for user queue's wptr
    
    commit cc39f9ccb82426e576734b493e1777ea01b144a8 upstream.
    
    Directly use tbo's start address will miss the domain start offset. Need
    to use gpu_offset instead.
    
    Signed-off-by: YuBiao Wang <YuBiao.Wang@amd.com>
    Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48a22f13fb1b16dd56280f6fe8dccc8b68600af9
Author: Greg Ungerer <gerg@kernel.org>
Date:   Thu Sep 7 11:18:08 2023 +1000

    fs: binfmt_elf_efpic: fix personality for ELF-FDPIC
    
    commit 7c3151585730b7095287be8162b846d31e6eee61 upstream.
    
    The elf-fdpic loader hard sets the process personality to either
    PER_LINUX_FDPIC for true elf-fdpic binaries or to PER_LINUX for normal ELF
    binaries (in this case they would be constant displacement compiled with
    -pie for example).  The problem with that is that it will lose any other
    bits that may be in the ELF header personality (such as the "bug
    emulation" bits).
    
    On the ARM architecture the ADDR_LIMIT_32BIT flag is used to signify a
    normal 32bit binary - as opposed to a legacy 26bit address binary.  This
    matters since start_thread() will set the ARM CPSR register as required
    based on this flag.  If the elf-fdpic loader loses this bit the process
    will be mis-configured and crash out pretty quickly.
    
    Modify elf-fdpic loader personality setting so that it preserves the upper
    three bytes by using the SET_PERSONALITY macro to set it.  This macro in
    the generic case sets PER_LINUX and preserves the upper bytes.
    Architectures can override this for their specific use case, and ARM does
    exactly this.
    
    The problem shows up quite easily running under qemu using the ARM
    architecture, but not necessarily on all types of real ARM hardware.  If
    the underlying ARM processor does not support the legacy 26-bit addressing
    mode then everything will work as expected.
    
    Link: https://lkml.kernel.org/r/20230907011808.2985083-1-gerg@kernel.org
    Fixes: 1bde925d23547 ("fs/binfmt_elf_fdpic.c: provide NOMMU loader for regular ELF binaries")
    Signed-off-by: Greg Ungerer <gerg@kernel.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Christian Brauner <brauner@kernel.org>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Greg Ungerer <gerg@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69e61ee8ea8abd573e4b58df80a7f5249e18299c
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Jun 13 23:31:50 2023 +0200

    power: supply: ab8500: Set typing and props
    
    commit dc77721ea4aa1e8937e2436f230b5a69065cc508 upstream.
    
    I had the following weird phenomena on a mobile phone: while
    the capacity in /sys/class/power_supply/ab8500_fg/capacity
    would reflect the actual charge and capacity of the battery,
    only 1/3 of the value was shown on the battery status
    indicator and warnings for low battery appeared.
    
    It turns out that UPower, the Freedesktop power daemon,
    will average all the power supplies of type "battery" in
    /sys/class/power_supply/* if there is more than one battery.
    
    For the AB8500, there was "battery" ab8500_fg, ab8500_btemp
    and ab8500_chargalg. The latter two don't know anything
    about the battery, and should not be considered. They were
    however averaged and with the capacity of 0.
    
    Flag ab8500_btemp and ab8500_chargalg with type "unknown"
    so they are not averaged as batteries.
    
    Remove the technology prop from ab8500_btemp as well, all
    it does is snoop in on knowledge from another supply.
    
    After this the battery indicator shows the right value.
    
    Cc: Stefan Hansson <newbyte@disroot.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c038ebffbb4811ee7d13c208e685ced5da98f2f4
Author: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
Date:   Mon Jun 12 16:36:52 2023 +0200

    power: supply: rk817: Add missing module alias
    
    commit cbcdfbf5a6cd66e47e5ee5d49c4c5a27a07ba082 upstream.
    
    Similar to the rk817 codec alias that was missing, the rk817 charger
    driver is missing a module alias as well. This absence prevents the
    driver from autoprobing on OF systems when it is built as a module.
    
    Add the right MODULE_ALIAS to fix this.
    
    Fixes: 11cb8da0189b ("power: supply: Add charger driver for Rockchip RK817")
    Cc: stable@vger.kernel.org
    Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
    Reviewed-by: Chris Morgan <macromorgan@hotmail.com>
    Link: https://lore.kernel.org/r/20230612143651.959646-2-frattaroli.nicolas@gmail.com
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69dd84470b4deed45658f2717aef533ec4ceb43d
Author: Javier Pello <devel@otheo.eu>
Date:   Sat Sep 2 17:10:39 2023 +0200

    drm/i915/gt: Fix reservation address in ggtt_reserve_guc_top
    
    commit b7599d241778d0b10cdf7a5c755aa7db9b83250c upstream.
    
    There is an assertion in ggtt_reserve_guc_top that the global GTT
    is of size at least GUC_GGTT_TOP, which is not the case on a 32-bit
    platform; see commit 562d55d991b39ce376c492df2f7890fd6a541ffc
    ("drm/i915/bdw: Only use 2g GGTT for 32b platforms"). If GEM_BUG_ON
    is enabled, this triggers a BUG(); if GEM_BUG_ON is disabled, the
    subsequent reservation fails and the driver fails to initialise
    the device:
    
    i915 0000:00:02.0: [drm:i915_init_ggtt [i915]] Failed to reserve top of GGTT for GuC
    i915 0000:00:02.0: Device initialization failed (-28)
    i915 0000:00:02.0: Please file a bug on drm/i915; see https://gitlab.freedesktop.org/drm/intel/-/wikis/How-to-file-i915-bugs for details.
    i915: probe of 0000:00:02.0 failed with error -28
    
    Make the reservation at the top of the available space, whatever
    that is, instead of assuming that the top will be GUC_GGTT_TOP.
    
    Fixes: 911800765ef6 ("drm/i915/uc: Reserve upper range of GGTT")
    Link: https://gitlab.freedesktop.org/drm/intel/-/issues/9080
    Signed-off-by: Javier Pello <devel@otheo.eu>
    Reviewed-by: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
    Cc: Fernando Pacheco <fernando.pacheco@intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
    Cc: intel-gfx@lists.freedesktop.org
    Cc: stable@vger.kernel.org # v5.3+
    Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230902171039.2229126186d697dbcf62d6d8@otheo.eu
    (cherry picked from commit 0f3fa942d91165c2702577e9274d2ee1c7212afc)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60d2e06ad6e3bf4d630420be730ad014234b64f1
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Fri Sep 22 22:55:16 2023 +0200

    ata: libata-sata: increase PMP SRST timeout to 10s
    
    commit 753a4d531bc518633ea88ac0ed02b25a16823d51 upstream.
    
    On certain SATA controllers, softreset fails after wakeup from S2RAM with
    the message "softreset failed (1st FIS failed)", sometimes resulting in
    drives not being detected again. With the increased timeout, this issue
    is avoided. Instead, "softreset failed (device not ready)" is now
    logged 1-2 times; this later failure seems to cause fewer problems
    however, and the drives are detected reliably once they've spun up and
    the probe is retried.
    
    The issue was observed with the primary SATA controller of the QNAP
    TS-453B, which is an "Intel Corporation Celeron/Pentium Silver Processor
    SATA Controller [8086:31e3] (rev 06)" integrated in the Celeron J4125 CPU,
    and the following drives:
    
    - Seagate IronWolf ST12000VN0008
    - Seagate IronWolf ST8000NE0004
    
    The SATA controller seems to be more relevant to this issue than the
    drives, as the same drives are always detected reliably on the secondary
    SATA controller on the same board (an ASMedia 106x) without any "softreset
    failed" errors even without the increased timeout.
    
    Fixes: e7d3ef13d52a ("libata: change drive ready wait after hard reset to 5s")
    Cc: stable@vger.kernel.org
    Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 886f387db1e6ce38a478672e2c2cc2582401004d
Author: Damien Le Moal <dlemoal@kernel.org>
Date:   Fri Sep 8 20:04:52 2023 +0900

    ata: libata-core: Do not register PM operations for SAS ports
    
    commit 75e2bd5f1ede42a2bc88aa34b431e1ace8e0bea0 upstream.
    
    libsas does its own domain based power management of ports. For such
    ports, libata should not use a device type defining power management
    operations as executing these operations for suspend/resume in addition
    to libsas calls to ata_sas_port_suspend() and ata_sas_port_resume() is
    not necessary (and likely dangerous to do, even though problems are not
    seen currently).
    
    Introduce the new ata_port_sas_type device_type for ports managed by
    libsas. This new device type is used in ata_tport_add() and is defined
    without power management operations.
    
    Fixes: 2fcbdcb4c802 ("[SCSI] libata: export ata_port suspend/resume infrastructure for sas")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Tested-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: John Garry <john.g.garry@oracle.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cfbe6da83541bb262f4e9c9881283479439409e
Author: Damien Le Moal <dlemoal@kernel.org>
Date:   Sat Aug 26 13:07:36 2023 +0900

    ata: libata-core: Fix port and device removal
    
    commit 84d76529c650f887f1e18caee72d6f0589e1baf9 upstream.
    
    Whenever an ATA adapter driver is removed (e.g. rmmod),
    ata_port_detach() is called repeatedly for all the adapter ports to
    remove (unload) the devices attached to the port and delete the port
    device itself. Removing of devices is done using libata EH with the
    ATA_PFLAG_UNLOADING port flag set. This causes libata EH to execute
    ata_eh_unload() which disables all devices attached to the port.
    
    ata_port_detach() finishes by calling scsi_remove_host() to remove the
    scsi host associated with the port. This function will trigger the
    removal of all scsi devices attached to the host and in the case of
    disks, calls to sd_shutdown() which will flush the device write cache
    and stop the device. However, given that the devices were already
    disabled by ata_eh_unload(), the synchronize write cache command and
    start stop unit commands fail. E.g. running "rmmod ahci" with first
    removing sd_mod results in error messages like:
    
    ata13.00: disable device
    sd 0:0:0:0: [sda] Synchronizing SCSI cache
    sd 0:0:0:0: [sda] Synchronize Cache(10) failed: Result: hostbyte=DID_BAD_TARGET driverbyte=DRIVER_OK
    sd 0:0:0:0: [sda] Stopping disk
    sd 0:0:0:0: [sda] Start/Stop Unit failed: Result: hostbyte=DID_BAD_TARGET driverbyte=DRIVER_OK
    
    Fix this by removing all scsi devices of the ata devices connected to
    the port before scheduling libata EH to disable the ATA devices.
    
    Fixes: 720ba12620ee ("[PATCH] libata-hp: update unload-unplug")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Niklas Cassel <niklas.cassel@wdc.com>
    Tested-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b7aaf2058baf3aa1d5c82fd2016ef53b45f2553
Author: Damien Le Moal <dlemoal@kernel.org>
Date:   Mon Sep 4 20:38:13 2023 +0900

    ata: libata-core: Fix ata_port_request_pm() locking
    
    commit 3b8e0af4a7a331d1510e963b8fd77e2fca0a77f1 upstream.
    
    The function ata_port_request_pm() checks the port flag
    ATA_PFLAG_PM_PENDING and calls ata_port_wait_eh() if this flag is set to
    ensure that power management operations for a port are not scheduled
    simultaneously. However, this flag check is done without holding the
    port lock.
    
    Fix this by taking the port lock on entry to the function and checking
    the flag under this lock. The lock is released and re-taken if
    ata_port_wait_eh() needs to be called. The two WARN_ON() macros checking
    that the ATA_PFLAG_PM_PENDING flag was cleared are removed as the first
    call is racy and the second one done without holding the port lock.
    
    Fixes: 5ef41082912b ("ata: add ata port system PM callbacks")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Tested-by: Chia-Lin Kao (AceLan) <acelan.kao@canonical.com>
    Reviewed-by: Niklas Cassel <niklas.cassel@wdc.com>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f555a508087ab8210b4658120ac6413d6fe2b4c7
Author: Quang Le <quanglex97@gmail.com>
Date:   Fri Sep 29 00:44:13 2023 +0700

    fs/smb/client: Reset password pointer to NULL
    
    commit e6e43b8aa7cd3c3af686caf0c2e11819a886d705 upstream.
    
    Forget to reset ctx->password to NULL will lead to bug like double free
    
    Cc: stable@vger.kernel.org
    Cc: Willy Tarreau <w@1wt.eu>
    Reviewed-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Quang Le <quanglex97@gmail.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1983fd78701a04664951ca5d0852b587ad495626
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Sep 13 08:26:47 2023 +0300

    net: thunderbolt: Fix TCPv6 GSO checksum calculation
    
    commit e0b65f9b81fef180cf5f103adecbe5505c961153 upstream.
    
    Alex reported that running ssh over IPv6 does not work with
    Thunderbolt/USB4 networking driver. The reason for that is that driver
    should call skb_is_gso() before calling skb_is_gso_v6(), and it should
    not return false after calculates the checksum successfully. This probably
    was a copy paste error from the original driver where it was done properly.
    
    Reported-by: Alex Balcanquall <alex@alexbal.com>
    Fixes: e69b6c02b4c3 ("net: Add support for networking over Thunderbolt cable")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fb56e82d939eb949bfa6b142cf54b394b7514a6
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Fri Sep 15 10:34:28 2023 -0700

    bpf: Fix BTF_ID symbol generation collision in tools/
    
    commit c0bb9fb0e52a64601d38b3739b729d9138d4c8a1 upstream.
    
    Marcus and Satya reported an issue where BTF_ID macro generates same
    symbol in separate objects and that breaks final vmlinux link.
    
      ld.lld: error: ld-temp.o <inline asm>:14577:1: symbol
      '__BTF_ID__struct__cgroup__624' is already defined
    
    This can be triggered under specific configs when __COUNTER__ happens to
    be the same for the same symbol in two different translation units,
    which is already quite unlikely to happen.
    
    Add __LINE__ number suffix to make BTF_ID symbol more unique, which is
    not a complete fix, but it would help for now and meanwhile we can work
    on better solution as suggested by Andrii.
    
    Cc: stable@vger.kernel.org
    Reported-by: Satya Durga Srinivasu Prabhala <quic_satyap@quicinc.com>
    Reported-by: Marcus Seyfarth <m.seyfarth@gmail.com>
    Closes: https://github.com/ClangBuiltLinux/linux/issues/1913
    Debugged-by: Nathan Chancellor <nathan@kernel.org>
    Co-developed-by: Jiri Olsa <jolsa@kernel.org>
    Link: https://lore.kernel.org/bpf/CAEf4Bzb5KQ2_LmhN769ifMeSJaWfebccUasQOfQKaOd0nQ51tw@mail.gmail.com/
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lore.kernel.org/r/20230915-bpf_collision-v3-2-263fc519c21f@google.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f1e3e02777b2ccc915da4db681133eb585a7a3b
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Fri Sep 15 10:34:27 2023 -0700

    bpf: Fix BTF_ID symbol generation collision
    
    commit 8f908db77782630c45ba29dac35c434b5ce0b730 upstream.
    
    Marcus and Satya reported an issue where BTF_ID macro generates same
    symbol in separate objects and that breaks final vmlinux link.
    
    ld.lld: error: ld-temp.o <inline asm>:14577:1: symbol
    '__BTF_ID__struct__cgroup__624' is already defined
    
    This can be triggered under specific configs when __COUNTER__ happens to
    be the same for the same symbol in two different translation units,
    which is already quite unlikely to happen.
    
    Add __LINE__ number suffix to make BTF_ID symbol more unique, which is
    not a complete fix, but it would help for now and meanwhile we can work
    on better solution as suggested by Andrii.
    
    Cc: stable@vger.kernel.org
    Reported-by: Satya Durga Srinivasu Prabhala <quic_satyap@quicinc.com>
    Reported-by: Marcus Seyfarth <m.seyfarth@gmail.com>
    Closes: https://github.com/ClangBuiltLinux/linux/issues/1913
    Debugged-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/bpf/CAEf4Bzb5KQ2_LmhN769ifMeSJaWfebccUasQOfQKaOd0nQ51tw@mail.gmail.com/
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/r/20230915-bpf_collision-v3-1-263fc519c21f@google.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1041cab47260374f389de1e81dc9a4a3b2e4859
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Thu Sep 7 22:06:51 2023 +0200

    bpf: Add override check to kprobe multi link attach
    
    commit 41bc46c12a8053a1b3279a379bd6b5e87b045b85 upstream.
    
    Currently the multi_kprobe link attach does not check error
    injection list for programs with bpf_override_return helper
    and allows them to attach anywhere. Adding the missing check.
    
    Fixes: 0dcac2725406 ("bpf: Add multi kprobe link")
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Reviewed-by: Alan Maguire <alan.maguire@oracle.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20230907200652.926951-1-jolsa@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09635bf4cdd4adf2160198a6041bcc7ca46c0558
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Thu Jul 20 17:46:54 2023 +0000

    media: uvcvideo: Fix OOB read
    
    commit 41ebaa5e0eebea4c3bac96b72f9f8ae0d77c0bdb upstream.
    
    If the index provided by the user is bigger than the mask size, we might do
    an out of bound read.
    
    CC: stable@kernel.org
    Fixes: 40140eda661e ("media: uvcvideo: Implement mask for V4L2_CTRL_TYPE_MENU")
    Reported-by: Zubin Mithra <zsm@chromium.org>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Reviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6a749e4cab2bb51950baf0dac87822db8833bc9
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Sep 18 10:34:51 2023 -0400

    btrfs: properly report 0 avail for very full file systems
    
    commit 58bfe2ccec5f9f137b41dd38f335290dcc13cd5c upstream.
    
    A user reported some issues with smaller file systems that get very
    full.  While investigating this issue I noticed that df wasn't showing
    100% full, despite having 0 chunk space and having < 1MiB of available
    metadata space.
    
    This turns out to be an overflow issue, we're doing:
    
      total_available_metadata_space - SZ_4M < global_block_rsv_size
    
    to determine if there's not enough space to make metadata allocations,
    which overflows if total_available_metadata_space is < 4M.  Fix this by
    checking to see if our available space is greater than the 4M threshold.
    This makes df properly report 100% usage on the file system.
    
    CC: stable@vger.kernel.org # 4.14+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3ad8874541d671d4ec21581196bd3f38973805b
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Fri Sep 29 18:01:13 2023 -0400

    ring-buffer: Update "shortest_full" in polling
    
    commit 1e0cb399c7653462d9dadf8ab9425337c355d358 upstream.
    
    It was discovered that the ring buffer polling was incorrectly stating
    that read would not block, but that's because polling did not take into
    account that reads will block if the "buffer-percent" was set. Instead,
    the ring buffer polling would say reads would not block if there was any
    data in the ring buffer. This was incorrect behavior from a user space
    point of view. This was fixed by commit 42fb0a1e84ff by having the polling
    code check if the ring buffer had more data than what the user specified
    "buffer percent" had.
    
    The problem now is that the polling code did not register itself to the
    writer that it wanted to wait for a specific "full" value of the ring
    buffer. The result was that the writer would wake the polling waiter
    whenever there was a new event. The polling waiter would then wake up, see
    that there's not enough data in the ring buffer to notify user space and
    then go back to sleep. The next event would wake it up again.
    
    Before the polling fix was added, the code would wake up around 100 times
    for a hackbench 30 benchmark. After the "fix", due to the constant waking
    of the writer, it would wake up over 11,0000 times! It would never leave
    the kernel, so the user space behavior was still "correct", but this
    definitely is not the desired effect.
    
    To fix this, have the polling code add what it's waiting for to the
    "shortest_full" variable, to tell the writer not to wake it up if the
    buffer is not as full as it expects to be.
    
    Note, after this fix, it appears that the waiter is now woken up around 2x
    the times it was before (~200). This is a tremendous improvement from the
    11,000 times, but I will need to spend some time to see why polling is
    more aggressive in its wakeups than the read blocking code.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230929180113.01c2cae3@rorschach.local.home
    
    Cc: stable@vger.kernel.org
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Fixes: 42fb0a1e84ff ("tracing/ring-buffer: Have polling block on watermark")
    Reported-by: Julia Lawall <julia.lawall@inria.fr>
    Tested-by: Julia Lawall <julia.lawall@inria.fr>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bacdb914a99183d270a422fcfb16f46679e3a84
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Thu Sep 14 11:21:39 2023 -0400

    mm: memcontrol: fix GFP_NOFS recursion in memory.high enforcement
    
    commit 9ea9cb00a82b53ec39630eac718776d37e41b35a upstream.
    
    Breno and Josef report a deadlock scenario from cgroup reclaim
    re-entering the filesystem:
    
    [  361.546690] ======================================================
    [  361.559210] WARNING: possible circular locking dependency detected
    [  361.571703] 6.5.0-0_fbk700_debug_rc0_kbuilder_13159_gbf787a128001 #1 Tainted: G S          E
    [  361.589704] ------------------------------------------------------
    [  361.602277] find/9315 is trying to acquire lock:
    [  361.611625] ffff88837ba140c0 (&delayed_node->mutex){+.+.}-{4:4}, at: __btrfs_release_delayed_node+0x68/0x4f0
    [  361.631437]
    [  361.631437] but task is already holding lock:
    [  361.643243] ffff8881765b8678 (btrfs-tree-01){++++}-{4:4}, at: btrfs_tree_read_lock+0x1e/0x40
    
    [  362.904457]  mutex_lock_nested+0x1c/0x30
    [  362.912414]  __btrfs_release_delayed_node+0x68/0x4f0
    [  362.922460]  btrfs_evict_inode+0x301/0x770
    [  362.982726]  evict+0x17c/0x380
    [  362.988944]  prune_icache_sb+0x100/0x1d0
    [  363.005559]  super_cache_scan+0x1f8/0x260
    [  363.013695]  do_shrink_slab+0x2a2/0x540
    [  363.021489]  shrink_slab_memcg+0x237/0x3d0
    [  363.050606]  shrink_slab+0xa7/0x240
    [  363.083382]  shrink_node_memcgs+0x262/0x3b0
    [  363.091870]  shrink_node+0x1a4/0x720
    [  363.099150]  shrink_zones+0x1f6/0x5d0
    [  363.148798]  do_try_to_free_pages+0x19b/0x5e0
    [  363.157633]  try_to_free_mem_cgroup_pages+0x266/0x370
    [  363.190575]  reclaim_high+0x16f/0x1f0
    [  363.208409]  mem_cgroup_handle_over_high+0x10b/0x270
    [  363.246678]  try_charge_memcg+0xaf2/0xc70
    [  363.304151]  charge_memcg+0xf0/0x350
    [  363.320070]  __mem_cgroup_charge+0x28/0x40
    [  363.328371]  __filemap_add_folio+0x870/0xd50
    [  363.371303]  filemap_add_folio+0xdd/0x310
    [  363.399696]  __filemap_get_folio+0x2fc/0x7d0
    [  363.419086]  pagecache_get_page+0xe/0x30
    [  363.427048]  alloc_extent_buffer+0x1cd/0x6a0
    [  363.435704]  read_tree_block+0x43/0xc0
    [  363.443316]  read_block_for_search+0x361/0x510
    [  363.466690]  btrfs_search_slot+0xc8c/0x1520
    
    This is caused by the mem_cgroup_handle_over_high() not respecting the
    gfp_mask of the allocation context.  We used to only call this function on
    resume to userspace, where no locks were held.  But c9afe31ec443 ("memcg:
    synchronously enforce memory.high for large overcharges") added a call
    from the allocation context without considering the gfp.
    
    Link: https://lkml.kernel.org/r/20230914152139.100822-1-hannes@cmpxchg.org
    Fixes: c9afe31ec443 ("memcg: synchronously enforce memory.high for large overcharges")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reported-by: Breno Leitao <leitao@debian.org>
    Reported-by: Josef Bacik <josef@toxicpanda.com>
    Acked-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Roman Gushchin <roman.gushchin@linux.dev>
    Cc: Muchun Song <songmuchun@bytedance.com>
    Cc: <stable@vger.kernel.org>    [5.17+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5569bb187521432f509b69dda7d29f78b2d38b0
Author: Rafael Aquini <aquini@redhat.com>
Date:   Fri Sep 8 19:06:49 2023 -0400

    mm/slab_common: fix slab_caches list corruption after kmem_cache_destroy()
    
    commit 46a9ea6681907a3be6b6b0d43776dccc62cad6cf upstream.
    
    After the commit in Fixes:, if a module that created a slab cache does not
    release all of its allocated objects before destroying the cache (at rmmod
    time), we might end up releasing the kmem_cache object without removing it
    from the slab_caches list thus corrupting the list as kmem_cache_destroy()
    ignores the return value from shutdown_cache(), which in turn never removes
    the kmem_cache object from slabs_list in case __kmem_cache_shutdown() fails
    to release all of the cache's slabs.
    
    This is easily observable on a kernel built with CONFIG_DEBUG_LIST=y
    as after that ill release the system will immediately trip on list_add,
    or list_del, assertions similar to the one shown below as soon as another
    kmem_cache gets created, or destroyed:
    
      [ 1041.213632] list_del corruption. next->prev should be ffff89f596fb5768, but was 52f1e5016aeee75d. (next=ffff89f595a1b268)
      [ 1041.219165] ------------[ cut here ]------------
      [ 1041.221517] kernel BUG at lib/list_debug.c:62!
      [ 1041.223452] invalid opcode: 0000 [#1] PREEMPT SMP PTI
      [ 1041.225408] CPU: 2 PID: 1852 Comm: rmmod Kdump: loaded Tainted: G    B   W  OE      6.5.0 #15
      [ 1041.228244] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS edk2-20230524-3.fc37 05/24/2023
      [ 1041.231212] RIP: 0010:__list_del_entry_valid+0xae/0xb0
    
    Another quick way to trigger this issue, in a kernel with CONFIG_SLUB=y,
    is to set slub_debug to poison the released objects and then just run
    cat /proc/slabinfo after removing the module that leaks slab objects,
    in which case the kernel will panic:
    
      [   50.954843] general protection fault, probably for non-canonical address 0xa56b6b6b6b6b6b8b: 0000 [#1] PREEMPT SMP PTI
      [   50.961545] CPU: 2 PID: 1495 Comm: cat Kdump: loaded Tainted: G    B   W  OE      6.5.0 #15
      [   50.966808] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS edk2-20230524-3.fc37 05/24/2023
      [   50.972663] RIP: 0010:get_slabinfo+0x42/0xf0
    
    This patch fixes this issue by properly checking shutdown_cache()'s
    return value before taking the kmem_cache_release() branch.
    
    Fixes: 0495e337b703 ("mm/slab_common: Deleting kobject in kmem_cache_destroy() without holding slab_mutex/cpu_hotplug_lock")
    Signed-off-by: Rafael Aquini <aquini@redhat.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a4fe81a8644b717d57d81ce5849e16583b13fe8
Author: Jinjie Ruan <ruanjinjie@huawei.com>
Date:   Mon Sep 25 15:20:59 2023 +0800

    mm/damon/vaddr-test: fix memory leak in damon_do_test_apply_three_regions()
    
    commit 45120b15743fa7c0aa53d5db6dfb4c8f87be4abd upstream.
    
    When CONFIG_DAMON_VADDR_KUNIT_TEST=y and making CONFIG_DEBUG_KMEMLEAK=y
    and CONFIG_DEBUG_KMEMLEAK_AUTO_SCAN=y, the below memory leak is detected.
    
    Since commit 9f86d624292c ("mm/damon/vaddr-test: remove unnecessary
    variables"), the damon_destroy_ctx() is removed, but still call
    damon_new_target() and damon_new_region(), the damon_region which is
    allocated by kmem_cache_alloc() in damon_new_region() and the damon_target
    which is allocated by kmalloc in damon_new_target() are not freed.  And
    the damon_region which is allocated in damon_new_region() in
    damon_set_regions() is also not freed.
    
    So use damon_destroy_target to free all the damon_regions and damon_target.
    
        unreferenced object 0xffff888107c9a940 (size 64):
          comm "kunit_try_catch", pid 1069, jiffies 4294670592 (age 732.761s)
          hex dump (first 32 bytes):
            00 00 00 00 00 00 00 00 06 00 00 00 6b 6b 6b 6b  ............kkkk
            60 c7 9c 07 81 88 ff ff f8 cb 9c 07 81 88 ff ff  `...............
          backtrace:
            [<ffffffff817e0167>] kmalloc_trace+0x27/0xa0
            [<ffffffff819c11cf>] damon_new_target+0x3f/0x1b0
            [<ffffffff819c7d55>] damon_do_test_apply_three_regions.constprop.0+0x95/0x3e0
            [<ffffffff819c82be>] damon_test_apply_three_regions1+0x21e/0x260
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff8881079cc740 (size 56):
          comm "kunit_try_catch", pid 1069, jiffies 4294670592 (age 732.761s)
          hex dump (first 32 bytes):
            05 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
            6b 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 6b 6b 6b 6b  kkkkkkkk....kkkk
          backtrace:
            [<ffffffff819bc492>] damon_new_region+0x22/0x1c0
            [<ffffffff819c7d91>] damon_do_test_apply_three_regions.constprop.0+0xd1/0x3e0
            [<ffffffff819c82be>] damon_test_apply_three_regions1+0x21e/0x260
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff888107c9ac40 (size 64):
          comm "kunit_try_catch", pid 1071, jiffies 4294670595 (age 732.843s)
          hex dump (first 32 bytes):
            00 00 00 00 00 00 00 00 06 00 00 00 6b 6b 6b 6b  ............kkkk
            a0 cc 9c 07 81 88 ff ff 78 a1 76 07 81 88 ff ff  ........x.v.....
          backtrace:
            [<ffffffff817e0167>] kmalloc_trace+0x27/0xa0
            [<ffffffff819c11cf>] damon_new_target+0x3f/0x1b0
            [<ffffffff819c7d55>] damon_do_test_apply_three_regions.constprop.0+0x95/0x3e0
            [<ffffffff819c851e>] damon_test_apply_three_regions2+0x21e/0x260
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff8881079ccc80 (size 56):
          comm "kunit_try_catch", pid 1071, jiffies 4294670595 (age 732.843s)
          hex dump (first 32 bytes):
            05 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
            6b 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 6b 6b 6b 6b  kkkkkkkk....kkkk
          backtrace:
            [<ffffffff819bc492>] damon_new_region+0x22/0x1c0
            [<ffffffff819c7d91>] damon_do_test_apply_three_regions.constprop.0+0xd1/0x3e0
            [<ffffffff819c851e>] damon_test_apply_three_regions2+0x21e/0x260
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff888107c9af40 (size 64):
          comm "kunit_try_catch", pid 1073, jiffies 4294670597 (age 733.011s)
          hex dump (first 32 bytes):
            00 00 00 00 00 00 00 00 06 00 00 00 6b 6b 6b 6b  ............kkkk
            20 a2 76 07 81 88 ff ff b8 a6 76 07 81 88 ff ff   .v.......v.....
          backtrace:
            [<ffffffff817e0167>] kmalloc_trace+0x27/0xa0
            [<ffffffff819c11cf>] damon_new_target+0x3f/0x1b0
            [<ffffffff819c7d55>] damon_do_test_apply_three_regions.constprop.0+0x95/0x3e0
            [<ffffffff819c877e>] damon_test_apply_three_regions3+0x21e/0x260
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff88810776a200 (size 56):
          comm "kunit_try_catch", pid 1073, jiffies 4294670597 (age 733.011s)
          hex dump (first 32 bytes):
            05 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
            6b 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 6b 6b 6b 6b  kkkkkkkk....kkkk
          backtrace:
            [<ffffffff819bc492>] damon_new_region+0x22/0x1c0
            [<ffffffff819c7d91>] damon_do_test_apply_three_regions.constprop.0+0xd1/0x3e0
            [<ffffffff819c877e>] damon_test_apply_three_regions3+0x21e/0x260
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff88810776a740 (size 56):
          comm "kunit_try_catch", pid 1073, jiffies 4294670597 (age 733.025s)
          hex dump (first 32 bytes):
            3d 00 00 00 00 00 00 00 3f 00 00 00 00 00 00 00  =.......?.......
            6b 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 6b 6b 6b 6b  kkkkkkkk....kkkk
          backtrace:
            [<ffffffff819bc492>] damon_new_region+0x22/0x1c0
            [<ffffffff819bfcc2>] damon_set_regions+0x4c2/0x8e0
            [<ffffffff819c7dbb>] damon_do_test_apply_three_regions.constprop.0+0xfb/0x3e0
            [<ffffffff819c877e>] damon_test_apply_three_regions3+0x21e/0x260
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff888108038240 (size 64):
          comm "kunit_try_catch", pid 1075, jiffies 4294670600 (age 733.022s)
          hex dump (first 32 bytes):
            00 00 00 00 00 00 00 00 03 00 00 00 6b 6b 6b 6b  ............kkkk
            48 ad 76 07 81 88 ff ff 98 ae 76 07 81 88 ff ff  H.v.......v.....
          backtrace:
            [<ffffffff817e0167>] kmalloc_trace+0x27/0xa0
            [<ffffffff819c11cf>] damon_new_target+0x3f/0x1b0
            [<ffffffff819c7d55>] damon_do_test_apply_three_regions.constprop.0+0x95/0x3e0
            [<ffffffff819c898d>] damon_test_apply_three_regions4+0x1cd/0x210
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
        unreferenced object 0xffff88810776ad28 (size 56):
          comm "kunit_try_catch", pid 1075, jiffies 4294670600 (age 733.022s)
          hex dump (first 32 bytes):
            05 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
            6b 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 6b 6b 6b 6b  kkkkkkkk....kkkk
          backtrace:
            [<ffffffff819bc492>] damon_new_region+0x22/0x1c0
            [<ffffffff819bfcc2>] damon_set_regions+0x4c2/0x8e0
            [<ffffffff819c7dbb>] damon_do_test_apply_three_regions.constprop.0+0xfb/0x3e0
            [<ffffffff819c898d>] damon_test_apply_three_regions4+0x1cd/0x210
            [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a/0x90
            [<ffffffff81237cf6>] kthread+0x2b6/0x380
            [<ffffffff81097add>] ret_from_fork+0x2d/0x70
            [<ffffffff81003791>] ret_from_fork_asm+0x11/0x20
    
    Link: https://lkml.kernel.org/r/20230925072100.3725620-1-ruanjinjie@huawei.com
    Fixes: 9f86d624292c ("mm/damon/vaddr-test: remove unnecessary variables")
    Signed-off-by: Jinjie Ruan <ruanjinjie@huawei.com>
    Reviewed-by: SeongJae Park <sj@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68a63a077e02dba22ba62b53e6db1241bbffb116
Author: Mikko Rapeli <mikko.rapeli@linaro.org>
Date:   Thu Sep 21 17:57:22 2023 +0300

    arm64: defconfig: remove CONFIG_COMMON_CLK_NPCM8XX=y
    
    commit 7d3e4e9d3bde9c8bd8914d47ddaa90e0d0ffbcab upstream.
    
    There is no code for this config option and enabling it in defconfig
    causes warnings from tools which are detecting unused and obsolete
    kernel config flags since the flag will be completely missing from
    effective build config after "make olddefconfig".
    
    Fixes yocto kernel recipe build time warning:
    
    WARNING: [kernel config]: This BSP contains fragments with warnings:
    ...
    [INFO]: the following symbols were not found in the active
    configuration:
         - CONFIG_COMMON_CLK_NPCM8XX
    
    The flag was added with commit 45472f1e5348c7b755b4912f2f529ec81cea044b
    v5.19-rc4-15-g45472f1e5348 so 6.1 and 6.4 stable kernel trees are
    affected.
    
    Fixes: 45472f1e5348c7b755b4912f2f529ec81cea044b ("arm64: defconfig: Add Nuvoton NPCM family support")
    Cc: stable@kernel.org
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Bjorn Andersson <quic_bjorande@quicinc.com>
    Cc: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Cc: Konrad Dybcio <konrad.dybcio@linaro.org>
    Cc: Neil Armstrong <neil.armstrong@linaro.org>
    Cc: Tomer Maimon <tmaimon77@gmail.com>
    Cc: Bruce Ashfield <bruce.ashfield@gmail.com>
    Cc: Jon Mason <jon.mason@arm.com>
    Cc: Jon Mason <jdmason@kudzu.us>
    Cc: Ross Burton <ross@burtonini.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mikko Rapeli <mikko.rapeli@linaro.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b29756aefe03ac0439147f48a2a11d0a0dccee83
Author: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
Date:   Mon Sep 11 15:03:24 2023 +0200

    drm/tests: Fix incorrect argument in drm_test_mm_insert_range
    
    commit 2ba157983974ae1b6aaef7d4953812020d6f1eb5 upstream.
    
    While drm_mm test was converted form igt selftest to kunit, unexpected
    value of "end" argument equal "start" was introduced to one of calls to a
    function that executes the drm_test_mm_insert_range for specific start/end
    pair of arguments.  As a consequence, DRM_MM_BUG_ON(end <= start) is
    triggered.  Fix it by restoring the original value.
    
    Fixes: fc8d29e298cf ("drm: selftest: convert drm_mm selftest to KUnit")
    Signed-off-by: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
    Cc: "MaÃ­ra Canal" <mairacanal@riseup.net>
    Cc: Arthur Grillo <arthurgrillo@riseup.net>
    Cc: Javier Martinez Canillas <javierm@redhat.com>
    Cc: Daniel Latypov <dlatypov@google.com>
    Cc: stable@vger.kernel.org # v6.1+
    Reviewed-by: MaÃ­ra Canal <mairacanal@riseup.net>
    Signed-off-by: MaÃ­ra Canal <mairacanal@riseup.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230911130323.7037-2-janusz.krzysztofik@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a90eafbf165f71e2b51a2a85be6d2f8cc895a028
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Tue Sep 12 12:44:06 2023 +0200

    timers: Tag (hr)timer softirq as hotplug safe
    
    commit 1a6a464774947920dcedcf7409be62495c7cedd0 upstream.
    
    Specific stress involving frequent CPU-hotplug operations, such as
    running rcutorture for example, may trigger the following message:
    
      NOHZ tick-stop error: local softirq work is pending, handler #02!!!"
    
    This happens in the CPU-down hotplug process, after
    CPUHP_AP_SMPBOOT_THREADS whose teardown callback parks ksoftirqd, and
    before the target CPU shuts down through CPUHP_AP_IDLE_DEAD. In this
    fragile intermediate state, softirqs waiting for threaded handling may be
    forever ignored and eventually reported by the idle task as in the above
    example.
    
    However some vectors are known to be safe as long as the corresponding
    subsystems have teardown callbacks handling the migration of their
    events. The above error message reports pending timers softirq although
    this vector can be considered as hotplug safe because the
    CPUHP_TIMERS_PREPARE teardown callback performs the necessary migration
    of timers after the death of the CPU. Hrtimers also have a similar
    hotplug handling.
    
    Therefore this error message, as far as (hr-)timers are concerned, can
    be considered spurious and the relevant softirq vectors can be marked as
    hotplug safe.
    
    Fixes: 0345691b24c0 ("tick/rcu: Stop allowing RCU_SOFTIRQ in idle")
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230912104406.312185-6-frederic@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f32340c70eb96372321b9084840e76dcdc1a455a
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sun Sep 17 19:26:46 2023 -0400

    Revert "SUNRPC dont update timeout value on connection reset"
    
    commit a275ab62606bcd894ddff09460f7d253828313dc upstream.
    
    This reverts commit 88428cc4ae7abcc879295fbb19373dd76aad2bdd.
    
    The problem this commit is intended to fix was comprehensively fixed
    in commit 7de62bc09fe6 ("SUNRPC dont update timeout value on connection
    reset").
    Since then, this commit has been preventing the correct timeout of soft
    mounted requests.
    
    Cc: stable@vger.kernel.org # 5.9.x: 09252177d5f9: SUNRPC: Handle major timeout in xprt_adjust_timeout()
    Cc: stable@vger.kernel.org # 5.9.x: 7de62bc09fe6: SUNRPC dont update timeout value on connection reset
    Cc: stable@vger.kernel.org # 5.9.x
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e4c03d530d8368799a6cd3473c4e44ff2e36451
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Aug 10 23:59:03 2023 +0200

    netfilter: nf_tables: fix kdoc warnings after gc rework
    
    commit 08713cb006b6f07434f276c5ee214fb20c7fd965 upstream.
    
    Jakub Kicinski says:
      We've got some new kdoc warnings here:
      net/netfilter/nft_set_pipapo.c:1557: warning: Function parameter or member '_set' not described in 'pipapo_gc'
      net/netfilter/nft_set_pipapo.c:1557: warning: Excess function parameter 'set' description in 'pipapo_gc'
      include/net/netfilter/nf_tables.h:577: warning: Function parameter or member 'dead' not described in 'nft_set'
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Fixes: f6c383b8c31a ("netfilter: nf_tables: adapt set backend to use GC transaction API")
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Closes: https://lore.kernel.org/netdev/20230810104638.746e46f1@kernel.org/
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49903f70d728ee516bcaf620354553d0788103ab
Author: Joel Fernandes (Google) <joel@joelfernandes.org>
Date:   Sat Sep 23 01:14:08 2023 +0000

    sched/rt: Fix live lock between select_fallback_rq() and RT push
    
    commit fc09027786c900368de98d03d40af058bcb01ad9 upstream.
    
    During RCU-boost testing with the TREE03 rcutorture config, I found that
    after a few hours, the machine locks up.
    
    On tracing, I found that there is a live lock happening between 2 CPUs.
    One CPU has an RT task running, while another CPU is being offlined
    which also has an RT task running.  During this offlining, all threads
    are migrated. The migration thread is repeatedly scheduled to migrate
    actively running tasks on the CPU being offlined. This results in a live
    lock because select_fallback_rq() keeps picking the CPU that an RT task
    is already running on only to get pushed back to the CPU being offlined.
    
    It is anyway pointless to pick CPUs for pushing tasks to if they are
    being offlined only to get migrated away to somewhere else. This could
    also add unwanted latency to this task.
    
    Fix these issues by not selecting CPUs in RT if they are not 'active'
    for scheduling, using the cpu_active_mask. Other parts in core.c already
    use cpu_active_mask to prevent tasks from being put on CPUs going
    offline.
    
    With this fix I ran the tests for days and could not reproduce the
    hang. Without the patch, I hit it in a few hours.
    
    Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Tested-by: Paul E. McKenney <paulmck@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230923011409.3522762-1-joel@joelfernandes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 787256ec9b443f2a77d9ee06a8385f1bd1aedada
Author: Liam R. Howlett <Liam.Howlett@oracle.com>
Date:   Fri Sep 15 13:44:44 2023 -0400

    kernel/sched: Modify initial boot task idle setup
    
    commit cff9b2332ab762b7e0586c793c431a8f2ea4db04 upstream.
    
    Initial booting is setting the task flag to idle (PF_IDLE) by the call
    path sched_init() -> init_idle().  Having the task idle and calling
    call_rcu() in kernel/rcu/tiny.c means that TIF_NEED_RESCHED will be
    set.  Subsequent calls to any cond_resched() will enable IRQs,
    potentially earlier than the IRQ setup has completed.  Recent changes
    have caused just this scenario and IRQs have been enabled early.
    
    This causes a warning later in start_kernel() as interrupts are enabled
    before they are fully set up.
    
    Fix this issue by setting the PF_IDLE flag later in the boot sequence.
    
    Although the boot task was marked as idle since (at least) d80e4fda576d,
    I am not sure that it is wrong to do so.  The forced context-switch on
    idle task was introduced in the tiny_rcu update, so I'm going to claim
    this fixes 5f6130fa52ee.
    
    Fixes: 5f6130fa52ee ("tiny_rcu: Directly force QS when call_rcu_[bh|sched]() on idle_task")
    Signed-off-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/linux-mm/CAMuHMdWpvpWoDa=Ox-do92czYRvkok6_x6pYUH+ZouMcJbXy+Q@mail.gmail.com/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afa2bbd682c7704b78104ec9fea8dd71fd7dbd1c
Author: August Wikerfors <git@augustwikerfors.se>
Date:   Mon Sep 11 23:34:09 2023 +0200

    ASoC: amd: yc: Fix non-functional mic on Lenovo 82QF and 82UG
    
    commit 1263cc0f414d212129c0f1289b49b7df77f92084 upstream.
    
    Like the Lenovo 82TL and 82V2, the Lenovo 82QF (Yoga 7 14ARB7) and 82UG
    (Legion S7 16ARHA7) both need a quirk entry for the internal microphone to
    function. Commit c008323fe361 ("ASoC: amd: yc: Fix a non-functional mic on
    Lenovo 82SJ") restricted the quirk that previously matched "82" to "82V2",
    breaking microphone functionality on these devices. Fix this by adding
    specific quirks for these models, as was done for the Lenovo 82TL.
    
    Fixes: c008323fe361 ("ASoC: amd: yc: Fix a non-functional mic on Lenovo 82SJ")
    Closes: https://github.com/tomsom/yoga-linux/issues/51
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=208555#c780
    Cc: stable@vger.kernel.org
    Signed-off-by: August Wikerfors <git@augustwikerfors.se>
    Link: https://lore.kernel.org/r/20230911213409.6106-1-git@augustwikerfors.se
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 829ff08be5663bb70aa8b21c47e514f0f53df5e1
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Thu Sep 14 23:08:44 2023 +0200

    i2c: i801: unregister tco_pdev in i801_probe() error path
    
    commit 3914784553f68c931fc666dbe7e86fe881aada38 upstream.
    
    We have to unregister tco_pdev also if i2c_add_adapter() fails.
    
    Fixes: 9424693035a5 ("i2c: i801: Create iTCO device on newer Intel PCHs")
    Cc: stable@vger.kernel.org
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75c307d9f2fbb949cb8713b8f659fec5f21f2c34
Author: Jens Axboe <axboe@kernel.dk>
Date:   Thu Sep 28 09:23:27 2023 -0600

    io_uring/fs: remove sqe->rw_flags checking from LINKAT
    
    commit a52d4f657568d6458e873f74a9602e022afe666f upstream.
    
    This is unionized with the actual link flags, so they can of course be
    set and they will be evaluated further down. If not we fail any LINKAT
    that has to set option flags.
    
    Fixes: cf30da90bc3a ("io_uring: add support for IORING_OP_LINKAT")
    Cc: stable@vger.kernel.org
    Reported-by: Thomas Leonard <talex5@gmail.com>
    Link: https://github.com/axboe/liburing/issues/955
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06fba8a8dea22c2260785cafd74e6d42ac38711a
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Mon Sep 18 22:24:50 2023 +0200

    ata: libata-scsi: ignore reserved bits for REPORT SUPPORTED OPERATION CODES
    
    commit 3ef600923521616ebe192c893468ad0424de2afb upstream.
    
    For REPORT SUPPORTED OPERATION CODES command, the service action field is
    defined as bits 0-4 in the second byte in the CDB. Bits 5-7 in the second
    byte are reserved.
    
    Only look at the service action field in the second byte when determining
    if the MAINTENANCE IN opcode is a REPORT SUPPORTED OPERATION CODES command.
    
    This matches how we only look at the service action field in the second
    byte when determining if the SERVICE ACTION IN(16) opcode is a READ
    CAPACITY(16) command (reserved bits 5-7 in the second byte are ignored).
    
    Fixes: 7b2030942859 ("libata: Add support for SCT Write Same")
    Cc: stable@vger.kernel.org
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 476fd029e7008722da9e2326af30f69cd187417a
Author: Damien Le Moal <dlemoal@kernel.org>
Date:   Fri Aug 25 15:41:14 2023 +0900

    ata: libata-scsi: link ata port and scsi device
    
    commit fb99ef17865035a6657786d4b2af11a27ba23f9b upstream.
    
    There is no direct device ancestry defined between an ata_device and
    its scsi device which prevents the power management code from correctly
    ordering suspend and resume operations. Create such ancestry with the
    ata device as the parent to ensure that the scsi device (child) is
    suspended before the ata device and that resume handles the ata device
    before the scsi device.
    
    The parent-child (supplier-consumer) relationship is established between
    the ata_port (parent) and the scsi device (child) with the function
    device_add_link(). The parent used is not the ata_device as the PM
    operations are defined per port and the status of all devices connected
    through that port is controlled from the port operations.
    
    The device link is established with the new function
    ata_scsi_slave_alloc(), and this function is used to define the
    ->slave_alloc callback of the scsi host template of all ata drivers.
    
    Fixes: a19a93e4c6a9 ("scsi: core: pm: Rely on the device driver core for async power management")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Niklas Cassel <niklas.cassel@wdc.com>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 490f3b805ee3639e8b69c91d63e1ea76189950ae
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Wed Sep 27 16:19:13 2023 +0800

    LoongArch: numa: Fix high_memory calculation
    
    commit 1943feecf80e73ecc03ce40271f29c6cea142bac upstream.
    
    For 64bit kernel without HIGHMEM, high_memory is the virtual address of
    the highest physical address in the system. But __va(get_num_physpages()
    << PAGE_SHIFT) is not what we want for high_memory because there may be
    holes in the physical address space. On the other hand, max_low_pfn is
    calculated from memblock_end_of_DRAM(), which is exactly corresponding
    to the highest physical address, so use it for high_memory calculation.
    
    Cc: <stable@vger.kernel.org>
    Fixes: d4b6f1562a3c3284adce ("LoongArch: Add Non-Uniform Memory Access (NUMA) support")
    Signed-off-by: Chong Qiao <qiaochong@loongson.cn>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bc8585aa0719dd1996be804dd4fba601d48f3d6
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Wed Sep 27 16:19:13 2023 +0800

    LoongArch: Define relocation types for ABI v2.10
    
    commit 2761498876adebff77a43574639005b29e912c43 upstream.
    
    The relocation types from 101 to 109 are used by GNU binutils >= 2.41,
    add their definitions to use them in later patches.
    
    Link: https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=include/elf/loongarch.h#l230
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f04ded9ae26876de7948485e1e7c8e0ef754e462
Author: Kailang Yang <kailang@realtek.com>
Date:   Thu Sep 7 15:24:34 2023 +0800

    ALSA: hda: Disable power save for solving pop issue on Lenovo ThinkCentre M70q
    
    commit 057a28ef93bdbe84326d34cdb5543afdaab49fe1 upstream.
    
    Lenovo ThinkCentre M70q had boot up pop noise.
    Disable power save will solve pop issue.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/315900e2efef42fd9855eacfeb443abd@realtek.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9af8bb2afea3705b58fe930f97a39322f46e5b8b
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Thu Sep 7 08:22:33 2023 +0200

    netfilter: nf_tables: disallow rule removal from chain binding
    
    [ Upstream commit f15f29fd4779be8a418b66e9d52979bb6d6c2325 ]
    
    Chain binding only requires the rule addition/insertion command within
    the same transaction. Removal of rules from chain bindings within the
    same transaction makes no sense, userspace does not utilize this
    feature. Replace nft_chain_is_bound() check to nft_chain_binding() in
    rule deletion commands. Replace command implies a rule deletion, reject
    this command too.
    
    Rule flush command can also safely rely on this nft_chain_binding()
    check because unbound chains are not allowed since 62e1e94b246e
    ("netfilter: nf_tables: reject unbound chain set before commit phase").
    
    Fixes: d0e2c7de92c7 ("netfilter: nf_tables: add NFT_CHAIN_BINDING")
    Reported-by: Kevin Rich <kevinrich1337@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 980663f1d189eedafd18d80053d9cf3e2ceb5c8c
Author: Pan Bian <bianpan2016@163.com>
Date:   Thu Sep 21 23:17:31 2023 +0900

    nilfs2: fix potential use after free in nilfs_gccache_submit_read_data()
    
    commit 7ee29facd8a9c5a26079148e36bcf07141b3a6bc upstream.
    
    In nilfs_gccache_submit_read_data(), brelse(bh) is called to drop the
    reference count of bh when the call to nilfs_dat_translate() fails.  If
    the reference count hits 0 and its owner page gets unlocked, bh may be
    freed.  However, bh->b_page is dereferenced to put the page after that,
    which may result in a use-after-free bug.  This patch moves the release
    operation after unlocking and putting the page.
    
    NOTE: The function in question is only called in GC, and in combination
    with current userland tools, address translation using DAT does not occur
    in that function, so the code path that causes this issue will not be
    executed.  However, it is possible to run that code path by intentionally
    modifying the userland GC library or by calling the GC ioctl directly.
    
    [konishi.ryusuke@gmail.com: NOTE added to the commit log]
    Link: https://lkml.kernel.org/r/1543201709-53191-1-git-send-email-bianpan2016@163.com
    Link: https://lkml.kernel.org/r/20230921141731.10073-1-konishi.ryusuke@gmail.com
    Fixes: a3d93f709e89 ("nilfs2: block cache for garbage collection")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reported-by: Ferry Meng <mengferry@linux.alibaba.com>
    Closes: https://lkml.kernel.org/r/20230818092022.111054-1-mengferry@linux.alibaba.com
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e14f68a48fd445a083ac0750fafcb064df5f18f7
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Sep 1 01:25:55 2023 +0300

    serial: 8250_port: Check IRQ data before use
    
    commit cce7fc8b29961b64fadb1ce398dc5ff32a79643b upstream.
    
    In case the leaf driver wants to use IRQ polling (irq = 0) and
    IIR register shows that an interrupt happened in the 8250 hardware
    the IRQ data can be NULL. In such a case we need to skip the wake
    event as we came to this path from the timer interrupt and quite
    likely system is already awake.
    
    Without this fix we have got an Oops:
    
        serial8250: ttyS0 at I/O 0x3f8 (irq = 0, base_baud = 115200) is a 16550A
        ...
        BUG: kernel NULL pointer dereference, address: 0000000000000010
        RIP: 0010:serial8250_handle_irq+0x7c/0x240
        Call Trace:
         ? serial8250_handle_irq+0x7c/0x240
         ? __pfx_serial8250_timeout+0x10/0x10
    
    Fixes: 0ba9e3a13c6a ("serial: 8250: Add missing wakeup event reporting")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Link: https://lore.kernel.org/r/20230831222555.614426-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c61d0b87a7028c2c10faffc524d748334c7b9827
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Thu Sep 14 07:15:07 2023 +0200

    Revert "tty: n_gsm: fix UAF in gsm_cleanup_mux"
    
    commit 29346e217b8ab8a52889b88f00b268278d6b7668 upstream.
    
    This reverts commit 9b9c8195f3f0d74a826077fc1c01b9ee74907239.
    
    The commit above is reverted as it did not solve the original issue.
    
    gsm_cleanup_mux() tries to free up the virtual ttys by calling
    gsm_dlci_release() for each available DLCI. There, dlci_put() is called to
    decrease the reference counter for the DLCI via tty_port_put() which
    finally calls gsm_dlci_free(). This already clears the pointer which is
    being checked in gsm_cleanup_mux() before calling gsm_dlci_release().
    Therefore, it is not necessary to clear this pointer in gsm_cleanup_mux()
    as done in the reverted commit. The commit introduces a null pointer
    dereference:
     <TASK>
     ? __die+0x1f/0x70
     ? page_fault_oops+0x156/0x420
     ? search_exception_tables+0x37/0x50
     ? fixup_exception+0x21/0x310
     ? exc_page_fault+0x69/0x150
     ? asm_exc_page_fault+0x26/0x30
     ? tty_port_put+0x19/0xa0
     gsmtty_cleanup+0x29/0x80 [n_gsm]
     release_one_tty+0x37/0xe0
     process_one_work+0x1e6/0x3e0
     worker_thread+0x4c/0x3d0
     ? __pfx_worker_thread+0x10/0x10
     kthread+0xe1/0x110
     ? __pfx_kthread+0x10/0x10
     ret_from_fork+0x2f/0x50
     ? __pfx_kthread+0x10/0x10
     ret_from_fork_asm+0x1b/0x30
     </TASK>
    
    The actual issue is that nothing guards dlci_put() from being called
    multiple times while the tty driver was triggered but did not yet finished
    calling gsm_dlci_free().
    
    Fixes: 9b9c8195f3f0 ("tty: n_gsm: fix UAF in gsm_cleanup_mux")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20230914051507.3240-1-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37435ddfadc6ece211415970af44866e2f695ee2
Author: Ricky WU <ricky_wu@realtek.com>
Date:   Wed Sep 20 09:11:19 2023 +0000

    misc: rtsx: Fix some platforms can not boot and move the l1ss judgment to probe
    
    commit 0e4cac557531a4c93de108d9ff11329fcad482ff upstream.
    
    commit 101bd907b424 ("misc: rtsx: judge ASPM Mode to set PETXCFG Reg")
    some readers no longer force #CLKREQ to low
    when the system need to enter ASPM.
    But some platform maybe not implement complete ASPM?
    it causes some platforms can not boot
    
    Like in the past only the platform support L1ss we release the #CLKREQ.
    Move the judgment (L1ss) to probe,
    we think read config space one time when the driver start is enough
    
    Fixes: 101bd907b424 ("misc: rtsx: judge ASPM Mode to set PETXCFG Reg")
    Cc: stable <stable@kernel.org>
    Reported-by: Paul Grandperrin <paul.grandperrin@gmail.com>
    Signed-off-by: Ricky Wu <ricky_wu@realtek.com>
    Tested-By: Jade Lovelace <lists@jade.fyi>
    Link: https://lore.kernel.org/r/37b1afb997f14946a8784c73d1f9a4f5@realtek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d6613ed2b7dca6c5ed6dee8f9fd1dff5966e85f
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Sat Sep 16 12:52:45 2023 +0200

    mptcp: fix bogus receive window shrinkage with multiple subflows
    
    commit 6bec041147a2a64a490d1f813e8a004443061b38 upstream.
    
    In case multiple subflows race to update the mptcp-level receive
    window, the subflow losing the race should use the window value
    provided by the "winning" subflow to update it's own tcp-level
    rcv_wnd.
    
    To such goal, the current code bogusly uses the mptcp-level rcv_wnd
    value as observed before the update attempt. On unlucky circumstances
    that may lead to TCP-level window shrinkage, and stall the other end.
    
    Address the issue feeding to the rcv wnd update the correct value.
    
    Fixes: f3589be0c420 ("mptcp: never shrink offered window")
    Cc: stable@vger.kernel.org
    Closes: https://github.com/multipath-tcp/mptcp_net-next/issues/427
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Mat Martineau <martineau@kernel.org>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00c27bffdba6a9c7ecab241ee74e04656060c8d5
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Sep 21 05:44:56 2023 -0400

    KVM: x86/mmu: Do not filter address spaces in for_each_tdp_mmu_root_yield_safe()
    
    commit 441a5dfcd96854cbcb625709e2694a9c60adfaab upstream.
    
    All callers except the MMU notifier want to process all address spaces.
    Remove the address space ID argument of for_each_tdp_mmu_root_yield_safe()
    and switch the MMU notifier to use __for_each_tdp_mmu_root_yield_safe().
    
    Extracted out of a patch by Sean Christopherson <seanjc@google.com>
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd41db6cb2851478db60689e2133cfc41b555fc4
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Sep 15 17:39:14 2023 -0700

    KVM: x86/mmu: Open code leaf invalidation from mmu_notifier
    
    commit 50107e8b2a8a59d8cec7e8454e27c1f8e365acdb upstream.
    
    The mmu_notifier path is a bit of a special snowflake, e.g. it zaps only a
    single address space (because it's per-slot), and can't always yield.
    Because of this, it calls kvm_tdp_mmu_zap_leafs() in ways that no one
    else does.
    
    Iterate manually over the leafs in response to an mmu_notifier
    invalidation, instead of invoking kvm_tdp_mmu_zap_leafs().  Drop the
    @can_yield param from kvm_tdp_mmu_zap_leafs() as its sole remaining
    caller unconditionally passes "true".
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20230916003916.2545000-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 733d7a5451fc648e3383162e1f7ae00d80ccd6d5
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Fri Sep 15 15:54:30 2023 -0500

    KVM: SVM: Fix TSC_AUX virtualization setup
    
    commit e0096d01c4fcb8c96c05643cfc2c20ab78eae4da upstream.
    
    The checks for virtualizing TSC_AUX occur during the vCPU reset processing
    path. However, at the time of initial vCPU reset processing, when the vCPU
    is first created, not all of the guest CPUID information has been set. In
    this case the RDTSCP and RDPID feature support for the guest is not in
    place and so TSC_AUX virtualization is not established.
    
    This continues for each vCPU created for the guest. On the first boot of
    an AP, vCPU reset processing is executed as a result of an APIC INIT
    event, this time with all of the guest CPUID information set, resulting
    in TSC_AUX virtualization being enabled, but only for the APs. The BSP
    always sees a TSC_AUX value of 0 which probably went unnoticed because,
    at least for Linux, the BSP TSC_AUX value is 0.
    
    Move the TSC_AUX virtualization enablement out of the init_vmcb() path and
    into the vcpu_after_set_cpuid() path to allow for proper initialization of
    the support after the guest CPUID information has been set.
    
    With the TSC_AUX virtualization support now in the vcpu_set_after_cpuid()
    path, the intercepts must be either cleared or set based on the guest
    CPUID input.
    
    Fixes: 296d5a17e793 ("KVM: SEV-ES: Use V_TSC_AUX if available instead of RDTSC/MSR_TSC_AUX intercepts")
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Message-Id: <4137fbcb9008951ab5f0befa74a0399d2cce809a.1694811272.git.thomas.lendacky@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e86a3a6226339367b24afacc8b0d530a1e7b2070
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Sep 22 17:06:34 2023 -0400

    KVM: SVM: INTERCEPT_RDTSCP is never intercepted anyway
    
    commit e8d93d5d93f85949e7299be289c6e7e1154b2f78 upstream.
    
    svm_recalc_instruction_intercepts() is always called at least once
    before the vCPU is started, so the setting or clearing of the RDTSCP
    intercept can be dropped from the TSC_AUX virtualization support.
    
    Extracted from a patch by Tom Lendacky.
    
    Cc: stable@vger.kernel.org
    Fixes: 296d5a17e793 ("KVM: SEV-ES: Use V_TSC_AUX if available instead of RDTSC/MSR_TSC_AUX intercepts")
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ce2f297a7168274547d0b5aea6c7c16268b8a96
Author: Pu Wen <puwen@hygon.cn>
Date:   Thu Sep 28 14:59:16 2023 +0800

    x86/srso: Add SRSO mitigation for Hygon processors
    
    commit a5ef7d68cea1344cf524f04981c2b3f80bedbb0d upstream.
    
    Add mitigation for the speculative return stack overflow vulnerability
    which exists on Hygon processors too.
    
    Signed-off-by: Pu Wen <puwen@hygon.cn>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/tencent_4A14812842F104E93AA722EC939483CEFF05@qq.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 811ba2ef0cb6402672e64ba1419d6ef95aa3405d
Author: Haitao Huang <haitao.huang@linux.intel.com>
Date:   Thu Jul 27 22:10:24 2023 -0700

    x86/sgx: Resolves SECS reclaim vs. page fault for EAUG race
    
    commit c6c2adcba50c2622ed25ba5d5e7f05f584711358 upstream.
    
    The SGX EPC reclaimer (ksgxd) may reclaim the SECS EPC page for an
    enclave and set secs.epc_page to NULL. The SECS page is used for EAUG
    and ELDU in the SGX page fault handler. However, the NULL check for
    secs.epc_page is only done for ELDU, not EAUG before being used.
    
    Fix this by doing the same NULL check and reloading of the SECS page as
    needed for both EAUG and ELDU.
    
    The SECS page holds global enclave metadata. It can only be reclaimed
    when there are no other enclave pages remaining. At that point,
    virtually nothing can be done with the enclave until the SECS page is
    paged back in.
    
    An enclave can not run nor generate page faults without a resident SECS
    page. But it is still possible for a #PF for a non-SECS page to race
    with paging out the SECS page: when the last resident non-SECS page A
    triggers a #PF in a non-resident page B, and then page A and the SECS
    both are paged out before the #PF on B is handled.
    
    Hitting this bug requires that race triggered with a #PF for EAUG.
    Following is a trace when it happens.
    
    BUG: kernel NULL pointer dereference, address: 0000000000000000
    RIP: 0010:sgx_encl_eaug_page+0xc7/0x210
    Call Trace:
     ? __kmem_cache_alloc_node+0x16a/0x440
     ? xa_load+0x6e/0xa0
     sgx_vma_fault+0x119/0x230
     __do_fault+0x36/0x140
     do_fault+0x12f/0x400
     __handle_mm_fault+0x728/0x1110
     handle_mm_fault+0x105/0x310
     do_user_addr_fault+0x1ee/0x750
     ? __this_cpu_preempt_check+0x13/0x20
     exc_page_fault+0x76/0x180
     asm_exc_page_fault+0x27/0x30
    
    Fixes: 5a90d2c3f5ef ("x86/sgx: Support adding of pages to an initialized enclave")
    Signed-off-by: Haitao Huang <haitao.huang@linux.intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Reviewed-by: Kai Huang <kai.huang@intel.com>
    Acked-by: Reinette Chatre <reinette.chatre@intel.com>
    Cc:stable@vger.kernel.org
    Link: https://lore.kernel.org/all/20230728051024.33063-1-haitao.huang%40linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f90f4c562003ac3d3b135c5a40a5383313f27264
Author: Nicolin Chen <nicolinc@nvidia.com>
Date:   Tue Oct 3 16:35:49 2023 -0700

    iommu/arm-smmu-v3: Fix soft lockup triggered by arm_smmu_mm_invalidate_range
    
    commit d5afb4b47e13161b3f33904d45110f9e6463bad6 upstream.
    
    When running an SVA case, the following soft lockup is triggered:
    --------------------------------------------------------------------
    watchdog: BUG: soft lockup - CPU#244 stuck for 26s!
    pstate: 83400009 (Nzcv daif +PAN -UAO +TCO +DIT -SSBS BTYPE=--)
    pc : arm_smmu_cmdq_issue_cmdlist+0x178/0xa50
    lr : arm_smmu_cmdq_issue_cmdlist+0x150/0xa50
    sp : ffff8000d83ef290
    x29: ffff8000d83ef290 x28: 000000003b9aca00 x27: 0000000000000000
    x26: ffff8000d83ef3c0 x25: da86c0812194a0e8 x24: 0000000000000000
    x23: 0000000000000040 x22: ffff8000d83ef340 x21: ffff0000c63980c0
    x20: 0000000000000001 x19: ffff0000c6398080 x18: 0000000000000000
    x17: 0000000000000000 x16: 0000000000000000 x15: ffff3000b4a3bbb0
    x14: ffff3000b4a30888 x13: ffff3000b4a3cf60 x12: 0000000000000000
    x11: 0000000000000000 x10: 0000000000000000 x9 : ffffc08120e4d6bc
    x8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000048cfa
    x5 : 0000000000000000 x4 : 0000000000000001 x3 : 000000000000000a
    x2 : 0000000080000000 x1 : 0000000000000000 x0 : 0000000000000001
    Call trace:
     arm_smmu_cmdq_issue_cmdlist+0x178/0xa50
     __arm_smmu_tlb_inv_range+0x118/0x254
     arm_smmu_tlb_inv_range_asid+0x6c/0x130
     arm_smmu_mm_invalidate_range+0xa0/0xa4
     __mmu_notifier_invalidate_range_end+0x88/0x120
     unmap_vmas+0x194/0x1e0
     unmap_region+0xb4/0x144
     do_mas_align_munmap+0x290/0x490
     do_mas_munmap+0xbc/0x124
     __vm_munmap+0xa8/0x19c
     __arm64_sys_munmap+0x28/0x50
     invoke_syscall+0x78/0x11c
     el0_svc_common.constprop.0+0x58/0x1c0
     do_el0_svc+0x34/0x60
     el0_svc+0x2c/0xd4
     el0t_64_sync_handler+0x114/0x140
     el0t_64_sync+0x1a4/0x1a8
    --------------------------------------------------------------------
    
    The commit 06ff87bae8d3 ("arm64: mm: remove unused functions and variable
    protoypes") fixed a similar lockup on the CPU MMU side. Yet, it can occur
    to SMMU too since arm_smmu_mm_invalidate_range() is typically called next
    to MMU tlb flush function, e.g.
            tlb_flush_mmu_tlbonly {
                    tlb_flush {
                            __flush_tlb_range {
                                    // check MAX_TLBI_OPS
                            }
                    }
                    mmu_notifier_invalidate_range {
                            arm_smmu_mm_invalidate_range {
                                    // does not check MAX_TLBI_OPS
                            }
                    }
            }
    
    Clone a CMDQ_MAX_TLBI_OPS from the MAX_TLBI_OPS in tlbflush.h, since in an
    SVA case SMMU uses the CPU page table, so it makes sense to align with the
    tlbflush code. Then, replace per-page TLBI commands with a single per-asid
    TLBI command, if the request size hits this threshold.
    
    Signed-off-by: Nicolin Chen <nicolinc@nvidia.com>
    Link: https://lore.kernel.org/r/20230920052257.8615-1-nicolinc@nvidia.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a09446ac0414801bf2b3945b9bdf3ef59389710e
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Mon May 8 19:02:33 2023 +0200

    smack: Retrieve transmuting information in smack_inode_getsecurity()
    
    [ Upstream commit 3a3d8fce31a49363cc31880dce5e3b0617c9c38b ]
    
    Enhance smack_inode_getsecurity() to retrieve the value for
    SMACK64TRANSMUTE from the inode security blob, similarly to SMACK64.
    
    This helps to display accurate values in the situation where the security
    labels come from mount options and not from xattrs.
    
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbb16d0f4996a9b697de824b94a2a7287148e9d3
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Mon May 8 19:02:34 2023 +0200

    smack: Record transmuting in smk_transmuted
    
    [ Upstream commit 2c085f3a8f23c9b444e8b99d93c15d7ce870fc4e ]
    
    smack_dentry_create_files_as() determines whether transmuting should occur
    based on the label of the parent directory the new inode will be added to,
    and not the label of the directory where it is created.
    
    This helps for example to do transmuting on overlayfs, since the latter
    first creates the inode in the working directory, and then moves it to the
    correct destination.
    
    However, despite smack_dentry_create_files_as() provides the correct label,
    smack_inode_init_security() does not know from passed information whether
    or not transmuting occurred. Without this information,
    smack_inode_init_security() cannot set SMK_INODE_CHANGED in smk_flags,
    which will result in the SMACK64TRANSMUTE xattr not being set in
    smack_d_instantiate().
    
    Thus, add the smk_transmuted field to the task_smack structure, and set it
    in smack_dentry_create_files_as() to smk_task if transmuting occurred. If
    smk_task is equal to smk_transmuted in smack_inode_init_security(), act as
    if transmuting was successful but without taking the label from the parent
    directory (the inode label was already set correctly from the current
    credentials in smack_inode_alloc_security()).
    
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b8ef68e39d2c86ba88c78aa34c6b067166e8adc
Author: Irvin Cote <irvin.cote@insa-lyon.fr>
Date:   Thu Feb 9 17:43:57 2023 -0300

    nvme-pci: always return an ERR_PTR from nvme_pci_alloc_dev
    
    [ Upstream commit dc785d69d753a3894c93afc23b91404652382ead ]
    
    Don't mix NULL and ERR_PTR returns.
    
    Fixes: 2e87570be9d2 ("nvme-pci: factor out a nvme_pci_alloc_dev helper")
    Signed-off-by: Irvin Cote <irvin.cote@insa-lyon.fr>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d7bc76b58497a9ff3f1be1b1900541ecaa6d479
Author: Gleb Chesnokov <gleb.chesnokov@scst.dev>
Date:   Wed May 17 11:22:35 2023 +0300

    scsi: qla2xxx: Fix NULL pointer dereference in target mode
    
    [ Upstream commit d54820b22e404b06b2b65877ff802cc7b31688bc ]
    
    When target mode is enabled, the pci_irq_get_affinity() function may return
    a NULL value in qla_mapq_init_qp_cpu_map() due to the qla24xx_enable_msix()
    code that handles IRQ settings for target mode. This leads to a crash due
    to a NULL pointer dereference.
    
    This patch fixes the issue by adding a check for the NULL value returned by
    pci_irq_get_affinity() and introducing a 'cpu_mapped' boolean flag to the
    qla_qpair structure, ensuring that the qpair's CPU affinity is updated when
    it has not been mapped to a CPU.
    
    Fixes: 1d201c81d4cc ("scsi: qla2xxx: Select qpair depending on which CPU post_cmd() gets called")
    Signed-off-by: Gleb Chesnokov <gleb.chesnokov@scst.dev>
    Link: https://lore.kernel.org/r/56b416f2-4e0f-b6cf-d6d5-b7c372e3c6a2@scst.dev
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a51d35ba72915b81c38b4b89fc433435767844a
Author: Sven Eckelmann <sven@narfation.org>
Date:   Tue Aug 22 16:42:24 2023 +0300

    wifi: ath11k: Don't drop tx_status when peer cannot be found
    
    [ Upstream commit 400ece6c7f346b0a30867bd00b03b5b2563d4357 ]
    
    When a station idles for a long time, hostapd will try to send a QoS Null
    frame to the station as "poll". NL80211_CMD_PROBE_CLIENT is used for this
    purpose. And the skb will be added to ack_status_frame - waiting for a
    completion via ieee80211_report_ack_skb().
    
    But when the peer was already removed before the tx_complete arrives, the
    peer will be missing. And when using dev_kfree_skb_any (instead of going
    through mac80211), the entry will stay inside ack_status_frames. This IDR
    will therefore run full after 8K request were generated for such clients.
    At this point, the access point will then just stall and not allow any new
    clients because idr_alloc() for ack_status_frame will fail.
    
    ieee80211_free_txskb() on the other hand will (when required) call
    ieee80211_report_ack_skb() and make sure that (when required) remove the
    entry from the ack_status_frame.
    
    Tested-on: IPQ6018 hw1.0 WLAN.HK.2.5.0.1-01100-QCAHKSWPL_SILICONZ-1
    
    Fixes: 6257c702264c ("wifi: ath11k: fix tx status reporting in encap offload mode")
    Fixes: 94739d45c388 ("ath11k: switch to using ieee80211_tx_status_ext()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20230802-ath11k-ack_status_leak-v2-1-c0af729d6229@narfation.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a60768c05b586d79ad32ec0dfac3f2ede75395ac
Author: Pratyush Yadav <ptyadav@amazon.de>
Date:   Tue Sep 12 17:52:49 2023 +0200

    nvme-pci: do not set the NUMA node of device if it has none
    
    [ Upstream commit dad651b2a44eb6b201738f810254279dca29d30d ]
    
    If a device has no NUMA node information associated with it, the driver
    puts the device in node first_memory_node (say node 0). Not having a
    NUMA node and being associated with node 0 are completely different
    things and it makes little sense to mix the two.
    
    Signed-off-by: Pratyush Yadav <ptyadav@amazon.de>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b2165cae40353e313056269289cb894c0103c1d
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Nov 8 09:44:00 2022 +0100

    nvme-pci: factor out a nvme_pci_alloc_dev helper
    
    [ Upstream commit 2e87570be9d2746e7c4e7ab1cc18fd3ca7de2768 ]
    
    Add a helper that allocates the nvme_dev structure up to the point where
    we can call nvme_init_ctrl.  This pairs with the free_ctrl method and can
    thus be used to cleanup the teardown path and make it more symmetric.
    
    Note that this now calls nvme_init_ctrl a lot earlier during probing,
    which also means the per-controller character device shows up earlier.
    Due to the controller state no commnds can be send on it, but it might
    make sense to delay the cdev registration until nvme_init_ctrl_finish.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Tested-by Gerd Bayer <gbayer@linxu.ibm.com>
    Stable-dep-of: dad651b2a44e ("nvme-pci: do not set the NUMA node of device if it has none")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69bc295d0e0b75f2fc449840e511385b37393b49
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Nov 8 09:41:41 2022 +0100

    nvme-pci: factor the iod mempool creation into a helper
    
    [ Upstream commit 081a7d958ce4b65f9aab6e70e65b0b2e0b92297c ]
    
    Add a helper to create the iod mempool.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Tested-by Gerd Bayer <gbayer@linxu.ibm.com>
    Stable-dep-of: dad651b2a44e ("nvme-pci: do not set the NUMA node of device if it has none")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ebee88a891156fbca33b3642a3c6929f7b3cf63
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Jul 28 17:26:54 2023 -0300

    perf build: Define YYNOMEM as YYNOABORT for bison < 3.81
    
    [ Upstream commit 88cc47e24597971b05b6e94c28a2fc81d2a8d61a ]
    
    YYNOMEM was introduced in bison 3.81, so define it as YYABORT for older
    versions, which should provide the previous perf behaviour.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e85af2c682e19219044aed99166ab8600275578
Author: Thomas Zimmermann <tzimmermann@suse.de>
Date:   Mon Sep 18 11:03:49 2023 +0200

    fbdev/sh7760fb: Depend on FB=y
    
    [ Upstream commit f75f71b2c418a27a7c05139bb27a0c83adf88d19 ]
    
    Fix linker error if FB=m about missing fb_io_read and fb_io_write. The
    linker's error message suggests that this config setting has already
    been broken for other symbols.
    
      All errors (new ones prefixed by >>):
    
         sh4-linux-ld: drivers/video/fbdev/sh7760fb.o: in function `sh7760fb_probe':
         sh7760fb.c:(.text+0x374): undefined reference to `framebuffer_alloc'
         sh4-linux-ld: sh7760fb.c:(.text+0x394): undefined reference to `fb_videomode_to_var'
         sh4-linux-ld: sh7760fb.c:(.text+0x39c): undefined reference to `fb_alloc_cmap'
         sh4-linux-ld: sh7760fb.c:(.text+0x3a4): undefined reference to `register_framebuffer'
         sh4-linux-ld: sh7760fb.c:(.text+0x3ac): undefined reference to `fb_dealloc_cmap'
         sh4-linux-ld: sh7760fb.c:(.text+0x434): undefined reference to `framebuffer_release'
         sh4-linux-ld: drivers/video/fbdev/sh7760fb.o: in function `sh7760fb_remove':
         sh7760fb.c:(.text+0x800): undefined reference to `unregister_framebuffer'
         sh4-linux-ld: sh7760fb.c:(.text+0x804): undefined reference to `fb_dealloc_cmap'
         sh4-linux-ld: sh7760fb.c:(.text+0x814): undefined reference to `framebuffer_release'
      >> sh4-linux-ld: drivers/video/fbdev/sh7760fb.o:(.rodata+0xc): undefined reference to `fb_io_read'
      >> sh4-linux-ld: drivers/video/fbdev/sh7760fb.o:(.rodata+0x10): undefined reference to `fb_io_write'
         sh4-linux-ld: drivers/video/fbdev/sh7760fb.o:(.rodata+0x2c): undefined reference to `cfb_fillrect'
         sh4-linux-ld: drivers/video/fbdev/sh7760fb.o:(.rodata+0x30): undefined reference to `cfb_copyarea'
         sh4-linux-ld: drivers/video/fbdev/sh7760fb.o:(.rodata+0x34): undefined reference to `cfb_imageblit'
    
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202309130632.LS04CPWu-lkp@intel.com/
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Acked-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230918090400.13264-1-tzimmermann@suse.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f105e893a8edd48bdf4bef9fef845a9ff402f737
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Wed Sep 20 14:26:29 2023 +0800

    LoongArch: Set all reserved memblocks on Node#0 at initialization
    
    [ Upstream commit b795fb9f5861ee256070d59e33130980a01fadd7 ]
    
    After commit 61167ad5fecdea ("mm: pass nid to reserve_bootmem_region()")
    we get a panic if DEFERRED_STRUCT_PAGE_INIT is enabled:
    
    [    0.000000] CPU 0 Unable to handle kernel paging request at virtual address 0000000000002b82, era == 90000000040e3f28, ra == 90000000040e3f18
    [    0.000000] Oops[#1]:
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 6.5.0+ #733
    [    0.000000] pc 90000000040e3f28 ra 90000000040e3f18 tp 90000000046f4000 sp 90000000046f7c90
    [    0.000000] a0 0000000000000001 a1 0000000000200000 a2 0000000000000040 a3 90000000046f7ca0
    [    0.000000] a4 90000000046f7ca4 a5 0000000000000000 a6 90000000046f7c38 a7 0000000000000000
    [    0.000000] t0 0000000000000002 t1 9000000004b00ac8 t2 90000000040e3f18 t3 90000000040f0800
    [    0.000000] t4 00000000000f0000 t5 80000000ffffe07e t6 0000000000000003 t7 900000047fff5e20
    [    0.000000] t8 aaaaaaaaaaaaaaab u0 0000000000000018 s9 0000000000000000 s0 fffffefffe000000
    [    0.000000] s1 0000000000000000 s2 0000000000000080 s3 0000000000000040 s4 0000000000000000
    [    0.000000] s5 0000000000000000 s6 fffffefffe000000 s7 900000000470b740 s8 9000000004ad4000
    [    0.000000]    ra: 90000000040e3f18 reserve_bootmem_region+0xec/0x21c
    [    0.000000]   ERA: 90000000040e3f28 reserve_bootmem_region+0xfc/0x21c
    [    0.000000]  CRMD: 000000b0 (PLV0 -IE -DA +PG DACF=CC DACM=CC -WE)
    [    0.000000]  PRMD: 00000000 (PPLV0 -PIE -PWE)
    [    0.000000]  EUEN: 00000000 (-FPE -SXE -ASXE -BTE)
    [    0.000000]  ECFG: 00070800 (LIE=11 VS=7)
    [    0.000000] ESTAT: 00010800 [PIL] (IS=11 ECode=1 EsubCode=0)
    [    0.000000]  BADV: 0000000000002b82
    [    0.000000]  PRID: 0014d000 (Loongson-64bit, Loongson-3A6000)
    [    0.000000] Modules linked in:
    [    0.000000] Process swapper (pid: 0, threadinfo=(____ptrval____), task=(____ptrval____))
    [    0.000000] Stack : 0000000000000000 9000000002eb5430 0000003a00000020 90000000045ccd00
    [    0.000000]         900000000470e000 90000000002c1918 0000000000000000 9000000004110780
    [    0.000000]         00000000fe6c0000 0000000480000000 9000000004b4e368 9000000004110748
    [    0.000000]         0000000000000000 900000000421ca84 9000000004620000 9000000004564970
    [    0.000000]         90000000046f7d78 9000000002cc9f70 90000000002c1918 900000000470e000
    [    0.000000]         9000000004564970 90000000040bc0e0 90000000046f7d78 0000000000000000
    [    0.000000]         0000000000004000 90000000045ccd00 0000000000000000 90000000002c1918
    [    0.000000]         90000000002c1900 900000000470b700 9000000004b4df78 9000000004620000
    [    0.000000]         90000000046200a8 90000000046200a8 0000000000000000 9000000004218b2c
    [    0.000000]         9000000004270008 0000000000000001 0000000000000000 90000000045ccd00
    [    0.000000]         ...
    [    0.000000] Call Trace:
    [    0.000000] [<90000000040e3f28>] reserve_bootmem_region+0xfc/0x21c
    [    0.000000] [<900000000421ca84>] memblock_free_all+0x114/0x350
    [    0.000000] [<9000000004218b2c>] mm_core_init+0x138/0x3cc
    [    0.000000] [<9000000004200e38>] start_kernel+0x488/0x7a4
    [    0.000000] [<90000000040df0d8>] kernel_entry+0xd8/0xdc
    [    0.000000]
    [    0.000000] Code: 02eb21ad  00410f4c  380c31ac <262b818d> 6800b70d  02c1c196  0015001c  57fe4bb1  260002cd
    
    The reason is early memblock_reserve() in memblock_init() set node id to
    MAX_NUMNODES, making NODE_DATA(nid) a NULL dereference in the call chain
    reserve_bootmem_region() -> init_reserved_page(). After memblock_init(),
    those late calls of memblock_reserve() operate on subregions of memblock
    .memory regions. As a result, these reserved regions will be set to the
    correct node at the first iteration of memmap_init_reserved_pages().
    
    So set all reserved memblocks on Node#0 at initialization can avoid this
    panic.
    
    Reported-by: WANG Xuerui <git@xen0n.name>
    Tested-by: WANG Xuerui <git@xen0n.name>
    Reviewed-by: WANG Xuerui <git@xen0n.name>  # with nits addressed
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 146ba159f5a6bd6756539af4c0d7dbb7dea32ada
Author: Gerhard Engleder <gerhard@engleder-embedded.com>
Date:   Fri Sep 15 23:01:26 2023 +0200

    tsnep: Fix NAPI polling with budget 0
    
    [ Upstream commit 46589db3817bd8b523701274885984b5a5dda7d1 ]
    
    According to the NAPI documentation networking/napi.rst, Rx specific
    APIs like page pool and XDP cannot be used at all when budget is 0.
    skb Tx processing should happen regardless of the budget.
    
    Stop NAPI polling after Tx processing and skip Rx processing if budget
    is 0.
    
    Signed-off-by: Gerhard Engleder <gerhard@engleder-embedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78ac1e7dec24683045b3a1790f3ec2248893f0d0
Author: Gerhard Engleder <gerhard@engleder-embedded.com>
Date:   Fri Sep 15 23:01:24 2023 +0200

    tsnep: Fix NAPI scheduling
    
    [ Upstream commit ea852c17f5382a0a52041cfbd9a4451ae0fa1a38 ]
    
    According to the NAPI documentation networking/napi.rst, drivers which
    have to mask interrupts explicitly should use the napi_schedule_prep()
    and __napi_schedule() calls.
    
    No problem seen so far with current implementation. Nevertheless, let's
    align the implementation with documentation.
    
    Signed-off-by: Gerhard Engleder <gerhard@engleder-embedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b09c1359e4f08bc8369357cf4ec4a08150b47888
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Sep 15 20:10:03 2023 +0200

    net: hsr: Add __packed to struct hsr_sup_tlv.
    
    [ Upstream commit fbd825fcd7dd4c11d4c48c3d0adc248a4a0ce90b ]
    
    Struct hsr_sup_tlv describes HW layout and therefore it needs a __packed
    attribute to ensure the compiler does not add any padding.
    Due to the size and __packed attribute of the structs that use
    hsr_sup_tlv it has no functional impact.
    
    Add __packed to struct hsr_sup_tlv.
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97788f0757bd028f4f3eece5b113966de6f60a17
Author: Johnathan Mantey <johnathanx.mantey@intel.com>
Date:   Fri Sep 15 09:12:35 2023 -0700

    ncsi: Propagate carrier gain/loss events to the NCSI controller
    
    [ Upstream commit 3780bb29311eccb7a1c9641032a112eed237f7e3 ]
    
    Report the carrier/no-carrier state for the network interface
    shared between the BMC and the passthrough channel. Without this
    functionality the BMC is unable to reconfigure the NIC in the event
    of a re-cabling to a different subnet.
    
    Signed-off-by: Johnathan Mantey <johnathanx.mantey@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c93aa8cfaec493e21aed78438f7cfb341fdaec12
Author: Benjamin Gray <bgray@linux.ibm.com>
Date:   Tue Aug 29 16:34:57 2023 +1000

    powerpc/watchpoints: Annotate atomic context in more places
    
    [ Upstream commit 27646b2e02b096a6936b3e3b6ba334ae20763eab ]
    
    It can be easy to miss that the notifier mechanism invokes the callbacks
    in an atomic context, so add some comments to that effect on the two
    handlers we register here.
    
    Signed-off-by: Benjamin Gray <bgray@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230829063457.54157-4-bgray@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3632e9fd82d030491c8643cb61d36a2371e83a02
Author: Benjamin Gray <bgray@linux.ibm.com>
Date:   Tue Aug 29 16:34:56 2023 +1000

    powerpc/watchpoint: Disable pagefaults when getting user instruction
    
    [ Upstream commit 3241f260eb830d27d09cc604690ec24533fdb433 ]
    
    This is called in an atomic context, so is not allowed to sleep if a
    user page needs to be faulted in and has nowhere it can be deferred to.
    The pagefault_disabled() function is documented as preventing user
    access methods from sleeping.
    
    In practice the page will be mapped in nearly always because we are
    reading the instruction that just triggered the watchpoint trap.
    
    Signed-off-by: Benjamin Gray <bgray@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230829063457.54157-3-bgray@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16722418cbe31400a4ab2ebab05ca2cb305c68e4
Author: Benjamin Gray <bgray@linux.ibm.com>
Date:   Tue Aug 29 16:34:55 2023 +1000

    powerpc/watchpoints: Disable preemption in thread_change_pc()
    
    [ Upstream commit cc879ab3ce39bc39f9b1d238b283f43a5f6f957d ]
    
    thread_change_pc() uses CPU local data, so must be protected from
    swapping CPUs while it is reading the breakpoint struct.
    
    The error is more noticeable after 1e60f3564bad ("powerpc/watchpoints:
    Track perf single step directly on the breakpoint"), which added an
    unconditional __this_cpu_read() call in thread_change_pc(). However the
    existing __this_cpu_read() that runs if a breakpoint does need to be
    re-inserted has the same issue.
    
    Signed-off-by: Benjamin Gray <bgray@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230829063457.54157-2-bgray@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee8bbb2a31d33c48eac4a8cdae846d699e6b5d02
Author: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Date:   Fri Sep 15 16:41:53 2023 +0300

    ASoC: SOF: Intel: MTL: Reduce the DSP init timeout
    
    [ Upstream commit e0f96246c4402514acda040be19ee24c1619e01a ]
    
    20s seems unnecessarily large for the DSP init timeout. This coupled with
    multiple FW boot attempts causes an excessive delay in the error path when
    booting in recovery mode. Reduce it to 0.5s and use the existing
    HDA_DSP_INIT_TIMEOUT_US.
    
    Link: https://github.com/thesofproject/linux/issues/4565
    Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Link: https://lore.kernel.org/r/20230915134153.9688-1-peter.ujfalusi@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3608be186ae5197bb5b65c92e6eac88a0d37ddce
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Jul 13 15:54:16 2023 -0400

    NFSv4.1: fix zero value filehandle in post open getattr
    
    [ Upstream commit 4506f23e117161a20104c8fa04f33e1ca63c26af ]
    
    Currently, if the OPEN compound experiencing an error and needs to
    get the file attributes separately, it will send a stand alone
    GETATTR but it would use the filehandle from the results of
    the OPEN compound. In case of the CLAIM_FH OPEN, nfs_openres's fh
    is zero value. That generate a GETATTR that's sent with a zero
    value filehandle, and results in the server returning an error.
    
    Instead, for the CLAIM_FH OPEN, take the filehandle that was used
    in the PUTFH of the OPEN compound.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9f05ae6f63624fa95afdd7797610ec22d788d99
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Thu Aug 17 12:41:32 2023 +0200

    media: vb2: frame_vector.c: replace WARN_ONCE with a comment
    
    [ Upstream commit 735de5caf79e06cc9fb96b1b4f4974674ae3e917 ]
    
    The WARN_ONCE was issued also in cases that had nothing to do with VM_IO
    (e.g. if the start address was just a random value and uaccess fails with
    -EFAULT).
    
    There are no reports of WARN_ONCE being issued for actual VM_IO cases, so
    just drop it and instead add a note to the comment before the function.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reported-by: Yikebaer Aizezi <yikebaer61@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28c36932492295eae9ce1ae4fe177cb344fc1e1c
Author: Chancel Liu <chancel.liu@nxp.com>
Date:   Wed Sep 13 18:26:56 2023 +0800

    ASoC: imx-rpmsg: Set ignore_pmdown_time for dai_link
    
    [ Upstream commit fac58baf8fcfcd7481e8f6d60206ce2a47c1476c ]
    
    i.MX rpmsg sound cards work on codec slave mode. MCLK will be disabled
    by CPU DAI driver in hw_free(). Some codec requires MCLK present at
    power up/down sequence. So need to set ignore_pmdown_time to power down
    codec immediately before MCLK is turned off.
    
    Take WM8962 as an example, if MCLK is disabled before DAPM power down
    playback stream, FIFO error will arise in WM8962 which will have bad
    impact on playback next.
    
    Signed-off-by: Chancel Liu <chancel.liu@nxp.com>
    Acked-by: Shengjiu Wang <shengjiu.wang@gmail.com>
    Link: https://lore.kernel.org/r/20230913102656.2966757-1-chancel.liu@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c88886587d306387abd2edcf12d9a0724461ce9
Author: Mike Rapoport (IBM) <rppt@kernel.org>
Date:   Thu Sep 14 10:45:40 2023 +0300

    memblock tests: fix warning âstruct seq_fileâ declared inside parameter list
    
    [ Upstream commit 55122e0130e51eb71f5ec62d10525db0468f28e8 ]
    
    Building memblock tests produces the following warning:
    
    cc -I. -I../../include -Wall -O2 -fsanitize=address -fsanitize=undefined -D CONFIG_PHYS_ADDR_T_64BIT   -c -o main.o main.c
    In file included from tests/common.h:9,
                     from tests/basic_api.h:5,
                     from main.c:2:
    ./linux/memblock.h:601:50: warning: âstruct seq_fileâ declared inside parameter list will not be visible outside of this definition or declaration
      601 | static inline void memtest_report_meminfo(struct seq_file *m) { }
          |                                                  ^~~~~~~~
    
    Add declaration of 'struct seq_file' to tools/include/linux/seq_file.h
    to fix it.
    
    Signed-off-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 729757fe9718bcddae890b5f24949204fd61d2f7
Author: Mike Rapoport (IBM) <rppt@kernel.org>
Date:   Thu Sep 14 09:24:51 2023 +0300

    memblock tests: fix warning: "__ALIGN_KERNEL" redefined
    
    [ Upstream commit 5e1bffbdb63baf89f3bf0b6bafb50903432a7434 ]
    
    Building memblock tests produces the following warning:
    
    cc -I. -I../../include -Wall -O2 -fsanitize=address -fsanitize=undefined -D CONFIG_PHYS_ADDR_T_64BIT   -c -o main.o main.c
    In file included from ../../include/linux/pfn.h:5,
                     from ./linux/memory_hotplug.h:6,
                     from ./linux/init.h:7,
                     from ./linux/memblock.h:11,
                     from tests/common.h:8,
                     from tests/basic_api.h:5,
                     from main.c:2:
    ../../include/linux/mm.h:14: warning: "__ALIGN_KERNEL" redefined
       14 | #define __ALIGN_KERNEL(x, a)            __ALIGN_KERNEL_MASK(x, (typeof(x))(a) - 1)
          |
    In file included from ../../include/linux/mm.h:6,
                     from ../../include/linux/pfn.h:5,
                     from ./linux/memory_hotplug.h:6,
                     from ./linux/init.h:7,
                     from ./linux/memblock.h:11,
                     from tests/common.h:8,
                     from tests/basic_api.h:5,
                     from main.c:2:
    ../../include/uapi/linux/const.h:31: note: this is the location of the previous definition
       31 | #define __ALIGN_KERNEL(x, a)            __ALIGN_KERNEL_MASK(x, (__typeof__(x))(a) - 1)
          |
    
    Remove definitions of __ALIGN_KERNEL and __ALIGN_KERNEL_MASK from
    tools/include/linux/mm.h to fix it.
    
    Signed-off-by: Mike Rapoport (IBM) <rppt@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53618d56bfe4c7fefbfcdd562e963f56b9fdac37
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Wed Sep 13 17:05:23 2023 +0100

    firmware: cirrus: cs_dsp: Only log list of algorithms in debug build
    
    [ Upstream commit 69343ce91435f222052015c5af86b550391bac85 ]
    
    Change the logging of each algorithm from info level to debug level.
    
    On the original devices supported by this code there were typically only
    one or two algorithms in a firmware and one or two DSPs so this logging
    only used a small number of log lines.
    
    However, for the latest devices there could be 30-40 algorithms in a
    firmware and 8 DSPs being loaded in parallel, so using 300+ lines of log
    for information that isn't particularly important to have logged.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20230913160523.3701189-1-rf@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 110e6f5750287397714074ef0c3eae39289e771a
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Wed Sep 13 16:00:11 2023 +0100

    ASoC: cs42l42: Don't rely on GPIOD_OUT_LOW to set RESET initially low
    
    [ Upstream commit a479b44ac0a0ac25cd48e5356200078924d78022 ]
    
    The ACPI setting for a GPIO default state has higher priority than the
    flag passed to devm_gpiod_get_optional() so ACPI can override the
    GPIOD_OUT_LOW. Explicitly set the GPIO low when hard resetting.
    
    Although GPIOD_OUT_LOW can't be relied on this doesn't seem like a
    reason to stop passing it to devm_gpiod_get_optional(). So we still pass
    it to state our intent, but can deal with it having no effect.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Signed-off-by: Stefan Binding <sbinding@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20230913150012.604775-3-sbinding@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbc43ddd5ce278d44a3e45b9831a7b2f9f7f1787
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Wed Sep 13 16:00:10 2023 +0100

    ASoC: cs42l42: Ensure a reset pulse meets minimum pulse width.
    
    [ Upstream commit 41dac81b56c82c51a6d00fda5f3af7691ffee2d7 ]
    
    The CS42L42 can accept very short reset pulses of a few microseconds
    but there's no reason to force a very short pulse.
    Allow a wide range for the usleep_range() so it can be relaxed about
    the choice of timing source.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Signed-off-by: Stefan Binding <sbinding@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20230913150012.604775-2-sbinding@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 019f01f81887ab9c5cac4576bbce8b4502583b57
Author: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
Date:   Tue Sep 12 19:26:17 2023 +0300

    ALSA: hda: intel-sdw-acpi: Use u8 type for link index
    
    [ Upstream commit 485ddd519fbd89a9d9ac4b02be489e03cbbeebba ]
    
    Use consistently u8 for sdw link index. The id is limited to 4, u8 is
    adequate in size to store it.
    
    This change will also fixes the following compiler warning/error (W=1):
    
    sound/hda/intel-sdw-acpi.c: In function âsdw_intel_acpi_scanâ:
    sound/hda/intel-sdw-acpi.c:34:35: error: â-subpropertiesâ directive output may be truncated writing 14 bytes into a region of size between 7 and 17 [-Werror=format-truncation=]
       34 |                  "mipi-sdw-link-%d-subproperties", i);
          |                                   ^~~~~~~~~~~~~~
    In function âis_link_enabledâ,
        inlined from âsdw_intel_scan_controllerâ at sound/hda/intel-sdw-acpi.c:106:8,
        inlined from âsdw_intel_acpi_scanâ at sound/hda/intel-sdw-acpi.c:180:9:
    sound/hda/intel-sdw-acpi.c:33:9: note: âsnprintfâ output between 30 and 40 bytes into a destination of size 32
       33 |         snprintf(name, sizeof(name),
          |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
       34 |                  "mipi-sdw-link-%d-subproperties", i);
          |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    cc1: all warnings being treated as errors
    
    The warnings got brought to light by a recent patch upstream:
    commit 6d4ab2e97dcf ("extrawarn: enable format and stringop overflow warnings in W=1")
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20230912162617.29178-1-peter.ujfalusi@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92f24f98d5ff65c59a2b3c6fa30d38e8cc941d4d
Author: Stanislav Fomichev <sdf@google.com>
Date:   Mon Sep 11 12:47:30 2023 -0700

    bpf: Clarify error expectations from bpf_clone_redirect
    
    [ Upstream commit 7cb779a6867fea00b4209bcf6de2f178a743247d ]
    
    Commit 151e887d8ff9 ("veth: Fixing transmit return status for dropped
    packets") exposed the fact that bpf_clone_redirect is capable of
    returning raw NET_XMIT_XXX return codes.
    
    This is in the conflict with its UAPI doc which says the following:
    "0 on success, or a negative error in case of failure."
    
    Update the UAPI to reflect the fact that bpf_clone_redirect can
    return positive error numbers, but don't explicitly define
    their meaning.
    
    Reported-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20230911194731.286342-1-sdf@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60446b5e74865acff1af5f2d89d99551c8e6e2c1
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon Sep 11 10:46:16 2023 +0300

    spi: intel-pci: Add support for Granite Rapids SPI serial flash
    
    [ Upstream commit 9855d60cfc720ff32355484c119acafd3c4dc806 ]
    
    Intel Granite Rapids has a flash controller that is compatible with the
    other Cannon Lake derivatives. Add Granite Rapids PCI ID to the driver
    list of supported devices.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Link: https://lore.kernel.org/r/20230911074616.3473347-1-mika.westerberg@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12716449289e687f7ca4f21074ec0c31b3cc95b2
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Mon Sep 11 14:38:07 2023 +0800

    ASoC: fsl: imx-pcm-rpmsg: Add SNDRV_PCM_INFO_BATCH flag
    
    [ Upstream commit 2f9426905a63be7ccf8cd10109caf1848aa0993a ]
    
    The rpmsg pcm device is a device which should support
    double buffering.
    
    Found this issue with pipewire. When there is no
    SNDRV_PCM_INFO_BATCH flag in driver, the pipewire will
    set headroom to be zero, and because rpmsg pcm device
    don't support residue report, when the latency setting
    is small, the "delay" always larger than "target" in
    alsa-pcm.c, that reading next period data is not
    scheduled on time.
    
    With SNDRV_PCM_INFO_BATCH flag in driver, the pipewire
    will select a smaller period size for device, then
    the task of reading next period data will be scheduled
    on time.
    
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1694414287-13291-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85ca138f922cd99370c56f884631f91cab661ac8
Author: Valentin Caron <valentin.caron@foss.st.com>
Date:   Wed Sep 6 15:27:35 2023 +0200

    spi: stm32: add a delay before SPI disable
    
    [ Upstream commit 6de8a70c84ee0586fdde4e671626b9caca6aed74 ]
    
    As explained in errata sheet, in section "2.14.5 Truncation of SPI output
    signals after EOT event":
    On STM32MP1x, EOT interrupt can be thrown before the true end of
    communication.
    
    So we add a delay of a half period to wait the real end of the
    transmission.
    
    Link: https://www.st.com/resource/en/errata_sheet/es0539-stm32mp131x3x5x-device-errata-stmicroelectronics.pdf
    Signed-off-by: Valentin Caron <valentin.caron@foss.st.com>
    Link: https://lore.kernel.org/r/20230906132735.748174-1-valentin.caron@foss.st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84592ec591be7d6b03180c389d5a81dea09fabb5
Author: Han Xu <han.xu@nxp.com>
Date:   Wed Sep 6 13:32:54 2023 -0500

    spi: nxp-fspi: reset the FLSHxCR1 registers
    
    [ Upstream commit 18495676f7886e105133f1dc06c1d5e8d5436f32 ]
    
    Reset the FLSHxCR1 registers to default value. ROM may set the register
    value and it affects the SPI NAND normal functions.
    
    Signed-off-by: Han Xu <han.xu@nxp.com>
    Link: https://lore.kernel.org/r/20230906183254.235847-1-han.xu@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5ae9d9f0c4132d68add52054e471be15b1d433b
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Thu Sep 14 00:19:16 2023 +0200

    ata: libata-eh: do not clear ATA_PFLAG_EH_PENDING in ata_eh_reset()
    
    [ Upstream commit 80cc944eca4f0baa9c381d0706f3160e491437f2 ]
    
    ata_scsi_port_error_handler() starts off by clearing ATA_PFLAG_EH_PENDING,
    before calling ap->ops->error_handler() (without holding the ap->lock).
    
    If an error IRQ is received while ap->ops->error_handler() is running,
    the irq handler will set ATA_PFLAG_EH_PENDING.
    
    Once ap->ops->error_handler() returns, ata_scsi_port_error_handler()
    checks if ATA_PFLAG_EH_PENDING is set, and if it is, another iteration
    of ATA EH is performed.
    
    The problem is that ATA_PFLAG_EH_PENDING is not only cleared by
    ata_scsi_port_error_handler(), it is also cleared by ata_eh_reset().
    
    ata_eh_reset() is called by ap->ops->error_handler(). This additional
    clearing done by ata_eh_reset() breaks the whole retry logic in
    ata_scsi_port_error_handler(). Thus, if an error IRQ is received while
    ap->ops->error_handler() is running, the port will currently remain
    frozen and will never get re-enabled.
    
    The additional clearing in ata_eh_reset() was introduced in commit
    1e641060c4b5 ("libata: clear eh_info on reset completion").
    
    Looking at the original error report:
    https://marc.info/?l=linux-ide&m=124765325828495&w=2
    
    We can see the following happening:
    [    1.074659] ata3: XXX port freeze
    [    1.074700] ata3: XXX hardresetting link, stopping engine
    [    1.074746] ata3: XXX flipping SControl
    
    [    1.411471] ata3: XXX irq_stat=400040 CONN|PHY
    [    1.411475] ata3: XXX port freeze
    
    [    1.420049] ata3: XXX starting engine
    [    1.420096] ata3: XXX rc=0, class=1
    [    1.420142] ata3: XXX clearing IRQs for thawing
    [    1.420188] ata3: XXX port thawed
    [    1.420234] ata3: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
    
    We are not supposed to be able to receive an error IRQ while the port is
    frozen (PxIE is set to 0, i.e. all IRQs for the port are disabled).
    
    AHCI 1.3.1 section 10.7.1.1 First Tier (IS Register) states:
    "Each bit location can be thought of as reporting a '1' if the virtual
    "interrupt line" for that port is indicating it wishes to generate an
    interrupt. That is, if a port has one or more interrupt status bit set,
    and the enables for those status bits are set, then this bit shall be set."
    
    Additionally, AHCI state P:ComInit clearly shows that the state machine
    will only jump to P:ComInitSetIS (which sets IS.IPS(x) to '1'), if PxIE.PCE
    is set to '1'. In our case, PxIE is set to 0, so IS.IPS(x) won't get set.
    
    So IS.IPS(x) only gets set if PxIS and PxIE is set.
    
    AHCI 1.3.1 section 10.7.1.1 First Tier (IS Register) also states:
    "The bits in this register are read/write clear. It is set by the level of
    the virtual interrupt line being a set, and cleared by a write of '1' from
    the software."
    
    So if IS.IPS(x) is set, you need to explicitly clear it by writing a 1 to
    IS.IPS(x) for that port.
    
    Since PxIE is cleared, the only way to get an interrupt while the port is
    frozen, is if IS.IPS(x) is set, and the only way IS.IPS(x) can be set when
    the port is frozen, is if it was set before the port was frozen.
    
    However, since commit 737dd811a3db ("ata: libahci: clear pending interrupt
    status"), we clear both PxIS and IS.IPS(x) after freezing the port, but
    before the COMRESET, so the problem that commit 1e641060c4b5 ("libata:
    clear eh_info on reset completion") fixed can no longer happen.
    
    Thus, revert commit 1e641060c4b5 ("libata: clear eh_info on reset
    completion"), so that the retry logic in ata_scsi_port_error_handler()
    works once again. (The retry logic is still needed, since we can still
    get an error IRQ _after_ the port has been thawed, but before
    ata_scsi_port_error_handler() takes the ap->lock in order to check
    if ATA_PFLAG_EH_PENDING is set.)
    
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2132ea3f9f5a682863bb408a0182ea9d283d6b18
Author: Steve French <stfrench@microsoft.com>
Date:   Fri Sep 15 01:10:40 2023 -0500

    smb3: correct places where ENOTSUPP is used instead of preferred EOPNOTSUPP
    
    [ Upstream commit ebc3d4e44a7e05457825e03d0560153687265523 ]
    
    checkpatch flagged a few places with:
         WARNING: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
    Also fixed minor typo
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2259e1901b2d8c0e8538fc99e77de443b939e749
Author: Michal Grzedzicki <mge@meta.com>
Date:   Mon Sep 11 10:03:40 2023 -0700

    scsi: pm80xx: Avoid leaking tags when processing OPC_INB_SET_CONTROLLER_CONFIG command
    
    [ Upstream commit c13e7331745852d0dd7c35eabbe181cbd5b01172 ]
    
    Tags allocated for OPC_INB_SET_CONTROLLER_CONFIG command need to be freed
    when we receive the response.
    
    Signed-off-by: Michal Grzedzicki <mge@meta.com>
    Link: https://lore.kernel.org/r/20230911170340.699533-2-mge@meta.com
    Acked-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82f575a7e81192588a02eafc5837820a0f661e6b
Author: Michal Grzedzicki <mge@meta.com>
Date:   Wed Sep 13 08:56:10 2023 -0700

    scsi: pm80xx: Use phy-specific SAS address when sending PHY_START command
    
    [ Upstream commit 71996bb835aed58c7ec4967be1d05190a27339ec ]
    
    Some cards have more than one SAS address. Using an incorrect address
    causes communication issues with some devices like expanders.
    
    Closes: https://lore.kernel.org/linux-kernel/A57AEA84-5CA0-403E-8053-106033C73C70@fb.com/
    Signed-off-by: Michal Grzedzicki <mge@meta.com>
    Link: https://lore.kernel.org/r/20230913155611.3183612-1-mge@meta.com
    Acked-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e392ff884768a151a375cc1ad1dea32dc1dc9c5
Author: Icenowy Zheng <uwu@icenowy.me>
Date:   Tue Sep 12 15:24:10 2023 +0800

    riscv: errata: fix T-Head dcache.cva encoding
    
    [ Upstream commit 8eb8fe67e2c84324398f5983c41b4f831d0705b3 ]
    
    The dcache.cva encoding shown in the comments are wrong, it's for
    dcache.cval1 (which is restricted to L1) instead.
    
    Fix this in the comment and in the hardcoded instruction.
    
    Signed-off-by: Icenowy Zheng <uwu@icenowy.me>
    Tested-by: Sergey Matyukevich <sergey.matyukevich@syntacore.com>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Reviewed-by: Guo Ren <guoren@kernel.org>
    Tested-by: Drew Fustini <dfustini@baylibre.com>
    Link: https://lore.kernel.org/r/20230912072410.2481-1-jszhang@kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91b6845ef387ab9ae2c6f3f8d43655be955e444b
Author: David Francis <David.Francis@amd.com>
Date:   Tue Sep 5 10:13:51 2023 -0400

    drm/amdgpu: Handle null atom context in VBIOS info ioctl
    
    [ Upstream commit 5e7e82254270c8cf8b107451c5de01cee2f135ae ]
    
    On some APU systems, there is no atom context and so the
    atom_context struct is null.
    
    Add a check to the VBIOS_INFO branch of amdgpu_info_ioctl
    to handle this case, returning all zeroes.
    
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: David Francis <David.Francis@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad3c37f90bae3675bc686562f7e63511d1033cc0
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Sep 7 15:44:54 2023 -0400

    drm/amdgpu/nbio4.3: set proper rmmio_remap.reg_offset for SR-IOV
    
    [ Upstream commit ab43213e7afd08ac68d4282060bacf309e70fd14 ]
    
    Needed for HDP flush to work correctly.
    
    Reviewed-by: Timmy Tsai <timmtsai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cca15a82790772c0303ae295f7153c4af0536ad1
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Sep 6 11:35:04 2023 -0400

    drm/amdgpu/soc21: don't remap HDP registers for SR-IOV
    
    [ Upstream commit 1832403cd41ca6b19b24e9d64f79cb08d920ca44 ]
    
    This matches the behavior for soc15 and nv.
    
    Acked-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Reviewed-by: Timmy Tsai <timmtsai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9971393d4c9be5eec3c6b30d9e312ba88c865ac
Author: Swapnil Patel <swapnil.patel@amd.com>
Date:   Thu Aug 17 14:04:26 2023 -0400

    drm/amd/display: Don't check registers, if using AUX BL control
    
    [ Upstream commit f5b2c10b57615828b531bb0ae56bd6325a41167e ]
    
    [Why]
    Currently the driver looks DCN registers to access if BL is on or not.
    This check is not valid if we are using AUX based brightness control.
    This causes driver to not send out "backlight off" command during power off
    sequence as it already thinks it is off.
    
    [How]
    Only check DCN registers if we aren't using AUX based brightness control.
    
    Reviewed-by: Wenjing Liu <wenjing.liu@amd.com>
    Acked-by: Stylon Wang <stylon.wang@amd.com>
    Signed-off-by: Swapnil Patel <swapnil.patel@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49bdfc83c74a26d418734007eed187b01ba48aa2
Author: Julia Lawall <Julia.Lawall@inria.fr>
Date:   Thu Sep 7 11:55:18 2023 +0200

    thermal/of: add missing of_node_put()
    
    [ Upstream commit 8a81cf96f5510aaf9a65d103f7405079a7b0fcc5 ]
    
    for_each_child_of_node performs an of_node_get on each
    iteration, so a break out of the loop requires an
    of_node_put.
    
    This was done using the Coccinelle semantic patch
    iterators/for_each_child.cocci
    
    Signed-off-by: Julia Lawall <Julia.Lawall@inria.fr>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6a68f16324681749397d1697e0914f80d7b0892
Author: Luke D. Jones <luke@ljones.dev>
Date:   Tue Sep 5 20:28:13 2023 +1200

    platform/x86: asus-wmi: Support 2023 ROG X16 tablet mode
    
    [ Upstream commit 4106a70ddad57ee6d8f98b81d6f036740c72762b ]
    
    Add quirk for ASUS ROG X16 (GV601V, 2023 versions) Flow 2-in-1
    to enable tablet mode with lid flip (all screen rotations).
    
    Signed-off-by: Luke D. Jones <luke@ljones.dev>
    Link: https://lore.kernel.org/r/20230905082813.13470-1-luke@ljones.dev
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1f916c6eb0c98dbab5a1392163a29cae482add8
Author: David Thompson <davthompson@nvidia.com>
Date:   Tue Sep 5 09:32:43 2023 -0400

    platform/mellanox: mlxbf-bootctl: add NET dependency into Kconfig
    
    [ Upstream commit c2dffda1d8f7511505bbbf16ba282f2079b30089 ]
    
    The latest version of the mlxbf_bootctl driver utilizes
    "sysfs_format_mac", and this API is only available if
    NET is defined in the kernel configuration. This patch
    changes the mlxbf_bootctl Kconfig to depend on NET.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202309031058.JvwNDBKt-lkp@intel.com/
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: David Thompson <davthompson@nvidia.com>
    Link: https://lore.kernel.org/r/20230905133243.31550-1-davthompson@nvidia.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfbcef80dda96f6433eb6db6d146e68c46cf314c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Sep 4 21:54:36 2023 +0200

    ata: sata_mv: Fix incorrect string length computation in mv_dump_mem()
    
    [ Upstream commit e97eb65dd464e7f118a16a26337322d07eb653e2 ]
    
    snprintf() returns the "number of characters which *would* be generated for
    the given input", not the size *really* generated.
    
    In order to avoid too large values for 'o' (and potential negative values
    for "sizeof(linebuf) o") use scnprintf() instead of snprintf().
    
    Note that given the "w < 4" in the for loop, the buffer can NOT
    overflow, but using the *right* function is always better.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 797d75bd575cbc5263b870adad900ce0ae69cf06
Author: Guangguan Wang <guangguan.wang@linux.alibaba.com>
Date:   Fri Sep 8 11:31:42 2023 +0800

    net/smc: bugfix for smcr v2 server connect success statistic
    
    [ Upstream commit 6912e724832c47bb381eb1bd1e483ec8df0d0f0f ]
    
    In the macro SMC_STAT_SERV_SUCC_INC, the smcd_version is used
    to determin whether to increase the v1 statistic or the v2
    statistic. It is correct for SMCD. But for SMCR, smcr_version
    should be used.
    
    Signed-off-by: Guangguan Wang <guangguan.wang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b08a4938229dbb530a35c41b83002a1457c6ff49
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Thu Sep 7 12:28:20 2023 -0400

    ring-buffer: Do not attempt to read past "commit"
    
    [ Upstream commit 95a404bd60af6c4d9d8db01ad14fe8957ece31ca ]
    
    When iterating over the ring buffer while the ring buffer is active, the
    writer can corrupt the reader. There's barriers to help detect this and
    handle it, but that code missed the case where the last event was at the
    very end of the page and has only 4 bytes left.
    
    The checks to detect the corruption by the writer to reads needs to see the
    length of the event. If the length in the first 4 bytes is zero then the
    length is stored in the second 4 bytes. But if the writer is in the process
    of updating that code, there's a small window where the length in the first
    4 bytes could be zero even though the length is only 4 bytes. That will
    cause rb_event_length() to read the next 4 bytes which could happen to be off the
    allocated page.
    
    To protect against this, fail immediately if the next event pointer is
    less than 8 bytes from the end of the commit (last byte of data), as all
    events must be a minimum of 8 bytes anyway.
    
    Link: https://lore.kernel.org/all/20230905141245.26470-1-Tze-nan.Wu@mediatek.com/
    Link: https://lore.kernel.org/linux-trace-kernel/20230907122820.0899019c@gandalf.local.home
    
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Reported-by: Tze-nan Wu <Tze-nan.Wu@mediatek.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit baa1634bc936e605bf3f4143ecf17e5e3249330e
Author: Ricardo B. Marliere <rbmarliere@gmail.com>
Date:   Tue Aug 22 18:09:40 2023 -0300

    selftests: fix dependency checker script
    
    [ Upstream commit 5f9dd2e896a91bfca90f8463eb6808c03d535d8a ]
    
    This patch fixes inconsistencies in the parsing rules of the levels 1
    and 2 of the kselftest_deps.sh.  It was added the levels 4 and 5 to
    account for a few edge cases that are present in some tests, also some
    minor identation styling have been fixed (s/    /\t/g).
    
    Signed-off-by: Ricardo B. Marliere <rbmarliere@gmail.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45ad79c9cb5059b2fcd8b37debf18cf7e6693485
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Aug 28 09:06:44 2023 +0100

    btrfs: assert delayed node locked when removing delayed item
    
    [ Upstream commit a57c2d4e46f519b24558ae0752c17eec416ac72a ]
    
    When removing a delayed item, or releasing which will remove it as well,
    we will modify one of the delayed node's rbtrees and item counter if the
    delayed item is in one of the rbtrees. This require having the delayed
    node's mutex locked, otherwise we will race with other tasks modifying
    the rbtrees and the counter.
    
    This is motivated by a previous version of another patch actually calling
    btrfs_release_delayed_item() after unlocking the delayed node's mutex and
    against a delayed item that is in a rbtree.
    
    So assert at __btrfs_remove_delayed_item() that the delayed node's mutex
    is locked.
    
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11054f0b889fbc5636c55361cb93a900633d8374
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Wed Sep 6 16:19:30 2023 +0800

    ring-buffer: Avoid softlockup in ring_buffer_resize()
    
    [ Upstream commit f6bd2c92488c30ef53b5bd80c52f0a7eee9d545a ]
    
    When user resize all trace ring buffer through file 'buffer_size_kb',
    then in ring_buffer_resize(), kernel allocates buffer pages for each
    cpu in a loop.
    
    If the kernel preemption model is PREEMPT_NONE and there are many cpus
    and there are many buffer pages to be allocated, it may not give up cpu
    for a long time and finally cause a softlockup.
    
    To avoid it, call cond_resched() after each cpu buffer allocation.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230906081930.3939106-1-zhengyejian1@huawei.com
    
    Cc: <mhiramat@kernel.org>
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a687e817d814a161dc47c72430404a2a8a6c5f69
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Mon Jun 26 08:11:44 2023 +0800

    selftests/ftrace: Correctly enable event in instance-event.tc
    
    [ Upstream commit f4e4ada586995b17f828c6d147d1800eb1471450 ]
    
    Function instance_set() expects to enable event 'sched_switch', so we
    should set 1 to its 'enable' file.
    
    Testcase passed after this patch:
      # ./ftracetest test.d/instances/instance-event.tc
      === Ftrace unit tests ===
      [1] Test creation and deletion of trace instances while setting an event
      [PASS]
    
      # of passed:  1
      # of failed:  0
      # of unresolved:  0
      # of untested:  0
      # of unsupported:  0
      # of xfailed:  0
      # of undefined(test bug):  0
    
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Acked-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5fb322df090e5419ebfb3dbac6401f8c46fd13d5
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Mon Sep 4 10:30:45 2023 +0900

    scsi: ufs: core: Poll HCS.UCRDY before issuing a UIC command
    
    [ Upstream commit d32533d30e2119b0c0aa17596734f1f842f750df ]
    
    With auto hibern8 enabled, UIC could be busy processing a hibern8 operation
    and the HCI would reports UIC not ready for a short while through
    HCS.UCRDY. The UFS driver doesn't currently handle this situation. The
    UFSHCI spec specifies UCRDY like this: whether the host controller is ready
    to process UIC COMMAND
    
    The 'ready' could be seen as many different meanings. If the meaning
    includes not processing any request from HCI, processing a hibern8
    operation can be 'not ready'. In this situation, the driver needs to wait
    until the operations is completed.
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Link: https://lore.kernel.org/r/550484ffb66300bdcec63d3e304dfd55cb432f1f.1693790060.git.kwmad.kim@samsung.com
    Reviewed-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Chanwoo Lee <cw9316.lee@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81a6cdfcfd233adf0be7952e91ffda4b9a04e959
Author: Kiwoong Kim <kwmad.kim@samsung.com>
Date:   Mon Sep 4 10:30:44 2023 +0900

    scsi: ufs: core: Move __ufshcd_send_uic_cmd() outside host_lock
    
    [ Upstream commit 2d3f59cf868b4a2dd678a96cd49bdd91411bd59f ]
    
    __ufshcd_send_uic_cmd() is wrapped by uic_cmd_mutex and its related
    contexts are accessed within the section wrapped by uic_cmd_mutex. Thus,
    wrapping with host_lock is redundant.
    
    Signed-off-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Link: https://lore.kernel.org/r/782ba5f26f0a96e58d85dff50751787d2d2a6b2b.1693790060.git.kwmad.kim@samsung.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Chanwoo Lee <cw9316.lee@samsung.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 843348f9e4aab5802b27db8d89634a40c88854c1
Author: Javed Hasan <jhasan@marvell.com>
Date:   Fri Sep 1 11:36:46 2023 +0530

    scsi: qedf: Add synchronization between I/O completions and abort
    
    [ Upstream commit 7df0b2605489bef3f4223ad66f1f9bb8d50d4cd2 ]
    
    Avoid race condition between I/O completion and abort processing by
    protecting the cmd_type with the rport lock.
    
    Signed-off-by: Javed Hasan <jhasan@marvell.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Link: https://lore.kernel.org/r/20230901060646.27885-1-skashyap@marvell.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 655e9d209c0604d9559697c3cb8014e3ca7c0d9e
Author: Helge Deller <deller@gmx.de>
Date:   Thu Aug 31 22:36:12 2023 +0200

    parisc: irq: Make irq_stack_union static to avoid sparse warning
    
    [ Upstream commit b1bef1388c427cdad7331a9c8eb4ebbbe5b954b0 ]
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a2c2630e18dc43ceb6de1137bb7042d250b1bfd
Author: Helge Deller <deller@gmx.de>
Date:   Thu Aug 31 22:08:32 2023 +0200

    parisc: drivers: Fix sparse warning
    
    [ Upstream commit b137b9d60b8add5620a06c687a71ce18776730b0 ]
    
    Fix "warning: directive in macro's argument list" warning.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60caeaf090d5b8e445b85a80ee7a3dfdbb5edc1d
Author: Helge Deller <deller@gmx.de>
Date:   Wed Aug 30 11:59:55 2023 +0200

    parisc: iosapic.c: Fix sparse warnings
    
    [ Upstream commit 927c6c8aa27c284a799b8c18784e37d3373af908 ]
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 632e0fcf409b421a0625d8b1bb5b6b1b876186b2
Author: Helge Deller <deller@gmx.de>
Date:   Wed Aug 30 08:10:01 2023 +0200

    parisc: sba: Fix compile warning wrt list of SBA devices
    
    [ Upstream commit eb3255ee8f6f4691471a28fbf22db5e8901116cd ]
    
    Fix this makecheck warning:
    drivers/parisc/sba_iommu.c:98:19: warning: symbol 'sba_list'
            was not declared. Should it be static?
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be90c9e29dd59b7d19a73297a1590ff3ec1d22ea
Author: Nigel Kirkland <nkirkland2304@gmail.com>
Date:   Thu Aug 17 12:43:01 2023 -0700

    nvme-fc: Prevent null pointer dereference in nvme_fc_io_getuuid()
    
    [ Upstream commit 8ae5b3a685dc59a8cf7ccfe0e850999ba9727a3c ]
    
    The nvme_fc_fcp_op structure describing an AEN operation is initialized with a
    null request structure pointer. An FC LLDD may make a call to
    nvme_fc_io_getuuid passing a pointer to an nvmefc_fcp_req for an AEN operation.
    
    Add validation of the request structure pointer before dereference.
    
    Signed-off-by: Nigel Kirkland <nkirkland2304@gmail.com>
    Reviewed-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36b29974a7ad2ff604c24ad348f940506c7b1209
Author: Tobias Schramm <t.schramm@manjaro.org>
Date:   Sun Aug 27 17:25:58 2023 +0200

    spi: sun6i: fix race between DMA RX transfer completion and RX FIFO drain
    
    [ Upstream commit 1f11f4202caf5710204d334fe63392052783876d ]
    
    Previously the transfer complete IRQ immediately drained to RX FIFO to
    read any data remaining in FIFO to the RX buffer. This behaviour is
    correct when dealing with SPI in interrupt mode. However in DMA mode the
    transfer complete interrupt still fires as soon as all bytes to be
    transferred have been stored in the FIFO. At that point data in the FIFO
    still needs to be picked up by the DMA engine. Thus the drain procedure
    and DMA engine end up racing to read from RX FIFO, corrupting any data
    read. Additionally the RX buffer pointer is never adjusted according to
    DMA progress in DMA mode, thus calling the RX FIFO drain procedure in DMA
    mode is a bug.
    Fix corruptions in DMA RX mode by draining RX FIFO only in interrupt mode.
    Also wait for completion of RX DMA when in DMA mode before returning to
    ensure all data has been copied to the supplied memory buffer.
    
    Signed-off-by: Tobias Schramm <t.schramm@manjaro.org>
    Link: https://lore.kernel.org/r/20230827152558.5368-3-t.schramm@manjaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e15bb292b24630ee832bfc7fd616bd72c7682bbb
Author: Tobias Schramm <t.schramm@manjaro.org>
Date:   Sun Aug 27 17:25:57 2023 +0200

    spi: sun6i: reduce DMA RX transfer width to single byte
    
    [ Upstream commit 171f8a49f212e87a8b04087568e1b3d132e36a18 ]
    
    Through empirical testing it has been determined that sometimes RX SPI
    transfers with DMA enabled return corrupted data. This is down to single
    or even multiple bytes lost during DMA transfer from SPI peripheral to
    memory. It seems the RX FIFO within the SPI peripheral can become
    confused when performing bus read accesses wider than a single byte to it
    during an active SPI transfer.
    
    This patch reduces the width of individual DMA read accesses to the
    RX FIFO to a single byte to mitigate that issue.
    
    Signed-off-by: Tobias Schramm <t.schramm@manjaro.org>
    Link: https://lore.kernel.org/r/20230827152558.5368-2-t.schramm@manjaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5685f8a6fae1fbe480493b980a1fdbe67c86a094
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Tue Aug 29 22:53:52 2023 +0200

    bpf: Annotate bpf_long_memcpy with data_race
    
    [ Upstream commit 6a86b5b5cd76d2734304a0173f5f01aa8aa2025e ]
    
    syzbot reported a data race splat between two processes trying to
    update the same BPF map value via syscall on different CPUs:
    
      BUG: KCSAN: data-race in bpf_percpu_array_update / bpf_percpu_array_update
    
      write to 0xffffe8fffe7425d8 of 8 bytes by task 8257 on cpu 1:
       bpf_long_memcpy include/linux/bpf.h:428 [inline]
       bpf_obj_memcpy include/linux/bpf.h:441 [inline]
       copy_map_value_long include/linux/bpf.h:464 [inline]
       bpf_percpu_array_update+0x3bb/0x500 kernel/bpf/arraymap.c:380
       bpf_map_update_value+0x190/0x370 kernel/bpf/syscall.c:175
       generic_map_update_batch+0x3ae/0x4f0 kernel/bpf/syscall.c:1749
       bpf_map_do_batch+0x2df/0x3d0 kernel/bpf/syscall.c:4648
       __sys_bpf+0x28a/0x780
       __do_sys_bpf kernel/bpf/syscall.c:5241 [inline]
       __se_sys_bpf kernel/bpf/syscall.c:5239 [inline]
       __x64_sys_bpf+0x43/0x50 kernel/bpf/syscall.c:5239
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
      write to 0xffffe8fffe7425d8 of 8 bytes by task 8268 on cpu 0:
       bpf_long_memcpy include/linux/bpf.h:428 [inline]
       bpf_obj_memcpy include/linux/bpf.h:441 [inline]
       copy_map_value_long include/linux/bpf.h:464 [inline]
       bpf_percpu_array_update+0x3bb/0x500 kernel/bpf/arraymap.c:380
       bpf_map_update_value+0x190/0x370 kernel/bpf/syscall.c:175
       generic_map_update_batch+0x3ae/0x4f0 kernel/bpf/syscall.c:1749
       bpf_map_do_batch+0x2df/0x3d0 kernel/bpf/syscall.c:4648
       __sys_bpf+0x28a/0x780
       __do_sys_bpf kernel/bpf/syscall.c:5241 [inline]
       __se_sys_bpf kernel/bpf/syscall.c:5239 [inline]
       __x64_sys_bpf+0x43/0x50 kernel/bpf/syscall.c:5239
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
      value changed: 0x0000000000000000 -> 0xfffffff000002788
    
    The bpf_long_memcpy is used with 8-byte aligned pointers, power-of-8 size
    and forced to use long read/writes to try to atomically copy long counters.
    It is best-effort only and no barriers are here since it _will_ race with
    concurrent updates from BPF programs. The bpf_long_memcpy() is called from
    bpf(2) syscall. Marco suggested that the best way to make this known to
    KCSAN would be to use data_race() annotation.
    
    Reported-by: syzbot+97522333291430dd277f@syzkaller.appspotmail.com
    Suggested-by: Marco Elver <elver@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Marco Elver <elver@google.com>
    Link: https://lore.kernel.org/bpf/000000000000d87a7f06040c970c@google.com
    Link: https://lore.kernel.org/bpf/57628f7a15e20d502247c3b55fceb1cb2b31f266.1693342186.git.daniel@iogearbox.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be8f49029eca3efbad0d74dbff3cb9129994ffab
Author: Sergey Senozhatsky <senozhatsky@chromium.org>
Date:   Wed Aug 16 11:32:21 2023 +0900

    dma-debug: don't call __dma_entry_alloc_check_leak() under free_entries_lock
    
    [ Upstream commit fb5a4315591dae307a65fc246ca80b5159d296e1 ]
    
    __dma_entry_alloc_check_leak() calls into printk -> serial console
    output (qcom geni) and grabs port->lock under free_entries_lock
    spin lock, which is a reverse locking dependency chain as qcom_geni
    IRQ handler can call into dma-debug code and grab free_entries_lock
    under port->lock.
    
    Move __dma_entry_alloc_check_leak() call out of free_entries_lock
    scope so that we don't acquire serial console's port->lock under it.
    
    Trimmed-down lockdep splat:
    
     The existing dependency chain (in reverse order) is:
    
                   -> #2 (free_entries_lock){-.-.}-{2:2}:
            _raw_spin_lock_irqsave+0x60/0x80
            dma_entry_alloc+0x38/0x110
            debug_dma_map_page+0x60/0xf8
            dma_map_page_attrs+0x1e0/0x230
            dma_map_single_attrs.constprop.0+0x6c/0xc8
            geni_se_rx_dma_prep+0x40/0xcc
            qcom_geni_serial_isr+0x310/0x510
            __handle_irq_event_percpu+0x110/0x244
            handle_irq_event_percpu+0x20/0x54
            handle_irq_event+0x50/0x88
            handle_fasteoi_irq+0xa4/0xcc
            handle_irq_desc+0x28/0x40
            generic_handle_domain_irq+0x24/0x30
            gic_handle_irq+0xc4/0x148
            do_interrupt_handler+0xa4/0xb0
            el1_interrupt+0x34/0x64
            el1h_64_irq_handler+0x18/0x24
            el1h_64_irq+0x64/0x68
            arch_local_irq_enable+0x4/0x8
            ____do_softirq+0x18/0x24
            ...
    
                   -> #1 (&port_lock_key){-.-.}-{2:2}:
            _raw_spin_lock_irqsave+0x60/0x80
            qcom_geni_serial_console_write+0x184/0x1dc
            console_flush_all+0x344/0x454
            console_unlock+0x94/0xf0
            vprintk_emit+0x238/0x24c
            vprintk_default+0x3c/0x48
            vprintk+0xb4/0xbc
            _printk+0x68/0x90
            register_console+0x230/0x38c
            uart_add_one_port+0x338/0x494
            qcom_geni_serial_probe+0x390/0x424
            platform_probe+0x70/0xc0
            really_probe+0x148/0x280
            __driver_probe_device+0xfc/0x114
            driver_probe_device+0x44/0x100
            __device_attach_driver+0x64/0xdc
            bus_for_each_drv+0xb0/0xd8
            __device_attach+0xe4/0x140
            device_initial_probe+0x1c/0x28
            bus_probe_device+0x44/0xb0
            device_add+0x538/0x668
            of_device_add+0x44/0x50
            of_platform_device_create_pdata+0x94/0xc8
            of_platform_bus_create+0x270/0x304
            of_platform_populate+0xac/0xc4
            devm_of_platform_populate+0x60/0xac
            geni_se_probe+0x154/0x160
            platform_probe+0x70/0xc0
            ...
    
                   -> #0 (console_owner){-...}-{0:0}:
            __lock_acquire+0xdf8/0x109c
            lock_acquire+0x234/0x284
            console_flush_all+0x330/0x454
            console_unlock+0x94/0xf0
            vprintk_emit+0x238/0x24c
            vprintk_default+0x3c/0x48
            vprintk+0xb4/0xbc
            _printk+0x68/0x90
            dma_entry_alloc+0xb4/0x110
            debug_dma_map_sg+0xdc/0x2f8
            __dma_map_sg_attrs+0xac/0xe4
            dma_map_sgtable+0x30/0x4c
            get_pages+0x1d4/0x1e4 [msm]
            msm_gem_pin_pages_locked+0x38/0xac [msm]
            msm_gem_pin_vma_locked+0x58/0x88 [msm]
            msm_ioctl_gem_submit+0xde4/0x13ac [msm]
            drm_ioctl_kernel+0xe0/0x15c
            drm_ioctl+0x2e8/0x3f4
            vfs_ioctl+0x30/0x50
            ...
    
     Chain exists of:
       console_owner --> &port_lock_key --> free_entries_lock
    
      Possible unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(free_entries_lock);
                                    lock(&port_lock_key);
                                    lock(free_entries_lock);
       lock(console_owner);
    
                    *** DEADLOCK ***
    
     Call trace:
      dump_backtrace+0xb4/0xf0
      show_stack+0x20/0x30
      dump_stack_lvl+0x60/0x84
      dump_stack+0x18/0x24
      print_circular_bug+0x1cc/0x234
      check_noncircular+0x78/0xac
      __lock_acquire+0xdf8/0x109c
      lock_acquire+0x234/0x284
      console_flush_all+0x330/0x454
      console_unlock+0x94/0xf0
      vprintk_emit+0x238/0x24c
      vprintk_default+0x3c/0x48
      vprintk+0xb4/0xbc
      _printk+0x68/0x90
      dma_entry_alloc+0xb4/0x110
      debug_dma_map_sg+0xdc/0x2f8
      __dma_map_sg_attrs+0xac/0xe4
      dma_map_sgtable+0x30/0x4c
      get_pages+0x1d4/0x1e4 [msm]
      msm_gem_pin_pages_locked+0x38/0xac [msm]
      msm_gem_pin_vma_locked+0x58/0x88 [msm]
      msm_ioctl_gem_submit+0xde4/0x13ac [msm]
      drm_ioctl_kernel+0xe0/0x15c
      drm_ioctl+0x2e8/0x3f4
      vfs_ioctl+0x30/0x50
      ...
    
    Reported-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Acked-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89744b64914426cbabceb3d8a149176b5dafdfb5
Author: Xiubo Li <xiubli@redhat.com>
Date:   Wed Dec 21 14:13:51 2022 +0800

    ceph: drop messages from MDS when unmounting
    
    [ Upstream commit e3dfcab2080dc1f9a4b09cc1327361bc2845bfcd ]
    
    When unmounting all the dirty buffers will be flushed and after
    the last osd request is finished the last reference of the i_count
    will be released. Then it will flush the dirty cap/snap to MDSs,
    and the unmounting won't wait the possible acks, which will ihold
    the inodes when updating the metadata locally but makes no sense
    any more, of this. This will make the evict_inodes() to skip these
    inodes.
    
    If encrypt is enabled the kernel generate a warning when removing
    the encrypt keys when the skipped inodes still hold the keyring:
    
    WARNING: CPU: 4 PID: 168846 at fs/crypto/keyring.c:242 fscrypt_destroy_keyring+0x7e/0xd0
    CPU: 4 PID: 168846 Comm: umount Tainted: G S  6.1.0-rc5-ceph-g72ead199864c #1
    Hardware name: Supermicro SYS-5018R-WR/X10SRW-F, BIOS 2.0 12/17/2015
    RIP: 0010:fscrypt_destroy_keyring+0x7e/0xd0
    RSP: 0018:ffffc9000b277e28 EFLAGS: 00010202
    RAX: 0000000000000002 RBX: ffff88810d52ac00 RCX: ffff88810b56aa00
    RDX: 0000000080000000 RSI: ffffffff822f3a09 RDI: ffff888108f59000
    RBP: ffff8881d394fb88 R08: 0000000000000028 R09: 0000000000000000
    R10: 0000000000000001 R11: 11ff4fe6834fcd91 R12: ffff8881d394fc40
    R13: ffff888108f59000 R14: ffff8881d394f800 R15: 0000000000000000
    FS:  00007fd83f6f1080(0000) GS:ffff88885fd00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f918d417000 CR3: 000000017f89a005 CR4: 00000000003706e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
    <TASK>
    generic_shutdown_super+0x47/0x120
    kill_anon_super+0x14/0x30
    ceph_kill_sb+0x36/0x90 [ceph]
    deactivate_locked_super+0x29/0x60
    cleanup_mnt+0xb8/0x140
    task_work_run+0x67/0xb0
    exit_to_user_mode_prepare+0x23d/0x240
    syscall_exit_to_user_mode+0x25/0x60
    do_syscall_64+0x40/0x80
    entry_SYSCALL_64_after_hwframe+0x63/0xcd
    RIP: 0033:0x7fd83dc39e9b
    
    Later the kernel will crash when iput() the inodes and dereferencing
    the "sb->s_master_keys", which has been released by the
    generic_shutdown_super().
    
    Link: https://tracker.ceph.com/issues/59162
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-and-tested-by: LuÃ­s Henriques <lhenriques@suse.de>
    Reviewed-by: Milind Changire <mchangir@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1375d9600c38c231163de584656b07aef9a27b0d
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Jul 21 13:18:41 2023 -0700

    x86/reboot: VMCLEAR active VMCSes before emergency reboot
    
    [ Upstream commit b23c83ad2c638420ec0608a9de354507c41bec29 ]
    
    VMCLEAR active VMCSes before any emergency reboot, not just if the kernel
    may kexec into a new kernel after a crash.  Per Intel's SDM, the VMX
    architecture doesn't require the CPU to flush the VMCS cache on INIT.  If
    an emergency reboot doesn't RESET CPUs, cached VMCSes could theoretically
    be kept and only be written back to memory after the new kernel is booted,
    i.e. could effectively corrupt memory after reboot.
    
    Opportunistically remove the setting of the global pointer to NULL to make
    checkpatch happy.
    
    Cc: Andrew Cooper <Andrew.Cooper3@citrix.com>
    Link: https://lore.kernel.org/r/20230721201859.2307736-2-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85fafa7ef0ac44959fd8ec156da6eaf4bb2a0345
Author: William A. Kennington III <william@wkennington.com>
Date:   Sat Sep 23 18:02:14 2023 -0700

    i2c: npcm7xx: Fix callback completion ordering
    
    [ Upstream commit 92e73d807b68b2214fcafca4e130b5300a9d4b3c ]
    
    Sometimes, our completions race with new master transfers and override
    the bus->operation and bus->master_or_slave variables. This causes
    transactions to timeout and kernel crashes less frequently.
    
    To remedy this, we re-order all completions to the very end of the
    function.
    
    Fixes: 56a1485b102e ("i2c: npcm7xx: Add Nuvoton NPCM I2C controller driver")
    Signed-off-by: William A. Kennington III <william@wkennington.com>
    Reviewed-by: Tali Perry <tali.perry1@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d6c2f0942c3e0bd826c24dc17d1c544f4ec82de
Author: Wenhua Lin <Wenhua.Lin@unisoc.com>
Date:   Thu Sep 21 20:25:27 2023 +0800

    gpio: pmic-eic-sprd: Add can_sleep flag for PMIC EIC chip
    
    [ Upstream commit 26d9e5640d2130ee16df7b1fb6a908f460ab004c ]
    
    The drivers uses a mutex and I2C bus access in its PMIC EIC chip
    get implementation. This means these functions can sleep and the PMIC EIC
    chip should set the can_sleep property to true.
    
    This will ensure that a warning is printed when trying to get the
    value from a context that potentially can't sleep.
    
    Fixes: 348f3cde84ab ("gpio: Add Spreadtrum PMIC EIC driver support")
    Signed-off-by: Wenhua Lin <Wenhua.Lin@unisoc.com>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e578a26084eba5758972ede124169510f778cf45
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Tue Sep 19 18:41:01 2023 +0100

    firmware: arm_ffa: Don't set the memory region attributes for MEM_LEND
    
    [ Upstream commit 9dda1178479aa0a73fe0eaabfe2d9a1c603cfeed ]
    
    As per the FF-A specification: section "Usage of other memory region
    attributes", in a transaction to donate memory or lend memory to a single
    borrower, if the receiver is a PE or Proxy endpoint, the owner must not
    specify the attributes and the relayer will return INVALID_PARAMETERS
    if the attributes are set.
    
    Let us not set the memory region attributes for MEM_LEND.
    
    Fixes: 82a8daaecfd9 ("firmware: arm_ffa: Add support for MEM_LEND")
    Reported-by: Joao Alves <joao.alves@arm.com>
    Reported-by: Olivier Deprez <olivier.deprez@arm.com>
    Link: https://lore.kernel.org/r/20230919-ffa_v1-1_notif-v2-13-6f3a3ca3923c@arm.com
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 099cfc6e5d1bbf4639521b9f7be3d70ed6711ded
Author: Rob Herring <robh@kernel.org>
Date:   Mon Sep 11 16:45:37 2023 -0500

    arm64: dts: imx: Add imx8mm-prt8mm.dtb to build
    
    [ Upstream commit f09752eaf0e8f8befc26b44c4d3e15633e56d16a ]
    
    imx8mm-prt8mm.dts was not getting built. Add it to the build.
    
    Fixes: 58497d7a13ed ("arm64: dts: imx: add Protonic PRT8MM board")
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 328efccc7847b55b0083a5b5a81e28a4f79b6fa0
Author: Nathan Rossi <nathan.rossi@digi.com>
Date:   Mon Aug 14 01:57:00 2023 +0000

    soc: imx8m: Enable OCOTP clock for imx8mm before reading registers
    
    [ Upstream commit 9d1e8275a28f51599d754ce661c91e0a689c0234 ]
    
    Commit 836fb30949d9 ("soc: imx8m: Enable OCOTP clock before reading the
    register") added configuration to enable the OCOTP clock before
    attempting to read from the associated registers.
    
    This same kexec issue is present with the imx8m SoCs that use the
    imx8mm_soc_uid function (e.g. imx8mp). This requires the imx8mm_soc_uid
    function to configure the OCOTP clock before accessing the associated
    registers. This change implements the same clock enable functionality
    that is present in the imx8mq_soc_revision function for the
    imx8mm_soc_uid function.
    
    Signed-off-by: Nathan Rossi <nathan.rossi@digi.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Fixes: 836fb30949d9 ("soc: imx8m: Enable OCOTP clock before reading the register")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aab681bcb13a7b3390ed3075e6bc9426d0bf2245
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Sep 21 17:26:10 2023 +1000

    selftests/powerpc: Fix emit_tests to work with run_kselftest.sh
    
    [ Upstream commit 58b33e78a31782ffe25d404d5eba9a45fe636e27 ]
    
    In order to use run_kselftest.sh the list of tests must be emitted to
    populate kselftest-list.txt.
    
    The powerpc Makefile is written to use EMIT_TESTS. But support for
    EMIT_TESTS was dropped in commit d4e59a536f50 ("selftests: Use runner.sh
    for emit targets"). Although prior to that commit a548de0fe8e1
    ("selftests: lib.mk: add test execute bit check to EMIT_TESTS") had
    already broken run_kselftest.sh for powerpc due to the executable check
    using the wrong path.
    
    It can be fixed by replacing the EMIT_TESTS definitions with actual
    emit_tests rules in the powerpc Makefiles. This makes run_kselftest.sh
    able to run powerpc tests:
    
      $ cd linux
      $ export ARCH=powerpc
      $ export CROSS_COMPILE=powerpc64le-linux-gnu-
      $ make headers
      $ make -j -C tools/testing/selftests install
      $ grep -c "^powerpc" tools/testing/selftests/kselftest_install/kselftest-list.txt
      182
    
    Fixes: d4e59a536f50 ("selftests: Use runner.sh for emit targets")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230921072623.828772-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 763f029f8c0f3f4662312709b34ab8240e50ef13
Author: Benjamin Gray <bgray@linux.ibm.com>
Date:   Tue Feb 28 11:07:08 2023 +1100

    selftests/powerpc: Pass make context to children
    
    [ Upstream commit 4ecd0868c5138238dec8a1549bb6ff8e5b48208b ]
    
    Make supports passing the 'jobserver' (parallel make support) to child
    invocations of make when either
            1. The target command uses $(MAKE) directly
            2. The command starts with '+'
    
    This context is not passed through expansions that result in $(MAKE), so
    the macros used in several places fail to pass on the jobserver context.
    Warnings are also raised by the child mentioning this.
    
    Prepend macros lines that invoke $(MAKE) with '+' to allow passing the
    jobserver context to these children.
    
    Signed-off-by: Benjamin Gray <bgray@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230228000709.124727-3-bgray@linux.ibm.com
    Stable-dep-of: 58b33e78a317 ("selftests/powerpc: Fix emit_tests to work with run_kselftest.sh")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9dc3d6b761d857d6dbd97fdedb13c2f9d6b4a40
Author: Benjamin Gray <bgray@linux.ibm.com>
Date:   Tue Feb 28 11:07:07 2023 +1100

    selftests/powerpc: Use CLEAN macro to fix make warning
    
    [ Upstream commit 69608683a65be5322ef44091eaeb9890472b2eea ]
    
    The CLEAN macro was added in 337f1e36 to prevent the
    
        Makefile:50: warning: overriding recipe for target 'clean'
        ../../lib.mk:124: warning: ignoring old recipe for target 'clean'
    
    style warnings. Expand it's use to fix another case of redefining a
    target directly.
    
    Signed-off-by: Benjamin Gray <bgray@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230228000709.124727-2-bgray@linux.ibm.com
    Stable-dep-of: 58b33e78a317 ("selftests/powerpc: Fix emit_tests to work with run_kselftest.sh")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe6406238d5a24e9fb0286c71edd67b99d8db58d
Author: Chris Morgan <macromorgan@hotmail.com>
Date:   Wed Sep 20 09:56:44 2023 -0500

    power: supply: rk817: Fix node refcount leak
    
    [ Upstream commit 488ef44c068e79752dba8eda0b75f524f111a695 ]
    
    Dan Carpenter reports that the Smatch static checker warning has found
    that there is another refcount leak in the probe function. While
    of_node_put() was added in one of the return paths, it should in
    fact be added for ALL return paths that return an error and at driver
    removal time.
    
    Fixes: 54c03bfd094f ("power: supply: Fix refcount leak in rk817_charger_probe")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Closes: https://lore.kernel.org/linux-pm/dc0bb0f8-212d-4be7-be69-becd2a3f9a80@kili.mountain/
    Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
    Link: https://lore.kernel.org/r/20230920145644.57964-1-macroalpha82@gmail.com
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1005010b732beff4af17e447cb965ac2204f8ce8
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Sep 20 04:41:09 2023 -0700

    xtensa: boot/lib: fix function prototypes
    
    [ Upstream commit f54d02c8f2cc4b46ba2a3bd8252a6750453b6f2b ]
    
    Add function prototype for gunzip() to the boot library code and make
    exit() and zalloc() static.
    
    arch/xtensa/boot/lib/zmem.c:8:6: warning: no previous prototype for 'exit' [-Wmissing-prototypes]
        8 | void exit (void)
    arch/xtensa/boot/lib/zmem.c:13:7: warning: no previous prototype for 'zalloc' [-Wmissing-prototypes]
       13 | void *zalloc(unsigned size)
    arch/xtensa/boot/lib/zmem.c:35:6: warning: no previous prototype for 'gunzip' [-Wmissing-prototypes]
       35 | void gunzip (void *dst, int dstlen, unsigned char *src, int *lenp)
    
    Fixes: 4bedea945451 ("xtensa: Architecture support for Tensilica Xtensa Part 2")
    Fixes: e7d163f76665 ("xtensa: Removed local copy of zlib and fixed O= support")
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6438653ad1f2d13b054a54a84f8f024d55765822
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Sep 19 22:21:38 2023 -0700

    xtensa: umulsidi3: fix conditional expression
    
    [ Upstream commit 9aecda97ec3deecbfa7670877c8ddfd3d0fc87c4 ]
    
    Even when a variant has one or more of these defines set to 1, the
    multiplier code paths are not used. Change the expression so that the
    correct code paths are used.
    
    arch/xtensa/lib/umulsidi3.S:44:38: warning: "XCHAL_NO_MUL" is not defined, evaluates to 0 [-Wundef]
       44 | #if defined(__XTENSA_CALL0_ABI__) && XCHAL_NO_MUL
    arch/xtensa/lib/umulsidi3.S:145:38: warning: "XCHAL_NO_MUL" is not defined, evaluates to 0 [-Wundef]
      145 | #if defined(__XTENSA_CALL0_ABI__) && XCHAL_NO_MUL
    arch/xtensa/lib/umulsidi3.S:159:5: warning: "XCHAL_NO_MUL" is not defined, evaluates to 0 [-Wundef]
      159 | #if XCHAL_NO_MUL
    
    Fixes: 8939c58d68f9 ("xtensa: add __umulsidi3 helper")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Chris Zankel <chris@zankel.net>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Message-Id: <20230920052139.10570-16-rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45661247d117093e3fbd55d190d981daacebba6b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Sep 19 22:21:37 2023 -0700

    xtensa: boot: don't add include-dirs
    
    [ Upstream commit 54d3d7d363823782c3444ddc41bb8cf1edc80514 ]
    
    Drop the -I<include-dir> options to prevent build warnings since there
    is not boot/include directory:
    
    cc1: warning: arch/xtensa/boot/include: No such file or directory [-Wmissing-include-dirs]
    
    Fixes: 437374e9a950 ("restore arch/{ppc/xtensa}/boot cflags")
    Fixes: 4bedea945451 ("xtensa: Architecture support for Tensilica Xtensa Part 2")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Chris Zankel <chris@zankel.net>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Message-Id: <20230920052139.10570-15-rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fca1b09645e5d8334a17412cbf3f82235e6f4dcb
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Sep 19 22:21:36 2023 -0700

    xtensa: iss/network: make functions static
    
    [ Upstream commit 1b59efeb59851277266318f4e0132aa61ce3455e ]
    
    Make 2 functions static to prevent build warnings:
    
    arch/xtensa/platforms/iss/network.c:204:16: warning: no previous prototype for 'tuntap_protocol' [-Wmissing-prototypes]
      204 | unsigned short tuntap_protocol(struct sk_buff *skb)
    arch/xtensa/platforms/iss/network.c:444:6: warning: no previous prototype for 'iss_net_user_timer_expire' [-Wmissing-prototypes]
      444 | void iss_net_user_timer_expire(struct timer_list *unused)
    
    Fixes: 7282bee78798 ("xtensa: Architecture support for Tensilica Xtensa Part 8")
    Fixes: d8479a21a98b ("xtensa: Convert timers to use timer_setup()")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Chris Zankel <chris@zankel.net>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Message-Id: <20230920052139.10570-14-rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4e666fa38fd1e1b6f9600a860852c17ae691f14
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Sep 20 04:15:22 2023 -0700

    xtensa: add default definition for XCHAL_HAVE_DIV32
    
    [ Upstream commit 494e87ffa0159b3f879694a9231089707792a44d ]
    
    When variant FSF is set, XCHAL_HAVE_DIV32 is not defined. Add default
    definition for that macro to prevent build warnings:
    
    arch/xtensa/lib/divsi3.S:9:5: warning: "XCHAL_HAVE_DIV32" is not defined, evaluates to 0 [-Wundef]
        9 | #if XCHAL_HAVE_DIV32
    arch/xtensa/lib/modsi3.S:9:5: warning: "XCHAL_HAVE_DIV32" is not defined, evaluates to 0 [-Wundef]
        9 | #if XCHAL_HAVE_DIV32
    
    Fixes: 173d6681380a ("xtensa: remove extra header files")
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: lore.kernel.org/r/202309150556.t0yCdv3g-lkp@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cad56459964855a2e5b9ab3f4471e64a8de8dc4
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 15 19:13:46 2023 +0100

    firmware: imx-dsp: Fix an error handling path in imx_dsp_setup_channels()
    
    [ Upstream commit e527adfb9b7d9d05a4577c116519e59a2bda4b05 ]
    
    If mbox_request_channel_byname() fails, the memory allocated a few lines
    above still need to be freed before going to the error handling path.
    
    Fixes: 046326989a18 ("firmware: imx: Save channel name for further use")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Daniel Baluta <daniel.baluta@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33ed60d8b961fca23a96f3a2f0c7c142c6ec5455
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Mon Jun 19 12:44:17 2023 +0300

    power: supply: ucs1002: fix error code in ucs1002_get_property()
    
    [ Upstream commit e35059949daa83f8dadf710d0f829ab3c3a72fe2 ]
    
    This function is supposed to return 0 for success instead of returning
    the val->intval.  This makes it the same as the other case statements
    in this function.
    
    Fixes: 81196e2e57fc ("power: supply: ucs1002: fix some health status issues")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/687f64a4-4c6e-4536-8204-98ad1df934e5@moroto.mountain
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ec48a9fac7d07c70e12147949e4941b1c2db3d2
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Sep 7 08:53:28 2023 +0300

    bus: ti-sysc: Fix SYSC_QUIRK_SWSUP_SIDLE_ACT handling for uart wake-up
    
    [ Upstream commit e5deb8f76e64d94ccef715e75ebafffd0c312d80 ]
    
    The uarts should be tagged with SYSC_QUIRK_SWSUP_SIDLE instead of
    SYSC_QUIRK_SWSUP_SIDLE_ACT. The difference is that SYSC_QUIRK_SWSUP_SIDLE
    is used to force idle target modules rather than block idle during usage.
    
    The SYSC_QUIRK_SWSUP_SIDLE_ACT should disable autoidle and wake-up when
    a target module is active, and configure autoidle and wake-up when a
    target module is inactive. We are missing configuring the target module
    on sysc_disable_module(), and missing toggling of the wake-up bit.
    
    Let's fix the issue to allow uart wake-up to work.
    
    Fixes: fb685f1c190e ("bus: ti-sysc: Handle swsup idle mode quirks")
    Tested-by: Dhruva Gole <d-gole@ti.com>
    Tested-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd19672aaac4d0dc01b3873f4df8b4537e5f6cc0
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Sep 11 07:07:38 2023 +0300

    ARM: dts: ti: omap: motorola-mapphone: Fix abe_clkctrl warning on boot
    
    [ Upstream commit ac08bda1569b06b7a62c7b4dd00d4c3b28ceaaec ]
    
    Commit 0840242e8875 ("ARM: dts: Configure clock parent for pwm vibra")
    attempted to fix the PWM settings but ended up causin an additional clock
    reparenting error:
    
    clk: failed to reparent abe-clkctrl:0060:24 to sys_clkin_ck: -22
    
    Only timer9 is in the PER domain and can use the sys_clkin_ck clock source.
    For timer8, the there is no sys_clkin_ck available as it's in the ABE
    domain, instead it should use syc_clk_div_ck. However, for power
    management, we want to use the always on sys_32k_ck instead.
    
    Cc: Ivaylo Dimitrov <ivo.g.dimitrov.75@gmail.com>
    Cc: Carl Philipp Klemm <philipp@uvos.xyz>
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Fixes: 0840242e8875 ("ARM: dts: Configure clock parent for pwm vibra")
    Depends-on: 61978617e905 ("ARM: dts: Add minimal support for Droid Bionic xt875")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe1379c0f61d369936c99b9e79787ddbe0b95222
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed May 17 12:52:53 2023 +0300

    ARM: dts: Unify pinctrl-single pin group nodes for omap4
    
    [ Upstream commit 7fff6f6d6e198ad619fea9dbbe9731999af56070 ]
    
    We want to unify the pinctrl-single pin group nodes to use naming "pins".
    Otherwise non-standad pin group names will add make dtbs checks errors
    when the pinctrl-single yaml binding gets merged.
    
    Cc: Conor Dooley <conor+dt@kernel.org>
    Cc: Krzysztof Kozlowski <krzysztof.kozlowski+dt@linaro.org>
    Cc: Rob Herring <robh+dt@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Stable-dep-of: ac08bda1569b ("ARM: dts: ti: omap: motorola-mapphone: Fix abe_clkctrl warning on boot")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16455bed4f86c96d3802deb07ac900dd77bf4b05
Author: Tony Lindgren <tony@atomide.com>
Date:   Fri Nov 18 14:19:24 2022 +0200

    ARM: dts: Unify pwm-omap-dmtimer node names
    
    [ Upstream commit 4f15fc7c0f28ffcd6e9a56396db6edcdfa4c9925 ]
    
    There is no reg property for pwm-omap-dmtimer.
    
    Cc: Krzysztof Kozlowski <krzysztof.kozlowski+dt@linaro.org>
    Cc: Rob Herring <robh+dt@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Stable-dep-of: ac08bda1569b ("ARM: dts: ti: omap: motorola-mapphone: Fix abe_clkctrl warning on boot")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ccb05618b4d2aa54bc342979d69985d3141bd81
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Sep 11 07:07:38 2023 +0300

    ARM: dts: ti: omap: Fix bandgap thermal cells addressing for omap3/4
    
    [ Upstream commit 6469b2feade8fd82d224dd3734e146536f3e9f0e ]
    
    Fix "thermal_sys: cpu_thermal: Failed to read thermal-sensors cells: -2"
    error on boot for omap3/4. This is caused by wrong addressing in the dts
    for bandgap sensor for single sensor instances.
    
    Note that omap4-cpu-thermal.dtsi is shared across omap4/5 and dra7, so
    we can't just change the addressing in omap4-cpu-thermal.dtsi.
    
    Cc: Ivaylo Dimitrov <ivo.g.dimitrov.75@gmail.com>
    Cc: Carl Philipp Klemm <philipp@uvos.xyz>
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Fixes: a761d517bbb1 ("ARM: dts: omap3: Add cpu_thermal zone")
    Fixes: 0bbf6c54d100 ("arm: dts: add omap4 CPU thermal data")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe4da07a7f1b4706c9d6d375b9661bd9eb5a4f91
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sun Oct 2 11:20:02 2022 +0200

    ARM: dts: omap: correct indentation
    
    [ Upstream commit 8ae9c7a69fa14e95d032e64d8d758e3f85bee132 ]
    
    Do not use spaces for indentation.
    
    Link: https://lore.kernel.org/r/20221002092002.68880-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Stable-dep-of: 6469b2feade8 ("ARM: dts: ti: omap: Fix bandgap thermal cells addressing for omap3/4")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea4efaf54685d66c25b9bab7b1462361e991e6c3
Author: Timo Alho <talho@nvidia.com>
Date:   Tue Sep 12 14:29:50 2023 +0300

    clk: tegra: fix error return case for recalc_rate
    
    [ Upstream commit a47b44fbb13f5e7a981b4515dcddc93a321ae89c ]
    
    tegra-bpmp clocks driver makes implicit conversion of signed error
    code to unsigned value in recalc_rate operation. The behavior for
    recalc_rate, according to it's specification, should be that "If the
    driver cannot figure out a rate for this clock, it must return 0."
    
    Fixes: ca6f2796eef7 ("clk: tegra: Add BPMP clock driver")
    Signed-off-by: Timo Alho <talho@nvidia.com>
    Signed-off-by: Mikko Perttunen <mperttunen@nvidia.com>
    Link: https://lore.kernel.org/r/20230912112951.2330497-1-cyndis@kapsi.fi
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efad31b6c062f61b7a61c8b1a200d0a74087a35a
Author: Zhifeng Tang <zhifeng.tang@unisoc.com>
Date:   Thu Aug 24 17:26:24 2023 +0800

    clk: sprd: Fix thm_parents incorrect configuration
    
    [ Upstream commit b7b20cfe6f849c2682c5f7d3f50ede6321a5d04c ]
    
    The thm*_clk have two clock sources 32k and 250k,excluding 32m.
    
    Fixes: af3bd36573e3 ("clk: sprd: Add clocks support for UMS512")
    Signed-off-by: Zhifeng Tang <zhifeng.tang@unisoc.com>
    Acked-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Reviewed-by: Baolin Wang <baolin.wang@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20230824092624.20020-1-zhifeng.tang@unisoc.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ea6975aa68aeb05a8ee95a64023d1c6edea54f7
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Wed Sep 6 01:48:15 2023 -0700

    power: supply: mt6370: Fix missing error code in mt6370_chg_toggle_cfo()
    
    [ Upstream commit 779873ec81306d2c40c459fa7c91a5d40655510d ]
    
    When mt6370_chg_field_get() suceeds, ret is set to zero and returning
    zero when flash led is still in strobe mode looks incorrect.
    
    Fixes: 233cb8a47d65 ("power: supply: mt6370: Add MediaTek MT6370 charger driver")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: ChiaEn Wu <chiaen_wu@richtek.com>
    Link: https://lore.kernel.org/r/20230906084815.2827930-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64adb41644fcd2d6127a2b0aeae5c9fcdb1ecbbe
Author: Sibi Sankar <quic_sibis@quicinc.com>
Date:   Sat Aug 12 02:18:18 2023 +0530

    firmware: arm_scmi: Fixup perf power-cost/microwatt support
    
    [ Upstream commit c3638b851bc1ca0022dca9d6ca4beaa6ef03a216 ]
    
    The perf power scale value would currently be reported as bogowatts if the
    platform firmware supports microwatt power scale and meets the perf major
    version requirements. Fix this by populating version information in the
    driver private data before the call to protocol attributes is made.
    
    CC: Chandra Sekhar Lingutla <quic_lingutla@quicinc.com>
    Fixes: 3630cd8130ce ("firmware: arm_scmi: Add SCMI v3.1 perf power-cost in microwatts")
    Signed-off-by: Sibi Sankar <quic_sibis@quicinc.com>
    Reviewed-by: Cristian Marussi <cristian.marussi@arm.com>
    Link: https://lore.kernel.org/r/20230811204818.30928-1-quic_sibis@quicinc.com
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a135c881381558552d3245654b5703a1451cb75f
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Mon Jul 17 17:12:45 2023 +0100

    firmware: arm_scmi: Harden perf domain info access
    
    [ Upstream commit 3da82112355bba263597fcbb24d275fc57e69e7e ]
    
    Harden internal accesses to domain info in the SCMI perf protocol.
    
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Link: https://lore.kernel.org/r/20230717161246.1761777-2-cristian.marussi@arm.com
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Stable-dep-of: c3638b851bc1 ("firmware: arm_scmi: Fixup perf power-cost/microwatt support")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a21635aed622a0de22cd5be01da370a319354e9
Author: Adam Ford <aford173@gmail.com>
Date:   Wed Sep 6 18:34:42 2023 -0500

    bus: ti-sysc: Fix missing AM35xx SoC matching
    
    [ Upstream commit 11729caa520950e17cd81bc43ffc477c46cf791e ]
    
    Commit feaa8baee82a ("bus: ti-sysc: Implement SoC revision handling")
    created a list of SoC types searching for strings based on names
    and wildcards which associates the SoC to different families.
    
    The OMAP34xx and OMAP35xx are treated as SOC_3430 while
    OMAP36xx and OMAP37xx are treated as SOC_3630, but the AM35xx
    isn't listed.
    
    The AM35xx is mostly an OMAP3430, and a later commit a12315d6d270
    ("bus: ti-sysc: Make omap3 gpt12 quirk handling SoC specific") looks
    for the SOC type and behaves in a certain way if it's SOC_3430.
    
    This caused a regression on the AM3517 causing it to return two
    errors:
    
     ti-sysc: probe of 48318000.target-module failed with error -16
     ti-sysc: probe of 49032000.target-module failed with error -16
    
    Fix this by treating the creating SOC_AM35 and inserting it between
    the SOC_3430 and SOC_3630.  If it is treaed the same way as the
    SOC_3430 when checking the status of sysc_check_active_timer,
    the error conditions will disappear.
    
    Fixes: a12315d6d270 ("bus: ti-sysc: Make omap3 gpt12 quirk handling SoC specific")
    Fixes: feaa8baee82a ("bus: ti-sysc: Implement SoC revision handling")
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Message-ID: <20230906233442.270835-1-aford173@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 771eb7c3f3fb1912cef4f6a26377aade2b78269c
Author: Julien Panis <jpanis@baylibre.com>
Date:   Mon Aug 21 16:24:18 2023 +0200

    bus: ti-sysc: Use fsleep() instead of usleep_range() in sysc_reset()
    
    [ Upstream commit d929b2b7464f95ec01e47f560b1e687482ba8929 ]
    
    The am335x-evm started producing boot errors because of subtle timing
    changes:
    
    Unhandled fault: external abort on non-linefetch (0x1008) at 0xf03c1010
    ...
    sysc_reset from sysc_probe+0xf60/0x1514
    sysc_probe from platform_probe+0x5c/0xbc
    ...
    
    The fix consists in using the appropriate sleep function in sysc reset.
    For flexible sleeping, fsleep is recommended. Here, sysc delay parameter
    can take any value in [0 - 255] us range. As a result, fsleep() should
    be used, calling udelay() for a sysc delay lower than 10 us.
    
    Signed-off-by: Julien Panis <jpanis@baylibre.com>
    Fixes: e709ed70d122 ("bus: ti-sysc: Fix missing reset delay handling")
    Message-ID: <20230821-fix-ti-sysc-reset-v1-1-5a0a5d8fae55@baylibre.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6389d61b72023f8a82fc3f8bd55002c172d96be
Author: Marek Vasut <marex@denx.de>
Date:   Mon Apr 3 21:02:42 2023 +0200

    drm/bridge: ti-sn65dsi83: Do not generate HFP/HBP/HSA and EOT packet
    
    [ Upstream commit ca161b259cc84fe1f4a2ce4c73c3832cf6f713f1 ]
    
    Do not generate the HS front and back porch gaps, the HSA gap and
    EOT packet, as per "SN65DSI83 datasheet SLLSEC1I - SEPTEMBER 2012
    - REVISED OCTOBER 2020", page 22, these packets are not required.
    This makes the TI SN65DSI83 bridge work with Samsung DSIM on i.MX8MN.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Robert Foss <rfoss@kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230403190242.224490-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 404b8bc41872b9d5ebf1bfb8b6fa02cfb8b00449
Author: Charles Kearney <charles.kearney@hpe.com>
Date:   Wed Sep 20 21:53:39 2023 +0000

    spi: spi-gxp: BUG: Correct spi write return value
    
    [ Upstream commit 1a8196a93e493c0a50b800cb09cef60b124eee15 ]
    
    Bug fix to correct return value of gxp_spi_write function to zero.
    Completion of succesful operation should return zero.
    
    Fixes: 730bc8ba5e9e spi: spi-gxp: Add support for HPE GXP SoCs
    
    Signed-off-by: Charles Kearney <charles.kearney@hpe.com>
    Link: https://lore.kernel.org/r/20230920215339.4125856-2-charles.kearney@hpe.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3dc8acb60f84f21bf62dcdc6a319db4f0b01a4b
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Sep 5 09:06:56 2023 +0200

    MIPS: Alchemy: only build mmc support helpers if au1xmmc is enabled
    
    [ Upstream commit ef8f8f04a0b25e8f294b24350e8463a8d6a9ba0b ]
    
    While commit d4a5c59a955b ("mmc: au1xmmc: force non-modular build and
    remove symbol_get usage") to be built in, it can still build a kernel
    without MMC support and thuse no mmc_detect_change symbol at all.
    
    Add ifdefs to build the mmc support code in the alchemy arch code
    conditional on mmc support.
    
    Fixes: d4a5c59a955b ("mmc: au1xmmc: force non-modular build and remove symbol_get usage")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c01b2e0ee22ef8b4dd7509a93aecc0ac0826bae4
Author: Jinjie Ruan <ruanjinjie@huawei.com>
Date:   Mon Sep 18 19:55:51 2023 +0800

    vfio/mdev: Fix a null-ptr-deref bug for mdev_unregister_parent()
    
    [ Upstream commit c777b11d34e0f47dbbc4b018ef65ad030f2b283a ]
    
    Inject fault while probing mdpy.ko, if kstrdup() of create_dir() fails in
    kobject_add_internal() in kobject_init_and_add() in mdev_type_add()
    in parent_create_sysfs_files(), it will return 0 and probe successfully.
    And when rmmod mdpy.ko, the mdpy_dev_exit() will call
    mdev_unregister_parent(), the mdev_type_remove() may traverse uninitialized
    parent->types[i] in parent_remove_sysfs_files(), and it will cause
    below null-ptr-deref.
    
    If mdev_type_add() fails, return the error code and kset_unregister()
    to fix the issue.
    
     general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN
     KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]
     CPU: 2 PID: 10215 Comm: rmmod Tainted: G        W        N 6.6.0-rc2+ #20
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
     RIP: 0010:__kobject_del+0x62/0x1c0
     Code: 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 51 01 00 00 48 b8 00 00 00 00 00 fc ff df 48 8b 6b 28 48 8d 7d 10 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 24 01 00 00 48 8b 75 10 48 89 df 48 8d 6b 3c e8
     RSP: 0018:ffff88810695fd30 EFLAGS: 00010202
     RAX: dffffc0000000000 RBX: ffffffffa0270268 RCX: 0000000000000000
     RDX: 0000000000000002 RSI: 0000000000000004 RDI: 0000000000000010
     RBP: 0000000000000000 R08: 0000000000000001 R09: ffffed10233a4ef1
     R10: ffff888119d2778b R11: 0000000063666572 R12: 0000000000000000
     R13: fffffbfff404e2d4 R14: dffffc0000000000 R15: ffffffffa0271660
     FS:  00007fbc81981540(0000) GS:ffff888119d00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007fc14a142dc0 CR3: 0000000110a62003 CR4: 0000000000770ee0
     DR0: ffffffff8fb0bce8 DR1: ffffffff8fb0bce9 DR2: ffffffff8fb0bcea
     DR3: ffffffff8fb0bceb DR6: 00000000fffe0ff0 DR7: 0000000000000600
     PKRU: 55555554
     Call Trace:
      <TASK>
      ? die_addr+0x3d/0xa0
      ? exc_general_protection+0x144/0x220
      ? asm_exc_general_protection+0x22/0x30
      ? __kobject_del+0x62/0x1c0
      kobject_del+0x32/0x50
      parent_remove_sysfs_files+0xd6/0x170 [mdev]
      mdev_unregister_parent+0xfb/0x190 [mdev]
      ? mdev_register_parent+0x270/0x270 [mdev]
      ? find_module_all+0x9d/0xe0
      mdpy_dev_exit+0x17/0x63 [mdpy]
      __do_sys_delete_module.constprop.0+0x2fa/0x4b0
      ? module_flags+0x300/0x300
      ? __fput+0x4e7/0xa00
      do_syscall_64+0x35/0x80
      entry_SYSCALL_64_after_hwframe+0x46/0xb0
     RIP: 0033:0x7fbc813221b7
     Code: 73 01 c3 48 8b 0d d1 8c 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 b8 b0 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d a1 8c 2c 00 f7 d8 64 89 01 48
     RSP: 002b:00007ffe780e0648 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
     RAX: ffffffffffffffda RBX: 00007ffe780e06a8 RCX: 00007fbc813221b7
     RDX: 000000000000000a RSI: 0000000000000800 RDI: 000055e214df9b58
     RBP: 000055e214df9af0 R08: 00007ffe780df5c1 R09: 0000000000000000
     R10: 00007fbc8139ecc0 R11: 0000000000000206 R12: 00007ffe780e0870
     R13: 00007ffe780e0ed0 R14: 000055e214df9260 R15: 000055e214df9af0
      </TASK>
     Modules linked in: mdpy(-) mdev vfio_iommu_type1 vfio [last unloaded: mdpy]
     Dumping ftrace buffer:
        (ftrace buffer empty)
     ---[ end trace 0000000000000000 ]---
     RIP: 0010:__kobject_del+0x62/0x1c0
     Code: 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 51 01 00 00 48 b8 00 00 00 00 00 fc ff df 48 8b 6b 28 48 8d 7d 10 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 24 01 00 00 48 8b 75 10 48 89 df 48 8d 6b 3c e8
     RSP: 0018:ffff88810695fd30 EFLAGS: 00010202
     RAX: dffffc0000000000 RBX: ffffffffa0270268 RCX: 0000000000000000
     RDX: 0000000000000002 RSI: 0000000000000004 RDI: 0000000000000010
     RBP: 0000000000000000 R08: 0000000000000001 R09: ffffed10233a4ef1
     R10: ffff888119d2778b R11: 0000000063666572 R12: 0000000000000000
     R13: fffffbfff404e2d4 R14: dffffc0000000000 R15: ffffffffa0271660
     FS:  00007fbc81981540(0000) GS:ffff888119d00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007fc14a142dc0 CR3: 0000000110a62003 CR4: 0000000000770ee0
     DR0: ffffffff8fb0bce8 DR1: ffffffff8fb0bce9 DR2: ffffffff8fb0bcea
     DR3: ffffffff8fb0bceb DR6: 00000000fffe0ff0 DR7: 0000000000000600
     PKRU: 55555554
     Kernel panic - not syncing: Fatal exception
     Dumping ftrace buffer:
        (ftrace buffer empty)
     Kernel Offset: disabled
     Rebooting in 1 seconds..
    
    Fixes: da44c340c4fe ("vfio/mdev: simplify mdev_type handling")
    Signed-off-by: Jinjie Ruan <ruanjinjie@huawei.com>
    Reviewed-by: Eric Farman <farman@linux.ibm.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Link: https://lore.kernel.org/r/20230918115551.1423193-1-ruanjinjie@huawei.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cca10592ffd5e1abfe9479b4b056e81fb9872330
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Sep 19 11:44:42 2023 +0930

    btrfs: reset destination buffer when read_extent_buffer() gets invalid range
    
    [ Upstream commit 74ee79142c0a344d4eae2eb7012ebc4e82254109 ]
    
    Commit f98b6215d7d1 ("btrfs: extent_io: do extra check for extent buffer
    read write functions") changed how we handle invalid extent buffer range
    for read_extent_buffer().
    
    Previously if the range is invalid we just set the destination to zero,
    but after the patch we do nothing and error out.
    
    This can lead to smatch static checker errors like:
    
      fs/btrfs/print-tree.c:186 print_uuid_item() error: uninitialized symbol 'subvol_id'.
      fs/btrfs/tests/extent-io-tests.c:338 check_eb_bitmap() error: uninitialized symbol 'has'.
      fs/btrfs/tests/extent-io-tests.c:353 check_eb_bitmap() error: uninitialized symbol 'has'.
      fs/btrfs/uuid-tree.c:203 btrfs_uuid_tree_remove() error: uninitialized symbol 'read_subid'.
      fs/btrfs/uuid-tree.c:353 btrfs_uuid_tree_iterate() error: uninitialized symbol 'subid_le'.
      fs/btrfs/uuid-tree.c:72 btrfs_uuid_tree_lookup() error: uninitialized symbol 'data'.
      fs/btrfs/volumes.c:7415 btrfs_dev_stats_value() error: uninitialized symbol 'val'.
    
    Fix those warnings by reverting back to the old memset() behavior.
    By this we keep the static checker happy and would still make a lot of
    noise when such invalid ranges are passed in.
    
    Reported-by: Dan Carpenter <dan.carpenter@linaro.org>
    Fixes: f98b6215d7d1 ("btrfs: extent_io: do extra check for extent buffer read write functions")
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdfcaa4e80430003dbba1bdb86f9fde5480ddbe5
Author: Harish Kasiviswanathan <Harish.Kasiviswanathan@amd.com>
Date:   Mon Sep 11 14:49:06 2023 -0400

    drm/amdkfd: Insert missing TLB flush on GFX10 and later
    
    [ Upstream commit edcfe22985d09ee8e2346c9217f5a52ab150099f ]
    
    Heavy-weight TLB flush is required after unmap on all GPUs for
    correctness and security.
    
    Signed-off-by: Harish Kasiviswanathan <Harish.Kasiviswanathan@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9becfff9f91e350fd4d6f16e9f117f9227258fb0
Author: Philip Yang <Philip.Yang@amd.com>
Date:   Thu Feb 9 18:23:16 2023 -0500

    drm/amdkfd: Flush TLB after unmapping for GFX v9.4.3
    
    [ Upstream commit 75dda67c7213c3e0d17244a8c42547c27ee746f8 ]
    
    kfd_flush_tlb_after_unmap should return true for GFX v9.4.3, to do TLB
    heavyweight flush after unmapping from GPU to guarantee that the GPU
    will not access pages after they have been unmapped. This also helps
    improve the mapping to GPU performance.
    
    Without this, KFD accidently flush TLB after mapping to GPU because the
    vm update sequence number is increased by previous unmapping.
    
    Signed-off-by: Philip Yang <Philip.Yang@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: edcfe22985d0 ("drm/amdkfd: Insert missing TLB flush on GFX10 and later")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52c7b41ad6ee53222f4ee2f0c099a6ed8291a168
Author: Nilesh Javali <njavali@marvell.com>
Date:   Thu Aug 31 16:51:46 2023 +0530

    scsi: qla2xxx: Use raw_smp_processor_id() instead of smp_processor_id()
    
    [ Upstream commit 59f10a05b5c7b675256a66e3161741239889ff80 ]
    
    The following call trace was observed:
    
    localhost kernel: nvme nvme0: NVME-FC{0}: controller connect complete
    localhost kernel: BUG: using smp_processor_id() in preemptible [00000000] code: kworker/u129:4/75092
    localhost kernel: nvme nvme0: NVME-FC{0}: new ctrl: NQN "nqn.1992-08.com.netapp:sn.b42d198afb4d11ecad6d00a098d6abfa:subsystem.PR_Channel2022_RH84_subsystem_291"
    localhost kernel: caller is qla_nvme_post_cmd+0x216/0x1380 [qla2xxx]
    localhost kernel: CPU: 6 PID: 75092 Comm: kworker/u129:4 Kdump: loaded Tainted: G    B   W  OE    --------- ---  5.14.0-70.22.1.el9_0.x86_64+debug #1
    localhost kernel: Hardware name: HPE ProLiant XL420 Gen10/ProLiant XL420 Gen10, BIOS U39 01/13/2022
    localhost kernel: Workqueue: nvme-wq nvme_async_event_work [nvme_core]
    localhost kernel: Call Trace:
    localhost kernel: dump_stack_lvl+0x57/0x7d
    localhost kernel: check_preemption_disabled+0xc8/0xd0
    localhost kernel: qla_nvme_post_cmd+0x216/0x1380 [qla2xxx]
    
    Use raw_smp_processor_id() instead of smp_processor_id().
    
    Also use queue_work() across the driver instead of queue_work_on() thus
    avoiding usage of smp_processor_id() when CONFIG_DEBUG_PREEMPT is enabled.
    
    Cc: stable@vger.kernel.org
    Suggested-by: John Garry <john.g.garry@oracle.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Link: https://lore.kernel.org/r/20230831112146.32595-2-njavali@marvell.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35c02a333d523d9da0b482b0d751cdeb95c068ae
Author: Shreyas Deodhar <sdeodhar@marvell.com>
Date:   Wed Dec 21 20:39:32 2022 -0800

    scsi: qla2xxx: Select qpair depending on which CPU post_cmd() gets called
    
    [ Upstream commit 1d201c81d4cc6840735bbcc99e6031503e5cf3b8 ]
    
    In current I/O path, Tx and Rx may not be processed on same CPU. This may
    lead to thrashing and optimum performance may not be achieved.
    
    Pick qpair such that Tx and Rx are processed on same CPU.
    
    Signed-off-by: Shreyas Deodhar <sdeodhar@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Stable-dep-of: 59f10a05b5c7 ("scsi: qla2xxx: Use raw_smp_processor_id() instead of smp_processor_id()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a8ac77a70cca44ed23880517e8b2ccb16269017
Author: Sven Eckelmann <sven@narfation.org>
Date:   Tue Aug 22 16:42:24 2023 +0300

    wifi: ath11k: Cleanup mac80211 references on failure during tx_complete
    
    [ Upstream commit 29d15589f084d71a4ea8c544039c5839db0236e2 ]
    
    When a function is using functions from mac80211 to free an skb then it
    should do it consistently and not switch to the generic dev_kfree_skb_any
    (or similar functions). Otherwise (like in the error handlers), mac80211
    will will not be aware of the freed skb and thus not clean up related
    information in its internal data structures.
    
    Not doing so lead in the past to filled up structure which then prevented
    new clients to connect.
    
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    Fixes: 6257c702264c ("wifi: ath11k: fix tx status reporting in encap offload mode")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20230802-ath11k-ack_status_leak-v2-2-c0af729d6229@narfation.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cccd28aa59199503bbad2eca0d9a3f8cdbba8f1
Author: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Date:   Mon Apr 17 13:35:02 2023 +0300

    wifi: ath11k: fix tx status reporting in encap offload mode
    
    [ Upstream commit 6257c702264c44d74c6b71f0c62a7665da2dc356 ]
    
    ieee80211_tx_status() treats packets in 802.11 frame format and
    tries to extract sta address from packet header. When tx encap
    offload is enabled, this becomes invalid operation. Hence, switch
    to using ieee80211_tx_status_ext() after filling in station
    address for handling both 802.11 and 802.3 frames.
    
    Tested-on: QCN9074 hw1.0 PCI WLAN.HK.2.7.0.1-01744-QCAHKSWPL_SILICONZ-1
    
    Signed-off-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20230403195738.25367-2-quic_pradeepc@quicinc.com
    Stable-dep-of: 29d15589f084 ("wifi: ath11k: Cleanup mac80211 references on failure during tx_complete")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc1ab6577475b0460ba4261cd9caec37bd62ca0b
Author: Amit Pundir <amit.pundir@linaro.org>
Date:   Wed Jul 26 18:57:19 2023 +0530

    arm64: dts: qcom: sdm845-db845c: Mark cont splash memory region as reserved
    
    [ Upstream commit 110e70fccce4f22b53986ae797d665ffb1950aa6 ]
    
    Adding a reserved memory region for the framebuffer memory
    (the splash memory region set up by the bootloader).
    
    It fixes a kernel panic (arm-smmu: Unhandled context fault
    at this particular memory region) reported on DB845c running
    v5.10.y.
    
    Cc: stable@vger.kernel.org # v5.10+
    Reviewed-by: Caleb Connolly <caleb.connolly@linaro.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20230726132719.2117369-2-amit.pundir@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03b808058a88c4ab2847f4bb28fd047e7b54401a
Author: Holger Dengler <dengler@linux.ibm.com>
Date:   Tue Jul 25 11:24:47 2023 +0200

    s390/pkey: fix PKEY_TYPE_EP11_AES handling in PKEY_CLR2SECK2 IOCTL
    
    [ Upstream commit da2863f15945de100b95c72d5656541d30956c5d ]
    
    Commit 'fa6999e326fe ("s390/pkey: support CCA and EP11 secure ECC
    private keys")' introduced PKEY_TYPE_EP11_AES for the PKEY_CLR2SECK2
    IOCTL to convert an AES clearkey into a securekey of this type.
    Unfortunately, all PKEY_CLR2SECK2 IOCTL requests with type
    PKEY_TYPE_EP11_AES return with an error (-EINVAL). Fix the handling
    for PKEY_TYPE_EP11_AES in PKEY_CLR2SECK2 IOCTL, so that userspace can
    convert clearkey blobs into PKEY_TYPE_EP11_AES securekey blobs.
    
    Cc: stable@vger.kernel.org # v5.10+
    Fixes: fa6999e326fe ("s390/pkey: support CCA and EP11 secure ECC private keys")
    Signed-off-by: Holger Dengler <dengler@linux.ibm.com>
    Reviewed-by: Ingo Franzki <ifranzki@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a84ac8995ac70728fc599501f4d781327f0e7f27
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Thu Jan 19 10:47:00 2023 -0800

    f2fs: get out of a repeat loop when getting a locked data page
    
    [ Upstream commit d2d9bb3b6d2fbccb5b33d3a85a2830971625a4ea ]
    
    https://bugzilla.kernel.org/show_bug.cgi?id=216050
    
    Somehow we're getting a page which has a different mapping.
    Let's avoid the infinite loop.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b3b859bf8bed573c7abcc7b17f638b56a0ee287
Author: Chao Yu <chao@kernel.org>
Date:   Tue Nov 8 22:33:21 2022 +0800

    f2fs: optimize iteration over sparse directories
    
    [ Upstream commit 59237a21776f70ffb0420611c23e7158e1317037 ]
    
    Wei Chen reports a kernel bug as blew:
    
    INFO: task syz-executor.0:29056 blocked for more than 143 seconds.
          Not tainted 5.15.0-rc5 #1
    "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    task:syz-executor.0  state:D stack:14632 pid:29056 ppid:  6574 flags:0x00000004
    Call Trace:
     __schedule+0x4a1/0x1720
     schedule+0x36/0xe0
     rwsem_down_write_slowpath+0x322/0x7a0
     fscrypt_ioctl_set_policy+0x11f/0x2a0
     __f2fs_ioctl+0x1a9f/0x5780
     f2fs_ioctl+0x89/0x3a0
     __x64_sys_ioctl+0xe8/0x140
     do_syscall_64+0x34/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Eric did some investigation on this issue, quoted from reply of Eric:
    
    "Well, the quality of this bug report has a lot to be desired (not on
    upstream kernel, reproducer is full of totally irrelevant stuff, not
    sent to the mailing list of the filesystem whose disk image is being
    fuzzed, etc.).  But what is going on is that f2fs_empty_dir() doesn't
    consider the case of a directory with an extremely large i_size on a
    malicious disk image.
    
    Specifically, the reproducer mounts an f2fs image with a directory
    that has an i_size of 14814520042850357248, then calls
    FS_IOC_SET_ENCRYPTION_POLICY on it.
    
    That results in a call to f2fs_empty_dir() to check whether the
    directory is empty.  f2fs_empty_dir() then iterates through all
    3616826182336513 blocks the directory allegedly contains to check
    whether any contain anything.  i_rwsem is held during this, so
    anything else that tries to take it will hang."
    
    In order to solve this issue, let's use f2fs_get_next_page_offset()
    to speed up iteration by skipping holes for all below functions:
    - f2fs_empty_dir
    - f2fs_readdir
    - find_in_level
    
    The way why we can speed up iteration was described in
    'commit 3cf4574705b4 ("f2fs: introduce get_next_page_offset to speed
    up SEEK_DATA")'.
    
    Meanwhile, in f2fs_empty_dir(), let's use f2fs_find_data_page()
    instead f2fs_get_lock_data_page(), due to i_rwsem was held in
    caller of f2fs_empty_dir(), there shouldn't be any races, so it's
    fine to not lock dentry page during lookuping dirents in the page.
    
    Link: https://lore.kernel.org/lkml/536944df-a0ae-1dd8-148f-510b476e1347@kernel.org/T/
    Reported-by: Wei Chen <harperchen1110@gmail.com>
    Cc: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Stable-dep-of: d2d9bb3b6d2f ("f2fs: get out of a repeat loop when getting a locked data page")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3134156e3421c24ff3c34cc9989e0a9b22fca76c
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Jul 20 13:53:35 2023 +0200

    ARM: dts: qcom: msm8974pro-castor: correct touchscreen syna,nosleep-mode
    
    [ Upstream commit 7c74379afdfee7b13f1cd8ff1ad6e0f986aec96c ]
    
    There is no syna,nosleep property in Synaptics RMI4 touchscreen:
    
      qcom-msm8974pro-sony-xperia-shinano-castor.dtb: synaptics@2c: rmi4-f01@1: 'syna,nosleep' does not match any of the regexes: 'pinctrl-[0-9]+'
    
    Fixes: ab80661883de ("ARM: dts: qcom: msm8974: Add Sony Xperia Z2 Tablet")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20230720115335.137354-6-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 064f57151dff199e7839114068b4f80f202f3f5d
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Jul 20 13:53:34 2023 +0200

    ARM: dts: qcom: msm8974pro-castor: correct touchscreen function names
    
    [ Upstream commit 31fba16c19c45b2b3a7c23b0bfef80aed1b29050 ]
    
    The node names for functions of Synaptics RMI4 touchscreen must be as
    "rmi4-fXX", as required by bindings and Linux driver.
    
      qcom-msm8974pro-sony-xperia-shinano-castor.dtb: synaptics@2c: Unevaluated properties are not allowed ('rmi-f01@1', 'rmi-f11@11' were unexpected)
    
    Fixes: ab80661883de ("ARM: dts: qcom: msm8974: Add Sony Xperia Z2 Tablet")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20230720115335.137354-5-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21e5e3c3f71c772ac4b96fe1aaaceea9cfca736d
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Jul 20 13:53:33 2023 +0200

    ARM: dts: qcom: msm8974pro-castor: correct inverted X of touchscreen
    
    [ Upstream commit 43db69268149049540b1d2bbe8a69e59d5cb43b6 ]
    
    There is no syna,f11-flip-x property, so assume intention was to use
    touchscreen-inverted-x.
    
    Fixes: ab80661883de ("ARM: dts: qcom: msm8974: Add Sony Xperia Z2 Tablet")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20230720115335.137354-4-krzysztof.kozlowski@linaro.org
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05951f5c26b4fd3ba31dbed6a8c12541439068a0
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Fri Jul 14 17:37:20 2023 +0200

    ARM: dts: samsung: exynos4210-i9100: Fix LCD screen's physical size
    
    [ Upstream commit b3f3fc32e5ff1e848555af8616318cc667457f90 ]
    
    The previous values were completely bogus, and resulted in the computed
    DPI ratio being much lower than reality, causing applications and UIs to
    misbehave.
    
    The new values were measured by myself with a ruler.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Fixes: 8620cc2f99b7 ("ARM: dts: exynos: Add devicetree file for the Galaxy S2")
    Cc: <stable@vger.kernel.org> # v5.8+
    Link: https://lore.kernel.org/r/20230714153720.336990-1-paul@crapouillou.net
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 226590fbd96717fce218878044df3568c825ba8e
Author: Aleksey Nasibulin <alealexpro100@ya.ru>
Date:   Wed Jul 12 03:40:17 2023 +0200

    ARM: dts: BCM5301X: Extend RAM to full 256MB for Linksys EA6500 V2
    
    [ Upstream commit 91994e59079dcb455783d3f9ea338eea6f671af3 ]
    
    Linksys ea6500-v2 have 256MB of ram. Currently we only use 128MB.
    Expand the definition to use all the available RAM.
    
    Fixes: 03e96644d7a8 ("ARM: dts: BCM5301X: Add basic DT for Linksys EA6500 V2")
    Signed-off-by: Aleksey Nasibulin <alealexpro100@ya.ru>
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Cc: stable@vger.kernel.org
    Acked-by: RafaÅ MiÅecki <rafal@milecki.pl>
    Link: https://lore.kernel.org/r/20230712014017.28123-1-ansuelsmth@gmail.com
    Signed-off-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70a1df9e0b4405aef12b490a806b5e46ed582bb6
Author: Daniel Scally <dan.scally@ideasonboard.com>
Date:   Wed Sep 20 14:41:09 2023 +0100

    i2c: xiic: Correct return value check for xiic_reinit()
    
    [ Upstream commit 59851fb05d759f13662be143eff0aae605815b0e ]
    
    The error paths for xiic_reinit() return negative values on failure
    and 0 on success - this error message therefore is triggered on
    _success_ rather than failure. Correct the condition so it's only
    shown on failure as intended.
    
    Fixes: 8fa9c9388053 ("i2c: xiic: return value of xiic_reinit")
    Signed-off-by: Daniel Scally <dan.scally@ideasonboard.com>
    Acked-by: Michal Simek <michal.simek@amd.com>
    Reviewed-by: Andi Shyti <andi.shyti@kernel.org>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb9cfb28bdde57f49137d76e7a54dbd61206d337
Author: Liang He <windhl@126.com>
Date:   Wed Mar 22 12:29:51 2023 +0800

    i2c: mux: gpio: Add missing fwnode_handle_put()
    
    [ Upstream commit db6aee6083a56ac4a6cd1b08fff7938072bcd0a3 ]
    
    In i2c_mux_gpio_probe_fw(), we should add fwnode_handle_put()
    when break out of the iteration device_for_each_child_node()
    as it will automatically increase and decrease the refcounter.
    
    Fixes: 98b2b712bc85 ("i2c: i2c-mux-gpio: Enable this driver in ACPI land")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 976c8c1c40731c7579f7f52646cae86f17711703
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Thu Mar 3 20:39:14 2022 +0800

    i2c: mux: demux-pinctrl: check the return value of devm_kstrdup()
    
    [ Upstream commit 7c0195fa9a9e263df204963f88a22b21688ffb66 ]
    
    devm_kstrdup() returns pointer to allocated string on success,
    NULL on failure. So it is better to check the return value of it.
    
    Fixes: e35478eac030 ("i2c: mux: demux-pinctrl: run properly with multiple instances")
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50a096aab61f6a50903de750b0d694aa60fe6a38
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Sep 3 08:13:21 2023 +0200

    gpio: tb10x: Fix an error handling path in tb10x_gpio_probe()
    
    [ Upstream commit b547b5e52a0587e6b25ea520bf2f9e03d00cbcb6 ]
    
    If an error occurs after a successful irq_domain_add_linear() call, it
    should be undone by a corresponding irq_domain_remove(), as already done
    in the remove function.
    
    Fixes: c6ce2b6bffe5 ("gpio: add TB10x GPIO driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 908b3b5e97d25e879de3d1f172a255665491c2c3
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Tue Sep 19 13:38:04 2023 -0500

    cifs: Fix UAF in cifs_demultiplex_thread()
    
    [ Upstream commit d527f51331cace562393a8038d870b3e9916686f ]
    
    There is a UAF when xfstests on cifs:
    
      BUG: KASAN: use-after-free in smb2_is_network_name_deleted+0x27/0x160
      Read of size 4 at addr ffff88810103fc08 by task cifsd/923
    
      CPU: 1 PID: 923 Comm: cifsd Not tainted 6.1.0-rc4+ #45
      ...
      Call Trace:
       <TASK>
       dump_stack_lvl+0x34/0x44
       print_report+0x171/0x472
       kasan_report+0xad/0x130
       kasan_check_range+0x145/0x1a0
       smb2_is_network_name_deleted+0x27/0x160
       cifs_demultiplex_thread.cold+0x172/0x5a4
       kthread+0x165/0x1a0
       ret_from_fork+0x1f/0x30
       </TASK>
    
      Allocated by task 923:
       kasan_save_stack+0x1e/0x40
       kasan_set_track+0x21/0x30
       __kasan_slab_alloc+0x54/0x60
       kmem_cache_alloc+0x147/0x320
       mempool_alloc+0xe1/0x260
       cifs_small_buf_get+0x24/0x60
       allocate_buffers+0xa1/0x1c0
       cifs_demultiplex_thread+0x199/0x10d0
       kthread+0x165/0x1a0
       ret_from_fork+0x1f/0x30
    
      Freed by task 921:
       kasan_save_stack+0x1e/0x40
       kasan_set_track+0x21/0x30
       kasan_save_free_info+0x2a/0x40
       ____kasan_slab_free+0x143/0x1b0
       kmem_cache_free+0xe3/0x4d0
       cifs_small_buf_release+0x29/0x90
       SMB2_negotiate+0x8b7/0x1c60
       smb2_negotiate+0x51/0x70
       cifs_negotiate_protocol+0xf0/0x160
       cifs_get_smb_ses+0x5fa/0x13c0
       mount_get_conns+0x7a/0x750
       cifs_mount+0x103/0xd00
       cifs_smb3_do_mount+0x1dd/0xcb0
       smb3_get_tree+0x1d5/0x300
       vfs_get_tree+0x41/0xf0
       path_mount+0x9b3/0xdd0
       __x64_sys_mount+0x190/0x1d0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    The UAF is because:
    
     mount(pid: 921)               | cifsd(pid: 923)
    -------------------------------|-------------------------------
                                   | cifs_demultiplex_thread
    SMB2_negotiate                 |
     cifs_send_recv                |
      compound_send_recv           |
       smb_send_rqst               |
        wait_for_response          |
         wait_event_state      [1] |
                                   |  standard_receive3
                                   |   cifs_handle_standard
                                   |    handle_mid
                                   |     mid->resp_buf = buf;  [2]
                                   |     dequeue_mid           [3]
         KILL the process      [4] |
        resp_iov[i].iov_base = buf |
     free_rsp_buf              [5] |
                                   |   is_network_name_deleted [6]
                                   |   callback
    
    1. After send request to server, wait the response until
        mid->mid_state != SUBMITTED;
    2. Receive response from server, and set it to mid;
    3. Set the mid state to RECEIVED;
    4. Kill the process, the mid state already RECEIVED, get 0;
    5. Handle and release the negotiate response;
    6. UAF.
    
    It can be easily reproduce with add some delay in [3] - [6].
    
    Only sync call has the problem since async call's callback is
    executed in cifsd process.
    
    Add an extra state to mark the mid state to READY before wakeup the
    waitter, then it can get the resp safely.
    
    Fixes: ec637e3ffb6b ("[CIFS] Avoid extra large buffer allocation (and memcpy) in cifs_readpages")
    Reviewed-by: Paulo Alcantara (SUSE) <pc@manguebit.com>
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e4f49cd2bd7ded92c33f975fe2ad5e7c7d77f72
Author: Ben Wolsieffer <ben.wolsieffer@hefring.com>
Date:   Fri Sep 15 12:00:56 2023 -0400

    proc: nommu: fix empty /proc/<pid>/maps
    
    [ Upstream commit fe4419801617514765974f3e796269bc512ad146 ]
    
    On no-MMU, /proc/<pid>/maps reads as an empty file.  This happens because
    find_vma(mm, 0) always returns NULL (assuming no vma actually contains the
    zero address, which is normally the case).
    
    To fix this bug and improve the maintainability in the future, this patch
    makes the no-MMU implementation as similar as possible to the MMU
    implementation.
    
    The only remaining differences are the lack of hold/release_task_mempolicy
    and the extra code to shoehorn the gate vma into the iterator.
    
    This has been tested on top of 6.5.3 on an STM32F746.
    
    Link: https://lkml.kernel.org/r/20230915160055.971059-2-ben.wolsieffer@hefring.com
    Fixes: 0c563f148043 ("proc: remove VMA rbtree use from nommu")
    Signed-off-by: Ben Wolsieffer <ben.wolsieffer@hefring.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Giulio Benetti <giulio.benetti@benettiengineering.com>
    Cc: Liam R. Howlett <Liam.Howlett@oracle.com>
    Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d45e6d9951d426a550a0411a718b9384f2181f3
Author: Ben Wolsieffer <Ben.Wolsieffer@hefring.com>
Date:   Thu Sep 14 12:30:20 2023 -0400

    proc: nommu: /proc/<pid>/maps: release mmap read lock
    
    [ Upstream commit 578d7699e5c2add8c2e9549d9d75dfb56c460cb3 ]
    
    The no-MMU implementation of /proc/<pid>/map doesn't normally release
    the mmap read lock, because it uses !IS_ERR_OR_NULL(_vml) to determine
    whether to release the lock.  Since _vml is NULL when the end of the
    mappings is reached, the lock is not released.
    
    Reading /proc/1/maps twice doesn't cause a hang because it only
    takes the read lock, which can be taken multiple times and therefore
    doesn't show any problem if the lock isn't released. Instead, you need
    to perform some operation that attempts to take the write lock after
    reading /proc/<pid>/maps. To actually reproduce the bug, compile the
    following code as 'proc_maps_bug':
    
    #include <stdio.h>
    #include <unistd.h>
    #include <sys/mman.h>
    
    int main(int argc, char *argv[]) {
            void *buf;
            sleep(1);
            buf = mmap(NULL, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
            puts("mmap returned");
            return 0;
    }
    
    Then, run:
    
      ./proc_maps_bug &; cat /proc/$!/maps; fg
    
    Without this patch, mmap() will hang and the command will never
    complete.
    
    This code was incorrectly adapted from the MMU implementation, which at
    the time released the lock in m_next() before returning the last entry.
    
    The MMU implementation has diverged further from the no-MMU version since
    then, so this patch brings their locking and error handling into sync,
    fixing the bug and hopefully avoiding similar issues in the future.
    
    Link: https://lkml.kernel.org/r/20230914163019.4050530-2-ben.wolsieffer@hefring.com
    Fixes: 47fecca15c09 ("fs/proc/task_nommu.c: don't use priv->task->mm")
    Signed-off-by: Ben Wolsieffer <ben.wolsieffer@hefring.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Giulio Benetti <giulio.benetti@benettiengineering.com>
    Cc: Greg Ungerer <gerg@uclinux.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Stable-dep-of: fe4419801617 ("proc: nommu: fix empty /proc/<pid>/maps")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5c9ee3887232d9c9c1313212dd4ca9d5e08e337
Author: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date:   Tue Sep 19 10:03:31 2023 -0700

    igc: Expose tx-usecs coalesce setting to user
    
    [ Upstream commit 1703b2e0de653b459ca6230be32ce7f2ea0ae7ee ]
    
    When users attempt to obtain the coalesce setting using the
    ethtool command, current code always returns 0 for tx-usecs.
    This is because I225/6 always uses a queue pair setting, hence
    tx_coalesce_usecs does not return a value during the
    igc_ethtool_get_coalesce() callback process. The pair queue
    condition checking in igc_ethtool_get_coalesce() is removed by
    this patch so that the user gets information of the value of tx-usecs.
    
    Even if i225/6 is using queue pair setting, there is no harm in
    notifying the user of the tx-usecs. The implementation of the current
    code may have previously been a copy of the legacy code i210.
    Since I225 has the queue pair setting enabled, tx-usecs will always adhere
    to the user-set rx-usecs value. An error message will appear when the user
    attempts to set the tx-usecs value for the input parameters because,
    by default, they should only set the rx-usecs value.
    
    This patch also adds the helper function to get the
    previous rx coalesce value similar to tx coalesce.
    
    How to test:
    User can get the coalesce value using ethtool command.
    
    Example command:
    Get: ethtool -c <interface>
    
    Previous output:
    
    rx-usecs: 3
    rx-frames: n/a
    rx-usecs-irq: n/a
    rx-frames-irq: n/a
    
    tx-usecs: 0
    tx-frames: n/a
    tx-usecs-irq: n/a
    tx-frames-irq: n/a
    
    New output:
    
    rx-usecs: 3
    rx-frames: n/a
    rx-usecs-irq: n/a
    rx-frames-irq: n/a
    
    tx-usecs: 3
    tx-frames: n/a
    tx-usecs-irq: n/a
    tx-frames-irq: n/a
    
    Fixes: 8c5ad0dae93c ("igc: Add ethtool support")
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Link: https://lore.kernel.org/r/20230919170331.1581031-1-anthony.l.nguyen@intel.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cae59ae73106febd68612bf7f70064398253e3ad
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Mon Sep 18 17:36:11 2023 +0200

    octeontx2-pf: Do xdp_do_flush() after redirects.
    
    [ Upstream commit 70b2b6892645e58ed6f051dad7f8d1083f0ad553 ]
    
    xdp_do_flush() should be invoked before leaving the NAPI poll function
    if XDP-redirect has been performed.
    
    Invoke xdp_do_flush() before leaving NAPI.
    
    Cc: Geetha sowjanya <gakula@marvell.com>
    Cc: Subbaraya Sundeep <sbhatta@marvell.com>
    Cc: Sunil Goutham <sgoutham@marvell.com>
    Cc: hariprasad <hkelam@marvell.com>
    Fixes: 06059a1a9a4a5 ("octeontx2-pf: Add XDP support to netdev PF")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Acked-by: Geethasowjanya Akula <gakula@marvell.com>
    Acked-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98ebbdefe4909b20df35ecba5e9685378d6b8d25
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Mon Sep 18 17:36:10 2023 +0200

    bnxt_en: Flush XDP for bnxt_poll_nitroa0()'s NAPI
    
    [ Upstream commit edc0140cc3b7b91874ebe70eb7d2a851e8817ccc ]
    
    bnxt_poll_nitroa0() invokes bnxt_rx_pkt() which can run a XDP program
    which in turn can return XDP_REDIRECT. bnxt_rx_pkt() is also used by
    __bnxt_poll_work() which flushes (xdp_do_flush()) the packets after each
    round. bnxt_poll_nitroa0() lacks this feature.
    xdp_do_flush() should be invoked before leaving the NAPI callback.
    
    Invoke xdp_do_flush() after a redirect in bnxt_poll_nitroa0() NAPI.
    
    Cc: Michael Chan <michael.chan@broadcom.com>
    Fixes: f18c2b77b2e4e ("bnxt_en: optimized XDP_REDIRECT support")
    Reviewed-by: Andy Gospodarek <gospo@broadcom.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Michael Chan <michael.chan@broadcom.com>
    Acked-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26f1829c853860b60cf52175c875ad501e875dfd
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Mon Sep 18 17:36:09 2023 +0200

    net: ena: Flush XDP packets on error.
    
    [ Upstream commit 6f411fb5ca9419090bee6a0a46425e0a5060b734 ]
    
    xdp_do_flush() should be invoked before leaving the NAPI poll function
    after a XDP-redirect. This is not the case if the driver leaves via
    the error path (after having a redirect in one of its previous
    iterations).
    
    Invoke xdp_do_flush() also in the error path.
    
    Cc: Arthur Kiyanovski <akiyano@amazon.com>
    Cc: David Arinzon <darinzon@amazon.com>
    Cc: Noam Dagan <ndagan@amazon.com>
    Cc: Saeed Bishara <saeedb@amazon.com>
    Cc: Shay Agroskin <shayagr@amazon.com>
    Fixes: a318c70ad152b ("net: ena: introduce XDP redirect implementation")
    Acked-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Acked-by: Jesper Dangaard Brouer <hawk@kernel.org>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d64e738adc5cc49824fd7b4ce43b86926aa1b27b
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Wed Sep 20 12:46:27 2023 +0200

    locking/seqlock: Do the lockdep annotation before locking in do_write_seqcount_begin_nested()
    
    [ Upstream commit 41b43b6c6e30a832c790b010a06772e793bca193 ]
    
    It was brought up by Tetsuo that the following sequence:
    
       write_seqlock_irqsave()
       printk_deferred_enter()
    
    could lead to a deadlock if the lockdep annotation within
    write_seqlock_irqsave() triggers.
    
    The problem is that the sequence counter is incremented before the lockdep
    annotation is performed. The lockdep splat would then attempt to invoke
    printk() but the reader side, of the same seqcount, could have a
    tty_port::lock acquired waiting for the sequence number to become even again.
    
    The other lockdep annotations come before the actual locking because "we
    want to see the locking error before it happens". There is no reason why
    seqcount should be different here.
    
    Do the lockdep annotation first then perform the locking operation (the
    sequence increment).
    
    Fixes: 1ca7d67cf5d5a ("seqcount: Add lockdep functionality to seqcount/seqlock structures")
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20230920104627._DTHgPyA@linutronix.de
    
    Closes: https://lore.kernel.org/20230621130641.-5iueY1I@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 987a7f5311ba1fd4ccf3637c09e6424741aacd01
Author: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
Date:   Tue Sep 12 14:22:47 2023 -0700

    i915/pmu: Move execlist stats initialization to execlist specific setup
    
    [ Upstream commit c524cd40e8a2a1a36f4898eaf2024beefeb815f3 ]
    
    engine->stats is a union of execlist and guc stat objects. When execlist
    specific fields are initialized, the initial state of guc stats is
    affected. This results in bad busyness values when using GuC mode. Move
    the execlist initialization from common code to execlist specific code.
    
    Fixes: 77cdd054dd2c ("drm/i915/pmu: Connect engine busyness stats from GuC to pmu")
    Signed-off-by: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
    Reviewed-by: Alan Previn <alan.previn.teres.alexis@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230912212247.1828681-1-umesh.nerlige.ramappa@intel.com
    (cherry picked from commit 4485bd519f5d6d620a29d0547ff3c982bdeeb468)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea5a61d58886ae875f1b4a371999f2a8b58cf26d
Author: Jozsef Kadlecsik <kadlec@netfilter.org>
Date:   Tue Sep 19 20:04:45 2023 +0200

    netfilter: ipset: Fix race between IPSET_CMD_CREATE and IPSET_CMD_SWAP
    
    [ Upstream commit 7433b6d2afd512d04398c73aa984d1e285be125b ]
    
    Kyle Zeng reported that there is a race between IPSET_CMD_ADD and IPSET_CMD_SWAP
    in netfilter/ip_set, which can lead to the invocation of `__ip_set_put` on a
    wrong `set`, triggering the `BUG_ON(set->ref == 0);` check in it.
    
    The race is caused by using the wrong reference counter, i.e. the ref counter instead
    of ref_netlink.
    
    Fixes: 24e227896bbf ("netfilter: ipset: Add schedule point in call_ad().")
    Reported-by: Kyle Zeng <zengyhkyle@gmail.com>
    Closes: https://lore.kernel.org/netfilter-devel/ZPZqetxOmH+w%2Fmyc@westworld/#r
    Tested-by: Kyle Zeng <zengyhkyle@gmail.com>
    Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4b0facd5c20ceae3d07018a3417f06302fa9cd1
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Sep 15 15:18:11 2023 +0200

    netfilter: nf_tables: disable toggling dormant table state more than once
    
    [ Upstream commit c9bd26513b3a11b3adb3c2ed8a31a01a87173ff1 ]
    
    nft -f -<<EOF
    add table ip t
    add table ip t { flags dormant; }
    add chain ip t c { type filter hook input priority 0; }
    add table ip t
    EOF
    
    Triggers a splat from nf core on next table delete because we lose
    track of right hook register state:
    
    WARNING: CPU: 2 PID: 1597 at net/netfilter/core.c:501 __nf_unregister_net_hook
    RIP: 0010:__nf_unregister_net_hook+0x41b/0x570
     nf_unregister_net_hook+0xb4/0xf0
     __nf_tables_unregister_hook+0x160/0x1d0
    [..]
    
    The above should have table in *active* state, but in fact no
    hooks were registered.
    
    Reject on/off/on games rather than attempting to fix this.
    
    Fixes: 179d9ba5559a ("netfilter: nf_tables: fix table flag updates")
    Reported-by: "Lee, Cherie-Anne" <cherie.lee@starlabs.sg>
    Cc: Bing-Jhong Billy Jheng <billy@starlabs.sg>
    Cc: info@starlabs.sg
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51fa66024a5eabf270164f2dc82a48ffb35a12e9
Author: Artem Chernyshev <artem.chernyshev@red-soft.ru>
Date:   Mon Sep 18 16:56:23 2023 +0300

    net: rds: Fix possible NULL-pointer dereference
    
    [ Upstream commit f1d95df0f31048f1c59092648997686e3f7d9478 ]
    
    In rds_rdma_cm_event_handler_cmn() check, if conn pointer exists
    before dereferencing it as rdma_set_service_type() argument
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: fd261ce6a30e ("rds: rdma: update rdma transport for tos")
    Signed-off-by: Artem Chernyshev <artem.chernyshev@red-soft.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f0acb0736ecc3eb85dc80ad2790d634dcb10b58
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Mon Sep 18 20:30:11 2023 +0800

    team: fix null-ptr-deref when team device type is changed
    
    [ Upstream commit 492032760127251e5540a5716a70996bacf2a3fd ]
    
    Get a null-ptr-deref bug as follows with reproducer [1].
    
    BUG: kernel NULL pointer dereference, address: 0000000000000228
    ...
    RIP: 0010:vlan_dev_hard_header+0x35/0x140 [8021q]
    ...
    Call Trace:
     <TASK>
     ? __die+0x24/0x70
     ? page_fault_oops+0x82/0x150
     ? exc_page_fault+0x69/0x150
     ? asm_exc_page_fault+0x26/0x30
     ? vlan_dev_hard_header+0x35/0x140 [8021q]
     ? vlan_dev_hard_header+0x8e/0x140 [8021q]
     neigh_connected_output+0xb2/0x100
     ip6_finish_output2+0x1cb/0x520
     ? nf_hook_slow+0x43/0xc0
     ? ip6_mtu+0x46/0x80
     ip6_finish_output+0x2a/0xb0
     mld_sendpack+0x18f/0x250
     mld_ifc_work+0x39/0x160
     process_one_work+0x1e6/0x3f0
     worker_thread+0x4d/0x2f0
     ? __pfx_worker_thread+0x10/0x10
     kthread+0xe5/0x120
     ? __pfx_kthread+0x10/0x10
     ret_from_fork+0x34/0x50
     ? __pfx_kthread+0x10/0x10
     ret_from_fork_asm+0x1b/0x30
    
    [1]
    $ teamd -t team0 -d -c '{"runner": {"name": "loadbalance"}}'
    $ ip link add name t-dummy type dummy
    $ ip link add link t-dummy name t-dummy.100 type vlan id 100
    $ ip link add name t-nlmon type nlmon
    $ ip link set t-nlmon master team0
    $ ip link set t-nlmon nomaster
    $ ip link set t-dummy up
    $ ip link set team0 up
    $ ip link set t-dummy.100 down
    $ ip link set t-dummy.100 master team0
    
    When enslave a vlan device to team device and team device type is changed
    from non-ether to ether, header_ops of team device is changed to
    vlan_header_ops. That is incorrect and will trigger null-ptr-deref
    for vlan->real_dev in vlan_dev_hard_header() because team device is not
    a vlan device.
    
    Cache eth_header_ops in team_setup(), then assign cached header_ops to
    header_ops of team net device when its type is changed from non-ether
    to ether to fix the bug.
    
    Fixes: 1d76efe1577b ("team: add support for non-ethernet devices")
    Suggested-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20230918123011.1884401-1-william.xuanziyang@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89f9f20b1cbd36d99d5a248a4bf8d11d4fd049a2
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Sep 18 09:13:51 2023 +0000

    net: bridge: use DEV_STATS_INC()
    
    [ Upstream commit 44bdb313da57322c9b3c108eb66981c6ec6509f4 ]
    
    syzbot/KCSAN reported data-races in br_handle_frame_finish() [1]
    This function can run from multiple cpus without mutual exclusion.
    
    Adopt SMP safe DEV_STATS_INC() to update dev->stats fields.
    
    Handles updates to dev->stats.tx_dropped while we are at it.
    
    [1]
    BUG: KCSAN: data-race in br_handle_frame_finish / br_handle_frame_finish
    
    read-write to 0xffff8881374b2178 of 8 bytes by interrupt on cpu 1:
    br_handle_frame_finish+0xd4f/0xef0 net/bridge/br_input.c:189
    br_nf_hook_thresh+0x1ed/0x220
    br_nf_pre_routing_finish_ipv6+0x50f/0x540
    NF_HOOK include/linux/netfilter.h:304 [inline]
    br_nf_pre_routing_ipv6+0x1e3/0x2a0 net/bridge/br_netfilter_ipv6.c:178
    br_nf_pre_routing+0x526/0xba0 net/bridge/br_netfilter_hooks.c:508
    nf_hook_entry_hookfn include/linux/netfilter.h:144 [inline]
    nf_hook_bridge_pre net/bridge/br_input.c:272 [inline]
    br_handle_frame+0x4c9/0x940 net/bridge/br_input.c:417
    __netif_receive_skb_core+0xa8a/0x21e0 net/core/dev.c:5417
    __netif_receive_skb_one_core net/core/dev.c:5521 [inline]
    __netif_receive_skb+0x57/0x1b0 net/core/dev.c:5637
    process_backlog+0x21f/0x380 net/core/dev.c:5965
    __napi_poll+0x60/0x3b0 net/core/dev.c:6527
    napi_poll net/core/dev.c:6594 [inline]
    net_rx_action+0x32b/0x750 net/core/dev.c:6727
    __do_softirq+0xc1/0x265 kernel/softirq.c:553
    run_ksoftirqd+0x17/0x20 kernel/softirq.c:921
    smpboot_thread_fn+0x30a/0x4a0 kernel/smpboot.c:164
    kthread+0x1d7/0x210 kernel/kthread.c:388
    ret_from_fork+0x48/0x60 arch/x86/kernel/process.c:147
    ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:304
    
    read-write to 0xffff8881374b2178 of 8 bytes by interrupt on cpu 0:
    br_handle_frame_finish+0xd4f/0xef0 net/bridge/br_input.c:189
    br_nf_hook_thresh+0x1ed/0x220
    br_nf_pre_routing_finish_ipv6+0x50f/0x540
    NF_HOOK include/linux/netfilter.h:304 [inline]
    br_nf_pre_routing_ipv6+0x1e3/0x2a0 net/bridge/br_netfilter_ipv6.c:178
    br_nf_pre_routing+0x526/0xba0 net/bridge/br_netfilter_hooks.c:508
    nf_hook_entry_hookfn include/linux/netfilter.h:144 [inline]
    nf_hook_bridge_pre net/bridge/br_input.c:272 [inline]
    br_handle_frame+0x4c9/0x940 net/bridge/br_input.c:417
    __netif_receive_skb_core+0xa8a/0x21e0 net/core/dev.c:5417
    __netif_receive_skb_one_core net/core/dev.c:5521 [inline]
    __netif_receive_skb+0x57/0x1b0 net/core/dev.c:5637
    process_backlog+0x21f/0x380 net/core/dev.c:5965
    __napi_poll+0x60/0x3b0 net/core/dev.c:6527
    napi_poll net/core/dev.c:6594 [inline]
    net_rx_action+0x32b/0x750 net/core/dev.c:6727
    __do_softirq+0xc1/0x265 kernel/softirq.c:553
    do_softirq+0x5e/0x90 kernel/softirq.c:454
    __local_bh_enable_ip+0x64/0x70 kernel/softirq.c:381
    __raw_spin_unlock_bh include/linux/spinlock_api_smp.h:167 [inline]
    _raw_spin_unlock_bh+0x36/0x40 kernel/locking/spinlock.c:210
    spin_unlock_bh include/linux/spinlock.h:396 [inline]
    batadv_tt_local_purge+0x1a8/0x1f0 net/batman-adv/translation-table.c:1356
    batadv_tt_purge+0x2b/0x630 net/batman-adv/translation-table.c:3560
    process_one_work kernel/workqueue.c:2630 [inline]
    process_scheduled_works+0x5b8/0xa30 kernel/workqueue.c:2703
    worker_thread+0x525/0x730 kernel/workqueue.c:2784
    kthread+0x1d7/0x210 kernel/kthread.c:388
    ret_from_fork+0x48/0x60 arch/x86/kernel/process.c:147
    ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:304
    
    value changed: 0x00000000000d7190 -> 0x00000000000d7191
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 14848 Comm: kworker/u4:11 Not tainted 6.6.0-rc1-syzkaller-00236-gad8a69f361b9 #0
    
    Fixes: 1c29fc4989bc ("[BRIDGE]: keep track of received multicast packets")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Roopa Prabhu <roopa@nvidia.com>
    Cc: Nikolay Aleksandrov <razor@blackwall.org>
    Cc: bridge@lists.linux-foundation.org
    Acked-by: Nikolay Aleksandrov <razor@blackwall.org>
    Link: https://lore.kernel.org/r/20230918091351.1356153-1-edumazet@google.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69d7eef31ee1f4821e6248cbd49df02d57009428
Author: Jie Wang <wangjie125@huawei.com>
Date:   Mon Sep 18 15:48:40 2023 +0800

    net: hns3: add 5ms delay before clear firmware reset irq source
    
    [ Upstream commit 0770063096d5da4a8e467b6e73c1646a75589628 ]
    
    Currently the reset process in hns3 and firmware watchdog init process is
    asynchronous. we think firmware watchdog initialization is completed
    before hns3 clear the firmware interrupt source. However, firmware
    initialization may not complete early.
    
    so we add delay before hns3 clear firmware interrupt source and 5 ms delay
    is enough to avoid second firmware reset interrupt.
    
    Fixes: c1a81619d73a ("net: hns3: Add mailbox interrupt handling to PF driver")
    Signed-off-by: Jie Wang <wangjie125@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1b85b3d767e646e2ea3222b92e5c74865d6d1cd
Author: Jijie Shao <shaojijie@huawei.com>
Date:   Mon Sep 18 15:48:39 2023 +0800

    net: hns3: fix fail to delete tc flower rules during reset issue
    
    [ Upstream commit 1a7be66e4685b8541546222c305cce9710718a88 ]
    
    Firmware does not respond driver commands during reset
    Therefore, rule will fail to delete while the firmware is resetting
    
    So, if failed to delete rule, set rule state to TO_DEL,
    and the rule will be deleted when periodic task being scheduled.
    
    Fixes: 0205ec041ec6 ("net: hns3: add support for hw tc offload of tc flower")
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3f7af41de523dc13792a7497f7f1f3613fc9098
Author: Jian Shen <shenjian15@huawei.com>
Date:   Mon Sep 18 15:48:38 2023 +0800

    net: hns3: only enable unicast promisc when mac table full
    
    [ Upstream commit f2ed304922a55690529bcca59678dd92d7466ce8 ]
    
    Currently, the driver will enable unicast promisc for the function
    once configure mac address fail. It's unreasonable when the failure
    is caused by using same mac address with other functions. So only
    enable unicast promisc when mac table full.
    
    Fixes: c631c696823c ("net: hns3: refactor the promisc mode setting")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed6a0b21b6acd8128e10a9553e50b5dec0c18e82
Author: Jie Wang <wangjie125@huawei.com>
Date:   Mon Sep 18 15:48:37 2023 +0800

    net: hns3: fix GRE checksum offload issue
    
    [ Upstream commit f9f651261130cdcb7adc9a3e365b356bc2749ab3 ]
    
    The device_version V3 hardware can't offload the checksum for IP in GRE
    packets, but can do it for NvGRE. So default to disable the checksum and
    GSO offload for GRE, but keep the ability to enable it when only using
    NvGRE.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Jie Wang <wangjie125@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 430f18eed1c1b255cc3e51e0820f4cd6f2898827
Author: Jie Wang <wangjie125@huawei.com>
Date:   Mon Sep 18 15:48:36 2023 +0800

    net: hns3: add cmdq check for vf periodic service task
    
    [ Upstream commit bd3caddf299a640efb66c6022efed7fe744db626 ]
    
    When the vf cmdq is disabled, there is no need to keep these task running.
    So this patch skip these task when the cmdq is disabled.
    
    Fixes: ff200099d271 ("net: hns3: remove unnecessary work in hclgevf_main")
    Signed-off-by: Jie Wang <wangjie125@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adbcec23c8423e3d5df1839c5ae91599dcf703cb
Author: Josh Poimboeuf <jpoimboe@kernel.org>
Date:   Mon Sep 4 22:04:48 2023 -0700

    x86/srso: Fix SBPB enablement for spec_rstack_overflow=off
    
    [ Upstream commit 01b057b2f4cc2d905a0bd92195657dbd9a7005ab ]
    
    If the user has requested no SRSO mitigation, other mitigations can use
    the lighter-weight SBPB instead of IBPB.
    
    Fixes: fb3bd914b3ec ("x86/srso: Add a Speculative RAS Overflow mitigation")
    Signed-off-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Acked-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/b20820c3cfd1003171135ec8d762a0b957348497.1693889988.git.jpoimboe@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 755195b2d2df4d70952e5e5122c2cd590821be80
Author: Josh Poimboeuf <jpoimboe@kernel.org>
Date:   Mon Sep 4 22:04:45 2023 -0700

    x86/srso: Fix srso_show_state() side effect
    
    [ Upstream commit a8cf700c17d9ca6cb8ee7dc5c9330dbac3948237 ]
    
    Reading the 'spec_rstack_overflow' sysfs file can trigger an unnecessary
    MSR write, and possibly even a (handled) exception if the microcode
    hasn't been updated.
    
    Avoid all that by just checking X86_FEATURE_IBPB_BRTYPE instead, which
    gets set by srso_select_mitigation() if the updated microcode exists.
    
    Fixes: fb3bd914b3ec ("x86/srso: Add a Speculative RAS Overflow mitigation")
    Signed-off-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Nikolay Borisov <nik.borisov@suse.com>
    Acked-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/27d128899cb8aee9eb2b57ddc996742b0c1d776b.1693889988.git.jpoimboe@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f301aa243b9df34a7a2aa7c166a0cd79b37dd43
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Wed Sep 13 14:27:22 2023 -0700

    platform/x86: intel_scu_ipc: Fail IPC send if still busy
    
    [ Upstream commit 85e654c9f722853a595fa941dca60c157b707b86 ]
    
    It's possible for interrupts to get significantly delayed to the point
    that callers of intel_scu_ipc_dev_command() and friends can call the
    function once, hit a timeout, and call it again while the interrupt
    still hasn't been processed. This driver will get seriously confused if
    the interrupt is finally processed after the second IPC has been sent
    with ipc_command(). It won't know which IPC has been completed. This
    could be quite disastrous if calling code assumes something has happened
    upon return from intel_scu_ipc_dev_simple_command() when it actually
    hasn't.
    
    Let's avoid this scenario by simply returning -EBUSY in this case.
    Hopefully higher layers will know to back off or fail gracefully when
    this happens. It's all highly unlikely anyway, but it's better to be
    correct here as we have no way to know which IPC the status register is
    telling us about if we send a second IPC while the previous IPC is still
    processing.
    
    Cc: Prashant Malani <pmalani@chromium.org>
    Cc: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Fixes: ed12f295bfd5 ("ipc: Added support for IPC interrupt mode")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20230913212723.3055315-5-swboyd@chromium.org
    Reviewed-by: Ilpo JÃ¤rvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b34121a8fec1ed43935cdfa382fae5141be1ede1
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Wed Sep 13 14:27:21 2023 -0700

    platform/x86: intel_scu_ipc: Don't override scu in intel_scu_ipc_dev_simple_command()
    
    [ Upstream commit efce78584e583226e9a1f6cb2fb555d6ff47c3e7 ]
    
    Andy discovered this bug during patch review. The 'scu' argument to this
    function shouldn't be overridden by the function itself. It doesn't make
    any sense. Looking at the commit history, we see that commit
    f57fa18583f5 ("platform/x86: intel_scu_ipc: Introduce new SCU IPC API")
    removed the setting of the scu to ipcdev in other functions, but not
    this one. That was an oversight. Remove this line so that we stop
    overriding the scu instance that is used by this function.
    
    Reported-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Closes: https://lore.kernel.org/r/ZPjdZ3xNmBEBvNiS@smile.fi.intel.com
    Cc: Prashant Malani <pmalani@chromium.org>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Fixes: f57fa18583f5 ("platform/x86: intel_scu_ipc: Introduce new SCU IPC API")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20230913212723.3055315-4-swboyd@chromium.org
    Reviewed-by: Ilpo JÃ¤rvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9624445958413246497d422b596d04c1f72c0bf9
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Wed Sep 13 14:27:20 2023 -0700

    platform/x86: intel_scu_ipc: Check status upon timeout in ipc_wait_for_interrupt()
    
    [ Upstream commit 427fada620733e6474d783ae6037a66eae42bf8c ]
    
    It's possible for the completion in ipc_wait_for_interrupt() to timeout,
    simply because the interrupt was delayed in being processed. A timeout
    in itself is not an error. This driver should check the status register
    upon a timeout to ensure that scheduling or interrupt processing delays
    don't affect the outcome of the IPC return value.
    
     CPU0                                                   SCU
     ----                                                   ---
     ipc_wait_for_interrupt()
      wait_for_completion_timeout(&scu->cmd_complete)
      [TIMEOUT]                                             status[IPC_STATUS_BUSY]=0
    
    Fix this problem by reading the status bit in all cases, regardless of
    the timeout. If the completion times out, we'll assume the problem was
    that the IPC_STATUS_BUSY bit was still set, but if the status bit is
    cleared in the meantime we know that we hit some scheduling delay and we
    should just check the error bit.
    
    Cc: Prashant Malani <pmalani@chromium.org>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Fixes: ed12f295bfd5 ("ipc: Added support for IPC interrupt mode")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20230913212723.3055315-3-swboyd@chromium.org
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98a5a7f344fa4bad2e12496513248d381865f75f
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Wed Sep 13 14:27:19 2023 -0700

    platform/x86: intel_scu_ipc: Check status after timeout in busy_loop()
    
    [ Upstream commit e0b4ab3bb92bda8d12f55842614362989d5b2cb3 ]
    
    It's possible for the polling loop in busy_loop() to get scheduled away
    for a long time.
    
      status = ipc_read_status(scu); // status = IPC_STATUS_BUSY
      <long time scheduled away>
      if (!(status & IPC_STATUS_BUSY))
    
    If this happens, then the status bit could change while the task is
    scheduled away and this function would never read the status again after
    timing out. Instead, the function will return -ETIMEDOUT when it's
    possible that scheduling didn't work out and the status bit was cleared.
    Bit polling code should always check the bit being polled one more time
    after the timeout in case this happens.
    
    Fix this by reading the status once more after the while loop breaks.
    The readl_poll_timeout() macro implements all of this, and it is
    shorter, so use that macro here to consolidate code and fix this.
    
    There were some concerns with using readl_poll_timeout() because it uses
    timekeeping, and timekeeping isn't running early on or during the late
    stages of system suspend or early stages of system resume, but an audit
    of the code concluded that this code isn't called during those times so
    it is safe to use the macro.
    
    Cc: Prashant Malani <pmalani@chromium.org>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Fixes: e7b7ab3847c9 ("platform/x86: intel_scu_ipc: Sleeping is fine when polling")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20230913212723.3055315-2-swboyd@chromium.org
    Reviewed-by: Ilpo JÃ¤rvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ef5cc6b4ef0ac687aa4f45bde723b03e30f7fd6
Author: Lukasz Majewski <lukma@denx.de>
Date:   Fri Sep 15 20:10:02 2023 +0200

    net: hsr: Properly parse HSRv1 supervisor frames.
    
    [ Upstream commit 295de650d3aaf9e50258465c5f1c84b465d836f6 ]
    
    While adding support for parsing the redbox supervision frames, the
    author added `pull_size' and `total_pull_size' to track the amount of
    bytes that were pulled from the skb during while parsing the skb so it
    can be reverted/ pushed back at the end.
    In the process probably copy&paste error occurred and for the HSRv1 case
    the ethhdr was used instead of the hsr_tag. Later the hsr_tag was used
    instead of hsr_sup_tag. The later error didn't matter because both
    structs have the size so HSRv0 was still working. It broke however HSRv1
    parsing because struct ethhdr is larger than struct hsr_tag.
    
    Reinstate the old pulling flow and pull first ethhdr, hsr_tag in v1 case
    followed by hsr_sup_tag.
    
    [bigeasy: commit message]
    
    Fixes: eafaa88b3eb7 ("net: hsr: Add support for redbox supervision frames")'
    Suggested-by: Tristram.Ha@microchip.com
    Signed-off-by: Lukasz Majewski <lukma@denx.de>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eef16bfdb212da60f5144689f2967fb25b051a2b
Author: Rik van Riel <riel@surriel.com>
Date:   Thu Aug 17 13:55:58 2023 -0400

    x86/mm, kexec, ima: Use memblock_free_late() from ima_free_kexec_buffer()
    
    [ Upstream commit 34cf99c250d5cd2530b93a57b0de31d3aaf8685b ]
    
    The code calling ima_free_kexec_buffer() runs long after the memblock
    allocator has already been torn down, potentially resulting in a use
    after free in memblock_isolate_range().
    
    With KASAN or KFENCE, this use after free will result in a BUG
    from the idle task, and a subsequent kernel panic.
    
    Switch ima_free_kexec_buffer() over to memblock_free_late() to avoid
    that bug.
    
    Fixes: fee3ff99bc67 ("powerpc: Move arch independent ima kexec functions to drivers/of/kexec.c")
    Suggested-by: Mike Rappoport <rppt@kernel.org>
    Signed-off-by: Rik van Riel <riel@surriel.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20230817135558.67274c83@imladris.surriel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73be49248a04746096339a48a33fa2f03bd85969
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 15 19:00:35 2023 +0000

    dccp: fix dccp_v4_err()/dccp_v6_err() again
    
    [ Upstream commit 6af289746a636f71f4c0535a9801774118486c7a ]
    
    dh->dccph_x is the 9th byte (offset 8) in "struct dccp_hdr",
    not in the "byte 7" as Jann claimed.
    
    We need to make sure the ICMP messages are big enough,
    using more standard ways (no more assumptions).
    
    syzbot reported:
    BUG: KMSAN: uninit-value in pskb_may_pull_reason include/linux/skbuff.h:2667 [inline]
    BUG: KMSAN: uninit-value in pskb_may_pull include/linux/skbuff.h:2681 [inline]
    BUG: KMSAN: uninit-value in dccp_v6_err+0x426/0x1aa0 net/dccp/ipv6.c:94
    pskb_may_pull_reason include/linux/skbuff.h:2667 [inline]
    pskb_may_pull include/linux/skbuff.h:2681 [inline]
    dccp_v6_err+0x426/0x1aa0 net/dccp/ipv6.c:94
    icmpv6_notify+0x4c7/0x880 net/ipv6/icmp.c:867
    icmpv6_rcv+0x19d5/0x30d0
    ip6_protocol_deliver_rcu+0xda6/0x2a60 net/ipv6/ip6_input.c:438
    ip6_input_finish net/ipv6/ip6_input.c:483 [inline]
    NF_HOOK include/linux/netfilter.h:304 [inline]
    ip6_input+0x15d/0x430 net/ipv6/ip6_input.c:492
    ip6_mc_input+0xa7e/0xc80 net/ipv6/ip6_input.c:586
    dst_input include/net/dst.h:468 [inline]
    ip6_rcv_finish+0x5db/0x870 net/ipv6/ip6_input.c:79
    NF_HOOK include/linux/netfilter.h:304 [inline]
    ipv6_rcv+0xda/0x390 net/ipv6/ip6_input.c:310
    __netif_receive_skb_one_core net/core/dev.c:5523 [inline]
    __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5637
    netif_receive_skb_internal net/core/dev.c:5723 [inline]
    netif_receive_skb+0x58/0x660 net/core/dev.c:5782
    tun_rx_batched+0x83b/0x920
    tun_get_user+0x564c/0x6940 drivers/net/tun.c:2002
    tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048
    call_write_iter include/linux/fs.h:1985 [inline]
    new_sync_write fs/read_write.c:491 [inline]
    vfs_write+0x8ef/0x15c0 fs/read_write.c:584
    ksys_write+0x20f/0x4c0 fs/read_write.c:637
    __do_sys_write fs/read_write.c:649 [inline]
    __se_sys_write fs/read_write.c:646 [inline]
    __x64_sys_write+0x93/0xd0 fs/read_write.c:646
    do_syscall_x64 arch/x86/entry/common.c:50 [inline]
    do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
    entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Uninit was created at:
    slab_post_alloc_hook+0x12f/0xb70 mm/slab.h:767
    slab_alloc_node mm/slub.c:3478 [inline]
    kmem_cache_alloc_node+0x577/0xa80 mm/slub.c:3523
    kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:559
    __alloc_skb+0x318/0x740 net/core/skbuff.c:650
    alloc_skb include/linux/skbuff.h:1286 [inline]
    alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6313
    sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2795
    tun_alloc_skb drivers/net/tun.c:1531 [inline]
    tun_get_user+0x23cf/0x6940 drivers/net/tun.c:1846
    tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048
    call_write_iter include/linux/fs.h:1985 [inline]
    new_sync_write fs/read_write.c:491 [inline]
    vfs_write+0x8ef/0x15c0 fs/read_write.c:584
    ksys_write+0x20f/0x4c0 fs/read_write.c:637
    __do_sys_write fs/read_write.c:649 [inline]
    __se_sys_write fs/read_write.c:646 [inline]
    __x64_sys_write+0x93/0xd0 fs/read_write.c:646
    do_syscall_x64 arch/x86/entry/common.c:50 [inline]
    do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
    entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    CPU: 0 PID: 4995 Comm: syz-executor153 Not tainted 6.6.0-rc1-syzkaller-00014-ga747acc0b752 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/04/2023
    
    Fixes: 977ad86c2a1b ("dccp: Fix out of bounds access in DCCP error handler")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Jann Horn <jannh@google.com>
    Reviewed-by: Jann Horn <jannh@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2019f0a68169a344bda40b12180c4da08be21f2
Author: Kajol Jain <kjain@linux.ibm.com>
Date:   Fri Aug 25 11:26:01 2023 +0530

    powerpc/perf/hv-24x7: Update domain value check
    
    [ Upstream commit 4ff3ba4db5943cac1045e3e4a3c0463ea10f6930 ]
    
    Valid domain value is in range 1 to HV_PERF_DOMAIN_MAX. Current code has
    check for domain value greater than or equal to HV_PERF_DOMAIN_MAX. But
    the check for domain value 0 is missing.
    
    Fix this issue by adding check for domain value 0.
    
    Before:
      # ./perf stat -v -e hv_24x7/CPM_ADJUNCT_INST,domain=0,core=1/ sleep 1
      Using CPUID 00800200
      Control descriptor is not initialized
      Error:
      The sys_perf_event_open() syscall returned with 5 (Input/output error) for
      event (hv_24x7/CPM_ADJUNCT_INST,domain=0,core=1/).
      /bin/dmesg | grep -i perf may provide additional information.
    
      Result from dmesg:
      [   37.819387] hv-24x7: hcall failed: [0 0x60040000 0x100 0] => ret
      0xfffffffffffffffc (-4) detail=0x2000000 failing ix=0
    
    After:
      # ./perf stat -v -e hv_24x7/CPM_ADJUNCT_INST,domain=0,core=1/ sleep 1
      Using CPUID 00800200
      Control descriptor is not initialized
      Warning:
      hv_24x7/CPM_ADJUNCT_INST,domain=0,core=1/ event is not supported by the kernel.
      failed to read counter hv_24x7/CPM_ADJUNCT_INST,domain=0,core=1/
    
    Fixes: ebd4a5a3ebd9 ("powerpc/perf/hv-24x7: Minor improvements")
    Reported-by: Krishan Gopal Sarawast <krishang@linux.vnet.ibm.com>
    Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
    Tested-by: Disha Goel <disgoel@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230825055601.360083-1-kjain@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5734d22c9ea0a9d394b5e668c8e163bb3eaa3b95
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 15 17:11:11 2023 +0000

    scsi: iscsi_tcp: restrict to TCP sockets
    
    [ Upstream commit f4f82c52a0ead5ab363d207d06f81b967d09ffb8 ]
    
    Nothing prevents iscsi_sw_tcp_conn_bind() to receive file descriptor
    pointing to non TCP socket (af_unix for example).
    
    Return -EINVAL if this is attempted, instead of crashing the kernel.
    
    Fixes: 7ba247138907 ("[SCSI] open-iscsi/linux-iscsi-5 Initiator: Initiator code")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Lee Duncan <lduncan@suse.com>
    Cc: Chris Leech <cleech@redhat.com>
    Cc: Mike Christie <michael.christie@oracle.com>
    Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: open-iscsi@googlegroups.com
    Cc: linux-scsi@vger.kernel.org
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2712545e535d7a2e4c53b9c9658a9c88c6055862
Author: Kyle Zeng <zengyhkyle@gmail.com>
Date:   Thu Sep 14 22:12:57 2023 -0700

    ipv4: fix null-deref in ipv4_link_failure
    
    [ Upstream commit 0113d9c9d1ccc07f5a3710dac4aa24b6d711278c ]
    
    Currently, we assume the skb is associated with a device before calling
    __ip_options_compile, which is not always the case if it is re-routed by
    ipvs.
    When skb->dev is NULL, dev_net(skb->dev) will become null-dereference.
    This patch adds a check for the edge case and switch to use the net_device
    from the rtable when skb->dev is NULL.
    
    Fixes: ed0de45a1008 ("ipv4: recompile ip options in ipv4_link_failure")
    Suggested-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: Kyle Zeng <zengyhkyle@gmail.com>
    Cc: Stephen Suryaputra <ssuryaextr@gmail.com>
    Cc: Vadim Fedorenko <vfedorenko@novek.ru>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54228157fb57757f832fd1ac3d13b01a9108d7a7
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Wed Sep 13 11:06:15 2023 -0700

    igc: Fix infinite initialization loop with early XDP redirect
    
    [ Upstream commit cb47b1f679c4d83a5fa5f1852e472f844e41a3da ]
    
    When an XDP redirect happens before the link is ready, that
    transmission will not finish and will timeout, causing an adapter
    reset. If the redirects do not stop, the adapter will not stop
    resetting.
    
    Wait for the driver to signal that there's a carrier before allowing
    transmissions to proceed.
    
    Previous code was relying that when __IGC_DOWN is cleared, the NIC is
    ready to transmit as all the queues are ready, what happens is that
    the carrier presence will only be signaled later, after the watchdog
    workqueue has a chance to run. And during this interval (between
    clearing __IGC_DOWN and the watchdog running) if any transmission
    happens the timeout is emitted (detected by igc_tx_timeout()) which
    causes the reset, with the potential for the infinite loop.
    
    Fixes: 4ff320361092 ("igc: Add support for XDP_REDIRECT action")
    Reported-by: Ferenc Fejes <ferenc.fejes@ericsson.com>
    Closes: https://lore.kernel.org/netdev/0caf33cf6adb3a5bf137eeaa20e89b167c9986d5.camel@ericsson.com/
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Ferenc Fejes <ferenc.fejes@ericsson.com>
    Reviewed-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40b5032c99519777ad4e04ce3814842e135622a5
Author: David Christensen <drc@linux.vnet.ibm.com>
Date:   Thu Sep 14 18:02:52 2023 -0400

    ionic: fix 16bit math issue when PAGE_SIZE >= 64KB
    
    [ Upstream commit 8f6b846b0a86c3cbae8a25b772651cfc2270ad0a ]
    
    The ionic device supports a maximum buffer length of 16 bits (see
    ionic_rxq_desc or ionic_rxq_sg_elem).  When adding new buffers to
    the receive rings, the function ionic_rx_fill() uses 16bit math when
    calculating the number of pages to allocate for an RX descriptor,
    given the interface's MTU setting. If the system PAGE_SIZE >= 64KB,
    and the buf_info->page_offset is 0, the remain_len value will never
    decrement from the original MTU value and the frag_len value will
    always be 0, causing additional pages to be allocated as scatter-
    gather elements unnecessarily.
    
    A similar math issue exists in ionic_rx_frags(), but no failures
    have been observed here since a 64KB page should not normally
    require any scatter-gather elements at any legal Ethernet MTU size.
    
    Fixes: 4b0a7539a372 ("ionic: implement Rx page reuse")
    Signed-off-by: David Christensen <drc@linux.vnet.ibm.com>
    Reviewed-by: Shannon Nelson <shannon.nelson@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2c6e5945da5c63d4f3eaf5667b31342420aea77
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Wed Aug 30 03:07:43 2023 +0200

    netfilter, bpf: Adjust timeouts of non-confirmed CTs in bpf_ct_insert_entry()
    
    [ Upstream commit 837723b22a63cfbff584655b009b9d488d0e9087 ]
    
    bpf_nf testcase fails on s390x: bpf_skb_ct_lookup() cannot find the entry
    that was added by bpf_ct_insert_entry() within the same BPF function.
    
    The reason is that this entry is deleted by nf_ct_gc_expired().
    
    The CT timeout starts ticking after the CT confirmation; therefore
    nf_conn.timeout is initially set to the timeout value, and
    __nf_conntrack_confirm() sets it to the deadline value.
    
    bpf_ct_insert_entry() sets IPS_CONFIRMED_BIT, but does not adjust the
    timeout, making its value meaningless and causing false positives.
    
    Fix the problem by making bpf_ct_insert_entry() adjust the timeout,
    like __nf_conntrack_confirm().
    
    Fixes: 2cdaa3eefed8 ("netfilter: conntrack: restore IPS_CONFIRMED out of nf_conntrack_hash_check_insert()")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Florian Westphal <fw@strlen.de>
    Link: https://lore.kernel.org/bpf/20230830011128.1415752-3-iii@linux.ibm.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d98bad2998fdcb8b1907d3c32fbdf77bb03c840e
Author: Ivan Vecera <ivecera@redhat.com>
Date:   Thu Sep 7 17:44:57 2023 +0200

    i40e: Fix VF VLAN offloading when port VLAN is configured
    
    [ Upstream commit d0d362ffa33da4acdcf7aee2116ceef8c8fef658 ]
    
    If port VLAN is configured on a VF then any other VLANs on top of this VF
    are broken.
    
    During i40e_ndo_set_vf_port_vlan() call the i40e driver reset the VF and
    iavf driver asks PF (using VIRTCHNL_OP_GET_VF_RESOURCES) for VF capabilities
    but this reset occurs too early, prior setting of vf->info.pvid field
    and because this field can be zero during i40e_vc_get_vf_resources_msg()
    then VIRTCHNL_VF_OFFLOAD_VLAN capability is reported to iavf driver.
    
    This is wrong because iavf driver should not report VLAN offloading
    capability when port VLAN is configured as i40e does not support QinQ
    offloading.
    
    Fix the issue by moving VF reset after setting of vf->port_vlan_id
    field.
    
    Without this patch:
    $ echo 1 > /sys/class/net/enp2s0f0/device/sriov_numvfs
    $ ip link set enp2s0f0 vf 0 vlan 3
    $ ip link set enp2s0f0v0 up
    $ ip link add link enp2s0f0v0 name vlan4 type vlan id 4
    $ ip link set vlan4 up
    ...
    $ ethtool -k enp2s0f0v0 | grep vlan-offload
    rx-vlan-offload: on
    tx-vlan-offload: on
    $ dmesg -l err | grep iavf
    [1292500.742914] iavf 0000:02:02.0: Failed to add VLAN filter, error IAVF_ERR_INVALID_QP_ID
    
    With this patch:
    $ echo 1 > /sys/class/net/enp2s0f0/device/sriov_numvfs
    $ ip link set enp2s0f0 vf 0 vlan 3
    $ ip link set enp2s0f0v0 up
    $ ip link add link enp2s0f0v0 name vlan4 type vlan id 4
    $ ip link set vlan4 up
    ...
    $ ethtool -k enp2s0f0v0 | grep vlan-offload
    rx-vlan-offload: off [requested on]
    tx-vlan-offload: off [requested on]
    $ dmesg -l err | grep iavf
    
    Fixes: f9b4b6278d51 ("i40e: Reset the VF upon conflicting VLAN configuration")
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Rafal Romanowski <rafal.romanowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0546cd573404d86ed53f07bed1a072dc2e808430
Author: Petr Oros <poros@redhat.com>
Date:   Thu Sep 7 17:02:51 2023 +0200

    iavf: schedule a request immediately after add/delete vlan
    
    [ Upstream commit 5f3d319a248654a805bafc9e7094bcea47dac6c7 ]
    
    When the iavf driver wants to reconfigure the VLAN filters
    (iavf_add_vlan, iavf_del_vlan), it sets a flag in
    aq_required:
      adapter->aq_required |= IAVF_FLAG_AQ_ADD_VLAN_FILTER;
    or:
      adapter->aq_required |= IAVF_FLAG_AQ_DEL_VLAN_FILTER;
    
    This is later processed by the watchdog_task, but it runs periodically
    every 2 seconds, so it can be a long time before it processes the request.
    
    In the worst case, the interface is unable to receive traffic for more
    than 2 seconds for no objective reason.
    
    Fixes: 5eae00c57f5e ("i40evf: main driver core")
    Signed-off-by: Petr Oros <poros@redhat.com>
    Co-developed-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Co-developed-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Reviewed-by: Ahmed Zaki <ahmed.zaki@intel.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Tested-by: Rafal Romanowski <rafal.romanowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00bbedbd7c5ab55c5a9731fcffeac0654c6d0a6e
Author: Petr Oros <poros@redhat.com>
Date:   Thu Sep 7 17:02:50 2023 +0200

    iavf: add iavf_schedule_aq_request() helper
    
    [ Upstream commit ed4cad33df9e272feaa6698b33359b29c2929564 ]
    
    Add helper for set iavf aq request AVF_FLAG_AQ_* and immediately
    schedule watchdog_task. Helper will be used in cases where it is
    necessary to run aq requests asap
    
    Signed-off-by: Petr Oros <poros@redhat.com>
    Co-developed-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Co-developed-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Tested-by: Rafal Romanowski <rafal.romanowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Stable-dep-of: 5f3d319a2486 ("iavf: schedule a request immediately after add/delete vlan")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16fd3c37d1cabdab3d5f6398787dad6822adcee2
Author: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
Date:   Fri Sep 15 15:40:15 2023 +0300

    ASoC: SOF: core: Only call sof_ops_free() on remove if the probe was successful
    
    [ Upstream commit 31bb7bd9ffee50d09ec931998b823a86132ab807 ]
    
    All the fail paths during probe will free up the ops, on remove we should
    only free it if the probe was successful.
    
    Fixes: bc433fd76fae ("ASoC: SOF: Add ops_free")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Rander Wang <rander.wang@intel.com>
    Link: https://lore.kernel.org/r/20230915124015.19637-1-peter.ujfalusi@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 211aac2ef6fffab208df8cc386f997dca8c2b85a
Author: Radoslaw Tyl <radoslawx.tyl@intel.com>
Date:   Mon Aug 7 14:59:40 2023 +0200

    iavf: do not process adminq tasks when __IAVF_IN_REMOVE_TASK is set
    
    [ Upstream commit c8de44b577eb540e8bfea55afe1d0904bb571b7a ]
    
    Prevent schedule operations for adminq during device remove and when
    __IAVF_IN_REMOVE_TASK flag is set. Currently, the iavf_down function
    adds operations for adminq that shouldn't be processed when the device
    is in the __IAVF_REMOVE state.
    
    Reproduction:
    
    echo 4 > /sys/bus/pci/devices/0000:17:00.0/sriov_numvfs
    ip link set dev ens1f0 vf 0 trust on
    ip link set dev ens1f0 vf 1 trust on
    ip link set dev ens1f0 vf 2 trust on
    ip link set dev ens1f0 vf 3 trust on
    
    ip link set dev ens1f0 vf 0 mac 00:22:33:44:55:66
    ip link set dev ens1f0 vf 1 mac 00:22:33:44:55:67
    ip link set dev ens1f0 vf 2 mac 00:22:33:44:55:68
    ip link set dev ens1f0 vf 3 mac 00:22:33:44:55:69
    
    echo 0000:17:02.0 > /sys/bus/pci/devices/0000\:17\:02.0/driver/unbind
    echo 0000:17:02.1 > /sys/bus/pci/devices/0000\:17\:02.1/driver/unbind
    echo 0000:17:02.2 > /sys/bus/pci/devices/0000\:17\:02.2/driver/unbind
    echo 0000:17:02.3 > /sys/bus/pci/devices/0000\:17\:02.3/driver/unbind
    sleep 10
    echo 0000:17:02.0 > /sys/bus/pci/drivers/iavf/bind
    echo 0000:17:02.1 > /sys/bus/pci/drivers/iavf/bind
    echo 0000:17:02.2 > /sys/bus/pci/drivers/iavf/bind
    echo 0000:17:02.3 > /sys/bus/pci/drivers/iavf/bind
    
    modprobe vfio-pci
    echo 8086 154c > /sys/bus/pci/drivers/vfio-pci/new_id
    
    qemu-system-x86_64 -accel kvm -m 4096 -cpu host \
    -drive file=centos9.qcow2,if=none,id=virtio-disk0 \
    -device virtio-blk-pci,drive=virtio-disk0,bootindex=0 -smp 4 \
    -device vfio-pci,host=17:02.0 -net none \
    -device vfio-pci,host=17:02.1 -net none \
    -device vfio-pci,host=17:02.2 -net none \
    -device vfio-pci,host=17:02.3 -net none \
    -daemonize -vnc :5
    
    Current result:
    There is a probability that the mac of VF in guest is inconsistent with
    it in host
    
    Expected result:
    When passthrough NIC VF to guest, the VF in guest should always get
    the same mac as it in host.
    
    Fixes: 14756b2ae265 ("iavf: Fix __IAVF_RESETTING state usage")
    Signed-off-by: Radoslaw Tyl <radoslawx.tyl@intel.com>
    Tested-by: Rafal Romanowski <rafal.romanowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65976385d49fcfbc72866957a4a1d09b4c698f7a
Author: Shinas Rasheed <srasheed@marvell.com>
Date:   Wed Sep 13 01:41:56 2023 -0700

    octeon_ep: fix tx dma unmap len values in SG
    
    [ Upstream commit 350db8a59eb392bf42e62b6b2a37d56b5833012b ]
    
    Lengths of SG pointers are kept in the following order in
    the SG entries in hardware.
     63      48|47     32|31     16|15       0
     -----------------------------------------
     |  Len 0  |  Len 1  |  Len 2  |  Len 3  |
     -----------------------------------------
     |                Ptr 0                  |
     -----------------------------------------
     |                Ptr 1                  |
     -----------------------------------------
     |                Ptr 2                  |
     -----------------------------------------
     |                Ptr 3                  |
     -----------------------------------------
    Dma pointers have to be unmapped based on their
    respective lengths given in this format.
    
    Fixes: 37d79d059606 ("octeon_ep: add Tx/Rx processing and interrupt support")
    Signed-off-by: Shinas Rasheed <srasheed@marvell.com>
    Reviewed-by: Simon Horman <horms@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66823a9025bcc7f5ba70df051cc0e40355966b3d
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Sep 15 14:02:11 2023 +0800

    ASoC: imx-audmix: Fix return error with devm_clk_get()
    
    [ Upstream commit b19a5733de255cabba5feecabf6e900638b582d1 ]
    
    The devm_clk_get() can return -EPROBE_DEFER error,
    modify the error code to be -EINVAL is not correct, which
    cause the -EPROBE_DEFER error is not correctly handled.
    
    This patch is to fix the return error code.
    
    Fixes: b86ef5367761 ("ASoC: fsl: Add Audio Mixer machine driver")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Daniel Baluta <daniel.baluta@nxp.com>
    Link: https://lore.kernel.org/r/1694757731-18308-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee79256b161513e6da8d76253d44a06319af9d99
Author: Chen Ni <nichen@iscas.ac.cn>
Date:   Fri Sep 15 02:13:44 2023 +0000

    ASoC: hdaudio.c: Add missing check for devm_kstrdup
    
    [ Upstream commit c04efbfd76d23157e64e6d6147518c187ab4233a ]
    
    Because of the potential failure of the devm_kstrdup(), the
    dl[i].codecs->name could be NULL.
    Therefore, we need to check it and return -ENOMEM in order to transfer
    the error.
    
    Fixes: 97030a43371e ("ASoC: Intel: avs: Add HDAudio machine board")
    Signed-off-by: Chen Ni <nichen@iscas.ac.cn>
    Reviewed-by: Amadeusz SÅawiÅski <amadeuszx.slawinski@linux.intel.com>
    Link: https://lore.kernel.org/r/20230915021344.3078-1-nichen@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 488ea2a3e2666022f79abfdd7d12e8305fc27a40
Author: Sasha Neftin <sasha.neftin@intel.com>
Date:   Wed Sep 13 09:39:05 2023 +0300

    net/core: Fix ETH_P_1588 flow dissector
    
    [ Upstream commit 75ad80ed88a182ab2ad5513e448cf07b403af5c3 ]
    
    When a PTP ethernet raw frame with a size of more than 256 bytes followed
    by a 0xff pattern is sent to __skb_flow_dissect, nhoff value calculation
    is wrong. For example: hdr->message_length takes the wrong value (0xffff)
    and it does not replicate real header length. In this case, 'nhoff' value
    was overridden and the PTP header was badly dissected. This leads to a
    kernel crash.
    
    net/core: flow_dissector
    net/core flow dissector nhoff = 0x0000000e
    net/core flow dissector hdr->message_length = 0x0000ffff
    net/core flow dissector nhoff = 0x0001000d (u16 overflow)
    ...
    skb linear:   00000000: 00 a0 c9 00 00 00 00 a0 c9 00 00 00 88
    skb frag:     00000000: f7 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    
    Using the size of the ptp_header struct will allow the corrected
    calculation of the nhoff value.
    
    net/core flow dissector nhoff = 0x0000000e
    net/core flow dissector nhoff = 0x00000030 (sizeof ptp_header)
    ...
    skb linear:   00000000: 00 a0 c9 00 00 00 00 a0 c9 00 00 00 88 f7 ff ff
    skb linear:   00000010: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    skb linear:   00000020: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    skb frag:     00000000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    
    Kernel trace:
    [   74.984279] ------------[ cut here ]------------
    [   74.989471] kernel BUG at include/linux/skbuff.h:2440!
    [   74.995237] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
    [   75.001098] CPU: 4 PID: 0 Comm: swapper/4 Tainted: G     U            5.15.85-intel-ese-standard-lts #1
    [   75.011629] Hardware name: Intel Corporation A-Island (CPU:AlderLake)/A-Island (ID:06), BIOS SB_ADLP.01.01.00.01.03.008.D-6A9D9E73-dirty Mar 30 2023
    [   75.026507] RIP: 0010:eth_type_trans+0xd0/0x130
    [   75.031594] Code: 03 88 47 78 eb c7 8b 47 68 2b 47 6c 48 8b 97 c0 00 00 00 83 f8 01 7e 1b 48 85 d2 74 06 66 83 3a ff 74 09 b8 00 04 00 00 eb ab <0f> 0b b8 00 01 00 00 eb a2 48 85 ff 74 eb 48 8d 54 24 06 31 f6 b9
    [   75.052612] RSP: 0018:ffff9948c0228de0 EFLAGS: 00010297
    [   75.058473] RAX: 00000000000003f2 RBX: ffff8e47047dc300 RCX: 0000000000001003
    [   75.066462] RDX: ffff8e4e8c9ea040 RSI: ffff8e4704e0a000 RDI: ffff8e47047dc300
    [   75.074458] RBP: ffff8e4704e2acc0 R08: 00000000000003f3 R09: 0000000000000800
    [   75.082466] R10: 000000000000000d R11: ffff9948c0228dec R12: ffff8e4715e4e010
    [   75.090461] R13: ffff9948c0545018 R14: 0000000000000001 R15: 0000000000000800
    [   75.098464] FS:  0000000000000000(0000) GS:ffff8e4e8fb00000(0000) knlGS:0000000000000000
    [   75.107530] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   75.113982] CR2: 00007f5eb35934a0 CR3: 0000000150e0a002 CR4: 0000000000770ee0
    [   75.121980] PKRU: 55555554
    [   75.125035] Call Trace:
    [   75.127792]  <IRQ>
    [   75.130063]  ? eth_get_headlen+0xa4/0xc0
    [   75.134472]  igc_process_skb_fields+0xcd/0x150
    [   75.139461]  igc_poll+0xc80/0x17b0
    [   75.143272]  __napi_poll+0x27/0x170
    [   75.147192]  net_rx_action+0x234/0x280
    [   75.151409]  __do_softirq+0xef/0x2f4
    [   75.155424]  irq_exit_rcu+0xc7/0x110
    [   75.159432]  common_interrupt+0xb8/0xd0
    [   75.163748]  </IRQ>
    [   75.166112]  <TASK>
    [   75.168473]  asm_common_interrupt+0x22/0x40
    [   75.173175] RIP: 0010:cpuidle_enter_state+0xe2/0x350
    [   75.178749] Code: 85 c0 0f 8f 04 02 00 00 31 ff e8 39 6c 67 ff 45 84 ff 74 12 9c 58 f6 c4 02 0f 85 50 02 00 00 31 ff e8 52 b0 6d ff fb 45 85 f6 <0f> 88 b1 00 00 00 49 63 ce 4c 2b 2c 24 48 89 c8 48 6b d1 68 48 c1
    [   75.199757] RSP: 0018:ffff9948c013bea8 EFLAGS: 00000202
    [   75.205614] RAX: ffff8e4e8fb00000 RBX: ffffb948bfd23900 RCX: 000000000000001f
    [   75.213619] RDX: 0000000000000004 RSI: ffffffff94206161 RDI: ffffffff94212e20
    [   75.221620] RBP: 0000000000000004 R08: 000000117568973a R09: 0000000000000001
    [   75.229622] R10: 000000000000afc8 R11: ffff8e4e8fb29ce4 R12: ffffffff945ae980
    [   75.237628] R13: 000000117568973a R14: 0000000000000004 R15: 0000000000000000
    [   75.245635]  ? cpuidle_enter_state+0xc7/0x350
    [   75.250518]  cpuidle_enter+0x29/0x40
    [   75.254539]  do_idle+0x1d9/0x260
    [   75.258166]  cpu_startup_entry+0x19/0x20
    [   75.262582]  secondary_startup_64_no_verify+0xc2/0xcb
    [   75.268259]  </TASK>
    [   75.270721] Modules linked in: 8021q snd_sof_pci_intel_tgl snd_sof_intel_hda_common tpm_crb snd_soc_hdac_hda snd_sof_intel_hda snd_hda_ext_core snd_sof_pci snd_sof snd_sof_xtensa_dsp snd_soc_acpi_intel_match snd_soc_acpi snd_soc_core snd_compress iTCO_wdt ac97_bus intel_pmc_bxt mei_hdcp iTCO_vendor_support snd_hda_codec_hdmi pmt_telemetry intel_pmc_core pmt_class snd_hda_intel x86_pkg_temp_thermal snd_intel_dspcfg snd_hda_codec snd_hda_core kvm_intel snd_pcm snd_timer kvm snd mei_me soundcore tpm_tis irqbypass i2c_i801 mei tpm_tis_core pcspkr intel_rapl_msr tpm i2c_smbus intel_pmt thermal sch_fq_codel uio uhid i915 drm_buddy video drm_display_helper drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops ttm fuse configfs
    [   75.342736] ---[ end trace 3785f9f360400e3a ]---
    [   75.347913] RIP: 0010:eth_type_trans+0xd0/0x130
    [   75.352984] Code: 03 88 47 78 eb c7 8b 47 68 2b 47 6c 48 8b 97 c0 00 00 00 83 f8 01 7e 1b 48 85 d2 74 06 66 83 3a ff 74 09 b8 00 04 00 00 eb ab <0f> 0b b8 00 01 00 00 eb a2 48 85 ff 74 eb 48 8d 54 24 06 31 f6 b9
    [   75.373994] RSP: 0018:ffff9948c0228de0 EFLAGS: 00010297
    [   75.379860] RAX: 00000000000003f2 RBX: ffff8e47047dc300 RCX: 0000000000001003
    [   75.387856] RDX: ffff8e4e8c9ea040 RSI: ffff8e4704e0a000 RDI: ffff8e47047dc300
    [   75.395864] RBP: ffff8e4704e2acc0 R08: 00000000000003f3 R09: 0000000000000800
    [   75.403857] R10: 000000000000000d R11: ffff9948c0228dec R12: ffff8e4715e4e010
    [   75.411863] R13: ffff9948c0545018 R14: 0000000000000001 R15: 0000000000000800
    [   75.419875] FS:  0000000000000000(0000) GS:ffff8e4e8fb00000(0000) knlGS:0000000000000000
    [   75.428946] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   75.435403] CR2: 00007f5eb35934a0 CR3: 0000000150e0a002 CR4: 0000000000770ee0
    [   75.443410] PKRU: 55555554
    [   75.446477] Kernel panic - not syncing: Fatal exception in interrupt
    [   75.453738] Kernel Offset: 0x11c00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
    [   75.465794] ---[ end Kernel panic - not syncing: Fatal exception in interrupt ]---
    
    Fixes: 4f1cc51f3488 ("net: flow_dissector: Parse PTP L2 packet header")
    Signed-off-by: Sasha Neftin <sasha.neftin@intel.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf560c8a83cacdab01056db47eba74d162d19e48
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Tue Sep 12 16:16:25 2023 +0200

    selftests: tls: swap the TX and RX sockets in some tests
    
    [ Upstream commit c326ca98446e0ae4fee43a40acf79412b74cfedb ]
    
    tls.sendmsg_large and tls.sendmsg_multiple are trying to send through
    the self->cfd socket (only configured with TLS_RX) and to receive through
    the self->fd socket (only configured with TLS_TX), so they're not using
    kTLS at all. Swap the sockets.
    
    Fixes: 7f657d5bf507 ("selftests: tls: add selftests for TLS sockets")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5a75b3d31d3a99ec7b7f8809d177d6fd5a81352
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Sep 12 10:56:07 2023 +0200

    netfilter: conntrack: fix extension size table
    
    [ Upstream commit 4908d5af16676b9d2901830551c2af911e452524 ]
    
    The size table is incorrect due to copypaste error,
    this reserves more size than needed.
    
    TSTAMP reserved 32 instead of 16 bytes.
    TIMEOUT reserved 16 instead of 8 bytes.
    
    Fixes: 5f31edc0676b ("netfilter: conntrack: move extension sizes into core")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09424e88126e254bec6c61ce58de51e67f53c6b7
Author: Knyazev Arseniy <poseaydone@ya.ru>
Date:   Wed Sep 13 10:33:43 2023 +0500

    ALSA: hda/realtek: Splitting the UX3402 into two separate models
    
    [ Upstream commit 07058dceb038a4b0dd49af07118b6b2a685bb4a6 ]
    
    UX3402VA and UX3402ZA models require different hex values, so comibining
    them into one model is incorrect.
    
    Fixes: 491a4ccd8a02 ("ALSA: hda/realtek: Add quirk for ASUS Zenbook using CS35L41")
    Signed-off-by: Knyazev Arseniy <poseaydone@ya.ru>
    Link: https://lore.kernel.org/r/20230913053343.119798-1-poseaydone@ya.ru
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1698854b03a5190a44712ca827ed9c5b5793d090
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Sep 12 13:32:44 2023 +0200

    ASoC: rt5640: Fix IRQ not being free-ed for HDA jack detect mode
    
    [ Upstream commit 8c8bf3df6b7c0ed1c4dd373b23eb0ce13a63f452 ]
    
    Set "rt5640->irq_requested = true" after a successful request_irq()
    in rt5640_enable_hda_jack_detect(), so that rt5640_disable_jack_detect()
    properly frees the IRQ.
    
    This fixes the IRQ not being freed on rmmod / driver unbind.
    
    Fixes: 2b9c8d2b3c89 ("ASoC: rt5640: Add the HDA header support")
    Cc: Oder Chiou <oder_chiou@realtek.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20230912113245.320159-6-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 293e4920f7154972e58349c92a003eaa342fad50
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Sep 12 13:32:40 2023 +0200

    ASoC: rt5640: Revert "Fix sleep in atomic context"
    
    [ Upstream commit fa6a0c0c1dd53b3949ca56bf7213648dfd6a62ee ]
    
    Commit 70a6404ff610 ("ASoC: rt5640: Fix sleep in atomic context")
    not only switched from request_irq() to request_threaded_irq(),
    to fix the sleep in atomic context issue, but it also added
    devm management of the IRQ by actually switching to
    devm_request_threaded_irq() (without any explanation in the commit
    message for this change).
    
    This is wrong since the IRQ was already explicitly managed by
    the driver. On unbind the ASoC core will call rt5640_set_jack(NULL)
    which in turn will call rt5640_disable_jack_detect() which
    frees the IRQ already. So now we have a double free.
    
    Besides the unexplained switch to devm being wrong, the actual fix
    for the sleep in atomic context issue also is not the best solution.
    
    The only thing which rt5640_irq() does is cancel + (re-)queue
    the jack_work delayed_work. This can be done in a single non sleeping
    call by replacing queue_delayed_work() with mod_delayed_work(),
    which does not sleep. Using mod_delayed_work() is a much better fix
    then adding a thread which does nothing other then queuing a work-item.
    
    This patch is a straight revert of the troublesome changes, the switch
    to mod_delayed_work() is done in a separate follow-up patch.
    
    Fixes: 70a6404ff610 ("ASoC: rt5640: Fix sleep in atomic context")
    Cc: Sameer Pujar <spujar@nvidia.com>
    Cc: Oder Chiou <oder_chiou@realtek.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20230912113245.320159-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e388671635acf470f0986d874389148fd234620b
Author: Toke HÃ¸iland-JÃ¸rgensen <toke@redhat.com>
Date:   Mon Sep 11 15:28:14 2023 +0200

    bpf: Avoid deadlock when using queue and stack maps from NMI
    
    [ Upstream commit a34a9f1a19afe9c60ca0ea61dfeee63a1c2baac8 ]
    
    Sysbot discovered that the queue and stack maps can deadlock if they are
    being used from a BPF program that can be called from NMI context (such as
    one that is attached to a perf HW counter event). To fix this, add an
    in_nmi() check and use raw_spin_trylock() in NMI context, erroring out if
    grabbing the lock fails.
    
    Fixes: f1a2e44a3aec ("bpf: add queue and stack maps")
    Reported-by: Hsin-Wei Hung <hsinweih@uci.edu>
    Tested-by: Hsin-Wei Hung <hsinweih@uci.edu>
    Co-developed-by: Hsin-Wei Hung <hsinweih@uci.edu>
    Signed-off-by: Toke HÃ¸iland-JÃ¸rgensen <toke@redhat.com>
    Link: https://lore.kernel.org/r/20230911132815.717240-1-toke@redhat.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e01b127685fcdd6041ef087776b88094acc2f3d
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sun Sep 10 19:04:45 2023 +0200

    netfilter: nf_tables: disallow element removal on anonymous sets
    
    [ Upstream commit 23a3bfd4ba7acd36abf52b78605f61b21bdac216 ]
    
    Anonymous sets need to be populated once at creation and then they are
    bound to rule since 938154b93be8 ("netfilter: nf_tables: reject unbound
    anonymous set before commit phase"), otherwise transaction reports
    EINVAL.
    
    Userspace does not need to delete elements of anonymous sets that are
    not yet bound, reject this with EOPNOTSUPP.
    
    From flush command path, skip anonymous sets, they are expected to be
    bound already. Otherwise, EINVAL is hit at the end of this transaction
    for unbound sets.
    
    Fixes: 96518518cc41 ("netfilter: add nftables")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a7fd891022a692ecfa1e32b6eb3de417669afd2
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Sep 7 11:05:04 2023 +0200

    ASoC: meson: spdifin: start hw on dai probe
    
    [ Upstream commit aedf323b66b2b875137422ecb7d2525179759076 ]
    
    For spdif input to report the locked rate correctly, even when no capture
    is running, the HW and reference clock must be started as soon as
    the dai is probed.
    
    Fixes: 5ce5658375e6 ("ASoC: meson: add axg spdif input")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20230907090504.12700-1-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e5d732e6902eb6a37b35480796838a145ae5f07
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Sep 22 18:30:29 2023 +0200

    netfilter: nf_tables: fix memleak when more than 255 elements expired
    
    commit cf5000a7787cbc10341091d37245a42c119d26c5 upstream.
    
    When more than 255 elements expired we're supposed to switch to a new gc
    container structure.
    
    This never happens: u8 type will wrap before reaching the boundary
    and nft_trans_gc_space() always returns true.
    
    This means we recycle the initial gc container structure and
    lose track of the elements that came before.
    
    While at it, don't deref 'gc' after we've passed it to call_rcu.
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Reported-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be4fbbbcd2f20c2cd0421f530f45c5545c3a4886
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:28 2023 +0200

    netfilter: nft_set_hash: try later when GC hits EAGAIN on iteration
    
    commit b079155faae94e9b3ab9337e82100a914ebb4e8d upstream.
    
    Skip GC run if iterator rewinds to the beginning with EAGAIN, otherwise GC
    might collect the same element more than once.
    
    Fixes: f6c383b8c31a ("netfilter: nf_tables: adapt set backend to use GC transaction API")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 973288e9d9886750684876eec70e0bc55b10607c
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:27 2023 +0200

    netfilter: nft_set_pipapo: stop GC iteration if GC transaction allocation fails
    
    commit 6d365eabce3c018a80f6e0379b17df2abb17405e upstream.
    
    nft_trans_gc_queue_sync() enqueues the GC transaction and it allocates a
    new one. If this allocation fails, then stop this GC sync run and retry
    later.
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c643a8e040d4ab4e705087bd7442bee7fc262a2
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:26 2023 +0200

    netfilter: nft_set_pipapo: call nft_trans_gc_queue_sync() in catchall GC
    
    commit 4a9e12ea7e70223555ec010bec9f711089ce96f6 upstream.
    
    pipapo needs to enqueue GC transactions for catchall elements through
    nft_trans_gc_queue_sync(). Add nft_trans_gc_catchall_sync() and
    nft_trans_gc_catchall_async() to handle GC transaction queueing
    accordingly.
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Fixes: f6c383b8c31a ("netfilter: nf_tables: adapt set backend to use GC transaction API")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92b4b4bde94033b03a030964bc003cdfd8c44e16
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:25 2023 +0200

    netfilter: nft_set_rbtree: use read spinlock to avoid datapath contention
    
    commit 96b33300fba880ec0eafcf3d82486f3463b4b6da upstream.
    
    rbtree GC does not modify the datastructure, instead it collects expired
    elements and it enqueues a GC transaction. Use a read spinlock instead
    to avoid data contention while GC worker is running.
    
    Fixes: f6c383b8c31a ("netfilter: nf_tables: adapt set backend to use GC transaction API")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a8c544158f68f656d1734eb5ba00c4f817b76b1
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:24 2023 +0200

    netfilter: nft_set_rbtree: skip sync GC for new elements in this transaction
    
    commit 2ee52ae94baabf7ee09cf2a8d854b990dac5d0e4 upstream.
    
    New elements in this transaction might expired before such transaction
    ends. Skip sync GC for such elements otherwise commit path might walk
    over an already released object. Once transaction is finished, async GC
    will collect such expired element.
    
    Fixes: f6c383b8c31a ("netfilter: nf_tables: adapt set backend to use GC transaction API")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a42ac74c966604c70f60fc9ee961beae20733f09
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Sep 22 18:30:23 2023 +0200

    netfilter: nf_tables: defer gc run if previous batch is still pending
    
    commit 8e51830e29e12670b4c10df070a4ea4c9593e961 upstream.
    
    Don't queue more gc work, else we may queue the same elements multiple
    times.
    
    If an element is flagged as dead, this can mean that either the previous
    gc request was invalidated/discarded by a transaction or that the previous
    request is still pending in the system work queue.
    
    The latter will happen if the gc interval is set to a very low value,
    e.g. 1ms, and system work queue is backlogged.
    
    The sets refcount is 1 if no previous gc requeusts are queued, so add
    a helper for this and skip gc run if old requests are pending.
    
    Add a helper for this and skip the gc run in this case.
    
    Fixes: f6c383b8c31a ("netfilter: nf_tables: adapt set backend to use GC transaction API")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 620e594be334f48c172f0ef01a2cee84536a703a
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:22 2023 +0200

    netfilter: nf_tables: use correct lock to protect gc_list
    
    commit 8357bc946a2abc2a10ca40e5a2105d2b4c57515e upstream.
    
    Use nf_tables_gc_list_lock spinlock, not nf_tables_destroy_list_lock to
    protect the gc_list.
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d319f7a81431c6bb32eb4dc7d7975f99e2c8c66
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:21 2023 +0200

    netfilter: nf_tables: GC transaction race with abort path
    
    commit 720344340fb9be2765bbaab7b292ece0a4570eae upstream.
    
    Abort path is missing a synchronization point with GC transactions. Add
    GC sequence number hence any GC transaction losing race will be
    discarded.
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afa584c35065051a11ae3ea3cc105b634053fcd8
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:20 2023 +0200

    netfilter: nf_tables: GC transaction race with netns dismantle
    
    commit 02c6c24402bf1c1e986899c14ba22a10b510916b upstream.
    
    Use maybe_get_net() since GC workqueue might race with netns exit path.
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41113aa5698ad7a82635bcb747d483e4458d518d
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:19 2023 +0200

    netfilter: nf_tables: fix GC transaction races with netns and netlink event exit path
    
    commit 6a33d8b73dfac0a41f3877894b38082bd0c9a5bc upstream.
    
    Netlink event path is missing a synchronization point with GC
    transactions. Add GC sequence number update to netns release path and
    netlink event path, any GC transaction losing race will be discarded.
    
    Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59ee68c437c562170265194a99698c805a686bb3
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Sep 22 18:30:18 2023 +0200

    netfilter: nf_tables: don't fail inserts if duplicate has expired
    
    commit 7845914f45f066497ac75b30c50dbc735e84e884 upstream.
    
    nftables selftests fail:
    run-tests.sh testcases/sets/0044interval_overlap_0
    Expected: 0-2 . 0-3, got:
    W: [FAILED]     ./testcases/sets/0044interval_overlap_0: got 1
    
    Insertion must ignore duplicate but expired entries.
    
    Moreover, there is a strange asymmetry in nft_pipapo_activate:
    
    It refetches the current element, whereas the other ->activate callbacks
    (bitmap, hash, rhash, rbtree) use elem->priv.
    Same for .remove: other set implementations take elem->priv,
    nft_pipapo_remove fetches elem->priv, then does a relookup,
    remove this.
    
    I suspect this was the reason for the change that prompted the
    removal of the expired check in pipapo_get() in the first place,
    but skipping exired elements there makes no sense to me, this helper
    is used for normal get requests, insertions (duplicate check)
    and deactivate callback.
    
    In first two cases expired elements must be skipped.
    
    For ->deactivate(), this gets called for DELSETELEM, so it
    seems to me that expired elements should be skipped as well, i.e.
    delete request should fail with -ENOENT error.
    
    Fixes: 24138933b97b ("netfilter: nf_tables: don't skip expired elements during walk")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b9af4860a61f55cf716267b5ae5df34aacc4b39
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:17 2023 +0200

    netfilter: nf_tables: remove busy mark and gc batch API
    
    commit a2dd0233cbc4d8a0abb5f64487487ffc9265beb5 upstream.
    
    Ditch it, it has been replace it by the GC transaction API and it has no
    clients anymore.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ead4f74b3a9162b205f702d72d4a3421356dbc1
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:16 2023 +0200

    netfilter: nft_set_hash: mark set element as dead when deleting from packet path
    
    upstream c92db3030492b8ad1d0faace7a93bbcf53850d0c commit.
    
    Set on the NFT_SET_ELEM_DEAD_BIT flag on this element, instead of
    performing element removal which might race with an ongoing transaction.
    Enable gc when dynamic flag is set on since dynset deletion requires
    garbage collection after this patch.
    
    Fixes: d0a8d877da97 ("netfilter: nft_dynset: support for element deletion")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df650d6a4bf47248261b61ef6b174d7c54034d15
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:15 2023 +0200

    netfilter: nf_tables: adapt set backend to use GC transaction API
    
    commit f6c383b8c31a93752a52697f8430a71dcbc46adf upstream.
    
    Use the GC transaction API to replace the old and buggy gc API and the
    busy mark approach.
    
    No set elements are removed from async garbage collection anymore,
    instead the _DEAD bit is set on so the set element is not visible from
    lookup path anymore. Async GC enqueues transaction work that might be
    aborted and retried later.
    
    rbtree and pipapo set backends does not set on the _DEAD bit from the
    sync GC path since this runs in control plane path where mutex is held.
    In this case, set elements are deactivated, removed and then released
    via RCU callback, sync GC never fails.
    
    Fixes: 3c4287f62044 ("nf_tables: Add set type for arbitrary concatenation of ranges")
    Fixes: 8d8540c4f5e0 ("netfilter: nft_set_rbtree: add timeout support")
    Fixes: 9d0982927e79 ("netfilter: nft_hash: add support for timeouts")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea3eb9f2192e4fc33b795673e56c97a21987f868
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Sep 22 18:30:14 2023 +0200

    netfilter: nf_tables: GC transaction API to avoid race with control plane
    
    commit 5f68718b34a531a556f2f50300ead2862278da26 upstream.
    
    The set types rhashtable and rbtree use a GC worker to reclaim memory.
    From system work queue, in periodic intervals, a scan of the table is
    done.
    
    The major caveat here is that the nft transaction mutex is not held.
    This causes a race between control plane and GC when they attempt to
    delete the same element.
    
    We cannot grab the netlink mutex from the work queue, because the
    control plane has to wait for the GC work queue in case the set is to be
    removed, so we get following deadlock:
    
       cpu 1                                cpu2
         GC work                            transaction comes in , lock nft mutex
           `acquire nft mutex // BLOCKS
                                            transaction asks to remove the set
                                            set destruction calls cancel_work_sync()
    
    cancel_work_sync will now block forever, because it is waiting for the
    mutex the caller already owns.
    
    This patch adds a new API that deals with garbage collection in two
    steps:
    
    1) Lockless GC of expired elements sets on the NFT_SET_ELEM_DEAD_BIT
       so they are not visible via lookup. Annotate current GC sequence in
       the GC transaction. Enqueue GC transaction work as soon as it is
       full. If ruleset is updated, then GC transaction is aborted and
       retried later.
    
    2) GC work grabs the mutex. If GC sequence has changed then this GC
       transaction lost race with control plane, abort it as it contains
       stale references to objects and let GC try again later. If the
       ruleset is intact, then this GC transaction deactivates and removes
       the elements and it uses call_rcu() to destroy elements.
    
    Note that no elements are removed from GC lockless path, the _DEAD bit
    is set and pointers are collected. GC catchall does not remove the
    elements anymore too. There is a new set->dead flag that is set on to
    abort the GC transaction to deal with set->ops->destroy() path which
    removes the remaining elements in the set from commit_release, where no
    mutex is held.
    
    To deal with GC when mutex is held, which allows safe deactivate and
    removal, add sync GC API which releases the set element object via
    call_rcu(). This is used by rbtree and pipapo backends which also
    perform garbage collection from control plane path.
    
    Since element removal from sets can happen from control plane and
    element garbage collection/timeout, it is necessary to keep the set
    structure alive until all elements have been deactivated and destroyed.
    
    We cannot do a cancel_work_sync or flush_work in nft_set_destroy because
    its called with the transaction mutex held, but the aforementioned async
    work queue might be blocked on the very mutex that nft_set_destroy()
    callchain is sitting on.
    
    This gives us the choice of ABBA deadlock or UaF.
    
    To avoid both, add set->refs refcount_t member. The GC API can then
    increment the set refcount and release it once the elements have been
    free'd.
    
    Set backends are adapted to use the GC transaction API in a follow up
    patch entitled:
    
      ("netfilter: nf_tables: use gc transaction API in set backends")
    
    This is joint work with Florian Westphal.
    
    Fixes: cfed7e1b1f8e ("netfilter: nf_tables: add set garbage collection helpers")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59dab3bf0b8fc08eb802721c0532f13dd89209b8
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Sep 22 18:30:13 2023 +0200

    netfilter: nf_tables: don't skip expired elements during walk
    
    commit 24138933b97b055d486e8064b4a1721702442a9b upstream.
    
    There is an asymmetry between commit/abort and preparation phase if the
    following conditions are met:
    
    1. set is a verdict map ("1.2.3.4 : jump foo")
    2. timeouts are enabled
    
    In this case, following sequence is problematic:
    
    1. element E in set S refers to chain C
    2. userspace requests removal of set S
    3. kernel does a set walk to decrement chain->use count for all elements
       from preparation phase
    4. kernel does another set walk to remove elements from the commit phase
       (or another walk to do a chain->use increment for all elements from
        abort phase)
    
    If E has already expired in 1), it will be ignored during list walk, so its use count
    won't have been changed.
    
    Then, when set is culled, ->destroy callback will zap the element via
    nf_tables_set_elem_destroy(), but this function is only safe for
    elements that have been deactivated earlier from the preparation phase:
    lack of earlier deactivate removes the element but leaks the chain use
    count, which results in a WARN splat when the chain gets removed later,
    plus a leak of the nft_chain structure.
    
    Update pipapo_get() not to skip expired elements, otherwise flush
    command reports bogus ENOENT errors.
    
    Fixes: 3c4287f62044 ("nf_tables: Add set type for arbitrary concatenation of ranges")
    Fixes: 8d8540c4f5e0 ("netfilter: nft_set_rbtree: add timeout support")
    Fixes: 9d0982927e79 ("netfilter: nft_hash: add support for timeouts")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bb88a0344c02c004f0ba653be04aaab921bc213
Author: Jan Kara <jack@suse.cz>
Date:   Wed Sep 13 17:04:55 2023 +0200

    ext4: do not let fstrim block system suspend
    
    [ Upstream commit 5229a658f6453362fbb9da6bf96872ef25a7097e ]
    
    Len Brown has reported that system suspend sometimes fail due to
    inability to freeze a task working in ext4_trim_fs() for one minute.
    Trimming a large filesystem on a disk that slowly processes discard
    requests can indeed take a long time. Since discard is just an advisory
    call, it is perfectly fine to interrupt it at any time and the return
    number of discarded blocks until that moment. Do that when we detect the
    task is being frozen.
    
    Cc: stable@kernel.org
    Reported-by: Len Brown <lenb@kernel.org>
    Suggested-by: Dave Chinner <david@fromorbit.com>
    References: https://bugzilla.kernel.org/show_bug.cgi?id=216322
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20230913150504.9054-2-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4d5db1c77facf76e9685a921e75caa459b9aaad
Author: Jan Kara <jack@suse.cz>
Date:   Wed Sep 13 17:04:54 2023 +0200

    ext4: move setting of trimmed bit into ext4_try_to_trim_range()
    
    [ Upstream commit 45e4ab320c9b5fa67b1fc3b6a9b381cfcc0c8488 ]
    
    Currently we set the group's trimmed bit in ext4_trim_all_free() based
    on return value of ext4_try_to_trim_range(). However when we will want
    to abort trimming because of suspend attempt, we want to return success
    from ext4_try_to_trim_range() but not set the trimmed bit. Instead
    implementing awkward propagation of this information, just move setting
    of trimmed bit into ext4_try_to_trim_range() when the whole group is
    trimmed.
    
    Cc: stable@kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20230913150504.9054-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e3c25df7d403a5980262840821ed256f112c804
Author: Kemeng Shi <shikemeng@huaweicloud.com>
Date:   Tue Aug 1 22:32:00 2023 +0800

    ext4: replace the traditional ternary conditional operator with with max()/min()
    
    [ Upstream commit de8bf0e5ee7482585450357c6d4eddec8efc5cb7 ]
    
    Replace the traditional ternary conditional operator with with max()/min()
    
    Signed-off-by: Kemeng Shi <shikemeng@huaweicloud.com>
    Reviewed-by: Ritesh Harjani (IBM) <ritesh.list@gmail.com>
    Link: https://lore.kernel.org/r/20230801143204.2284343-7-shikemeng@huaweicloud.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Stable-dep-of: 45e4ab320c9b ("ext4: move setting of trimmed bit into ext4_try_to_trim_range()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39c4a9522db0072570d602e9b365119e17fb9f4f
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Aug 28 09:06:43 2023 +0100

    btrfs: remove BUG() after failure to insert delayed dir index item
    
    [ Upstream commit 2c58c3931ede7cd08cbecf1f1a4acaf0a04a41a9 ]
    
    Instead of calling BUG() when we fail to insert a delayed dir index item
    into the delayed node's tree, we can just release all the resources we
    have allocated/acquired before and return the error to the caller. This is
    fine because all existing call chains undo anything they have done before
    calling btrfs_insert_delayed_dir_index() or BUG_ON (when creating pending
    snapshots in the transaction commit path).
    
    So remove the BUG() call and do proper error handling.
    
    This relates to a syzbot report linked below, but does not fix it because
    it only prevents hitting a BUG(), it does not fix the issue where somehow
    we attempt to use twice the same index number for different index items.
    
    Link: https://lore.kernel.org/linux-btrfs/00000000000036e1290603e097e0@google.com/
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d1a761dec2259c0ed159ea6a19d3103aa80e0e1
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Aug 28 09:06:42 2023 +0100

    btrfs: improve error message after failure to add delayed dir index item
    
    [ Upstream commit 91bfe3104b8db0310f76f2dcb6aacef24c889366 ]
    
    If we fail to add a delayed dir index item because there's already another
    item with the same index number, we print an error message (and then BUG).
    However that message isn't very helpful to debug anything because we don't
    know what's the index number and what are the values of index counters in
    the inode and its delayed inode (index_cnt fields of struct btrfs_inode
    and struct btrfs_delayed_node).
    
    So update the error message to include the index number and counters.
    
    We actually had a recent case where this issue was hit by a syzbot report
    (see the link below).
    
    Link: https://lore.kernel.org/linux-btrfs/00000000000036e1290603e097e0@google.com/
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Stable-dep-of: 2c58c3931ede ("btrfs: remove BUG() after failure to insert delayed dir index item")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dbf1a719850577bb51fc7512a3972994b797a17b
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Aug 9 12:44:20 2023 +0200

    dm: fix a race condition in retrieve_deps
    
    [ Upstream commit f6007dce0cd35d634d9be91ef3515a6385dcee16 ]
    
    There's a race condition in the multipath target when retrieve_deps
    races with multipath_message calling dm_get_device and dm_put_device.
    retrieve_deps walks the list of open devices without holding any lock
    but multipath may add or remove devices to the list while it is
    running. The end result may be memory corruption or use-after-free
    memory access.
    
    See this description of a UAF with multipath_message():
    https://listman.redhat.com/archives/dm-devel/2022-October/052373.html
    
    Fix this bug by introducing a new rw semaphore "devices_lock". We grab
    devices_lock for read in retrieve_deps and we grab it for write in
    dm_get_device and dm_put_device.
    
    Reported-by: Luo Meng <luomeng12@huawei.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Tested-by: Li Lingfeng <lilingfeng3@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df9950d37df113db59495fa09d060754366a2b7c
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Mon Sep 18 14:17:11 2023 +0100

    netfs: Only call folio_start_fscache() one time for each folio
    
    [ Upstream commit df1c357f25d808e30b216188330e708e09e1a412 ]
    
    If a network filesystem using netfs implements a clamp_length()
    function, it can set subrequest lengths smaller than a page size.
    
    When we loop through the folios in netfs_rreq_unlock_folios() to
    set any folios to be written back, we need to make sure we only
    call folio_start_fscache() once for each folio.
    
    Otherwise, this simple testcase:
    
      mount -o fsc,rsize=1024,wsize=1024 127.0.0.1:/export /mnt/nfs
      dd if=/dev/zero of=/mnt/nfs/file.bin bs=4096 count=1
      1+0 records in
      1+0 records out
      4096 bytes (4.1 kB, 4.0 KiB) copied, 0.0126359 s, 324 kB/s
      echo 3 > /proc/sys/vm/drop_caches
      cat /mnt/nfs/file.bin > /dev/null
    
    will trigger an oops similar to the following:
    
      page dumped because: VM_BUG_ON_FOLIO(folio_test_private_2(folio))
      ------------[ cut here ]------------
      kernel BUG at include/linux/netfs.h:44!
      ...
      CPU: 5 PID: 134 Comm: kworker/u16:5 Kdump: loaded Not tainted 6.4.0-rc5
      ...
      RIP: 0010:netfs_rreq_unlock_folios+0x68e/0x730 [netfs]
      ...
      Call Trace:
        netfs_rreq_assess+0x497/0x660 [netfs]
        netfs_subreq_terminated+0x32b/0x610 [netfs]
        nfs_netfs_read_completion+0x14e/0x1a0 [nfs]
        nfs_read_completion+0x2f9/0x330 [nfs]
        rpc_free_task+0x72/0xa0 [sunrpc]
        rpc_async_release+0x46/0x70 [sunrpc]
        process_one_work+0x3bd/0x710
        worker_thread+0x89/0x610
        kthread+0x181/0x1c0
        ret_from_fork+0x29/0x50
    
    Fixes: 3d3c95046742 ("netfs: Provide readahead and readpage netfs helpers"
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2210612
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Link: https://lore.kernel.org/r/20230608214137.856006-1-dwysocha@redhat.com/ # v1
    Link: https://lore.kernel.org/r/20230915185704.1082982-1-dwysocha@redhat.com/ # v2
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d9757480b436505a8ffc42cf9241ee88400dc55
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Tue Aug 22 11:10:34 2023 +0300

    media: via: Use correct dependency for camera sensor drivers
    
    [ Upstream commit 41425941dfcf47cc6df8e500af6ff16a7be6539f ]
    
    The via camera controller driver selected ov7670 driver, however now that
    driver has dependencies and may no longer be selected unconditionally.
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Fixes: 7d3c7d2a2914 ("media: i2c: Add a camera sensor top level menu")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae68541d528532fe5e6ebddba697f1e96f00f846
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Fri Aug 18 12:51:49 2023 +0300

    media: v4l: Use correct dependency for camera sensor drivers
    
    [ Upstream commit 86e16b87afac20779da1228d690a95c54d7e2ad0 ]
    
    The Kconfig option that enables compiling camera sensor drivers is
    VIDEO_CAMERA_SENSOR rather than MEDIA_CAMERA_SUPPORT as it was previously.
    Fix this.
    
    Also select VIDEO_OV7670 for marvell platform drivers only if
    MEDIA_SUBDRV_AUTOSELECT and VIDEO_CAMERA_SENSOR are enabled.
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Fixes: 7d3c7d2a2914 ("media: i2c: Add a camera sensor top level menu")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a997d583571bc4431ee3b10b54759251aa23d668
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Wed Aug 30 15:29:34 2023 -0400

    NFSv4.1: fix pnfs MDS=DS session trunking
    
    [ Upstream commit 806a3bc421a115fbb287c1efce63a48c54ee804b ]
    
    Currently, when GETDEVICEINFO returns multiple locations where each
    is a different IP but the server's identity is same as MDS, then
    nfs4_set_ds_client() finds the existing nfs_client structure which
    has the MDS's max_connect value (and if it's 1), then the 1st IP
    on the DS's list will get dropped due to MDS trunking rules. Other
    IPs would be added as they fall under the pnfs trunking rules.
    
    For the list of IPs the 1st goes thru calling nfs4_set_ds_client()
    which will eventually call nfs4_add_trunk() and call into
    rpc_clnt_test_and_add_xprt() which has the check for MDS trunking.
    The other IPs (after the 1st one), would call rpc_clnt_add_xprt()
    which doesn't go thru that check.
    
    nfs4_add_trunk() is called when MDS trunking is happening and it
    needs to enforce the usage of max_connect mount option of the
    1st mount. However, this shouldn't be applied to pnfs flow.
    
    Instead, this patch proposed to treat MDS=DS as DS trunking and
    make sure that MDS's max_connect limit does not apply to the
    1st IP returned in the GETDEVICEINFO list. It does so by
    marking the newly created client with a new flag NFS_CS_PNFS
    which then used to pass max_connect value to use into the
    rpc_clnt_test_and_add_xprt() instead of the existing rpc
    client's max_connect value set by the MDS connection.
    
    For example, mount was done without max_connect value set
    so MDS's rpc client has cl_max_connect=1. Upon calling into
    rpc_clnt_test_and_add_xprt() and using rpc client's value,
    the caller passes in max_connect value which is previously
    been set in the pnfs path (as a part of handling
    GETDEVICEINFO list of IPs) in nfs4_set_ds_client().
    
    However, when NFS_CS_PNFS flag is not set and we know we
    are doing MDS trunking, comparing a new IP of the same
    server, we then set the max_connect value to the
    existing MDS's value and pass that into
    rpc_clnt_test_and_add_xprt().
    
    Fixes: dc48e0abee24 ("SUNRPC enforce creation of no more than max_connect xprts")
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f86a2c2ea085b659d806292dcb753685fd517526
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Jul 13 13:02:38 2023 -0400

    NFSv4.1: use EXCHGID4_FLAG_USE_PNFS_DS for DS server
    
    [ Upstream commit 51d674a5e4889f1c8e223ac131cf218e1631e423 ]
    
    After receiving the location(s) of the DS server(s) in the
    GETDEVINCEINFO, create the request for the clientid to such
    server and indicate that the client is connecting to a DS.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Stable-dep-of: 806a3bc421a1 ("NFSv4.1: fix pnfs MDS=DS session trunking")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 839e07de9a0a5de098283e53d243e14a1f4bc92c
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Sep 4 12:50:09 2023 -0400

    SUNRPC: Mark the cred for revalidation if the server rejects it
    
    [ Upstream commit 611fa42dfa9d2f3918ac5f4dd5705dfad81b323d ]
    
    If the server rejects the credential as being stale, or bad, then we
    should mark it for revalidation before retransmitting.
    
    Fixes: 7f5667a5f8c4 ("SUNRPC: Clean up rpc_verify_header()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13acbca81eeeb6c205117f602400bbf77bf5948b
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Sep 4 12:43:58 2023 -0400

    NFS/pNFS: Report EINVAL errors from connect() to the server
    
    [ Upstream commit dd7d7ee3ba2a70d12d02defb478790cf57d5b87b ]
    
    With IPv6, connect() can occasionally return EINVAL if a route is
    unavailable. If this happens during I/O to a data server, we want to
    report it using LAYOUTERROR as an inability to connect.
    
    Fixes: dd52128afdde ("NFSv4.1/pnfs Ensure flexfiles reports all connection related errors")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit edd1f06145101dab83497806bb6162641255ef50
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Sep 4 12:34:41 2023 -0400

    NFS: More fixes for nfs_direct_write_reschedule_io()
    
    [ Upstream commit b11243f720ee5f9376861099019c8542969b6318 ]
    
    Ensure that all requests are put back onto the commit list so that they
    can be rescheduled.
    
    Fixes: 4daaeba93822 ("NFS: Fix nfs_direct_write_reschedule_io()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4729af1c73cfacb64facda3d196e25940f0e7a5
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Sep 4 12:34:40 2023 -0400

    NFS: Use the correct commit info in nfs_join_page_group()
    
    [ Upstream commit b193a78ddb5ee7dba074d3f28dc050069ba083c0 ]
    
    Ensure that nfs_clear_request_commit() updates the correct counters when
    it removes them from the commit list.
    
    Fixes: ed5d588fe47f ("NFS: Try to join page groups before an O_DIRECT retransmission")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f49386d67792424028acfe781d466b010f8fa3f
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Sep 4 12:34:39 2023 -0400

    NFS: More O_DIRECT accounting fixes for error paths
    
    [ Upstream commit 8982f7aff39fb526aba4441fff2525fcedd5e1a3 ]
    
    If we hit a fatal error when retransmitting, we do need to record the
    removal of the request from the count of written bytes.
    
    Fixes: 031d73ed768a ("NFS: Fix O_DIRECT accounting of number of bytes read/written")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d98038e5bd939bd13cc4e602dfe60cd5110efa8
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Sep 4 12:34:38 2023 -0400

    NFS: Fix O_DIRECT locking issues
    
    [ Upstream commit 7c6339322ce0c6128acbe36aacc1eeb986dd7bf1 ]
    
    The dreq fields are protected by the dreq->lock.
    
    Fixes: 954998b60caa ("NFS: Fix error handling for O_DIRECT write scheduling")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f16fd0b11f0f4d41846b5102b1656ea1fc9ac7a0
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Sep 4 12:34:37 2023 -0400

    NFS: Fix error handling for O_DIRECT write scheduling
    
    [ Upstream commit 954998b60caa8f2a3bf3abe490de6f08d283687a ]
    
    If we fail to schedule a request for transmission, there are 2
    possibilities:
    1) Either we hit a fatal error, and we just want to drop the remaining
       requests on the floor.
    2) We were asked to try again, in which case we should allow the
       outstanding RPC calls to complete, so that we can recoalesce requests
       and try again.
    
    Fixes: d600ad1f2bdb ("NFS41: pop some layoutget errors to application")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
