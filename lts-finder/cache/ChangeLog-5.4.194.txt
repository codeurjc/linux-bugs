commit 90659487578cd8a46636b4c507609af44c60a132
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun May 15 19:54:48 2022 +0200

    Linux 5.4.194
    
    Link: https://lore.kernel.org/r/20220513142229.153291230@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f4e0bf651e3060583b87431889a10390fcb2210
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Tue Mar 22 14:42:08 2022 -0700

    mm: userfaultfd: fix missing cache flush in mcopy_atomic_pte() and __mcopy_atomic()
    
    commit 7c25a0b89a487878b0691e6524fb5a8827322194 upstream.
    
    userfaultfd calls mcopy_atomic_pte() and __mcopy_atomic() which do not
    do any cache flushing for the target page.  Then the target page will be
    mapped to the user space with a different address (user address), which
    might have an alias issue with the kernel address used to copy the data
    from the user to.  Fix this by insert flush_dcache_page() after
    copy_from_user() succeeds.
    
    Link: https://lkml.kernel.org/r/20220210123058.79206-7-songmuchun@bytedance.com
    Fixes: b6ebaedb4cb1 ("userfaultfd: avoid mmap_sem read recursion in mcopy_atomic")
    Fixes: c1a4de99fada ("userfaultfd: mcopy_atomic|mfill_zeropage: UFFDIO_COPY|UFFDIO_ZEROPAGE preparation")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Cc: Axel Rasmussen <axelrasmussen@google.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Fam Zheng <fam.zheng@bytedance.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Lars Persson <lars.persson@axis.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Peter Xu <peterx@redhat.com>
    Cc: Xiongchun Duan <duanxiongchun@bytedance.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4db0c3ce0c5d45f386940e1c8319a1d97d7910f
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Tue Mar 22 14:41:59 2022 -0700

    mm: hugetlb: fix missing cache flush in copy_huge_page_from_user()
    
    commit e763243cc6cb1fcc720ec58cfd6e7c35ae90a479 upstream.
    
    userfaultfd calls copy_huge_page_from_user() which does not do any cache
    flushing for the target page.  Then the target page will be mapped to
    the user space with a different address (user address), which might have
    an alias issue with the kernel address used to copy the data from the
    user to.
    
    Fix this issue by flushing dcache in copy_huge_page_from_user().
    
    Link: https://lkml.kernel.org/r/20220210123058.79206-4-songmuchun@bytedance.com
    Fixes: fa4d75c1de13 ("userfaultfd: hugetlbfs: add copy_huge_page_from_user for hugetlb userfaultfd support")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Axel Rasmussen <axelrasmussen@google.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Fam Zheng <fam.zheng@bytedance.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Lars Persson <lars.persson@axis.com>
    Cc: Peter Xu <peterx@redhat.com>
    Cc: Xiongchun Duan <duanxiongchun@bytedance.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea9cad1c5d9523b9da5df2e8f91c9bee2dabfad8
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Tue Mar 22 14:41:56 2022 -0700

    mm: fix missing cache flush for all tail pages of compound page
    
    commit 2771739a7162782c0aa6424b2e3dd874e884a15d upstream.
    
    The D-cache maintenance inside move_to_new_page() only consider one
    page, there is still D-cache maintenance issue for tail pages of
    compound page (e.g. THP or HugeTLB).
    
    THP migration is only enabled on x86_64, ARM64 and powerpc, while
    powerpc and arm64 need to maintain the consistency between I-Cache and
    D-Cache, which depends on flush_dcache_page() to maintain the
    consistency between I-Cache and D-Cache.
    
    But there is no issues on arm64 and powerpc since they already considers
    the compound page cache flushing in their icache flush function.
    HugeTLB migration is enabled on arm, arm64, mips, parisc, powerpc,
    riscv, s390 and sh, while arm has handled the compound page cache flush
    in flush_dcache_page(), but most others do not.
    
    In theory, the issue exists on many architectures.  Fix this by not
    using flush_dcache_folio() since it is not backportable.
    
    Link: https://lkml.kernel.org/r/20220210123058.79206-3-songmuchun@bytedance.com
    Fixes: 290408d4a250 ("hugetlb: hugepage migration core")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Reviewed-by: Zi Yan <ziy@nvidia.com>
    Cc: Axel Rasmussen <axelrasmussen@google.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Fam Zheng <fam.zheng@bytedance.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Lars Persson <lars.persson@axis.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Peter Xu <peterx@redhat.com>
    Cc: Xiongchun Duan <duanxiongchun@bytedance.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c05171d6e35120a967a9b782ba6cba43e74902
Author: Itay Iellin <ieitayie@gmail.com>
Date:   Sat May 7 08:32:48 2022 -0400

    Bluetooth: Fix the creation of hdev->name
    
    commit 103a2f3255a95991252f8f13375c3a96a75011cd upstream.
    
    Set a size limit of 8 bytes of the written buffer to "hdev->name"
    including the terminating null byte, as the size of "hdev->name" is 8
    bytes. If an id value which is greater than 9999 is allocated,
    then the "snprintf(hdev->name, sizeof(hdev->name), "hci%d", id)"
    function call would lead to a truncation of the id value in decimal
    notation.
    
    Set an explicit maximum id parameter in the id allocation function call.
    The id allocation function defines the maximum allocated id value as the
    maximum id parameter value minus one. Therefore, HCI_MAX_ID is defined
    as 10000.
    
    Signed-off-by: Itay Iellin <ieitayie@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f52c4c067aa53f53bfb244a7dfa9c3d90082b7a3
Author: Kyle Huey <me@kylehuey.com>
Date:   Mon May 2 22:01:36 2022 -0700

    KVM: x86/svm: Account for family 17h event renumberings in amd_pmc_perf_hw_id
    
    commit 5eb849322d7f7ae9d5c587c7bc3b4f7c6872cd2f upstream.
    
    Zen renumbered some of the performance counters that correspond to the
    well known events in perf_hw_id. This code in KVM was never updated for
    that, so guest that attempt to use counters on Zen that correspond to the
    pre-Zen perf_hw_id values will silently receive the wrong values.
    
    This has been observed in the wild with rr[0] when running in Zen 3
    guests. rr uses the retired conditional branch counter 00d1 which is
    incorrectly recognized by KVM as PERF_COUNT_HW_STALLED_CYCLES_BACKEND.
    
    [0] https://rr-project.org/
    
    Signed-off-by: Kyle Huey <me@kylehuey.com>
    Message-Id: <20220503050136.86298-1-khuey@kylehuey.com>
    Cc: stable@vger.kernel.org
    [Check guest family, not host. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [Backport to 5.15: adjusted context]
    Signed-off-by: Kyle Huey <me@kylehuey.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1bdf1e6e706f15d5627be9d8b582a8edd9acc1e
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Sep 6 22:14:20 2019 +0900

    x86: kprobes: Prohibit probing on instruction which has emulate prefix
    
    commit 004e8dce9c5595697951f7cd0e9f66b35c92265e upstream.
    
    Prohibit probing on instruction which has XEN_EMULATE_PREFIX
    or KVM's emulate prefix. Since that prefix is a marker for Xen
    and KVM, if we modify the marker by kprobe's int3, that doesn't
    work as expected.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: x86@kernel.org
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Stefano Stabellini <sstabellini@kernel.org>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: xen-devel@lists.xenproject.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Link: https://lkml.kernel.org/r/156777566048.25081.6296162369492175325.stgit@devnote2
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6af6427a960000428a783e373d59a213253c5fb0
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Sep 6 22:14:10 2019 +0900

    x86: xen: insn: Decode Xen and KVM emulate-prefix signature
    
    commit 4d65adfcd1196818659d3bd9b42dccab291e1751 upstream.
    
    Decode Xen and KVM's emulate-prefix signature by x86 insn decoder.
    It is called "prefix" but actually not x86 instruction prefix, so
    this adds insn.emulate_prefix_size field instead of reusing
    insn.prefixes.
    
    If x86 decoder finds a special sequence of instructions of
    XEN_EMULATE_PREFIX and 'ud2a; .ascii "kvm"', it just counts the
    length, set insn.emulate_prefix_size and fold it with the next
    instruction. In other words, the signature and the next instruction
    is treated as a single instruction.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: x86@kernel.org
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Stefano Stabellini <sstabellini@kernel.org>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: xen-devel@lists.xenproject.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lkml.kernel.org/r/156777564986.25081.4964537658500952557.stgit@devnote2
    [mheyne: resolved contextual conflict in tools/objtools/sync-check.sh]
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c67a4a91f5e140c1ba313b03e7baf907a03de788
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Sep 6 22:13:59 2019 +0900

    x86: xen: kvm: Gather the definition of emulate prefixes
    
    commit b3dc0695fa40c3b280230fb6fb7fb7a94ce28bf4 upstream.
    
    Gather the emulate prefixes, which forcibly make the following
    instruction emulated on virtualization, in one place.
    
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: x86@kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Stefano Stabellini <sstabellini@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: xen-devel@lists.xenproject.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Link: https://lkml.kernel.org/r/156777563917.25081.7286628561790289995.stgit@devnote2
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c39e1ace3dc368fedaa49713885b9a0fa3d7434
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Sep 6 22:13:48 2019 +0900

    x86/asm: Allow to pass macros to __ASM_FORM()
    
    commit f7919fd943abf0c77aed4441ea9897a323d132f5 upstream.
    
    Use __stringify() at __ASM_FORM() so that user can pass
    code including macros to __ASM_FORM().
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: x86@kernel.org
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Stefano Stabellini <sstabellini@kernel.org>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: xen-devel@lists.xenproject.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Link: https://lkml.kernel.org/r/156777562873.25081.2288083344657460959.stgit@devnote2
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29afcd5af012ef6cc8f49b15cf79b6061f36084b
Author: Like Xu <likexu@tencent.com>
Date:   Tue Nov 30 15:42:17 2021 +0800

    KVM: x86/pmu: Refactoring find_arch_event() to pmc_perf_hw_id()
    
    commit 7c174f305cbee6bdba5018aae02b84369e7ab995 upstream.
    
    The find_arch_event() returns a "unsigned int" value,
    which is used by the pmc_reprogram_counter() to
    program a PERF_TYPE_HARDWARE type perf_event.
    
    The returned value is actually the kernel defined generic
    perf_hw_id, let's rename it to pmc_perf_hw_id() with simpler
    incoming parameters for better self-explanation.
    
    Signed-off-by: Like Xu <likexu@tencent.com>
    Message-Id: <20211130074221.93635-3-likexu@tencent.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [Backport to 5.4: kvm_x86_ops is a pointer here]
    Signed-off-by: Kyle Huey <me@kylehuey.com>]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea65a7d76c00b231fc114e58d2cae1d918dd425c
Author: Mike Rapoport <rppt@kernel.org>
Date:   Mon Dec 14 19:09:55 2020 -0800

    arm: remove CONFIG_ARCH_HAS_HOLES_MEMORYMODEL
    
    commit 5e545df3292fbd3d5963c68980f1527ead2a2b3f upstream.
    
    ARM is the only architecture that defines CONFIG_ARCH_HAS_HOLES_MEMORYMODEL
    which in turn enables memmap_valid_within() function that is intended to
    verify existence  of struct page associated with a pfn when there are holes
    in the memory map.
    
    However, the ARCH_HAS_HOLES_MEMORYMODEL also enables HAVE_ARCH_PFN_VALID
    and arch-specific pfn_valid() implementation that also deals with the holes
    in the memory map.
    
    The only two users of memmap_valid_within() call this function after
    a call to pfn_valid() so the memmap_valid_within() check becomes redundant.
    
    Remove CONFIG_ARCH_HAS_HOLES_MEMORYMODEL and memmap_valid_within() and rely
    entirely on ARM's implementation of pfn_valid() that is now enabled
    unconditionally.
    
    Link: https://lkml.kernel.org/r/20201101170454.9567-9-rppt@kernel.org
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Meelis Roos <mroos@linux.ee>
    Cc: Michael Schmitz <schmitzmic@gmail.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 8dd559d53b3b ("arm: ioremap: don't abuse pfn_valid() to check if pfn is in RAM")
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5755f946a89ffe95be4023f011cad36e2cfedac0
Author: Andreas Larsson <andreas@gaisler.com>
Date:   Fri Apr 29 10:46:56 2022 +0200

    can: grcan: only use the NAPI poll budget for RX
    
    commit 2873d4d52f7c52d60b316ba6c47bd7122b5a9861 upstream.
    
    The previous split budget between TX and RX made it return not using
    the entire budget but at the same time not having calling called
    napi_complete. This sometimes led to the poll to not be called, and at
    the same time having TX and RX interrupts disabled resulting in the
    driver getting stuck.
    
    Fixes: 6cec9b07fe6a ("can: grcan: Add device driver for GRCAN and GRHCAN cores")
    Link: https://lore.kernel.org/all/20220429084656.29788-4-andreas@gaisler.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caba5c13a89205a03e3c781f2ceac2d174b823cb
Author: Andreas Larsson <andreas@gaisler.com>
Date:   Fri Apr 29 10:46:55 2022 +0200

    can: grcan: grcan_probe(): fix broken system id check for errata workaround needs
    
    commit 1e93ed26acf03fe6c97c6d573a10178596aadd43 upstream.
    
    The systemid property was checked for in the wrong place of the device
    tree and compared to the wrong value.
    
    Fixes: 6cec9b07fe6a ("can: grcan: Add device driver for GRCAN and GRHCAN cores")
    Link: https://lore.kernel.org/all/20220429084656.29788-3-andreas@gaisler.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76b64c690f03332fb77598f12387918ea42245ab
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Mon Oct 18 12:31:01 2021 -0700

    nfp: bpf: silence bitwise vs. logical OR warning
    
    commit 8a64ef042eab8a6cec04a6c79d44d1af79b628ca upstream.
    
    A new warning in clang points out two places in this driver where
    boolean expressions are being used with a bitwise OR instead of a
    logical one:
    
    drivers/net/ethernet/netronome/nfp/nfp_asm.c:199:20: error: use of bitwise '|' with boolean operands [-Werror,-Wbitwise-instead-of-logical]
            reg->src_lmextn = swreg_lmextn(lreg) | swreg_lmextn(rreg);
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                 ||
    drivers/net/ethernet/netronome/nfp/nfp_asm.c:199:20: note: cast one or both operands to int to silence this warning
    drivers/net/ethernet/netronome/nfp/nfp_asm.c:280:20: error: use of bitwise '|' with boolean operands [-Werror,-Wbitwise-instead-of-logical]
            reg->src_lmextn = swreg_lmextn(lreg) | swreg_lmextn(rreg);
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                 ||
    drivers/net/ethernet/netronome/nfp/nfp_asm.c:280:20: note: cast one or both operands to int to silence this warning
    2 errors generated.
    
    The motivation for the warning is that logical operations short circuit
    while bitwise operations do not. In this case, it does not seem like
    short circuiting is harmful so implement the suggested fix of changing
    to a logical operation to fix the warning.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1479
    Reported-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lore.kernel.org/r/20211018193101.2340261-1-nathan@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86ccefb83ede89a18dcca17f2ef5f7517ec1bf1c
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Thu Feb 13 22:47:07 2020 -0700

    drm/i915: Cast remain to unsigned long in eb_relocate_vma
    
    commit 7bf03e7504e433da274963c447648876902b86df upstream.
    
    A recent commit in clang added -Wtautological-compare to -Wall, which is
    enabled for i915 after -Wtautological-compare is disabled for the rest
    of the kernel so we see the following warning on x86_64:
    
     ../drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c:1433:22: warning:
     result of comparison of constant 576460752303423487 with expression of
     type 'unsigned int' is always false
     [-Wtautological-constant-out-of-range-compare]
             if (unlikely(remain > N_RELOC(ULONG_MAX)))
                ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
     ../include/linux/compiler.h:78:42: note: expanded from macro 'unlikely'
     # define unlikely(x)    __builtin_expect(!!(x), 0)
                                                ^
     1 warning generated.
    
    It is not wrong in the case where ULONG_MAX > UINT_MAX but it does not
    account for the case where this file is built for 32-bit x86, where
    ULONG_MAX == UINT_MAX and this check is still relevant.
    
    Cast remain to unsigned long, which keeps the generated code the same
    (verified with clang-11 on x86_64 and GCC 9.2.0 on x86 and x86_64) and
    the warning is silenced so we can catch more potential issues in the
    future.
    
    Closes: https://github.com/ClangBuiltLinux/linux/issues/778
    Suggested-by: Michel Dänzer <michel@daenzer.net>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200214054706.33870-1-natechancellor@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de542bd765411d410b633d1a716cc751d814701c
Author: Lee Jones <lee.jones@linaro.org>
Date:   Wed May 26 09:47:06 2021 +0100

    drm/amd/display/dc/gpio/gpio_service: Pass around correct dce_{version, environment} types
    
    commit 353f7f3a9dd5fd2833b6462bac89ec1654c9c3aa upstream.
    
    Fixes the following W=1 kernel build warning(s):
    
     drivers/gpu/drm/amd/amdgpu/../display/dc/gpio/gpio_service.c: In function ‘dal_gpio_service_create’:
     drivers/gpu/drm/amd/amdgpu/../display/dc/gpio/gpio_service.c:71:4: warning: implicit conversion from ‘enum dce_version’ to ‘enum dce_environment’ [-Wenum-conversion]
     drivers/gpu/drm/amd/amdgpu/../display/dc/gpio/gpio_service.c:77:4: warning: implicit conversion from ‘enum dce_version’ to ‘enum dce_environment’ [-Wenum-conversion]
    
    Cc: Harry Wentland <harry.wentland@amd.com>
    Cc: Leo Li <sunpeng.li@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: "Christian König" <christian.koenig@amd.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: amd-gfx@lists.freedesktop.org
    Cc: dri-devel@lists.freedesktop.org
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6ff94d31c53c5e5ae7d909d44cbc55ecfe725ad
Author: Lee Jones <lee.jones@linaro.org>
Date:   Fri Mar 12 10:55:26 2021 +0000

    block: drbd: drbd_nl: Make conversion to 'enum drbd_ret_code' explicit
    
    commit 1f1e87b4dc4598eac57a69868534b92d65e47e82 upstream.
    
    Fixes the following W=1 kernel build warning(s):
    
     from drivers/block/drbd/drbd_nl.c:24:
     drivers/block/drbd/drbd_nl.c: In function ‘drbd_adm_set_role’:
     drivers/block/drbd/drbd_nl.c:793:11: warning: implicit conversion from ‘enum drbd_state_rv’ to ‘enum drbd_ret_code’ [-Wenum-conversion]
     drivers/block/drbd/drbd_nl.c:795:11: warning: implicit conversion from ‘enum drbd_state_rv’ to ‘enum drbd_ret_code’ [-Wenum-conversion]
     drivers/block/drbd/drbd_nl.c: In function ‘drbd_adm_attach’:
     drivers/block/drbd/drbd_nl.c:1965:10: warning: implicit conversion from ‘enum drbd_state_rv’ to ‘enum drbd_ret_code’ [-Wenum-conversion]
     drivers/block/drbd/drbd_nl.c: In function ‘drbd_adm_connect’:
     drivers/block/drbd/drbd_nl.c:2690:10: warning: implicit conversion from ‘enum drbd_state_rv’ to ‘enum drbd_ret_code’ [-Wenum-conversion]
     drivers/block/drbd/drbd_nl.c: In function ‘drbd_adm_disconnect’:
     drivers/block/drbd/drbd_nl.c:2803:11: warning: implicit conversion from ‘enum drbd_state_rv’ to ‘enum drbd_ret_code’ [-Wenum-conversion]
    
    Cc: Philipp Reisner <philipp.reisner@linbit.com>
    Cc: Lars Ellenberg <lars.ellenberg@linbit.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: drbd-dev@lists.linbit.com
    Cc: linux-block@vger.kernel.org
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20210312105530.2219008-8-lee.jones@linaro.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f668da98ad838977129260c426b8cd390553c5c0
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Jan 5 13:18:27 2021 -0700

    MIPS: Use address-of operator on section symbols
    
    commit d422c6c0644bccbb1ebeefffa51f35cec3019517 upstream.
    
    When building xway_defconfig with clang:
    
    arch/mips/lantiq/prom.c:82:23: error: array comparison always evaluates
    to true [-Werror,-Wtautological-compare]
            else if (__dtb_start != __dtb_end)
                                 ^
    1 error generated.
    
    These are not true arrays, they are linker defined symbols, which are
    just addresses. Using the address of operator silences the warning
    and does not change the resulting assembly with either clang/ld.lld
    or gcc/ld (tested with diff + objdump -Dr). Do the same thing across
    the entire MIPS subsystem to ensure there are no more warnings around
    this type of comparison.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1232
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
