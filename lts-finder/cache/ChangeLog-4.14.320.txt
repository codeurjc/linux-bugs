commit 60a6e3043cc8b918c989707a5eba5fd6830a08a4
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jun 28 10:14:22 2023 +0200

    Linux 4.14.320
    
    Link: https://lore.kernel.org/r/20230626180733.699092073@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Chris Paterson (CIP) <chris.paterson2@renesas.com>
    Tested-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8224a830aea8de4497b91600e2aa515b6f81274f
Author: Clark Wang <xiaoning.wang@nxp.com>
Date:   Mon May 29 16:02:51 2023 +0800

    i2c: imx-lpi2c: fix type char overflow issue when calculating the clock cycle
    
    [ Upstream commit e69b9bc170c6d93ee375a5cbfd15f74c0fb59bdd ]
    
    Claim clkhi and clklo as integer type to avoid possible calculation
    errors caused by data overflow.
    
    Fixes: a55fa9d0e42e ("i2c: imx-lpi2c: add low power i2c bus driver")
    Signed-off-by: Clark Wang <xiaoning.wang@nxp.com>
    Signed-off-by: Carlos Song <carlos.song@nxp.com>
    Reviewed-by: Andi Shyti <andi.shyti@kernel.org>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fe8ac1c84e444ae8fee082683fc6243a27a5681
Author: Dheeraj Kumar Srivastava <dheerajkumar.srivastava@amd.com>
Date:   Sat Jun 17 02:52:36 2023 +0530

    x86/apic: Fix kernel panic when booting with intremap=off and x2apic_phys
    
    [ Upstream commit 85d38d5810e285d5aec7fb5283107d1da70c12a9 ]
    
    When booting with "intremap=off" and "x2apic_phys" on the kernel command
    line, the physical x2APIC driver ends up being used even when x2APIC
    mode is disabled ("intremap=off" disables x2APIC mode). This happens
    because the first compound condition check in x2apic_phys_probe() is
    false due to x2apic_mode == 0 and so the following one returns true
    after default_acpi_madt_oem_check() having already selected the physical
    x2APIC driver.
    
    This results in the following panic:
    
       kernel BUG at arch/x86/kernel/apic/io_apic.c:2409!
       invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
       CPU: 0 PID: 0 Comm: swapper/0 Not tainted 6.4.0-rc2-ver4.1rc2 #2
       Hardware name: Dell Inc. PowerEdge R6515/07PXPY, BIOS 2.3.6 07/06/2021
       RIP: 0010:setup_IO_APIC+0x9c/0xaf0
       Call Trace:
        <TASK>
        ? native_read_msr
        apic_intr_mode_init
        x86_late_time_init
        start_kernel
        x86_64_start_reservations
        x86_64_start_kernel
        secondary_startup_64_no_verify
        </TASK>
    
    which is:
    
    setup_IO_APIC:
      apic_printk(APIC_VERBOSE, "ENABLING IO-APIC IRQs\n");
      for_each_ioapic(ioapic)
            BUG_ON(mp_irqdomain_create(ioapic));
    
    Return 0 to denote that x2APIC has not been enabled when probing the
    physical x2APIC driver.
    
      [ bp: Massage commit message heavily. ]
    
    Fixes: 9ebd680bd029 ("x86, apic: Use probe routines to simplify apic selection")
    Signed-off-by: Dheeraj Kumar Srivastava <dheerajkumar.srivastava@amd.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Kishon Vijay Abraham I <kvijayab@amd.com>
    Reviewed-by: Vasant Hegde <vasant.hegde@amd.com>
    Reviewed-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20230616212236.1389-1-dheerajkumar.srivastava@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c81372cccc976040ec6fe98be804947dea8d406
Author: Min Li <lm0963hack@gmail.com>
Date:   Sat Jun 3 15:43:45 2023 +0800

    drm/radeon: fix race condition UAF in radeon_gem_set_domain_ioctl
    
    [ Upstream commit 982b173a6c6d9472730c3116051977e05d17c8c5 ]
    
    Userspace can race to free the gobj(robj converted from), robj should not
    be accessed again after drm_gem_object_put, otherwith it will result in
    use-after-free.
    
    Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Signed-off-by: Min Li <lm0963hack@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5304616a665f13a177877a1eebe6de7752485c18
Author: Min Li <lm0963hack@gmail.com>
Date:   Fri May 26 21:01:31 2023 +0800

    drm/exynos: fix race condition UAF in exynos_g2d_exec_ioctl
    
    [ Upstream commit 48bfd02569f5db49cc033f259e66d57aa6efc9a3 ]
    
    If it is async, runqueue_node is freed in g2d_runqueue_worker on another
    worker thread. So in extreme cases, if g2d_runqueue_worker runs first, and
    then executes the following if statement, there will be use-after-free.
    
    Signed-off-by: Min Li <lm0963hack@gmail.com>
    Reviewed-by: Andi Shyti <andi.shyti@kernel.org>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4555a71526ce067113ebdadba11f87b44d51fdd0
Author: Inki Dae <inki.dae@samsung.com>
Date:   Fri May 19 08:55:05 2023 +0900

    drm/exynos: vidi: fix a wrong error return
    
    [ Upstream commit 4a059559809fd1ddbf16f847c4d2237309c08edf ]
    
    Fix a wrong error return by dropping an error return.
    
    When vidi driver is remvoed, if ctx->raw_edid isn't same as fake_edid_info
    then only what we have to is to free ctx->raw_edid so that driver removing
    can work correctly - it's not an error case.
    
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Reviewed-by: Andi Shyti <andi.shyti@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16091aa1d5f16acfe98c8fb05203710c17df8646
Author: Vineeth Vijayan <vneethv@linux.ibm.com>
Date:   Thu May 4 20:53:20 2023 +0200

    s390/cio: unregister device when the only path is gone
    
    [ Upstream commit 89c0c62e947a01e7a36b54582fd9c9e346170255 ]
    
    Currently, if the device is offline and all the channel paths are
    either configured or varied offline, the associated subchannel gets
    unregistered. Don't unregister the subchannel, instead unregister
    offline device.
    
    Signed-off-by: Vineeth Vijayan <vneethv@linux.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6620d55da271b9496a9a48e10b6a096be1a9a3f
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Thu May 25 18:38:37 2023 +0300

    usb: gadget: udc: fix NULL dereference in remove()
    
    [ Upstream commit 016da9c65fec9f0e78c4909ed9a0f2d567af6775 ]
    
    The "udc" pointer was never set in the probe() function so it will
    lead to a NULL dereference in udc_pci_remove() when we do:
    
            usb_del_gadget_udc(&udc->gadget);
    
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/ZG+A/dNpFWAlCChk@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f05ae0e3fdd533865dbd1b0b2632986c0706a50
Author: Helge Deller <deller@gmx.de>
Date:   Sat May 27 11:28:36 2023 +0200

    fbdev: imsttfb: Release framebuffer and dealloc cmap on error path
    
    [ Upstream commit 5cf9a090a39c97f4506b7b53739d469b1c05a7e9 ]
    
    Add missing cleanups in error path.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 687ce0ac7a7f12fe0a1f4ae96457e7e17b5d8287
Author: Osama Muhammad <osmtendev@gmail.com>
Date:   Thu May 25 22:27:46 2023 +0500

    nfcsim.c: Fix error checking for debugfs_create_dir
    
    [ Upstream commit 9b9e46aa07273ceb96866b2e812b46f1ee0b8d2f ]
    
    This patch fixes the error checking in nfcsim.c.
    The DebugFS kernel API is developed in
    a way that the caller can safely ignore the errors that
    occur during the creation of DebugFS nodes.
    
    Signed-off-by: Osama Muhammad <osmtendev@gmail.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ec8a2b2d9391f6ef2a2d77f1d2b733b06dca31c
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon May 15 21:46:00 2023 +0100

    arm64: Add missing Set/Way CMO encodings
    
    [ Upstream commit 8d0f019e4c4f2ee2de81efd9bf1c27e9fb3c0460 ]
    
    Add the missing Set/Way CMOs that apply to tagged memory.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Oliver Upton <oliver.upton@linux.dev>
    Link: https://lore.kernel.org/r/20230515204601.1270428-2-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1f947f2d4faf62d60abb48be14f5fba4d31418c
Author: Denis Arefev <arefev@swemel.ru>
Date:   Thu Apr 27 14:47:45 2023 +0300

    HID: wacom: Add error check to wacom_parse_and_register()
    
    [ Upstream commit 16a9c24f24fbe4564284eb575b18cc20586b9270 ]
    
       Added a variable check and
       transition in case of an error
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Signed-off-by: Denis Arefev <arefev@swemel.ru>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b92aec2d2944f2fa9786f8d7086afea25ca6048
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Mon May 8 18:22:19 2023 +0200

    scsi: target: iscsi: Prevent login threads from racing between each other
    
    [ Upstream commit 2a737d3b8c792400118d6cf94958f559de9c5e59 ]
    
    The tpg->np_login_sem is a semaphore that is used to serialize the login
    process when multiple login threads run concurrently against the same
    target portal group.
    
    The iscsi_target_locate_portal() function finds the tpg, calls
    iscsit_access_np() against the np_login_sem semaphore and saves the tpg
    pointer in conn->tpg;
    
    If iscsi_target_locate_portal() fails, the caller will check for the
    conn->tpg pointer and, if it's not NULL, then it will assume that
    iscsi_target_locate_portal() called iscsit_access_np() on the semaphore.
    
    Make sure that conn->tpg gets initialized only if iscsit_access_np() was
    successful, otherwise iscsit_deaccess_np() may end up being called against
    a semaphore we never took, allowing more than one thread to access the same
    tpg.
    
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Link: https://lore.kernel.org/r/20230508162219.1731964-4-mlombard@redhat.com
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d326df94286ff1bf5b56d51b40099dce06e68896
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Jun 16 15:20:16 2023 +0200

    netfilter: nf_tables: disallow element updates of bound anonymous sets
    
    [ Upstream commit c88c535b592d3baeee74009f3eceeeaf0fdd5e1b ]
    
    Anonymous sets come with NFT_SET_CONSTANT from userspace. Although API
    allows to create anonymous sets without NFT_SET_CONSTANT, it makes no
    sense to allow to add and to delete elements for bound anonymous sets.
    
    Fixes: 96518518cc41 ("netfilter: add nftables")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7249a00163f8c50f4b43a566a15b81ca0de1db6c
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Fri Jun 16 17:45:49 2023 +0100

    be2net: Extend xmit workaround to BE3 chip
    
    [ Upstream commit 7580e0a78eb29e7bb1a772eba4088250bbb70d41 ]
    
    We have seen a bug where the NIC incorrectly changes the length in the
    IP header of a padded packet to include the padding bytes. The driver
    already has a workaround for this so do the workaround for this NIC too.
    This resolves the issue.
    
    The NIC in question identifies itself as follows:
    
    [    8.828494] be2net 0000:02:00.0: FW version is 10.7.110.31
    [    8.834759] be2net 0000:02:00.0: Emulex OneConnect(be3): PF FLEX10 port 1
    
    02:00.0 Ethernet controller: Emulex Corporation OneConnect 10Gb NIC (be3) (rev 01)
    
    Fixes: ca34fe38f06d ("be2net: fix wrong usage of adapter->generation")
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Link: https://lore.kernel.org/r/20230616164549.2863037-1-ross.lagerwall@citrix.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6eb17fc0db5ef2a2706a6abb2bc3da0dccaebb1a
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sat Jun 17 23:36:22 2023 +0300

    mmc: usdhi60rol0: fix deferred probing
    
    [ Upstream commit 413db499730248431c1005b392e8ed82c4fa19bf ]
    
    The driver overrides the error codes returned by platform_get_irq_byname()
    to -ENODEV, so if it returns -EPROBE_DEFER, the driver will fail the probe
    permanently instead of the deferred probing.  Switch to propagating error
    codes upstream.
    
    Fixes: 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/20230617203622.6812-13-s.shtylyov@omp.ru
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f98f9c182558ba3346aad09313b3e2708e8b85d6
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sat Jun 17 23:36:16 2023 +0300

    mmc: omap_hsmmc: fix deferred probing
    
    [ Upstream commit fb51b74a57859b707c3e8055ed0c25a7ca4f6a29 ]
    
    The driver overrides the error codes returned by platform_get_irq() to
    -ENXIO, so if it returns -EPROBE_DEFER, the driver will fail the probe
    permanently instead of the deferred probing. Switch to propagating the
    error codes upstream.
    
    Fixes: 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/20230617203622.6812-7-s.shtylyov@omp.ru
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28781c64f1a190501b0381698ad630a63a5bd550
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sat Jun 17 23:36:15 2023 +0300

    mmc: omap: fix deferred probing
    
    [ Upstream commit aedf4ba1ad00aaa94c1b66c73ecaae95e2564b95 ]
    
    The driver overrides the error codes returned by platform_get_irq() to
    -ENXIO, so if it returns -EPROBE_DEFER, the driver will fail the probe
    permanently instead of the deferred probing. Switch to propagating the
    error codes upstream.
    
    Fixes: 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/20230617203622.6812-6-s.shtylyov@omp.ru
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87ff3b774ea9c07be1dc4c2a1e23a9eecabd8fed
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sat Jun 17 23:36:13 2023 +0300

    mmc: mtk-sd: fix deferred probing
    
    [ Upstream commit 0c4dc0f054891a2cbde0426b0c0fdf232d89f47f ]
    
    The driver overrides the error codes returned by platform_get_irq() to
    -EINVAL, so if it returns -EPROBE_DEFER, the driver will fail the probe
    permanently instead of the deferred probing. Switch to propagating the
    error codes upstream.
    
    Fixes: 208489032bdd ("mmc: mediatek: Add Mediatek MMC driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/20230617203622.6812-4-s.shtylyov@omp.ru
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a84c636c8ef16465d4ac634b3e613d758b7a975
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Jun 14 23:06:56 2023 +0200

    net: qca_spi: Avoid high load if QCA7000 is not available
    
    [ Upstream commit 92717c2356cb62c89e8a3dc37cbbab2502562524 ]
    
    In case the QCA7000 is not available via SPI (e.g. in reset),
    the driver will cause a high load. The reason for this is
    that the synchronization is never finished and schedule()
    is never called. Since the synchronization is not timing
    critical, it's safe to drop this from the scheduling condition.
    
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Fixes: 291ab06ecf67 ("net: qualcomm: new Ethernet over SPI driver for QCA7000")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 801f6ea46c236d7880358aeb5e8938077f4abc11
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Wed Jun 14 12:02:02 2023 +0200

    xfrm: Linearize the skb after offloading if needed.
    
    [ Upstream commit f015b900bc3285322029b4a7d132d6aeb0e51857 ]
    
    With offloading enabled, esp_xmit() gets invoked very late, from within
    validate_xmit_xfrm() which is after validate_xmit_skb() validates and
    linearizes the skb if the underlying device does not support fragments.
    
    esp_output_tail() may add a fragment to the skb while adding the auth
    tag/ IV. Devices without the proper support will then send skb->data
    points to with the correct length so the packet will have garbage at the
    end. A pcap sniffer will claim that the proper data has been sent since
    it parses the skb properly.
    
    It is not affected with INET_ESP_OFFLOAD disabled.
    
    Linearize the skb after offloading if the sending hardware requires it.
    It was tested on v4, v6 has been adopted.
    
    Fixes: 7785bba299a8d ("esp: Add a software GRO codepath")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ae24bbbb33f13ff84369ce4634b915fbd059d23
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Mon Jun 12 11:14:56 2023 +0900

    nilfs2: prevent general protection fault in nilfs_clear_dirty_page()
    
    commit 782e53d0c14420858dbf0f8f797973c150d3b6d7 upstream.
    
    In a syzbot stress test that deliberately causes file system errors on
    nilfs2 with a corrupted disk image, it has been reported that
    nilfs_clear_dirty_page() called from nilfs_clear_dirty_pages() can cause a
    general protection fault.
    
    In nilfs_clear_dirty_pages(), when looking up dirty pages from the page
    cache and calling nilfs_clear_dirty_page() for each dirty page/folio
    retrieved, the back reference from the argument page to "mapping" may have
    been changed to NULL (and possibly others).  It is necessary to check this
    after locking the page/folio.
    
    So, fix this issue by not calling nilfs_clear_dirty_page() on a page/folio
    after locking it in nilfs_clear_dirty_pages() if the back reference
    "mapping" from the page/folio is different from the "mapping" that held
    the page/folio just before.
    
    Link: https://lkml.kernel.org/r/20230612021456.3682-1-konishi.ryusuke@gmail.com
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Reported-by: syzbot+53369d11851d8f26735c@syzkaller.appspotmail.com
    Closes: https://lkml.kernel.org/r/000000000000da4f6b05eb9bf593@google.com
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 467a830573419afe42b341a90f03cf8b93f61daf
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Sat Jun 10 17:26:43 2023 +0800

    cgroup: Do not corrupt task iteration when rebinding subsystem
    
    commit 6f363f5aa845561f7ea496d8b1175e3204470486 upstream.
    
    We found a refcount UAF bug as follows:
    
    refcount_t: addition on 0; use-after-free.
    WARNING: CPU: 1 PID: 342 at lib/refcount.c:25 refcount_warn_saturate+0xa0/0x148
    Workqueue: events cpuset_hotplug_workfn
    Call trace:
     refcount_warn_saturate+0xa0/0x148
     __refcount_add.constprop.0+0x5c/0x80
     css_task_iter_advance_css_set+0xd8/0x210
     css_task_iter_advance+0xa8/0x120
     css_task_iter_next+0x94/0x158
     update_tasks_root_domain+0x58/0x98
     rebuild_root_domains+0xa0/0x1b0
     rebuild_sched_domains_locked+0x144/0x188
     cpuset_hotplug_workfn+0x138/0x5a0
     process_one_work+0x1e8/0x448
     worker_thread+0x228/0x3e0
     kthread+0xe0/0xf0
     ret_from_fork+0x10/0x20
    
    then a kernel panic will be triggered as below:
    
    Unable to handle kernel paging request at virtual address 00000000c0000010
    Call trace:
     cgroup_apply_control_disable+0xa4/0x16c
     rebind_subsystems+0x224/0x590
     cgroup_destroy_root+0x64/0x2e0
     css_free_rwork_fn+0x198/0x2a0
     process_one_work+0x1d4/0x4bc
     worker_thread+0x158/0x410
     kthread+0x108/0x13c
     ret_from_fork+0x10/0x18
    
    The race that cause this bug can be shown as below:
    
    (hotplug cpu)                | (umount cpuset)
    mutex_lock(&cpuset_mutex)    | mutex_lock(&cgroup_mutex)
    cpuset_hotplug_workfn        |
     rebuild_root_domains        |  rebind_subsystems
      update_tasks_root_domain   |   spin_lock_irq(&css_set_lock)
       css_task_iter_start       |    list_move_tail(&cset->e_cset_node[ss->id]
       while(css_task_iter_next) |                  &dcgrp->e_csets[ss->id]);
       css_task_iter_end         |   spin_unlock_irq(&css_set_lock)
    mutex_unlock(&cpuset_mutex)  | mutex_unlock(&cgroup_mutex)
    
    Inside css_task_iter_start/next/end, css_set_lock is hold and then
    released, so when iterating task(left side), the css_set may be moved to
    another list(right side), then it->cset_head points to the old list head
    and it->cset_pos->next points to the head node of new list, which can't
    be used as struct css_set.
    
    To fix this issue, switch from all css_sets to only scgrp's css_sets to
    patch in-flight iterators to preserve correct iteration, and then
    update it->cset_head as well.
    
    Reported-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Link: https://www.spinics.net/lists/cgroups/msg37935.html
    Suggested-by: Michal KoutnÃ½ <mkoutny@suse.com>
    Link: https://lore.kernel.org/all/20230526114139.70274-1-xiujianfeng@huaweicloud.com/
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Fixes: 2d8f243a5e6e ("cgroup: implement cgroup->e_csets[]")
    Cc: stable@vger.kernel.org # v3.16+
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1157daef4b28a3d37c61c324c9de9c8f31dbe41
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Thu May 18 08:13:52 2023 -0700

    Drivers: hv: vmbus: Fix vmbus_wait_for_unload() to scan present CPUs
    
    commit 320805ab61e5f1e2a5729ae266e16bec2904050c upstream.
    
    vmbus_wait_for_unload() may be called in the panic path after other
    CPUs are stopped. vmbus_wait_for_unload() currently loops through
    online CPUs looking for the UNLOAD response message. But the values of
    CONFIG_KEXEC_CORE and crash_kexec_post_notifiers affect the path used
    to stop the other CPUs, and in one of the paths the stopped CPUs
    are removed from cpu_online_mask. This removal happens in both
    x86/x64 and arm64 architectures. In such a case, vmbus_wait_for_unload()
    only checks the panic'ing CPU, and misses the UNLOAD response message
    except when the panic'ing CPU is CPU 0. vmbus_wait_for_unload()
    eventually times out, but only after waiting 100 seconds.
    
    Fix this by looping through *present* CPUs in vmbus_wait_for_unload().
    The cpu_present_mask is not modified by stopping the other CPUs in the
    panic path, nor should it be.
    
    Also, in a CoCo VM the synic_message_page is not allocated in
    hv_synic_alloc(), but is set and cleared in hv_synic_enable_regs()
    and hv_synic_disable_regs() such that it is set only when the CPU is
    online.  If not all present CPUs are online when vmbus_wait_for_unload()
    is called, the synic_message_page might be NULL. Add a check for this.
    
    Fixes: cd95aad55793 ("Drivers: hv: vmbus: handle various crash scenarios")
    Cc: stable@vger.kernel.org
    Reported-by: John Starks <jostarks@microsoft.com>
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Link: https://lore.kernel.org/r/1684422832-38476-1-git-send-email-mikelley@microsoft.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3ebbda17db36768117c923c42b80affb07b2dfb
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Fri Jun 9 12:57:32 2023 +0900

    nilfs2: fix buffer corruption due to concurrent device reads
    
    commit 679bd7ebdd315bf457a4740b306ae99f1d0a403d upstream.
    
    As a result of analysis of a syzbot report, it turned out that in three
    cases where nilfs2 allocates block device buffers directly via sb_getblk,
    concurrent reads to the device can corrupt the allocated buffers.
    
    Nilfs2 uses sb_getblk for segment summary blocks, that make up a log
    header, and the super root block, that is the trailer, and when moving and
    writing the second super block after fs resize.
    
    In any of these, since the uptodate flag is not set when storing metadata
    to be written in the allocated buffers, the stored metadata will be
    overwritten if a device read of the same block occurs concurrently before
    the write.  This causes metadata corruption and misbehavior in the log
    write itself, causing warnings in nilfs_btree_assign() as reported.
    
    Fix these issues by setting an uptodate flag on the buffer head on the
    first or before modifying each buffer obtained with sb_getblk, and
    clearing the flag on failure.
    
    When setting the uptodate flag, the lock_buffer/unlock_buffer pair is used
    to perform necessary exclusive control, and the buffer is filled to ensure
    that uninitialized bytes are not mixed into the data read from others.  As
    for buffers for segment summary blocks, they are filled incrementally, so
    if the uptodate flag was unset on their allocation, set the flag and zero
    fill the buffer once at that point.
    
    Also, regarding the superblock move routine, the starting point of the
    memset call to zerofill the block is incorrectly specified, which can
    cause a buffer overflow on file systems with block sizes greater than
    4KiB.  In addition, if the superblock is moved within a large block, it is
    necessary to assume the possibility that the data in the superblock will
    be destroyed by zero-filling before copying.  So fix these potential
    issues as well.
    
    Link: https://lkml.kernel.org/r/20230609035732.20426-1-konishi.ryusuke@gmail.com
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Reported-by: syzbot+31837fe952932efc8fb9@syzkaller.appspotmail.com
    Closes: https://lkml.kernel.org/r/00000000000030000a05e981f475@google.com
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1b32d25251c55477675ef14384431be51da0c67
Author: Ryusuke Konishi <konishi.ryusuke@gmail.com>
Date:   Fri May 26 11:13:32 2023 +0900

    nilfs2: reject devices with insufficient block count
    
    commit 92c5d1b860e9581d64baca76779576c0ab0d943d upstream.
    
    The current sanity check for nilfs2 geometry information lacks checks for
    the number of segments stored in superblocks, so even for device images
    that have been destructively truncated or have an unusually high number of
    segments, the mount operation may succeed.
    
    This causes out-of-bounds block I/O on file system block reads or log
    writes to the segments, the latter in particular causing
    "a_ops->writepages" to repeatedly fail, resulting in sync_inodes_sb() to
    hang.
    
    Fix this issue by checking the number of segments stored in the superblock
    and avoiding mounting devices that can cause out-of-bounds accesses.  To
    eliminate the possibility of overflow when calculating the number of
    blocks required for the device from the number of segments, this also adds
    a helper function to calculate the upper bound on the number of segments
    and inserts a check using it.
    
    Link: https://lkml.kernel.org/r/20230526021332.3431-1-konishi.ryusuke@gmail.com
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Reported-by: syzbot+7d50f1e54a12ba3aeae2@syzkaller.appspotmail.com
      Link: https://syzkaller.appspot.com/bug?extid=7d50f1e54a12ba3aeae2
    Tested-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81f0ee3479721d284e6b52e4bf3b47c3c771d2df
Author: Bernhard Seibold <mail@bernhard-seibold.de>
Date:   Fri Jun 2 15:30:29 2023 +0200

    serial: lantiq: add missing interrupt ack
    
    commit 306320034e8fbe7ee1cc4f5269c55658b4612048 upstream.
    
    Currently, the error interrupt is never acknowledged, so once active it
    will stay active indefinitely, causing the handler to be called in an
    infinite loop.
    
    Fixes: 2f0fc4159a6a ("SERIAL: Lantiq: Add driver for MIPS Lantiq SOCs.")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Bernhard Seibold <mail@bernhard-seibold.de>
    Reviewed-by: Ilpo JÃ¤rvinen <ilpo.jarvinen@linux.intel.com>
    Message-ID: <20230602133029.546-1-mail@bernhard-seibold.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
