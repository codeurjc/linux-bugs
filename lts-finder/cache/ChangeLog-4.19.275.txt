commit 5504146b2053f842426834d275002974109f39a6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Mar 3 11:40:08 2023 +0100

    Linux 4.19.275
    
    Link: https://lore.kernel.org/r/20230301180650.395562988@linuxfoundation.org
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f35b5d3bd6914c68f743741443dfd3a64b0e455
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue Jan 31 15:49:04 2023 -0500

    USB: core: Don't hold device lock while reading the "descriptors" sysfs file
    
    commit 45bf39f8df7f05efb83b302c65ae3b9bc92b7065 upstream.
    
    Ever since commit 83e83ecb79a8 ("usb: core: get config and string
    descriptors for unauthorized devices") was merged in 2013, there has
    been no mechanism for reallocating the rawdescriptors buffers in
    struct usb_device after the initial enumeration.  Before that commit,
    the buffers would be deallocated when a device was deauthorized and
    reallocated when it was authorized and enumerated.
    
    This means that the locking in the read_descriptors() routine is not
    needed, since the buffers it reads will never be reallocated while the
    routine is running.  This locking can interfere with user programs
    trying to read a hub's descriptors via sysfs while new child devices
    of the hub are being initialized, since the hub is locked during this
    procedure.
    
    Since the locking in read_descriptors() hasn't been needed for over
    nine years, we can remove it.
    
    Reported-and-tested-by: Troels Liebe Bentsen <troels@connectedcars.dk>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/Y9l+wDTRbuZABzsE@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c04801c20b8ad126ba92c688bd10be87214104d9
Author: Florian Zumbiehl <florz@florz.de>
Date:   Mon Feb 6 02:04:28 2023 +0100

    USB: serial: option: add support for VW/Skoda "Carstick LTE"
    
    commit 617c331d91077f896111044628c096802551dc66 upstream.
    
    Add support for VW/Skoda "Carstick LTE"
    
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=1c9e ProdID=7605 Rev=02.00
    S:  Manufacturer=USB Modem
    S:  Product=USB Modem
    C:  #Ifs= 4 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    The stick has AT command interfaces on interfaces 1, 2, and 3, and does PPP
    on interface 3.
    
    Signed-off-by: Florian Zumbiehl <florz@florz.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 241bca3b7ca22a914272a2fbb5ac276015c9c860
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Jan 11 09:12:39 2022 +0800

    dmaengine: sh: rcar-dmac: Check for error num after dma_set_max_seg_size
    
    commit da2ad87fba0891576aadda9161b8505fde81a84d upstream.
    
    As the possible failure of the dma_set_max_seg_size(), it should be
    better to check the return value of the dma_set_max_seg_size().
    
    Fixes: 97d49c59e219 ("dmaengine: rcar-dmac: set scatter/gather max segment size")
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20220111011239.452837-1-jiasheng@iscas.ac.cn
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Nobuhiro Iwamatsu (CIP) <nobuhiro1.iwamatsu@toshiba.co.jp>

commit e534b1ce31679ad447aa07690b5c327c767a6020
Author: Thomas Weißschuh <linux@weissschuh.net>
Date:   Mon Feb 20 06:46:12 2023 +0000

    vc_screen: don't clobber return value in vcs_read
    
    commit ae3419fbac845b4d3f3a9fae4cc80c68d82cdf6e upstream.
    
    Commit 226fae124b2d ("vc_screen: move load of struct vc_data pointer in
    vcs_read() to avoid UAF") moved the call to vcs_vc() into the loop.
    
    While doing this it also moved the unconditional assignment of
    
            ret = -ENXIO;
    
    This unconditional assignment was valid outside the loop but within it
    it clobbers the actual value of ret.
    
    To avoid this only assign "ret = -ENXIO" when actually needed.
    
    [ Also, the 'goto unlock_out" needs to be just a "break", so that it
      does the right thing when it exits on later iterations when partial
      success has happened - Linus ]
    
    Reported-by: Storm Dragon <stormdragon2976@gmail.com>
    Link: https://lore.kernel.org/lkml/Y%2FKS6vdql2pIsCiI@hotmail.com/
    Fixes: 226fae124b2d ("vc_screen: move load of struct vc_data pointer in vcs_read() to avoid UAF")
    Signed-off-by: Thomas Weißschuh <linux@weissschuh.net>
    Link: https://lore.kernel.org/lkml/64981d94-d00c-4b31-9063-43ad0a384bde@t-8ch.de/
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9089260f9270abc99ef33ba2dc775ebcd9e534b2
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Thu Feb 9 16:22:02 2023 -0800

    net: Remove WARN_ON_ONCE(sk->sk_forward_alloc) from sk_stream_kill_queues().
    
    commit 62ec33b44e0f7168ff2886520fec6fb62d03b5a3 upstream.
    
    Christoph Paasch reported that commit b5fc29233d28 ("inet6: Remove
    inet6_destroy_sock() in sk->sk_prot->destroy().") started triggering
    WARN_ON_ONCE(sk->sk_forward_alloc) in sk_stream_kill_queues().  [0 - 2]
    Also, we can reproduce it by a program in [3].
    
    In the commit, we delay freeing ipv6_pinfo.pktoptions from sk->destroy()
    to sk->sk_destruct(), so sk->sk_forward_alloc is no longer zero in
    inet_csk_destroy_sock().
    
    The same check has been in inet_sock_destruct() from at least v2.6,
    we can just remove the WARN_ON_ONCE().  However, among the users of
    sk_stream_kill_queues(), only CAIF is not calling inet_sock_destruct().
    Thus, we add the same WARN_ON_ONCE() to caif_sock_destructor().
    
    [0]: https://lore.kernel.org/netdev/39725AB4-88F1-41B3-B07F-949C5CAEFF4F@icloud.com/
    [1]: https://github.com/multipath-tcp/mptcp_net-next/issues/341
    [2]:
    WARNING: CPU: 0 PID: 3232 at net/core/stream.c:212 sk_stream_kill_queues+0x2f9/0x3e0
    Modules linked in:
    CPU: 0 PID: 3232 Comm: syz-executor.0 Not tainted 6.2.0-rc5ab24eb4698afbe147b424149c529e2a43ec24eb5 #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
    RIP: 0010:sk_stream_kill_queues+0x2f9/0x3e0
    Code: 03 0f b6 04 02 84 c0 74 08 3c 03 0f 8e ec 00 00 00 8b ab 08 01 00 00 e9 60 ff ff ff e8 d0 5f b6 fe 0f 0b eb 97 e8 c7 5f b6 fe <0f> 0b eb a0 e8 be 5f b6 fe 0f 0b e9 6a fe ff ff e8 02 07 e3 fe e9
    RSP: 0018:ffff88810570fc68 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: ffff888101f38f40 RSI: ffffffff8285e529 RDI: 0000000000000005
    RBP: 0000000000000ce0 R08: 0000000000000005 R09: 0000000000000000
    R10: 0000000000000ce0 R11: 0000000000000001 R12: ffff8881009e9488
    R13: ffffffff84af2cc0 R14: 0000000000000000 R15: ffff8881009e9458
    FS:  00007f7fdfbd5800(0000) GS:ffff88811b600000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b32923000 CR3: 00000001062fc006 CR4: 0000000000170ef0
    Call Trace:
     <TASK>
     inet_csk_destroy_sock+0x1a1/0x320
     __tcp_close+0xab6/0xe90
     tcp_close+0x30/0xc0
     inet_release+0xe9/0x1f0
     inet6_release+0x4c/0x70
     __sock_release+0xd2/0x280
     sock_close+0x15/0x20
     __fput+0x252/0xa20
     task_work_run+0x169/0x250
     exit_to_user_mode_prepare+0x113/0x120
     syscall_exit_to_user_mode+0x1d/0x40
     do_syscall_64+0x48/0x90
     entry_SYSCALL_64_after_hwframe+0x72/0xdc
    RIP: 0033:0x7f7fdf7ae28d
    Code: c1 20 00 00 75 10 b8 03 00 00 00 0f 05 48 3d 01 f0 ff ff 73 31 c3 48 83 ec 08 e8 ee fb ff ff 48 89 04 24 b8 03 00 00 00 0f 05 <48> 8b 3c 24 48 89 c2 e8 37 fc ff ff 48 89 d0 48 83 c4 08 48 3d 01
    RSP: 002b:00000000007dfbb0 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
    RAX: 0000000000000000 RBX: 0000000000000004 RCX: 00007f7fdf7ae28d
    RDX: 0000000000000000 RSI: ffffffffffffffff RDI: 0000000000000003
    RBP: 0000000000000000 R08: 000000007f338e0f R09: 0000000000000e0f
    R10: 000000007f338e13 R11: 0000000000000293 R12: 00007f7fdefff000
    R13: 00007f7fdefffcd8 R14: 00007f7fdefffce0 R15: 00007f7fdefffcd8
     </TASK>
    
    [3]: https://lore.kernel.org/netdev/20230208004245.83497-1-kuniyu@amazon.com/
    
    Fixes: b5fc29233d28 ("inet6: Remove inet6_destroy_sock() in sk->sk_prot->destroy().")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reported-by: Christoph Paasch <christophpaasch@icloud.com>
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11087f58e4f9aead523a7ca814e4cf46debd96f9
Author: Dean Luick <dean.luick@cornelisnetworks.com>
Date:   Mon Jan 9 14:04:08 2023 -0500

    IB/hfi1: Assign npages earlier
    
    [ Upstream commit f9c47b2caa7ffc903ec950b454b59c209afe3182 ]
    
    Improve code clarity and enable earlier use of
    tidbuf->npages by moving its assignment to
    structure creation time.
    
    Signed-off-by: Dean Luick <dean.luick@cornelisnetworks.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Link: https://lore.kernel.org/r/167329104884.1472990.4639750192433251493.stgit@awfm-02.cornelisnetworks.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09450e240a7a3de7cd0fbac13ce512dc2618d863
Author: David Sterba <dsterba@suse.com>
Date:   Tue Jan 24 20:32:10 2023 +0100

    btrfs: send: limit number of clones and allocated memory size
    
    [ Upstream commit 33e17b3f5ab74af12aca58c515bc8424ff69a343 ]
    
    The arg->clone_sources_count is u64 and can trigger a warning when a
    huge value is passed from user space and a huge array is allocated.
    Limit the allocated memory to 8MiB (can be increased if needed), which
    in turn limits the number of clone sources to 8M / sizeof(struct
    clone_root) = 8M / 40 = 209715.  Real world number of clones is from
    tens to hundreds, so this is future proof.
    
    Reported-by: syzbot+4376a9a073770c173269@syzkaller.appspotmail.com
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f8401d7dba21e549306fe4a7a9ff8bf3bd8d56a
Author: Vishal Verma <vishal.l.verma@intel.com>
Date:   Wed Jan 25 11:34:18 2023 -0700

    ACPI: NFIT: fix a potential deadlock during NFIT teardown
    
    [ Upstream commit fb6df4366f86dd252bfa3049edffa52d17e7b895 ]
    
    Lockdep reports that acpi_nfit_shutdown() may deadlock against an
    opportune acpi_nfit_scrub(). acpi_nfit_scrub () is run from inside a
    'work' and therefore has already acquired workqueue-internal locks. It
    also acquiires acpi_desc->init_mutex. acpi_nfit_shutdown() first
    acquires init_mutex, and was subsequently attempting to cancel any
    pending workqueue items. This reversed locking order causes a potential
    deadlock:
    
        ======================================================
        WARNING: possible circular locking dependency detected
        6.2.0-rc3 #116 Tainted: G           O     N
        ------------------------------------------------------
        libndctl/1958 is trying to acquire lock:
        ffff888129b461c0 ((work_completion)(&(&acpi_desc->dwork)->work)){+.+.}-{0:0}, at: __flush_work+0x43/0x450
    
        but task is already holding lock:
        ffff888129b460e8 (&acpi_desc->init_mutex){+.+.}-{3:3}, at: acpi_nfit_shutdown+0x87/0xd0 [nfit]
    
        which lock already depends on the new lock.
    
        ...
    
        Possible unsafe locking scenario:
    
              CPU0                    CPU1
              ----                    ----
         lock(&acpi_desc->init_mutex);
                                      lock((work_completion)(&(&acpi_desc->dwork)->work));
                                      lock(&acpi_desc->init_mutex);
         lock((work_completion)(&(&acpi_desc->dwork)->work));
    
        *** DEADLOCK ***
    
    Since the workqueue manipulation is protected by its own internal locking,
    the cancellation of pending work doesn't need to be done under
    acpi_desc->init_mutex. Move cancel_delayed_work_sync() outside the
    init_mutex to fix the deadlock. Any work that starts after
    acpi_nfit_shutdown() drops the lock will see ARS_CANCEL, and the
    cancel_delayed_work_sync() will safely flush it out.
    
    Reported-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
    Link: https://lore.kernel.org/r/20230112-acpi_nfit_lockdep-v1-1-660be4dd10be@intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5df89a6a1c1d6bcb4b0f5a641cb0b9f1e6ce48fc
Author: Johan Jonker <jbx6244@gmail.com>
Date:   Wed Dec 28 21:17:32 2022 +0100

    ARM: dts: rockchip: add power-domains property to dp node on rk3288
    
    [ Upstream commit 80422339a75088322b4d3884bd12fa0fe5d11050 ]
    
    The clocks in the Rockchip rk3288 DisplayPort node are
    included in the power-domain@RK3288_PD_VIO logic, but the
    power-domains property in the dp node is missing, so fix it.
    
    Signed-off-by: Johan Jonker <jbx6244@gmail.com>
    Link: https://lore.kernel.org/r/dab85bfb-9f55-86a1-5cd5-7388c43e0ec5@gmail.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
