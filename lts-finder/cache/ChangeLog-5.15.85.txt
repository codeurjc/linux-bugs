commit 5827ddaf4534c52d31dd464679a186b41810ef76
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 21 17:36:38 2022 +0100

    Linux 5.15.85
    
    Link: https://lore.kernel.org/r/20221219182940.739981110@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Ron Economos <re@w6rz.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e22dbadac8d417c39b27322f06c13181d412b803
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Wed Nov 23 15:18:28 2022 +0100

    net: loopback: use NET_NAME_PREDICTABLE for name_assign_type
    
    [ Upstream commit 31d929de5a112ee1b977a89c57de74710894bbbf ]
    
    When the name_assign_type attribute was introduced (commit
    685343fc3ba6, "net: add name_assign_type netdev attribute"), the
    loopback device was explicitly mentioned as one which would make use
    of NET_NAME_PREDICTABLE:
    
        The name_assign_type attribute gives hints where the interface name of a
        given net-device comes from. These values are currently defined:
    ...
          NET_NAME_PREDICTABLE:
            The ifname has been assigned by the kernel in a predictable way
            that is guaranteed to avoid reuse and always be the same for a
            given device. Examples include statically created devices like
            the loopback device [...]
    
    Switch to that so that reading /sys/class/net/lo/name_assign_type
    produces something sensible instead of returning -EINVAL.
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 314e7a7836c71d2eed27effea3e407c65fff2215
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Thu Dec 1 11:10:48 2022 +0800

    selftests: net: Use "grep -E" instead of "egrep"
    
    [ Upstream commit 6a30d3e3491dc562384e9f15b201a8a25b57439f ]
    
    The latest version of grep claims the egrep is now obsolete so the build
    now contains warnings that look like:
            egrep: warning: egrep is obsolescent; using grep -E
    fix this using "grep -E" instead.
    
      sed -i "s/egrep/grep -E/g" `grep egrep -rwl tools/testing/selftests/net`
    
    Here are the steps to install the latest grep:
    
      wget http://ftp.gnu.org/gnu/grep/grep-3.8.tar.gz
      tar xf grep-3.8.tar.gz
      cd grep-3.8 && ./configure && make
      sudo make install
      export PATH=/usr/local/bin:$PATH
    
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Link: https://lore.kernel.org/r/1669864248-829-1-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19a78143961a197de8502f4f29c453b913dc3c29
Author: Sungwoo Kim <iam@sung-woo.kim>
Date:   Fri Nov 18 15:01:47 2022 -0500

    Bluetooth: L2CAP: Fix u8 overflow
    
    [ Upstream commit bcd70260ef56e0aee8a4fc6cd214a419900b0765 ]
    
    By keep sending L2CAP_CONF_REQ packets, chan->num_conf_rsp increases
    multiple times and eventually it will wrap around the maximum number
    (i.e., 255).
    This patch prevents this by adding a boundary check with
    L2CAP_MAX_CONF_RSP
    
    Btmon log:
    Bluetooth monitor ver 5.64
    = Note: Linux version 6.1.0-rc2 (x86_64)                               0.264594
    = Note: Bluetooth subsystem version 2.22                               0.264636
    @ MGMT Open: btmon (privileged) version 1.22                  {0x0001} 0.272191
    = New Index: 00:00:00:00:00:00 (Primary,Virtual,hci0)          [hci0] 13.877604
    @ RAW Open: 9496 (privileged) version 2.22                   {0x0002} 13.890741
    = Open Index: 00:00:00:00:00:00                                [hci0] 13.900426
    (...)
    > ACL Data RX: Handle 200 flags 0x00 dlen 1033             #32 [hci0] 14.273106
            invalid packet size (12 != 1033)
            08 00 01 00 02 01 04 00 01 10 ff ff              ............
    > ACL Data RX: Handle 200 flags 0x00 dlen 1547             #33 [hci0] 14.273561
            invalid packet size (14 != 1547)
            0a 00 01 00 04 01 06 00 40 00 00 00 00 00        ........@.....
    > ACL Data RX: Handle 200 flags 0x00 dlen 2061             #34 [hci0] 14.274390
            invalid packet size (16 != 2061)
            0c 00 01 00 04 01 08 00 40 00 00 00 00 00 00 04  ........@.......
    > ACL Data RX: Handle 200 flags 0x00 dlen 2061             #35 [hci0] 14.274932
            invalid packet size (16 != 2061)
            0c 00 01 00 04 01 08 00 40 00 00 00 07 00 03 00  ........@.......
    = bluetoothd: Bluetooth daemon 5.43                                   14.401828
    > ACL Data RX: Handle 200 flags 0x00 dlen 1033             #36 [hci0] 14.275753
            invalid packet size (12 != 1033)
            08 00 01 00 04 01 04 00 40 00 00 00              ........@...
    
    Signed-off-by: Sungwoo Kim <iam@sung-woo.kim>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f692abf139400ca42f176fcf100c1485b01935a8
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Thu Nov 10 18:40:56 2022 +0100

    HID: uclogic: Add HID_QUIRK_HIDINPUT_FORCE quirk
    
    [ Upstream commit 3405a4beaaa852f3ed2a5eb3b5149932d5c3779b ]
    
    Commit f7d8e387d9ae ("HID: uclogic: Switch to Digitizer usage for
    styluses") changed the usage used in UCLogic from "Pen" to "Digitizer".
    
    However, the IS_INPUT_APPLICATION() macro evaluates to false for
    HID_DG_DIGITIZER causing issues with the XP-Pen Star G640 tablet.
    
    Add the HID_QUIRK_HIDINPUT_FORCE quirk to bypass the
    IS_INPUT_APPLICATION() check.
    
    Reported-by: Torge Matthies <openglfreak@googlemail.com>
    Reported-by: Alexander Zhang <alex@alexyzhang.dev>
    Tested-by: Alexander Zhang <alex@alexyzhang.dev>
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5325a884e2c3b5584779abb7458f601d47bc15af
Author: Shruthi Sanil <shruthi.sanil@intel.com>
Date:   Fri Nov 25 16:23:27 2022 +0530

    usb: dwc3: pci: Update PCIe device ID for USB3 controller on CPU sub-system for Raptor Lake
    
    commit f05f80f217bf52443a2582bca19fd78188333f25 upstream.
    
    The device ID 0xa70e is defined for the USB3 device controller in the CPU
    sub-system of Raptor Lake platform. Hence updating the ID accordingly.
    
    Fixes: bad0d1d726ac ("usb: dwc3: pci: Add support for Intel Raptor Lake")
    Cc: stable <stable@kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Shruthi Sanil <shruthi.sanil@intel.com>
    Link: https://lore.kernel.org/r/20221125105327.27945-1-shruthi.sanil@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 367e1e3399dbc56fc669740c4ab60e35da632b0e
Author: Tony Nguyen <anthony.l.nguyen@intel.com>
Date:   Mon Dec 12 11:00:31 2022 -0800

    igb: Initialize mailbox message for VF reset
    
    commit de5dc44370fbd6b46bd7f1a1e00369be54a041c8 upstream.
    
    When a MAC address is not assigned to the VF, that portion of the message
    sent to the VF is not set. The memory, however, is allocated from the
    stack meaning that information may be leaked to the VM. Initialize the
    message buffer to 0 so that no information is passed to the VM in this
    case.
    
    Fixes: 6ddbc4cf1f4d ("igb: Indicate failure on vf reset for empty mac address")
    Reported-by: Akihiko Odaki <akihiko.odaki@daynix.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Reviewed-by: Akihiko Odaki <akihiko.odaki@daynix.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20221212190031.3983342-1-anthony.l.nguyen@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a301742b35bcb4e462ab790595c0bf610c7101a4
Author: Reka Norman <rekanorman@chromium.org>
Date:   Wed Nov 30 11:19:40 2022 +0200

    xhci: Apply XHCI_RESET_TO_DEFAULT quirk to ADL-N
    
    commit fed70b61ef2c0aed54456db3d485b215f6cc3209 upstream.
    
    ADL-N systems have the same issue as ADL-P, where a large boot firmware
    delay is seen if USB ports are left in U3 at shutdown. So apply the
    XHCI_RESET_TO_DEFAULT quirk to ADL-N as well.
    
    This patch depends on commit 34cd2db408d5 ("xhci: Add quirk to reset
    host back to default state at shutdown").
    
    The issue it fixes is a ~20s boot time delay when booting from S5. It
    affects ADL-N devices, and ADL-N support was added starting from v5.16.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Reka Norman <rekanorman@chromium.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20221130091944.2171610-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e959f0c4c573f1fca0096d21db1413e1c175292
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Nov 29 15:18:19 2022 +0100

    USB: serial: f81534: fix division by zero on line-speed change
    
    commit 188c9c2e0c7f4ae864113f80c40bafb394062271 upstream.
    
    The driver leaves the line speed unchanged in case a requested speed is
    not supported. Make sure to handle the case where the current speed is
    B0 (hangup) without dividing by zero when determining the clock source.
    
    Fixes: 3aacac02f385 ("USB: serial: f81534: add high baud rate support")
    Cc: stable@vger.kernel.org      # 4.16
    Cc: Ji-Ze Hong (Peter Hong) <hpeter@gmail.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68fbe268d2cb11fd5ae3f110ad596bf6e016efbf
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Nov 29 15:17:49 2022 +0100

    USB: serial: f81232: fix division by zero on line-speed change
    
    commit a08ca6ebafe615c9028c53fc4c9e6c9b2b1f2888 upstream.
    
    The driver leaves the line speed unchanged in case a requested speed is
    not supported. Make sure to handle the case where the current speed is
    B0 (hangup) without dividing by zero when determining the clock source.
    
    Fixes: 268ddb5e9b62 ("USB: serial: f81232: add high baud rate support")
    Cc: stable@vger.kernel.org      # 5.2
    Cc: Ji-Ze Hong (Peter Hong) <hpeter@gmail.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ec7f24b8bb82fd7cf75a5cbc94b55337363dd77
Author: Bruno Thomsen <bruno.thomsen@gmail.com>
Date:   Sun Nov 27 18:08:11 2022 +0100

    USB: serial: cp210x: add Kamstrup RF sniffer PIDs
    
    commit e88906b169ebcb8046e8f0ad76edd09ab41cfdfe upstream.
    
    The RF sniffers are based on cp210x where the RF frontends
    are based on a different USB stack.
    
    RF sniffers can analyze packets meta data including power level
    and perform packet injection.
    
    Can be used to perform RF frontend self-test when connected to
    a concentrator, ex. arch/arm/boot/dts/imx7d-flex-concentrator.dts
    
    Signed-off-by: Bruno Thomsen <bruno.thomsen@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b092fab2340f9b1eade0f63cff8aeda7cf08520
Author: Duke Xin <duke_xinanwen@163.com>
Date:   Sat Nov 19 17:44:47 2022 +0800

    USB: serial: option: add Quectel EM05-G modem
    
    commit f0052d7a1edb3d8921b4e154aa8c46c4845b3714 upstream.
    
    The EM05-G modem has 2 USB configurations that are configurable via the AT
    command AT+QCFG="usbnet",[ 0 | 2 ] which make the modem enumerate with
    the following interfaces, respectively:
    
    "RMNET" : AT + DIAG + NMEA + Modem + QMI
    "MBIM"  : MBIM + AT + DIAG + NMEA + Modem
    
    The detailed description of the USB configuration for each mode as follows:
    
    RMNET Mode
    --------------
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 21 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0311 Rev= 3.18
    S:  Manufacturer=Quectel
    S:  Product=Quectel EM05-G
    C:* #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    E:  Ad=89(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    MBIM Mode
    --------------
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 16 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0311 Rev= 3.18
    S:  Manufacturer=Quectel
    S:  Product=Quectel EM05-G
    C:* #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=0e Prot=00
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=0e Prot=00 Driver=cdc_mbim
    E:  Ad=89(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
    I:  If#= 1 Alt= 0 #EPs= 0 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:* If#= 1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Signed-off-by: Duke Xin <duke_xinanwen@163.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b41a35b41f77821db24f2d8f66794b390a585c5
Author: Szymon Heidrich <szymon.heidrich@gmail.com>
Date:   Tue Dec 6 15:13:01 2022 +0100

    usb: gadget: uvc: Prevent buffer overflow in setup handler
    
    commit 4c92670b16727365699fe4b19ed32013bab2c107 upstream.
    
    Setup function uvc_function_setup permits control transfer
    requests with up to 64 bytes of payload (UVC_MAX_REQUEST_SIZE),
    data stage handler for OUT transfer uses memcpy to copy req->actual
    bytes to uvc_event->data.data array of size 60. This may result
    in an overflow of 4 bytes.
    
    Fixes: cdda479f15cd ("USB gadget: video class function driver")
    Cc: stable <stable@kernel.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Daniel Scally <dan.scally@ideasonboard.com>
    Signed-off-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Link: https://lore.kernel.org/r/20221206141301.51305-1-szymon.heidrich@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 828112571c92b356691324ff978d4fd3dcaf473a
Author: Jan Kara <jack@suse.cz>
Date:   Thu Dec 8 13:03:30 2022 +0100

    udf: Fix extending file within last block
    
    commit 1f3868f06855c97a4954c99b36f3fc9eb8f60326 upstream.
    
    When extending file within last block it can happen that the extent is
    already rounded to the blocksize and thus contains the offset we want to
    grow up to. In such case we would mistakenly expand the last extent and
    make it one block longer than it should be, exposing unallocated block
    in a file and causing data corruption. Fix the problem by properly
    detecting this case and bailing out.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df1a2596c775066675ae0d3ed5708c90da99cba9
Author: Jan Kara <jack@suse.cz>
Date:   Wed Dec 7 17:34:33 2022 +0100

    udf: Do not bother looking for prealloc extents if i_lenExtents matches i_size
    
    commit 6ad53f0f71c52871202a7bf096feb2c59db33fc5 upstream.
    
    If rounded block-rounded i_lenExtents matches block rounded i_size,
    there are no preallocation extents. Do not bother walking extent linked
    list.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63dbbd8f1499b0a161e701a04aa50148d60bd1f7
Author: Jan Kara <jack@suse.cz>
Date:   Wed Dec 7 17:25:10 2022 +0100

    udf: Fix preallocation discarding at indirect extent boundary
    
    commit cfe4c1b25dd6d2f056afc00b7c98bcb3dd0b1fc3 upstream.
    
    When preallocation extent is the first one in the extent block, the
    code would corrupt extent tree header instead. Fix the problem and use
    udf_delete_aext() for deleting extent to avoid some code duplication.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79a97f08ae5d30bad32050b464ff1cd979a068ca
Author: Jan Kara <jack@suse.cz>
Date:   Wed Dec 7 18:17:34 2022 +0100

    udf: Discard preallocation before extending file with a hole
    
    commit 16d0556568148bdcaa45d077cac9f8f7077cf70a upstream.
    
    When extending file with a hole, we tried to preserve existing
    preallocation for the file. However that is not very useful and
    complicates code because the previous extent may need to be rounded to
    block boundary as well (which we forgot to do thus causing data
    corruption for sequence like:
    
    xfs_io -f -c "pwrite 0x75e63 11008" -c "truncate 0x7b24b" \
      -c "truncate 0xabaa3" -c "pwrite 0xac70b 22954" \
      -c "pwrite 0x93a43 11358" -c "pwrite 0xb8e65 52211" file
    
    with 512-byte block size. Just discard preallocation before extending
    file to simplify things and also fix this data corruption.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
