commit 52a953d0934b17a88f403b4135eb3cdf83d19f91
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Aug 3 10:24:19 2023 +0200

    Linux 6.1.43
    
    Link: https://lore.kernel.org/r/20230801091922.799813980@linuxfoundation.org
    Tested-by: Takeshi Ogasawara <takeshi.ogasawara@futuring-girl.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Conor Dooley <conor.dooley@microchip.com>
    Tested-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Tested-by: SeongJae Park <sj@kernel.org>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Link: https://lore.kernel.org/r/20230802065510.869511253@linuxfoundation.org
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Takeshi Ogasawara <takeshi.ogasawara@futuring-girl.com>
    Tested-by: Chris Paterson (CIP) <chris.paterson2@renesas.com>
    Tested-by: SeongJae Park <sj@kernel.org>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3d576baa6c8f0b34750a0b6f9b12e9d64625512
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Thu Jul 6 15:37:51 2023 +0300

    dma-buf: fix an error pointer vs NULL bug
    
    commit 00ae1491f970acc454be0df63f50942d94825860 upstream.
    
    Smatch detected potential error pointer dereference.
    
        drivers/gpu/drm/drm_syncobj.c:888 drm_syncobj_transfer_to_timeline()
        error: 'fence' dereferencing possible ERR_PTR()
    
    The error pointer comes from dma_fence_allocate_private_stub().  One
    caller expected error pointers and one expected NULL pointers.  Change
    it to return NULL and update the caller which expected error pointers,
    drm_syncobj_assign_null_handle(), to check for NULL instead.
    
    Fixes: f781f661e8c9 ("dma-buf: keep the signaling time of merged fences v3")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/b09f1996-3838-4fa2-9193-832b68262e43@moroto.mountain
    Cc: Jindong Yue <jindong.yue@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23acc2b850ba4dfdfe2700d728be3e27710260a1
Author: Christian König <christian.koenig@amd.com>
Date:   Tue Jun 13 10:09:20 2023 +0200

    dma-buf: keep the signaling time of merged fences v3
    
    commit f781f661e8c99b0cb34129f2e374234d61864e77 upstream.
    
    Some Android CTS is testing if the signaling time keeps consistent
    during merges.
    
    v2: use the current time if the fence is still in the signaling path and
    the timestamp not yet available.
    v3: improve comment, fix one more case to use the correct timestamp
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Luben Tuikov <luben.tuikov@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230630120041.109216-1-christian.koenig@amd.com
    Cc: Jindong Yue <jindong.yue@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 665e6fd71468af2559bd889edb7a7cb8c850e75c
Author: Mirsad Goran Todorovac <mirsad.todorovac@alu.unizg.hr>
Date:   Tue Jun 6 09:08:10 2023 +0200

    test_firmware: return ENOMEM instead of ENOSPC on failed memory allocation
    
    commit 7dae593cd226a0bca61201cf85ceb9335cf63682 upstream.
    
    In a couple of situations like
    
            name = kstrndup(buf, count, GFP_KERNEL);
            if (!name)
                    return -ENOSPC;
    
    the error is not actually "No space left on device", but "Out of memory".
    
    It is semantically correct to return -ENOMEM in all failed kstrndup()
    and kzalloc() cases in this driver, as it is not a problem with disk
    space, but with kernel memory allocator failing allocation.
    
    The semantically correct should be:
    
            name = kstrndup(buf, count, GFP_KERNEL);
            if (!name)
                    return -ENOMEM;
    
    Cc: Dan Carpenter <error27@gmail.com>
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: "Luis R. Rodriguez" <mcgrof@ruslug.rutgers.edu>
    Cc: Scott Branden <sbranden@broadcom.com>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Brian Norris <briannorris@chromium.org>
    Fixes: c92316bf8e948 ("test_firmware: add batched firmware tests")
    Fixes: 0a8adf584759c ("test: add firmware_class loader test")
    Fixes: 548193cba2a7d ("test_firmware: add support for firmware_request_platform")
    Fixes: eb910947c82f9 ("test: firmware_class: add asynchronous request trigger")
    Fixes: 061132d2b9c95 ("test_firmware: add test custom fallback trigger")
    Fixes: 7feebfa487b92 ("test_firmware: add support for request_firmware_into_buf")
    Signed-off-by: Mirsad Goran Todorovac <mirsad.todorovac@alu.unizg.hr>
    Reviewed-by: Dan Carpenter <dan.carpenter@linaro.org>
    Message-ID: <20230606070808.9300-1-mirsad.todorovac@alu.unizg.hr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ab95d5ce8be4b7410d04b116dc61de9a5d28350
Author: Matthieu Baerts <matthieu.baerts@tessares.net>
Date:   Tue Jul 4 22:44:36 2023 +0200

    selftests: mptcp: sockopt: use 'iptables-legacy' if available
    
    commit a5a5990c099dd354e05e89ee77cd2dbf6655d4a1 upstream.
    
    IPTables commands using 'iptables-nft' fail on old kernels, at least
    on v5.15 because it doesn't see the default IPTables chains:
    
      $ iptables -L
      iptables/1.8.2 Failed to initialize nft: Protocol not supported
    
    As a first step before switching to NFTables, we can use iptables-legacy
    if available.
    
    Link: https://github.com/multipath-tcp/mptcp_net-next/issues/368
    Fixes: dc65fe82fb07 ("selftests: mptcp: add packet mark test case")
    Cc: stable@vger.kernel.org
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd2decac7345134ea0bd3f4b978478ef53367cd8
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Jul 4 22:44:33 2023 +0200

    mptcp: ensure subflow is unhashed before cleaning the backlog
    
    commit 3fffa15bfef48b0ad6424779c03e68ae8ace5acb upstream.
    
    While tacking care of the mptcp-level listener I unintentionally
    moved the subflow level unhash after the subflow listener backlog
    cleanup.
    
    That could cause some nasty race and makes the code harder to read.
    
    Address the issue restoring the proper order of operations.
    
    Fixes: 57fc0f1ceaa4 ("mptcp: ensure listener is unhashed before updating the sk status")
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab79c7541d8461ef5cecea2079a37c30d487d17c
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Dec 28 22:26:04 2022 +0100

    cpufreq: intel_pstate: Drop ACPI _PSS states table patching
    
    commit e8a0e30b742f76ebd0f3b196973df4bf65d8fbbb upstream.
    
    After making acpi_processor_get_platform_limit() use the "no limit"
    value for its frequency QoS request when _PPC returns 0, it is not
    necessary to replace the frequency corresponding to the first _PSS
    return package entry with the maximum turbo frequency of the given
    CPU in intel_pstate_init_acpi_perf_limits() any more, so drop the
    code doing that along with the comment explaining it.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Hagar Hemdan <hagarhem@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 602a1cbc24a2c464f8b4913ea45815bfc70b629b
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Dec 28 22:24:10 2022 +0100

    ACPI: processor: perflib: Avoid updating frequency QoS unnecessarily
    
    commit 99387b016022c29234c4ebf9abd34358c6e56532 upstream.
    
    Modify acpi_processor_get_platform_limit() to avoid updating its
    frequency QoS request when the _PPC return value has not changed
    by comparing that value to the previous _PPC return value stored in
    the performance_platform_limit field of the struct acpi_processor
    corresponding to the given CPU.
    
    While at it, do the _PPC return value check against the state count
    earlier, to avoid setting performance_platform_limit to an invalid
    value, and make acpi_processor_ppc_init() use FREQ_QOS_MAX_DEFAULT_VALUE
    as the "no limit" frequency QoS for consistency.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Hagar Hemdan <hagarhem@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7fcc0f1b26b5751ec5d6f23a038123f24656e15
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Dec 28 22:21:49 2022 +0100

    ACPI: processor: perflib: Use the "no limit" frequency QoS
    
    commit c02d5feb6e2f60affc6ba8606d8d614c071e2ba6 upstream.
    
    When _PPC returns 0, it means that the CPU frequency is not limited by
    the platform firmware, so make acpi_processor_get_platform_limit()
    update the frequency QoS request used by it to "no limit" in that case.
    
    This addresses a problem with limiting CPU frequency artificially on
    some systems after CPU offline/online to the frequency that corresponds
    to the first entry in the _PSS return package.
    
    Reported-by: Pratyush Yadav <ptyadav@amazon.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Pratyush Yadav <ptyadav@amazon.de>
    Tested-by: Pratyush Yadav <ptyadav@amazon.de>
    Tested-by: Hagar Hemdan <hagarhem@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d701687c898e5358f29ca11bccdfc8f54129e69c
Author: Benjamin Cheng <ben@bcheng.me>
Date:   Sun Mar 12 20:47:39 2023 -0400

    drm/amd/display: Write to correct dirty_rect
    
    commit 751281c55579f0cb0e56c9797d4663f689909681 upstream.
    
    When FB_DAMAGE_CLIPS are provided in a non-MPO scenario, the loop does
    not use the counter i. This causes the fill_dc_dity_rect() to always
    fill dirty_rects[0], causing graphical artifacts when a damage clip
    aware DRM client sends more than 1 damage clip.
    
    Instead, use the flip_addrs->dirty_rect_count which is incremented by
    fill_dc_dirty_rect() on a successful fill.
    
    Fixes: 30ebe41582d1 ("drm/amd/display: add FB_DAMAGE_CLIPS support")
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/2453
    Signed-off-by: Benjamin Cheng <ben@bcheng.me>
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org # 6.1.x
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d58fb94f24f89c833bd73d370b27b58867d78120
Author: Hamza Mahfooz <hamza.mahfooz@amd.com>
Date:   Wed Jun 21 15:19:05 2023 -0400

    drm/amd/display: perform a bounds check before filling dirty rectangles
    
    commit af22d6a869cc26b519bfdcd54293c53f2e491870 upstream.
    
    Currently, it is possible for us to access memory that we shouldn't.
    Since, we acquire (possibly dangling) pointers to dirty rectangles
    before doing a bounds check to make sure we can actually accommodate the
    number of dirty rectangles userspace has requested to fill. This issue
    is especially evident if a compositor requests both MPO and damage clips
    at the same time, in which case I have observed a soft-hang. So, to
    avoid this issue, perform the bounds check before filling a single dirty
    rectangle and WARN() about it, if it is ever attempted in
    fill_dc_dirty_rect().
    
    Cc: stable@vger.kernel.org # 6.1+
    Fixes: 30ebe41582d1 ("drm/amd/display: add FB_DAMAGE_CLIPS support")
    Reviewed-by: Leo Li <sunpeng.li@amd.com>
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0441c4415442d10e28e10a98bee95b004a906cd1
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Jan 31 09:52:37 2023 -0500

    tracing: Fix trace_event_raw_event_synth() if else statement
    
    commit 9971c3f944489ff7aacb9d25e0cde841a5f6018a upstream.
    
    The test to check if the field is a stack is to be done if it is not a
    string. But the code had:
    
        } if (event->fields[i]->is_stack) {
    
    and not
    
       } else if (event->fields[i]->is_stack) {
    
    which would cause it to always be tested. Worse yet, this also included an
    "else" statement that was only to be called if the field was not a string
    and a stack, but this code allows it to be called if it was a string (and
    not a stack).
    
    Also fixed some whitespace issues.
    
    Link: https://lore.kernel.org/all/202301302110.mEtNwkBD-lkp@intel.com/
    Link: https://lore.kernel.org/linux-trace-kernel/20230131095237.63e3ca8d@gandalf.local.home
    
    Cc: Tom Zanussi <zanussi@kernel.org>
    Fixes: 00cf3d672a9d ("tracing: Allow synthetic events to pass around stacktraces")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5e8f7a02c158afbfe7657e0358ee964978ee138
Author: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date:   Tue Nov 22 10:06:19 2022 -0500

    drm/amd/display: set per pipe dppclk to 0 when dpp is off
    
    commit 6609141c49df1b86fbad26a8643d4b4044f28b11 upstream.
    
    The 'commit 52e4fdf09ebc ("drm/amd/display: use low clocks for no plane
    configs")' introduced a change that set low clock values for DCN31 and
    DCN32. As a result of these changes, DC started to spam the log with the
    following warning:
    
    ------------[ cut here ]------------
    WARNING: CPU: 8 PID: 1486 at
    drivers/gpu/drm/amd/amdgpu/../display/dc/dcn20/dcn20_dccg.c:58
    dccg2_update_dpp_dto+0x3f/0xf0 [amdgpu]
    [..]
    CPU: 8 PID: 1486 Comm: kms_atomic Tainted: G W 5.18.0+ #1
    RIP: 0010:dccg2_update_dpp_dto+0x3f/0xf0 [amdgpu]
    RSP: 0018:ffffbbd8025334d0 EFLAGS: 00010206
    RAX: 00000000000001ee RBX: ffffa02c87dd3de0 RCX: 00000000000a7f80
    RDX: 000000000007dec3 RSI: 0000000000000000 RDI: ffffa02c87dd3de0
    RBP: ffffbbd8025334e8 R08: 0000000000000001 R09: 0000000000000005
    R10: 00000000000331a0 R11: ffffffffc0b03d80 R12: ffffa02ca576d000
    R13: ffffa02cd02c0000 R14: 00000000001453bc R15: ffffa02cdc280000
    [..]
    dcn20_update_clocks_update_dpp_dto+0x4e/0xa0 [amdgpu]
    dcn32_update_clocks+0x5d9/0x650 [amdgpu]
    dcn20_prepare_bandwidth+0x49/0x100 [amdgpu]
    dcn30_prepare_bandwidth+0x63/0x80 [amdgpu]
    dc_commit_state_no_check+0x39d/0x13e0 [amdgpu]
    dc_commit_streams+0x1f9/0x3b0 [amdgpu]
    dc_commit_state+0x37/0x120 [amdgpu]
    amdgpu_dm_atomic_commit_tail+0x5e5/0x2520 [amdgpu]
    ? _raw_spin_unlock_irqrestore+0x1f/0x40
    ? down_trylock+0x2c/0x40
    ? vprintk_emit+0x186/0x2c0
    ? vprintk_default+0x1d/0x20
    ? vprintk+0x4e/0x60
    
    We can easily trigger this issue by using a 4k@120 or a 2k@165 and
    running some of the kms_atomic tests. This warning is triggered because
    the per-pipe clock update is not happening; this commit fixes this issue
    by ensuring that DPPCLK is updated when calculating the watermark and
    dlg is invoked.
    
    Fixes: 2641c7b78081 ("drm/amd/display: use low clocks for no plane configs")
    Reported-by: Mark Broadworth <mark.broadworth@amd.com>
    Reviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73679f8c455e5f3cf218a740b8d605c7cb7a7cb0
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Sat Jul 22 20:28:08 2023 +0200

    rbd: retrieve and check lock owner twice before blocklisting
    
    commit 588159009d5b7a09c3e5904cffddbe4a4e170301 upstream.
    
    An attempt to acquire exclusive lock can race with the current lock
    owner closing the image:
    
    1. lock is held by client123, rbd_lock() returns -EBUSY
    2. get_lock_owner_info() returns client123 instance details
    3. client123 closes the image, lock is released
    4. find_watcher() returns 0 as there is no matching watcher anymore
    5. client123 instance gets erroneously blocklisted
    
    Particularly impacted is mirror snapshot scheduler in snapshot-based
    mirroring since it happens to open and close images a lot (images are
    opened only for as long as it takes to take the next mirror snapshot,
    the same client instance is used for all images).
    
    To reduce the potential for erroneous blocklisting, retrieve the lock
    owner again after find_watcher() returns 0.  If it's still there, make
    sure it matches the previously detected lock owner.
    
    Cc: stable@vger.kernel.org # f38cb9d9c204: rbd: make get_lock_owner_info() return a single locker or NULL
    Cc: stable@vger.kernel.org # 8ff2c64c9765: rbd: harden get_lock_owner_info() a bit
    Cc: stable@vger.kernel.org
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Dongsheng Yang <dongsheng.yang@easystack.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c0b6412c96691bc3cc16f2f4b27591b327e627f
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Sat Jul 8 16:16:59 2023 +0200

    rbd: harden get_lock_owner_info() a bit
    
    commit 8ff2c64c9765446c3cef804fb99da04916603e27 upstream.
    
    - we want the exclusive lock type, so test for it directly
    - use sscanf() to actually parse the lock cookie and avoid admitting
      invalid handles
    - bail if locker has a blank address
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Dongsheng Yang <dongsheng.yang@easystack.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0d067c79b238e1458689adc6a2ca31efaf6e7b7
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Fri Jun 30 13:52:13 2023 +0200

    rbd: make get_lock_owner_info() return a single locker or NULL
    
    commit f38cb9d9c2045dad16eead4a2e1aedfddd94603b upstream.
    
    Make the "num_lockers can be only 0 or 1" assumption explicit and
    simplify the API by getting rid of output parameters in preparation
    for calling get_lock_owner_info() twice before blocklisting.
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Dongsheng Yang <dongsheng.yang@easystack.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d215ad49c6ac99969f377ed86ffbe26d73ccb6f
Author: Joe Thornber <ejt@redhat.com>
Date:   Tue Jul 25 11:44:41 2023 -0400

    dm cache policy smq: ensure IO doesn't prevent cleaner policy progress
    
    commit 1e4ab7b4c881cf26c1c72b3f56519e03475486fb upstream.
    
    When using the cleaner policy to decommission the cache, there is
    never any writeback started from the cache as it is constantly delayed
    due to normal I/O keeping the device busy. Meaning @idle=false was
    always being passed to clean_target_met()
    
    Fix this by adding a specific 'cleaner' flag that is set when the
    cleaner policy is configured. This flag serves to always allow the
    cleaner's writeback work to be queued until the cache is
    decommissioned (even if the cache isn't idle).
    
    Reported-by: David Jeffery <djeffery@redhat.com>
    Fixes: b29d4986d0da ("dm cache: significant rework to leverage dm-bio-prison-v2")
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 507f70c06aa99d05fbb0f36de2be31ef1cf88497
Author: Radhakrishna Sripada <radhakrishna.sripada@intel.com>
Date:   Tue Jul 18 15:51:18 2023 -0700

    drm/i915/dpt: Use shmem for dpt objects
    
    commit 3844ed5e78823eebb5f0f1edefc403310693d402 upstream.
    
    Dpt objects that are created from internal get evicted when there is
    memory pressure and do not get restored when pinned during scanout. The
    pinned page table entries look corrupted and programming the display
    engine with the incorrect pte's result in DE throwing pipe faults.
    
    Create DPT objects from shmem and mark the object as dirty when pinning so
    that the object is restored when shrinker evicts an unpinned buffer object.
    
    v2: Unconditionally mark the dpt objects dirty during pinning(Chris).
    
    Fixes: 0dc987b699ce ("drm/i915/display: Add smem fallback allocation for dpt")
    Cc: <stable@vger.kernel.org> # v6.0+
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
    Suggested-by: Chris Wilson <chris.p.wilson@intel.com>
    Signed-off-by: Fei Yang <fei.yang@intel.com>
    Signed-off-by: Radhakrishna Sripada <radhakrishna.sripada@intel.com>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230718225118.2562132-1-radhakrishna.sripada@intel.com
    (cherry picked from commit e91a777a6e602ba0e3366e053e4e094a334a1244)
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e046aecb73e06ea95adee9c81ae4f218cb8d14f4
Author: Xiubo Li <xiubli@redhat.com>
Date:   Thu Jul 20 11:33:55 2023 +0800

    ceph: never send metrics if disable_send_metrics is set
    
    commit 50164507f6b7b7ed85d8c3ac0266849fbd908db7 upstream.
    
    Even the 'disable_send_metrics' is true so when the session is
    being opened it will always trigger to send the metric for the
    first time.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Venky Shankar <vshankar@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ab9ad163804522d2d469a424aa7a4cbd3b96225
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Thu Jul 13 16:57:39 2023 +0200

    PM: sleep: wakeirq: fix wake irq arming
    
    commit 8527beb12087238d4387607597b4020bc393c4b4 upstream.
    
    The decision whether to enable a wake irq during suspend can not be done
    based on the runtime PM state directly as a driver may use wake irqs
    without implementing runtime PM. Such drivers specifically leave the
    state set to the default 'suspended' and the wake irq is thus never
    enabled at suspend.
    
    Add a new wake irq flag to track whether a dedicated wake irq has been
    enabled at runtime suspend and therefore must not be enabled at system
    suspend.
    
    Note that pm_runtime_enabled() can not be used as runtime PM is always
    disabled during late suspend.
    
    Fixes: 69728051f5bf ("PM / wakeirq: Fix unbalanced IRQ enable for wakeirq")
    Cc: 4.16+ <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Tested-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 356e711640aea6ed145da9407499388b45264cb4
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Jul 26 13:12:26 2023 +0100

    arm64/sme: Set new vector length before reallocating
    
    commit 05d881b85b48c7ac6a7c92ce00aa916c4a84d052 upstream.
    
    As part of fixing the allocation of the buffer for SVE state when changing
    SME vector length we introduced an immediate reallocation of the SVE state,
    this is also done when changing the SVE vector length for consistency.
    Unfortunately this reallocation is done prior to writing the new vector
    length to the task struct, meaning the allocation is done with the old
    vector length and can lead to memory corruption due to an undersized buffer
    being used.
    
    Move the update of the vector length before the allocation to ensure that
    the new vector length is taken into account.
    
    For some reason this isn't triggering any problems when running tests on
    the arm64 fixes branch (even after repeated tries) but is triggering
    issues very often after merge into mainline.
    
    Fixes: d4d5be94a878 ("arm64/fpsimd: Ensure SME storage is allocated after SVE VL changes")
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230726-arm64-fix-sme-fix-v1-1-7752ec58af27@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff54cb993b316ce3fc3920941787bee02ff2504f
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Jul 23 00:27:22 2023 +0100

    ASoC: wm8904: Fill the cache for WM8904_ADC_TEST_0 register
    
    commit f061e2be8689057cb4ec0dbffa9f03e1a23cdcb2 upstream.
    
    The WM8904_ADC_TEST_0 register is modified as part of updating the OSR
    controls but does not have a cache default, leading to errors when we try
    to modify these controls in cache only mode with no prior read:
    
    wm8904 3-001a: ASoC: error at snd_soc_component_update_bits on wm8904.3-001a for register: [0x000000c6] -16
    
    Add a read of the register to probe() to fill the cache and avoid both the
    error messages and the misconfiguration of the chip which will result.
    
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230723-asoc-fix-wm8904-adc-test-read-v1-1-2cdf2edd83fd@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6deb8727f2a5b88535afc73e442e2a115a518464
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Fri Jul 21 21:36:47 2023 +0200

    s390/dasd: print copy pair message only for the correct error
    
    commit 856d8e3c633b183df23549ce760ae84478a7098d upstream.
    
    The DASD driver has certain types of requests that might be rejected by
    the storage server or z/VM because they are not supported. Since the
    missing support of the command is not a real issue there is no user
    visible kernel error message for this.
    
    For copy pair setups  there is a specific error that IO is not allowed on
    secondary devices. This error case is explicitly handled and an error
    message is printed.
    
    The code checking for the error did use a bitwise 'and' that is used to
    check for specific bits. But in this case the whole sense byte has to
    match.
    
    This leads to the problem that the copy pair related error message is
    erroneously printed for other error cases that are usually not reported.
    This might heavily confuse users and lead to follow on actions that might
    disrupt application processing.
    
    Fix by checking the sense byte for the exact value and not single bits.
    
    Cc: stable@vger.kernel.org # 6.1+
    Fixes: 1fca631a1185 ("s390/dasd: suppress generic error messages for PPRC secondary devices")
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Link: https://lore.kernel.org/r/20230721193647.3889634-5-sth@linux.ibm.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4ae208cc335afad6b219edc03a07f022a897514
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Fri Jul 21 21:36:44 2023 +0200

    s390/dasd: fix hanging device after quiesce/resume
    
    commit 05f1d8ed03f547054efbc4d29bb7991c958ede95 upstream.
    
    Quiesce and resume are functions that tell the DASD driver to stop/resume
    issuing I/Os to a specific DASD.
    
    On resume dasd_schedule_block_bh() is called to kick handling of IO
    requests again. This does unfortunately not cover internal requests which
    are used for path verification for example.
    
    This could lead to a hanging device when a path event or anything else
    that triggers internal requests occurs on a quiesced device.
    
    Fix by also calling dasd_schedule_device_bh() which triggers handling of
    internal requests on resume.
    
    Fixes: 8e09f21574ea ("[S390] dasd: add hyper PAV support to DASD device driver, part 1")
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Link: https://lore.kernel.org/r/20230721193647.3889634-2-sth@linux.ibm.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b58bd384730ac2cd177fd8e4d0bf0aa4a0bf166
Author: Chenguang Zhao <zhaochenguang@kylinos.cn>
Date:   Fri Jul 28 10:30:42 2023 +0800

    LoongArch: BPF: Enable bpf_probe_read{, str}() on LoongArch
    
    commit de0e30bee86d0f99c696a1fea34474e556a946ec upstream.
    
    Currently nettrace does not work on LoongArch due to missing
    bpf_probe_read{,str}() support, with the error message:
    
         ERROR: failed to load kprobe-based eBPF
         ERROR: failed to load kprobe-based bpf
    
    According to commit 0ebeea8ca8a4d1d ("bpf: Restrict bpf_probe_read{,
    str}() only to archs where they work"), we only need to select
    CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE to add said support,
    because LoongArch does have non-overlapping address ranges for kernel
    and userspace.
    
    Cc: stable@vger.kernel.org # 6.1
    Signed-off-by: Chenguang Zhao <zhaochenguang@kylinos.cn>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a5e0c1f71dc4a57acee3e76f0074f6b867e8611
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Fri Jul 28 10:30:42 2023 +0800

    LoongArch: BPF: Fix check condition to call lu32id in move_imm()
    
    commit 4eece7e6de94d833c8aeed2f438faf487cbf94ff upstream.
    
    As the code comment says, the initial aim is to reduce one instruction
    in some corner cases, if bit[51:31] is all 0 or all 1, no need to call
    lu32id. That is to say, it should call lu32id only if bit[51:31] is not
    all 0 and not all 1. The current code always call lu32id, the result is
    right but the logic is unexpected and wrong, fix it.
    
    Cc: stable@vger.kernel.org # 6.1
    Fixes: 5dc615520c4d ("LoongArch: Add BPF JIT support")
    Reported-by: Colin King (gmail) <colin.i.king@gmail.com>
    Closes: https://lore.kernel.org/all/bcf97046-e336-712a-ac68-7fd194f2953e@gmail.com/
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 024ed3b9b8e38472705c5fa3a5207bafe2183ad9
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Jul 24 17:31:31 2023 +0300

    Revert "um: Use swap() to make code cleaner"
    
    commit dddfa05eb58076ad60f9a66e7155a5b3502b2dd5 upstream.
    
    This reverts commit 9b0da3f22307af693be80f5d3a89dc4c7f360a85.
    
    The sigio.c is clearly user space code which is handled by
    arch/um/scripts/Makefile.rules (see USER_OBJS rule).
    
    The above mentioned commit simply broke this agreement,
    we may not use Linux kernel internal headers in them without
    thorough thinking.
    
    Hence, revert the wrong commit.
    
    Link: https://lkml.kernel.org/r/20230724143131.30090-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Closes: https://lore.kernel.org/oe-kbuild-all/202307212304.cH79zJp1-lkp@intel.com/
    Cc: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Cc: Herve Codina <herve.codina@bootlin.com>
    Cc: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Johannes Berg <johannes@sipsolutions.net>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Yang Guang <yang.guang5@zte.com.cn>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1d54962a63b6ec04ed0204a3ecca942fde3a6fe
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Wed Jul 5 14:30:11 2023 +0200

    soundwire: fix enumeration completion
    
    commit c40d6b3249b11d60e09d81530588f56233d9aa44 upstream.
    
    The soundwire subsystem uses two completion structures that allow
    drivers to wait for soundwire device to become enumerated on the bus and
    initialised by their drivers, respectively.
    
    The code implementing the signalling is currently broken as it does not
    signal all current and future waiters and also uses the wrong
    reinitialisation function, which can potentially lead to memory
    corruption if there are still waiters on the queue.
    
    Not signalling future waiters specifically breaks sound card probe
    deferrals as codec drivers can not tell that the soundwire device is
    already attached when being reprobed. Some codec runtime PM
    implementations suffer from similar problems as waiting for enumeration
    during resume can also timeout despite the device already having been
    enumerated.
    
    Fixes: fb9469e54fa7 ("soundwire: bus: fix race condition with enumeration_complete signaling")
    Fixes: a90def068127 ("soundwire: bus: fix race condition with initialization_complete signaling")
    Cc: stable@vger.kernel.org      # 5.7
    Cc: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Cc: Rander Wang <rander.wang@linux.intel.com>
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20230705123018.30903-2-johan+linaro@kernel.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dda7cfcaa46b22351171f3a9b3c2d5f3db41c319
Author: Matthieu Baerts <matthieu.baerts@tessares.net>
Date:   Tue Jul 25 11:34:55 2023 -0700

    selftests: mptcp: join: only check for ip6tables if needed
    
    commit 016e7ba47f33064fbef8c4307a2485d2669dfd03 upstream.
    
    If 'iptables-legacy' is available, 'ip6tables-legacy' command will be
    used instead of 'ip6tables'. So no need to look if 'ip6tables' is
    available in this case.
    
    Cc: stable@vger.kernel.org
    Fixes: 0c4cd3f86a40 ("selftests: mptcp: join: use 'iptables-legacy' if available")
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Mat Martineau <martineau@kernel.org>
    Link: https://lore.kernel.org/r/20230725-send-net-20230725-v1-1-6f60fe7137a9@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aedec6019d7ce7e8dfbd1559aa82ce7b0ea22336
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Mon Jul 24 05:25:31 2023 +0200

    net: dsa: qca8k: fix mdb add/del case with 0 VID
    
    commit dfd739f182b00b02bd7470ed94d112684cc04fa2 upstream.
    
    The qca8k switch doesn't support using 0 as VID and require a default
    VID to be always set. MDB add/del function doesn't currently handle
    this and are currently setting the default VID.
    
    Fix this by correctly handling this corner case and internally use the
    default VID for VID 0 case.
    
    Fixes: ba8f870dfa63 ("net: dsa: qca8k: add support for mdb_add/del")
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 828f9526f0611c589c404826d9d96fe4d7e8ebfe
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Mon Jul 24 05:25:30 2023 +0200

    net: dsa: qca8k: fix broken search_and_del
    
    commit ae70dcb9d9ecaf7d9836d3e1b5bef654d7ef5680 upstream.
    
    On deleting an MDB entry for a port, fdb_search_and_del is used.
    An FDB entry can't be modified so it needs to be deleted and readded
    again with the new portmap (and the port deleted as requested)
    
    We use the SEARCH operator to search the entry to edit by vid and mac
    address and then we check the aging if we actually found an entry.
    
    Currently the code suffer from a bug where the searched fdb entry is
    never read again with the found values (if found) resulting in the code
    always returning -EINVAL as aging was always 0.
    
    Fix this by correctly read the fdb entry after it was searched.
    
    Fixes: ba8f870dfa63 ("net: dsa: qca8k: add support for mdb_add/del")
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d42c326288ac2f20eb1b6f1a1008433e061a84c8
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Mon Jul 24 05:25:29 2023 +0200

    net: dsa: qca8k: fix search_and_insert wrong handling of new rule
    
    commit 80248d4160894d7e40b04111bdbaa4ff93fc4bd7 upstream.
    
    On inserting a mdb entry, fdb_search_and_insert is used to add a port to
    the qca8k target entry in the FDB db.
    
    A FDB entry can't be modified so it needs to be removed and insert again
    with the new values.
    
    To detect if an entry already exist, the SEARCH operation is used and we
    check the aging of the entry. If the entry is not 0, the entry exist and
    we proceed to delete it.
    
    Current code have 2 main problem:
    - The condition to check if the FDB entry exist is wrong and should be
      the opposite.
    - When a FDB entry doesn't exist, aging was never actually set to the
      STATIC value resulting in allocating an invalid entry.
    
    Fix both problem by adding aging support to the function, calling the
    function with STATIC as aging by default and finally by correct the
    condition to check if the entry actually exist.
    
    Fixes: ba8f870dfa63 ("net: dsa: qca8k: add support for mdb_add/del")
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1fda7c1250f3142ece24fca8aab6a48a456d83c
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue Jul 25 03:20:49 2023 -0400

    virtio-net: fix race between set queues and probe
    
    commit 25266128fe16d5632d43ada34c847d7b8daba539 upstream.
    
    A race were found where set_channels could be called after registering
    but before virtnet_set_queues() in virtnet_probe(). Fixing this by
    moving the virtnet_set_queues() before netdevice registering. While at
    it, use _virtnet_set_queues() to avoid holding rtnl as the device is
    not even registered at that time.
    
    Cc: stable@vger.kernel.org
    Fixes: a220871be66f ("virtio-net: correctly enable multiqueue")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20230725072049.617289-1-jasowang@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd1a8952ff529adc210e62306849fd6f256608c0
Author: Demi Marie Obenour <demi@invisiblethingslab.com>
Date:   Wed Jul 26 12:52:41 2023 -0400

    xen: speed up grant-table reclaim
    
    commit c04e9894846c663f3278a414f34416e6e45bbe68 upstream.
    
    When a grant entry is still in use by the remote domain, Linux must put
    it on a deferred list.  Normally, this list is very short, because
    the PV network and block protocols expect the backend to unmap the grant
    first.  However, Qubes OS's GUI protocol is subject to the constraints
    of the X Window System, and as such winds up with the frontend unmapping
    the window first.  As a result, the list can grow very large, resulting
    in a massive memory leak and eventual VM freeze.
    
    To partially solve this problem, make the number of entries that the VM
    will attempt to free at each iteration tunable.  The default is still
    10, but it can be overridden via a module parameter.
    
    This is Cc: stable because (when combined with appropriate userspace
    changes) it fixes a severe performance and stability problem for Qubes
    OS users.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Demi Marie Obenour <demi@invisiblethingslab.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20230726165354.1252-1-demi@invisiblethingslab.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af7aa4fe94b3dc0652f7fb5369f78623e98b0310
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Tue Jul 25 20:03:16 2023 +0300

    proc/vmcore: fix signedness bug in read_from_oldmem()
    
    commit 641db40f3afe7998011bfabc726dba3e698f8196 upstream.
    
    The bug is the error handling:
    
            if (tmp < nr_bytes) {
    
    "tmp" can hold negative error codes but because "nr_bytes" is type size_t
    the negative error codes are treated as very high positive values
    (success).  Fix this by changing "nr_bytes" to type ssize_t.  The
    "nr_bytes" variable is used to store values between 1 and PAGE_SIZE and
    they can fit in ssize_t without any issue.
    
    Link: https://lkml.kernel.org/r/b55f7eed-1c65-4adc-95d1-6c7c65a54a6e@moroto.mountain
    Fixes: 5d8de293c224 ("vmcore: convert copy_oldmem_page() to take an iov_iter")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Acked-by: Baoquan He <bhe@redhat.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Vivek Goyal <vgoyal@redhat.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f1715d827dc6d1ad48e192ee2d45eef79166d4a
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Jul 7 16:19:09 2023 +0200

    locking/rtmutex: Fix task->pi_waiters integrity
    
    [ Upstream commit f7853c34241807bb97673a5e97719123be39a09e ]
    
    Henry reported that rt_mutex_adjust_prio_check() has an ordering
    problem and puts the lie to the comment in [7]. Sharing the sort key
    between lock->waiters and owner->pi_waiters *does* create problems,
    since unlike what the comment claims, holding [L] is insufficient.
    
    Notably, consider:
    
            A
          /   \
         M1   M2
         |     |
         B     C
    
    That is, task A owns both M1 and M2, B and C block on them. In this
    case a concurrent chain walk (B & C) will modify their resp. sort keys
    in [7] while holding M1->wait_lock and M2->wait_lock. So holding [L]
    is meaningless, they're different Ls.
    
    This then gives rise to a race condition between [7] and [11], where
    the requeue of pi_waiters will observe an inconsistent tree order.
    
            B                               C
    
      (holds M1->wait_lock,         (holds M2->wait_lock,
       holds B->pi_lock)             holds A->pi_lock)
    
      [7]
      waiter_update_prio();
      ...
      [8]
      raw_spin_unlock(B->pi_lock);
      ...
      [10]
      raw_spin_lock(A->pi_lock);
    
                                    [11]
                                    rt_mutex_enqueue_pi();
                                    // observes inconsistent A->pi_waiters
                                    // tree order
    
    Fixing this means either extending the range of the owner lock from
    [10-13] to [6-13], with the immediate problem that this means [6-8]
    hold both blocked and owner locks, or duplicating the sort key.
    
    Since the locking in chain walk is horrible enough without having to
    consider pi_lock nesting rules, duplicate the sort key instead.
    
    By giving each tree their own sort key, the above race becomes
    harmless, if C sees B at the old location, then B will correct things
    (if they need correcting) when it walks up the chain and reaches A.
    
    Fixes: fb00aca47440 ("rtmutex: Turn the plist into an rb-tree")
    Reported-by: Henry Wu <triangletrap12@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Henry Wu <triangletrap12@gmail.com>
    Link: https://lkml.kernel.org/r/20230707161052.GF2883469%40hirez.programming.kicks-ass.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d392d2d72af36925513c48e1b8cae1d332227c0a
Author: Marc Zyngier <maz@kernel.org>
Date:   Sat Jun 17 08:32:42 2023 +0100

    irqchip/gic-v4.1: Properly lock VPEs when doing a directLPI invalidation
    
    [ Upstream commit 926846a703cbf5d0635cc06e67d34b228746554b ]
    
    We normally rely on the irq_to_cpuid_[un]lock() primitives to make
    sure nothing will change col->idx while performing a LPI invalidation.
    
    However, these primitives do not cover VPE doorbells, and we have
    some open-coded locking for that. Unfortunately, this locking is
    pretty bogus.
    
    Instead, extend the above primitives to cover VPE doorbells and
    convert the whole thing to it.
    
    Fixes: f3a059219bc7 ("irqchip/gic-v4.1: Ensure mutual exclusion between vPE affinity change and RD access")
    Reported-by: Kunkun Jiang <jiangkunkun@huawei.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: Zenghui Yu <yuzenghui@huawei.com>
    Cc: wanghaibin.wang@huawei.com
    Tested-by: Kunkun Jiang <jiangkunkun@huawei.com>
    Reviewed-by: Zenghui Yu <yuzenghui@huawei.com>
    Link: https://lore.kernel.org/r/20230617073242.3199746-1-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a80d2cb27d39f039f3e9cfd952ec675792ab01c8
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Thu Jun 29 09:26:20 2023 +0200

    irq-bcm6345-l1: Do not assume a fixed block to cpu mapping
    
    [ Upstream commit 55ad24857341c36616ecc1d9580af5626c226cf1 ]
    
    The irq to block mapping is fixed, and interrupts from the first block
    will always be routed to the first parent IRQ. But the parent interrupts
    themselves can be routed to any available CPU.
    
    This is used by the bootloader to map the first parent interrupt to the
    boot CPU, regardless wether the boot CPU is the first one or the second
    one.
    
    When booting from the second CPU, the assumption that the first block's
    IRQ is mapped to the first CPU breaks, and the system hangs because
    interrupts do not get routed correctly.
    
    Fix this by passing the appropriate bcm6434_l1_cpu to the interrupt
    handler instead of the chip itself, so the handler always has the right
    block.
    
    Fixes: c7c42ec2baa1 ("irqchips/bmips: Add bcm6345-l1 interrupt controller")
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Reviewed-by: Philippe Mathieu-Daudé <philmd@linaro.org>
    Reviewed-by: Florian Fainelli <florian.fainelli@broadcom.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230629072620.62527-1-jonas.gorski@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2edb87931afd1002c1d38aeea8bd113d7db02075
Author: Alexander Steffen <Alexander.Steffen@infineon.com>
Date:   Tue Jun 13 20:02:56 2023 +0200

    tpm_tis: Explicitly check for error code
    
    commit 513253f8c293c0c8bd46d09d337fc892bf8f9f48 upstream.
    
    recv_data either returns the number of received bytes, or a negative value
    representing an error code. Adding the return value directly to the total
    number of received bytes therefore looks a little weird, since it might add
    a negative error code to a sum of bytes.
    
    The following check for size < expected usually makes the function return
    ETIME in that case, so it does not cause too many problems in practice. But
    to make the code look cleaner and because the caller might still be
    interested in the original error code, explicitly check for the presence of
    an error code and pass that through.
    
    Cc: stable@vger.kernel.org
    Fixes: cb5354253af2 ("[PATCH] tpm: spacing cleanups 2")
    Signed-off-by: Alexander Steffen <Alexander.Steffen@infineon.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9af433b113892e7141990ab9574dccc53608bd5
Author: Guanghui Feng <guanghuifeng@linux.alibaba.com>
Date:   Mon Jul 17 19:33:45 2023 +0800

    ACPI/IORT: Remove erroneous id_count check in iort_node_get_rmr_info()
    
    commit 003e6b56d780095a9adc23efc9cb4b4b4717169b upstream.
    
    According to the ARM IORT specifications DEN 0049 issue E,
    the "Number of IDs" field in the ID mapping format reports
    the number of IDs in the mapping range minus one.
    
    In iort_node_get_rmr_info(), we erroneously skip ID mappings
    whose "Number of IDs" equal to 0, resulting in valid mapping
    nodes with a single ID to map being skipped, which is wrong.
    
    Fix iort_node_get_rmr_info() by removing the bogus id_count
    check.
    
    Fixes: 491cf4a6735a ("ACPI/IORT: Add support to retrieve IORT RMR reserved regions")
    Signed-off-by: Guanghui Feng <guanghuifeng@linux.alibaba.com>
    Cc: <stable@vger.kernel.org> # 6.0.x
    Acked-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Tested-by: Hanjun Guo <guohanjun@huawei.com>
    Link: https://lore.kernel.org/r/1689593625-45213-1-git-send-email-guanghuifeng@linux.alibaba.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d79f730bb8079948bb1c2d2e2b3205cba7152ca2
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Jul 18 08:38:37 2023 -0400

    nfsd: Remove incorrect check in nfsd4_validate_stateid
    
    commit f75546f58a70da5cfdcec5a45ffc377885ccbee8 upstream.
    
    If the client is calling TEST_STATEID, then it is because some event
    occurred that requires it to check all the stateids for validity and
    call FREE_STATEID on the ones that have been revoked. In this case,
    either the stateid exists in the list of stateids associated with that
    nfs4_client, in which case it should be tested, or it does not. There
    are no additional conditions to be considered.
    
    Reported-by: "Frank Ch. Eigler" <fche@redhat.com>
    Fixes: 7df302f75ee2 ("NFSD: TEST_STATEID should not return NFS4ERR_STALE_STATEID")
    Cc: stable@vger.kernel.org # v5.7+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5a87723e8c7ab68b09ac568fa3421258f52d928
Author: Christian Brauner <brauner@kernel.org>
Date:   Mon Jul 24 17:00:49 2023 +0200

    file: always lock position for FMODE_ATOMIC_POS
    
    commit 20ea1e7d13c1b544fe67c4a8dc3943bb1ab33e6f upstream.
    
    The pidfd_getfd() system call allows a caller with ptrace_may_access()
    abilities on another process to steal a file descriptor from this
    process. This system call is used by debuggers, container runtimes,
    system call supervisors, networking proxies etc. So while it is a
    special interest system call it is used in common tools.
    
    That ability ends up breaking our long-time optimization in fdget_pos(),
    which "knew" that if we had exclusive access to the file descriptor
    nobody else could access it, and we didn't need the lock for the file
    position.
    
    That check for file_count(file) was always fairly subtle - it depended
    on __fdget() not incrementing the file count for single-threaded
    processes and thus included that as part of the rule - but it did mean
    that we didn't need to take the lock in all those traditional unix
    process contexts.
    
    So it's sad to see this go, and I'd love to have some way to re-instate
    the optimization. At the same time, the lock obviously isn't ever
    contended in the case we optimized, so all we were optimizing away is
    the atomics and the cacheline dirtying. Let's see if anybody even
    notices that the optimization is gone.
    
    Link: https://lore.kernel.org/linux-fsdevel/20230724-vfs-fdget_pos-v1-1-a4abfd7103f3@kernel.org/
    Fixes: 8649c322f75c ("pid: Implement pidfd_getfd syscall")
    Cc: stable@kernel.org
    Signed-off-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2663e2cb91a7328a05a11402ba6d18e9fd9ac289
Author: Yazen Ghannam <yazen.ghannam@amd.com>
Date:   Mon Jun 6 19:45:56 2022 +0000

    x86/MCE/AMD: Decrement threshold_bank refcount when removing threshold blocks
    
    commit 3ba2e83334bed2b1980b59734e6e84dfaf96026c upstream.
    
    AMD systems from Family 10h to 16h share MCA bank 4 across multiple CPUs.
    Therefore, the threshold_bank structure for bank 4, and its threshold_block
    structures, will be initialized once at boot time. And the kobject for the
    shared bank will be added to each of the CPUs that share it. Furthermore,
    the threshold_blocks for the shared bank will be added again to the bank's
    kobject. These additions will increase the refcount for the bank's kobject.
    
    For example, a shared bank with two blocks and shared across two CPUs will
    be set up like this:
    
      CPU0 init
        bank create and add; bank refcount = 1; threshold_create_bank()
          block 0 init and add; bank refcount = 2; allocate_threshold_blocks()
          block 1 init and add; bank refcount = 3; allocate_threshold_blocks()
      CPU1 init
        bank add; bank refcount = 3; threshold_create_bank()
          block 0 add; bank refcount = 4; __threshold_add_blocks()
          block 1 add; bank refcount = 5; __threshold_add_blocks()
    
    Currently in threshold_remove_bank(), if the bank is shared then
    __threshold_remove_blocks() is called. Here the shared bank's kobject and
    the bank's blocks' kobjects are deleted. This is done on the first call
    even while the structures are still shared. Subsequent calls from other
    CPUs that share the structures will attempt to delete the kobjects.
    
    During kobject_del(), kobject->sd is removed. If the kobject is not part of
    a kset with default_groups, then subsequent kobject_del() calls seem safe
    even with kobject->sd == NULL.
    
    Originally, the AMD MCA thresholding structures did not use default_groups.
    And so the above behavior was not apparent.
    
    However, a recent change implemented default_groups for the thresholding
    structures. Therefore, kobject_del() will go down the sysfs_remove_groups()
    code path. In this case, the first kobject_del() may succeed and remove
    kobject->sd. But subsequent kobject_del() calls will give a WARNing in
    kernfs_remove_by_name_ns() since kobject->sd == NULL.
    
    Use kobject_put() on the shared bank's kobject when "removing" blocks. This
    decrements the bank's refcount while keeping kobjects enabled until the
    bank is no longer shared. At that point, kobject_put() will be called on
    the blocks which drives their refcount to 0 and deletes them and also
    decrementing the bank's refcount. And finally kobject_put() will be called
    on the bank driving its refcount to 0 and deleting it.
    
    The same example above:
    
      CPU1 shutdown
        bank is shared; bank refcount = 5; threshold_remove_bank()
          block 0 put parent bank; bank refcount = 4; __threshold_remove_blocks()
          block 1 put parent bank; bank refcount = 3; __threshold_remove_blocks()
      CPU0 shutdown
        bank is no longer shared; bank refcount = 3; threshold_remove_bank()
          block 0 put block; bank refcount = 2; deallocate_threshold_blocks()
          block 1 put block; bank refcount = 1; deallocate_threshold_blocks()
        put bank; bank refcount = 0; threshold_remove_bank()
    
    Fixes: 7f99cb5e6039 ("x86/CPU/AMD: Use default_groups in kobj_type")
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Tested-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: <stable@kernel.org>
    Link: https://lore.kernel.org/r/alpine.LRH.2.02.2205301145540.25840@file01.intranet.prod.int.rdu2.redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 360c98f5830d09e0860296c50eb901da24922580
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Jul 21 10:49:21 2023 +0100

    btrfs: check for commit error at btrfs_attach_transaction_barrier()
    
    commit b28ff3a7d7e97456fd86b68d24caa32e1cfa7064 upstream.
    
    btrfs_attach_transaction_barrier() is used to get a handle pointing to the
    current running transaction if the transaction has not started its commit
    yet (its state is < TRANS_STATE_COMMIT_START). If the transaction commit
    has started, then we wait for the transaction to commit and finish before
    returning - however we completely ignore if the transaction was aborted
    due to some error during its commit, we simply return ERR_PT(-ENOENT),
    which makes the caller assume everything is fine and no errors happened.
    
    This could make an fsync return success (0) to user space when in fact we
    had a transaction abort and the target inode changes were therefore not
    persisted.
    
    Fix this by checking for the return value from btrfs_wait_for_commit(),
    and if it returned an error, return it back to the caller.
    
    Fixes: d4edf39bd5db ("Btrfs: fix uncompleted transaction")
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7b85dc3164445a22ff7c073e563451f4be8e04d
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Jul 21 10:49:20 2023 +0100

    btrfs: check if the transaction was aborted at btrfs_wait_for_commit()
    
    commit bf7ecbe9875061bf3fce1883e3b26b77f847d1e8 upstream.
    
    At btrfs_wait_for_commit() we wait for a transaction to finish and then
    always return 0 (success) without checking if it was aborted, in which
    case the transaction didn't happen due to some critical error. Fix this
    by checking if the transaction was aborted.
    
    Fixes: 462045928bda ("Btrfs: add START_SYNC, WAIT_SYNC ioctls")
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbec34d3021d47007a0334c634f7053dbaf93d02
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Jul 20 12:44:33 2023 +0100

    btrfs: account block group tree when calculating global reserve size
    
    commit 8dbfc14fc736eb701089aff09645c3d4ad3decb1 upstream.
    
    When using the block group tree feature, this tree is a critical tree just
    like the extent, csum and free space trees, and just like them it uses the
    delayed refs block reserve.
    
    So take into account the block group tree, and its current size, when
    calculating the size for the global reserve.
    
    CC: stable@vger.kernel.org # 6.1+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fec6f7903f91996f54873616e858815f30b153c
Author: Gilles Buloz <Gilles.Buloz@kontron.com>
Date:   Mon Jul 24 08:04:44 2023 +0000

    hwmon: (nct7802) Fix for temp6 (PECI1) processed even if PECI1 disabled
    
    commit 54685abe660a59402344d5045ce08c43c6a5ac42 upstream.
    
    Because of hex value 0x46 used instead of decimal 46, the temp6
    (PECI1) temperature is always declared visible and then displayed
    even if disabled in the chip
    
    Signed-off-by: Gilles Buloz <gilles.buloz@kontron.com>
    Link: https://lore.kernel.org/r/DU0PR10MB62526435ADBC6A85243B90E08002A@DU0PR10MB6252.EURPRD10.PROD.OUTLOOK.COM
    Fixes: fcdc5739dce03 ("hwmon: (nct7802) add temperature sensor type attribute")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85f8077893ec5e115f7bff45e538d8bc8c762451
Author: Baskaran Kannan <Baski.Kannan@amd.com>
Date:   Thu Jul 27 11:21:59 2023 -0500

    hwmon: (k10temp) Enable AMD3255 Proc to show negative temperature
    
    commit e146503ac68418859fb063a3a0cd9ec93bc52238 upstream.
    
    Industrial processor i3255 supports temperatures -40 deg celcius
    to 105 deg Celcius. The current implementation of k10temp_read_temp
    rounds off any negative temperatures to '0'. To fix this,
    the following changes have been made.
    
    A flag 'disp_negative' is added to struct k10temp_data to support
    AMD i3255 processors. Flag 'disp_negative' is set if 3255 processor
    is found during k10temp_probe.  Flag 'disp_negative' is used to
    determine whether to round off negative temperatures to '0' in
    k10temp_read_temp.
    
    Signed-off-by: Baskaran Kannan <Baski.Kannan@amd.com>
    Link: https://lore.kernel.org/r/20230727162159.1056136-1-Baski.Kannan@amd.com
    Fixes: aef17ca12719 ("hwmon: (k10temp) Only apply temperature offset if result is positive")
    Cc: stable@vger.kernel.org
    [groeck: Fixed multi-line comment]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf7b30dc16da3ca9d9a0251aa960577bf8faa443
Author: Luka Guzenko <l.guzenko@web.de>
Date:   Tue Jul 25 13:15:09 2023 +0200

    ALSA: hda/relatek: Enable Mute LED on HP 250 G8
    
    commit d510acb610e6aa07a04b688236868b2a5fd60deb upstream.
    
    This HP Notebook used ALC236 codec with COEF 0x07 idx 1 controlling
    the mute LED. Enable already existing quirk for this device.
    
    Signed-off-by: Luka Guzenko <l.guzenko@web.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230725111509.623773-1-l.guzenko@web.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db3c5ca314009c6de902a6b5ec5c104ff2154595
Author: Pavel Asyutchenko <svenpavel@gmail.com>
Date:   Thu Jul 27 01:37:32 2023 +0300

    ALSA: hda/realtek: Support ASUS G713PV laptop
    
    commit 8019a4ab3d80c7af391a646cccff953753fc025f upstream.
    
    This laptop has CS35L41 amp connected via I2C.
    
    With this patch speakers begin to work if the
    missing _DSD properties are added to ACPI tables.
    
    Signed-off-by: Pavel Asyutchenko <svenpavel@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230726223732.20775-1-svenpavel@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96a0b80eb1b02e1330d525d4c866ccdfa8c67434
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jul 13 13:28:10 2023 +0200

    Revert "xhci: add quirk for host controllers that don't update endpoint DCS"
    
    commit 5bef4b3cb95a5b883dfec8b3ffc0d671323d55bb upstream.
    
    This reverts commit 5255660b208aebfdb71d574f3952cf48392f4306.
    
    This quirk breaks at least the following hardware:
    
    0b:00.0 0c03: 1106:3483 (rev 01) (prog-if 30 [XHCI])
            Subsystem: 1106:3483
            Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+
            Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
            Latency: 0, Cache Line Size: 64 bytes
            Interrupt: pin A routed to IRQ 66
            Region 0: Memory at fb400000 (64-bit, non-prefetchable) [size=4K]
            Capabilities: [80] Power Management version 3
                    Flags: PMEClk- DSI- D1- D2- AuxCurrent=375mA PME(D0+,D1+,D2+,D3hot+,D3cold+)
                    Status: D0 NoSoftRst- PME-Enable- DSel=0 DScale=0 PME-
            Capabilities: [90] MSI: Enable+ Count=1/4 Maskable- 64bit+
                    Address: 00000000fee007b8  Data: 0000
            Capabilities: [c4] Express (v2) Endpoint, MSI 00
                    DevCap: MaxPayload 256 bytes, PhantFunc 0, Latency L0s <64ns, L1 <1us
                            ExtTag- AttnBtn- AttnInd- PwrInd- RBE+ FLReset- SlotPowerLimit 89W
                    DevCtl: CorrErr- NonFatalErr- FatalErr- UnsupReq-
                            RlxdOrd- ExtTag- PhantFunc- AuxPwr- NoSnoop+
                            MaxPayload 128 bytes, MaxReadReq 512 bytes
                    DevSta: CorrErr- NonFatalErr- FatalErr- UnsupReq- AuxPwr+ TransPend-
                    LnkCap: Port #0, Speed 5GT/s, Width x1, ASPM L0s L1, Exit Latency L0s <2us, L1 <16us
                            ClockPM+ Surprise- LLActRep- BwNot- ASPMOptComp-
                    LnkCtl: ASPM Disabled; RCB 64 bytes, Disabled- CommClk+
                            ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
                    LnkSta: Speed 5GT/s, Width x1
                            TrErr- Train- SlotClk+ DLActive- BWMgmt- ABWMgmt-
                    DevCap2: Completion Timeout: Range B, TimeoutDis+ NROPrPrP- LTR-
                             10BitTagComp- 10BitTagReq- OBFF Not Supported, ExtFmt- EETLPPrefix-
                             EmergencyPowerReduction Not Supported, EmergencyPowerReductionInit-
                             FRS- TPHComp- ExtTPHComp-
                             AtomicOpsCap: 32bit- 64bit- 128bitCAS-
                    DevCtl2: Completion Timeout: 50us to 50ms, TimeoutDis- LTR- 10BitTagReq- OBFF Disabled,
                             AtomicOpsCtl: ReqEn-
                    LnkCtl2: Target Link Speed: 5GT/s, EnterCompliance- SpeedDis-
                             Transmit Margin: Normal Operating Range, EnterModifiedCompliance- ComplianceSOS-
                             Compliance Preset/De-emphasis: -6dB de-emphasis, 0dB preshoot
                    LnkSta2: Current De-emphasis Level: -6dB, EqualizationComplete- EqualizationPhase1-
                             EqualizationPhase2- EqualizationPhase3- LinkEqualizationRequest-
                             Retimer- 2Retimers- CrosslinkRes: unsupported
           Capabilities: [100 v1] Advanced Error Reporting
                    UESta:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq- ACSViol-
                    UEMsk:  DLP- SDES- TLP- FCP- CmpltTO- CmpltAbrt- UnxCmplt- RxOF- MalfTLP- ECRC- UnsupReq- ACSViol-
                    UESvrt: DLP+ SDES+ TLP- FCP+ CmpltTO- CmpltAbrt- UnxCmplt- RxOF+ MalfTLP+ ECRC- UnsupReq- ACSViol-
                    CESta:  RxErr- BadTLP- BadDLLP- Rollover- Timeout- AdvNonFatalErr-
                    CEMsk:  RxErr- BadTLP- BadDLLP- Rollover- Timeout- AdvNonFatalErr+
                    AERCap: First Error Pointer: 00, ECRCGenCap- ECRCGenEn- ECRCChkCap- ECRCChkEn-
                            MultHdrRecCap- MultHdrRecEn- TLPPfxPres- HdrLogCap-
                    HeaderLog: 00000000 00000000 00000000 00000000
            Kernel driver in use: xhci_hcd
            Kernel modules: xhci_pci
    
    with the quirk enabled it fails early with
    
    [    0.754373] pci 0000:0b:00.0: xHCI HW did not halt within 32000 usec status = 0x1000
    [    0.754419] pci 0000:0b:00.0: quirk_usb_early_handoff+0x0/0x7a0 took 31459 usecs
    [    2.228048] xhci_hcd 0000:0b:00.0: xHCI Host Controller
    [    2.228053] xhci_hcd 0000:0b:00.0: new USB bus registered, assigned bus number 7
    [    2.260073] xhci_hcd 0000:0b:00.0: Host halt failed, -110
    [    2.260079] xhci_hcd 0000:0b:00.0: can't setup: -110
    [    2.260551] xhci_hcd 0000:0b:00.0: USB bus 7 deregistered
    [    2.260624] xhci_hcd 0000:0b:00.0: init 0000:0b:00.0 fail, -110
    [    2.260639] xhci_hcd: probe of 0000:0b:00.0 failed with error -110
    
    The hardware in question is an external PCIe card. It looks to me like the quirk
    needs to be narrowed down. But this needs information about the hardware showing
    the issue this quirk is to fix. So for now a clean revert.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Fixes: 5255660b208a ("xhci: add quirk for host controllers that don't update endpoint DCS")
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/20230713112830.21773-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9615ca54bc138e35353a001e8b5d4824dce72188
Author: Chaoyuan Peng <hedonistsmith@gmail.com>
Date:   Tue Jul 18 04:39:43 2023 +0000

    tty: n_gsm: fix UAF in gsm_cleanup_mux
    
    commit 9b9c8195f3f0d74a826077fc1c01b9ee74907239 upstream.
    
    In gsm_cleanup_mux() the 'gsm->dlci' pointer was not cleaned properly,
    leaving it a dangling pointer after gsm_dlci_release.
    This leads to use-after-free where 'gsm->dlci[0]' are freed and accessed
    by the subsequent gsm_cleanup_mux().
    
    Such is the case in the following call trace:
    
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0x1e3/0x2cb lib/dump_stack.c:106
     print_address_description+0x63/0x3b0 mm/kasan/report.c:248
     __kasan_report mm/kasan/report.c:434 [inline]
     kasan_report+0x16b/0x1c0 mm/kasan/report.c:451
     gsm_cleanup_mux+0x76a/0x850 drivers/tty/n_gsm.c:2397
     gsm_config drivers/tty/n_gsm.c:2653 [inline]
     gsmld_ioctl+0xaae/0x15b0 drivers/tty/n_gsm.c:2986
     tty_ioctl+0x8ff/0xc50 drivers/tty/tty_io.c:2816
     vfs_ioctl fs/ioctl.c:51 [inline]
     __do_sys_ioctl fs/ioctl.c:874 [inline]
     __se_sys_ioctl+0xf1/0x160 fs/ioctl.c:860
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x61/0xcb
     </TASK>
    
    Allocated by task 3501:
     kasan_save_stack mm/kasan/common.c:38 [inline]
     kasan_set_track mm/kasan/common.c:46 [inline]
     set_alloc_info mm/kasan/common.c:434 [inline]
     ____kasan_kmalloc+0xba/0xf0 mm/kasan/common.c:513
     kasan_kmalloc include/linux/kasan.h:264 [inline]
     kmem_cache_alloc_trace+0x143/0x290 mm/slub.c:3247
     kmalloc include/linux/slab.h:591 [inline]
     kzalloc include/linux/slab.h:721 [inline]
     gsm_dlci_alloc+0x53/0x3a0 drivers/tty/n_gsm.c:1932
     gsm_activate_mux+0x1c/0x330 drivers/tty/n_gsm.c:2438
     gsm_config drivers/tty/n_gsm.c:2677 [inline]
     gsmld_ioctl+0xd46/0x15b0 drivers/tty/n_gsm.c:2986
     tty_ioctl+0x8ff/0xc50 drivers/tty/tty_io.c:2816
     vfs_ioctl fs/ioctl.c:51 [inline]
     __do_sys_ioctl fs/ioctl.c:874 [inline]
     __se_sys_ioctl+0xf1/0x160 fs/ioctl.c:860
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x61/0xcb
    
    Freed by task 3501:
     kasan_save_stack mm/kasan/common.c:38 [inline]
     kasan_set_track+0x4b/0x80 mm/kasan/common.c:46
     kasan_set_free_info+0x1f/0x40 mm/kasan/generic.c:360
     ____kasan_slab_free+0xd8/0x120 mm/kasan/common.c:366
     kasan_slab_free include/linux/kasan.h:230 [inline]
     slab_free_hook mm/slub.c:1705 [inline]
     slab_free_freelist_hook+0xdd/0x160 mm/slub.c:1731
     slab_free mm/slub.c:3499 [inline]
     kfree+0xf1/0x270 mm/slub.c:4559
     dlci_put drivers/tty/n_gsm.c:1988 [inline]
     gsm_dlci_release drivers/tty/n_gsm.c:2021 [inline]
     gsm_cleanup_mux+0x574/0x850 drivers/tty/n_gsm.c:2415
     gsm_config drivers/tty/n_gsm.c:2653 [inline]
     gsmld_ioctl+0xaae/0x15b0 drivers/tty/n_gsm.c:2986
     tty_ioctl+0x8ff/0xc50 drivers/tty/tty_io.c:2816
     vfs_ioctl fs/ioctl.c:51 [inline]
     __do_sys_ioctl fs/ioctl.c:874 [inline]
     __se_sys_ioctl+0xf1/0x160 fs/ioctl.c:860
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x61/0xcb
    
    Fixes: aa371e96f05d ("tty: n_gsm: fix restart handling via CLD command")
    Signed-off-by: Chaoyuan Peng <hedonistsmith@gmail.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ae9f55a495077f838bab466411ee6f38574df9b
Author: Zhang Shurong <zhang_shurong@foxmail.com>
Date:   Sun Jul 9 13:50:07 2023 +0800

    staging: ks7010: potential buffer overflow in ks_wlan_set_encode_ext()
    
    commit 5f1c7031e044cb2fba82836d55cc235e2ad619dc upstream.
    
    The "exc->key_len" is a u16 that comes from the user.  If it's over
    IW_ENCODING_TOKEN_MAX (64) that could lead to memory corruption.
    
    Fixes: b121d84882b9 ("staging: ks7010: simplify calls to memcpy()")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Zhang Shurong <zhang_shurong@foxmail.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/tencent_5153B668C0283CAA15AA518325346E026A09@qq.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41e05572e871b10dbdc168c76175c97982daf4a4
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Fri Jul 14 12:54:17 2023 -0500

    staging: r8712: Fix memory leak in _r8712_init_xmit_priv()
    
    commit ac83631230f77dda94154ed0ebfd368fc81c70a3 upstream.
    
    In the above mentioned routine, memory is allocated in several places.
    If the first succeeds and a later one fails, the routine will leak memory.
    This patch fixes commit 2865d42c78a9 ("staging: r8712u: Add the new driver
    to the mainline kernel"). A potential memory leak in
    r8712_xmit_resource_alloc() is also addressed.
    
    Fixes: 2865d42c78a9 ("staging: r8712u: Add the new driver to the mainline kernel")
    Reported-by: syzbot+cf71097ffb6755df8251@syzkaller.appspotmail.com
    Closes: https://syzkaller.appspot.com/x/log.txt?x=11ac3fa0a80000
    Cc: stable@vger.kernel.org
    Cc: Nam Cao <namcaov@gmail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Reviewed-by: Nam Cao <namcaov@gmail.com>
    Link: https://lore.kernel.org/r/20230714175417.18578-1-Larry.Finger@lwfinger.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef301c41a10e40c863a8ba12faf450deca15a66a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jun 30 09:14:21 2023 +0200

    Documentation: security-bugs.rst: clarify CVE handling
    
    commit 3c1897ae4b6bc7cc586eda2feaa2cd68325ec29c upstream.
    
    The kernel security team does NOT assign CVEs, so document that properly
    and provide the "if you want one, ask MITRE for it" response that we
    give on a weekly basis in the document, so we don't have to constantly
    say it to everyone who asks.
    
    Link: https://lore.kernel.org/r/2023063022-retouch-kerosene-7e4a@gregkh
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddb9503d1c2ee4985ed02ce68a4623768dc642e7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jun 30 09:14:20 2023 +0200

    Documentation: security-bugs.rst: update preferences when dealing with the linux-distros group
    
    commit 4fee0915e649bd0cea56dece6d96f8f4643df33c upstream.
    
    Because the linux-distros group forces reporters to release information
    about reported bugs, and they impose arbitrary deadlines in having those
    bugs fixed despite not actually being kernel developers, the kernel
    security team recommends not interacting with them at all as this just
    causes confusion and the early-release of reported security problems.
    
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/2023063020-throat-pantyhose-f110@gregkh
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ae3d7941f8d0e21112d9d7772eae61deba28fb3
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Tue Jul 4 17:08:27 2023 +0300

    Revert "usb: xhci: tegra: Fix error check"
    
    commit 288b4fa1798e3637a9304c6e90a93d900e02369c upstream.
    
    This reverts commit 18fc7c435be3f17ea26a21b2e2312fcb9088e01f.
    
    The reverted commit was based on static analysis and a misunderstanding
    of how PTR_ERR() and NULLs are supposed to work.  When a function
    returns both pointer errors and NULL then normally the NULL means
    "continue operating without a feature because it was deliberately
    turned off".  The NULL should not be treated as a failure.  If a driver
    cannot work when that feature is disabled then the KConfig should
    enforce that the function cannot return NULL.  We should not need to
    test for it.
    
    In this code, the patch means that certain tegra_xusb_probe() will
    fail if the firmware supports power-domains but CONFIG_PM is disabled.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Fixes: 18fc7c435be3 ("usb: xhci: tegra: Fix error check")
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/8baace8d-fb4b-41a4-ad5f-848ae643a23b@moroto.mountain
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf8203ea19ef3917fdf97a72684061c84930e496
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Jul 19 13:01:04 2023 +0000

    usb: xhci-mtk: set the dma max_seg_size
    
    commit 9fd10829a9eb482e192a845675ecc5480e0bfa10 upstream.
    
    Allow devices to have dma operations beyond 64K, and avoid warnings such
    as:
    
    DMA-API: xhci-mtk 11200000.usb: mapping sg segment longer than device claims to support [len=98304] [max=65536]
    
    Fixes: 0cbd4b34cda9 ("xhci: mediatek: support MTK xHCI host controller")
    Cc: stable <stable@kernel.org>
    Tested-by: Zubin Mithra <zsm@chromium.org>
    Reported-by: Zubin Mithra <zsm@chromium.org>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Link: https://lore.kernel.org/r/20230628-mtk-usb-v2-1-c8c34eb9f229@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0ebcc7e7fb1512cd2cc6100164b356c20feba63
Author: Frank Li <Frank.Li@nxp.com>
Date:   Fri Jul 7 19:00:15 2023 -0400

    usb: cdns3: fix incorrect calculation of ep_buf_size when more than one config
    
    commit 2627335a1329a0d39d8d277994678571c4f21800 upstream.
    
    Previously, the cdns3_gadget_check_config() function in the cdns3 driver
    mistakenly calculated the ep_buf_size by considering only one
    configuration's endpoint information because "claimed" will be clear after
    call usb_gadget_check_config().
    
    The fix involves checking the private flags EP_CLAIMED instead of relying
    on the "claimed" flag.
    
    Fixes: dce49449e04f ("usb: cdns3: allocate TX FIFO size according to composite EP number")
    Cc: stable <stable@kernel.org>
    Reported-by: Ravi Gunasekaran <r-gunasekaran@ti.com>
    Signed-off-by: Frank Li <Frank.Li@nxp.com>
    Acked-by: Peter Chen <peter.chen@kernel.org>
    Tested-by: Ravi Gunasekaran <r-gunasekaran@ti.com>
    Link: https://lore.kernel.org/r/20230707230015.494999-2-Frank.Li@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9590eeef4d65b881766765541a2bb20b5182b8e7
Author: Łukasz Bartosik <lb@semihalf.com>
Date:   Mon Jul 24 13:29:11 2023 +0200

    USB: quirks: add quirk for Focusrite Scarlett
    
    commit 9dc162e22387080e2d06de708b89920c0e158c9a upstream.
    
    The Focusrite Scarlett audio device does not behave correctly during
    resumes. Below is what happens during every resume (captured with
    Beagle 5000):
    
    <Suspend>
    <Resume>
    <Reset>/<Chirp J>/<Tiny J>
    <Reset/Target disconnected>
    <High Speed>
    
    The Scarlett disconnects and is enumerated again.
    
    However from time to time it drops completely off the USB bus during
    resume. Below is captured occurrence of such an event:
    
    <Suspend>
    <Resume>
    <Reset>/<Chirp J>/<Tiny J>
    <Reset>/<Chirp K>/<Tiny K>
    <High Speed>
    <Corrupted packet>
    <Reset/Target disconnected>
    
    To fix the condition a user has to unplug and plug the device again.
    
    With USB_QUIRK_RESET_RESUME applied ("usbcore.quirks=1235:8211:b")
    for the Scarlett audio device the issue still reproduces.
    
    Applying USB_QUIRK_DISCONNECT_SUSPEND ("usbcore.quirks=1235:8211:m")
    fixed the issue and the Scarlett audio device didn't drop off the USB
    bus for ~5000 suspend/resume cycles where originally issue reproduced in
    ~100 or less suspend/resume cycles.
    
    Signed-off-by: Łukasz Bartosik <lb@semihalf.com>
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/20230724112911.1802577-1-lb@semihalf.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98a6054d51cc96fc486897bc1630617d8ec8dcaf
Author: Guiting Shen <aarongt.shen@gmail.com>
Date:   Mon Jun 26 23:27:13 2023 +0800

    usb: ohci-at91: Fix the unhandle interrupt when resume
    
    commit c55afcbeaa7a6f4fffdbc999a9bf3f0b29a5186f upstream.
    
    The ohci_hcd_at91_drv_suspend() sets ohci->rh_state to OHCI_RH_HALTED when
    suspend which will let the ohci_irq() skip the interrupt after resume. And
    nobody to handle this interrupt.
    
    According to the comment in ohci_hcd_at91_drv_suspend(), it need to reset
    when resume from suspend(MEM) to fix by setting "hibernated" argument of
    ohci_resume().
    
    Signed-off-by: Guiting Shen <aarongt.shen@gmail.com>
    Cc: stable <stable@kernel.org>
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20230626152713.18950-1-aarongt.shen@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a280625541906b7a9ea4cf3c1b8a8131ba4ab761
Author: Xu Yang <xu.yang_2@nxp.com>
Date:   Wed Jul 5 17:52:31 2023 +0800

    usb: misc: ehset: fix wrong if condition
    
    commit 7f2327666a9080e428166964e37548b0168cd5e9 upstream.
    
    A negative number from ret means the host controller had failed to send
    usb message and 0 means succeed. Therefore, the if logic is wrong here
    and this patch will fix it.
    
    Fixes: f2b42379c576 ("usb: misc: ehset: Rework test mode entry")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Xu Yang <xu.yang_2@nxp.com>
    Link: https://lore.kernel.org/r/20230705095231.457860-1-xu.yang_2@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1fad1695befef3c3ae5f185ed0f8f394b9962ae
Author: Jisheng Zhang <jszhang@kernel.org>
Date:   Wed Jun 28 00:20:18 2023 +0800

    usb: dwc3: don't reset device side if dwc3 was configured as host-only
    
    commit e835c0a4e23c38531dcee5ef77e8d1cf462658c7 upstream.
    
    Commit c4a5153e87fd ("usb: dwc3: core: Power-off core/PHYs on
    system_suspend in host mode") replaces check for HOST only dr_mode with
    current_dr_role. But during booting, the current_dr_role isn't
    initialized, thus the device side reset is always issued even if dwc3
    was configured as host-only. What's more, on some platforms with host
    only dwc3, aways issuing device side reset by accessing device register
    block can cause kernel panic.
    
    Fixes: c4a5153e87fd ("usb: dwc3: core: Power-off core/PHYs on system_suspend in host mode")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Jisheng Zhang <jszhang@kernel.org>
    Acked-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/20230627162018.739-1-jszhang@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84ff2e988b0bc45810c1c87da4ddf987163b3a56
Author: Gratian Crisan <gratian.crisan@ni.com>
Date:   Wed Jul 26 13:45:56 2023 -0500

    usb: dwc3: pci: skip BYT GPIO lookup table for hardwired phy
    
    commit b32b8f2b9542d8039f5468303a6ca78c1b5611a5 upstream.
    
    Hardware based on the Bay Trail / BYT SoCs require an external ULPI phy for
    USB device-mode. The phy chip usually has its 'reset' and 'chip select'
    lines connected to GPIOs described by ACPI fwnodes in the DSDT table.
    
    Because of hardware with missing ACPI resources for the 'reset' and 'chip
    select' GPIOs commit 5741022cbdf3 ("usb: dwc3: pci: Add GPIO lookup table
    on platforms without ACPI GPIO resources") introduced a fallback
    gpiod_lookup_table with hard-coded mappings for Bay Trail devices.
    
    However there are existing Bay Trail based devices, like the National
    Instruments cRIO-903x series, where the phy chip has its 'reset' and
    'chip-select' lines always asserted in hardware via resistor pull-ups. On
    this hardware the phy chip is always enabled and the ACPI dsdt table is
    missing information not only for the 'chip-select' and 'reset' lines but
    also for the BYT GPIO controller itself "INT33FC".
    
    With the introduction of the gpiod_lookup_table initializing the USB
    device-mode on these hardware now errors out. The error comes from the
    gpiod_get_optional() calls in dwc3_pci_quirks() which will now return an
    -ENOENT error due to the missing ACPI entry for the INT33FC gpio controller
    used in the aforementioned table.
    
    This hardware used to work before because gpiod_get_optional() will return
    NULL instead of -ENOENT if no GPIO has been assigned to the requested
    function. The dwc3_pci_quirks() code for setting the 'cs' and 'reset' GPIOs
    was then skipped (due to the NULL return). This is the correct behavior in
    cases where the phy chip is hardwired and there are no GPIOs to control.
    
    Since the gpiod_lookup_table relies on the presence of INT33FC fwnode
    in ACPI tables only add the table if we know the entry for the INT33FC
    gpio controller is present. This allows Bay Trail based devices with
    hardwired dwc3 ULPI phys to continue working.
    
    Fixes: 5741022cbdf3 ("usb: dwc3: pci: Add GPIO lookup table on platforms without ACPI GPIO resources")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Gratian Crisan <gratian.crisan@ni.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20230726184555.218091-2-gratian.crisan@ni.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf4986fbeb21536f5807eed7164830e289a823bb
Author: Jakub Vanek <linuxtardis@gmail.com>
Date:   Fri Jul 14 14:24:19 2023 +0200

    Revert "usb: dwc3: core: Enable AutoRetry feature in the controller"
    
    commit 734ae15ab95a18d3d425fc9cb38b7a627d786f08 upstream.
    
    This reverts commit b138e23d3dff90c0494925b4c1874227b81bddf7.
    
    AutoRetry has been found to sometimes cause controller freezes when
    communicating with buggy USB devices.
    
    This controller feature allows the controller in host mode to send
    non-terminating/burst retry ACKs instead of terminating retry ACKs
    to devices when a transaction error (CRC error or overflow) occurs.
    
    Unfortunately, if the USB device continues to respond with a CRC error,
    the controller will not complete endpoint-related commands while it
    keeps trying to auto-retry. [3] The xHCI driver will notice this once
    it tries to abort the transfer using a Stop Endpoint command and
    does not receive a completion in time. [1]
    This situation is reported to dmesg:
    
    [sda] tag#29 uas_eh_abort_handler 0 uas-tag 1 inflight: CMD IN
    [sda] tag#29 CDB: opcode=0x28 28 00 00 69 42 80 00 00 48 00
    xhci-hcd: xHCI host not responding to stop endpoint command
    xhci-hcd: xHCI host controller not responding, assume dead
    xhci-hcd: HC died; cleaning up
    
    Some users observed this problem on an Odroid HC2 with the JMS578
    USB3-to-SATA bridge. The issue can be triggered by starting
    a read-heavy workload on an attached SSD. After a while, the host
    controller would die and the SSD would disappear from the system. [1]
    
    Further analysis by Synopsys determined that controller revisions
    other than the one in Odroid HC2 are also affected by this.
    The recommended solution was to disable AutoRetry altogether.
    This change does not have a noticeable performance impact. [2]
    
    Revert the enablement commit. This will keep the AutoRetry bit in
    the default state configured during SoC design [2].
    
    Fixes: b138e23d3dff ("usb: dwc3: core: Enable AutoRetry feature in the controller")
    Link: https://lore.kernel.org/r/a21f34c04632d250cd0a78c7c6f4a1c9c7a43142.camel@gmail.com/ [1]
    Link: https://lore.kernel.org/r/20230711214834.kyr6ulync32d4ktk@synopsys.com/ [2]
    Link: https://lore.kernel.org/r/20230712225518.2smu7wse6djc7l5o@synopsys.com/ [3]
    Cc: stable@vger.kernel.org
    Cc: Mauro Ribeiro <mauro.ribeiro@hardkernel.com>
    Cc: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Suggested-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Signed-off-by: Jakub Vanek <linuxtardis@gmail.com>
    Acked-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/20230714122419.27741-1-linuxtardis@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60816ac26f2f0410bc6f8c465dd9d42a2406a1fb
Author: Kyle Tso <kyletso@google.com>
Date:   Fri Jun 23 23:10:36 2023 +0800

    usb: typec: Use sysfs_emit_at when concatenating the string
    
    commit 609fded3f91972ada551c141c5d04a71704f8967 upstream.
    
    The buffer address used in sysfs_emit should be aligned to PAGE_SIZE.
    Use sysfs_emit_at instead to offset the buffer.
    
    Fixes: a7cff92f0635 ("usb: typec: USB Power Delivery helpers for ports and partners")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kyle Tso <kyletso@google.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20230623151036.3955013-4-kyletso@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e4c1e68bf6a04c5106f8935f475f5571d2b4f87
Author: Kyle Tso <kyletso@google.com>
Date:   Fri Jun 23 23:10:35 2023 +0800

    usb: typec: Iterate pds array when showing the pd list
    
    commit 4b642dc9829507e4afabc03d32a18abbdb192c5e upstream.
    
    The pointers of each usb_power_delivery handles are stored in "pds"
    array returned from the pd_get ops but not in the adjacent memory
    calculated from "pd". Get the handles from "pds" array directly instead
    of deriving them from "pd".
    
    Fixes: a7cff92f0635 ("usb: typec: USB Power Delivery helpers for ports and partners")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kyle Tso <kyletso@google.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20230623151036.3955013-3-kyletso@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59feda7f388951083f28d0551b67555cad1d2b27
Author: Kyle Tso <kyletso@google.com>
Date:   Fri Jun 23 23:10:34 2023 +0800

    usb: typec: Set port->pd before adding device for typec_port
    
    commit b33ebb2415e7e0a55ee3d049c2890d3a3e3805b6 upstream.
    
    When calling device_add in the registration of typec_port, it will do
    the NULL check on usb_power_delivery handle in typec_port for the
    visibility of the device attributes. It is always NULL because port->pd
    is set in typec_port_set_usb_power_delivery which is later than the
    device_add call.
    
    Set port->pd before device_add and only link the device after that.
    
    Fixes: a7cff92f0635 ("usb: typec: USB Power Delivery helpers for ports and partners")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kyle Tso <kyletso@google.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20230623151036.3955013-2-kyletso@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efd354eb7955e6ab42aec067afa5a56adcba7048
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Jul 18 11:43:54 2023 +0200

    can: gs_usb: gs_can_close(): add missing set of CAN state to CAN_STATE_STOPPED
    
    commit f8a2da6ec2417cca169fa85a8ab15817bccbb109 upstream.
    
    After an initial link up the CAN device is in ERROR-ACTIVE mode. Due
    to a missing CAN_STATE_STOPPED in gs_can_close() it doesn't change to
    STOPPED after a link down:
    
    | ip link set dev can0 up
    | ip link set dev can0 down
    | ip --details link show can0
    | 13: can0: <NOARP,ECHO> mtu 16 qdisc pfifo_fast state DOWN mode DEFAULT group default qlen 10
    |     link/can  promiscuity 0 allmulti 0 minmtu 0 maxmtu 0
    |     can state ERROR-ACTIVE restart-ms 1000
    
    Add missing assignment of CAN_STATE_STOPPED in gs_can_close().
    
    Cc: stable@vger.kernel.org
    Fixes: d08e973a77d1 ("can: gs_usb: Added support for the GS_USB CAN devices")
    Link: https://lore.kernel.org/all/20230718-gs_usb-fix-can-state-v1-1-f19738ae2c23@pengutronix.de
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60dea45ea31797f33c8eb15112b2865860f628f2
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jul 20 09:53:57 2023 +0200

    USB: serial: simple: sort driver entries
    
    commit d245aedc00775c4d7265a9f4522cc4e1fd34d102 upstream.
    
    Sort the driver symbols alphabetically in order to make it more obvious
    where new driver entries should be added.
    
    Cc: stable@vger.kernel.org
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 889122fe36f4db904265fac0a623e8c587958078
Author: Oliver Neukum <oneukum@suse.com>
Date:   Wed Jul 12 16:16:41 2023 +0200

    USB: serial: simple: add Kaufmann RKS+CAN VCP
    
    commit dd92c8a1f99bcd166204ffc219ea5a23dd65d64f upstream.
    
    Add the device and product ID for this CAN bus interface / license
    dongle. The device is usable either directly from user space or can be
    attached to a kernel CAN interface with slcan_attach.
    
    Reported-by: Kaufmann Automotive GmbH <info@kaufmann-automotive.ch>
    Tested-by: Kaufmann Automotive GmbH <info@kaufmann-automotive.ch>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    [ johan: amend commit message and move entries in sort order ]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6341ef50ca26f479b4f8ef4f9a643ebe47ea4c11
Author: Mohsen Tahmasebi <moh53n@moh53n.ir>
Date:   Mon Jul 10 11:22:18 2023 +0330

    USB: serial: option: add Quectel EC200A module support
    
    commit 857ea9005806e2a458016880278f98715873e977 upstream.
    
    Add Quectel EC200A "DIAG, AT, MODEM":
    
    0x6005: ECM / RNDIS + DIAG + AT + MODEM
    
    T:  Bus=01 Lev=01 Prnt=02 Port=05 Cnt=01 Dev#=  8 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=6005 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    S:  SerialNumber=0000
    C:  #Ifs= 5 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=06 Prot=00 Driver=cdc_ether
    E:  Ad=87(I) Atr=03(Int.) MxPS=  64 Ivl=4096ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=cdc_ether
    E:  Ad=0c(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=0b(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:  If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=0f(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=89(I) Atr=03(Int.) MxPS=  64 Ivl=4096ms
    I:  If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=0a(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=88(I) Atr=03(Int.) MxPS=  64 Ivl=4096ms
    
    Signed-off-by: Mohsen Tahmasebi <moh53n@moh53n.ir>
    Tested-by: Mostafa Ghofrani <mostafaghrr@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f13b7a9f16dba28ea0bf3d0bf73c1ce9f9e9e932
Author: Jerry Meng <jerry-meng@foxmail.com>
Date:   Thu Jun 29 17:35:22 2023 +0800

    USB: serial: option: support Quectel EM060K_128
    
    commit 4f7cab49cecee16120d27c1734cfdf3d6c0e5329 upstream.
    
    EM060K_128 is EM060K's sub-model, having the same name "Quectel EM060K-GL"
    
    MBIM + GNSS + DIAG + NMEA + AT + QDSS + DPL
    
    T:  Bus=03 Lev=01 Prnt=01 Port=01 Cnt=02 Dev#=  8 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0128 Rev= 5.04
    S:  Manufacturer=Quectel
    S:  Product=Quectel EM060K-GL
    S:  SerialNumber=f6fa08b6
    C:* #Ifs= 8 Cfg#= 1 Atr=a0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=0e Prot=00
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=0e Prot=00 Driver=cdc_mbim
    E:  Ad=81(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
    I:  If#= 1 Alt= 0 #EPs= 0 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:* If#= 1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    E:  Ad=8e(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=0f(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    E:  Ad=82(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=40 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=40 Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=70 Driver=(none)
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 7 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=80 Driver=(none)
    E:  Ad=8f(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Signed-off-by: Jerry Meng <jerry-meng@foxmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71bef922ff9a7e206807d37bf5d09f608d4f8983
Author: Samuel Holland <samuel.holland@sifive.com>
Date:   Fri Jun 23 23:01:59 2023 -0700

    serial: sifive: Fix sifive_serial_console_setup() section
    
    commit 9b8fef6345d5487137d4193bb0a0eae2203c284e upstream.
    
    This function is called indirectly from the platform driver probe
    function. Even if the driver is built in, it may be probed after
    free_initmem() due to deferral or unbinding/binding via sysfs.
    Thus the function cannot be marked as __init.
    
    Fixes: 45c054d0815b ("tty: serial: add driver for the SiFive UART")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Samuel Holland <samuel.holland@sifive.com>
    Link: https://lore.kernel.org/r/20230624060159.3401369-1-samuel.holland@sifive.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ace0efeb56f4275148c37fc8b2699fddf29795dc
Author: Ruihong Luo <colorsu1922@gmail.com>
Date:   Thu Jul 13 08:42:36 2023 +0800

    serial: 8250_dw: Preserve original value of DLF register
    
    commit 748c5ea8b8796ae8ee80b8d3a3d940570b588d59 upstream.
    
    Preserve the original value of the Divisor Latch Fraction (DLF) register.
    When the DLF register is modified without preservation, it can disrupt
    the baudrate settings established by firmware or bootloader, leading to
    data corruption and the generation of unreadable or distorted characters.
    
    Fixes: 701c5e73b296 ("serial: 8250_dw: add fractional divisor support")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Ruihong Luo <colorsu1922@gmail.com>
    Link: https://lore.kernel.org/stable/20230713004235.35904-1-colorsu1922%40gmail.com
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20230713004235.35904-1-colorsu1922@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 016a4a2a75870c794587d2f0d30abdae5b87ec0f
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Thu Jul 13 16:57:41 2023 +0200

    serial: qcom-geni: drop bogus runtime pm state update
    
    commit 4dd8752a14ca0303fbdf0a6c68ff65f0a50bd2fa upstream.
    
    The runtime PM state should not be changed by drivers that do not
    implement runtime PM even if it happens to work around a bug in PM core.
    
    With the wake irq arming now fixed, drop the bogus runtime PM state
    update which left the device in active state (and could potentially
    prevent a parent device from suspending).
    
    Fixes: f3974413cf02 ("tty: serial: qcom_geni_serial: Wakeup IRQ cleanup")
    Cc: 5.6+ <stable@vger.kernel.org> # 5.6+
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb1a542824ee58bc76a1277af45607c67ae8954f
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jun 13 13:30:35 2023 -0700

    KVM: x86: Disallow KVM_SET_SREGS{2} if incoming CR0 is invalid
    
    commit 26a0652cb453c72f6aab0974bc4939e9b14f886b upstream.
    
    Reject KVM_SET_SREGS{2} with -EINVAL if the incoming CR0 is invalid,
    e.g. due to setting bits 63:32, illegal combinations, or to a value that
    isn't allowed in VMX (non-)root mode.  The VMX checks in particular are
    "fun" as failure to disallow Real Mode for an L2 that is configured with
    unrestricted guest disabled, when KVM itself has unrestricted guest
    enabled, will result in KVM forcing VM86 mode to virtual Real Mode for
    L2, but then fail to unwind the related metadata when synthesizing a
    nested VM-Exit back to L1 (which has unrestricted guest enabled).
    
    Opportunistically fix a benign typo in the prototype for is_valid_cr4().
    
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+5feef0b9ee9c8e9e5689@syzkaller.appspotmail.com
    Closes: https://lore.kernel.org/all/000000000000f316b705fdf6e2b4@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20230613203037.1968489-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8eb0c480f1e1ba0828b14edce17c4721c397440
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jun 13 13:30:36 2023 -0700

    KVM: VMX: Don't fudge CR0 and CR4 for restricted L2 guest
    
    commit c4abd7352023aa96114915a0bb2b88016a425cda upstream.
    
    Stuff CR0 and/or CR4 to be compliant with a restricted guest if and only
    if KVM itself is not configured to utilize unrestricted guests, i.e. don't
    stuff CR0/CR4 for a restricted L2 that is running as the guest of an
    unrestricted L1.  Any attempt to VM-Enter a restricted guest with invalid
    CR0/CR4 values should fail, i.e. in a nested scenario, KVM (as L0) should
    never observe a restricted L2 with incompatible CR0/CR4, since nested
    VM-Enter from L1 should have failed.
    
    And if KVM does observe an active, restricted L2 with incompatible state,
    e.g. due to a KVM bug, fudging CR0/CR4 instead of letting VM-Enter fail
    does more harm than good, as KVM will often neglect to undo the side
    effects, e.g. won't clear rmode.vm86_active on nested VM-Exit, and thus
    the damage can easily spill over to L1.  On the other hand, letting
    VM-Enter fail due to bad guest state is more likely to contain the damage
    to L2 as KVM relies on hardware to perform most guest state consistency
    checks, i.e. KVM needs to be able to reflect a failed nested VM-Enter into
    L1 irrespective of (un)restricted guest behavior.
    
    Cc: Jim Mattson <jmattson@google.com>
    Cc: stable@vger.kernel.org
    Fixes: bddd82d19e2e ("KVM: nVMX: KVM needs to unset "unrestricted guest" VM-execution control in vmcs02 if vmcs12 doesn't set it")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20230613203037.1968489-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed8bbe6627cf3cbe57e0b731cb8a7643496cdb99
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jul 11 16:01:25 2023 -0700

    KVM: Grab a reference to KVM for VM and vCPU stats file descriptors
    
    commit eed3013faa401aae662398709410a59bb0646e32 upstream.
    
    Grab a reference to KVM prior to installing VM and vCPU stats file
    descriptors to ensure the underlying VM and vCPU objects are not freed
    until the last reference to any and all stats fds are dropped.
    
    Note, the stats paths manually invoke fd_install() and so don't need to
    grab a reference before creating the file.
    
    Fixes: ce55c049459c ("KVM: stats: Support binary stats retrieval for a VCPU")
    Fixes: fcfe1baeddbf ("KVM: stats: Support binary stats retrieval for a VM")
    Reported-by: Zheng Zhang <zheng.zhang@email.ucr.edu>
    Closes: https://lore.kernel.org/all/CAC_GQSr3xzZaeZt85k_RCBd5kfiOve8qXo7a81Cq53LuVQ5r=Q@mail.gmail.com
    Cc: stable@vger.kernel.org
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Message-Id: <20230711230131.648752-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c80b7c8f9d523bc223fe31c95451f8ad3cd68566
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Sat Jul 22 00:22:56 2023 +0200

    usb: gadget: core: remove unbalanced mutex_unlock in usb_gadget_activate
    
    commit 6237390644fb92b81f5262877fe545d0d2c7b5d7 upstream.
    
    Commit 286d9975a838 ("usb: gadget: udc: core: Prevent soft_connect_store() race")
    introduced one extra mutex_unlock of connect_lock in the usb_gadget_active function.
    
    Fixes: 286d9975a838 ("usb: gadget: udc: core: Prevent soft_connect_store() race")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20230721222256.1743645-1-m.grzeschik@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de77000c1923d7942f9b4f08447c8feeae1c0f33
Author: Zqiang <qiang.zhang1211@gmail.com>
Date:   Fri Jul 14 15:40:11 2023 +0800

    USB: gadget: Fix the memory leak in raw_gadget driver
    
    commit 83e30f2bf86ef7c38fbd476ed81a88522b620628 upstream.
    
    Currently, increasing raw_dev->count happens before invoke the
    raw_queue_event(), if the raw_queue_event() return error, invoke
    raw_release() will not trigger the dev_free() to be called.
    
    [  268.905865][ T5067] raw-gadget.0 gadget.0: failed to queue event
    [  268.912053][ T5067] udc dummy_udc.0: failed to start USB Raw Gadget: -12
    [  268.918885][ T5067] raw-gadget.0: probe of gadget.0 failed with error -12
    [  268.925956][ T5067] UDC core: USB Raw Gadget: couldn't find an available UDC or it's busy
    [  268.934657][ T5067] misc raw-gadget: fail, usb_gadget_register_driver returned -16
    
    BUG: memory leak
    
    [<ffffffff8154bf94>] kmalloc_trace+0x24/0x90 mm/slab_common.c:1076
    [<ffffffff8347eb55>] kmalloc include/linux/slab.h:582 [inline]
    [<ffffffff8347eb55>] kzalloc include/linux/slab.h:703 [inline]
    [<ffffffff8347eb55>] dev_new drivers/usb/gadget/legacy/raw_gadget.c:191 [inline]
    [<ffffffff8347eb55>] raw_open+0x45/0x110 drivers/usb/gadget/legacy/raw_gadget.c:385
    [<ffffffff827d1d09>] misc_open+0x1a9/0x1f0 drivers/char/misc.c:165
    
    [<ffffffff8154bf94>] kmalloc_trace+0x24/0x90 mm/slab_common.c:1076
    [<ffffffff8347cd2f>] kmalloc include/linux/slab.h:582 [inline]
    [<ffffffff8347cd2f>] raw_ioctl_init+0xdf/0x410 drivers/usb/gadget/legacy/raw_gadget.c:460
    [<ffffffff8347dfe9>] raw_ioctl+0x5f9/0x1120 drivers/usb/gadget/legacy/raw_gadget.c:1250
    [<ffffffff81685173>] vfs_ioctl fs/ioctl.c:51 [inline]
    
    [<ffffffff8154bf94>] kmalloc_trace+0x24/0x90 mm/slab_common.c:1076
    [<ffffffff833ecc6a>] kmalloc include/linux/slab.h:582 [inline]
    [<ffffffff833ecc6a>] kzalloc include/linux/slab.h:703 [inline]
    [<ffffffff833ecc6a>] dummy_alloc_request+0x5a/0xe0 drivers/usb/gadget/udc/dummy_hcd.c:665
    [<ffffffff833e9132>] usb_ep_alloc_request+0x22/0xd0 drivers/usb/gadget/udc/core.c:196
    [<ffffffff8347f13d>] gadget_bind+0x6d/0x370 drivers/usb/gadget/legacy/raw_gadget.c:292
    
    This commit therefore invoke kref_get() under the condition that
    raw_queue_event() return success.
    
    Reported-by: syzbot+feb045d335c1fdde5bf7@syzkaller.appspotmail.com
    Cc: stable <stable@kernel.org>
    Closes: https://syzkaller.appspot.com/bug?extid=feb045d335c1fdde5bf7
    Signed-off-by: Zqiang <qiang.zhang1211@gmail.com>
    Reviewed-by: Andrey Konovalov <andreyknvl@gmail.com>
    Tested-by: Andrey Konovalov <andreyknvl@gmail.com>
    Link: https://lore.kernel.org/r/20230714074011.20989-1-qiang.zhang1211@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f23a9eb8abffee39bee644e877d62cb67ba6e17
Author: Frank Li <Frank.Li@nxp.com>
Date:   Fri Jul 7 19:00:14 2023 -0400

    usb: gadget: call usb_gadget_check_config() to verify UDC capability
    
    commit f4fc01af5b640bc39bd9403b5fd855345a2ad5f8 upstream.
    
    The legacy gadget driver omitted calling usb_gadget_check_config()
    to ensure that the USB device controller (UDC) has adequate resources,
    including sufficient endpoint numbers and types, to support the given
    configuration.
    
    Previously, usb_add_config() was solely invoked by the legacy gadget
    driver. Adds the necessary usb_gadget_check_config() after the bind()
    operation to fix the issue.
    
    Fixes: dce49449e04f ("usb: cdns3: allocate TX FIFO size according to composite EP number")
    Cc: stable <stable@kernel.org>
    Reported-by: Ravi Gunasekaran <r-gunasekaran@ti.com>
    Signed-off-by: Frank Li <Frank.Li@nxp.com>
    Link: https://lore.kernel.org/r/20230707230015.494999-1-Frank.Li@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cf9741aa3235485eba3ddaa44fec4e7dc245ff5
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Tue Jul 4 17:09:09 2023 +0300

    Revert "usb: gadget: tegra-xudc: Fix error check in tegra_xudc_powerdomain_init()"
    
    commit a8291be6b5dd465c22af229483dbac543a91e24e upstream.
    
    This reverts commit f08aa7c80dac27ee00fa6827f447597d2fba5465.
    
    The reverted commit was based on static analysis and a misunderstanding
    of how PTR_ERR() and NULLs are supposed to work.  When a function
    returns both pointer errors and NULL then normally the NULL means
    "continue operating without a feature because it was deliberately
    turned off".  The NULL should not be treated as a failure.  If a driver
    cannot work when that feature is disabled then the KConfig should
    enforce that the function cannot return NULL.  We should not need to
    test for it.
    
    In this driver, the bug means that probe cannot succeed when CONFIG_PM
    is disabled.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Fixes: f08aa7c80dac ("usb: gadget: tegra-xudc: Fix error check in tegra_xudc_powerdomain_init()")
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/ZKQoBa84U/ykEh3C@moroto
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3a3c7bddab9b6c5690b20796ef5e332b8c48afb
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Wed Jul 26 17:58:04 2023 +0800

    tracing: Fix warning in trace_buffered_event_disable()
    
    [ Upstream commit dea499781a1150d285c62b26659f62fb00824fce ]
    
    Warning happened in trace_buffered_event_disable() at
      WARN_ON_ONCE(!trace_buffered_event_ref)
    
      Call Trace:
       ? __warn+0xa5/0x1b0
       ? trace_buffered_event_disable+0x189/0x1b0
       __ftrace_event_enable_disable+0x19e/0x3e0
       free_probe_data+0x3b/0xa0
       unregister_ftrace_function_probe_func+0x6b8/0x800
       event_enable_func+0x2f0/0x3d0
       ftrace_process_regex.isra.0+0x12d/0x1b0
       ftrace_filter_write+0xe6/0x140
       vfs_write+0x1c9/0x6f0
       [...]
    
    The cause of the warning is in __ftrace_event_enable_disable(),
    trace_buffered_event_enable() was called once while
    trace_buffered_event_disable() was called twice.
    Reproduction script show as below, for analysis, see the comments:
     ```
     #!/bin/bash
    
     cd /sys/kernel/tracing/
    
     # 1. Register a 'disable_event' command, then:
     #    1) SOFT_DISABLED_BIT was set;
     #    2) trace_buffered_event_enable() was called first time;
     echo 'cmdline_proc_show:disable_event:initcall:initcall_finish' > \
         set_ftrace_filter
    
     # 2. Enable the event registered, then:
     #    1) SOFT_DISABLED_BIT was cleared;
     #    2) trace_buffered_event_disable() was called first time;
     echo 1 > events/initcall/initcall_finish/enable
    
     # 3. Try to call into cmdline_proc_show(), then SOFT_DISABLED_BIT was
     #    set again!!!
     cat /proc/cmdline
    
     # 4. Unregister the 'disable_event' command, then:
     #    1) SOFT_DISABLED_BIT was cleared again;
     #    2) trace_buffered_event_disable() was called second time!!!
     echo '!cmdline_proc_show:disable_event:initcall:initcall_finish' > \
         set_ftrace_filter
     ```
    
    To fix it, IIUC, we can change to call trace_buffered_event_enable() at
    fist time soft-mode enabled, and call trace_buffered_event_disable() at
    last time soft-mode disabled.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230726095804.920457-1-zhengyejian1@huawei.com
    
    Cc: <mhiramat@kernel.org>
    Fixes: 0fc1b09ff1ff ("tracing: Use temp buffer when filtering events")
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77996fa5c64f7a6733006547ff40a6e02112d43b
Author: Zheng Yejian <zhengyejian1@huawei.com>
Date:   Mon Jul 24 13:40:40 2023 +0800

    ring-buffer: Fix wrong stat of cpu_buffer->read
    
    [ Upstream commit 2d093282b0d4357373497f65db6a05eb0c28b7c8 ]
    
    When pages are removed in rb_remove_pages(), 'cpu_buffer->read' is set
    to 0 in order to make sure any read iterators reset themselves. However,
    this will mess 'entries' stating, see following steps:
    
      # cd /sys/kernel/tracing/
      # 1. Enlarge ring buffer prepare for later reducing:
      # echo 20 > per_cpu/cpu0/buffer_size_kb
      # 2. Write a log into ring buffer of cpu0:
      # taskset -c 0 echo "hello1" > trace_marker
      # 3. Read the log:
      # cat per_cpu/cpu0/trace_pipe
           <...>-332     [000] .....    62.406844: tracing_mark_write: hello1
      # 4. Stop reading and see the stats, now 0 entries, and 1 event readed:
      # cat per_cpu/cpu0/stats
       entries: 0
       [...]
       read events: 1
      # 5. Reduce the ring buffer
      # echo 7 > per_cpu/cpu0/buffer_size_kb
      # 6. Now entries became unexpected 1 because actually no entries!!!
      # cat per_cpu/cpu0/stats
       entries: 1
       [...]
       read events: 0
    
    To fix it, introduce 'page_removed' field to count total removed pages
    since last reset, then use it to let read iterators reset themselves
    instead of changing the 'read' pointer.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230724054040.3489499-1-zhengyejian1@huawei.com
    
    Cc: <mhiramat@kernel.org>
    Cc: <vnagarnaik@google.com>
    Fixes: 83f40318dab0 ("ring-buffer: Make removal of ring buffer pages atomic")
    Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d0a4a7777cc6e5c837a9e81b264961c36c611c8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jul 26 22:33:22 2023 +0200

    ata: pata_ns87415: mark ns87560_tf_read static
    
    [ Upstream commit 3fc2febb0f8ffae354820c1772ec008733237cfa ]
    
    The global function triggers a warning because of the missing prototype
    
    drivers/ata/pata_ns87415.c:263:6: warning: no previous prototype for 'ns87560_tf_read' [-Wmissing-prototypes]
      263 | void ns87560_tf_read(struct ata_port *ap, struct ata_taskfile *tf)
    
    There are no other references to this, so just make it static.
    
    Fixes: c4b5b7b6c4423 ("pata_ns87415: Initial cut at 87415/87560 IDE support")
    Reviewed-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84415f934ad4e96f3507fd09b831953d60fb04ec
Author: Ming Lei <ming.lei@redhat.com>
Date:   Wed Jul 26 22:45:01 2023 +0800

    ublk: fail to recover device if queue setup is interrupted
    
    [ Upstream commit 0c0cbd4ebc375ceebc75c89df04b74f215fab23a ]
    
    In ublk_ctrl_end_recovery(), if wait_for_completion_interruptible() is
    interrupted by signal, queues aren't setup successfully yet, so we
    have to fail UBLK_CMD_END_USER_RECOVERY, otherwise kernel oops can be
    triggered.
    
    Fixes: c732a852b419 ("ublk_drv: add START_USER_RECOVERY and END_USER_RECOVERY support")
    Reported-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Link: https://lore.kernel.org/r/20230726144502.566785-3-ming.lei@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d5916c439574b18a0734872daa0022b3d6105ad
Author: Ming Lei <ming.lei@redhat.com>
Date:   Wed Jul 26 22:45:00 2023 +0800

    ublk: fail to start device if queue setup is interrupted
    
    [ Upstream commit 53e7d08f6d6e214c40db1f51291bb2975c789dc2 ]
    
    In ublk_ctrl_start_dev(), if wait_for_completion_interruptible() is
    interrupted by signal, queues aren't setup successfully yet, so we
    have to fail UBLK_CMD_START_DEV, otherwise kernel oops can be triggered.
    
    Reported by German when working on qemu-storage-deamon which requires
    single thread ublk daemon.
    
    Fixes: 71f28f3136af ("ublk_drv: add io_uring based userspace block driver")
    Reported-by: German Maglione <gmaglione@redhat.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Link: https://lore.kernel.org/r/20230726144502.566785-2-ming.lei@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c741076a3c76018ae41f8750fcce1b6662a61db2
Author: Ming Lei <ming.lei@redhat.com>
Date:   Fri Jan 6 12:17:08 2023 +0800

    ublk_drv: move ublk_get_device_from_id into ublk_ctrl_uring_cmd
    
    [ Upstream commit bfbcef036396a73fbf4b3fee385cc670159df5ad ]
    
    It is annoying for each control command handler to get/put ublk
    device and deal with failure.
    
    Control command handler is simplified a lot by moving
    ublk_get_device_from_id into ublk_ctrl_uring_cmd().
    
    Reviewed-by: ZiyangZhang <ZiyangZhang@linux.alibaba.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Link: https://lore.kernel.org/r/20230106041711.914434-4-ming.lei@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: 53e7d08f6d6e ("ublk: fail to start device if queue setup is interrupted")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a39bf13f86403c0e9d9830a5ea30be420c6504b5
Author: Rob Clark <robdclark@chromium.org>
Date:   Mon Jul 24 13:30:21 2023 -0700

    drm/msm: Disallow submit with fence id 0
    
    [ Upstream commit 1b5d0ddcb34a605835051ae2950d5cfed0373dd8 ]
    
    A fence id of zero is expected to be invalid, and is not removed from
    the fence_idr table.  If userspace is requesting to specify the fence
    id with the FENCE_SN_IN flag, we need to reject a zero fence id value.
    
    Fixes: 17154addc5c1 ("drm/msm: Add MSM_SUBMIT_FENCE_SN_IN")
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Patchwork: https://patchwork.freedesktop.org/patch/549180/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3398e8b2833f3fdf526c3a4fdd149924704b4c40
Author: Rob Clark <robdclark@chromium.org>
Date:   Mon Mar 20 07:43:32 2023 -0700

    drm/msm: Switch idr_lock to spinlock
    
    [ Upstream commit e4f020c6a05db73eac49b7c3b3650251be374200 ]
    
    Needed to idr_preload() which returns with preemption disabled.
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Patchwork: https://patchwork.freedesktop.org/patch/527846/
    Link: https://lore.kernel.org/r/20230320144356.803762-11-robdclark@gmail.com
    Stable-dep-of: 1b5d0ddcb34a ("drm/msm: Disallow submit with fence id 0")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d722661362ca473670e45341286d9bb9531f6a5e
Author: Sindhu Devale <sindhu.devale@intel.com>
Date:   Tue Jul 25 10:54:38 2023 -0500

    RDMA/irdma: Report correct WC error
    
    [ Upstream commit ae463563b7a1b7d4a3d0b065b09d37a76b693937 ]
    
    Report the correct WC error if a MW bind is performed
    on an already valid/bound window.
    
    Fixes: 44d9e52977a1 ("RDMA/irdma: Implement device initialization definitions")
    Signed-off-by: Sindhu Devale <sindhu.devale@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230725155439.1057-2-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe3409cd013cfd10d3e6787b49f33a5dda39cffd
Author: Sindhu Devale <sindhu.devale@intel.com>
Date:   Tue Jul 25 10:54:37 2023 -0500

    RDMA/irdma: Fix op_type reporting in CQEs
    
    [ Upstream commit 3bfb25fa2b5bb9c29681e6ac861808f4be1331a9 ]
    
    The op_type field CQ poll info structure is incorrectly
    filled in with the queue type as opposed to the op_type
    received in the CQEs. The wrong opcode could be decoded
    and returned to the ULP.
    
    Copy the op_type field received in the CQE in the CQ poll
    info structure.
    
    Fixes: 24419777e943 ("RDMA/irdma: Fix RQ completion opcode")
    Signed-off-by: Sindhu Devale <sindhu.devale@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230725155439.1057-1-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e139cc2974b801f3f6e38efa047a7e3b7121fc8d
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Fri Jul 21 17:55:49 2023 +0300

    drm/amd/display: Unlock on error path in dm_handle_mst_sideband_msg_ready_event()
    
    [ Upstream commit 38ac4e8385ffb275b1837986ca6c16f26ea028c5 ]
    
    This error path needs to unlock the "aconnector->handle_mst_msg_ready"
    mutex before returning.
    
    Fixes: 4f6d9e38c4d2 ("drm/amd/display: Add polling method to handle MST reply packet")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c58d120bf81a1fe6cc05e640568c0da14042c09
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Thu Jul 13 00:14:59 2023 -0500

    drm/amd: Fix an error handling mistake in psp_sw_init()
    
    [ Upstream commit c01aebeef3ce45f696ffa0a1303cea9b34babb45 ]
    
    If the second call to amdgpu_bo_create_kernel() fails, the memory
    allocated from the first call should be cleared.  If the third call
    fails, the memory from the second call should be cleared.
    
    Fixes: b95b5391684b ("drm/amdgpu/psp: move PSP memory alloc from hw_init to sw_init")
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Lijo Lazar <lijo.lazar@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce114218f74e8189aa0da94ca6811af64b6b7ca6
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Sat Jul 8 17:21:53 2023 +0800

    dm raid: protect md_stop() with 'reconfig_mutex'
    
    [ Upstream commit 7d5fff8982a2199d49ec067818af7d84d4f95ca0 ]
    
    __md_stop_writes() and __md_stop() will modify many fields that are
    protected by 'reconfig_mutex', and all the callers will grab
    'reconfig_mutex' except for md_stop().
    
    Also, update md_stop() to make certain 'reconfig_mutex' is held using
    lockdep_assert_held().
    
    Fixes: 9d09e663d550 ("dm: raid456 basic support")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e08db3f85df2a5b31361f253b75074ef334448e9
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Sat Jul 8 17:21:52 2023 +0800

    dm raid: clean up four equivalent goto tags in raid_ctr()
    
    [ Upstream commit e74c874eabe2e9173a8fbdad616cd89c70eb8ffd ]
    
    There are four equivalent goto tags in raid_ctr(), clean them up to
    use just one.
    
    There is no functional change and this is preparation to fix
    raid_ctr()'s unprotected md_stop().
    
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Stable-dep-of: 7d5fff8982a2 ("dm raid: protect md_stop() with 'reconfig_mutex'")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d43c7edfeb941e5629f9646810ea07829f05eb1d
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Sat Jul 8 17:21:51 2023 +0800

    dm raid: fix missing reconfig_mutex unlock in raid_ctr() error paths
    
    [ Upstream commit bae3028799dc4f1109acc4df37c8ff06f2d8f1a0 ]
    
    In the error paths 'bad_stripe_cache' and 'bad_check_reshape',
    'reconfig_mutex' is still held after raid_ctr() returns.
    
    Fixes: 9dbd1aa3a81c ("dm raid: add reshaping support to the target")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37b5a0bdb896bfe646649ff15bb55b7032b512dc
Author: Stefano Stabellini <sstabellini@kernel.org>
Date:   Fri Jul 21 16:13:03 2023 -0700

    xenbus: check xen_domain in xenbus_probe_initcall
    
    [ Upstream commit 0d8f7cc8057890db08c54fe610d8a94af59da082 ]
    
    The same way we already do in xenbus_init.
    Fixes the following warning:
    
    [  352.175563] Trying to free already-free IRQ 0
    [  352.177355] WARNING: CPU: 1 PID: 88 at kernel/irq/manage.c:1893 free_irq+0xbf/0x350
    [...]
    [  352.213951] Call Trace:
    [  352.214390]  <TASK>
    [  352.214717]  ? __warn+0x81/0x170
    [  352.215436]  ? free_irq+0xbf/0x350
    [  352.215906]  ? report_bug+0x10b/0x200
    [  352.216408]  ? prb_read_valid+0x17/0x20
    [  352.216926]  ? handle_bug+0x44/0x80
    [  352.217409]  ? exc_invalid_op+0x13/0x60
    [  352.217932]  ? asm_exc_invalid_op+0x16/0x20
    [  352.218497]  ? free_irq+0xbf/0x350
    [  352.218979]  ? __pfx_xenbus_probe_thread+0x10/0x10
    [  352.219600]  xenbus_probe+0x7a/0x80
    [  352.221030]  xenbus_probe_thread+0x76/0xc0
    
    Fixes: 5b3353949e89 ("xen: add support for initializing xenstore later as HVM domain")
    Signed-off-by: Stefano Stabellini <stefano.stabellini@amd.com>
    Tested-by: Petr Mladek <pmladek@suse.com>
    Reviewed-by: Oleksandr Tyshchenko <oleksandr_tyshchenko@epam.com>
    
    Link: https://lore.kernel.org/r/alpine.DEB.2.22.394.2307211609140.3118466@ubuntu-linux-20-04-desktop
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a71cd15a8592482bc3adead423ec4ff4502f0a72
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Jul 17 20:49:31 2023 +0200

    drm/i915: Fix an error handling path in igt_write_huge()
    
    [ Upstream commit e354f67733115b4453268f61e6e072e9b1ea7a2f ]
    
    All error handling paths go to 'out', except this one. Be consistent and
    also branch to 'out' here.
    
    Fixes: c10a652e239e ("drm/i915/selftests: Rework context handling in hugepages selftests")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Andrzej Hajda <andrzej.hajda@intel.com>
    Reviewed-by: Andi Shyti <andi.shyti@linux.intel.com>
    Signed-off-by: Andi Shyti <andi.shyti@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/7a036b88671312ee9adc01c74ef5b3376f690b76.1689619758.git.christophe.jaillet@wanadoo.fr
    (cherry picked from commit 361ecaadb1ce3c5312c7c4c419271326d43899eb)
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddac66e802cec7102a4328d98f671c7079c8035b
Author: Steve French <stfrench@microsoft.com>
Date:   Tue Jul 25 01:05:23 2023 -0500

    smb3: do not set NTLMSSP_VERSION flag for negotiate not auth request
    
    [ Upstream commit 19826558210b9102a7d4681c91784d137d60d71b ]
    
    The NTLMSSP_NEGOTIATE_VERSION flag only needs to be sent during
    the NTLMSSP NEGOTIATE (not the AUTH) request, so filter it out for
    NTLMSSP AUTH requests. See MS-NLMP 2.2.1.3
    
    This fixes a problem found by the gssntlmssp server.
    
    Link: https://github.com/gssapi/gss-ntlmssp/issues/95
    Fixes: 52d005337b2c ("smb3: send NTLMSSP version information")
    Acked-by: Roy Shterman <roy.shterman@gmail.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55704f087f780189a069937096e2304dc026e3a5
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Jul 6 13:14:12 2023 -0700

    block: Fix a source code comment in include/uapi/linux/blkzoned.h
    
    [ Upstream commit e0933b526fbfd937c4a8f4e35fcdd49f0e22d411 ]
    
    Fix the symbolic names for zone conditions in the blkzoned.h header
    file.
    
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Damien Le Moal <dlemoal@kernel.org>
    Fixes: 6a0cb1bc106f ("block: Implement support for zoned block devices")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Damien Le Moal <dlemoal@kernel.org>
    Link: https://lore.kernel.org/r/20230706201422.3987341-1-bvanassche@acm.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f656ba177f6978f033e7057bea78fecf63cb95fd
Author: Matus Gajdos <matuszpd@gmail.com>
Date:   Wed Jul 19 18:47:29 2023 +0200

    ASoC: fsl_spdif: Silence output on stop
    
    [ Upstream commit 0e4c2b6b0c4a4b4014d9424c27e5e79d185229c5 ]
    
    Clear TX registers on stop to prevent the SPDIF interface from sending
    last written word over and over again.
    
    Fixes: a2388a498ad2 ("ASoC: fsl: Add S/PDIF CPU DAI driver")
    Signed-off-by: Matus Gajdos <matuszpd@gmail.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/20230719164729.19969-1-matuszpd@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6806494ed4a0b71c5c44c583b3d1b7705bc60006
Author: Breno Leitao <leitao@debian.org>
Date:   Fri Jul 14 02:31:46 2023 -0700

    cxl/acpi: Return 'rc' instead of '0' in cxl_parse_cfmws()
    
    [ Upstream commit 91019b5bc7c2c5e6f676cce80ee6d12b2753d018 ]
    
    Driver initialization returned success (return 0) even if the
    initialization (cxl_decoder_add() or acpi_table_parse_cedt()) failed.
    
    Return the error instead of swallowing it.
    
    Fixes: f4ce1f766f1e ("cxl/acpi: Convert CFMWS parsing to ACPI sub-table helpers")
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Link: https://lore.kernel.org/r/20230714093146.2253438-2-leitao@debian.org
    Reviewed-by: Alison Schofield <alison.schofield@intel.com>
    Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 748fadc08bcbdaf573b34d9784bb3dbd87441dbf
Author: Breno Leitao <leitao@debian.org>
Date:   Fri Jul 14 02:31:45 2023 -0700

    cxl/acpi: Fix a use-after-free in cxl_parse_cfmws()
    
    [ Upstream commit 4cf67d3cc9994a59cf77bb9c0ccf9007fe916afe ]
    
    KASAN and KFENCE detected an user-after-free in the CXL driver. This
    happens in the cxl_decoder_add() fail path. KASAN prints the following
    error:
    
       BUG: KASAN: slab-use-after-free in cxl_parse_cfmws (drivers/cxl/acpi.c:299)
    
    This happens in cxl_parse_cfmws(), where put_device() is called,
    releasing cxld, which is accessed later.
    
    Use the local variables in the dev_err() instead of pointing to the
    released memory. Since the dev_err() is printing a resource, change the open
    coded print format to use the %pr format specifier.
    
    Fixes: e50fe01e1f2a ("cxl/core: Drop ->platform_res attribute for root decoders")
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Link: https://lore.kernel.org/r/20230714093146.2253438-1-leitao@debian.org
    Reviewed-by: Alison Schofield <alison.schofield@intel.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b8b8353733816cf0f95cbfc14b5a36a428b6de3
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Mon Jul 17 09:47:38 2023 +0800

    drm/msm: Fix IS_ERR_OR_NULL() vs NULL check in a5xx_submit_in_rb()
    
    [ Upstream commit 6e8a996563ecbe68e49c49abd4aaeef69f11f2dc ]
    
    The msm_gem_get_vaddr() returns an ERR_PTR() on failure, and a null
    is catastrophic here, so we should use IS_ERR_OR_NULL() to check
    the return value.
    
    Fixes: 6a8bd08d0465 ("drm/msm: add sudo flag to submit ioctl")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Reviewed-by: Akhil P Oommen <quic_akhilpo@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/547712/
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8500538b8f5b2cd86b02754c8de83eaa7a2d6ba
Author: Kashyap Desai <kashyap.desai@broadcom.com>
Date:   Fri Jul 14 01:22:48 2023 -0700

    RDMA/bnxt_re: Prevent handling any completions after qp destroy
    
    [ Upstream commit b5bbc6551297447d3cca55cf907079e206e9cd82 ]
    
    HW may generate completions that indicates QP is destroyed.
    Driver should not be scheduling any more completion handlers
    for this QP, after the QP is destroyed. Since CQs are active
    during the QP destroy, driver may still schedule completion
    handlers. This can cause a race where the destroy_cq and poll_cq
    running simultaneously.
    
    Snippet of kernel panic while doing bnxt_re driver load unload in loop.
    This indicates a poll after the CQ is freed. 
    
    [77786.481636] Call Trace:
    [77786.481640]  <TASK>
    [77786.481644]  bnxt_re_poll_cq+0x14a/0x620 [bnxt_re]
    [77786.481658]  ? kvm_clock_read+0x14/0x30
    [77786.481693]  __ib_process_cq+0x57/0x190 [ib_core]
    [77786.481728]  ib_cq_poll_work+0x26/0x80 [ib_core]
    [77786.481761]  process_one_work+0x1e5/0x3f0
    [77786.481768]  worker_thread+0x50/0x3a0
    [77786.481785]  ? __pfx_worker_thread+0x10/0x10
    [77786.481790]  kthread+0xe2/0x110
    [77786.481794]  ? __pfx_kthread+0x10/0x10
    [77786.481797]  ret_from_fork+0x2c/0x50
    
    To avoid this, complete all completion handlers before returning the
    destroy QP. If free_cq is called soon after destroy_qp,  IB stack
    will cancel the CQ work before invoking the destroy_cq verb and
    this will prevent any race mentioned.
    
    Fixes: 1ac5a4047975 ("RDMA/bnxt_re: Add bnxt_re RoCE driver")
    Signed-off-by: Kashyap Desai <kashyap.desai@broadcom.com>
    Signed-off-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Link: https://lore.kernel.org/r/1689322969-25402-2-git-send-email-selvin.xavier@broadcom.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d335b5fb332e8bf797ce6c29448735c814c00dbf
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Thu Jul 13 16:16:58 2023 +0200

    RDMA/mthca: Fix crash when polling CQ for shared QPs
    
    [ Upstream commit dc52aadbc1849cbe3fcf6bc54d35f6baa396e0a1 ]
    
    Commit 21c2fe94abb2 ("RDMA/mthca: Combine special QP struct with mthca QP")
    introduced a new struct mthca_sqp which doesn't contain struct mthca_qp
    any longer. Placing a pointer of this new struct into qptable leads
    to crashes, because mthca_poll_one() expects a qp pointer. Fix this
    by putting the correct pointer into qptable.
    
    Fixes: 21c2fe94abb2 ("RDMA/mthca: Combine special QP struct with mthca QP")
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Link: https://lore.kernel.org/r/20230713141658.9426-1-tbogendoerfer@suse.de
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5986e96be7d0b82e50a9c6b019ea3f1926fd8764
Author: Shiraz Saleem <shiraz.saleem@intel.com>
Date:   Tue Jul 11 12:52:53 2023 -0500

    RDMA/irdma: Fix data race on CQP request done
    
    [ Upstream commit f0842bb3d38863777e3454da5653d80b5fde6321 ]
    
    KCSAN detects a data race on cqp_request->request_done memory location
    which is accessed locklessly in irdma_handle_cqp_op while being
    updated in irdma_cqp_ce_handler.
    
    Annotate lockless intent with READ_ONCE/WRITE_ONCE to avoid any
    compiler optimizations like load fusing and/or KCSAN warning.
    
    [222808.417128] BUG: KCSAN: data-race in irdma_cqp_ce_handler [irdma] / irdma_wait_event [irdma]
    
    [222808.417532] write to 0xffff8e44107019dc of 1 bytes by task 29658 on cpu 5:
    [222808.417610]  irdma_cqp_ce_handler+0x21e/0x270 [irdma]
    [222808.417725]  cqp_compl_worker+0x1b/0x20 [irdma]
    [222808.417827]  process_one_work+0x4d1/0xa40
    [222808.417835]  worker_thread+0x319/0x700
    [222808.417842]  kthread+0x180/0x1b0
    [222808.417852]  ret_from_fork+0x22/0x30
    
    [222808.417918] read to 0xffff8e44107019dc of 1 bytes by task 29688 on cpu 1:
    [222808.417995]  irdma_wait_event+0x1e2/0x2c0 [irdma]
    [222808.418099]  irdma_handle_cqp_op+0xae/0x170 [irdma]
    [222808.418202]  irdma_cqp_cq_destroy_cmd+0x70/0x90 [irdma]
    [222808.418308]  irdma_puda_dele_rsrc+0x46d/0x4d0 [irdma]
    [222808.418411]  irdma_rt_deinit_hw+0x179/0x1d0 [irdma]
    [222808.418514]  irdma_ib_dealloc_device+0x11/0x40 [irdma]
    [222808.418618]  ib_dealloc_device+0x2a/0x120 [ib_core]
    [222808.418823]  __ib_unregister_device+0xde/0x100 [ib_core]
    [222808.418981]  ib_unregister_device+0x22/0x40 [ib_core]
    [222808.419142]  irdma_ib_unregister_device+0x70/0x90 [irdma]
    [222808.419248]  i40iw_close+0x6f/0xc0 [irdma]
    [222808.419352]  i40e_client_device_unregister+0x14a/0x180 [i40e]
    [222808.419450]  i40iw_remove+0x21/0x30 [irdma]
    [222808.419554]  auxiliary_bus_remove+0x31/0x50
    [222808.419563]  device_remove+0x69/0xb0
    [222808.419572]  device_release_driver_internal+0x293/0x360
    [222808.419582]  driver_detach+0x7c/0xf0
    [222808.419592]  bus_remove_driver+0x8c/0x150
    [222808.419600]  driver_unregister+0x45/0x70
    [222808.419610]  auxiliary_driver_unregister+0x16/0x30
    [222808.419618]  irdma_exit_module+0x18/0x1e [irdma]
    [222808.419733]  __do_sys_delete_module.constprop.0+0x1e2/0x310
    [222808.419745]  __x64_sys_delete_module+0x1b/0x30
    [222808.419755]  do_syscall_64+0x39/0x90
    [222808.419763]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    [222808.419829] value changed: 0x01 -> 0x03
    
    Fixes: 915cc7ac0f8e ("RDMA/irdma: Add miscellaneous utility definitions")
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230711175253.1289-4-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e1a5842a359ee18d5a9e75097d7cf4d93e233bb
Author: Shiraz Saleem <shiraz.saleem@intel.com>
Date:   Tue Jul 11 12:52:52 2023 -0500

    RDMA/irdma: Fix data race on CQP completion stats
    
    [ Upstream commit f2c3037811381f9149243828c7eb9a1631df9f9c ]
    
    CQP completion statistics is read lockesly in irdma_wait_event and
    irdma_check_cqp_progress while it can be updated in the completion
    thread irdma_sc_ccq_get_cqe_info on another CPU as KCSAN reports.
    
    Make completion statistics an atomic variable to reflect coherent updates
    to it. This will also avoid load/store tearing logic bug potentially
    possible by compiler optimizations.
    
    [77346.170861] BUG: KCSAN: data-race in irdma_handle_cqp_op [irdma] / irdma_sc_ccq_get_cqe_info [irdma]
    
    [77346.171383] write to 0xffff8a3250b108e0 of 8 bytes by task 9544 on cpu 4:
    [77346.171483]  irdma_sc_ccq_get_cqe_info+0x27a/0x370 [irdma]
    [77346.171658]  irdma_cqp_ce_handler+0x164/0x270 [irdma]
    [77346.171835]  cqp_compl_worker+0x1b/0x20 [irdma]
    [77346.172009]  process_one_work+0x4d1/0xa40
    [77346.172024]  worker_thread+0x319/0x700
    [77346.172037]  kthread+0x180/0x1b0
    [77346.172054]  ret_from_fork+0x22/0x30
    
    [77346.172136] read to 0xffff8a3250b108e0 of 8 bytes by task 9838 on cpu 2:
    [77346.172234]  irdma_handle_cqp_op+0xf4/0x4b0 [irdma]
    [77346.172413]  irdma_cqp_aeq_cmd+0x75/0xa0 [irdma]
    [77346.172592]  irdma_create_aeq+0x390/0x45a [irdma]
    [77346.172769]  irdma_rt_init_hw.cold+0x212/0x85d [irdma]
    [77346.172944]  irdma_probe+0x54f/0x620 [irdma]
    [77346.173122]  auxiliary_bus_probe+0x66/0xa0
    [77346.173137]  really_probe+0x140/0x540
    [77346.173154]  __driver_probe_device+0xc7/0x220
    [77346.173173]  driver_probe_device+0x5f/0x140
    [77346.173190]  __driver_attach+0xf0/0x2c0
    [77346.173208]  bus_for_each_dev+0xa8/0xf0
    [77346.173225]  driver_attach+0x29/0x30
    [77346.173240]  bus_add_driver+0x29c/0x2f0
    [77346.173255]  driver_register+0x10f/0x1a0
    [77346.173272]  __auxiliary_driver_register+0xbc/0x140
    [77346.173287]  irdma_init_module+0x55/0x1000 [irdma]
    [77346.173460]  do_one_initcall+0x7d/0x410
    [77346.173475]  do_init_module+0x81/0x2c0
    [77346.173491]  load_module+0x1232/0x12c0
    [77346.173506]  __do_sys_finit_module+0x101/0x180
    [77346.173522]  __x64_sys_finit_module+0x3c/0x50
    [77346.173538]  do_syscall_64+0x39/0x90
    [77346.173553]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    [77346.173634] value changed: 0x0000000000000094 -> 0x0000000000000095
    
    Fixes: 915cc7ac0f8e ("RDMA/irdma: Add miscellaneous utility definitions")
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230711175253.1289-3-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b83e4c1e4c72fc99e20045432491984860e21986
Author: Shiraz Saleem <shiraz.saleem@intel.com>
Date:   Tue Jul 11 12:52:51 2023 -0500

    RDMA/irdma: Add missing read barriers
    
    [ Upstream commit 4984eb51453ff7eddee9e5ce816145be39c0ec5c ]
    
    On code inspection, there are many instances in the driver where
    CEQE and AEQE fields written to by HW are read without guaranteeing
    that the polarity bit has been read and checked first.
    
    Add a read barrier to avoid reordering of loads on the CEQE/AEQE fields
    prior to checking the polarity bit.
    
    Fixes: 3f49d6842569 ("RDMA/irdma: Implement HW Admin Queue OPs")
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Link: https://lore.kernel.org/r/20230711175253.1289-2-shiraz.saleem@intel.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14627d02b103526954101e3c6ec5ae991d25cd0d
Author: Rob Clark <robdclark@chromium.org>
Date:   Tue Jul 11 10:54:07 2023 -0700

    drm/msm/adreno: Fix snapshot BINDLESS_DATA size
    
    [ Upstream commit bd846ceee9c478d0397428f02696602ba5eb264a ]
    
    The incorrect size was causing "CP | AHB bus error" when snapshotting
    the GPU state on a6xx gen4 (a660 family).
    
    Closes: https://gitlab.freedesktop.org/drm/msm/-/issues/26
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Akhil P Oommen <quic_akhilpo@quicinc.com>
    Fixes: 1707add81551 ("drm/msm/a6xx: Add a6xx gpu state")
    Patchwork: https://patchwork.freedesktop.org/patch/546763/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6432b68700fccde8782d48fe090a8594a44b1e5
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Fri Jul 7 22:39:32 2023 +0300

    drm/msm/dpu: drop enum dpu_core_perf_data_bus_id
    
    [ Upstream commit e8383f5cf1b3573ce140a80bfbfd809278ab16d6 ]
    
    Drop the leftover of bus-client -> interconnect conversion, the enum
    dpu_core_perf_data_bus_id.
    
    Fixes: cb88482e2570 ("drm/msm/dpu: clean up references of DPU custom bus scaling")
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/546048/
    Link: https://lore.kernel.org/r/20230707193942.3806526-2-dmitry.baryshkov@linaro.org
    Signed-off-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10b5920c33c12cfd64c50234d41dd35a425ddc10
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Thu Jun 29 09:07:37 2023 +0300

    RDMA/mlx4: Make check for invalid flags stricter
    
    [ Upstream commit d64b1ee12a168030fbb3e0aebf7bce49e9a07589 ]
    
    This code is trying to ensure that only the flags specified in the list
    are allowed.  The problem is that ucmd->rx_hash_fields_mask is a u64 and
    the flags are an enum which is treated as a u32 in this context.  That
    means the test doesn't check whether the highest 32 bits are zero.
    
    Fixes: 4d02ebd9bbbd ("IB/mlx4: Fix RSS hash fields restrictions")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Link: https://lore.kernel.org/r/233ed975-982d-422a-b498-410f71d8a101@moroto.mountain
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 539cf23cb48835c69cc3d22edff28b92bd82bb18
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Wed Jul 26 00:46:25 2023 +0300

    tipc: stop tipc crypto on failure in tipc_node_create
    
    [ Upstream commit de52e17326c3e9a719c9ead4adb03467b8fae0ef ]
    
    If tipc_link_bc_create() fails inside tipc_node_create() for a newly
    allocated tipc node then we should stop its tipc crypto and free the
    resources allocated with a call to tipc_crypto_start().
    
    As the node ref is initialized to one to that point, just put the ref on
    tipc_link_bc_create() error case that would lead to tipc_node_free() be
    eventually executed and properly clean the node and its crypto resources.
    
    Found by Linux Verification Center (linuxtesting.org).
    
    Fixes: cb8092d70a6f ("tipc: move bc link creation back to tipc_node_create")
    Suggested-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/20230725214628.25246-1-pchelkin@ispras.ru
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f6a842db1781519b934c1361cafd6372c560ce4
Author: Yuanjun Gong <ruc_gongyuanjun@163.com>
Date:   Tue Jul 25 14:48:10 2023 +0800

    tipc: check return value of pskb_trim()
    
    [ Upstream commit e46e06ffc6d667a89b979701288e2264f45e6a7b ]
    
    goto free_skb if an unexpected result is returned by pskb_tirm()
    in tipc_crypto_rcv_complete().
    
    Fixes: fc1b6d6de220 ("tipc: introduce TIPC encryption & authentication")
    Signed-off-by: Yuanjun Gong <ruc_gongyuanjun@163.com>
    Reviewed-by: Tung Nguyen <tung.q.nguyen@dektech.com.au>
    Link: https://lore.kernel.org/r/20230725064810.5820-1-ruc_gongyuanjun@163.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0069a11a6f003a5d4907be3b989dd59ebb5b26a8
Author: Yuanjun Gong <ruc_gongyuanjun@163.com>
Date:   Tue Jul 25 11:27:26 2023 +0800

    benet: fix return value check in be_lancer_xmit_workarounds()
    
    [ Upstream commit 5c85f7065718a949902b238a6abd8fc907c5d3e0 ]
    
    in be_lancer_xmit_workarounds(), it should go to label 'tx_drop'
    if an unexpected value is returned by pskb_trim().
    
    Fixes: 93040ae5cc8d ("be2net: Fix to trim skb for padded vlan packets to workaround an ASIC Bug")
    Signed-off-by: Yuanjun Gong <ruc_gongyuanjun@163.com>
    Link: https://lore.kernel.org/r/20230725032726.15002-1-ruc_gongyuanjun@163.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f7432b7c3b5296917301d73f57839820ecf5e4f
Author: Lin Ma <linma@zju.edu.cn>
Date:   Tue Jul 25 10:42:27 2023 +0800

    net/sched: mqprio: Add length check for TCA_MQPRIO_{MAX/MIN}_RATE64
    
    [ Upstream commit 6c58c8816abb7b93b21fa3b1d0c1726402e5e568 ]
    
    The nla_for_each_nested parsing in function mqprio_parse_nlattr() does
    not check the length of the nested attribute. This can lead to an
    out-of-attribute read and allow a malformed nlattr (e.g., length 0) to
    be viewed as 8 byte integer and passed to priv->max_rate/min_rate.
    
    This patch adds the check based on nla_len() when check the nla_type(),
    which ensures that the length of these two attribute must equals
    sizeof(u64).
    
    Fixes: 4e8b86c06269 ("mqprio: Introduce new hardware offload mode and shaper in mqprio")
    Reviewed-by: Victor Nogueira <victor@mojatatu.com>
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Link: https://lore.kernel.org/r/20230725024227.426561-1-linma@zju.edu.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eefc0b32159aad57ce8bb664bd22a63a407f875f
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Apr 11 21:01:51 2023 +0300

    net/sched: mqprio: add extack to mqprio_parse_nlattr()
    
    [ Upstream commit 57f21bf85400abadac0cb2a4db5de1d663f8863f ]
    
    Netlink attribute parsing in mqprio is a minesweeper game, with many
    options having the possibility of being passed incorrectly and the user
    being none the wiser.
    
    Try to make errors less sour by giving user space some information
    regarding what went wrong.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Ferenc Fejes <fejes@inf.elte.hu>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: 6c58c8816abb ("net/sched: mqprio: Add length check for TCA_MQPRIO_{MAX/MIN}_RATE64")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5523d2e31935d145760ec2341dcb18a43b4f279c
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sat Feb 4 15:52:55 2023 +0200

    net/sched: mqprio: refactor nlattr parsing to a separate function
    
    [ Upstream commit feb2cf3dcfb930aec2ca65c66d1365543d5ba943 ]
    
    mqprio_init() is quite large and unwieldy to add more code to.
    Split the netlink attribute parsing to a dedicated function.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: 6c58c8816abb ("net/sched: mqprio: Add length check for TCA_MQPRIO_{MAX/MIN}_RATE64")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7218974aba07ff60c646d5a512b02b871402b03e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jul 25 09:38:32 2023 -0700

    mm: suppress mm fault logging if fatal signal already pending
    
    [ Upstream commit 5f0bc0b042fc77ff70e14c790abdec960cde4ec1 ]
    
    Commit eda0047296a1 ("mm: make the page fault mmap locking killable")
    intentionally made it much easier to trigger the "page fault fails
    because a fatal signal is pending" situation, by having the mmap locking
    fail early in that case.
    
    We have long aborted page faults in other fatal cases when the actual IO
    for a page is interrupted by SIGKILL - which is particularly useful for
    the traditional case of NFS hanging due to network issues, but local
    filesystems could cause it too if you happened to get the SIGKILL while
    waiting for a page to be faulted in (eg lock_folio_maybe_drop_mmap()).
    
    So aborting the page fault wasn't a new condition - but it now triggers
    earlier, before we even get to 'handle_mm_fault()'.  And as a result the
    error doesn't go through our 'fault_signal_pending()' logic, and doesn't
    get filtered away there.
    
    Normally you'd never even notice, because if a fatal signal is pending,
    the new SIGSEGV we send ends up being ignored anyway.
    
    But it turns out that there is one very noticeable exception: if you
    enable 'show_unhandled_signals', the aborted page fault will be logged
    in the kernel messages, and you'll get a scary line looking something
    like this in your logs:
    
      pverados[2183248]: segfault at 55e5a00f9ae0 ip 000055e5a00f9ae0 sp 00007ffc0720bea8 error 14 in perl[55e5a00d4000+195000] likely on CPU 10 (core 4, socket 0)
    
    which is rather misleading.  It's not really a segfault at all, it's
    just "the thread was killed before the page fault completed, so we
    aborted the page fault".
    
    Fix this by just making it clear that a pending fatal signal means that
    any new signal coming in after that is implicitly handled.  This will
    avoid the misleading logging, since now the signal isn't 'unhandled' any
    more.
    
    Reported-and-tested-by: Fiona Ebner <f.ebner@proxmox.com>
    Tested-by: Thomas Lamprecht <t.lamprecht@proxmox.com>
    Link: https://lore.kernel.org/lkml/8d063a26-43f5-0bb7-3203-c6a04dc159f8@proxmox.com/
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Fixes: eda0047296a1 ("mm: make the page fault mmap locking killable")
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 268cb07ef3ee17b5454a7c4b23376802c5b00c79
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sun Jul 23 16:41:48 2023 +0200

    netfilter: nf_tables: disallow rule addition to bound chain via NFTA_RULE_CHAIN_ID
    
    [ Upstream commit 0ebc1064e4874d5987722a2ddbc18f94aa53b211 ]
    
    Bail out with EOPNOTSUPP when adding rule to bound chain via
    NFTA_RULE_CHAIN_ID. The following warning splat is shown when
    adding a rule to a deleted bound chain:
    
     WARNING: CPU: 2 PID: 13692 at net/netfilter/nf_tables_api.c:2013 nf_tables_chain_destroy+0x1f7/0x210 [nf_tables]
     CPU: 2 PID: 13692 Comm: chain-bound-rul Not tainted 6.1.39 #1
     RIP: 0010:nf_tables_chain_destroy+0x1f7/0x210 [nf_tables]
    
    Fixes: d0e2c7de92c7 ("netfilter: nf_tables: add NFT_CHAIN_BINDING")
    Reported-by: Kevin Rich <kevinrich1337@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4237462a073e24f71c700f3e5929f07b6ee1bcaa
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sun Jul 23 16:24:46 2023 +0200

    netfilter: nf_tables: skip immediate deactivate in _PREPARE_ERROR
    
    [ Upstream commit 0a771f7b266b02d262900c75f1e175c7fe76fec2 ]
    
    On error when building the rule, the immediate expression unbinds the
    chain, hence objects can be deactivated by the transaction records.
    
    Otherwise, it is possible to trigger the following warning:
    
     WARNING: CPU: 3 PID: 915 at net/netfilter/nf_tables_api.c:2013 nf_tables_chain_destroy+0x1f7/0x210 [nf_tables]
     CPU: 3 PID: 915 Comm: chain-bind-err- Not tainted 6.1.39 #1
     RIP: 0010:nf_tables_chain_destroy+0x1f7/0x210 [nf_tables]
    
    Fixes: 4bedf9eee016 ("netfilter: nf_tables: fix chain binding transaction logic")
    Reported-by: Kevin Rich <kevinrich1337@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89a4d1a89751a0fbd520e64091873e19cc0979e8
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Jul 20 21:30:05 2023 +0200

    netfilter: nft_set_rbtree: fix overlap expiration walk
    
    [ Upstream commit f718863aca469a109895cb855e6b81fff4827d71 ]
    
    The lazy gc on insert that should remove timed-out entries fails to release
    the other half of the interval, if any.
    
    Can be reproduced with tests/shell/testcases/sets/0044interval_overlap_0
    in nftables.git and kmemleak enabled kernel.
    
    Second bug is the use of rbe_prev vs. prev pointer.
    If rbe_prev() returns NULL after at least one iteration, rbe_prev points
    to element that is not an end interval, hence it should not be removed.
    
    Lastly, check the genmask of the end interval if this is active in the
    current generation.
    
    Fixes: c9e6978e2725 ("netfilter: nft_set_rbtree: Switch to node list walk for overlap detection")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c09df09241fdd6aa5b94a5243369662a13ec608a
Author: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date:   Mon Jul 24 09:12:50 2023 -0700

    igc: Fix Kernel Panic during ndo_tx_timeout callback
    
    [ Upstream commit d4a7ce642100765119a872d4aba1bf63e3a22c8a ]
    
    The Xeon validation group has been carrying out some loaded tests
    with various HW configurations, and they have seen some transmit
    queue time out happening during the test. This will cause the
    reset adapter function to be called by igc_tx_timeout().
    Similar race conditions may arise when the interface is being brought
    down and up in igc_reinit_locked(), an interrupt being generated, and
    igc_clean_tx_irq() being called to complete the TX.
    
    When the igc_tx_timeout() function is invoked, this patch will turn
    off all TX ring HW queues during igc_down() process. TX ring HW queues
    will be activated again during the igc_configure_tx_ring() process
    when performing the igc_up() procedure later.
    
    This patch also moved existing igc_disable_tx_ring_hw() to avoid using
    forward declaration.
    
    Kernel trace:
    [ 7678.747813] ------------[ cut here ]------------
    [ 7678.757914] NETDEV WATCHDOG: enp1s0 (igc): transmit queue 2 timed out
    [ 7678.770117] WARNING: CPU: 0 PID: 13 at net/sched/sch_generic.c:525 dev_watchdog+0x1ae/0x1f0
    [ 7678.784459] Modules linked in: xt_conntrack nft_chain_nat xt_MASQUERADE xt_addrtype nft_compat
    nf_tables nfnetlink br_netfilter bridge stp llc overlay dm_mod emrcha(PO) emriio(PO) rktpm(PO)
    cegbuf_mod(PO) patch_update(PO) se(PO) sgx_tgts(PO) mktme(PO) keylocker(PO) svtdx(PO) svfs_pci_hotplug(PO)
    vtd_mod(PO) davemem(PO) svmabort(PO) svindexio(PO) usbx2(PO) ehci_sched(PO) svheartbeat(PO) ioapic(PO)
    sv8259(PO) svintr(PO) lt(PO) pcierootport(PO) enginefw_mod(PO) ata(PO) smbus(PO) spiflash_cdf(PO) arden(PO)
    dsa_iax(PO) oobmsm_punit(PO) cpm(PO) svkdb(PO) ebg_pch(PO) pch(PO) sviotargets(PO) svbdf(PO) svmem(PO)
    svbios(PO) dram(PO) svtsc(PO) targets(PO) superio(PO) svkernel(PO) cswitch(PO) mcf(PO) pentiumIII_mod(PO)
    fs_svfs(PO) mdevdefdb(PO) svfs_os_services(O) ixgbe mdio mdio_devres libphy emeraldrapids_svdefs(PO)
    regsupport(O) libnvdimm nls_cp437 snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio snd_hda_intel
    snd_intel_dspcfg snd_hda_codec snd_hwdep x86_pkg_temp_thermal snd_hda_core snd_pcm snd_timer isst_if_mbox_pci
    [ 7678.784496]  input_leds isst_if_mmio sg snd isst_if_common soundcore wmi button sad9(O) drm fuse backlight
    configfs efivarfs ip_tables x_tables vmd sdhci led_class rtl8150 r8152 hid_generic pegasus mmc_block usbhid
    mmc_core hid megaraid_sas ixgb igb i2c_algo_bit ice i40e hpsa scsi_transport_sas e1000e e1000 e100 ax88179_178a
    usbnet xhci_pci sd_mod xhci_hcd t10_pi crc32c_intel crc64_rocksoft igc crc64 crc_t10dif usbcore
    crct10dif_generic ptp crct10dif_common usb_common pps_core
    [ 7679.200403] RIP: 0010:dev_watchdog+0x1ae/0x1f0
    [ 7679.210201] Code: 28 e9 53 ff ff ff 4c 89 e7 c6 05 06 42 b9 00 01 e8 17 d1 fb ff 44 89 e9 4c
    89 e6 48 c7 c7 40 ad fb 81 48 89 c2 e8 52 62 82 ff <0f> 0b e9 72 ff ff ff 65 8b 05 80 7d 7c 7e
    89 c0 48 0f a3 05 0a c1
    [ 7679.245438] RSP: 0018:ffa00000001f7d90 EFLAGS: 00010282
    [ 7679.256021] RAX: 0000000000000000 RBX: ff11000109938440 RCX: 0000000000000000
    [ 7679.268710] RDX: ff11000361e26cd8 RSI: ff11000361e1b880 RDI: ff11000361e1b880
    [ 7679.281314] RBP: ffa00000001f7da8 R08: ff1100035f8fffe8 R09: 0000000000027ffb
    [ 7679.293840] R10: 0000000000001f0a R11: ff1100035f840000 R12: ff11000109938000
    [ 7679.306276] R13: 0000000000000002 R14: dead000000000122 R15: ffa00000001f7e18
    [ 7679.318648] FS:  0000000000000000(0000) GS:ff11000361e00000(0000) knlGS:0000000000000000
    [ 7679.332064] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 7679.342757] CR2: 00007ffff7fca168 CR3: 000000013b08a006 CR4: 0000000000471ef8
    [ 7679.354984] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 7679.367207] DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
    [ 7679.379370] PKRU: 55555554
    [ 7679.386446] Call Trace:
    [ 7679.393152]  <TASK>
    [ 7679.399363]  ? __pfx_dev_watchdog+0x10/0x10
    [ 7679.407870]  call_timer_fn+0x31/0x110
    [ 7679.415698]  expire_timers+0xb2/0x120
    [ 7679.423403]  run_timer_softirq+0x179/0x1e0
    [ 7679.431532]  ? __schedule+0x2b1/0x820
    [ 7679.439078]  __do_softirq+0xd1/0x295
    [ 7679.446426]  ? __pfx_smpboot_thread_fn+0x10/0x10
    [ 7679.454867]  run_ksoftirqd+0x22/0x30
    [ 7679.462058]  smpboot_thread_fn+0xb7/0x160
    [ 7679.469670]  kthread+0xcd/0xf0
    [ 7679.476097]  ? __pfx_kthread+0x10/0x10
    [ 7679.483211]  ret_from_fork+0x29/0x50
    [ 7679.490047]  </TASK>
    [ 7679.495204] ---[ end trace 0000000000000000 ]---
    [ 7679.503179] igc 0000:01:00.0 enp1s0: Register Dump
    [ 7679.511230] igc 0000:01:00.0 enp1s0: Register Name   Value
    [ 7679.519892] igc 0000:01:00.0 enp1s0: CTRL            181c0641
    [ 7679.528782] igc 0000:01:00.0 enp1s0: STATUS          40280683
    [ 7679.537551] igc 0000:01:00.0 enp1s0: CTRL_EXT        10000040
    [ 7679.546284] igc 0000:01:00.0 enp1s0: MDIC            180a3800
    [ 7679.554942] igc 0000:01:00.0 enp1s0: ICR             00000081
    [ 7679.563503] igc 0000:01:00.0 enp1s0: RCTL            04408022
    [ 7679.571963] igc 0000:01:00.0 enp1s0: RDLEN[0-3]      00001000 00001000 00001000 00001000
    [ 7679.583075] igc 0000:01:00.0 enp1s0: RDH[0-3]        00000068 000000b6 0000000f 00000031
    [ 7679.594162] igc 0000:01:00.0 enp1s0: RDT[0-3]        00000066 000000b2 0000000e 00000030
    [ 7679.605174] igc 0000:01:00.0 enp1s0: RXDCTL[0-3]     02040808 02040808 02040808 02040808
    [ 7679.616196] igc 0000:01:00.0 enp1s0: RDBAL[0-3]      1bb7c000 1bb7f000 1bb82000 0ef33000
    [ 7679.627242] igc 0000:01:00.0 enp1s0: RDBAH[0-3]      00000001 00000001 00000001 00000001
    [ 7679.638256] igc 0000:01:00.0 enp1s0: TCTL            a503f0fa
    [ 7679.646607] igc 0000:01:00.0 enp1s0: TDBAL[0-3]      2ba4a000 1bb6f000 1bb74000 1bb79000
    [ 7679.657609] igc 0000:01:00.0 enp1s0: TDBAH[0-3]      00000001 00000001 00000001 00000001
    [ 7679.668551] igc 0000:01:00.0 enp1s0: TDLEN[0-3]      00001000 00001000 00001000 00001000
    [ 7679.679470] igc 0000:01:00.0 enp1s0: TDH[0-3]        000000a7 0000002d 000000bf 000000d9
    [ 7679.690406] igc 0000:01:00.0 enp1s0: TDT[0-3]        000000a7 0000002d 000000bf 000000d9
    [ 7679.701264] igc 0000:01:00.0 enp1s0: TXDCTL[0-3]     02100108 02100108 02100108 02100108
    [ 7679.712123] igc 0000:01:00.0 enp1s0: Reset adapter
    [ 7683.085967] igc 0000:01:00.0 enp1s0: NIC Link is Up 1000 Mbps Full Duplex, Flow Control: RX/TX
    [ 8086.945561] ------------[ cut here ]------------
    Entering kdb (current=0xffffffff8220b200, pid 0) on processor 0
    Oops: (null) due to oops @ 0xffffffff81573888
    RIP: 0010:dql_completed+0x148/0x160
    Code: c9 00 48 89 57 58 e9 46 ff ff ff 45 85 e4 41 0f 95 c4 41 39 db 0f 95
    c1 41 84 cc 74 05 45 85 ed 78 0a 44 89 c1 e9 27 ff ff ff <0f> 0b 01 f6 44 89
    c1 29 f1 0f 48 ca eb 8c cc cc cc cc cc cc cc cc
    RSP: 0018:ffa0000000003e00 EFLAGS: 00010287
    RAX: 000000000000006c RBX: ffa0000003eb0f78 RCX: ff11000109938000
    RDX: 0000000000000003 RSI: 0000000000000160 RDI: ff110001002e9480
    RBP: ffa0000000003ed8 R08: ff110001002e93c0 R09: ffa0000000003d28
    R10: 0000000000007cc0 R11: 0000000000007c54 R12: 00000000ffffffd9
    R13: ff1100037039cb00 R14: 00000000ffffffd9 R15: ff1100037039c048
    FS:  0000000000000000(0000) GS:ff11000361e00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007ffff7fca168 CR3: 000000013b08a003 CR4: 0000000000471ef8
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
     <IRQ>
     ? igc_poll+0x1a9/0x14d0 [igc]
     __napi_poll+0x2e/0x1b0
     net_rx_action+0x126/0x250
     __do_softirq+0xd1/0x295
     irq_exit_rcu+0xc5/0xf0
     common_interrupt+0x86/0xa0
     </IRQ>
     <TASK>
     asm_common_interrupt+0x27/0x40
    RIP: 0010:cpuidle_enter_state+0xd3/0x3e0
    Code: 73 f1 ff ff 49 89 c6 8b 05 e2 ca a7 00 85 c0 0f 8f b3 02 00 00 31 ff e8 1b
    de 75 ff 80 7d d7 00 0f 85 cd 01 00 00 fb 45 85 ff <0f> 88 fd 00 00 00 49 63 cf
    4c 2b 75 c8 48 8d 04 49 48 89 ca 48 8d
    RSP: 0018:ffffffff82203df0 EFLAGS: 00000202
    RAX: ff11000361e2a200 RBX: 0000000000000002 RCX: 000000000000001f
    RDX: 0000000000000000 RSI: 000000003cf3cf3d RDI: 0000000000000000
    RBP: ffffffff82203e28 R08: 0000075ae38471c8 R09: 0000000000000018
    R10: 000000000000031a R11: ffffffff8238dca0 R12: ffd1ffffff200000
    R13: ffffffff8238dca0 R14: 0000075ae38471c8 R15: 0000000000000002
     cpuidle_enter+0x2e/0x50
     call_cpuidle+0x23/0x40
     do_idle+0x1be/0x220
     cpu_startup_entry+0x20/0x30
     rest_init+0xb5/0xc0
     arch_call_rest_init+0xe/0x30
     start_kernel+0x448/0x760
     x86_64_start_kernel+0x109/0x150
     secondary_startup_64_no_verify+0xe0/0xeb
     </TASK>
    more>
    [0]kdb>
    
    [0]kdb>
    [0]kdb> go
    Catastrophic error detected
    kdb_continue_catastrophic=0, type go a second time if you really want to
    continue
    [0]kdb> go
    Catastrophic error detected
    kdb_continue_catastrophic=0, attempting to continue
    [ 8086.955689] refcount_t: underflow; use-after-free.
    [ 8086.955697] WARNING: CPU: 0 PID: 0 at lib/refcount.c:28 refcount_warn_saturate+0xc2/0x110
    [ 8086.955706] Modules linked in: xt_conntrack nft_chain_nat xt_MASQUERADE xt_addrtype nft_compat
    nf_tables nfnetlink br_netfilter bridge stp llc overlay dm_mod emrcha(PO) emriio(PO) rktpm(PO)
    cegbuf_mod(PO) patch_update(PO) se(PO) sgx_tgts(PO) mktme(PO) keylocker(PO) svtdx(PO)
    svfs_pci_hotplug(PO) vtd_mod(PO) davemem(PO) svmabort(PO) svindexio(PO) usbx2(PO) ehci_sched(PO)
    svheartbeat(PO) ioapic(PO) sv8259(PO) svintr(PO) lt(PO) pcierootport(PO) enginefw_mod(PO) ata(PO)
    smbus(PO) spiflash_cdf(PO) arden(PO) dsa_iax(PO) oobmsm_punit(PO) cpm(PO) svkdb(PO) ebg_pch(PO)
    pch(PO) sviotargets(PO) svbdf(PO) svmem(PO) svbios(PO) dram(PO) svtsc(PO) targets(PO) superio(PO)
    svkernel(PO) cswitch(PO) mcf(PO) pentiumIII_mod(PO) fs_svfs(PO) mdevdefdb(PO) svfs_os_services(O)
    ixgbe mdio mdio_devres libphy emeraldrapids_svdefs(PO) regsupport(O) libnvdimm nls_cp437
    snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio snd_hda_intel snd_intel_dspcfg
    snd_hda_codec snd_hwdep x86_pkg_temp_thermal snd_hda_core snd_pcm snd_timer isst_if_mbox_pci
    [ 8086.955751]  input_leds isst_if_mmio sg snd isst_if_common soundcore wmi button sad9(O) drm
    fuse backlight configfs efivarfs ip_tables x_tables vmd sdhci led_class rtl8150 r8152 hid_generic
    pegasus mmc_block usbhid mmc_core hid megaraid_sas ixgb igb i2c_algo_bit ice i40e hpsa
    scsi_transport_sas e1000e e1000 e100 ax88179_178a usbnet xhci_pci sd_mod xhci_hcd t10_pi
    crc32c_intel crc64_rocksoft igc crc64 crc_t10dif usbcore crct10dif_generic ptp crct10dif_common
    usb_common pps_core
    [ 8086.955784] RIP: 0010:refcount_warn_saturate+0xc2/0x110
    [ 8086.955788] Code: 01 e8 82 e7 b4 ff 0f 0b 5d c3 cc cc cc cc 80 3d 68 c6 eb 00 00 75 81
    48 c7 c7 a0 87 f6 81 c6 05 58 c6 eb 00 01 e8 5e e7 b4 ff <0f> 0b 5d c3 cc cc cc cc 80 3d
    42 c6 eb 00 00 0f 85 59 ff ff ff 48
    [ 8086.955790] RSP: 0018:ffa0000000003da0 EFLAGS: 00010286
    [ 8086.955793] RAX: 0000000000000000 RBX: ff1100011da40ee0 RCX: ff11000361e1b888
    [ 8086.955794] RDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ff11000361e1b880
    [ 8086.955795] RBP: ffa0000000003da0 R08: 80000000ffff9f45 R09: ffa0000000003d28
    [ 8086.955796] R10: ff1100035f840000 R11: 0000000000000028 R12: ff11000319ff8000
    [ 8086.955797] R13: ff1100011bb79d60 R14: 00000000ffffffd6 R15: ff1100037039cb00
    [ 8086.955798] FS:  0000000000000000(0000) GS:ff11000361e00000(0000) knlGS:0000000000000000
    [ 8086.955800] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 8086.955801] CR2: 00007ffff7fca168 CR3: 000000013b08a003 CR4: 0000000000471ef8
    [ 8086.955803] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 8086.955803] DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
    [ 8086.955804] PKRU: 55555554
    [ 8086.955805] Call Trace:
    [ 8086.955806]  <IRQ>
    [ 8086.955808]  tcp_wfree+0x112/0x130
    [ 8086.955814]  skb_release_head_state+0x24/0xa0
    [ 8086.955818]  napi_consume_skb+0x9c/0x160
    [ 8086.955821]  igc_poll+0x5d8/0x14d0 [igc]
    [ 8086.955835]  __napi_poll+0x2e/0x1b0
    [ 8086.955839]  net_rx_action+0x126/0x250
    [ 8086.955843]  __do_softirq+0xd1/0x295
    [ 8086.955846]  irq_exit_rcu+0xc5/0xf0
    [ 8086.955851]  common_interrupt+0x86/0xa0
    [ 8086.955857]  </IRQ>
    [ 8086.955857]  <TASK>
    [ 8086.955858]  asm_common_interrupt+0x27/0x40
    [ 8086.955862] RIP: 0010:cpuidle_enter_state+0xd3/0x3e0
    [ 8086.955866] Code: 73 f1 ff ff 49 89 c6 8b 05 e2 ca a7 00 85 c0 0f 8f b3 02 00 00 31 ff e8
    1b de 75 ff 80 7d d7 00 0f 85 cd 01 00 00 fb 45 85 ff <0f> 88 fd 00 00 00 49 63 cf 4c 2b 75
    c8 48 8d 04 49 48 89 ca 48 8d
    [ 8086.955867] RSP: 0018:ffffffff82203df0 EFLAGS: 00000202
    [ 8086.955869] RAX: ff11000361e2a200 RBX: 0000000000000002 RCX: 000000000000001f
    [ 8086.955870] RDX: 0000000000000000 RSI: 000000003cf3cf3d RDI: 0000000000000000
    [ 8086.955871] RBP: ffffffff82203e28 R08: 0000075ae38471c8 R09: 0000000000000018
    [ 8086.955872] R10: 000000000000031a R11: ffffffff8238dca0 R12: ffd1ffffff200000
    [ 8086.955873] R13: ffffffff8238dca0 R14: 0000075ae38471c8 R15: 0000000000000002
    [ 8086.955875]  cpuidle_enter+0x2e/0x50
    [ 8086.955880]  call_cpuidle+0x23/0x40
    [ 8086.955884]  do_idle+0x1be/0x220
    [ 8086.955887]  cpu_startup_entry+0x20/0x30
    [ 8086.955889]  rest_init+0xb5/0xc0
    [ 8086.955892]  arch_call_rest_init+0xe/0x30
    [ 8086.955895]  start_kernel+0x448/0x760
    [ 8086.955898]  x86_64_start_kernel+0x109/0x150
    [ 8086.955900]  secondary_startup_64_no_verify+0xe0/0xeb
    [ 8086.955904]  </TASK>
    [ 8086.955904] ---[ end trace 0000000000000000 ]---
    [ 8086.955912] ------------[ cut here ]------------
    [ 8086.955913] kernel BUG at lib/dynamic_queue_limits.c:27!
    [ 8086.955918] invalid opcode: 0000 [#1] SMP
    [ 8086.955922] RIP: 0010:dql_completed+0x148/0x160
    [ 8086.955925] Code: c9 00 48 89 57 58 e9 46 ff ff ff 45 85 e4 41 0f 95 c4 41 39 db
    0f 95 c1 41 84 cc 74 05 45 85 ed 78 0a 44 89 c1 e9 27 ff ff ff <0f> 0b 01 f6 44 89
    c1 29 f1 0f 48 ca eb 8c cc cc cc cc cc cc cc cc
    [ 8086.955927] RSP: 0018:ffa0000000003e00 EFLAGS: 00010287
    [ 8086.955928] RAX: 000000000000006c RBX: ffa0000003eb0f78 RCX: ff11000109938000
    [ 8086.955929] RDX: 0000000000000003 RSI: 0000000000000160 RDI: ff110001002e9480
    [ 8086.955930] RBP: ffa0000000003ed8 R08: ff110001002e93c0 R09: ffa0000000003d28
    [ 8086.955931] R10: 0000000000007cc0 R11: 0000000000007c54 R12: 00000000ffffffd9
    [ 8086.955932] R13: ff1100037039cb00 R14: 00000000ffffffd9 R15: ff1100037039c048
    [ 8086.955933] FS:  0000000000000000(0000) GS:ff11000361e00000(0000) knlGS:0000000000000000
    [ 8086.955934] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 8086.955935] CR2: 00007ffff7fca168 CR3: 000000013b08a003 CR4: 0000000000471ef8
    [ 8086.955936] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 8086.955937] DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
    [ 8086.955938] PKRU: 55555554
    [ 8086.955939] Call Trace:
    [ 8086.955939]  <IRQ>
    [ 8086.955940]  ? igc_poll+0x1a9/0x14d0 [igc]
    [ 8086.955949]  __napi_poll+0x2e/0x1b0
    [ 8086.955952]  net_rx_action+0x126/0x250
    [ 8086.955956]  __do_softirq+0xd1/0x295
    [ 8086.955958]  irq_exit_rcu+0xc5/0xf0
    [ 8086.955961]  common_interrupt+0x86/0xa0
    [ 8086.955964]  </IRQ>
    [ 8086.955965]  <TASK>
    [ 8086.955965]  asm_common_interrupt+0x27/0x40
    [ 8086.955968] RIP: 0010:cpuidle_enter_state+0xd3/0x3e0
    [ 8086.955971] Code: 73 f1 ff ff 49 89 c6 8b 05 e2 ca a7 00 85 c0 0f 8f b3 02 00 00
    31 ff e8 1b de 75 ff 80 7d d7 00 0f 85 cd 01 00 00 fb 45 85 ff <0f> 88 fd 00 00 00
    49 63 cf 4c 2b 75 c8 48 8d 04 49 48 89 ca 48 8d
    [ 8086.955972] RSP: 0018:ffffffff82203df0 EFLAGS: 00000202
    [ 8086.955973] RAX: ff11000361e2a200 RBX: 0000000000000002 RCX: 000000000000001f
    [ 8086.955974] RDX: 0000000000000000 RSI: 000000003cf3cf3d RDI: 0000000000000000
    [ 8086.955974] RBP: ffffffff82203e28 R08: 0000075ae38471c8 R09: 0000000000000018
    [ 8086.955975] R10: 000000000000031a R11: ffffffff8238dca0 R12: ffd1ffffff200000
    [ 8086.955976] R13: ffffffff8238dca0 R14: 0000075ae38471c8 R15: 0000000000000002
    [ 8086.955978]  cpuidle_enter+0x2e/0x50
    [ 8086.955981]  call_cpuidle+0x23/0x40
    [ 8086.955984]  do_idle+0x1be/0x220
    [ 8086.955985]  cpu_startup_entry+0x20/0x30
    [ 8086.955987]  rest_init+0xb5/0xc0
    [ 8086.955990]  arch_call_rest_init+0xe/0x30
    [ 8086.955992]  start_kernel+0x448/0x760
    [ 8086.955994]  x86_64_start_kernel+0x109/0x150
    [ 8086.955996]  secondary_startup_64_no_verify+0xe0/0xeb
    [ 8086.955998]  </TASK>
    [ 8086.955999] Modules linked in: xt_conntrack nft_chain_nat xt_MASQUERADE xt_addrtype
    nft_compat nf_tables nfnetlink br_netfilter bridge stp llc overlay dm_mod emrcha(PO) emriio(PO)
    rktpm(PO) cegbuf_mod(PO) patch_update(PO) se(PO) sgx_tgts(PO) mktme(PO) keylocker(PO) svtdx(PO)
    svfs_pci_hotplug(PO) vtd_mod(PO) davemem(PO) svmabort(PO) svindexio(PO) usbx2(PO) ehci_sched(PO)
    svheartbeat(PO) ioapic(PO) sv8259(PO) svintr(PO) lt(PO) pcierootport(PO) enginefw_mod(PO) ata(PO)
    smbus(PO) spiflash_cdf(PO) arden(PO) dsa_iax(PO) oobmsm_punit(PO) cpm(PO) svkdb(PO) ebg_pch(PO)
    pch(PO) sviotargets(PO) svbdf(PO) svmem(PO) svbios(PO) dram(PO) svtsc(PO) targets(PO) superio(PO)
    svkernel(PO) cswitch(PO) mcf(PO) pentiumIII_mod(PO) fs_svfs(PO) mdevdefdb(PO) svfs_os_services(O)
    ixgbe mdio mdio_devres libphy emeraldrapids_svdefs(PO) regsupport(O) libnvdimm nls_cp437
    snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio snd_hda_intel snd_intel_dspcfg
    snd_hda_codec snd_hwdep x86_pkg_temp_thermal snd_hda_core snd_pcm snd_timer isst_if_mbox_pci
    [ 8086.956029]  input_leds isst_if_mmio sg snd isst_if_common soundcore wmi button sad9(O) drm
    fuse backlight configfs efivarfs ip_tables x_tables vmd sdhci led_class rtl8150 r8152 hid_generic
    pegasus mmc_block usbhid mmc_core hid megaraid_sas ixgb igb i2c_algo_bit ice i40e hpsa
    scsi_transport_sas e1000e e1000 e100 ax88179_178a usbnet xhci_pci sd_mod xhci_hcd t10_pi
    crc32c_intel crc64_rocksoft igc crc64 crc_t10dif usbcore crct10dif_generic ptp crct10dif_common
    usb_common pps_core
    [16762.543675] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.593 msecs
    [16762.543678] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.595 msecs
    [16762.543673] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.495 msecs
    [16762.543679] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.599 msecs
    [16762.543678] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.598 msecs
    [16762.543690] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.605 msecs
    [16762.543684] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.599 msecs
    [16762.543693] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 8675587.613 msecs
    [16762.543784] ---[ end trace 0000000000000000 ]---
    [16762.849099] RIP: 0010:dql_completed+0x148/0x160
    PANIC: Fatal exception in interrupt
    
    Fixes: 9b275176270e ("igc: Add ndo_tx_timeout support")
    Tested-by: Alejandra Victoria Alcaraz <alejandra.victoria.alcaraz@intel.com>
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Acked-by: Sasha Neftin <sasha.neftin@intel.com>
    Tested-by: Naama Meir <naamax.meir@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ecdbf2467ae4bc4df00c5cfab427cb1aaa5e3e1
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Tue Jul 25 02:03:29 2023 +0300

    x86/traps: Fix load_unaligned_zeropad() handling for shared TDX memory
    
    [ Upstream commit 9f9116406120638b4d8db3831ffbc430dd2e1e95 ]
    
    Commit c4e34dd99f2e ("x86: simplify load_unaligned_zeropad()
    implementation") changes how exceptions around load_unaligned_zeropad()
    handled.  The kernel now uses the fault_address in fixup_exception() to
    verify the address calculations for the load_unaligned_zeropad().
    
    It works fine for #PF, but breaks on #VE since no fault address is
    passed down to fixup_exception().
    
    Propagating ve_info.gla down to fixup_exception() resolves the issue.
    
    See commit 1e7769653b06 ("x86/tdx: Handle load_unaligned_zeropad()
    page-cross to a shared page") for more context.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reported-by: Michael Kelley <mikelley@microsoft.com>
    Fixes: c4e34dd99f2e ("x86: simplify load_unaligned_zeropad() implementation")
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb160f4f90d1a5f48fe21a965461d993a6b6ebdc
Author: Maxim Mikityanskiy <maxtram95@gmail.com>
Date:   Fri Jul 21 17:54:23 2023 +0300

    platform/x86: msi-laptop: Fix rfkill out-of-sync on MSI Wind U100
    
    [ Upstream commit ad084a6d99bc182bf109c190c808e2ea073ec57b ]
    
    Only the HW rfkill state is toggled on laptops with quirks->ec_read_only
    (so far only MSI Wind U90/U100). There are, however, a few issues with
    the implementation:
    
    1. The initial HW state is always unblocked, regardless of the actual
       state on boot, because msi_init_rfkill only sets the SW state,
       regardless of ec_read_only.
    
    2. The initial SW state corresponds to the actual state on boot, but it
       can't be changed afterwards, because set_device_state returns
       -EOPNOTSUPP. It confuses the userspace, making Wi-Fi and/or Bluetooth
       unusable if it was blocked on boot, and breaking the airplane mode if
       the rfkill was unblocked on boot.
    
    Address the above issues by properly initializing the HW state on
    ec_read_only laptops and by allowing the userspace to toggle the SW
    state. Don't set the SW state ourselves and let the userspace fully
    control it. Toggling the SW state is a no-op, however, it allows the
    userspace to properly toggle the airplane mode. The actual SW radio
    disablement is handled by the corresponding rtl818x_pci and btusb
    drivers that have their own rfkills.
    
    Tested on MSI Wind U100 Plus, BIOS ver 1.0G, EC ver 130.
    
    Fixes: 0816392b97d4 ("msi-laptop: merge quirk tables to one")
    Fixes: 0de6575ad0a8 ("msi-laptop: Add MSI Wind U90/U100 support")
    Signed-off-by: Maxim Mikityanskiy <maxtram95@gmail.com>
    Link: https://lore.kernel.org/r/20230721145423.161057-1-maxtram95@gmail.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 847265678ec5731db38fd928a365539a8581e31d
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Fri Jul 21 15:39:20 2023 +0200

    net: stmmac: Apply redundant write work around on 4.xx too
    
    [ Upstream commit 284779dbf4e98753458708783af8c35630674a21 ]
    
    commit a3a57bf07de23fe1ff779e0fdf710aa581c3ff73 ("net: stmmac: work
    around sporadic tx issue on link-up") worked around a problem with TX
    sometimes not working after a link-up by avoiding a redundant write to
    MAC_CTRL_REG (aka GMAC_CONFIG), since the IP appeared to have problems
    with handling multiple writes to that register in some cases.
    
    That commit however only added the work around to dwmac_lib.c (apart
    from the common code in stmmac_main.c), but my systems with version
    4.21a of the IP exhibit the same problem, so add the work around to
    dwmac4_lib.c too.
    
    Fixes: a3a57bf07de2 ("net: stmmac: work around sporadic tx issue on link-up")
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230721-stmmac-tx-workaround-v1-1-9411cbd5ee07@axis.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17e67a071b60c881c5826f6fbb262ef61873eb0e
Author: Suman Ghosh <sumang@marvell.com>
Date:   Fri Jul 21 11:42:22 2023 +0530

    octeontx2-af: Fix hash extraction enable configuration
    
    [ Upstream commit 4e62c99d71e56817c934caa2a709a775c8cee078 ]
    
    As of today, hash extraction support is enabled for all the silicons.
    Because of which we are facing initialization issues when the silicon
    does not support hash extraction. During creation of the hardware
    parsing table for IPv6 address, we need to consider if hash extraction
    is enabled then extract only 32 bit, otherwise 128 bit needs to be
    extracted. This patch fixes the issue and configures the hardware parser
    based on the availability of the feature.
    
    Fixes: a95ab93550d3 ("octeontx2-af: Use hashed field in MCAM key")
    Signed-off-by: Suman Ghosh <sumang@marvell.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230721061222.2632521-1-sumang@marvell.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b0c968a13fa523eeaaf4233fc25757119b229f1
Author: Sunil Goutham <sgoutham@marvell.com>
Date:   Wed Feb 1 09:33:01 2023 +0530

    octeontx2-af: Removed unnecessary debug messages.
    
    [ Upstream commit 609aa68d60965f70485655def733d533f99b341b ]
    
    NPC exact match feature is supported only on one silicon
    variant, removed debug messages which print that this
    feature is not available on all other silicon variants.
    
    Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
    Signed-off-by: Ratheesh Kannoth <rkannoth@marvell.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20230201040301.1034843-1-rkannoth@marvell.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Stable-dep-of: 4e62c99d71e5 ("octeontx2-af: Fix hash extraction enable configuration")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 517a4f3b093cfa0b8e3a81bf45929691e0a4b2f7
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Jul 21 12:03:56 2023 +0800

    team: reset team's flags when down link is P2P device
    
    [ Upstream commit fa532bee17d15acf8bba4bc8e2062b7a093ba801 ]
    
    When adding a point to point downlink to team device, we neglected to reset
    the team's flags, which were still using flags like BROADCAST and
    MULTICAST. Consequently, this would initiate ARP/DAD for P2P downlink
    interfaces, such as when adding a GRE device to team device. Fix this by
    remove multicast/broadcast flags and add p2p and noarp flags.
    
    After removing the none ethernet interface and adding an ethernet interface
    to team, we need to reset team interface flags. Unlike bonding interface,
    team do not need restore IFF_MASTER, IFF_SLAVE flags.
    
    Reported-by: Liang Li <liali@redhat.com>
    Closes: https://bugzilla.redhat.com/show_bug.cgi?id=2221438
    Fixes: 1d76efe1577b ("team: add support for non-ethernet devices")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c50927853f65294e65e31b0cf308516f43cf95a
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Jul 21 12:03:55 2023 +0800

    bonding: reset bond's flags when down link is P2P device
    
    [ Upstream commit da19a2b967cf1e2c426f50d28550d1915214a81d ]
    
    When adding a point to point downlink to the bond, we neglected to reset
    the bond's flags, which were still using flags like BROADCAST and
    MULTICAST. Consequently, this would initiate ARP/DAD for P2P downlink
    interfaces, such as when adding a GRE device to the bonding.
    
    To address this issue, let's reset the bond's flags for P2P interfaces.
    
    Before fix:
    7: gre0@NONE: <POINTOPOINT,NOARP,SLAVE,UP,LOWER_UP> mtu 1500 qdisc noqueue master bond0 state UNKNOWN group default qlen 1000
        link/gre6 2006:70:10::1 peer 2006:70:10::2 permaddr 167f:18:f188::
    8: bond0: <BROADCAST,MULTICAST,MASTER,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
        link/gre6 2006:70:10::1 brd 2006:70:10::2
        inet6 fe80::200:ff:fe00:0/64 scope link
           valid_lft forever preferred_lft forever
    
    After fix:
    7: gre0@NONE: <POINTOPOINT,NOARP,SLAVE,UP,LOWER_UP> mtu 1500 qdisc noqueue master bond2 state UNKNOWN group default qlen 1000
        link/gre6 2006:70:10::1 peer 2006:70:10::2 permaddr c29e:557a:e9d9::
    8: bond0: <POINTOPOINT,NOARP,MASTER,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
        link/gre6 2006:70:10::1 peer 2006:70:10::2
        inet6 fe80::1/64 scope link
           valid_lft forever preferred_lft forever
    
    Reported-by: Liang Li <liali@redhat.com>
    Closes: https://bugzilla.redhat.com/show_bug.cgi?id=2221438
    Fixes: 872254dd6b1f ("net/bonding: Enable bonding to enslave non ARPHRD_ETHER")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46bf2459d6de0d08d637a983a3e35e40b94f60bd
Author: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
Date:   Fri Jul 21 08:58:54 2023 -0700

    ice: Fix memory management in ice_ethtool_fdir.c
    
    [ Upstream commit a3336056504d780590ac6d6ac94fbba829994594 ]
    
    Fix ethtool FDIR logic to not use memory after its release.
    In the ice_ethtool_fdir.c file there are 2 spots where code can
    refer to pointers which may be missing.
    
    In the ice_cfg_fdir_xtrct_seq() function seg may be freed but
    even then may be still used by memcpy(&tun_seg[1], seg, sizeof(*seg)).
    
    In the ice_add_fdir_ethtool() function struct ice_fdir_fltr *input
    may first fail to be added via ice_fdir_update_list_entry() but then
    may be deleted by ice_fdir_update_list_entry.
    
    Terminate in both cases when the returned value of the previous
    operation is other than 0, free memory and don't use it anymore.
    
    Reported-by: Michal Schmidt <mschmidt@redhat.com>
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2208423
    Fixes: cac2a27cd9ab ("ice: Support IPv4 Flow Director filters")
    Reviewed-by: Przemek Kitszel <przemyslaw.kitszel@intel.com>
    Signed-off-by: Jedrzej Jagielski <jedrzej.jagielski@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Tested-by: Pucha Himasekhar Reddy <himasekharx.reddy.pucha@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Link: https://lore.kernel.org/r/20230721155854.1292805-1-anthony.l.nguyen@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51aea7e9d5212adb8a3d198510cfcde4125988f9
Author: Stewart Smith <trawets@amazon.com>
Date:   Fri Jul 21 15:24:10 2023 -0700

    tcp: Reduce chance of collisions in inet6_hashfn().
    
    [ Upstream commit d11b0df7ddf1831f3e170972f43186dad520bfcc ]
    
    For both IPv4 and IPv6 incoming TCP connections are tracked in a hash
    table with a hash over the source & destination addresses and ports.
    However, the IPv6 hash is insufficient and can lead to a high rate of
    collisions.
    
    The IPv6 hash used an XOR to fit everything into the 96 bits for the
    fast jenkins hash, meaning it is possible for an external entity to
    ensure the hash collides, thus falling back to a linear search in the
    bucket, which is slow.
    
    We take the approach of hash the full length of IPv6 address in
    __ipv6_addr_jhash() so that all users can benefit from a more secure
    version.
    
    While this may look like it adds overhead, the reality of modern CPUs
    means that this is unmeasurable in real world scenarios.
    
    In simulating with llvm-mca, the increase in cycles for the hashing
    code was ~16 cycles on Skylake (from a base of ~155), and an extra ~9
    on Nehalem (base of ~173).
    
    In commit dd6d2910c5e0 ("netfilter: conntrack: switch to siphash")
    netfilter switched from a jenkins hash to a siphash, but even the faster
    hsiphash is a more significant overhead (~20-30%) in some preliminary
    testing.  So, in this patch, we keep to the more conservative approach to
    ensure we don't add much overhead per SYN.
    
    In testing, this results in a consistently even spread across the
    connection buckets.  In both testing and real-world scenarios, we have
    not found any measurable performance impact.
    
    Fixes: 08dcdbf6a7b9 ("ipv6: use a stronger hash for tcp")
    Signed-off-by: Stewart Smith <trawets@amazon.com>
    Signed-off-by: Samuel Mendoza-Jonas <samjonas@amazon.com>
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20230721222410.17914-1-kuniyu@amazon.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 776da4eca034898b68ce7c4e49ba73088b945783
Author: Maciej Żenczykowski <maze@google.com>
Date:   Thu Jul 20 09:00:22 2023 -0700

    ipv6 addrconf: fix bug where deleting a mngtmpaddr can create a new temporary address
    
    [ Upstream commit 69172f0bcb6a09110c5d2a6d792627f5095a9018 ]
    
    currently on 6.4 net/main:
    
      # ip link add dummy1 type dummy
      # echo 1 > /proc/sys/net/ipv6/conf/dummy1/use_tempaddr
      # ip link set dummy1 up
      # ip -6 addr add 2000::1/64 mngtmpaddr dev dummy1
      # ip -6 addr show dev dummy1
    
      11: dummy1: <BROADCAST,NOARP,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN group default qlen 1000
          inet6 2000::44f3:581c:8ca:3983/64 scope global temporary dynamic
             valid_lft 604800sec preferred_lft 86172sec
          inet6 2000::1/64 scope global mngtmpaddr
             valid_lft forever preferred_lft forever
          inet6 fe80::e8a8:a6ff:fed5:56d4/64 scope link
             valid_lft forever preferred_lft forever
    
      # ip -6 addr del 2000::44f3:581c:8ca:3983/64 dev dummy1
    
      (can wait a few seconds if you want to, the above delete isn't [directly] the problem)
    
      # ip -6 addr show dev dummy1
    
      11: dummy1: <BROADCAST,NOARP,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN group default qlen 1000
          inet6 2000::1/64 scope global mngtmpaddr
             valid_lft forever preferred_lft forever
          inet6 fe80::e8a8:a6ff:fed5:56d4/64 scope link
             valid_lft forever preferred_lft forever
    
      # ip -6 addr del 2000::1/64 mngtmpaddr dev dummy1
      # ip -6 addr show dev dummy1
    
      11: dummy1: <BROADCAST,NOARP,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN group default qlen 1000
          inet6 2000::81c9:56b7:f51a:b98f/64 scope global temporary dynamic
             valid_lft 604797sec preferred_lft 86169sec
          inet6 fe80::e8a8:a6ff:fed5:56d4/64 scope link
             valid_lft forever preferred_lft forever
    
    This patch prevents this new 'global temporary dynamic' address from being
    created by the deletion of the related (same subnet prefix) 'mngtmpaddr'
    (which is triggered by there already being no temporary addresses).
    
    Cc: Jiri Pirko <jiri@resnulli.us>
    Fixes: 53bd67491537 ("ipv6 addrconf: introduce IFA_F_MANAGETEMPADDR to tell kernel to manage temporary addresses")
    Reported-by: Xiao Ma <xiaom@google.com>
    Signed-off-by: Maciej Żenczykowski <maze@google.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20230720160022.1887942-1-maze@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ed1e466ef6914d0bcd2c7046f754df985ee11ce
Author: Yuanjun Gong <ruc_gongyuanjun@163.com>
Date:   Thu Jul 20 22:42:19 2023 +0800

    ethernet: atheros: fix return value check in atl1e_tso_csum()
    
    [ Upstream commit 69a184f7a372aac588babfb0bd681aaed9779f5b ]
    
    in atl1e_tso_csum, it should check the return value of pskb_trim(),
    and return an error code if an unexpected value is returned
    by pskb_trim().
    
    Fixes: a6a5325239c2 ("atl1e: Atheros L1E Gigabit Ethernet driver")
    Signed-off-by: Yuanjun Gong <ruc_gongyuanjun@163.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230720144219.39285-1-ruc_gongyuanjun@163.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85c38ac62c1372cc1ab05426315aad61025d33ef
Author: Yuanjun Gong <ruc_gongyuanjun@163.com>
Date:   Sat Jul 22 22:25:11 2023 +0800

    atheros: fix return value check in atl1_tso()
    
    [ Upstream commit ed96824b71ed67664390890441b229423a25317f ]
    
    in atl1_tso(), it should check the return value of pskb_trim(),
    and return an error code if an unexpected value is returned
    by pskb_trim().
    
    Fixes: 401c0aabec4b ("atl1: simplify tx packet descriptor")
    Signed-off-by: Yuanjun Gong <ruc_gongyuanjun@163.com>
    Link: https://lore.kernel.org/r/20230722142511.12448-1-ruc_gongyuanjun@163.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01cb355bb92e8fcf8306e11a4774d610c5864e39
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Fri Jul 21 02:05:55 2023 -0700

    phy: hisilicon: Fix an out of bounds check in hisi_inno_phy_probe()
    
    [ Upstream commit 13c088cf3657d70893d75cf116be937f1509cc0f ]
    
    The size of array 'priv->ports[]' is INNO_PHY_PORT_NUM.
    
    In the for loop, 'i' is used as the index for array 'priv->ports[]'
    with a check (i > INNO_PHY_PORT_NUM) which indicates that
    INNO_PHY_PORT_NUM is allowed value for 'i' in the same loop.
    
    This > comparison needs to be changed to >=, otherwise it potentially leads
    to an out of bounds write on the next iteration through the loop
    
    Fixes: ba8b0ee81fbb ("phy: add inno-usb2-phy driver for hi3798cv200 SoC")
    Reported-by: Dan Carpenter <dan.carpenter@linaro.org>
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Link: https://lore.kernel.org/r/20230721090558.3588613-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69534f5ab78449dc568b3beb2f0c06f6c6438cb1
Author: Jiri Benc <jbenc@redhat.com>
Date:   Fri Jul 21 16:30:47 2023 +0200

    vxlan: fix GRO with VXLAN-GPE
    
    [ Upstream commit b0b672c4d0957e5897685667fc848132b8bd2d71 ]
    
    In VXLAN-GPE, there may not be an Ethernet header following the VXLAN
    header. But in GRO, the vxlan driver calls eth_gro_receive
    unconditionally, which means the following header is incorrectly parsed
    as Ethernet.
    
    Introduce GPE specific GRO handling.
    
    For better performance, do not check for GPE during GRO but rather
    install a different set of functions at setup time.
    
    Fixes: e1e5314de08ba ("vxlan: implement GPE")
    Reported-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e22b434ff4a5ed1c16faee2be42f1b88650a2eb
Author: Jiri Benc <jbenc@redhat.com>
Date:   Fri Jul 21 16:30:46 2023 +0200

    vxlan: generalize vxlan_parse_gpe_hdr and remove unused args
    
    [ Upstream commit 17a0a64448b568442a101de09575f81ffdc45d15 ]
    
    The vxlan_parse_gpe_hdr function extracts the next protocol value from
    the GPE header and marks GPE bits as parsed.
    
    In order to be used in the next patch, split the function into protocol
    extraction and bit marking. The bit marking is meaningful only in
    vxlan_rcv; move it directly there.
    
    Rename the function to vxlan_parse_gpe_proto to reflect what it now
    does. Remove unused arguments skb and vxflags. Move the function earlier
    in the file to allow it to be called from more places in the next patch.
    
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: b0b672c4d095 ("vxlan: fix GRO with VXLAN-GPE")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddc6ab3834bc7dff3eccc20ff536b5260f159b1c
Author: Jiri Benc <jbenc@redhat.com>
Date:   Thu Jul 20 11:05:56 2023 +0200

    vxlan: calculate correct header length for GPE
    
    [ Upstream commit 94d166c5318c6edd1e079df8552233443e909c33 ]
    
    VXLAN-GPE does not add an extra inner Ethernet header. Take that into
    account when calculating header length.
    
    This causes problems in skb_tunnel_check_pmtu, where incorrect PMTU is
    cached.
    
    In the collect_md mode (which is the only mode that VXLAN-GPE
    supports), there's no magic auto-setting of the tunnel interface MTU.
    It can't be, since the destination and thus the underlying interface
    may be different for each packet.
    
    So, the administrator is responsible for setting the correct tunnel
    interface MTU. Apparently, the administrators are capable enough to
    calculate that the maximum MTU for VXLAN-GPE is (their_lower_MTU - 36).
    They set the tunnel interface MTU to 1464. If you run a TCP stream over
    such interface, it's then segmented according to the MTU 1464, i.e.
    producing 1514 bytes frames. Which is okay, this still fits the lower
    MTU.
    
    However, skb_tunnel_check_pmtu (called from vxlan_xmit_one) uses 50 as
    the header size and thus incorrectly calculates the frame size to be
    1528. This leads to ICMP too big message being generated (locally),
    PMTU of 1450 to be cached and the TCP stream to be resegmented.
    
    The fix is to use the correct actual header size, especially for
    skb_tunnel_check_pmtu calculation.
    
    Fixes: e1e5314de08ba ("vxlan: implement GPE")
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4de5cd8d8939dbc87a1e3d187f720c9a1481d5f8
Author: Jijie Shao <shaojijie@huawei.com>
Date:   Thu Jul 20 10:05:10 2023 +0800

    net: hns3: fix wrong bw weight of disabled tc issue
    
    [ Upstream commit 882481b1c55fc44861d7e2d54b4e0936b1b39f2c ]
    
    In dwrr mode, the default bandwidth weight of disabled tc is set to 0.
    If the bandwidth weight is 0, the mode will change to sp.
    Therefore, disabled tc default bandwidth weight need changed to 1,
    and 0 is returned when query the bandwidth weight of disabled tc.
    In addition, driver need stop configure bandwidth weight if tc is disabled.
    
    Fixes: 848440544b41 ("net: hns3: Add support of TX Scheduler & Shaper to HNS3 driver")
    Signed-off-by: Jie Wang <wangjie125@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 487b685c815bca64cc19666cff924584b1decb6b
Author: Jijie Shao <shaojijie@huawei.com>
Date:   Thu Jul 20 10:05:09 2023 +0800

    net: hns3: fix wrong tc bandwidth weight data issue
    
    [ Upstream commit 116d9f732eef634abbd871f2c6f613a5b4677742 ]
    
    Currently, the weight saved by the driver is used as the query result,
    which may be different from the actual weight in the register.
    Therefore, the register value read from the firmware is used
    as the query result
    
    Fixes: 0e32038dc856 ("net: hns3: refactor dump tc of debugfs")
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b93161779b4539b0114d914b4160ac77a428fc4a
Author: Hao Lan <lanhao@huawei.com>
Date:   Thu Jul 20 10:05:07 2023 +0800

    net: hns3: fix the imp capability bit cannot exceed 32 bits issue
    
    [ Upstream commit b27d0232e8897f7c896dc8ad80c9907dd57fd3f3 ]
    
    Current only the first 32 bits of the capability flag bit are considered.
    When the matching capability flag bit is greater than 31 bits,
    it will get an error bit.This patch use bitmap to solve this issue.
    It can handle each capability bit whitout bit width limit.
    
    Fixes: da77aef9cc58 ("net: hns3: create common cmdq resource allocate/free/query APIs")
    Signed-off-by: Hao Lan <lanhao@huawei.com>
    Signed-off-by: Jijie Shao <shaojijie@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3339d44e0167d11598aec17800ecf7f241c8667
Author: Jiawen Wu <jiawenwu@trustnetic.com>
Date:   Wed Jul 19 17:22:33 2023 +0800

    net: phy: marvell10g: fix 88x3310 power up
    
    [ Upstream commit c7b75bea853daeb64fc831dbf39a6bbabcc402ac ]
    
    Clear MV_V2_PORT_CTRL_PWRDOWN bit to set power up for 88x3310 PHY,
    it sometimes does not take effect immediately. And a read of this
    register causes the bit not to clear. This will cause mv3310_reset()
    to time out, which will fail the config initialization. So add a delay
    before the next access.
    
    Fixes: c9cc1c815d36 ("net: phy: marvell10g: place in powersave mode at probe")
    Signed-off-by: Jiawen Wu <jiawenwu@trustnetic.com>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c76d3742b6882dc49b5bcf53905f711c4f82e6dd
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Mon Jul 10 13:41:28 2023 -0700

    iavf: check for removal state before IAVF_FLAG_PF_COMMS_FAILED
    
    [ Upstream commit 91896c8acce23d33ed078cffd46a9534b1f82be5 ]
    
    In iavf_adminq_task(), if the function can't acquire the
    adapter->crit_lock, it checks if the driver is removing. If so, it simply
    exits without re-enabling the interrupt. This is done to ensure that the
    task stops processing as soon as possible once the driver is being removed.
    
    However, if the IAVF_FLAG_PF_COMMS_FAILED is set, the function checks this
    before attempting to acquire the lock. In this case, the function exits
    early and re-enables the interrupt. This will happen even if the driver is
    already removing.
    
    Avoid this, by moving the check to after the adapter->crit_lock is
    acquired. This way, if the driver is removing, we will not re-enable the
    interrupt.
    
    Fixes: fc2e6b3b132a ("iavf: Rework mutexes for better synchronisation")
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Rafal Romanowski <rafal.romanowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 469879eda36d27969a0ebeec860722650214bfbc
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Mon Jul 10 13:41:27 2023 -0700

    iavf: fix potential deadlock on allocation failure
    
    [ Upstream commit a2f054c10bef0b54600ec9cb776508443e941343 ]
    
    In iavf_adminq_task(), if kzalloc() fails to allocate the event.msg_buf,
    the function will exit without releasing the adapter->crit_lock.
    
    This is unlikely, but if it happens, the next access to that mutex will
    deadlock.
    
    Fix this by moving the unlock to the end of the function, and adding a new
    label to allow jumping to the unlock portion of the function exit flow.
    
    Fixes: fc2e6b3b132a ("iavf: Rework mutexes for better synchronisation")
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Rafal Romanowski <rafal.romanowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0fa9a5a7a3fdbb20e568f24977fd81bbc0e6bfa
Author: Wang Ming <machel@vivo.com>
Date:   Thu Jul 13 09:42:39 2023 +0800

    i40e: Fix an NULL vs IS_ERR() bug for debugfs_create_dir()
    
    [ Upstream commit 043b1f185fb0f3939b7427f634787706f45411c4 ]
    
    The debugfs_create_dir() function returns error pointers.
    It never returns NULL. Most incorrect error checks were fixed,
    but the one in i40e_dbg_init() was forgotten.
    
    Fix the remaining error check.
    
    Fixes: 02e9c290814c ("i40e: debugfs interface")
    Signed-off-by: Wang Ming <machel@vivo.com>
    Tested-by: Pucha Himasekhar Reddy <himasekharx.reddy.pucha@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 940a2c75f5e9a80da160c1726e117b0da4b035d3
Author: Nicolas Dufresne <nicolas.dufresne@collabora.com>
Date:   Thu May 25 22:10:15 2023 +0200

    media: amphion: Fix firmware path to match linux-firmware
    
    [ Upstream commit dcff0b56f661b6b42e828012b464d22cc2068c38 ]
    
    The path did not match the one it was submitted into linux-firmware
    which prevented generic distribution from having working CODEC.
    
    Fixes: 9f599f351e86 ("media: amphion: add vpu core driver")
    Signed-off-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70f9f05abaadf067001b303c385c08f14ddcad39
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Tue Jun 13 18:47:53 2023 +0200

    media: staging: atomisp: select V4L2_FWNODE
    
    [ Upstream commit bf4c985707d3168ebb7d87d15830de66949d979c ]
    
    Select V4L2_FWNODE as the driver depends on it.
    
    Reported-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Fixes: aa31f6514047 ("media: atomisp: allow building the driver again")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Tested-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit accc838fd66aa0c16788d40ff8ac8a3a1a063a2a
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu May 25 14:38:09 2023 +0100

    soundwire: qcom: update status correctly with mask
    
    [ Upstream commit f84d41b2a083b990cbdf70f3b24b6b108b9678ad ]
    
    SoundWire device status can be incorrectly updated without
    proper mask, fix this by adding a mask before updating the status.
    
    Fixes: c7d49c76d1d5 ("soundwire: qcom: add support to new interrupts")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20230525133812.30841-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf52320a391a7711c81fcb904ff2d267e6ebf4f4
Author: Adrien Thierry <athierry@redhat.com>
Date:   Thu Jun 29 10:45:39 2023 -0400

    phy: qcom-snps-femto-v2: properly enable ref clock
    
    [ Upstream commit 8a0eb8f9b9a002291a3934acfd913660b905249e ]
    
    The driver is not enabling the ref clock, which thus gets disabled by
    the clk_disable_unused() initcall. This leads to the dwc3 controller
    failing to initialize if probed after clk_disable_unused() is called,
    for instance when the driver is built as a module.
    
    To fix this, switch to the clk_bulk API to handle both cfg_ahb and ref
    clocks at the proper places.
    
    Note that the cfg_ahb clock is currently not used by any device tree
    instantiation of the PHY. Work needs to be done separately to fix this.
    
    Link: https://lore.kernel.org/linux-arm-msm/ZEqvy+khHeTkC2hf@fedora/
    Fixes: 51e8114f80d0 ("phy: qcom-snps: Add SNPS USB PHY driver for QCOM based SOCs")
    Signed-off-by: Adrien Thierry <athierry@redhat.com>
    Link: https://lore.kernel.org/r/20230629144542.14906-3-athierry@redhat.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01d8e499999c0e195271878876234f3035d23535
Author: Adrien Thierry <athierry@redhat.com>
Date:   Thu Jun 29 10:45:38 2023 -0400

    phy: qcom-snps-femto-v2: keep cfg_ahb_clk enabled during runtime suspend
    
    [ Upstream commit 45d89a344eb46db9dce851c28e14f5e3c635c251 ]
    
    In the dwc3 core, both system and runtime suspend end up calling
    dwc3_suspend_common(). From there, what happens for the PHYs depends on
    the USB mode and whether the controller is entering system or runtime
    suspend.
    
    HOST mode:
      (1) system suspend on a non-wakeup-capable controller
    
      The [1] if branch is taken. dwc3_core_exit() is called, which ends up
      calling phy_power_off() and phy_exit(). Those two functions decrease the
      PM runtime count at some point, so they will trigger the PHY runtime
      sleep (assuming the count is right).
    
      (2) runtime suspend / system suspend on a wakeup-capable controller
    
      The [1] branch is not taken. dwc3_suspend_common() calls
      phy_pm_runtime_put_sync(). Assuming the ref count is right, the PHY
      runtime suspend op is called.
    
    DEVICE mode:
      dwc3_core_exit() is called on both runtime and system sleep
      unless the controller is already runtime suspended.
    
    OTG mode:
      (1) system suspend : dwc3_core_exit() is called
    
      (2) runtime suspend : do nothing
    
    In host mode, the code seems to make a distinction between 1) runtime
    sleep / system sleep for wakeup-capable controller, and 2) system sleep
    for non-wakeup-capable controller, where phy_power_off() and phy_exit()
    are only called for the latter. This suggests the PHY is not supposed to
    be in a fully powered-off state for runtime sleep and system sleep for
    wakeup-capable controller.
    
    Moreover, downstream, cfg_ahb_clk only gets disabled for system suspend.
    The clocks are disabled by phy->set_suspend() [2] which is only called
    in the system sleep path through dwc3_core_exit() [3].
    
    With that in mind, don't disable the clocks during the femto PHY runtime
    suspend callback. The clocks will only be disabled during system suspend
    for non-wakeup-capable controllers, through dwc3_core_exit().
    
    [1] https://elixir.bootlin.com/linux/v6.4/source/drivers/usb/dwc3/core.c#L1988
    [2] https://git.codelinaro.org/clo/la/kernel/msm-5.4/-/blob/LV.AU.1.2.1.r2-05300-gen3meta.0/drivers/usb/phy/phy-msm-snps-hs.c#L524
    [3] https://git.codelinaro.org/clo/la/kernel/msm-5.4/-/blob/LV.AU.1.2.1.r2-05300-gen3meta.0/drivers/usb/dwc3/core.c#L1915
    
    Signed-off-by: Adrien Thierry <athierry@redhat.com>
    Link: https://lore.kernel.org/r/20230629144542.14906-2-athierry@redhat.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Stable-dep-of: 8a0eb8f9b9a0 ("phy: qcom-snps-femto-v2: properly enable ref clock")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6132813be935eca8b9f20783063c5e91eb1f5b9
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sun May 7 16:48:18 2023 +0200

    phy: qcom-snps: correct struct qcom_snps_hsphy kerneldoc
    
    [ Upstream commit 2a881183dc5ab2474ef602e48fe7af34db460d95 ]
    
    Update kerneldoc of struct qcom_snps_hsphy to fix:
    
      drivers/phy/qualcomm/phy-qcom-snps-femto-v2.c:135: warning: Function parameter or member 'update_seq_cfg' not described in 'qcom_snps_hsphy'
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Link: https://lore.kernel.org/r/20230507144818.193039-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Stable-dep-of: 8a0eb8f9b9a0 ("phy: qcom-snps-femto-v2: properly enable ref clock")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a5dbdc53a5fe73d8dc5ff56f83d1619a00ad61f
Author: Dan Carpenter <dan.carpenter@linaro.org>
Date:   Tue Jul 11 09:13:25 2023 +0300

    phy: phy-mtk-dp: Fix an error code in probe()
    
    [ Upstream commit 5782017cc4d0c8f3425d55b893675bb8a20c33e9 ]
    
    Negative -EINVAL was intended instead of positive EINVAL.
    
    Fixes: 6a23afad443a ("phy: phy-mtk-dp: Add driver for DP phy")
    Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Link: https://lore.kernel.org/r/3c699e00-2883-40d9-92c3-0da1dc38fdd4@moroto.mountain
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15c94c3151d9fa86294efb4c6618cae44530e49b
Author: Daniel Miess <daniel.miess@amd.com>
Date:   Thu Jun 22 08:11:48 2023 -0400

    drm/amd/display: Prevent vtotal from being set to 0
    
    [ Upstream commit 2a9482e55968ed7368afaa9c2133404069117320 ]
    
    [Why]
    In dcn314 DML the destination pipe vtotal was being set
    to the crtc adjustment vtotal_min value even in cases
    where that value is 0.
    
    [How]
    Only set vtotal to the crtc adjustment vtotal_min value
    in cases where the value is non-zero.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Acked-by: Alan Liu <haoping.liu@amd.com>
    Signed-off-by: Daniel Miess <daniel.miess@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5741133e6e2f304b40ca1da0e16f62af06f4d22
Author: Daniel Miess <daniel.miess@amd.com>
Date:   Tue Apr 25 14:29:48 2023 -0400

    drm/amd/display: Fix possible underflow for displays with large vblank
    
    [ Upstream commit 1a4bcdbea4319efeb26cc4b05be859a7867e02dc ]
    
    [Why]
    Underflow observed when using a display with a large vblank region
    and low refresh rate
    
    [How]
    Simplify calculation of vblank_nom
    
    Increase value for VBlankNomDefaultUS to 800us
    
    Reviewed-by: Jun Lei <jun.lei@amd.com>
    Acked-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Daniel Miess <daniel.miess@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 2a9482e55968 ("drm/amd/display: Prevent vtotal from being set to 0")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 342ec1696d2dcc66e7d2905c5aa52e9c9e86d527
Author: Gabe Teeger <gabe.teeger@amd.com>
Date:   Thu Apr 6 17:03:06 2023 -0400

    drm/amd/display: update extended blank for dcn314 onwards
    
    [ Upstream commit 469a62938a45ef382c9cb7b9fec6c6c1fcd781c0 ]
    
    [Why]
    Flickering and underflow was observed when testing extended
    blank on dcn314.
    
    [What]
    Vstartup is contrainted by vblank_nom, so adjusting it to include
    non-adjusted vtotal in its calculation during freesync video
    means that Vstartup is not changed when vtotal changes.
    This fixed the flickering + underflow.
    
    dc_extended_blank_supported function was removed
    because extended blank is only relevant to when
    zstate is supported. The increased vtotal during
    freesync can be passed to dml regardless of whether
    extended blank is supported or not, so this function is
    not needed.
    
    Updates were made recently in dml to the calculation of
    min_dst_y_next_start. Dml input for dcn314 will now
    always use the newer calculation for min_dst_y_next_start.
    Dml input for older dcn versions remains untouched.
    
    The variable optimized_min_dst_y_next_start
    is replaced everywhere with min_dst_y_next_start,
    and the updated dml allows min_dst_y_next_start to
    increase to an optimized value during freesync video,
    then return to default when freesync is disengaged.
    
    Also removed registry key for controlling
    extended blank feature.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Reviewed-by: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Gabe Teeger <gabe.teeger@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 2a9482e55968 ("drm/amd/display: Prevent vtotal from being set to 0")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27931ea53ce59ff421c42c08d4ad3df4b632babe
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Fri Mar 24 14:29:52 2023 -0600

    drm/amd/display: Add FAMS validation before trying to use it
    
    [ Upstream commit e3416e872f84086667df21daf166506fab97358d ]
    
    To ensure that FAMS can be used, DC must check if there is VRR support.
    This commit adds the required configuration to ensure FAMS can be executed in the target system.
    
    Reviewed-by: Alvin Lee <Alvin.Lee2@amd.com>
    Acked-by: Qingqing Zhuo <qingqing.zhuo@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 2a9482e55968 ("drm/amd/display: Prevent vtotal from being set to 0")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6415d5de13f532297005ef100cefa92c80fe40db
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Dec 28 17:00:51 2022 -0800

    drm/amd/display: fix dc/core/dc.c kernel-doc
    
    [ Upstream commit db4107e92a817502ad19fdd30250f87dcb6f6331 ]
    
    Fix all kernel-doc warnings in dc/core/dc.c:
    
    dc.c:385: warning: missing initial short description on line:
     *  dc_stream_adjust_vmin_vmax:
    dc.c:392: warning: contents before sections
    dc.c:399: warning: No description found for return value of 'dc_stream_adjust_vmin_vmax'
    dc.c:434: warning: Excess function parameter 'adjust' description in 'dc_stream_get_last_used_drr_vtotal'
    dc.c:434: warning: No description found for return value of 'dc_stream_get_last_used_drr_vtotal'
    dc.c:574: warning: No description found for return value of 'dc_stream_configure_crc'
    dc.c:1746: warning: No description found for return value of 'dc_commit_state_no_check'
    dc.c:4991: warning: This comment starts with '/**', but isn't a kernel-doc comment. Refer Documentation/doc-guide/kernel-doc.rst
     * dc_extended_blank_supported 0 Decide whether extended blank is supported
    dc.c:4991: warning: missing initial short description on line:
     * dc_extended_blank_supported 0 Decide whether extended blank is supported
    dc.c:4723: warning: Function parameter or member 'dc' not described in 'dc_enable_dmub_outbox'
    dc.c:4926: warning: Function parameter or member 'dc' not described in 'dc_process_dmub_dpia_hpd_int_enable'
    dc.c:4926: warning: Function parameter or member 'hpd_int_enable' not described in 'dc_process_dmub_dpia_hpd_int_enable'
    12 warnings
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Cc: Harry Wentland <harry.wentland@amd.com>
    Cc: Leo Li <sunpeng.li@amd.com>
    Cc: Christian König <christian.koenig@amd.com>
    Cc: "Pan, Xinhui" <Xinhui.Pan@amd.com>
    Cc: amd-gfx@lists.freedesktop.org
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 2a9482e55968 ("drm/amd/display: Prevent vtotal from being set to 0")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 549f20581996835bae1d6567b2cc60ad0a5ef9cd
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Tue Oct 18 16:27:59 2022 -0400

    drm/amd/display: Rework comments on dc file
    
    [ Upstream commit e366f36958f60c431a7430c8c421c9db0ec6738d ]
    
    The file dc.c has multiple comments that do not follow the kernel-doc or
    are made in a distracting way. This commit alleviates part of this issue
    by reorganizing some comments inside the dc file.
    
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Reviewed-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 2a9482e55968 ("drm/amd/display: Prevent vtotal from being set to 0")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4eed29e8a8fd241b3eefd901721db3af7796e74a
Author: Liam R. Howlett <Liam.Howlett@oracle.com>
Date:   Wed Jul 12 13:39:15 2023 -0400

    maple_tree: fix 32 bit mas_next testing
    
    [ Upstream commit 7a93c71a6714ca1a9c03d70432dac104b0cfb815 ]
    
    The test setup of mas_next is dependent on node entry size to create a 2
    level tree, but the tests did not account for this in the expected value
    when shifting beyond the scope of the tree.
    
    Fix this by setting up the test to succeed depending on the node entries
    which is dependent on the 32/64 bit setup.
    
    Link: https://lkml.kernel.org/r/20230712173916.168805-1-Liam.Howlett@oracle.com
    Fixes: 120b116208a0 ("maple_tree: reorganize testing to restore module testing")
    Signed-off-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
      Closes: https://lore.kernel.org/linux-mm/CAMuHMdV4T53fOw7VPoBgPR7fP6RYqf=CBhD_y_vOg53zZX_DnA@mail.gmail.com/
    Tested-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b6e8744ed7cdf015bc07e8343b8adb99f0c7afd
Author: Liam R. Howlett <Liam.Howlett@oracle.com>
Date:   Thu May 18 10:55:28 2023 -0400

    maple_tree: add __init and __exit to test module
    
    [ Upstream commit eaf9790d3bc6e157a2134c01c7d707a5a712fab1 ]
    
    The test functions are not needed after the module is removed, so mark
    them as such.  Add __exit to the module removal function.  Some other
    variables have been marked as const static as well.
    
    Link: https://lkml.kernel.org/r/20230518145544.1722059-20-Liam.Howlett@oracle.com
    Signed-off-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Suggested-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: David Binderman <dcb314@hotmail.com>
    Cc: Peng Zhang <zhangpeng.00@bytedance.com>
    Cc: Sergey Senozhatsky <senozhatsky@chromium.org>
    Cc: Vernon Yang <vernon2gm@gmail.com>
    Cc: Wei Yang <richard.weiyang@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Stable-dep-of: 7a93c71a6714 ("maple_tree: fix 32 bit mas_next testing")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cba7ddf552bb6582a1d46ca8e163850a73cac8b8
Author: Liam R. Howlett <Liam.Howlett@Oracle.com>
Date:   Fri Jan 20 11:26:05 2023 -0500

    test_maple_tree: test modifications while iterating
    
    [ Upstream commit 5159d64b335401fa83f18c27e2267f1eafc41bd3 ]
    
    Add a testcase to ensure the iterator detects bad states on modifications
    and does what the user expects
    
    Link: https://lkml.kernel.org/r/20230120162650.984577-5-Liam.Howlett@oracle.com
    Signed-off-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Stable-dep-of: 7a93c71a6714 ("maple_tree: fix 32 bit mas_next testing")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6e2a0e4144c546ed5eee2eaa00cd260fa256c9d
Author: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Date:   Tue Jul 11 23:16:07 2023 +0900

    tracing/probes: Fix to record 0-length data_loc in fetch_store_string*() if fails
    
    [ Upstream commit 797311bce5c2ac90b8d65e357603cfd410d36ebb ]
    
    Fix to record 0-length data to data_loc in fetch_store_string*() if it fails
    to get the string data.
    Currently those expect that the data_loc is updated by store_trace_args() if
    it returns the error code. However, that does not work correctly if the
    argument is an array of strings. In that case, store_trace_args() only clears
    the first entry of the array (which may have no error) and leaves other
    entries. So it should be cleared by fetch_store_string*() itself.
    Also, 'dyndata' and 'maxlen' in store_trace_args() should be updated
    only if it is used (ret > 0 and argument is a dynamic data.)
    
    Link: https://lore.kernel.org/all/168908496683.123124.4761206188794205601.stgit@devnote2/
    
    Fixes: 40b53b771806 ("tracing: probeevent: Add array type support")
    Cc: stable@vger.kernel.org
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bee994668855c2ba43d367cde56d113e00c7863c
Author: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Date:   Tue Jul 11 23:15:57 2023 +0900

    Revert "tracing: Add "(fault)" name injection to kernel probes"
    
    [ Upstream commit 4ed8f337dee32df71435689c19d22e4ee846e15a ]
    
    This reverts commit 2e9906f84fc7c99388bb7123ade167250d50f1c0.
    
    It was turned out that commit 2e9906f84fc7 ("tracing: Add "(fault)"
    name injection to kernel probes") did not work correctly and probe
    events still show just '(fault)' (instead of '"(fault)"'). Also,
    current '(fault)' is more explicit that it faulted.
    
    This also moves FAULT_STRING macro to trace.h so that synthetic
    event can keep using it, and uses it in trace_probe.c too.
    
    Link: https://lore.kernel.org/all/168908495772.123124.1250788051922100079.stgit@devnote2/
    Link: https://lore.kernel.org/all/20230706230642.3793a593@rorschach.local.home/
    
    Cc: stable@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tom Zanussi <zanussi@kernel.org>
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Stable-dep-of: 797311bce5c2 ("tracing/probes: Fix to record 0-length data_loc in fetch_store_string*() if fails")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3baa42afeea0d5f04ad31525e861199d02210cc
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Jan 17 10:21:28 2023 -0500

    tracing: Allow synthetic events to pass around stacktraces
    
    [ Upstream commit 00cf3d672a9dd409418647e9f98784c339c3ff63 ]
    
    Allow a stacktrace from one event to be displayed by the end event of a
    synthetic event. This is very useful when looking for the longest latency
    of a sleep or something blocked on I/O.
    
     # cd /sys/kernel/tracing/
     # echo 's:block_lat pid_t pid; u64 delta; unsigned long[] stack;' > dynamic_events
     # echo 'hist:keys=next_pid:ts=common_timestamp.usecs,st=stacktrace  if prev_state == 1||prev_state == 2' > events/sched/sched_switch/trigger
     # echo 'hist:keys=prev_pid:delta=common_timestamp.usecs-$ts,s=$st:onmax($delta).trace(block_lat,prev_pid,$delta,$s)' >> events/sched/sched_switch/trigger
    
    The above creates a "block_lat" synthetic event that take the stacktrace of
    when a task schedules out in either the interruptible or uninterruptible
    states, and on a new per process max $delta (the time it was scheduled
    out), will print the process id and the stacktrace.
    
      # echo 1 > events/synthetic/block_lat/enable
      # cat trace
     #           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION
     #              | |         |   |||||     |         |
        kworker/u16:0-767     [006] d..4.   560.645045: block_lat: pid=767 delta=66 stack=STACK:
     => __schedule
     => schedule
     => pipe_read
     => vfs_read
     => ksys_read
     => do_syscall_64
     => 0x966000aa
    
               <idle>-0       [003] d..4.   561.132117: block_lat: pid=0 delta=413787 stack=STACK:
     => __schedule
     => schedule
     => schedule_hrtimeout_range_clock
     => do_sys_poll
     => __x64_sys_poll
     => do_syscall_64
     => 0x966000aa
    
                <...>-153     [006] d..4.   562.068407: block_lat: pid=153 delta=54 stack=STACK:
     => __schedule
     => schedule
     => io_schedule
     => rq_qos_wait
     => wbt_wait
     => __rq_qos_throttle
     => blk_mq_submit_bio
     => submit_bio_noacct_nocheck
     => ext4_bio_write_page
     => mpage_submit_page
     => mpage_process_page_bufs
     => mpage_prepare_extent_to_map
     => ext4_do_writepages
     => ext4_writepages
     => do_writepages
     => __writeback_single_inode
    
    Link: https://lkml.kernel.org/r/20230117152236.010941267@goodmis.org
    
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tom Zanussi <zanussi@kernel.org>
    Cc: Ross Zwisler <zwisler@google.com>
    Cc: Ching-lin Yu <chinglinyu@google.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Stable-dep-of: 797311bce5c2 ("tracing/probes: Fix to record 0-length data_loc in fetch_store_string*() if fails")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d92ee6bce196385d055b0f8832f54ace965d59a5
Author: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Date:   Tue Jul 11 23:15:29 2023 +0900

    tracing/probes: Fix to avoid double count of the string length on the array
    
    [ Upstream commit 66bcf65d6cf0ca6540e2341e88ee7ef02dbdda08 ]
    
    If an array is specified with the ustring or symstr, the length of the
    strings are accumlated on both of 'ret' and 'total', which means the
    length is double counted.
    Just set the length to the 'ret' value for avoiding double counting.
    
    Link: https://lore.kernel.org/all/168908492917.123124.15076463491122036025.stgit@devnote2/
    
    Reported-by: Dan Carpenter <dan.carpenter@linaro.org>
    Closes: https://lore.kernel.org/all/8819b154-2ba1-43c3-98a2-cbde20892023@moroto.mountain/
    Fixes: 88903c464321 ("tracing/probe: Add ustring type for user-space string")
    Cc: stable@vger.kernel.org
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16cc222026113f568cdcdb44f13fa64730132ebf
Author: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Date:   Mon Nov 14 13:47:56 2022 +0900

    tracing/probes: Add symstr type for dynamic events
    
    [ Upstream commit b26a124cbfa80f42bfc4e63e1d5643ca98159d66 ]
    
    Add 'symstr' type for storing the kernel symbol as a string data
    instead of the symbol address. This allows us to filter the
    events by wildcard symbol name.
    
    e.g.
      # echo 'e:wqfunc workqueue.workqueue_execute_start symname=$function:symstr' >> dynamic_events
      # cat events/eprobes/wqfunc/format
      name: wqfunc
      ID: 2110
      format:
            field:unsigned short common_type;       offset:0;       size:2; signed:0;
            field:unsigned char common_flags;       offset:2;       size:1; signed:0;
            field:unsigned char common_preempt_count;       offset:3;       size:1; signed:0;
            field:int common_pid;   offset:4;       size:4; signed:1;
    
            field:__data_loc char[] symname;        offset:8;       size:4; signed:1;
    
      print fmt: " symname=\"%s\"", __get_str(symname)
    
    Note that there is already 'symbol' type which just change the
    print format (so it still stores the symbol address in the tracing
    ring buffer.) On the other hand, 'symstr' type stores the actual
    "symbol+offset/size" data as a string.
    
    Link: https://lore.kernel.org/all/166679930847.1528100.4124308529180235965.stgit@devnote3/
    
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Stable-dep-of: 66bcf65d6cf0 ("tracing/probes: Fix to avoid double count of the string length on the array")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5ded0c11d4b6aa896fecd20870910cf12b5539b
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Jul 4 22:44:34 2023 +0200

    mptcp: do not rely on implicit state check in mptcp_listen()
    
    [ Upstream commit 0226436acf2495cde4b93e7400e5a87305c26054 ]
    
    Since the blamed commit, closing the first subflow resets the first
    subflow socket state to SS_UNCONNECTED.
    
    The current mptcp listen implementation relies only on such
    state to prevent touching not-fully-disconnected sockets.
    
    Incoming mptcp fastclose (or paired endpoint removal) unconditionally
    closes the first subflow.
    
    All the above allows an incoming fastclose followed by a listen() call
    to successfully race with a blocking recvmsg(), potentially causing the
    latter to hit a divide by zero bug in cleanup_rbuf/__tcp_select_window().
    
    Address the issue explicitly checking the msk socket state in
    mptcp_listen(). An alternative solution would be moving the first
    subflow socket state update into mptcp_disconnect(), but in the long
    term the first subflow socket should be removed: better avoid relaying
    on it for internal consistency check.
    
    Fixes: b29fcfb54cd7 ("mptcp: full disconnect implementation")
    Cc: stable@vger.kernel.org
    Reported-by: Christoph Paasch <cpaasch@apple.com>
    Closes: https://github.com/multipath-tcp/mptcp_net-next/issues/414
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbe9fa195ef2d3b93c4e11c6386174b880e27b74
Author: Menglong Dong <imagedong@tencent.com>
Date:   Fri Jan 6 10:57:20 2023 -0800

    mptcp: introduce 'sk' to replace 'sock->sk' in mptcp_listen()
    
    [ Upstream commit cfdcfeed6449d702825d249cb85346ecf56236fc ]
    
    'sock->sk' is used frequently in mptcp_listen(). Therefore, we can
    introduce the 'sk' and replace 'sock->sk' with it.
    
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Menglong Dong <imagedong@tencent.com>
    Signed-off-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Stable-dep-of: 0226436acf24 ("mptcp: do not rely on implicit state check in mptcp_listen()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cde7f2fd6323e5054e1db2f1ee7231864cd5294c
Author: Oliver Upton <oliver.upton@linux.dev>
Date:   Fri Jun 9 22:01:02 2023 +0000

    arm64: errata: Mitigate Ampere1 erratum AC03_CPU_38 at stage-2
    
    [ Upstream commit 6df696cd9bc1ceed0e92e36908f88bbd16d18255 ]
    
    AmpereOne has an erratum in its implementation of FEAT_HAFDBS that
    required disabling the feature on the design. This was done by reporting
    the feature as not implemented in the ID register, although the
    corresponding control bits were not actually RES0. This does not align
    well with the requirements of the architecture, which mandates these
    bits be RES0 if HAFDBS isn't implemented.
    
    The kernel's use of stage-1 is unaffected, as the HA and HD bits are
    only set if HAFDBS is detected in the ID register. KVM, on the other
    hand, relies on the RES0 behavior at stage-2 to use the same value for
    VTCR_EL2 on any cpu in the system. Mitigate the non-RES0 behavior by
    leaving VTCR_EL2.HA clear on affected systems.
    
    Cc: stable@vger.kernel.org
    Cc: D Scott Phillips <scott@os.amperecomputing.com>
    Cc: Darren Hart <darren@os.amperecomputing.com>
    Acked-by: D Scott Phillips <scott@os.amperecomputing.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Link: https://lore.kernel.org/r/20230609220104.1836988-2-oliver.upton@linux.dev
    Signed-off-by: Oliver Upton <oliver.upton@linux.dev>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb1de0a2347cf1968bf0ee39cbed2239ea9f210a
Author: Oliver Upton <oliver.upton@linux.dev>
Date:   Fri Dec 2 18:51:56 2022 +0000

    KVM: arm64: Condition HW AF updates on config option
    
    [ Upstream commit 1dfc3e905089a0bcada268fb5691a605655e0319 ]
    
    As it currently stands, KVM makes use of FEAT_HAFDBS unconditionally.
    Use of the feature in the rest of the kernel is guarded by an associated
    Kconfig option.
    
    Align KVM with the rest of the kernel and only enable VTCR_HA when
    ARM64_HW_AFDBM is enabled. This can be helpful for testing changes to
    the stage-2 access fault path on Armv8.1+ implementations.
    
    Link: https://lore.kernel.org/r/20221202185156.696189-7-oliver.upton@linux.dev
    Signed-off-by: Oliver Upton <oliver.upton@linux.dev>
    Stable-dep-of: 6df696cd9bc1 ("arm64: errata: Mitigate Ampere1 erratum AC03_CPU_38 at stage-2")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17e188e0feb008bab5f4b083083dff7cdc633ca1
Author: Christian König <christian.koenig@amd.com>
Date:   Fri Jul 7 11:25:00 2023 +0200

    drm/ttm: never consider pinned BOs for eviction&swap
    
    [ Upstream commit a2848d08742c8e8494675892c02c0d22acbe3cf8 ]
    
    There is a small window where we have already incremented the pin count
    but not yet moved the bo from the lru to the pinned list.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reported-by: Pelloux-Prayer, Pierre-Eric <Pierre-eric.Pelloux-prayer@amd.com>
    Tested-by: Pelloux-Prayer, Pierre-Eric <Pierre-eric.Pelloux-prayer@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Link: https://patchwork.freedesktop.org/patch/msgid/20230707120826.3701-1-christian.koenig@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7451c38e15b033d1e396b9e5c2c6b7c945ea238
Author: Hui Li <caelli@tencent.com>
Date:   Thu Apr 6 10:44:50 2023 +0800

    tty: fix hang on tty device with no_room set
    
    [ Upstream commit 4903fde8047a28299d1fc79c1a0dcc255e928f12 ]
    
    It is possible to hang pty devices in this case, the reader was
    blocking at epoll on master side, the writer was sleeping at
    wait_woken inside n_tty_write on slave side, and the write buffer
    on tty_port was full, we found that the reader and writer would
    never be woken again and blocked forever.
    
    The problem was caused by a race between reader and kworker:
    n_tty_read(reader):  n_tty_receive_buf_common(kworker):
    copy_from_read_buf()|
                        |room = N_TTY_BUF_SIZE - (ldata->read_head - tail)
                        |room <= 0
    n_tty_kick_worker() |
                        |ldata->no_room = true
    
    After writing to slave device, writer wakes up kworker to flush
    data on tty_port to reader, and the kworker finds that reader
    has no room to store data so room <= 0 is met. At this moment,
    reader consumes all the data on reader buffer and calls
    n_tty_kick_worker to check ldata->no_room which is false and
    reader quits reading. Then kworker sets ldata->no_room=true
    and quits too.
    
    If write buffer is not full, writer will wake kworker to flush data
    again after following writes, but if write buffer is full and writer
    goes to sleep, kworker will never be woken again and tty device is
    blocked.
    
    This problem can be solved with a check for read buffer size inside
    n_tty_receive_buf_common, if read buffer is empty and ldata->no_room
    is true, a call to n_tty_kick_worker is necessary to keep flushing
    data to reader.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 42458f41d08f ("n_tty: Ensure reader restarts worker for next reader")
    Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Hui Li <caelli@tencent.com>
    Message-ID: <1680749090-14106-1-git-send-email-caelli@tencent.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72deb17550111bf84257964e02113f97e00cc645
Author: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Date:   Fri Nov 11 16:25:02 2022 +0200

    n_tty: Rename tail to old_tail in n_tty_read()
    
    [ Upstream commit 947d66b68f3c4e7cf8f3f3500807b9d2a0de28ce ]
    
    The local tail variable in n_tty_read() is used for one purpose, it
    keeps the old tail. Thus, rename it appropriately to improve code
    readability.
    
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Reviewed-by: Jiri Slaby <jirislaby@kernel.org>
    Link: https://lore.kernel.org/r/22b37499-ff9a-7fc1-f6e0-58411328d122@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: 4903fde8047a ("tty: fix hang on tty device with no_room set")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9c44738cb1f537b177cc1beabcf6913690460cd
Author: Thomas Hellström <thomas.hellstrom@linux.intel.com>
Date:   Mon Jun 26 11:14:49 2023 +0200

    drm/ttm: Don't leak a resource on eviction error
    
    [ Upstream commit e8188c461ee015ba0b9ab2fc82dbd5ebca5a5532 ]
    
    On eviction errors other than -EMULTIHOP we were leaking a resource.
    Fix.
    
    v2:
    - Avoid yet another goto (Andi Shyti)
    
    Fixes: 403797925768 ("drm/ttm: Fix multihop assert on eviction.")
    Cc: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Cc: Christian König <christian.koenig@amd.com>
    Cc: Christian Koenig <christian.koenig@amd.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: dri-devel@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v5.15+
    Signed-off-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Reviewed-by: Nirmoy Das <nirmoy.das@intel.com> #v1
    Reviewed-by: Andi Shyti <andi.shyti@linux.intel.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230626091450.14757-4-thomas.hellstrom@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a8f9b8ccf2b34623cd7264cd78c80f8806959d5
Author: Thomas Hellström <thomas.hellstrom@linux.intel.com>
Date:   Tue Mar 7 15:46:19 2023 +0100

    drm/ttm: Don't print error message if eviction was interrupted
    
    [ Upstream commit 8ab3b0663e279ab550bc2c0b5d602960e8b94e02 ]
    
    Avoid printing an error message if eviction was interrupted by,
    for example, the user pressing CTRL-C. That may happen if eviction
    is waiting for something, like for example a free batch-buffer.
    
    Signed-off-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230307144621.10748-6-thomas.hellstrom@linux.intel.com
    Stable-dep-of: e8188c461ee0 ("drm/ttm: Don't leak a resource on eviction error")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76fcfc6ae3a64033626647bae7b6d1f2d8bea72a
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Fri Jun 23 10:05:21 2023 -0500

    drm/amd/display: Set minimum requirement for using PSR-SU on Phoenix
    
    [ Upstream commit cd2e31a9ab93d13c412a36c6e26811e0f830985b ]
    
    The same parade TCON issue can potentially happen on Phoenix, and the same
    PSR resilience changes have been ported into the DMUB firmware.
    
    Don't allow running PSR-SU unless on the newer firmware.
    
    Cc: stable@vger.kernel.org
    Cc: Sean Wang <sean.ns.wang@amd.com>
    Cc: Marc Rossi <Marc.Rossi@amd.com>
    Cc: Hamza Mahfooz <Hamza.Mahfooz@amd.com>
    Cc: Tsung-hua (Ryan) Lin <Tsung-hua.Lin@amd.com>
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Leo Li <sunpeng.li@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8b61a2c29fc70f64daad698cf09c1f79a0e39f9
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Fri Jun 23 10:05:20 2023 -0500

    drm/amd/display: Set minimum requirement for using PSR-SU on Rembrandt
    
    [ Upstream commit c35b6ea8f2ecfa9d775530b70d4e727869099a9c ]
    
    A number of parade TCONs are causing system hangs when utilized with
    older DMUB firmware and PSR-SU. Some changes have been introduced into
    DMUB firmware to add resilience against these failures.
    
    Don't allow running PSR-SU unless on the newer firmware.
    
    Cc: stable@vger.kernel.org
    Cc: Sean Wang <sean.ns.wang@amd.com>
    Cc: Marc Rossi <Marc.Rossi@amd.com>
    Cc: Hamza Mahfooz <Hamza.Mahfooz@amd.com>
    Cc: Tsung-hua (Ryan) Lin <Tsung-hua.Lin@amd.com>
    Link: https://gitlab.freedesktop.org/drm/amd/-/issues/2443
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Leo Li <sunpeng.li@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: cd2e31a9ab93 ("drm/amd/display: Set minimum requirement for using PSR-SU on Phoenix")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41c666e2b7515c551940ae5ba0437bd2e17fbe85
Author: Cruise Hung <cruise.hung@amd.com>
Date:   Fri May 12 23:33:46 2023 +0800

    drm/amd/display: Update correct DCN314 register header
    
    [ Upstream commit 268182606f26434c5d3ebd0e86efcb0418dec487 ]
    
    [Why]
    The register header for DCN314 is not correct.
    
    [How]
    Update correct DCN314 register header.
    
    Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Cruise Hung <cruise.hung@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: cd2e31a9ab93 ("drm/amd/display: Set minimum requirement for using PSR-SU on Phoenix")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f0582fb6d0edf3581b1ece0cc186ab82fb083b4
Author: Dmytro Laktyushkin <dmytro.laktyushkin@amd.com>
Date:   Tue May 16 15:50:40 2023 -0400

    drm/amd/display: fix dcn315 single stream crb allocation
    
    [ Upstream commit 49f26218c344741cb3eaa740b1e44e960551a87f ]
    
    Change to improve avoiding asymetric crb calculations for single stream
    scenarios.
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Acked-by: Stylon Wang <stylon.wang@amd.com>
    Signed-off-by: Dmytro Laktyushkin <dmytro.laktyushkin@amd.com>
    Reviewed-by: Charlene Liu <Charlene.Liu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38fa05cad9df113fb31fabc0b88f5ca681235bd2
Author: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date:   Fri Dec 9 15:13:18 2022 -0500

    drm/amd/display: add pixel rate based CRB allocation support
    
    [ Upstream commit 9ba90d760e9354c124fa9bbea08017d96699a82c ]
    
    This feature is meant to unblock PSTATE for certain high end display
    configs on dcn315. This is achieved by allocating CRB to detile buffer
    based on display requirements to meet pstate latency hiding needs.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Reviewed-by: Charlene Liu <Charlene.Liu@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 49f26218c344 ("drm/amd/display: fix dcn315 single stream crb allocation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad8c20954406491a8280d0a442ac4bb9ea9e674e
Author: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date:   Tue Nov 1 17:09:11 2022 -0400

    drm/amd/display: fix unbounded requesting for high pixel rate modes on dcn315
    
    [ Upstream commit 655435df0936ce2fda0d5ced7e50101179a3acfd ]
    
    Unbounded requesting is getting configured for odm mode calculations which
    is incorrect. This change checks whether mode requires odm ahead of time.
    
    Reviewed-by: Jun Lei <Jun.Lei@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 49f26218c344 ("drm/amd/display: fix dcn315 single stream crb allocation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acba20a5b2c80385110efdcec00dcefd041b120f
Author: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date:   Fri Oct 7 11:01:08 2022 -0400

    drm/amd/display: use low clocks for no plane configs
    
    [ Upstream commit 2641c7b7808191cba25ba28b82bb73ca294924cc ]
    
    Stream only configurations do not require DCFCLK, SOCCLK, DPPCLK
    or FCLK. They also always allow pstate change.
    
    Reviewed-by: Charlene Liu <Charlene.Liu@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 49f26218c344 ("drm/amd/display: fix dcn315 single stream crb allocation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d515d39d8005981479a93fd6bee2649c59f0b1b
Author: Samson Tam <samson.tam@amd.com>
Date:   Tue May 9 16:40:19 2023 -0400

    drm/amd/display: add ODM case when looking for first split pipe
    
    [ Upstream commit 59de751e3845d699e02dc4da47322b92d83a41e2 ]
    
    [Why]
    When going from ODM 2:1 single display case to max displays, second
    odm pipe needs to be repurposed for one of the new single displays.
    However, acquire_first_split_pipe() only handles MPC case and not
    ODM case
    
    [How]
    Add ODM conditions in acquire_first_split_pipe()
    Add commit_minimal_transition_state() in commit_streams() to handle
    odm 2:1 exit first, and then process new streams
    Handle ODM condition in commit_minimal_transition_state()
    
    Cc: Mario Limonciello <mario.limonciello@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Acked-by: Stylon Wang <stylon.wang@amd.com>
    Signed-off-by: Samson Tam <samson.tam@amd.com>
    Reviewed-by: Alvin Lee <Alvin.Lee2@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a88351318bb70f0bc60153d8d80d642fb051a86
Author: Alvin Lee <Alvin.Lee2@amd.com>
Date:   Wed Nov 2 12:38:12 2022 -0400

    drm/amd/display: Use min transition for all SubVP plane add/remove
    
    [ Upstream commit e4c1b01bc35b04e15782608165aa85b9e1724f7b ]
    
    [Description]
    - Whenever disabling a phantom pipe, we must run through the
      minimal transition sequence
    - In the case where SetVisibility = false for the main pipe,
      we also need to run through the min transtion when disabling
      the phantom pipes
    
    Reviewed-by: Jun Lei <Jun.Lei@amd.com>
    Acked-by: Tom Chung <chiahsuan.chung@amd.com>
    Signed-off-by: Alvin Lee <Alvin.Lee2@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 59de751e3845 ("drm/amd/display: add ODM case when looking for first split pipe")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5397c85f0b89ac4138809ff5d537b9326730d43
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Tue Oct 18 08:28:19 2022 -0400

    drm/amd/display: Include surface of unaffected streams
    
    [ Upstream commit f6ae69f49fcf697b6ffa93d58eb3746897f61cf8 ]
    
    The commit stream function does not include surfaces of unaffected
    streams, which may lead to some blank screens during mode change in some
    edge cases. This commit adds surfaces of unaffected streams followed by
    kernel-doc for documenting some of the fields that participate in this
    change.
    
    v2: squash in kerneldoc warning fix (Alex)
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Co-developed-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 59de751e3845 ("drm/amd/display: add ODM case when looking for first split pipe")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5b3e4cf9942039765ee0b909bd3f913479481cb
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Tue Oct 18 08:28:18 2022 -0400

    drm/amd/display: Copy DC context in the commit streams
    
    [ Upstream commit 0e986cea0347902b2c72b09c8fe9c0f30d7decb4 ]
    
    DC adds an instance of DML (which contains VBA) to each context, and
    multiple threads might write back to the global VBA resulting in data
    overwriting. To keep the consistency with other parts of the DC code,
    this commit changes dc_commit_streams to copy the current DC state, and
    as a result, it also changes the function signature to expect streams
    instead of a context.
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Co-developed-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 59de751e3845 ("drm/amd/display: add ODM case when looking for first split pipe")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4efb2d22003f51cf188b68b2f2c5980c39eb2e22
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Tue Oct 18 08:28:17 2022 -0400

    drm/amd/display: Enable new commit sequence only for DCN32x
    
    [ Upstream commit 7b36f4d18e3e4941d12fe027ad6ad6123c257027 ]
    
    Change commit sequence will impact all ASICs. It is prudent to run this
    update in small steps to keep issues under control and avoid any
    potential regression. With this idea in mind, this commit is preparation
    work for the complete transition to the new commit sequence. To maintain
    this change manageable across multiple ASICs, this commit adds a new
    function named dc_commit_streams which is a copy of the dc_commit_state
    with some minor changes. Finally, inside the dc_commit_state, we check
    if we are using DCN32x or above and enable the new sequence only for
    those devices.
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Co-developed-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 59de751e3845 ("drm/amd/display: add ODM case when looking for first split pipe")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc2c7003888b4311e3bcc392326279fc97911602
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Tue Oct 18 08:28:16 2022 -0400

    drm/amd/display: Rework context change check
    
    [ Upstream commit 10fdb0a11c555e0d6f7698d2874581d06e99ee71 ]
    
    Context change is all about streams; for this reason, this commit
    renames context_changed to streams_changed. Additionally, to make this
    function more flexible, this commit changes the function signature to
    receive the stream array and the stream count as a parameter.
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Co-developed-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 59de751e3845 ("drm/amd/display: add ODM case when looking for first split pipe")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 810329d3d41890e49d75cde006bf3ddf1ccebb9a
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Tue Oct 18 08:28:15 2022 -0400

    drm/amd/display: Check if link state is valid
    
    [ Upstream commit 03ce7b387e8b0f4a1dc97a878545bdf7c7f23251 ]
    
    The link state is set to false if there is no link and local sink. Even
    though the stream state may not change, it is desirable to commit the
    new stream when HPD goes low to high.
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Co-developed-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 59de751e3845 ("drm/amd/display: add ODM case when looking for first split pipe")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1edb2f58adb7113b59de7453025d096919a892e
Author: Hamza Mahfooz <hamza.mahfooz@amd.com>
Date:   Tue Nov 15 11:58:45 2022 -0500

    drm/amd/display: add FB_DAMAGE_CLIPS support
    
    [ Upstream commit 30ebe41582d1ea5a7de990319f9e593dad4886f7 ]
    
    Currently, userspace doesn't have a way to communicate selective updates
    to displays. So, enable support for FB_DAMAGE_CLIPS for DCN ASICs newer
    than DCN301, convert DRM damage clips to dc dirty rectangles and fill
    them into dirty_rects in fill_dc_dirty_rects().
    
    Reviewed-by: Leo Li <sunpeng.li@amd.com>
    Signed-off-by: Hamza Mahfooz <hamza.mahfooz@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Stable-dep-of: 72f1de49ffb9 ("drm/dp_mst: Clear MSG_RDY flag before sending new message")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed92b595af43137dd330744545e3648dec45e2fe
Author: Rick Wertenbroek <rick.wertenbroek@gmail.com>
Date:   Tue Apr 18 09:46:57 2023 +0200

    PCI: rockchip: Don't advertise MSI-X in PCIe capabilities
    
    [ Upstream commit a52587e0bee14cbeeadf48a24013828cb04b8df8 ]
    
    The RK3399 PCIe endpoint controller cannot generate MSI-X IRQs.
    This is documented in the RK3399 technical reference manual (TRM)
    section 17.5.9 "Interrupt Support".
    
    MSI-X capability should therefore not be advertised. Remove the
    MSI-X capability by editing the capability linked-list. The
    previous entry is the MSI capability, therefore get the next
    entry from the MSI-X capability entry and set it as next entry
    for the MSI capability. This in effect removes MSI-X from the list.
    
    Linked list before : MSI cap -> MSI-X cap -> PCIe Device cap -> ...
    Linked list now : MSI cap -> PCIe Device cap -> ...
    
    Link: https://lore.kernel.org/r/20230418074700.1083505-11-rick.wertenbroek@gmail.com
    Fixes: cf590b078391 ("PCI: rockchip: Add EP driver for Rockchip PCIe controller")
    Tested-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Rick Wertenbroek <rick.wertenbroek@gmail.com>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Reviewed-by: Damien Le Moal <dlemoal@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b65231b65ccd6a264c961b9b2c1a61e106f11ac
Author: Rick Wertenbroek <rick.wertenbroek@gmail.com>
Date:   Tue Apr 18 09:46:55 2023 +0200

    PCI: rockchip: Fix window mapping and address translation for endpoint
    
    [ Upstream commit dc73ed0f1b8bddd7f2bf70d123e68ffc99ad71ce ]
    
    The RK3399 PCI endpoint core has 33 windows for PCIe space, now in the
    driver up to 32 fixed size (1M) windows are used and pages are allocated
    and mapped accordingly. The driver first used a single window and allocated
    space inside which caused translation issues (between CPU space and PCI
    space) because a window can only have a single translation at a given
    time, which if multiple pages are allocated inside will cause conflicts.
    Now each window is a single region of 1M which will always guarantee that
    the translation is not in conflict.
    
    Set the translation register addresses for physical function. As documented
    in the technical reference manual (TRM) section 17.5.5 "PCIe Address
    Translation" and section 17.6.8 "Address Translation Registers Description"
    
    Link: https://lore.kernel.org/r/20230418074700.1083505-9-rick.wertenbroek@gmail.com
    Fixes: cf590b078391 ("PCI: rockchip: Add EP driver for Rockchip PCIe controller")
    Tested-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Rick Wertenbroek <rick.wertenbroek@gmail.com>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Reviewed-by: Damien Le Moal <dlemoal@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b117fd8cf43a1bec854ef89bbeed4d5435b78bd
Author: Rick Wertenbroek <rick.wertenbroek@gmail.com>
Date:   Tue Apr 18 09:46:48 2023 +0200

    PCI: rockchip: Remove writes to unused registers
    
    [ Upstream commit 92a9c57c325dd51682d428ba960d961fec3c8a08 ]
    
    Remove write accesses to registers that are marked "unused" (and
    therefore read-only) in the technical reference manual (TRM)
    (see RK3399 TRM 17.6.8.1)
    
    Link: https://lore.kernel.org/r/20230418074700.1083505-2-rick.wertenbroek@gmail.com
    Tested-by: Damien Le Moal <dlemoal@kernel.org>
    Signed-off-by: Rick Wertenbroek <rick.wertenbroek@gmail.com>
    Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
    Reviewed-by: Damien Le Moal <dlemoal@kernel.org>
    Stable-dep-of: dc73ed0f1b8b ("PCI: rockchip: Fix window mapping and address translation for endpoint")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13b9c5f6059fbf7d3222849986b37e4c1e77a479
Author: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Date:   Tue May 2 11:39:23 2023 +0300

    PCI/ASPM: Avoid link retraining race
    
    [ Upstream commit e7e39756363ad5bd83ddeae1063193d0f13870fd ]
    
    PCIe r6.0.1, sec 7.5.3.7, recommends setting the link control parameters,
    then waiting for the Link Training bit to be clear before setting the
    Retrain Link bit.
    
    This avoids a race where the LTSSM may not use the updated parameters if it
    is already in the midst of link training because of other normal link
    activity.
    
    Wait for the Link Training bit to be clear before toggling the Retrain Link
    bit to ensure that the LTSSM uses the updated link control parameters.
    
    [bhelgaas: commit log, return 0 (success)/-ETIMEDOUT instead of bool for
    both pcie_wait_for_retrain() and the existing pcie_retrain_link()]
    Suggested-by: Lukas Wunner <lukas@wunner.de>
    Fixes: 7d715a6c1ae5 ("PCI: add PCI Express ASPM support")
    Link: https://lore.kernel.org/r/20230502083923.34562-1-ilpo.jarvinen@linux.intel.com
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d1cd90cea2e62b6aed2633478776e2f639d8e73
Author: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Date:   Tue Jun 20 14:49:33 2023 -0500

    PCI/ASPM: Factor out pcie_wait_for_retrain()
    
    [ Upstream commit 9c7f136433d26592cb4d9cd00b4e15c33d9797c6 ]
    
    Factor pcie_wait_for_retrain() out from pcie_retrain_link().  No functional
    change intended.
    
    [bhelgaas: split out from
    https: //lore.kernel.org/r/20230502083923.34562-1-ilpo.jarvinen@linux.intel.com]
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Stable-dep-of: e7e39756363a ("PCI/ASPM: Avoid link retraining race")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dfeae80825f9d47a1dfe31faffa2f3e07316528
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Jun 20 14:44:55 2023 -0500

    PCI/ASPM: Return 0 or -ETIMEDOUT from pcie_retrain_link()
    
    [ Upstream commit f5297a01ee805d7fa569d288ed65fc0f9ac9b03d ]
    
    "pcie_retrain_link" is not a question with a true/false answer, so "bool"
    isn't quite the right return type.  Return 0 for success or -ETIMEDOUT if
    the retrain failed.  No functional change intended.
    
    [bhelgaas: based on Ilpo's patch below]
    Link: https://lore.kernel.org/r/20230502083923.34562-1-ilpo.jarvinen@linux.intel.com
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Stable-dep-of: e7e39756363a ("PCI/ASPM: Avoid link retraining race")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecd9da1d0599a4b019898706c5ef8cd3068c6925
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Wed Jun 28 19:08:47 2023 +0800

    MIPS: Loongson: Fix build error when make modules_install
    
    [ Upstream commit 531b3d1195d096f14e030c4b01ec3a53b80276bf ]
    
    After commit 0e96ea5c3eb5904e5dc2f ("MIPS: Loongson64: Clean up use of
    cc-ifversion") we get a build error when make modules_install:
    
    cc1: error: '-mloongson-mmi' must be used with '-mhard-float'
    
    The reason is when make modules_install, 'call cc-option' doesn't work
    in $(KBUILD_CFLAGS) of 'CHECKFLAGS'. Then there is no -mno-loongson-mmi
    applied and -march=loongson3a enable MMI instructions.
    
    To be detail, the error message comes from the CHECKFLAGS invocation of
    $(CC) but it has no impact on the final result of make modules_install,
    it is purely a cosmetic issue. The error occurs because cc-option is
    defined in scripts/Makefile.compiler, which is not included in Makefile
    when running 'make modules_install', as install targets are not supposed
    to require the compiler; see commit 805b2e1d427aab4b ("kbuild: include
    Makefile.compiler only when compiler is needed"). As a result, the call
    to check for '-mno-loongson-mmi' just never happens.
    
    Fix this by partially reverting to the old logic, use 'call cc-option'
    to conditionally apply -march=loongson3a and -march=mips64r2.
    
    By the way, Loongson-2E/2F is also broken in commit 13ceb48bc19c563e05f4
    ("MIPS: Loongson2ef: Remove unnecessary {as,cc}-option calls") so fix it
    together.
    
    Fixes: 13ceb48bc19c563e05f4 ("MIPS: Loongson2ef: Remove unnecessary {as,cc}-option calls")
    Fixes: 0e96ea5c3eb5904e5dc2 ("MIPS: Loongson64: Clean up use of cc-ifversion")
    Cc: stable@vger.kernel.org
    Cc: Feiyang Chen <chenfeiyang@loongson.cn>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fac9a39f8bbbc53349144ef2eddf8669ac4bb1f
Author: Jiaxun Yang <jiaxun.yang@flygoat.com>
Date:   Tue Apr 4 10:33:47 2023 +0100

    MIPS: Loongson: Move arch cflags to MIPS top level Makefile
    
    [ Upstream commit 194a835210521282ad31e8f7047556318611f596 ]
    
    Arch cflags should be independent to Platform.
    
    Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Stable-dep-of: 531b3d1195d0 ("MIPS: Loongson: Fix build error when make modules_install")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70957ae16093d0b3201bf863db19c2d5c2310315
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Jul 4 21:50:28 2023 +0200

    i2c: nomadik: Remove a useless call in the remove function
    
    [ Upstream commit 05f933d5f7318b03ff2028c1704dc867ac16f2c7 ]
    
    Since commit 235602146ec9 ("i2c-nomadik: turn the platform driver to an amba
    driver"), there is no more request_mem_region() call in this driver.
    
    So remove the release_mem_region() call from the remove function which is
    likely a left over.
    
    Fixes: 235602146ec9 ("i2c-nomadik: turn the platform driver to an amba driver")
    Cc: <stable@vger.kernel.org> # v3.6+
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Andi Shyti <andi.shyti@kernel.org>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9be061237aa8f9f92d611685abf4f57f062bf36
Author: Andi Shyti <andi.shyti@kernel.org>
Date:   Sun Jun 11 03:37:00 2023 +0200

    i2c: nomadik: Use devm_clk_get_enabled()
    
    [ Upstream commit 9c7174db4cdd111e10d19eed5c36fd978a14c8a2 ]
    
    Replace the pair of functions, devm_clk_get() and
    clk_prepare_enable(), with a single function
    devm_clk_get_enabled().
    
    Signed-off-by: Andi Shyti <andi.shyti@kernel.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Stable-dep-of: 05f933d5f731 ("i2c: nomadik: Remove a useless call in the remove function")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82dee5b2586c5466db7baeb120855f688e5779c9
Author: Andi Shyti <andi.shyti@kernel.org>
Date:   Sun Jun 11 03:36:59 2023 +0200

    i2c: nomadik: Remove unnecessary goto label
    
    [ Upstream commit 1c5d33fff0d375e4ab7c4261dc62a286babbb4c6 ]
    
    The err_no_mem goto label doesn't do anything. Remove it.
    
    Signed-off-by: Andi Shyti <andi.shyti@kernel.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Stable-dep-of: 05f933d5f731 ("i2c: nomadik: Remove a useless call in the remove function")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1dc23fb83b71f65130d4bd63ab25447c8ee51754
Author: Markus Elfring <elfring@users.sourceforge.net>
Date:   Fri Feb 2 14:50:09 2018 +0100

    i2c: Improve size determinations
    
    [ Upstream commit 06e989578232da33a7fe96b04191b862af8b2cec ]
    
    Replace the specification of a data structure by a pointer dereference
    as the parameter for the operator "sizeof" to make the corresponding
    size determination a bit safer according to the Linux coding style
    convention.
    
    This issue was detected by using the Coccinelle software.
    
    Signed-off-by: Markus Elfring <elfring@users.sourceforge.net>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Stable-dep-of: 05f933d5f731 ("i2c: nomadik: Remove a useless call in the remove function")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38a8983ae1d0e2df8b9fe83e4c7bcac0f7a8e2da
Author: Markus Elfring <elfring@users.sourceforge.net>
Date:   Fri Feb 2 17:24:57 2018 +0100

    i2c: Delete error messages for failed memory allocations
    
    [ Upstream commit 6b3b21a8542fd2fb6ffc61bc13b9419f0c58ebad ]
    
    These issues were detected by using the Coccinelle software.
    
    Signed-off-by: Markus Elfring <elfring@users.sourceforge.net>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Stable-dep-of: 05f933d5f731 ("i2c: nomadik: Remove a useless call in the remove function")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b7291ab29124b3829e141ac1a8b7e65ebb7ed47
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Jun 19 17:21:50 2023 +0100

    btrfs: fix race between quota disable and relocation
    
    [ Upstream commit 8a4a0b2a3eaf75ca8854f856ef29690c12b2f531 ]
    
    If we disable quotas while we have a relocation of a metadata block group
    that has extents belonging to the quota root, we can cause the relocation
    to fail with -ENOENT. This is because relocation builds backref nodes for
    extents of the quota root and later needs to walk the backrefs and access
    the quota root - however if in between a task disables quotas, it results
    in deleting the quota root from the root tree (with btrfs_del_root(),
    called from btrfs_quota_disable().
    
    This can be sporadically triggered by test case btrfs/255 from fstests:
    
      $ ./check btrfs/255
      FSTYP         -- btrfs
      PLATFORM      -- Linux/x86_64 debian0 6.4.0-rc6-btrfs-next-134+ #1 SMP PREEMPT_DYNAMIC Thu Jun 15 11:59:28 WEST 2023
      MKFS_OPTIONS  -- /dev/sdc
      MOUNT_OPTIONS -- /dev/sdc /home/fdmanana/btrfs-tests/scratch_1
    
      btrfs/255 6s ... _check_dmesg: something found in dmesg (see /home/fdmanana/git/hub/xfstests/results//btrfs/255.dmesg)
      - output mismatch (see /home/fdmanana/git/hub/xfstests/results//btrfs/255.out.bad)
    #      --- tests/btrfs/255.out  2023-03-02 21:47:53.876609426 +0000
    #      +++ /home/fdmanana/git/hub/xfstests/results//btrfs/255.out.bad   2023-06-16 10:20:39.267563212 +0100
    #      @@ -1,2 +1,4 @@
    #       QA output created by 255
    #      +ERROR: error during balancing '/home/fdmanana/btrfs-tests/scratch_1': No such file or directory
    #      +There may be more info in syslog - try dmesg | tail
    #       Silence is golden
    #      ...
          (Run 'diff -u /home/fdmanana/git/hub/xfstests/tests/btrfs/255.out /home/fdmanana/git/hub/xfstests/results//btrfs/255.out.bad'  to see the entire diff)
      Ran: btrfs/255
      Failures: btrfs/255
      Failed 1 of 1 tests
    
    To fix this make the quota disable operation take the cleaner mutex, as
    relocation of a block group also takes this mutex. This is also what we
    do when deleting a subvolume/snapshot, we take the cleaner mutex in the
    cleaner kthread (at cleaner_kthread()) and then we call btrfs_del_root()
    at btrfs_drop_snapshot() while under the protection of the cleaner mutex.
    
    Fixes: bed92eae26cc ("Btrfs: qgroup implementation and prototypes")
    CC: stable@vger.kernel.org # 5.4+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44e2afbf650f3264519643fcc9e6b4d2f6e8d547
Author: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
Date:   Wed Jul 19 13:41:01 2023 +0200

    gpio: mvebu: fix irq domain leak
    
    [ Upstream commit 644ee70267a934be27370f9aa618b29af7290544 ]
    
    Uwe Kleine-König pointed out we still have one resource leak in the mvebu
    driver triggered on driver detach. Let's address it with a custom devm
    action.
    
    Fixes: 812d47889a8e ("gpio/mvebu: Use irq_domain_add_linear")
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Reviewed-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ee94aab99705d02f5a8d009a2c75d25010a3540
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Jul 17 16:27:43 2023 +0200

    gpio: mvebu: Make use of devm_pwmchip_add
    
    [ Upstream commit 1945063eb59e64d2919cb14d54d081476d9e53bb ]
    
    This allows to get rid of a call to pwmchip_remove() in the error path. There
    is no .remove function for this driver, so this change fixes a resource leak
    when a gpio-mvebu device is unbound.
    
    Fixes: 757642f9a584 ("gpio: mvebu: Add limited PWM support")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Andy Shevchenko <andy@kernel.org>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19156bcb881ccee406f94c9887b50803b661f70f
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Nov 17 13:08:00 2022 +0200

    pwm: Add a stub for devm_pwmchip_add()
    
    commit 88da4e8113110d5f4ebdd2f8cd0899e300cd1954 upstream.
    
    The devm_pwmchip_add() can be called by a module that optionally
    instantiates PWM chip. In the case of CONFIG_PWM=n, the compilation
    can't be performed. Hence, add a necessary stub.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2d8ac988f3cd1d363a758c7e934b601e31f576d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jul 10 14:34:25 2023 +0200

    gpio: tps68470: Make tps68470_gpio_output() always set the initial value
    
    [ Upstream commit 5a7adc6c1069ce31ef4f606ae9c05592c80a6ab5 ]
    
    Make tps68470_gpio_output() call tps68470_gpio_set() for output-only pins
    too, so that the initial value passed to gpiod_direction_output() is
    honored for these pins too.
    
    Fixes: 275b13a65547 ("gpio: Add support for TPS68470 GPIOs")
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Reviewed-by: Daniel Scally <dan.scally@ideasonboard.com>
    Tested-by: Daniel Scally <dan.scally@ideasonboard.com>
    Reviewed-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04f7d4917471f77d87568145b646d12f51342e8d
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Tue Jul 18 13:56:07 2023 +0200

    io_uring: don't audit the capability check in io_uring_create()
    
    [ Upstream commit 6adc2272aaaf84f34b652cf77f770c6fcc4b8336 ]
    
    The check being unconditional may lead to unwanted denials reported by
    LSMs when a process has the capability granted by DAC, but denied by an
    LSM. In the case of SELinux such denials are a problem, since they can't
    be effectively filtered out via the policy and when not silenced, they
    produce noise that may hide a true problem or an attack.
    
    Since not having the capability merely means that the created io_uring
    context will be accounted against the current user's RLIMIT_MEMLOCK
    limit, we can disable auditing of denials for this check by using
    ns_capable_noaudit() instead of capable().
    
    Fixes: 2b188cc1bb85 ("Add io_uring IO interface")
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2193317
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Link: https://lore.kernel.org/r/20230718115607.65652-1-omosnace@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 017f686bcb536ff23d49c143fdf9d1fd89a9a924
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Wed Jul 5 13:19:37 2023 +0200

    KVM: s390: pv: fix index value of replaced ASCE
    
    [ Upstream commit c2fceb59bbda16468bda82b002383bff59de89ab ]
    
    The index field of the struct page corresponding to a guest ASCE should
    be 0. When replacing the ASCE in s390_replace_asce(), the index of the
    new ASCE should also be set to 0.
    
    Having the wrong index might lead to the wrong addresses being passed
    around when notifying pte invalidations, and eventually to validity
    intercepts (VM crash) if the prefix gets unmapped and the notifier gets
    called with the wrong address.
    
    Reviewed-by: Philippe Mathieu-Daudé <philmd@linaro.org>
    Fixes: faa2f72cb356 ("KVM: s390: pv: leak the topmost page table when destroy fails")
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Message-ID: <20230705111937.33472-3-imbrenda@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8df129860665d49bff61a97de55b37c4bd33146
Author: Haren Myneni <haren@linux.ibm.com>
Date:   Sun Jul 16 03:05:06 2023 -0700

    powerpc/pseries/vas: Hold mmap_mutex after mmap lock during window close
    
    [ Upstream commit b59c9dc4d9d47b3c4572d826603fde507055b656 ]
    
    Commit 8ef7b9e1765a ("powerpc/pseries/vas: Close windows with DLPAR
    core removal") unmaps the window paste address and issues HCALL to
    close window in the hypervisor for migration or DLPAR core removal
    events. So holds mmap_mutex and then mmap lock before unmap the
    paste address. But if the user space issue mmap paste address at
    the same time with the migration event, coproc_mmap() is called
    after holding the mmap lock which can trigger deadlock when trying
    to acquire mmap_mutex in coproc_mmap().
    
    t1: mmap() call to mmap              t2: Migration event
        window paste address
    
    do_mmap2()                           migration_store()
     ksys_mmap_pgoff()                    pseries_migrate_partition()
      vm_mmap_pgoff()                      vas_migration_handler()
        Acquire mmap lock                   reconfig_close_windows()
        do_mmap()                             lock mmap_mutex
         mmap_region()                        Acquire mmap lock
          call_mmap()                         //Wait for mmap lock
           coproc_mmap()                        unmap vma
             lock mmap_mutex                    update window status
             //wait for mmap_mutex            Release mmap lock
              mmap vma                        unlock mmap_mutex
              update window status
             unlock mmap_mutex
        ...
        Release mmap lock
    
    Fix this deadlock issue by holding mmap lock first before mmap_mutex
    in reconfig_close_windows().
    
    Fixes: 8ef7b9e1765a ("powerpc/pseries/vas: Close windows with DLPAR core removal")
    Signed-off-by: Haren Myneni <haren@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/20230716100506.7833-1-haren@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 557ea2ff05193c2a04cf05233102a774d9e57e52
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Fri Jul 14 11:11:06 2023 +0100

    blk-mq: Fix stall due to recursive flush plug
    
    [ Upstream commit 70904263512a74a3b8941dd9e6e515ca6fc57821 ]
    
    We have seen rare IO stalls as follows:
    
    * blk_mq_plug_issue_direct() is entered with an mq_list containing two
    requests.
    * For the first request, it sets last == false and enters the driver's
    queue_rq callback.
    * The driver queue_rq callback indirectly calls schedule() which calls
    blk_flush_plug(). This may happen if the driver has the
    BLK_MQ_F_BLOCKING flag set and is allowed to sleep in ->queue_rq.
    * blk_flush_plug() handles the remaining request in the mq_list. mq_list
    is now empty.
    * The original call to queue_rq resumes (with last == false).
    * The loop in blk_mq_plug_issue_direct() terminates because there are no
    remaining requests in mq_list.
    
    The IO is now stalled because the last request submitted to the driver
    had last == false and there was no subsequent call to commit_rqs().
    
    Fix this by returning early in blk_mq_flush_plug_list() if rq_count is 0
    which it will be in the recursive case, rather than checking if the
    mq_list is empty. At the same time, adjust one of the callers to skip
    the mq_list empty check as it is not necessary.
    
    Fixes: dc5fc361d891 ("block: attempt direct issue of plug list")
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20230714101106.3635611-1-ross.lagerwall@citrix.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0935bbbf6e5aa55b7ebb3bde7ae1df44905121df
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Jun 6 21:59:26 2023 +0800

    jbd2: Fix wrongly judgement for buffer head removing while doing checkpoint
    
    [ Upstream commit e34c8dd238d0c9368b746480f313055f5bab5040 ]
    
    Following process,
    
    jbd2_journal_commit_transaction
    // there are several dirty buffer heads in transaction->t_checkpoint_list
              P1                   wb_workfn
    jbd2_log_do_checkpoint
     if (buffer_locked(bh)) // false
                                __block_write_full_page
                                 trylock_buffer(bh)
                                 test_clear_buffer_dirty(bh)
     if (!buffer_dirty(bh))
      __jbd2_journal_remove_checkpoint(jh)
       if (buffer_write_io_error(bh)) // false
                                 >> bh IO error occurs <<
     jbd2_cleanup_journal_tail
      __jbd2_update_log_tail
       jbd2_write_superblock
       // The bh won't be replayed in next mount.
    , which could corrupt the ext4 image, fetch a reproducer in [Link].
    
    Since writeback process clears buffer dirty after locking buffer head,
    we can fix it by try locking buffer and check dirtiness while buffer is
    locked, the buffer head can be removed if it is neither dirty nor locked.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217490
    Fixes: 470decc613ab ("[PATCH] jbd2: initial copy of files from jbd")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20230606135928.434610-5-yi.zhang@huaweicloud.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e385845eea187c573949e31e21d6934af1f3415
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Fri Jul 7 21:26:09 2023 -0500

    drm/amd: Align SMU11 SMU_MSG_OverridePcieParameters implementation with SMU13
    
    commit e701156ccc6c7a5f104a968dda74cd6434178712 upstream.
    
    SMU13 overrides dynamic PCIe lane width and dynamic speed by when on
    certain hosts. commit 38e4ced80479 ("drm/amd/pm: conditionally disable
    pcie lane switching for some sienna_cichlid SKUs") worked around this
    issue by setting up certain SKUs to set up certain limits, but the same
    fundamental problem with those hosts affects all SMU11 implmentations
    as well, so align the SMU11 and SMU13 driver handling.
    
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org # 6.1.x
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32631ac27c914e4de8b37987b282e9799f33d8dc
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Fri Jul 7 21:26:08 2023 -0500

    drm/amd: Move helper for dynamic speed switch check out of smu13
    
    commit 188623076d0f1a500583d392b6187056bf7cc71a upstream.
    
    This helper is used for checking if the connected host supports
    the feature, it can be moved into generic code to be used by other
    smu implementations as well.
    
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org # 6.1.x
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53dd2ca2c02fdcfe3aad2345091d371063f97d17
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue May 16 22:16:18 2023 +0800

    ovl: fix null pointer dereference in ovl_permission()
    
    commit 1a73f5b8f079fd42a544c1600beface50c63af7c upstream.
    
    Following process:
              P1                     P2
     path_lookupat
      link_path_walk
       inode_permission
        ovl_permission
          ovl_i_path_real(inode, &realpath)
            path->dentry = ovl_i_dentry_upper(inode)
                              drop_cache
                               __dentry_kill(ovl_dentry)
                                iput(ovl_inode)
                                 ovl_destroy_inode(ovl_inode)
                                  dput(oi->__upperdentry)
                                   dentry_kill(upperdentry)
                                    dentry_unlink_inode
                                     upperdentry->d_inode = NULL
          realinode = d_inode(realpath.dentry) // return NULL
          inode_permission(realinode)
           inode->i_sb  // NULL pointer dereference
    , will trigger an null pointer dereference at realinode:
      [  335.664979] BUG: kernel NULL pointer dereference,
                     address: 0000000000000002
      [  335.668032] CPU: 0 PID: 2592 Comm: ls Not tainted 6.3.0
      [  335.669956] RIP: 0010:inode_permission+0x33/0x2c0
      [  335.678939] Call Trace:
      [  335.679165]  <TASK>
      [  335.679371]  ovl_permission+0xde/0x320
      [  335.679723]  inode_permission+0x15e/0x2c0
      [  335.680090]  link_path_walk+0x115/0x550
      [  335.680771]  path_lookupat.isra.0+0xb2/0x200
      [  335.681170]  filename_lookup+0xda/0x240
      [  335.681922]  vfs_statx+0xa6/0x1f0
      [  335.682233]  vfs_fstatat+0x7b/0xb0
    
    Fetch a reproducer in [Link].
    
    Use the helper ovl_i_path_realinode() to get realinode and then do
    non-nullptr checking.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217405
    Fixes: 4b7791b2e958 ("ovl: handle idmappings in ovl_permission()")
    Cc: <stable@vger.kernel.org> # v5.19
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Suggested-by: Christian Brauner <brauner@kernel.org>
    Suggested-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9174f0d7addf4c1c9eddef87d4433b7706e77b7
Author: Agustin Gutierrez <agustin.gutierrez@amd.com>
Date:   Tue Feb 21 16:08:15 2023 -0500

    drm/amd/display: Keep PHY active for dp config
    
    commit 2b02d746c1818baf741f4eeeff9b97ab4b81e1cf upstream.
    
    [Why]
    Current hotplug sequence causes temporary hang at the re-entry of the
    optimized power state.
    
    [How]
    Keep a PHY active when detecting DP signal + DPMS active
    
    Reviewed-by: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>
    Acked-by: Qingqing Zhuo <qingqing.zhuo@amd.com>
    Signed-off-by: Agustin Gutierrez <agustin.gutierrez@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bb912161697d9fe7dbc0f970b3deb9953576ec2
Author: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Date:   Fri Jul 14 20:14:34 2023 +0530

    platform/x86/amd/pmf: reduce verbosity of apmf_get_system_params
    
    commit 839e90e75e695b3d9ee17f5a2811e7ee5aea8d4a upstream.
    
    apmf_get_system_params() failure is not a critical event, reduce its
    verbosity from dev_err to dev_dbg.
    
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Link: https://lore.kernel.org/r/20230714144435.1239776-1-Shyam-sundar.S-k@amd.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd14866ebedd4a395455655f763a6c40703d1100
Author: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Date:   Fri Jul 14 20:14:35 2023 +0530

    platform/x86/amd/pmf: Notify OS power slider update
    
    commit 33c9ab5b493a0e922b06c12fed4fdcb862212cda upstream.
    
    APMF fn8 can notify EC about the OS slider position change. Add this
    capability to the PMF driver so that it can call the APMF fn8 based on
    the changes in the Platform profile events.
    
    Co-developed-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Patil Rajesh Reddy <Patil.Reddy@amd.com>
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Link: https://lore.kernel.org/r/20230714144435.1239776-2-Shyam-sundar.S-k@amd.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b068314fd8ce751a7f906e55bb90f3551815f1a0
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Jun 26 00:42:19 2023 +0200

    netfilter: nf_tables: fix underflow in chain reference counter
    
    commit b389139f12f287b8ed2e2628b72df89a081f0b59 upstream.
    
    Set element addition error path decrements reference counter on chains
    twice: once on element release and again via nft_data_release().
    
    Then, d6b478666ffa ("netfilter: nf_tables: fix underflow in object
    reference counter") incorrectly fixed this by removing the stateful
    object reference count decrement.
    
    Restore the stateful object decrement as in b91d90368837 ("netfilter:
    nf_tables: fix leaking object reference count") and let
    nft_data_release() decrement the chain reference counter, so this is
    done only once.
    
    Fixes: d6b478666ffa ("netfilter: nf_tables: fix underflow in object reference counter")
    Fixes: 628bd3e49cba ("netfilter: nf_tables: drop map element references from preparation phase")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35651fde1a7bb54dde0a46d35cd0d7136869ae86
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Jun 16 15:20:08 2023 +0200

    netfilter: nf_tables: fix underflow in object reference counter
    
    commit d6b478666ffa6d2c25386d78bf1c4640d4da305e upstream.
    
    Since ("netfilter: nf_tables: drop map element references from
    preparation phase"), integration with commit protocol is better,
    therefore drop the workaround that b91d90368837 ("netfilter: nf_tables:
    fix leaking object reference count") provides.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
