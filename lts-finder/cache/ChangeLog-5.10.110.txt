commit 3238bffaf9928c10173d88415f6815f6df3e7771
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 8 14:40:45 2022 +0200

    Linux 5.10.110
    
    Link: https://lore.kernel.org/r/20220405070258.802373272@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Link: https://lore.kernel.org/r/20220406133013.264188813@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20220407183749.142181327@linuxfoundation.org
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf342cbfb37ff0ee7d096367ec03c8f363788b43
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Mar 21 10:48:42 2022 +0000

    PCI: xgene: Revert "PCI: xgene: Use inbound resources for setup"
    
    commit 1874b6d7ab1bdc900e8398026350313ac29caddb upstream.
    
    Commit 6dce5aa59e0b ("PCI: xgene: Use inbound resources for setup")
    killed PCIe on my XGene-1 box (a Mustang board). The machine itself
    is still alive, but half of its storage (over NVMe) is gone, and the
    NVMe driver just times out.
    
    Note that this machine boots with a device tree provided by the
    UEFI firmware (2016 vintage), which could well be non conformant
    with the spec, hence the breakage.
    
    With the patch reverted, the box boots 5.17-rc8 with flying colors.
    
    Link: https://lore.kernel.org/all/Yf2wTLjmcRj+AbDv@xps13.dannf
    Link: https://lore.kernel.org/r/20220321104843.949645-2-maz@kernel.org
    Fixes: 6dce5aa59e0b ("PCI: xgene: Use inbound resources for setup")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Cc: Rob Herring <robh@kernel.org>
    Cc: Toan Le <toan@os.amperecomputing.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Krzysztof Wilczyński <kw@linux.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Stéphane Graber <stgraber@ubuntu.com>
    Cc: dann frazier <dann.frazier@canonical.com>
    [dannf: minor context adjustment]
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a25864c5bc20966cdc5ba5eb65b74b9b1e9ec8d2
Author: Vijay Balakrishna <vijayb@linux.microsoft.com>
Date:   Wed Mar 2 09:38:09 2022 -0800

    arm64: Do not defer reserve_crashkernel() for platforms with no DMA memory zones
    
    commit 031495635b4668f94e964e037ca93d0d38bfde58 upstream.
    
    The following patches resulted in deferring crash kernel reservation to
    mem_init(), mainly aimed at platforms with DMA memory zones (no IOMMU),
    in particular Raspberry Pi 4.
    
    commit 1a8e1cef7603 ("arm64: use both ZONE_DMA and ZONE_DMA32")
    commit 8424ecdde7df ("arm64: mm: Set ZONE_DMA size based on devicetree's dma-ranges")
    commit 0a30c53573b0 ("arm64: mm: Move reserve_crashkernel() into mem_init()")
    commit 2687275a5843 ("arm64: Force NO_BLOCK_MAPPINGS if crashkernel reservation is required")
    
    Above changes introduced boot slowdown due to linear map creation for
    all the memory banks with NO_BLOCK_MAPPINGS, see discussion[1].  The proposed
    changes restore crash kernel reservation to earlier behavior thus avoids
    slow boot, particularly for platforms with IOMMU (no DMA memory zones).
    
    Tested changes to confirm no ~150ms boot slowdown on our SoC with IOMMU
    and 8GB memory.  Also tested with ZONE_DMA and/or ZONE_DMA32 configs to confirm
    no regression to deferring scheme of crash kernel memory reservation.
    In both cases successfully collected kernel crash dump.
    
    [1] https://lore.kernel.org/all/9436d033-579b-55fa-9b00-6f4b661c2dd7@linux.microsoft.com/
    
    Signed-off-by: Vijay Balakrishna <vijayb@linux.microsoft.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Pasha Tatashin <pasha.tatashin@soleen.com>
    Link: https://lore.kernel.org/r/1646242689-20744-1-git-send-email-vijayb@linux.microsoft.com
    [will: Add #ifdef CONFIG_KEXEC_CORE guards to fix 'crashk_res' references in allnoconfig build]
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 558564db44755dfb3e48b0d64de327d20981e950
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Mar 8 13:04:19 2022 -0600

    coredump: Use the vma snapshot in fill_files_note
    
    commit 390031c942116d4733310f0684beb8db19885fe6 upstream.
    
    Matthew Wilcox reported that there is a missing mmap_lock in
    file_files_note that could possibly lead to a user after free.
    
    Solve this by using the existing vma snapshot for consistency
    and to avoid the need to take the mmap_lock anywhere in the
    coredump code except for dump_vma_snapshot.
    
    Update the dump_vma_snapshot to capture vm_pgoff and vm_file
    that are neeeded by fill_files_note.
    
    Add free_vma_snapshot to free the captured values of vm_file.
    
    Reported-by: Matthew Wilcox <willy@infradead.org>
    Link: https://lkml.kernel.org/r/20220131153740.2396974-1-willy@infradead.org
    Cc: stable@vger.kernel.org
    Fixes: a07279c9a8cd ("binfmt_elf, binfmt_elf_fdpic: use a VMA list snapshot")
    Fixes: 2aa362c49c31 ("coredump: extend core dump note section to contain file names of mapped files")
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7933f145ad32bb5e084af55176ab6dcaa15a036
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Jan 31 12:17:38 2022 -0600

    coredump/elf: Pass coredump_params into fill_note_info
    
    commit 9ec7d3230717b4fe9b6c7afeb4811909c23fa1d7 upstream.
    
    Instead of individually passing cprm->siginfo and cprm->regs
    into fill_note_info pass all of struct coredump_params.
    
    This is preparation to allow fill_files_note to use the existing
    vma snapshot.
    
    Reviewed-by: Jann Horn <jannh@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b043ae637a83585b2a497c2eb7ee49446fc68e98
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Mar 8 13:01:19 2022 -0600

    coredump: Remove the WARN_ON in dump_vma_snapshot
    
    commit 49c1866348f364478a0c4d3dd13fd08bb82d3a5b upstream.
    
    The condition is impossible and to the best of my knowledge has never
    triggered.
    
    We are in deep trouble if that conditions happens and we walk past
    the end of our allocated array.
    
    So delete the WARN_ON and the code that makes it look like the kernel
    can handle the case of walking past the end of it's vma_meta array.
    
    Reviewed-by: Jann Horn <jannh@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 936c8be4d1447f36ac4d2a464bd03a5cd659c42f
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Mar 8 12:55:29 2022 -0600

    coredump: Snapshot the vmas in do_coredump
    
    commit 95c5436a4883841588dae86fb0b9325f47ba5ad3 upstream.
    
    Move the call of dump_vma_snapshot and kvfree(vma_meta) out of the
    individual coredump routines into do_coredump itself.  This makes
    the code less error prone and easier to maintain.
    
    Make the vma snapshot available to the coredump routines
    in struct coredump_params.  This makes it easier to
    change and update what is captures in the vma snapshot
    and will be needed for fixing fill_file_notes.
    
    Reviewed-by: Jann Horn <jannh@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5318cdf4fd834856ce71238b064f35386f9ef528
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Fri Mar 11 16:06:14 2022 +0800

    can: usb_8dev: usb_8dev_start_xmit(): fix double dev_kfree_skb() in error path
    
    commit 3d3925ff6433f98992685a9679613a2cc97f3ce2 upstream.
    
    There is no need to call dev_kfree_skb() when usb_submit_urb() fails
    because can_put_echo_skb() deletes original skb and
    can_free_echo_skb() deletes the cloned skb.
    
    Fixes: 0024d8ad1639 ("can: usb_8dev: Add support for USB2CAN interface from 8 devices")
    Link: https://lore.kernel.org/all/20220311080614.45229-1-hbh25y@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 869016a2938ac44f7b2fb7fc22c89edad99eb9b3
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Thu Mar 17 08:57:35 2022 +0100

    can: m_can: m_can_tx_handler(): fix use after free of skb
    
    commit 2e8e79c416aae1de224c0f1860f2e3350fa171f8 upstream.
    
    can_put_echo_skb() will clone skb then free the skb. Move the
    can_put_echo_skb() for the m_can version 3.0.x directly before the
    start of the xmit in hardware, similar to the 3.1.x branch.
    
    Fixes: 80646733f11c ("can: m_can: update to support CAN FD features")
    Link: https://lore.kernel.org/all/20220317081305.739554-1-mkl@pengutronix.de
    Cc: stable@vger.kernel.org
    Reported-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e90518d10c7dd59d5ebbe25b0f0083a7dbffa42f
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Mar 29 12:56:24 2022 -0400

    KVM: x86/mmu: do compare-and-exchange of gPTE via the user address
    
    commit 2a8859f373b0a86f0ece8ec8312607eacf12485d upstream.
    
    FNAME(cmpxchg_gpte) is an inefficient mess.  It is at least decent if it
    can go through get_user_pages_fast(), but if it cannot then it tries to
    use memremap(); that is not just terribly slow, it is also wrong because
    it assumes that the VM_PFNMAP VMA is contiguous.
    
    The right way to do it would be to do the same thing as
    hva_to_pfn_remapped() does since commit add6a0cd1c5b ("KVM: MMU: try to
    fix up page faults before giving up", 2016-07-05), using follow_pte()
    and fixup_user_fault() to determine the correct address to use for
    memremap().  To do this, one could for example extract hva_to_pfn()
    for use outside virt/kvm/kvm_main.c.  But really there is no reason to
    do that either, because there is already a perfectly valid address to
    do the cmpxchg() on, only it is a userspace address.  That means doing
    user_access_begin()/user_access_end() and writing the code in assembly
    to handle exceptions correctly.  Worse, the guest PTE can be 8-byte
    even on i686 so there is the extra complication of using cmpxchg8b to
    account for.  But at least it is an efficient mess.
    
    (Thanks to Linus for suggesting improvement on the inline assembly).
    
    Reported-by: Qiuhao Li <qiuhao@sysec.org>
    Reported-by: Gaoning Pan <pgn@zju.edu.cn>
    Reported-by: Yongkang Jia <kangel@zju.edu.cn>
    Reported-by: syzbot+6cde2282daa792c49ab8@syzkaller.appspotmail.com
    Debugged-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Tested-by: Maxim Levitsky <mlevitsk@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: bd53cb35a3e9 ("X86/KVM: Handle PFNs outside of kernel reach when touching GPTEs")
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e36c45263a30b5556f80d4e085637fe5693567fe
Author: Martin Varghese <martin.varghese@nokia.com>
Date:   Mon Mar 28 11:11:48 2022 +0530

    openvswitch: Fixed nd target mask field in the flow dump.
    
    commit f19c44452b58a84d95e209b847f5495d91c9983a upstream.
    
    IPv6 nd target mask was not getting populated in flow dump.
    
    In the function __ovs_nla_put_key the icmp code mask field was checked
    instead of icmp code key field to classify the flow as neighbour discovery.
    
    ufid:bdfbe3e5-60c2-43b0-a5ff-dfcac1c37328, recirc_id(0),dp_hash(0/0),
    skb_priority(0/0),in_port(ovs-nm1),skb_mark(0/0),ct_state(0/0),
    ct_zone(0/0),ct_mark(0/0),ct_label(0/0),
    eth(src=00:00:00:00:00:00/00:00:00:00:00:00,
    dst=00:00:00:00:00:00/00:00:00:00:00:00),
    eth_type(0x86dd),
    ipv6(src=::/::,dst=::/::,label=0/0,proto=58,tclass=0/0,hlimit=0/0,frag=no),
    icmpv6(type=135,code=0),
    nd(target=2001::2/::,
    sll=00:00:00:00:00:00/00:00:00:00:00:00,
    tll=00:00:00:00:00:00/00:00:00:00:00:00),
    packets:10, bytes:860, used:0.504s, dp:ovs, actions:ovs-nm2
    
    Fixes: e64457191a25 (openvswitch: Restructure datapath.c and flow.c)
    Signed-off-by: Martin Varghese <martin.varghese@nokia.com>
    Link: https://lore.kernel.org/r/20220328054148.3057-1-martinvarghesenokia@gmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 415edc68b6522cc6b0fbe0a1a696416863c5c900
Author: Guilherme G. Piccoli <gpiccoli@igalia.com>
Date:   Wed Mar 23 16:07:03 2022 -0700

    docs: sysctl/kernel: add missing bit to panic_print
    
    commit a1ff1de00db21ecb956213f046b79741b64c6b65 upstream.
    
    Patch series "Some improvements on panic_print".
    
    This is a mix of a documentation fix with some additions to the
    "panic_print" syscall / parameter.  The goal here is being able to collect
    all CPUs backtraces during a panic event and also to enable "panic_print"
    in a kdump event - details of the reasoning and design choices in the
    patches.
    
    This patch (of 3):
    
    Commit de6da1e8bcf0 ("panic: add an option to replay all the printk
    message in buffer") added a new bit to the sysctl/kernel parameter
    "panic_print", but the documentation was added only in
    kernel-parameters.txt, not in the sysctl guide.
    
    Fix it here by adding bit 5 to sysctl admin-guide documentation.
    
    [rdunlap@infradead.org: fix table format warning]
      Link: https://lkml.kernel.org/r/20220109055635.6999-1-rdunlap@infradead.org
    
    Link: https://lkml.kernel.org/r/20211109202848.610874-1-gpiccoli@igalia.com
    Link: https://lkml.kernel.org/r/20211109202848.610874-2-gpiccoli@igalia.com
    Fixes: de6da1e8bcf0 ("panic: add an option to replay all the printk message in buffer")
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Reviewed-by: Feng Tang <feng.tang@intel.com>
    Cc: Luis Chamberlain <mcgrof@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Iurii Zaikin <yzaikin@google.com>
    Cc: Samuel Iglesias Gonsalvez <siglesias@igalia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 272c74323dcc5b65e6e20f89c9283b3696ed36a7
Author: Anton Ivanov <anton.ivanov@cambridgegreys.com>
Date:   Tue Feb 22 12:44:10 2022 +0000

    um: Fix uml_mconsole stop/go
    
    commit 1a3a6a2a035bb6c3a7ef4c788d8fd69a7b2d6284 upstream.
    
    Moving to an EPOLL based IRQ controller broke uml_mconsole stop/go
    commands. This fixes it and restores stop/go functionality.
    
    Fixes: ff6a17989c08 ("Epoll based IRQ controller")
    Signed-off-by: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0a6a547388eaf2c6ff5ff5ff932db5482ff2721
Author: Kuldeep Singh <singh.kuldeep87k@gmail.com>
Date:   Sat Mar 26 09:53:09 2022 +0530

    ARM: dts: spear13xx: Update SPI dma properties
    
    commit 31d3687d6017c7ce6061695361598d9cda70807a upstream.
    
    Reorder dmas and dma-names property for spi controller node to make it
    compliant with bindings.
    
    Fixes: 6e8887f60f60 ("ARM: SPEAr13xx: Pass generic DW DMAC platform data from DT")
    Signed-off-by: Kuldeep Singh <singh.kuldeep87k@gmail.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Link: https://lore.kernel.org/r/20220326042313.97862-2-singh.kuldeep87k@gmail.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea3912af8b8a954b79933d29e916d0a6e23b67e9
Author: Kuldeep Singh <singh.kuldeep87k@gmail.com>
Date:   Sat Mar 26 09:53:10 2022 +0530

    ARM: dts: spear1340: Update serial node properties
    
    commit 583d6b0062640def86f3265aa1042ecb6672516e upstream.
    
    Reorder dma and dma-names property for serial node to make it compliant
    with bindings.
    
    Fixes: 6e8887f60f60 ("ARM: SPEAr13xx: Pass generic DW DMAC platform data from DT")
    Signed-off-by: Kuldeep Singh <singh.kuldeep87k@gmail.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Link: https://lore.kernel.org/r/20220326042313.97862-3-singh.kuldeep87k@gmail.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74f7971985bd06aea710cc5ed5f01d94ac3fc9fd
Author: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Date:   Wed Jan 12 18:00:29 2022 +0100

    ASoC: topology: Allow TLV control to be either read or write
    
    commit feb00b736af64875560f371fe7f58b0b7f239046 upstream.
    
    There is no reason to force readwrite access on TLV controls. It can be
    either read, write or both. This is further evidenced in code where it
    performs following checks:
                    if ((k->access & SNDRV_CTL_ELEM_ACCESS_TLV_READ) && !sbe->get)
                            return -EINVAL;
                    if ((k->access & SNDRV_CTL_ELEM_ACCESS_TLV_WRITE) && !sbe->put)
                            return -EINVAL;
    
    Fixes: 1a3232d2f61d ("ASoC: topology: Add support for TLV bytes controls")
    Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20220112170030.569712-3-amadeuszx.slawinski@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ca47556d92071b9194a53625779f33d2da226a6
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:42 2021 +0800

    ubi: fastmap: Return error code if memory allocation fails in add_aeb()
    
    commit c3c07fc25f37c157fde041b3a0c3dfcb1590cbce upstream.
    
    Abort fastmap scanning and return error code if memory allocation fails
    in add_aeb(). Otherwise ubi will get wrong peb statistics information
    after scanning.
    
    Fixes: dbb7d2a88d2a7b ("UBI: Add fastmap core")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7704f243cbbd1393cc42f40abebf6810bfc70f1b
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Dec 16 12:16:33 2021 +0100

    dt-bindings: spi: mxic: The interrupt property is not mandatory
    
    commit 90c204d3195a795f77f5bce767e311dd1c59ca17 upstream.
    
    The interrupt property is not mandatory at all, this property should not
    be part of the required properties list, so move it into the optional
    properties list.
    
    Fixes: 326e5c8d4a87 ("dt-binding: spi: Document Macronix controller bindings")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20211216111654.238086-8-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 648ab1dcc119deeaa34292e26b31180e12f6ca05
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Dec 16 12:16:28 2021 +0100

    dt-bindings: mtd: nand-controller: Fix a comment in the examples
    
    commit 0e7f1b557974ce297e5e4c9d4245720fbb489886 upstream.
    
    The controller properties should be in the controller 'parent' node,
    while properties in the children nodes are specific to the NAND
    *chip*. This error was already present during the yaml conversion.
    
    Fixes: 2d472aba15ff ("mtd: nand: document the NAND controller/NAND chip DT representation")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20211216111654.238086-3-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71917e45e1aa1ae5ef641677f98637975e8ae47b
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Dec 16 12:16:27 2021 +0100

    dt-bindings: mtd: nand-controller: Fix the reg property description
    
    commit 93f2ec9e401276fb4ea9903194a5bfcf175f9a2c upstream.
    
    The reg property of a NAND device always references the chip-selects.
    The ready/busy lines are described in the nand-rb property. I believe
    this was a harmless copy/paste error during the conversion to yaml.
    
    Fixes: 212e49693592 ("dt-bindings: mtd: Add YAML schemas for the generic NAND options")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20211216111654.238086-2-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73f2f37417b035d9607888be4fd23a9e709a85c6
Author: Hengqi Chen <hengqi.chen@gmail.com>
Date:   Thu Mar 10 23:53:35 2022 +0800

    bpf: Fix comment for helper bpf_current_task_under_cgroup()
    
    commit 58617014405ad5c9f94f464444f4972dabb71ca7 upstream.
    
    Fix the descriptions of the return values of helper bpf_current_task_under_cgroup().
    
    Fixes: c6b5fb8690fa ("bpf: add documentation for eBPF helpers (42-50)")
    Signed-off-by: Hengqi Chen <hengqi.chen@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20220310155335.1278783-1-hengqi.chen@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90805175a206f784b6a77f16f07b07f6803e286b
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Mon Mar 14 11:20:41 2022 -0700

    bpf: Adjust BPF stack helper functions to accommodate skip > 0
    
    commit ee2a098851bfbe8bcdd964c0121f4246f00ff41e upstream.
    
    Let's say that the caller has storage for num_elem stack frames.  Then,
    the BPF stack helper functions walk the stack for only num_elem frames.
    This means that if skip > 0, one keeps only 'num_elem - skip' frames.
    
    This is because it sets init_nr in the perf_callchain_entry to the end
    of the buffer to save num_elem entries only.  I believe it was because
    the perf callchain code unwound the stack frames until it reached the
    global max size (sysctl_perf_event_max_stack).
    
    However it now has perf_callchain_entry_ctx.max_stack to limit the
    iteration locally.  This simplifies the code to handle init_nr in the
    BPF callstack entries and removes the confusion with the perf_event's
    __PERF_SAMPLE_CALLCHAIN_EARLY which sets init_nr to 0.
    
    Also change the comment on bpf_get_stack() in the header file to be
    more explicit what the return value means.
    
    Fixes: c195651e565a ("bpf: add bpf_get_stack helper")
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/30a7b5d5-6726-1cc2-eaee-8da2828a9a9c@oracle.com
    Link: https://lore.kernel.org/bpf/20220314182042.71025-1-namhyung@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Based-on-patch-by: Eugene Loh <eugene.loh@oracle.com>

commit 86489492e87680c9c1c13a1a73ee278c13ecbab6
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 22 14:47:52 2022 -0700

    mm/usercopy: return 1 from hardened_usercopy __setup() handler
    
    commit 05fe3c103f7e6b8b4fca8a7001dfc9ed4628085b upstream.
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; it just pollutes init's
    environment).  This prevents:
    
      Unknown kernel command line parameters \
      "BOOT_IMAGE=/boot/bzImage-517rc5 hardened_usercopy=off", will be \
      passed to user space.
    
      Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         hardened_usercopy=off
    or
         hardened_usercopy=on
    but when "hardened_usercopy=foo" is used, there is no Unknown kernel
    command line parameter.
    
    Return 1 to indicate that the boot option has been handled.
    Print a warning if strtobool() returns an error on the option string,
    but do not mark this as in unknown command line option and do not cause
    init's environment to be polluted with this string.
    
    Link: https://lkml.kernel.org/r/20220222034249.14795-1-rdunlap@infradead.org
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: b5cb15d9372ab ("usercopy: Allow boot cmdline disabling of hardening")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Acked-by: Chris von Recklinghausen <crecklin@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81a04b9a32e40876dd41909542f1b23560cb99d3
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 22 14:40:31 2022 -0700

    mm/memcontrol: return 1 from cgroup.memory __setup() handler
    
    commit 460a79e18842caca6fa0c415de4a3ac1e671ac50 upstream.
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; it just pollutes init's
    environment).
    
    The only reason that this particular __setup handler does not pollute
    init's environment is that the setup string contains a '.', as in
    "cgroup.memory".  This causes init/main.c::unknown_boottoption() to
    consider it to be an "Unused module parameter" and ignore it.  (This is
    for parsing of loadable module parameters any time after kernel init.)
    Otherwise the string "cgroup.memory=whatever" would be added to init's
    environment strings.
    
    Instead of relying on this '.' quirk, just return 1 to indicate that the
    boot option has been handled.
    
    Note that there is no warning message if someone enters:
            cgroup.memory=anything_invalid
    
    Link: https://lkml.kernel.org/r/20220222005811.10672-1-rdunlap@infradead.org
    Fixes: f7e1cb6ec51b0 ("mm: memcontrol: account socket memory in unified hierarchy memory controller")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Roman Gushchin <roman.gushchin@linux.dev>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f321621f5c84483a5b32e0f91d8624f2f95b4f24
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Mar 12 07:36:09 2022 +0100

    ARM: 9187/1: JIVE: fix return value of __setup handler
    
    commit 8b2360c7157b462c4870d447d1e65d30ef31f9aa upstream.
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) argument or environment
    strings. Also, error return codes don't mean anything to
    obsolete_checksetup() -- only non-zero (usually 1) or zero.
    So return 1 from jive_mtdset().
    
    Fixes: 9db829f485c5 ("[ARM] JIVE: Initial machine support for Logitech Jive")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Ben Dooks <ben-linux@fluff.org>
    Cc: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: Alim Akhtar <alim.akhtar@samsung.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-samsung-soc@vger.kernel.org
    Cc: patches@armlinux.org.uk
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d57feed3b11404ff7fca19b3576aff30459d68bf
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 22 14:42:27 2022 -0700

    mm/mmap: return 1 from stack_guard_gap __setup() handler
    
    commit e6d094936988910ce6e8197570f2753898830081 upstream.
    
    __setup() handlers should return 1 if the command line option is handled
    and 0 if not (or maybe never return 0; it just pollutes init's
    environment).  This prevents:
    
      Unknown kernel command line parameters \
      "BOOT_IMAGE=/boot/bzImage-517rc5 stack_guard_gap=100", will be \
      passed to user space.
    
      Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         stack_guard_gap=100
    
    Return 1 to indicate that the boot option has been handled.
    
    Note that there is no warning message if someone enters:
            stack_guard_gap=anything_invalid
    and 'val' and stack_guard_gap are both set to 0 due to the use of
    simple_strtoul(). This could be improved by using kstrtoxxx() and
    checking for an error.
    
    It appears that having stack_guard_gap == 0 is valid (if unexpected) since
    using "stack_guard_gap=0" on the kernel command line does that.
    
    Link: https://lkml.kernel.org/r/20220222005817.11087-1-rdunlap@infradead.org
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 1be7107fbe18e ("mm: larger stack guard gap, between vmas")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Cc: Hugh Dickins <hughd@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73f7cbb15191298ec58c0bee3202690d54aa72de
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Aug 8 19:56:17 2021 +0200

    batman-adv: Check ptr for NULL before reducing its refcnt
    
    commit 6340dcbd619450c1bb55eb999e554e4f0e6dab0a upstream.
    
    The commit b37a46683739 ("netdevice: add the case if dev is NULL") changed
    the way how the NULL check for net_devices have to be handled when trying
    to reduce its reference counter. Before this commit, it was the
    responsibility of the caller to check whether the object is NULL or not.
    But it was changed to behave more like kfree. Now the callee has to handle
    the NULL-case.
    
    The batman-adv code was scanned via cocinelle for similar places. These
    were changed to use the paradigm
    
      @@
      identifier E, T, R, C;
      identifier put;
      @@
       void put(struct T *E)
       {
      +     if (!E)
      +             return;
            kref_put(&E->C, R);
       }
    
    Functions which were used in other sources files were moved to the header
    to allow the compiler to inline the NULL check and the kref_put call.
    
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6da750bfaf40816139c073227df30ad0a11158e
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Mar 10 11:00:41 2022 +0800

    ASoC: soc-compress: Change the check for codec_dai
    
    commit ccb4214f7f2a8b75acf493f31128e464ee1a3536 upstream.
    
    It should be better to reverse the check on codec_dai
    and returned early in order to be easier to understand.
    
    Fixes: de2c6f98817f ("ASoC: soc-compress: prevent the potentially use of null pointer")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20220310030041.1556323-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3f786b7cf81284e5c13dabaf94bab2d0602a8af
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Tue Feb 15 11:17:24 2022 +0300

    staging: mt7621-dts: fix pinctrl-0 items to be size-1 items on ethernet
    
    commit 25e4f5220efead592c83200241e098e757d37e1f upstream.
    
    Fix pinctrl-0 items under the ethernet node to be size-1 items.
    Current notation would be used on specifications with non-zero cells.
    
    Fixes: 0a93c0d75809 ("staging: mt7621-dts: fix pinctrl properties for ethernet")
    Reported-by: Sander Vanheule <sander@svanheule.net>
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Link: https://lore.kernel.org/r/20220215081725.3463-1-arinc.unal@arinc9.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12e380bb6f164dadc9e01b40b0be08ec31692a7f
Author: Lv Ruyi <lv.ruyi@zte.com.cn>
Date:   Tue Mar 29 10:40:04 2022 +0000

    proc: bootconfig: Add null pointer check
    
    commit bed5b60bf67ccd8957b8c0558fead30c4a3f5d3f upstream.
    
    kzalloc is a memory allocation function which can return NULL when some
    internal memory errors happen. It is safer to add null pointer check.
    
    Link: https://lkml.kernel.org/r/20220329104004.2376879-1-lv.ruyi@zte.com.cn
    
    Cc: stable@vger.kernel.org
    Fixes: c1a3c36017d4 ("proc: bootconfig: Add /proc/bootconfig to show boot config list")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Lv Ruyi <lv.ruyi@zte.com.cn>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90ec1b1538d4d5e9f0267ca16d30606b4701da50
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Mon Mar 28 13:36:11 2022 +0200

    can: isotp: restore accidentally removed MSG_PEEK feature
    
    [ Upstream commit e382fea8ae54f5bb62869c6b69b33993d43adeca ]
    
    In commit 42bf50a1795a ("can: isotp: support MSG_TRUNC flag when
    reading from socket") a new check for recvmsg flags has been
    introduced that only checked for the flags that are handled in
    isotp_recvmsg() itself.
    
    This accidentally removed the MSG_PEEK feature flag which is processed
    later in the call chain in __skb_try_recv_from_queue().
    
    Add MSG_PEEK to the set of valid flags to restore the feature.
    
    Fixes: 42bf50a1795a ("can: isotp: support MSG_TRUNC flag when reading from socket")
    Link: https://github.com/linux-can/can-utils/issues/347#issuecomment-1079554254
    Link: https://lore.kernel.org/all/20220328113611.3691-1-socketcan@hartkopp.net
    Reported-by: Derek Will <derekrobertwill@gmail.com>
    Suggested-by: Derek Will <derekrobertwill@gmail.com>
    Tested-by: Derek Will <derekrobertwill@gmail.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16960ac92b84067ea1d0a2e6b8d7a5ba6fe32672
Author: Prashant Malani <pmalani@chromium.org>
Date:   Wed Jan 26 19:02:20 2022 +0000

    platform/chrome: cros_ec_typec: Check for EC device
    
    commit ffebd90532728086007038986900426544e3df4e upstream.
    
    The Type C ACPI device on older Chromebooks is not generated correctly
    (since their EC firmware doesn't support the new commands required). In
    such cases, the crafted ACPI device doesn't have an EC parent, and it is
    therefore not useful (it shouldn't be generated in the first place since
    the EC firmware doesn't support any of the Type C commands).
    
    To handle devices which use these older firmware revisions, check for
    the parent EC device handle, and fail the probe if it's not found.
    
    Fixes: fdc6b21e2444 ("platform/chrome: Add Type C connector class driver")
    Reported-by: Alyssa Ross <hi@alyssa.is>
    Reviewed-by: Tzung-Bi Shih <tzungbi@google.com>
    Signed-off-by: Prashant Malani <pmalani@chromium.org>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Alyssa Ross <hi@alyssa.is>
    Tested-by: Alyssa Ross <hi@alyssa.is>
    Link: https://lore.kernel.org/r/20220126190219.3095419-1-pmalani@chromium.org
    Signed-off-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5b681822cac1f8093759b02e16c06b2c64b6788
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Mar 22 17:02:05 2022 +0100

    ACPI: CPPC: Avoid out of bounds access when parsing _CPC data
    
    commit 40d8abf364bcab23bc715a9221a3c8623956257b upstream.
    
    If the NumEntries field in the _CPC return package is less than 2, do
    not attempt to access the "Revision" element of that package, because
    it may not be present then.
    
    Fixes: 337aadff8e45 ("ACPI: Introduce CPU performance controls using CPPC")
    BugLink: https://lore.kernel.org/lkml/20220322143534.GC32582@xsang-OptiPlex-9020/
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 785a53373c22e3b75afcaffb99cbc9484dae9276
Author: Fangrui Song <maskray@google.com>
Date:   Mon Mar 21 18:26:17 2022 -0700

    riscv module: remove (NOLOAD)
    
    commit 60210a3d86dc57ce4a76a366e7841dda746a33f7 upstream.
    
    On ELF, (NOLOAD) sets the section type to SHT_NOBITS[1]. It is conceptually
    inappropriate for .plt, .got, and .got.plt sections which are always
    SHT_PROGBITS.
    
    In GNU ld, if PLT entries are needed, .plt will be SHT_PROGBITS anyway
    and (NOLOAD) will be essentially ignored. In ld.lld, since
    https://reviews.llvm.org/D118840 ("[ELF] Support (TYPE=<value>) to
    customize the output section type"), ld.lld will report a `section type
    mismatch` error (later changed to a warning). Just remove (NOLOAD) to
    fix the warning.
    
    [1] https://lld.llvm.org/ELF/linker_script.html As of today, "The
    section should be marked as not loadable" on
    https://sourceware.org/binutils/docs/ld/Output-Section-Type.html is
    outdated for ELF.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1597
    Fixes: ab1ef68e5401 ("RISC-V: Add sections of PLT and GOT for kernel module")
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b27de7011cb3ba14b047be2cee0ed8278368665b
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Fri Mar 25 16:36:31 2022 +0000

    io_uring: fix memory leak of uid in files registration
    
    commit c86d18f4aa93e0e66cda0e55827cd03eea6bc5f8 upstream.
    
    When there are no files for __io_sqe_files_scm() to process in the
    range, it'll free everything and return. However, it forgets to put uid.
    
    Fixes: 08a451739a9b5 ("io_uring: allow sparse fixed file sets")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/accee442376f33ce8aaebb099d04967533efde92.1648226048.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20499ed3c0411768912ac7f24a29ad3981b0d80b
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Nov 30 11:16:41 2021 +0100

    ARM: iop32x: offset IRQ numbers by 1
    
    commit 9d67412f24cc3a2c05f35f7c856addb07a2960ce upstream.
    
    iop32x is one of the last platforms to use IRQ 0, and this has apparently
    stopped working in a 2014 cleanup without anyone noticing. This interrupt
    is used for the DMA engine, so most likely this has not actually worked
    in the past 7 years, but it's also not essential for using this board.
    
    I'm splitting out this change from my GENERIC_IRQ_MULTI_HANDLER
    conversion so it can be backported if anyone cares.
    
    Fixes: a71b092a9c68 ("ARM: Convert handle_IRQ to use __handle_domain_irq")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    [ardb: take +1 offset into account in mask/unmask and init as well]
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Tested-by: Marc Zyngier <maz@kernel.org>
    Tested-by: Vladimir Murzin <vladimir.murzin@arm.com> # ARMv7M
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 432b057f8e847ae5a2306515606f8d2defaca178
Author: Baokun Li <libaokun1@huawei.com>
Date:   Fri Nov 5 17:30:22 2021 +0800

    ubi: Fix race condition between ctrl_cdev_ioctl and ubi_cdev_ioctl
    
    commit 3cbf0e392f173ba0ce425968c8374a6aa3e90f2e upstream.
    
    Hulk Robot reported a KASAN report about use-after-free:
     ==================================================================
     BUG: KASAN: use-after-free in __list_del_entry_valid+0x13d/0x160
     Read of size 8 at addr ffff888035e37d98 by task ubiattach/1385
     [...]
     Call Trace:
      klist_dec_and_del+0xa7/0x4a0
      klist_put+0xc7/0x1a0
      device_del+0x4d4/0xed0
      cdev_device_del+0x1a/0x80
      ubi_attach_mtd_dev+0x2951/0x34b0 [ubi]
      ctrl_cdev_ioctl+0x286/0x2f0 [ubi]
    
     Allocated by task 1414:
      device_add+0x60a/0x18b0
      cdev_device_add+0x103/0x170
      ubi_create_volume+0x1118/0x1a10 [ubi]
      ubi_cdev_ioctl+0xb7f/0x1ba0 [ubi]
    
     Freed by task 1385:
      cdev_device_del+0x1a/0x80
      ubi_remove_volume+0x438/0x6c0 [ubi]
      ubi_cdev_ioctl+0xbf4/0x1ba0 [ubi]
     [...]
     ==================================================================
    
    The lock held by ctrl_cdev_ioctl is ubi_devices_mutex, but the lock held
    by ubi_cdev_ioctl is ubi->device_mutex. Therefore, the two locks can be
    concurrent.
    
    ctrl_cdev_ioctl contains two operations: ubi_attach and ubi_detach.
    ubi_detach is bug-free because it uses reference counting to prevent
    concurrency. However, uif_init and uif_close in ubi_attach may race with
    ubi_cdev_ioctl.
    
    uif_init will race with ubi_cdev_ioctl as in the following stack.
               cpu1                   cpu2                  cpu3
    _______________________|________________________|______________________
    ctrl_cdev_ioctl
     ubi_attach_mtd_dev
      uif_init
                               ubi_cdev_ioctl
                                ubi_create_volume
                                 cdev_device_add
       ubi_add_volume
       // sysfs exist
       kill_volumes
                                                        ubi_cdev_ioctl
                                                         ubi_remove_volume
                                                          cdev_device_del
                                                           // first free
        ubi_free_volume
         cdev_del
         // double free
       cdev_device_del
    
    And uif_close will race with ubi_cdev_ioctl as in the following stack.
               cpu1                   cpu2                  cpu3
    _______________________|________________________|______________________
    ctrl_cdev_ioctl
     ubi_attach_mtd_dev
      uif_init
                               ubi_cdev_ioctl
                                ubi_create_volume
                                 cdev_device_add
      ubi_debugfs_init_dev
      //error goto out_uif;
      uif_close
       kill_volumes
                                                        ubi_cdev_ioctl
                                                         ubi_remove_volume
                                                          cdev_device_del
                                                           // first free
        ubi_free_volume
        // double free
    
    The cause of this problem is that commit 714fb87e8bc0 make device
    "available" before it becomes accessible via sysfs. Therefore, we
    roll back the modification. We will fix the race condition between
    ubi device creation and udev by removing ubi_get_device in
    vol_attribute_show and dev_attribute_show.This avoids accessing
    uninitialized ubi_devices[ubi_num].
    
    ubi_get_device is used to prevent devices from being deleted during
    sysfs execution. However, now kernfs ensures that devices will not
    be deleted before all reference counting are released.
    The key process is shown in the following stack.
    
    device_del
      device_remove_attrs
        device_remove_groups
          sysfs_remove_groups
            sysfs_remove_group
              remove_files
                kernfs_remove_by_name
                  kernfs_remove_by_name_ns
                    __kernfs_remove
                      kernfs_drain
    
    Fixes: 714fb87e8bc0 ("ubi: Fix race condition between ubi device creation and udev")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f28a857a61ebb7960fd6d54c4e126cccb7079620
Author: Jiaxin Yu <jiaxin.yu@mediatek.com>
Date:   Sat Mar 19 20:03:25 2022 +0800

    ASoC: mediatek: mt6358: add missing EXPORT_SYMBOLs
    
    commit a7663c89f4193dbf717572e46e5a3251940dbdc8 upstream.
    
    Fixes the following build errors when mt6358 is configured as module:
    
    >> ERROR: modpost: "mt6358_set_mtkaif_protocol"
    >> [sound/soc/mediatek/mt8186/mt8186-mt6366-rt1019-rt5682s.ko] undefined!
    >> ERROR: modpost: "mt6358_set_mtkaif_protocol"
    >> [sound/soc/mediatek/mt8186/mt8186-mt6366-da7219-max98357.ko] undefined!
    
    Fixes: 6a8d4198ca80 ("ASoC: mediatek: mt6358: add codec driver")
    Signed-off-by: Jiaxin Yu <jiaxin.yu@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220319120325.11882-1-jiaxin.yu@mediatek.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecfc3f8a635054e05dd0a73ca3ad7d46330bbcec
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Sat Feb 5 16:53:30 2022 +0100

    pinctrl: nuvoton: npcm7xx: Use %zu printk format for ARRAY_SIZE()
    
    commit 9d0f18bca3b557ae5d2128661ac06d33b3f45c0a upstream.
    
    When compile-testing on 64-bit architectures, GCC complains about the
    mismatch of types between the %d format specifier and value returned by
    ARRAY_LENGTH(). Use %zu, which is correct everywhere.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 3b588e43ee5c7 ("pinctrl: nuvoton: add NPCM7xx pinctrl and GPIO driver")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220205155332.1308899-2-j.neuschaefer@gmx.net
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 503868a7c00632be41d7a93185229d9be50b5497
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Sat Feb 5 16:53:31 2022 +0100

    pinctrl: nuvoton: npcm7xx: Rename DS() macro to DSTR()
    
    commit 603501c16431c56f74eaef1ee1390f60a30c2187 upstream.
    
    The name "DS" is defined in arch/x86/um/shared/sysdep/ptrace_64.h,
    which results in a compiler warning when build-testing on ARCH=um.
    Rename this driver's "DS" macro to DSTR so avoid this collision.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 3b588e43ee5c7 ("pinctrl: nuvoton: add NPCM7xx pinctrl and GPIO driver")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220205155332.1308899-3-j.neuschaefer@gmx.net
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9afc5146bd37e7d4bb3f425ec0aa97dfcbdcb71
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 5 09:21:13 2022 +0000

    watchdog: rti-wdt: Add missing pm_runtime_disable() in probe function
    
    commit d055ef3a2c6919cff504ae3b710c96318d545fd2 upstream.
    
    If the probe fails, we should use pm_runtime_disable() to balance
    pm_runtime_enable().
    
    Fixes: 2d63908bdbfb ("watchdog: Add K3 RTI watchdog support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20220105092114.23932-1-linmq006@gmail.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 402b53dc7c46eb602f444026c863a537f2791bcd
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:46 2022 +0800

    pinctrl: pinconf-generic: Print arguments for bias-pull-*
    
    commit 188e5834b930acd03ad3cf7c5e7aa24db9665a29 upstream.
    
    The bias-pull-* properties, or PIN_CONFIG_BIAS_PULL_* pin config
    parameters, accept optional arguments in ohms denoting the strength of
    the pin bias.
    
    Print these values out in debugfs as well.
    
    Fixes: eec450713e5c ("pinctrl: pinconf-generic: Add flag to print arguments")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Tested-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-2-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7169f60110915c8b53bffd43741fa020a75eb87a
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Mar 28 18:07:04 2022 +0100

    watch_queue: Free the page array when watch_queue is dismantled
    
    commit b490207017ba237d97b735b2aa66dc241ccd18f5 upstream.
    
    Commit 7ea1a0124b6d ("watch_queue: Free the alloc bitmap when the
    watch_queue is torn down") took care of the bitmap, but not the page
    array.
    
      BUG: memory leak
      unreferenced object 0xffff88810d9bc140 (size 32):
      comm "syz-executor335", pid 3603, jiffies 4294946994 (age 12.840s)
      hex dump (first 32 bytes):
        40 a7 40 04 00 ea ff ff 00 00 00 00 00 00 00 00  @.@.............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
         kmalloc_array include/linux/slab.h:621 [inline]
         kcalloc include/linux/slab.h:652 [inline]
         watch_queue_set_size+0x12f/0x2e0 kernel/watch_queue.c:251
         pipe_ioctl+0x82/0x140 fs/pipe.c:632
         vfs_ioctl fs/ioctl.c:51 [inline]
         __do_sys_ioctl fs/ioctl.c:874 [inline]
         __se_sys_ioctl fs/ioctl.c:860 [inline]
         __x64_sys_ioctl+0xfc/0x140 fs/ioctl.c:860
         do_syscall_x64 arch/x86/entry/common.c:50 [inline]
    
    Reported-by: syzbot+25ea042ae28f3888727a@syzkaller.appspotmail.com
    Fixes: c73be61cede5 ("pipe: Add general notification queue support")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Cc: Jann Horn <jannh@google.com>
    Link: https://lore.kernel.org/r/20220322004654.618274-1-eric.dumazet@gmail.com/
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e64dc94990fddc326cd59a5f5bb19af1fbe6f7d3
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Thu Mar 17 10:55:13 2022 +1200

    crypto: arm/aes-neonbs-cbc - Select generic cbc and aes
    
    commit c8bd296cca3434b13b28b074eaeb78a23284de77 upstream.
    
    The algorithm __cbc-aes-neonbs requires a fallback so we need
    to select the config options for them or otherwise it will fail
    to register on boot-up.
    
    Fixes: 00b99ad2bac2 ("crypto: arm/aes-neonbs - Use generic cbc...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a16f5ae8ade1644250a934198431f3018663e57b
Author: Robin Gong <yibin.gong@nxp.com>
Date:   Mon Feb 7 09:52:06 2022 +0800

    mailbox: imx: fix wakeup failure from freeze mode
    
    commit 892cb524ae8a27bf5e42f711318371acd9a9f74a upstream.
    
    Since IRQF_NO_SUSPEND used for imx mailbox driver, that means this irq
    can't be used for wakeup source so that can't wakeup from freeze mode.
    Add pm_system_wakeup() to wakeup from freeze mode.
    
    Fixes: b7b2796b9b31e("mailbox: imx: ONLY IPC MU needs IRQF_NO_SUSPEND flag")
    Reviewed-by: Jacky Bai <ping.bai@nxp.com>
    Reviewed-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Robin Gong <yibin.gong@nxp.com>
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 051360e51341cd17738d82c15a8226010c7cb7f6
Author: David Howells <dhowells@redhat.com>
Date:   Wed Mar 30 15:39:16 2022 +0100

    rxrpc: Fix call timer start racing with call destruction
    
    commit 4a7f62f91933c8ae5308f9127fd8ea48188b6bc3 upstream.
    
    The rxrpc_call struct has a timer used to handle various timed events
    relating to a call.  This timer can get started from the packet input
    routines that are run in softirq mode with just the RCU read lock held.
    Unfortunately, because only the RCU read lock is held - and neither ref or
    other lock is taken - the call can start getting destroyed at the same time
    a packet comes in addressed to that call.  This causes the timer - which
    was already stopped - to get restarted.  Later, the timer dispatch code may
    then oops if the timer got deallocated first.
    
    Fix this by trying to take a ref on the rxrpc_call struct and, if
    successful, passing that ref along to the timer.  If the timer was already
    running, the ref is discarded.
    
    The timer completion routine can then pass the ref along to the call's work
    item when it queues it.  If the timer or work item where already
    queued/running, the extra ref is discarded.
    
    Fixes: a158bdd3247b ("rxrpc: Fix call timeouts")
    Reported-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Marc Dionne <marc.dionne@auristor.com>
    Tested-by: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Link: http://lists.infradead.org/pipermail/linux-afs/2022-March/005073.html
    Link: https://lore.kernel.org/r/164865115696.2943015.11097991776647323586.stgit@warthog.procyon.org.uk
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a94d98e06ebabeadcd346b5712bd4c22a74ce728
Author: Guangbin Huang <huangguangbin2@huawei.com>
Date:   Wed Mar 30 21:45:06 2022 +0800

    net: hns3: fix software vlan talbe of vlan 0 inconsistent with hardware
    
    commit 7ed258f12ec5ce855f15cdfb5710361dc82fe899 upstream.
    
    When user delete vlan 0, as driver will not delete vlan 0 for hardware in
    function hclge_set_vlan_filter_hw(), so vlan 0 in software vlan talbe should
    not be deleted.
    
    Fixes: fe4144d47eef ("net: hns3: sync VLAN filter entries when kill VLAN ID failed")
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c73af4bc8a9183dbdaba631df9cf42ea06e00f61
Author: Andrew Price <anprice@redhat.com>
Date:   Tue Mar 22 19:05:51 2022 +0000

    gfs2: Make sure FITRIM minlen is rounded up to fs block size
    
    commit 27ca8273fda398638ca994a207323a85b6d81190 upstream.
    
    Per fstrim(8) we must round up the minlen argument to the fs block size.
    The current calculation doesn't take into account devices that have a
    discard granularity and requested minlen less than 1 fs block, so the
    value can get shifted away to zero in the translation to fs blocks.
    
    The zero minlen passed to gfs2_rgrp_send_discards() then allows
    sb_issue_discard() to be called with nr_sects == 0 which returns -EINVAL
    and results in gfs2_rgrp_send_discards() returning -EIO.
    
    Make sure minlen is never < 1 fs block by taking the max of the
    requested minlen and the fs block size before comparing to the device's
    discard granularity and shifting to fs blocks.
    
    Fixes: 076f0faa764ab ("GFS2: Fix FITRIM argument handling")
    Signed-off-by: Andrew Price <anprice@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33c204266c12512f73ca3b6e1ec3c050e0beaf81
Author: Tom Rix <trix@redhat.com>
Date:   Sat Mar 26 12:42:36 2022 -0700

    rtc: check if __rtc_read_time was successful
    
    commit 915593a7a663b2ad08b895a5f3ba8b19d89d4ebf upstream.
    
    Clang static analysis reports this issue
    interface.c:810:8: warning: Passed-by-value struct
      argument contains uninitialized data
      now = rtc_tm_to_ktime(tm);
          ^~~~~~~~~~~~~~~~~~~
    
    tm is set by a successful call to __rtc_read_time()
    but its return status is not checked.  Check if
    it was successful before setting the enabled flag.
    Move the decl of err to function scope.
    
    Fixes: 2b2f5ff00f63 ("rtc: interface: ignore expired timers when enqueuing new timers")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20220326194236.2916310-1-trix@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 381636f33fe4af41fec076c5d9346a7369bcb40e
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Thu Mar 31 08:27:09 2022 -0400

    XArray: Update the LRU list in xas_split()
    
    commit 3ed4bb77156da0bc732847c8c9df92454c1fbeea upstream.
    
    When splitting a value entry, we may need to add the new nodes to the LRU
    list and remove the parent node from the LRU list.  The WARN_ON checks
    in shadow_lru_isolate() catch this oversight.  This bug was latent
    until we stopped splitting folios in shrink_page_list() with commit
    820c4e2e6f51 ("mm/vmscan: Free non-shmem folios without splitting them").
    That allows the creation of large shadow entries, and subsequently when
    trying to page in a small page, we will split the large shadow entry
    in __filemap_add_folio().
    
    Fixes: 8fc75643c5e1 ("XArray: add xas_split")
    Reported-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b9fabe8f6e80b884e830d3cf715be81534e8845
Author: Tom Rix <trix@redhat.com>
Date:   Sat Mar 19 08:31:28 2022 -0700

    can: mcp251xfd: mcp251xfd_register_get_dev_id(): fix return of error value
    
    commit fa7b514d2b2894e052b8e94c7a29feb98e90093f upstream.
    
    Clang static analysis reports this issue:
    
    | mcp251xfd-core.c:1813:7: warning: The left operand
    |   of '&' is a garbage value
    |   FIELD_GET(MCP251XFD_REG_DEVID_ID_MASK, dev_id),
    |   ^                                      ~~~~~~
    
    dev_id is set in a successful call to mcp251xfd_register_get_dev_id().
    Though the status of calls made by mcp251xfd_register_get_dev_id() are
    checked and handled, their status' are not returned. So return err.
    
    Fixes: 55e5b97f003e ("can: mcp25xxfd: add driver for Microchip MCP25xxFD SPI CAN")
    Link: https://lore.kernel.org/all/20220319153128.2164120-1-trix@redhat.com
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef0acc514123140157b19a9ff2e2de5d91d612bc
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Mar 13 13:09:03 2022 +0300

    can: mcba_usb: properly check endpoint type
    
    commit 136bed0bfd3bc9c95c88aafff2d22ecb3a919f23 upstream.
    
    Syzbot reported warning in usb_submit_urb() which is caused by wrong
    endpoint type. We should check that in endpoint is actually present to
    prevent this warning.
    
    Found pipes are now saved to struct mcba_priv and code uses them
    directly instead of making pipes in place.
    
    Fail log:
    
    | usb 5-1: BOGUS urb xfer, pipe 3 != type 1
    | WARNING: CPU: 1 PID: 49 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502
    | Modules linked in:
    | CPU: 1 PID: 49 Comm: kworker/1:2 Not tainted 5.17.0-rc6-syzkaller-00184-g38f80f42147f #0
    | Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014
    | Workqueue: usb_hub_wq hub_event
    | RIP: 0010:usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502
    | ...
    | Call Trace:
    |  <TASK>
    |  mcba_usb_start drivers/net/can/usb/mcba_usb.c:662 [inline]
    |  mcba_usb_probe+0x8a3/0xc50 drivers/net/can/usb/mcba_usb.c:858
    |  usb_probe_interface+0x315/0x7f0 drivers/usb/core/driver.c:396
    |  call_driver_probe drivers/base/dd.c:517 [inline]
    
    Fixes: 51f3baad7de9 ("can: mcba_usb: Add support for Microchip CAN BUS Analyzer")
    Link: https://lore.kernel.org/all/20220313100903.10868-1-paskripkin@gmail.com
    Reported-and-tested-by: syzbot+3bc1dce0cc0052d60fde@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reviewed-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0801a51d79389282c1271e623613b2e1886e071e
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Fri Mar 11 16:02:08 2022 +0800

    can: mcba_usb: mcba_usb_start_xmit(): fix double dev_kfree_skb in error path
    
    commit 04c9b00ba83594a29813d6b1fb8fdc93a3915174 upstream.
    
    There is no need to call dev_kfree_skb() when usb_submit_urb() fails
    because can_put_echo_skb() deletes original skb and
    can_free_echo_skb() deletes the cloned skb.
    
    Fixes: 51f3baad7de9 ("can: mcba_usb: Add support for Microchip CAN BUS Analyzer")
    Link: https://lore.kernel.org/all/20220311080208.45047-1-hbh25y@gmail.com
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ac49c8fd49fdf53d3cd8b77eb8ffda08d7fbe22
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Mon Mar 28 19:25:11 2022 -0400

    XArray: Fix xas_create_range() when multi-order entry present
    
    commit 3e3c658055c002900982513e289398a1aad4a488 upstream.
    
    If there is already an entry present that is of order >= XA_CHUNK_SHIFT
    when we call xas_create_range(), xas_create_range() will misinterpret
    that entry as a node and dereference xa_node->parent, generally leading
    to a crash that looks something like this:
    
    general protection fault, probably for non-canonical address 0xdffffc0000000001:
    0000 [#1] PREEMPT SMP KASAN
    KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
    CPU: 0 PID: 32 Comm: khugepaged Not tainted 5.17.0-rc8-syzkaller-00003-g56e337f2cf13 #0
    RIP: 0010:xa_parent_locked include/linux/xarray.h:1207 [inline]
    RIP: 0010:xas_create_range+0x2d9/0x6e0 lib/xarray.c:725
    
    It's deterministically reproducable once you know what the problem is,
    but producing it in a live kernel requires khugepaged to hit a race.
    While the problem has been present since xas_create_range() was
    introduced, I'm not aware of a way to hit it before the page cache was
    converted to use multi-index entries.
    
    Fixes: 6b24ca4a1a8d ("mm: Use multi-index entries in the page cache")
    Reported-by: syzbot+0d2b0bf32ca5cfd09f2e@syzkaller.appspotmail.com
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49f77ab50a31ffad7b61fef01e42d8f105835cdb
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Tue Mar 29 21:31:27 2022 -0400

    wireguard: socket: ignore v6 endpoints when ipv6 is disabled
    
    commit 77fc73ac89be96ec8f39e8efa53885caa7cb3645 upstream.
    
    The previous commit fixed a memory leak on the send path in the event
    that IPv6 is disabled at compile time, but how did a packet even arrive
    there to begin with? It turns out we have previously allowed IPv6
    endpoints even when IPv6 support is disabled at compile time. This is
    awkward and inconsistent. Instead, let's just ignore all things IPv6,
    the same way we do other malformed endpoints, in the case where IPv6 is
    disabled.
    
    Fixes: e7096c131e51 ("net: WireGuard secure network tunnel")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 096f9d35cac0a0c95ffafc00db84786b665a4837
Author: Wang Hai <wanghai38@huawei.com>
Date:   Tue Mar 29 21:31:26 2022 -0400

    wireguard: socket: free skb in send6 when ipv6 is disabled
    
    commit bbbf962d9460194993ee1943a793a0a0af4a7fbf upstream.
    
    I got a memory leak report:
    
    unreferenced object 0xffff8881191fc040 (size 232):
      comm "kworker/u17:0", pid 23193, jiffies 4295238848 (age 3464.870s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff814c3ef4>] slab_post_alloc_hook+0x84/0x3b0
        [<ffffffff814c8977>] kmem_cache_alloc_node+0x167/0x340
        [<ffffffff832974fb>] __alloc_skb+0x1db/0x200
        [<ffffffff82612b5d>] wg_socket_send_buffer_to_peer+0x3d/0xc0
        [<ffffffff8260e94a>] wg_packet_send_handshake_initiation+0xfa/0x110
        [<ffffffff8260ec81>] wg_packet_handshake_send_worker+0x21/0x30
        [<ffffffff8119c558>] process_one_work+0x2e8/0x770
        [<ffffffff8119ca2a>] worker_thread+0x4a/0x4b0
        [<ffffffff811a88e0>] kthread+0x120/0x160
        [<ffffffff8100242f>] ret_from_fork+0x1f/0x30
    
    In function wg_socket_send_buffer_as_reply_to_skb() or wg_socket_send_
    buffer_to_peer(), the semantics of send6() is required to free skb. But
    when CONFIG_IPV6 is disable, kfree_skb() is missing. This patch adds it
    to fix this bug.
    
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Fixes: e7096c131e51 ("net: WireGuard secure network tunnel")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd032f218c023d9f44b7a1c14752fce57023b21b
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Tue Mar 29 21:31:24 2022 -0400

    wireguard: queueing: use CFI-safe ptr_ring cleanup function
    
    commit ec59f128a9bd4255798abb1e06ac3b442f46ef68 upstream.
    
    We make too nuanced use of ptr_ring to entirely move to the skb_array
    wrappers, but we at least should avoid the naughty function pointer cast
    when cleaning up skbs. Otherwise RAP/CFI will honk at us. This patch
    uses the __skb_array_destroy_skb wrapper for the cleanup, rather than
    directly providing kfree_skb, which is what other drivers in the same
    situation do too.
    
    Reported-by: PaX Team <pageexec@freemail.hu>
    Fixes: 886fcee939ad ("wireguard: receive: use ring buffer for incoming handshakes")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a0c70c238c5233b1b55d18162ae20db52daa01c
Author: Baokun Li <libaokun1@huawei.com>
Date:   Tue Feb 15 12:07:36 2022 +0800

    ubifs: rename_whiteout: correct old_dir size computing
    
    commit 705757274599e2e064dd3054aabc74e8af31a095 upstream.
    
    When renaming the whiteout file, the old whiteout file is not deleted.
    Therefore, we add the old dentry size to the old dir like XFS.
    Otherwise, an error may be reported due to `fscki->calc_sz != fscki->size`
    in check_indes.
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Reported-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c34ae24a2590fee96a3a7735ba2fa6cc52306221
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:41 2021 +0800

    ubifs: Fix to add refcount once page is set private
    
    commit 3b67db8a6ca83e6ff90b756d3da0c966f61cd37b upstream.
    
    MM defined the rule [1] very clearly that once page was set with PG_private
    flag, we should increment the refcount in that page, also main flows like
    pageout(), migrate_page() will assume there is one additional page
    reference count if page_has_private() returns true. Otherwise, we may
    get a BUG in page migration:
    
      page:0000000080d05b9d refcount:-1 mapcount:0 mapping:000000005f4d82a8
      index:0xe2 pfn:0x14c12
      aops:ubifs_file_address_operations [ubifs] ino:8f1 dentry name:"f30e"
      flags: 0x1fffff80002405(locked|uptodate|owner_priv_1|private|node=0|
      zone=1|lastcpupid=0x1fffff)
      page dumped because: VM_BUG_ON_PAGE(page_count(page) != 0)
      ------------[ cut here ]------------
      kernel BUG at include/linux/page_ref.h:184!
      invalid opcode: 0000 [#1] SMP
      CPU: 3 PID: 38 Comm: kcompactd0 Not tainted 5.15.0-rc5
      RIP: 0010:migrate_page_move_mapping+0xac3/0xe70
      Call Trace:
        ubifs_migrate_page+0x22/0xc0 [ubifs]
        move_to_new_page+0xb4/0x600
        migrate_pages+0x1523/0x1cc0
        compact_zone+0x8c5/0x14b0
        kcompactd+0x2bc/0x560
        kthread+0x18c/0x1e0
        ret_from_fork+0x1f/0x30
    
    Before the time, we should make clean a concept, what does refcount means
    in page gotten from grab_cache_page_write_begin(). There are 2 situations:
    Situation 1: refcount is 3, page is created by __page_cache_alloc.
      TYPE_A - the write process is using this page
      TYPE_B - page is assigned to one certain mapping by calling
               __add_to_page_cache_locked()
      TYPE_C - page is added into pagevec list corresponding current cpu by
               calling lru_cache_add()
    Situation 2: refcount is 2, page is gotten from the mapping's tree
      TYPE_B - page has been assigned to one certain mapping
      TYPE_A - the write process is using this page (by calling
               page_cache_get_speculative())
    Filesystem releases one refcount by calling put_page() in xxx_write_end(),
    the released refcount corresponds to TYPE_A (write task is using it). If
    there are any processes using a page, page migration process will skip the
    page by judging whether expected_page_refs() equals to page refcount.
    
    The BUG is caused by following process:
        PA(cpu 0)                           kcompactd(cpu 1)
                                    compact_zone
    ubifs_write_begin
      page_a = grab_cache_page_write_begin
        add_to_page_cache_lru
          lru_cache_add
            pagevec_add // put page into cpu 0's pagevec
      (refcnf = 3, for page creation process)
    ubifs_write_end
      SetPagePrivate(page_a) // doesn't increase page count !
      unlock_page(page_a)
      put_page(page_a)  // refcnt = 2
                                    [...]
    
        PB(cpu 0)
    filemap_read
      filemap_get_pages
        add_to_page_cache_lru
          lru_cache_add
            __pagevec_lru_add // traverse all pages in cpu 0's pagevec
              __pagevec_lru_add_fn
                SetPageLRU(page_a)
                                    isolate_migratepages
                                      isolate_migratepages_block
                                        get_page_unless_zero(page_a)
                                        // refcnt = 3
                                          list_add(page_a, from_list)
                                    migrate_pages(from_list)
                                      __unmap_and_move
                                        move_to_new_page
                                          ubifs_migrate_page(page_a)
                                            migrate_page_move_mapping
                                              expected_page_refs get 3
                                      (migration[1] + mapping[1] + private[1])
             release_pages
               put_page_testzero(page_a) // refcnt = 3
                                              page_ref_freeze  // refcnt = 0
                 page_ref_dec_and_test(0 - 1 = -1)
                                              page_ref_unfreeze
                                                VM_BUG_ON_PAGE(-1 != 0, page)
    
    UBIFS doesn't increase the page refcount after setting private flag, which
    leads to page migration task believes the page is not used by any other
    processes, so the page is migrated. This causes concurrent accessing on
    page refcount between put_page() called by other process(eg. read process
    calls lru_cache_add) and page_ref_unfreeze() called by migration task.
    
    Actually zhangjun has tried to fix this problem [2] by recalculating page
    refcnt in ubifs_migrate_page(). It's better to follow MM rules [1], because
    just like Kirill suggested in [2], we need to check all users of
    page_has_private() helper. Like f2fs does in [3], fix it by adding/deleting
    refcount when setting/clearing private for a page. BTW, according to [4],
    we set 'page->private' as 1 because ubifs just simply SetPagePrivate().
    And, [5] provided a common helper to set/clear page private, ubifs can
    use this helper following the example of iomap, afs, btrfs, etc.
    
    Jump [6] to find a reproducer.
    
    [1] https://lore.kernel.org/lkml/2b19b3c4-2bc4-15fa-15cc-27a13e5c7af1@aol.com
    [2] https://www.spinics.net/lists/linux-mtd/msg04018.html
    [3] http://lkml.iu.edu/hypermail/linux/kernel/1903.0/03313.html
    [4] https://lore.kernel.org/linux-f2fs-devel/20210422154705.GO3596236@casper.infradead.org
    [5] https://lore.kernel.org/all/20200517214718.468-1-guoqing.jiang@cloud.ionos.com
    [6] https://bugzilla.kernel.org/show_bug.cgi?id=214961
    
    Fixes: 1e51764a3c2ac0 ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07a209fadee7b53b46858538e1177597273862e4
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:40 2021 +0800

    ubifs: Fix read out-of-bounds in ubifs_wbuf_write_nolock()
    
    commit 4f2262a334641e05f645364d5ade1f565c85f20b upstream.
    
    Function ubifs_wbuf_write_nolock() may access buf out of bounds in
    following process:
    
    ubifs_wbuf_write_nolock():
      aligned_len = ALIGN(len, 8);   // Assume len = 4089, aligned_len = 4096
      if (aligned_len <= wbuf->avail) ... // Not satisfy
      if (wbuf->used) {
        ubifs_leb_write()  // Fill some data in avail wbuf
        len -= wbuf->avail;   // len is still not 8-bytes aligned
        aligned_len -= wbuf->avail;
      }
      n = aligned_len >> c->max_write_shift;
      if (n) {
        n <<= c->max_write_shift;
        err = ubifs_leb_write(c, wbuf->lnum, buf + written,
                              wbuf->offs, n);
        // n > len, read out of bounds less than 8(n-len) bytes
      }
    
    , which can be catched by KASAN:
      =========================================================
      BUG: KASAN: slab-out-of-bounds in ecc_sw_hamming_calculate+0x1dc/0x7d0
      Read of size 4 at addr ffff888105594ff8 by task kworker/u8:4/128
      Workqueue: writeback wb_workfn (flush-ubifs_0_0)
      Call Trace:
        kasan_report.cold+0x81/0x165
        nand_write_page_swecc+0xa9/0x160
        ubifs_leb_write+0xf2/0x1b0 [ubifs]
        ubifs_wbuf_write_nolock+0x421/0x12c0 [ubifs]
        write_head+0xdc/0x1c0 [ubifs]
        ubifs_jnl_write_inode+0x627/0x960 [ubifs]
        wb_workfn+0x8af/0xb80
    
    Function ubifs_wbuf_write_nolock() accepts that parameter 'len' is not 8
    bytes aligned, the 'len' represents the true length of buf (which is
    allocated in 'ubifs_jnl_xxx', eg. ubifs_jnl_write_inode), so
    ubifs_wbuf_write_nolock() must handle the length read from 'buf' carefully
    to write leb safely.
    
    Fetch a reproducer in [Link].
    
    Fixes: 1e51764a3c2ac0 ("UBIFS: add new flash file system")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214785
    Reported-by: Chengsong Ke <kechengsong@huawei.com>
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d07a2421693162d89a5c1033e0d1794c8a53dc8c
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:39 2021 +0800

    ubifs: setflags: Make dirtied_ino_d 8 bytes aligned
    
    commit 1b83ec057db16b4d0697dc21ef7a9743b6041f72 upstream.
    
    Make 'ui->data_len' aligned with 8 bytes before it is assigned to
    dirtied_ino_d. Since 8871d84c8f8b0c6b("ubifs: convert to fileattr")
    applied, 'setflags()' only affects regular files and directories, only
    xattr inode, symlink inode and special inode(pipe/char_dev/block_dev)
    have none- zero 'ui->data_len' field, so assertion
    '!(req->dirtied_ino_d & 7)' cannot fail in ubifs_budget_space().
    To avoid assertion fails in future evolution(eg. setflags can operate
    special inodes), it's better to make dirtied_ino_d 8 bytes aligned,
    after all aligned size is still zero for regular files.
    
    Fixes: 1e51764a3c2ac05a ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13b2a8151e3be5e03bc07236a2c55c156261d45a
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:35 2021 +0800

    ubifs: Add missing iput if do_tmpfile() failed in rename whiteout
    
    commit 716b4573026bcbfa7b58ed19fe15554bac66b082 upstream.
    
    whiteout inode should be put when do_tmpfile() failed if inode has been
    initialized. Otherwise we will get following warning during umount:
      UBIFS error (ubi0:0 pid 1494): ubifs_assert_failed [ubifs]: UBIFS
      assert failed: c->bi.dd_growth == 0, in fs/ubifs/super.c:1930
      VFS: Busy inodes after unmount of ubifs. Self-destruct in 5 seconds.
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Suggested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83e42a78428fc354f5e2049935b84c8d8d29b787
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:33 2021 +0800

    ubifs: Fix deadlock in concurrent rename whiteout and inode writeback
    
    commit afd427048047e8efdedab30e8888044e2be5aa9c upstream.
    
    Following hung tasks:
    [   77.028764] task:kworker/u8:4    state:D stack:    0 pid:  132
    [   77.028820] Call Trace:
    [   77.029027]  schedule+0x8c/0x1b0
    [   77.029067]  mutex_lock+0x50/0x60
    [   77.029074]  ubifs_write_inode+0x68/0x1f0 [ubifs]
    [   77.029117]  __writeback_single_inode+0x43c/0x570
    [   77.029128]  writeback_sb_inodes+0x259/0x740
    [   77.029148]  wb_writeback+0x107/0x4d0
    [   77.029163]  wb_workfn+0x162/0x7b0
    
    [   92.390442] task:aa              state:D stack:    0 pid: 1506
    [   92.390448] Call Trace:
    [   92.390458]  schedule+0x8c/0x1b0
    [   92.390461]  wb_wait_for_completion+0x82/0xd0
    [   92.390469]  __writeback_inodes_sb_nr+0xb2/0x110
    [   92.390472]  writeback_inodes_sb_nr+0x14/0x20
    [   92.390476]  ubifs_budget_space+0x705/0xdd0 [ubifs]
    [   92.390503]  do_rename.cold+0x7f/0x187 [ubifs]
    [   92.390549]  ubifs_rename+0x8b/0x180 [ubifs]
    [   92.390571]  vfs_rename+0xdb2/0x1170
    [   92.390580]  do_renameat2+0x554/0x770
    
    , are caused by concurrent rename whiteout and inode writeback processes:
            rename_whiteout(Thread 1)               wb_workfn(Thread2)
    ubifs_rename
      do_rename
        lock_4_inodes (Hold ui_mutex)
        ubifs_budget_space
          make_free_space
            shrink_liability
              __writeback_inodes_sb_nr
                bdi_split_work_to_wbs (Queue new wb work)
                                                  wb_do_writeback(wb work)
                                                    __writeback_single_inode
                                                      ubifs_write_inode
                                                        LOCK(ui_mutex)
                                                               ↑
                  wb_wait_for_completion (Wait wb work) <-- deadlock!
    
    Reproducer (Detail program in [Link]):
      1. SYS_renameat2("/mp/dir/file", "/mp/dir/whiteout", RENAME_WHITEOUT)
      2. Consume out of space before kernel(mdelay) doing budget for whiteout
    
    Fix it by doing whiteout space budget before locking ubifs inodes.
    BTW, it also fixes wrong goto tag 'out_release' in whiteout budget
    error handling path(It should at least recover dir i_size and unlock
    4 ubifs inodes).
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214733
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a90e2dbe66d2647ff95a0442ad2e86482d977fd8
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Dec 27 11:22:32 2021 +0800

    ubifs: rename_whiteout: Fix double free for whiteout_ui->data
    
    commit 40a8f0d5e7b3999f096570edab71c345da812e3e upstream.
    
    'whiteout_ui->data' will be freed twice if space budget fail for
    rename whiteout operation as following process:
    
    rename_whiteout
      dev = kmalloc
      whiteout_ui->data = dev
      kfree(whiteout_ui->data)  // Free first time
      iput(whiteout)
        ubifs_free_inode
          kfree(ui->data)       // Double free!
    
    KASAN reports:
    ==================================================================
    BUG: KASAN: double-free or invalid-free in ubifs_free_inode+0x4f/0x70
    Call Trace:
      kfree+0x117/0x490
      ubifs_free_inode+0x4f/0x70 [ubifs]
      i_callback+0x30/0x60
      rcu_do_batch+0x366/0xac0
      __do_softirq+0x133/0x57f
    
    Allocated by task 1506:
      kmem_cache_alloc_trace+0x3c2/0x7a0
      do_rename+0x9b7/0x1150 [ubifs]
      ubifs_rename+0x106/0x1f0 [ubifs]
      do_syscall_64+0x35/0x80
    
    Freed by task 1506:
      kfree+0x117/0x490
      do_rename.cold+0x53/0x8a [ubifs]
      ubifs_rename+0x106/0x1f0 [ubifs]
      do_syscall_64+0x35/0x80
    
    The buggy address belongs to the object at ffff88810238bed8 which
    belongs to the cache kmalloc-8 of size 8
    ==================================================================
    
    Let ubifs_free_inode() free 'whiteout_ui->data'. BTW, delete unused
    assignment 'whiteout_ui->data_len = 0', process 'ubifs_evict_inode()
    -> ubifs_jnl_delete_inode() -> ubifs_jnl_write_inode()' doesn't need it
    (because 'inc_nlink(whiteout)' won't be excuted by 'goto out_release',
     and the nlink of whiteout inode is 0).
    
    Fixes: 9e0a1fff8db56ea ("ubifs: Implement RENAME_WHITEOUT")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c307349fe060971625b856c92f0361b8ea9a120
Author: Ammar Faizi <ammarfaizi2@gnuweeb.org>
Date:   Fri Feb 25 01:58:36 2022 +0700

    ASoC: SOF: Intel: Fix NULL ptr dereference when ENOMEM
    
    commit b7fb0ae09009d076964afe4c1a2bde1ee2bd88a9 upstream.
    
    Do not call snd_dma_free_pages() when snd_dma_alloc_pages() returns
    -ENOMEM because it leads to a NULL pointer dereference bug.
    
    The dmesg says:
    
      [ T1387] sof-audio-pci-intel-tgl 0000:00:1f.3: error: memory alloc failed: -12
      [ T1387] BUG: kernel NULL pointer dereference, address: 0000000000000000
      [ T1387] #PF: supervisor read access in kernel mode
      [ T1387] #PF: error_code(0x0000) - not-present page
      [ T1387] PGD 0 P4D 0
      [ T1387] Oops: 0000 [#1] PREEMPT SMP NOPTI
      [ T1387] CPU: 6 PID: 1387 Comm: alsa-sink-HDA A Tainted: G        W         5.17.0-rc4-superb-owl-00055-g80d47f5de5e3
      [ T1387] Hardware name: HP HP Laptop 14s-dq2xxx/87FD, BIOS F.15 09/15/2021
      [ T1387] RIP: 0010:dma_free_noncontiguous+0x37/0x80
      [ T1387] Code: [... snip ...]
      [ T1387] RSP: 0000:ffffc90002b87770 EFLAGS: 00010246
      [ T1387] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
      [ T1387] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888101db30d0
      [ T1387] RBP: 00000000fffffff4 R08: 0000000000000000 R09: 0000000000000000
      [ T1387] R10: 0000000000000000 R11: ffffc90002b874d0 R12: 0000000000000001
      [ T1387] R13: 0000000000058000 R14: ffff888105260c68 R15: ffff888105260828
      [ T1387] FS:  00007f42e2ffd640(0000) GS:ffff888466b80000(0000) knlGS:0000000000000000
      [ T1387] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [ T1387] CR2: 0000000000000000 CR3: 000000014acf0003 CR4: 0000000000770ee0
      [ T1387] PKRU: 55555554
      [ T1387] Call Trace:
      [ T1387]  <TASK>
      [ T1387]  cl_stream_prepare+0x10a/0x120 [snd_sof_intel_hda_common 146addf995b9279ae7f509621078cccbe4f875e1]
      [... snip ...]
      [ T1387]  </TASK>
    
    Cc: Daniel Baluta <daniel.baluta@nxp.com>
    Cc: Jaroslav Kysela <perex@perex.cz>
    Cc: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Cc: Keyon Jie <yang.jie@linux.intel.com>
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Rander Wang <rander.wang@intel.com>
    Cc: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Cc: Takashi Iwai <tiwai@suse.com>
    Cc: sound-open-firmware@alsa-project.org
    Cc: alsa-devel@alsa-project.org
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org # v5.2+
    Fixes: d16046ffa6de040bf580a64d5f4d0aa18258a854 ("ASoC: SOF: Intel: Add Intel specific HDA firmware loader")
    Link: https://lore.kernel.org/lkml/20220224145124.15985-1-ammarfaizi2@gnuweeb.org/ # v1
    Link: https://lore.kernel.org/lkml/20220224180850.34592-1-ammarfaizi2@gnuweeb.org/ # v2
    Link: https://lore.kernel.org/lkml/20220224182818.40301-1-ammarfaizi2@gnuweeb.org/ # v3
    Reviewed-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Ammar Faizi <ammarfaizi2@gnuweeb.org>
    Link: https://lore.kernel.org/r/20220224185836.44907-1-ammarfaizi2@gnuweeb.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    [ammarfaizi2: Backport to Linux 5.10 LTS]
    Signed-off-by: Ammar Faizi <ammarfaizi2@gnuweeb.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fb470eb48892e131d10aa3be6915239e65758f3
Author: Yi Wang <wang.yi59@zte.com.cn>
Date:   Wed Mar 9 19:30:25 2022 +0800

    KVM: SVM: fix panic on out-of-bounds guest IRQ
    
    commit a80ced6ea514000d34bf1239d47553de0d1ee89e upstream.
    
    As guest_irq is coming from KVM_IRQFD API call, it may trigger
    crash in svm_update_pi_irte() due to out-of-bounds:
    
    crash> bt
    PID: 22218  TASK: ffff951a6ad74980  CPU: 73  COMMAND: "vcpu8"
     #0 [ffffb1ba6707fa40] machine_kexec at ffffffff8565b397
     #1 [ffffb1ba6707fa90] __crash_kexec at ffffffff85788a6d
     #2 [ffffb1ba6707fb58] crash_kexec at ffffffff8578995d
     #3 [ffffb1ba6707fb70] oops_end at ffffffff85623c0d
     #4 [ffffb1ba6707fb90] no_context at ffffffff856692c9
     #5 [ffffb1ba6707fbf8] exc_page_fault at ffffffff85f95b51
     #6 [ffffb1ba6707fc50] asm_exc_page_fault at ffffffff86000ace
        [exception RIP: svm_update_pi_irte+227]
        RIP: ffffffffc0761b53  RSP: ffffb1ba6707fd08  RFLAGS: 00010086
        RAX: ffffb1ba6707fd78  RBX: ffffb1ba66d91000  RCX: 0000000000000001
        RDX: 00003c803f63f1c0  RSI: 000000000000019a  RDI: ffffb1ba66db2ab8
        RBP: 000000000000019a   R8: 0000000000000040   R9: ffff94ca41b82200
        R10: ffffffffffffffcf  R11: 0000000000000001  R12: 0000000000000001
        R13: 0000000000000001  R14: ffffffffffffffcf  R15: 000000000000005f
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
     #7 [ffffb1ba6707fdb8] kvm_irq_routing_update at ffffffffc09f19a1 [kvm]
     #8 [ffffb1ba6707fde0] kvm_set_irq_routing at ffffffffc09f2133 [kvm]
     #9 [ffffb1ba6707fe18] kvm_vm_ioctl at ffffffffc09ef544 [kvm]
        RIP: 00007f143c36488b  RSP: 00007f143a4e04b8  RFLAGS: 00000246
        RAX: ffffffffffffffda  RBX: 00007f05780041d0  RCX: 00007f143c36488b
        RDX: 00007f05780041d0  RSI: 000000004008ae6a  RDI: 0000000000000020
        RBP: 00000000000004e8   R8: 0000000000000008   R9: 00007f05780041e0
        R10: 00007f0578004560  R11: 0000000000000246  R12: 00000000000004e0
        R13: 000000000000001a  R14: 00007f1424001c60  R15: 00007f0578003bc0
        ORIG_RAX: 0000000000000010  CS: 0033  SS: 002b
    
    Vmx have been fix this in commit 3a8b0677fc61 (KVM: VMX: Do not BUG() on
    out-of-bounds guest IRQ), so we can just copy source from that to fix
    this.
    
    Co-developed-by: Yi Liu <liu.yi24@zte.com.cn>
    Signed-off-by: Yi Liu <liu.yi24@zte.com.cn>
    Signed-off-by: Yi Wang <wang.yi59@zte.com.cn>
    Message-Id: <20220309113025.44469-1-wang.yi59@zte.com.cn>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd8c2d7c7c49597dd29da35c23048e10d7ad2059
Author: Li RongQing <lirongqing@baidu.com>
Date:   Wed Mar 9 16:35:44 2022 +0800

    KVM: x86: fix sending PV IPI
    
    commit c15e0ae42c8e5a61e9aca8aac920517cf7b3e94e upstream.
    
    If apic_id is less than min, and (max - apic_id) is greater than
    KVM_IPI_CLUSTER_SIZE, then the third check condition is satisfied but
    the new apic_id does not fit the bitmask.  In this case __send_ipi_mask
    should send the IPI.
    
    This is mostly theoretical, but it can happen if the apic_ids on three
    iterations of the loop are for example 1, KVM_IPI_CLUSTER_SIZE, 0.
    
    Fixes: aaffcfd1e82 ("KVM: X86: Implement PV IPIs in linux guest")
    Signed-off-by: Li RongQing <lirongqing@baidu.com>
    Message-Id: <1646814944-51801-1-git-send-email-lirongqing@baidu.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eccfee44949d2d8ac9675d5b3f29cacaed5ba6c8
Author: David Matlack <dmatlack@google.com>
Date:   Thu Mar 3 18:33:27 2022 +0000

    KVM: Prevent module exit until all VMs are freed
    
    commit 5f6de5cbebee925a612856fce6f9182bb3eee0db upstream.
    
    Tie the lifetime the KVM module to the lifetime of each VM via
    kvm.users_count. This way anything that grabs a reference to the VM via
    kvm_get_kvm() cannot accidentally outlive the KVM module.
    
    Prior to this commit, the lifetime of the KVM module was tied to the
    lifetime of /dev/kvm file descriptors, VM file descriptors, and vCPU
    file descriptors by their respective file_operations "owner" field.
    This approach is insufficient because references grabbed via
    kvm_get_kvm() do not prevent closing any of the aforementioned file
    descriptors.
    
    This fixes a long standing theoretical bug in KVM that at least affects
    async page faults. kvm_setup_async_pf() grabs a reference via
    kvm_get_kvm(), and drops it in an asynchronous work callback. Nothing
    prevents the VM file descriptor from being closed and the KVM module
    from being unloaded before this callback runs.
    
    Fixes: af585b921e5d ("KVM: Halt vcpu if page it tries to access is swapped out")
    Fixes: 3d3aab1b973b ("KVM: set owner of cpu and vm file operations")
    Cc: stable@vger.kernel.org
    Suggested-by: Ben Gardon <bgardon@google.com>
    [ Based on a patch from Ben implemented for Google's kernel. ]
    Signed-off-by: David Matlack <dmatlack@google.com>
    Message-Id: <20220303183328.1499189-2-dmatlack@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09c771c45c1243e295470225aaee726693fdc242
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Mar 25 14:21:40 2022 +0100

    KVM: x86: Forbid VMM to set SYNIC/STIMER MSRs when SynIC wasn't activated
    
    commit b1e34d325397a33d97d845e312d7cf2a8b646b44 upstream.
    
    Setting non-zero values to SYNIC/STIMER MSRs activates certain features,
    this should not happen when KVM_CAP_HYPERV_SYNIC{,2} was not activated.
    
    Note, it would've been better to forbid writing anything to SYNIC/STIMER
    MSRs, including zeroes, however, at least QEMU tries clearing
    HV_X64_MSR_STIMER0_CONFIG without SynIC. HV_X64_MSR_EOM MSR is somewhat
    'special' as writing zero there triggers an action, this also should not
    happen when SynIC wasn't activated.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20220325132140.25650-4-vkuznets@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aea4ffdcf30fc625d5775798ee9862957d0421cb
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Fri Jan 21 16:13:01 2022 -0800

    platform: chrome: Split trace include file
    
    commit eabd9a3807e17e211690e6c40f1405b427b64c48 upstream.
    
    cros_ec_trace.h defined 5 tracing events, 2 for cros_ec_proto and
    3 for cros_ec_sensorhub_ring.
    These 2 files are in different kernel modules, the traces are defined
    twice in the kernel which leads to problem enabling only some traces.
    
    Move sensorhub traces from cros_ec_trace.h to cros_ec_sensorhub_trace.h
    and enable them only in cros_ec_sensorhub kernel module.
    
    Check we can now enable any single traces: without this patch,
    we can only enable all sensorhub traces or none.
    
    Fixes: d453ceb6549a ("platform/chrome: sensorhub: Add trace events for sample")
    
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220122001301.640337-1-gwendal@chromium.org
    Signed-off-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3a913ba1fea148d2c809edd2f3ab83f838142b3
Author: Manish Rangankar <mrangankar@marvell.com>
Date:   Thu Mar 10 01:26:02 2022 -0800

    scsi: qla2xxx: Use correct feature type field during RFF_ID processing
    
    commit a7e05f7a1bcbe4ee055479242de46c5c16ab03b1 upstream.
    
    During SNS Register FC-4 Features (RFF_ID) the initiator driver was sending
    incorrect type field for NVMe supported device. Use correct feature type
    field.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-12-njavali@marvell.com
    Fixes: e374f9f59281 ("scsi: qla2xxx: Migrate switch registration commands away from mailbox interface")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 633450063c1047d2977f0dbac2840a92484cdbb7
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:26:00 2022 -0800

    scsi: qla2xxx: Reduce false trigger to login
    
    commit d2646eed7b19a206912f49101178cbbaa507256c upstream.
    
    While a session is in the middle of a relogin, a late RSCN can be delivered
    from switch. RSCN trigger fabric scan where the scan logic can trigger
    another session login while a login is in progress.  Reduce the extra
    trigger to prevent multiple logins to the same session.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-10-njavali@marvell.com
    Fixes: bee8b84686c4 ("scsi: qla2xxx: Reduce redundant ADISC command for RSCNs")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd48727cabe556db3e486885beac533438599c5d
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:57 2022 -0800

    scsi: qla2xxx: Fix N2N inconsistent PLOGI
    
    commit c13ce47c64ea8f14e77eecb40d1e7c2ac667f898 upstream.
    
    For N2N topology, ELS Passthrough is used to send PLOGI. On failure of ELS
    pass through PLOGI, driver flipped over to using LLIOCB PLOGI for N2N. This
    is not consistent. Delete the session to restart the connection where ELS
    pass through PLOGI would be used consistently.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-7-njavali@marvell.com
    Fixes: c76ae845ea83 ("scsi: qla2xxx: Add error handling for PLOGI ELS passthrough")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0910a791a6d7fd331f231f48200e18babb519769
Author: Arun Easi <aeasi@marvell.com>
Date:   Thu Mar 10 01:25:55 2022 -0800

    scsi: qla2xxx: Fix missed DMA unmap for NVMe ls requests
    
    commit c85ab7d9e27a80e48d5b7d7fb2fe2b0fdb2de523 upstream.
    
    At NVMe ELS request time, request structure is DMA mapped and never
    unmapped. Fix this by calling the unmap on ELS completion.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-5-njavali@marvell.com
    Fixes: e84067d74301 ("scsi: qla2xxx: Add FC-NVMe F/W initialization and transport registration")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f296e888e921bb2c3615da4142024609ed6adbfa
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:58 2022 -0800

    scsi: qla2xxx: Fix hang due to session stuck
    
    commit c02aada06d19a215c8291bd968a99a270e96f734 upstream.
    
    User experienced device lost. The log shows Get port data base command was
    queued up, failed, and requeued again. Every time it is requeued, it set
    the FCF_ASYNC_ACTIVE. This prevents any recovery code from occurring
    because driver thinks a recovery is in progress for this session. In
    essence, this session is hung.  The reason it gets into this place is the
    session deletion got in front of this call due to link perturbation.
    
    Break the requeue cycle and exit.  The session deletion code will trigger a
    session relogin.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-8-njavali@marvell.com
    Fixes: 726b85487067 ("qla2xxx: Add framework for async fabric discovery")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edea037716ff45f4ea79d8349b20179f842c1813
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:52 2022 -0800

    scsi: qla2xxx: Fix incorrect reporting of task management failure
    
    commit 58ca5999e0367d131de82a75257fbfd5aed0195d upstream.
    
    User experienced no task management error while target device is responding
    with error. The RSP_CODE field in the status IOCB is in little endian.
    Driver assumes it's big endian and it picked up erroneous data.
    
    Convert the data back to big endian as is on the wire.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-2-njavali@marvell.com
    Fixes: faef62d13463 ("[SCSI] qla2xxx: Fix Task Management command asynchronous handling")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dc104edd72917261b5ea80fc0ba86a0ad05e346
Author: Quinn Tran <qutran@marvell.com>
Date:   Thu Mar 10 01:25:53 2022 -0800

    scsi: qla2xxx: Fix disk failure to rediscover
    
    commit 6a45c8e137d4e2c72eecf1ac7cf64f2fdfcead99 upstream.
    
    User experienced some of the LUN failed to get rediscovered after long
    cable pull test. The issue is triggered by a race condition between driver
    setting session online state vs starting the LUN scan process at the same
    time. Current code set the online state after notifying the session is
    available. In this case, trigger to start the LUN scan process happened
    before driver could set the session in online state.  LUN scan ends up with
    failure due to the session online check was failing.
    
    Set the online state before reporting of the availability of the session.
    
    Link: https://lore.kernel.org/r/20220310092604.22950-3-njavali@marvell.com
    Fixes: aecf043443d3 ("scsi: qla2xxx: Fix Remote port registration")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f97316dd393bc8df1cc2af6295a97b876eecf252
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Sun Jan 9 21:02:15 2022 -0800

    scsi: qla2xxx: Suppress a kernel complaint in qla_create_qpair()
    
    commit a60447e7d451df42c7bde43af53b34f10f34f469 upstream.
    
    [   12.323788] BUG: using smp_processor_id() in preemptible [00000000] code: systemd-udevd/1020
    [   12.332297] caller is qla2xxx_create_qpair+0x32a/0x5d0 [qla2xxx]
    [   12.338417] CPU: 7 PID: 1020 Comm: systemd-udevd Tainted: G          I      --------- ---  5.14.0-29.el9.x86_64 #1
    [   12.348827] Hardware name: Dell Inc. PowerEdge R610/0F0XJ6, BIOS 6.6.0 05/22/2018
    [   12.356356] Call Trace:
    [   12.358821]  dump_stack_lvl+0x34/0x44
    [   12.362514]  check_preemption_disabled+0xd9/0xe0
    [   12.367164]  qla2xxx_create_qpair+0x32a/0x5d0 [qla2xxx]
    [   12.372481]  qla2x00_probe_one+0xa3a/0x1b80 [qla2xxx]
    [   12.377617]  ? _raw_spin_lock_irqsave+0x19/0x40
    [   12.384284]  local_pci_probe+0x42/0x80
    [   12.390162]  ? pci_match_device+0xd7/0x110
    [   12.396366]  pci_device_probe+0xfd/0x1b0
    [   12.402372]  really_probe+0x1e7/0x3e0
    [   12.408114]  __driver_probe_device+0xfe/0x180
    [   12.414544]  driver_probe_device+0x1e/0x90
    [   12.420685]  __driver_attach+0xc0/0x1c0
    [   12.426536]  ? __device_attach_driver+0xe0/0xe0
    [   12.433061]  ? __device_attach_driver+0xe0/0xe0
    [   12.439538]  bus_for_each_dev+0x78/0xc0
    [   12.445294]  bus_add_driver+0x12b/0x1e0
    [   12.451021]  driver_register+0x8f/0xe0
    [   12.456631]  ? 0xffffffffc07bc000
    [   12.461773]  qla2x00_module_init+0x1be/0x229 [qla2xxx]
    [   12.468776]  do_one_initcall+0x44/0x200
    [   12.474401]  ? load_module+0xad3/0xba0
    [   12.479908]  ? kmem_cache_alloc_trace+0x45/0x410
    [   12.486268]  do_init_module+0x5c/0x280
    [   12.491730]  __do_sys_init_module+0x12e/0x1b0
    [   12.497785]  do_syscall_64+0x3b/0x90
    [   12.503029]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [   12.509764] RIP: 0033:0x7f554f73ab2e
    
    Link: https://lore.kernel.org/r/20220110050218.3958-15-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e4a89efc2234088aae988da4cba9837d372f182
Author: Joe Carnuccio <joe.carnuccio@cavium.com>
Date:   Sun Jan 9 21:02:17 2022 -0800

    scsi: qla2xxx: Check for firmware dump already collected
    
    commit cfbafad7c6032d449a5a07f2d273acd2437bbc6a upstream.
    
    While allocating firmware dump, check if dump is already collected and do
    not re-allocate the buffer.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-17-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef10a7530c34f4e4e4372f8509881767d5fc041d
Author: Joe Carnuccio <joe.carnuccio@cavium.com>
Date:   Sun Jan 9 21:02:16 2022 -0800

    scsi: qla2xxx: Add devids and conditionals for 28xx
    
    commit 0d6a536cb1fcabb6c3e9c94871c8d0b29bb5813b upstream.
    
    This is an update to the original 28xx adapter enablement. Add a bunch of
    conditionals that are applicable for 28xx.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-16-njavali@marvell.com
    Fixes: ecc89f25e225 ("scsi: qla2xxx: Add Device ID for ISP28XX")
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bad77c9a47b45e56ddabb323fc4831b831057c85
Author: Arun Easi <aeasi@marvell.com>
Date:   Sun Jan 9 21:02:11 2022 -0800

    scsi: qla2xxx: Fix device reconnect in loop topology
    
    commit 8ad4be3d15cf144b5834bdb00d5bbe4050938dc7 upstream.
    
    A device logout in loop topology initiates a device connection teardown
    which loses the FW device handle. In loop topo, the device handle is not
    regrabbed leading to device login failures and eventually to loss of the
    device. Fix this by taking the main login path that does it.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-11-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b52e20c22c2113e5b8ef8bd8f3acae0dfd6e2d3
Author: Nilesh Javali <njavali@marvell.com>
Date:   Sun Jan 9 21:02:12 2022 -0800

    scsi: qla2xxx: Fix warning for missing error code
    
    commit 14cb838d245ae0d523b2f7804af5a02c22e79f5a upstream.
    
    Fix smatch-reported warning message:
    
    drivers/scsi/qla2xxx/qla_target.c:3324 qlt_xmit_response() warn: missing error
    code 'res'
    
    Link: https://lore.kernel.org/r/20220110050218.3958-12-njavali@marvell.com
    Fixes: 4a8f71014b4d ("scsi: qla2xxx: Fix unmap of already freed sgl")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c9745421d43f3178bbccb641cb458ba18e3b4c5
Author: Bikash Hazarika <bhazarika@marvell.com>
Date:   Sun Jan 9 21:02:09 2022 -0800

    scsi: qla2xxx: Fix wrong FDMI data for 64G adapter
    
    commit 1cfbbacbee2d6ea3816386a483e3c7a96e5bd657 upstream.
    
    Corrected transmission speed mask values for FC.
    
    Supported Speed: 16 32 20 Gb/s ===> Should be 64 instead of 20
    Supported Speed: 16G 32G 48G   ===> Should be 64G instead of 48G
    
    Link: https://lore.kernel.org/r/20220110050218.3958-9-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bikash Hazarika <bhazarika@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fef50214dd04427233a2e66cd624d468e67aecb
Author: Quinn Tran <qutran@marvell.com>
Date:   Sun Jan 9 21:02:07 2022 -0800

    scsi: qla2xxx: Fix scheduling while atomic
    
    commit afd438ff874ca40b74321b3fa19bd61adfd7ca0c upstream.
    
    The driver makes a call into midlayer (fc_remote_port_delete) which can put
    the thread to sleep. The thread that originates the call is in interrupt
    context. The combination of the two trigger a crash. Schedule the call in
    non-interrupt context where it is more safe.
    
    kernel: BUG: scheduling while atomic: swapper/7/0/0x00010000
    kernel: Call Trace:
    kernel:  <IRQ>
    kernel:  dump_stack+0x66/0x81
    kernel:  __schedule_bug.cold.90+0x5/0x1d
    kernel:  __schedule+0x7af/0x960
    kernel:  schedule+0x28/0x80
    kernel:  schedule_timeout+0x26d/0x3b0
    kernel:  wait_for_completion+0xb4/0x140
    kernel:  ? wake_up_q+0x70/0x70
    kernel:  __wait_rcu_gp+0x12c/0x160
    kernel:  ? sdev_evt_alloc+0xc0/0x180 [scsi_mod]
    kernel:  synchronize_sched+0x6c/0x80
    kernel:  ? call_rcu_bh+0x20/0x20
    kernel:  ? __bpf_trace_rcu_invoke_callback+0x10/0x10
    kernel:  sdev_evt_alloc+0xfd/0x180 [scsi_mod]
    kernel:  starget_for_each_device+0x85/0xb0 [scsi_mod]
    kernel:  ? scsi_init_io+0x360/0x3d0 [scsi_mod]
    kernel:  scsi_init_io+0x388/0x3d0 [scsi_mod]
    kernel:  device_for_each_child+0x54/0x90
    kernel:  fc_remote_port_delete+0x70/0xe0 [scsi_transport_fc]
    kernel:  qla2x00_schedule_rport_del+0x62/0xf0 [qla2xxx]
    kernel:  qla2x00_mark_device_lost+0x9c/0xd0 [qla2xxx]
    kernel:  qla24xx_handle_plogi_done_event+0x55f/0x570 [qla2xxx]
    kernel:  qla2x00_async_login_sp_done+0xd2/0x100 [qla2xxx]
    kernel:  qla24xx_logio_entry+0x13a/0x3c0 [qla2xxx]
    kernel:  qla24xx_process_response_queue+0x306/0x400 [qla2xxx]
    kernel:  qla24xx_msix_rsp_q+0x3f/0xb0 [qla2xxx]
    kernel:  __handle_irq_event_percpu+0x40/0x180
    kernel:  handle_irq_event_percpu+0x30/0x80
    kernel:  handle_irq_event+0x36/0x60
    
    Link: https://lore.kernel.org/r/20220110050218.3958-7-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c45147018d7ea96e6231ef36b8fceba23ac57ea8
Author: Quinn Tran <qutran@marvell.com>
Date:   Sun Jan 9 21:02:04 2022 -0800

    scsi: qla2xxx: Fix stuck session in gpdb
    
    commit 725d3a0d31a51c0debf970011e05f585e805165b upstream.
    
    Fix stuck sessions in get port database. When a thread is in the process of
    re-establishing a session, a flag is set to prevent multiple threads /
    triggers from doing the same task. This flag was left on, where any attempt
    to relogin was locked out. Clear this flag, if the attempt has failed.
    
    Link: https://lore.kernel.org/r/20220110050218.3958-4-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 031547f4c6037313b4061691b3873b0c4cbaa832
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Thu Feb 24 17:22:14 2022 +0100

    powerpc: Fix build errors with newer binutils
    
    commit 8667d0d64dd1f84fd41b5897fd87fa9113ae05e3 upstream.
    
    Building tinyconfig with gcc (Debian 11.2.0-16) and assembler (Debian
    2.37.90.20220207) the following build error shows up:
    
      {standard input}: Assembler messages:
      {standard input}:1190: Error: unrecognized opcode: `stbcix'
      {standard input}:1433: Error: unrecognized opcode: `lwzcix'
      {standard input}:1453: Error: unrecognized opcode: `stbcix'
      {standard input}:1460: Error: unrecognized opcode: `stwcix'
      {standard input}:1596: Error: unrecognized opcode: `stbcix'
      ...
    
    Rework to add assembler directives [1] around the instruction. Going
    through them one by one shows that the changes should be safe.  Like
    __get_user_atomic_128_aligned() is only called in p9_hmi_special_emu(),
    which according to the name is specific to power9.  And __raw_rm_read*()
    are only called in things that are powernv or book3s_hv specific.
    
    [1] https://sourceware.org/binutils/docs/as/PowerPC_002dPseudo.html#PowerPC_002dPseudo
    
    Cc: stable@vger.kernel.org
    Co-developed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Reviewed-by: Segher Boessenkool <segher@kernel.crashing.org>
    [mpe: Make commit subject more descriptive]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220224162215.3406642-2-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68fa67e939d81e9886cba00606ea64825abf64dc
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Thu Feb 24 17:22:15 2022 +0100

    powerpc/lib/sstep: Fix build errors with newer binutils
    
    commit 8219d31effa7be5dbc7ff915d7970672e028c701 upstream.
    
    Building tinyconfig with gcc (Debian 11.2.0-16) and assembler (Debian
    2.37.90.20220207) the following build error shows up:
    
      {standard input}: Assembler messages:
      {standard input}:10576: Error: unrecognized opcode: `stbcx.'
      {standard input}:10680: Error: unrecognized opcode: `lharx'
      {standard input}:10694: Error: unrecognized opcode: `lbarx'
    
    Rework to add assembler directives [1] around the instruction.  The
    problem with this might be that we can trick a power6 into
    single-stepping through an stbcx. for instance, and it will execute that
    in kernel mode.
    
    [1] https://sourceware.org/binutils/docs/as/PowerPC_002dPseudo.html#PowerPC_002dPseudo
    
    Fixes: 350779a29f11 ("powerpc: Handle most loads and stores in instruction emulation code")
    Cc: stable@vger.kernel.org # v4.14+
    Co-developed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Reviewed-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220224162215.3406642-3-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad806b402268d5891fecbc16e3d6a2e0b64632c9
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Thu Feb 24 17:22:13 2022 +0100

    powerpc/lib/sstep: Fix 'sthcx' instruction
    
    commit a633cb1edddaa643fadc70abc88f89a408fa834a upstream.
    
    Looks like there been a copy paste mistake when added the instruction
    'stbcx' twice and one was probably meant to be 'sthcx'. Changing to
    'sthcx' from 'stbcx'.
    
    Fixes: 350779a29f11 ("powerpc: Handle most loads and stores in instruction emulation code")
    Cc: stable@vger.kernel.org # v4.14+
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220224162215.3406642-1-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f39a3309393a4a484532f6ba745c6acbcfe06115
Author: Chen Jingwen <chenjingwen6@huawei.com>
Date:   Wed Dec 29 11:52:26 2021 +0800

    powerpc/kasan: Fix early region not updated correctly
    
    commit dd75080aa8409ce10d50fb58981c6b59bf8707d3 upstream.
    
    The shadow's page table is not updated when PTE_RPN_SHIFT is 24
    and PAGE_SHIFT is 12. It not only causes false positives but
    also false negative as shown the following text.
    
    Fix it by bringing the logic of kasan_early_shadow_page_entry here.
    
    1. False Positive:
    ==================================================================
    BUG: KASAN: vmalloc-out-of-bounds in pcpu_alloc+0x508/0xa50
    Write of size 16 at addr f57f3be0 by task swapper/0/1
    
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.15.0-12267-gdebe436e77c7 #1
    Call Trace:
    [c80d1c20] [c07fe7b8] dump_stack_lvl+0x4c/0x6c (unreliable)
    [c80d1c40] [c02ff668] print_address_description.constprop.0+0x88/0x300
    [c80d1c70] [c02ff45c] kasan_report+0x1ec/0x200
    [c80d1cb0] [c0300b20] kasan_check_range+0x160/0x2f0
    [c80d1cc0] [c03018a4] memset+0x34/0x90
    [c80d1ce0] [c0280108] pcpu_alloc+0x508/0xa50
    [c80d1d40] [c02fd7bc] __kmem_cache_create+0xfc/0x570
    [c80d1d70] [c0283d64] kmem_cache_create_usercopy+0x274/0x3e0
    [c80d1db0] [c2036580] init_sd+0xc4/0x1d0
    [c80d1de0] [c00044a0] do_one_initcall+0xc0/0x33c
    [c80d1eb0] [c2001624] kernel_init_freeable+0x2c8/0x384
    [c80d1ef0] [c0004b14] kernel_init+0x24/0x170
    [c80d1f10] [c001b26c] ret_from_kernel_thread+0x5c/0x64
    
    Memory state around the buggy address:
     f57f3a80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
     f57f3b00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
    >f57f3b80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
                                                   ^
     f57f3c00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
     f57f3c80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
    ==================================================================
    
    2. False Negative (with KASAN tests):
    ==================================================================
    Before fix:
        ok 45 - kmalloc_double_kzfree
        # vmalloc_oob: EXPECTATION FAILED at lib/test_kasan.c:1039
        KASAN failure expected in "((volatile char *)area)[3100]", but none occurred
        not ok 46 - vmalloc_oob
        not ok 1 - kasan
    
    ==================================================================
    After fix:
        ok 1 - kasan
    
    Fixes: cbd18991e24fe ("powerpc/mm: Fix an Oops in kasan_mmu_init()")
    Cc: stable@vger.kernel.org # 5.4.x
    Signed-off-by: Chen Jingwen <chenjingwen6@huawei.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211229035226.59159-1-chenjingwen6@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89e5a426876094b721c44fdafca1b0bc992314c6
Author: Sean Christopherson <seanjc@google.com>
Date:   Sat Feb 26 00:15:20 2022 +0000

    KVM: x86/mmu: Check for present SPTE when clearing dirty bit in TDP MMU
    
    commit 3354ef5a592d219364cf442c2f784ce7ad7629fd upstream.
    
    Explicitly check for present SPTEs when clearing dirty bits in the TDP
    MMU.  This isn't strictly required for correctness, as setting the dirty
    bit in a defunct SPTE will not change the SPTE from !PRESENT to PRESENT.
    However, the guarded MMU_WARN_ON() in spte_ad_need_write_protect() would
    complain if anyone actually turned on KVM's MMU debugging.
    
    Fixes: a6a0b05da9f3 ("kvm: x86/mmu: Support dirty logging for the TDP MMU")
    Cc: Ben Gardon <bgardon@google.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Ben Gardon <bgardon@google.com>
    Message-Id: <20220226001546.360188-3-seanjc@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3ad4530088d825251253d44d5d7d26ef015b58c
Author: Matt Kramer <mccleetus@gmail.com>
Date:   Tue Mar 22 13:48:17 2022 -0700

    ALSA: hda/realtek: Add alc256-samsung-headphone fixup
    
    [ Upstream commit ef248d9bd616b04df8be25539a4dc5db4b6c56f4 ]
    
    This fixes the near-silence of the headphone jack on the ALC256-based
    Samsung Galaxy Book Flex Alpha (NP730QCJ). The magic verbs were found
    through trial and error, using known ALC298 hacks as inspiration. The
    fixup is auto-enabled only when the NP730QCJ is detected. It can be
    manually enabled using model=alc256-samsung-headphone.
    
    Signed-off-by: Matt Kramer <mccleetus@gmail.com>
    Link: https://lore.kernel.org/r/3168355.aeNJFYEL58@linus
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa2ad067cd74175cefcab5256593939635e3c528
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Mon Mar 14 18:11:38 2022 +0100

    media: atomisp: fix bad usage at error handling logic
    
    [ Upstream commit fc0b582c858ed73f94c8f3375c203ea46f1f7402 ]
    
    As warned by sparse:
            atomisp: drivers/staging/media/atomisp/pci/atomisp_acc.c:508 atomisp_acc_load_extensions() warn: iterator used outside loop: 'acc_fw'
    
    The acc_fw interactor is used outside the loop, at the error handling
    logic. On most cases, this is actually safe there, but, if
    atomisp_css_set_acc_parameters() has an error, an attempt to use it
    will pick an invalid value for acc_fw.
    
    Reported-by: Hans Verkuil <hverkuil@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2412a5d29411d404698a15cd2f2b965afd57acd6
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Thu Mar 3 17:51:42 2022 +0100

    mmc: host: Return an error when ->enable_sdio_irq() ops is missing
    
    [ Upstream commit d6c9219ca1139b74541b2a98cee47a3426d754a9 ]
    
    Even if the current WARN() notifies the user that something is severely
    wrong, we can still end up in a PANIC() when trying to invoke the missing
    ->enable_sdio_irq() ops. Therefore, let's also return an error code and
    prevent the host from being added.
    
    While at it, move the code into a separate function to prepare for
    subsequent changes and for further host caps validations.
    
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Link: https://lore.kernel.org/r/20220303165142.129745-1-ulf.hansson@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 808990afd855e5ea64e91cd080f8cd814fad6342
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Fri Feb 18 10:41:30 2022 +0100

    media: hdpvr: initialize dev->worker at hdpvr_register_videodev
    
    [ Upstream commit 07922937e9a580825f9965c46fd15e23ba5754b6 ]
    
    hdpvr_register_videodev is responsible to initialize a worker in
    hdpvr_device. However, the worker is only initialized at
    hdpvr_start_streaming other than hdpvr_register_videodev.
    When hdpvr_probe does not initialize its worker, the hdpvr_disconnect
    will encounter one WARN in flush_work.The stack trace is as follows:
    
     hdpvr_disconnect+0xb8/0xf2 drivers/media/usb/hdpvr/hdpvr-core.c:425
     usb_unbind_interface+0xbf/0x3a0 drivers/usb/core/driver.c:458
     __device_release_driver drivers/base/dd.c:1206 [inline]
     device_release_driver_internal+0x22a/0x230 drivers/base/dd.c:1237
     bus_remove_device+0x108/0x160 drivers/base/bus.c:529
     device_del+0x1fe/0x510 drivers/base/core.c:3592
     usb_disable_device+0xd1/0x1d0 drivers/usb/core/message.c:1419
     usb_disconnect+0x109/0x330 drivers/usb/core/hub.c:2228
    
    Fix this by moving the initialization of dev->worker to the starting of
    hdpvr_register_videodev
    
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32582f82df2ba352050e8fb6e097088a84756d29
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Jan 20 20:37:30 2022 +0100

    media: Revert "media: em28xx: add missing em28xx_close_extension"
    
    [ Upstream commit fde18c3bac3f964d8333ae53b304d8fee430502b ]
    
    This reverts commit 2c98b8a3458df03abdc6945bbef67ef91d181938.
    
    Reverted patch causes problems with Hauppauge WinTV dualHD as Maximilian
    reported [1]. Since quick solution didn't come up let's just revert it
    to make this device work with upstream kernels.
    
    Link: https://lore.kernel.org/all/6a72a37b-e972-187d-0322-16336e12bdc5@elbmurf.de/ [1]
    
    Reported-by: Maximilian Böhm <maximilian.boehm@elbmurf.de>
    Tested-by: Maximilian Böhm <maximilian.boehm@elbmurf.de>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1c28577529cdfad40c8242673285f1e1e4c314e
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Mar 2 22:33:11 2022 +0800

    video: fbdev: sm712fb: Fix crash in smtcfb_write()
    
    [ Upstream commit 4f01d09b2bbfbcb47b3eb305560a7f4857a32260 ]
    
    When the sm712fb driver writes three bytes to the framebuffer, the
    driver will crash:
    
        BUG: unable to handle page fault for address: ffffc90001ffffff
        RIP: 0010:smtcfb_write+0x454/0x5b0
        Call Trace:
         vfs_write+0x291/0xd60
         ? do_sys_openat2+0x27d/0x350
         ? __fget_light+0x54/0x340
         ksys_write+0xce/0x190
         do_syscall_64+0x43/0x90
         entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fix it by removing the open-coded endianness fixup-code.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7bb29df2a149f466c660209ea1aa3783b3e0e1c
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Jul 26 22:01:58 2021 +0200

    ARM: mmp: Fix failure to remove sram device
    
    [ Upstream commit 4036b29a146b2749af3bb213b003eb69f3e5ecc4 ]
    
    Make sure in .probe() to set driver data before the function is left to
    make it possible in .remove() to undo the actions done.
    
    This fixes a potential memory leak and stops returning an error code in
    .remove() that is ignored by the driver core anyhow.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit add823a9a5e2a206c313ab8afbd026d558a4c4e0
Author: Richard Leitner <richard.leitner@skidata.com>
Date:   Wed Dec 1 17:11:48 2021 +0100

    ARM: tegra: tamonten: Fix I2C3 pad setting
    
    [ Upstream commit 0092c25b541a5422d7e71892a13c55ee91abc34b ]
    
    This patch fixes the tristate configuration for i2c3 function assigned
    to the dtf pins on the Tamonten Tegra20 SoM.
    
    Signed-off-by: Richard Leitner <richard.leitner@skidata.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08ec8450f3e5bffd1920d10842857c7de05576a0
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Feb 16 13:48:06 2022 +0100

    lib/test_lockup: fix kernel pointer check for separate address spaces
    
    [ Upstream commit 5a06fcb15b43d1f7bf740c672950122331cb5655 ]
    
    test_kernel_ptr() uses access_ok() to figure out if a given address
    points to user space instead of kernel space. However on architectures
    that set CONFIG_ALTERNATE_USER_ADDRESS_SPACE, a pointer can be valid
    for both, and the check always fails because access_ok() returns true.
    
    Make the check for user space pointers conditional on the type of
    address space layout.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40a5c93a747389de01ee7195c414cb424710ea6f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Feb 14 20:22:10 2022 +0100

    uaccess: fix type mismatch warnings from access_ok()
    
    [ Upstream commit 23fc539e81295b14b50c6ccc5baeb4f3d59d822d ]
    
    On some architectures, access_ok() does not do any argument type
    checking, so replacing the definition with a generic one causes
    a few warnings for harmless issues that were never caught before.
    
    Fix the ones that I found either through my own test builds or
    that were reported by the 0-day bot.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a49b687a75d2d42301ec9a5fda356750827900e7
Author: Daniel González Cabanelas <dgcbueu@gmail.com>
Date:   Sun Feb 20 19:19:50 2022 +0100

    media: cx88-mpeg: clear interrupt status register before streaming video
    
    [ Upstream commit 56cb61f70e547e1b0cdfe6ff5a1f1ce6242e6d96 ]
    
    Some cx88 video cards may have transport stream status interrupts set
    to 1 from cold start, causing errors like this:
    
      cx88xx: cx88_print_irqbits: core:irq mpeg  [0x100000] ts_err?*
      cx8802: cx8802_mpeg_irq: mpeg:general errors: 0x00100000
    
    According to CX2388x datasheet, the interrupt status register should be
    cleared before enabling IRQs to stream video.
    
    Fix it by clearing the Transport Stream Interrupt Status register.
    
    Signed-off-by: Daniel González Cabanelas <dgcbueu@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 460635026801b286e88c6bf96431e3aa4fa56558
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Thu Feb 10 19:19:12 2022 +0800

    ASoC: soc-core: skip zero num_dai component in searching dai name
    
    [ Upstream commit f7d344a2bd5ec81fbd1ce76928fd059e57ec9bea ]
    
    In the case like dmaengine which's not a dai but as a component, the
    num_dai is zero, dmaengine component has the same component_of_node
    as cpu dai, when cpu dai component is not ready, but dmaengine component
    is ready, try to get cpu dai name, the snd_soc_get_dai_name() return
    -EINVAL, not -EPROBE_DEFER, that cause below error:
    
    asoc-simple-card <card name>: parse error -22
    asoc-simple-card: probe of <card name> failed with error -22
    
    The sound card failed to probe.
    
    So this patch fixes the issue above by skipping the zero num_dai
    component in searching dai name.
    
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1644491952-7457-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a840fc067e8c1d3cc5c497ee569fc17e33beba08
Author: Richard Schleich <rs@noreya.tech>
Date:   Tue Dec 21 23:48:30 2021 +0100

    ARM: dts: bcm2711: Add the missing L1/L2 cache information
    
    [ Upstream commit 618682b350990f8f1bee718949c4b3858711eb58 ]
    
    This patch fixes the kernel warning
    "cacheinfo: Unable to detect cache hierarchy for CPU 0"
    for the bcm2711 on newer kernel versions.
    
    Signed-off-by: Richard Schleich <rs@noreya.tech>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    [florian: Align and remove comments matching property values]
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 681a317034b214c30177162235690a401158cf43
Author: Jing Yao <yao.jing2@zte.com.cn>
Date:   Thu Nov 4 11:52:29 2021 +0000

    video: fbdev: udlfb: replace snprintf in show functions with sysfs_emit
    
    [ Upstream commit 81a998288956d09d7a7a2303d47e4d60ad55c401 ]
    
    Use sysfs_emit instead of scnprintf, snprintf or sprintf.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Jing Yao <yao.jing2@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7c624abf694e9f8d13f50fd13e3d9c081416031
Author: Jing Yao <yao.jing2@zte.com.cn>
Date:   Fri Nov 5 08:20:44 2021 +0000

    video: fbdev: omapfb: panel-tpo-td043mtea1: Use sysfs_emit() instead of snprintf()
    
    [ Upstream commit c07a039cbb96748f54c02995bae8131cc9a73b0a ]
    
    Use sysfs_emit instead of scnprintf, snprintf or sprintf.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Jing Yao <yao.jing2@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 543dae0a46b02ef9016d21099ea23b07dbd06ef5
Author: Jing Yao <yao.jing2@zte.com.cn>
Date:   Fri Nov 5 08:13:33 2021 +0000

    video: fbdev: omapfb: panel-dsi-cm: Use sysfs_emit() instead of snprintf()
    
    [ Upstream commit f63658a59c3d439c8ad7b290f8ec270980e0f384 ]
    
    Use sysfs_emit instead of scnprintf, snprintf or sprintf.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Jing Yao <yao.jing2@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 910715c4b494b91fb5c0b83d399e06c6752da92a
Author: Marcel Ziswiler <marcel.ziswiler@toradex.com>
Date:   Fri Jan 28 17:00:56 2022 +0100

    arm64: defconfig: build imx-sdma as a module
    
    [ Upstream commit e95622289f263662240544a9f0009b25c19e64d4 ]
    
    This avoids firmware load error and sysfs fallback reported as follows:
    
    [    0.199448] imx-sdma 302c0000.dma-controller: Direct firmware load
     for imx/sdma/sdma-imx7d.bin failed with error -2
    [    0.199487] imx-sdma 302c0000.dma-controller: Falling back to sysfs
     fallback for: imx/sdma/sdma-imx7d.bin
    
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14df2556a190583125a001dd9cfa57c8a5c10b8b
Author: Abel Vesa <abel.vesa@nxp.com>
Date:   Thu Jan 27 16:10:51 2022 +0200

    ARM: dts: imx7: Use audio_mclk_post_div instead audio_mclk_root_clk
    
    [ Upstream commit 4cb7df64c732b2b9918424095c11660c2a8c4a33 ]
    
    The audio_mclk_root_clk was added as a gate with the CCGR121 (0x4790),
    but according to the reference manual, there is no such gate. Moreover,
    the consumer driver of the mentioned clock might gate it and leave
    the ECSPI2 (the true owner of that gate) hanging. So lets use the
    audio_mclk_post_div, which is the parent.
    
    Signed-off-by: Abel Vesa <abel.vesa@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c241cfd0a55f2d3f3fde158e4c5d17544f01e992
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Sun Jan 23 20:18:33 2022 +0100

    ARM: ftrace: avoid redundant loads or clobbering IP
    
    [ Upstream commit d11967870815b5ab89843980e35aab616c97c463 ]
    
    Tweak the ftrace return paths to avoid redundant loads of SP, as well as
    unnecessary clobbering of IP.
    
    This also fixes the inconsistency of using MOV to perform a function
    return, which is sub-optimal on recent micro-architectures but more
    importantly, does not perform an interworking return, unlike compiler
    generated function returns in Thumb2 builds.
    
    Let's fix this by popping PC from the stack like most ordinary code
    does.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41082d6432e5d8cfaaa49a3864c88a16535f8e95
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Sun Oct 17 18:23:33 2021 +0200

    media: atomisp: fix dummy_ptr check to avoid duplicate active_bo
    
    [ Upstream commit 127efdbc51fe6064336c0452ce9c910b3e107cf0 ]
    
    The dummy_ptr check in hmm_init() [1] results in the following
    "hmm_init Failed to create sysfs" error exactly once every
    two times on atomisp reload by rmmod/insmod (although atomisp module
    loads and works fine regardless of this error):
    
            [  140.230662] sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:03.0/active_bo'
            [  140.230668] CPU: 1 PID: 2502 Comm: insmod Tainted: G         C OE     5.15.0-rc4-1-surface-mainline #1 b8acf6eb64994414b2e20bad312a7a2c45f748f9
            [  140.230675] Hardware name: OEMB OEMB/OEMB, BIOS 1.51116.238 03/09/2015
            [  140.230678] Call Trace:
            [  140.230687]  dump_stack_lvl+0x46/0x5a
            [  140.230702]  sysfs_warn_dup.cold+0x17/0x24
            [  140.230710]  sysfs_add_file_mode_ns+0x160/0x170
            [  140.230717]  internal_create_group+0x126/0x390
            [  140.230723]  hmm_init+0x5c/0x70 [atomisp 7a6a680bf400629363d2a6f58fd10e7299678b99]
            [  140.230811]  atomisp_pci_probe.cold+0x1136/0x148e [atomisp 7a6a680bf400629363d2a6f58fd10e7299678b99]
            [  140.230875]  local_pci_probe+0x45/0x80
            [  140.230882]  ? pci_match_device+0xd7/0x130
            [  140.230887]  pci_device_probe+0xfa/0x1b0
            [  140.230892]  really_probe+0x1f5/0x3f0
            [  140.230899]  __driver_probe_device+0xfe/0x180
            [  140.230903]  driver_probe_device+0x1e/0x90
            [  140.230908]  __driver_attach+0xc0/0x1c0
            [  140.230912]  ? __device_attach_driver+0xe0/0xe0
            [  140.230915]  ? __device_attach_driver+0xe0/0xe0
            [  140.230919]  bus_for_each_dev+0x89/0xd0
            [  140.230924]  bus_add_driver+0x12b/0x1e0
            [  140.230929]  driver_register+0x8f/0xe0
            [  140.230933]  ? 0xffffffffc153f000
            [  140.230937]  do_one_initcall+0x57/0x220
            [  140.230945]  do_init_module+0x5c/0x260
            [  140.230952]  load_module+0x24bd/0x26a0
            [  140.230962]  ? __do_sys_finit_module+0xae/0x110
            [  140.230966]  __do_sys_finit_module+0xae/0x110
            [  140.230972]  do_syscall_64+0x5c/0x80
            [  140.230979]  ? syscall_exit_to_user_mode+0x23/0x40
            [  140.230983]  ? do_syscall_64+0x69/0x80
            [  140.230988]  ? exc_page_fault+0x72/0x170
            [  140.230991]  entry_SYSCALL_64_after_hwframe+0x44/0xae
            [  140.230997] RIP: 0033:0x7f7fd5d8718d
            [  140.231003] Code: b4 0c 00 0f 05 eb a9 66 0f 1f 44 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d b3 6c 0c 00 f7 d8 64 89 01 48
            [  140.231006] RSP: 002b:00007ffefc25f0e8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
            [  140.231012] RAX: ffffffffffffffda RBX: 000055ac3edcd7f0 RCX: 00007f7fd5d8718d
            [  140.231015] RDX: 0000000000000000 RSI: 000055ac3d723270 RDI: 0000000000000003
            [  140.231017] RBP: 0000000000000000 R08: 0000000000000000 R09: 00007f7fd5e52380
            [  140.231019] R10: 0000000000000003 R11: 0000000000000246 R12: 000055ac3d723270
            [  140.231021] R13: 0000000000000000 R14: 000055ac3edd06e0 R15: 0000000000000000
            [  140.231038] atomisp-isp2 0000:00:03.0: hmm_init Failed to create sysfs
    
    The problem is that dummy_ptr == 0 is a valid value. So, change the logic
    which checks if dummy_ptr was allocated.
    
    At this point, atomisp now gives WARN_ON() in hmm_free() [2] on atomisp
    reload by rmmod/insmod. Again, the check is wrong there.
    
    So, change both checks for mmgr_EXCEPTION, which is the error value when
    HMM allocation fails, and initialize dummy_ptr with such value.
    
    [1] added on commit
        d9ab83953fa7 ("media: atomisp: don't cause a warn if probe failed")
    [2] added on commit
        b83cc378dfc4 ("atomisp: clean up the hmm init/cleanup indirections")
    
    Link: https://lore.kernel.org/linux-media/20211017162337.44860-3-kitakar@gmail.com
    
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Co-developed-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b554196e6d390af5d249be11cd86aa0ecf5bc0a9
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jan 16 22:52:04 2022 +0100

    media: atomisp_gmin_platform: Add DMI quirk to not turn AXP ELDO2 regulator off on some boards
    
    [ Upstream commit 2c39a01154ea57d596470afa1d278e3be3b37f6a ]
    
    The TrekStor SurfTab duo W1 10.1 has a hw bug where turning eldo2 back on
    after having turned it off causes the CPLM3218 ambient-light-sensor on
    the front camera sensor's I2C bus to crash, hanging the bus.
    
    Add a DMI quirk table for systems on which to leave eldo2 on.
    
    Note an alternative fix is to turn off the CPLM3218 ambient-light-sensor
    as long as the camera sensor is being used, this is what Windows seems
    to do as a workaround (based on analyzing the DSDT). But that is not
    easy to do cleanly under Linux.
    
    Link: https://lore.kernel.org/linux-media/20220116215204.307649-10-hdegoede@redhat.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 370b50492e54c1a442ecf699cbd2048ffbf513f1
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Thu Feb 3 11:50:25 2022 +0000

    ASoC: madera: Add dependencies on MFD
    
    [ Upstream commit ec29170c724ca30305fc3a19ba2ee73ecac65509 ]
    
    The Madera CODECs use regmap_irq functions but nothing ensures that
    regmap_irq is built into the kernel. Add dependencies on the ASoC
    symbols for the relevant MFD component. There is no point in building
    the ASoC driver if the MFD doesn't support it and the MFD part contains
    the necessary dependencies to ensure everything is built into the
    kernel.
    
    Reported-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20220203115025.16464-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0020667edc06b5464ceaf82d478c80582250354a
Author: Richard Schleich <rs@noreya.tech>
Date:   Sat Dec 18 21:00:09 2021 +0100

    ARM: dts: bcm2837: Add the missing L1/L2 cache information
    
    [ Upstream commit bdf8762da268d2a34abf517c36528413906e9cd5 ]
    
    This patch fixes the kernel warning
    "cacheinfo: Unable to detect cache hierarchy for CPU 0"
    for the bcm2837 on newer kernel versions.
    
    Signed-off-by: Richard Schleich <rs@noreya.tech>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    [florian: Align and remove comments matching property values]
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f040c0810291ec2fee9b2d5445f96c7eb24d9a7d
Author: David Heidelberg <david@ixit.cz>
Date:   Sat Jan 8 18:42:28 2022 +0100

    ARM: dts: qcom: fix gic_irq_domain_translate warnings for msm8960
    
    [ Upstream commit 6f7e221e7a5cfc3299616543fce42b36e631497b ]
    
    IRQ types blindly copied from very similar APQ8064.
    
    Fixes warnings as:
    WARNING: CPU: 0 PID: 1 at drivers/irqchip/irq-gic.c:1080 gic_irq_domain_translate+0x118/0x120
    ...
    
    Tested-by: LogicalErzor <logicalerzor@gmail.com> # boot-tested on Samsung S3
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220108174229.60384-1-david@ixit.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da210b1b551c5f44ea255b18ed6ca103847801f3
Author: Yang Guang <yang.guang5@zte.com.cn>
Date:   Tue Nov 30 08:06:03 2021 +0800

    video: fbdev: omapfb: acx565akm: replace snprintf with sysfs_emit
    
    [ Upstream commit 24565bc4115961db7ee64fcc7ad2a7437c0d0a49 ]
    
    coccinelle report:
    ./drivers/video/fbdev/omap2/omapfb/displays/panel-sony-acx565akm.c:
    479:9-17: WARNING: use scnprintf or sprintf
    
    Use sysfs_emit instead of scnprintf or sprintf makes more sense.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Yang Guang <yang.guang5@zte.com.cn>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c7e2141fb89c620ab4e41512e262fbf25b8260d
Author: George Kennedy <george.kennedy@oracle.com>
Date:   Wed Oct 27 15:30:13 2021 -0500

    video: fbdev: cirrusfb: check pixclock to avoid divide by zero
    
    [ Upstream commit 5c6f402bdcf9e7239c6bc7087eda71ac99b31379 ]
    
    Do a sanity check on pixclock value to avoid divide by zero.
    
    If the pixclock value is zero, the cirrusfb driver will round up
    pixclock to get the derived frequency as close to maxclock as
    possible.
    
    Syzkaller reported a divide error in cirrusfb_check_pixclock.
    
    divide error: 0000 [#1] SMP KASAN PTI
    CPU: 0 PID: 14938 Comm: cirrusfb_test Not tainted 5.15.0-rc6 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2
    RIP: 0010:cirrusfb_check_var+0x6f1/0x1260
    
    Call Trace:
     fb_set_var+0x398/0xf90
     do_fb_ioctl+0x4b8/0x6f0
     fb_ioctl+0xeb/0x130
     __x64_sys_ioctl+0x19d/0x220
     do_syscall_64+0x3a/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: George Kennedy <george.kennedy@oracle.com>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e33f197468fbf3fb92b170860681ddb2d4fadeb
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Wed Aug 11 19:58:26 2021 +0300

    video: fbdev: w100fb: Reset global state
    
    [ Upstream commit 8738ddcac644964ae128ccd3d80d48773c8d528e ]
    
    w100fb_probe() did not reset the global state to its initial state. This
    can result in invocation of iounmap() even when there was not the
    appropriate successful call of ioremap(). For instance, this may be the
    case if first probe fails after two successful ioremap() while second
    probe fails when first ioremap() fails. The similar issue is with
    w100fb_remove(). The patch fixes both bugs.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Co-developed-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Signed-off-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08dff482012758935c185532b1ad7d584785a86e
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Mon Sep 27 09:45:02 2021 -0600

    video: fbdev: nvidiafb: Use strscpy() to prevent buffer overflow
    
    [ Upstream commit 37a1a2e6eeeb101285cd34e12e48a881524701aa ]
    
    Coverity complains of a possible buffer overflow. However,
    given the 'static' scope of nvidia_setup_i2c_bus() it looks
    like that can't happen after examiniing the call sites.
    
    CID 19036 (#1 of 1): Copy into fixed size buffer (STRING_OVERFLOW)
    1. fixed_size_dest: You might overrun the 48-character fixed-size string
      chan->adapter.name by copying name without checking the length.
    2. parameter_as_source: Note: This defect has an elevated risk because the
      source argument is a parameter of the current function.
     89        strcpy(chan->adapter.name, name);
    
    Fix this warning by using strscpy() which will silence the warning and
    prevent any future buffer overflows should the names used to identify the
    channel become much longer.
    
    Cc: Antonino Daplas <adaplas@gmail.com>
    Cc: linux-fbdev@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99e3f83539cac6884a4df02cb204a57a184ea12b
Author: Peiwei Hu <jlu.hpw@foxmail.com>
Date:   Wed Dec 29 02:15:18 2021 +0100

    media: ir_toy: free before error exiting
    
    [ Upstream commit 52cdb013036391d9d87aba5b4fc49cdfc6ea4b23 ]
    
    Fix leak in error path.
    
    Signed-off-by: Peiwei Hu <jlu.hpw@foxmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d658178b5ac2cc2bbf7507cb786d6581c9a42a1c
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Tue Dec 14 17:16:33 2021 +0100

    media: staging: media: zoran: fix various V4L2 compliance errors
    
    [ Upstream commit 914941827aad5ecddf9bf3a6dee67fbec1af1fff ]
    
    This fixes several issues found with 'v4l2-compliance -s':
    
    1) read()/write() is supported, but not reported in the capabilities
    2) S_STD(G_STD()) failed: setting the same standard should just return 0.
    3) G_PARM failed to set readbuffers.
    4) different field values in the format vs. what v4l2_buffer reported.
    5) zero the sequence number when starting streaming.
    6) drop VB_USERPTR: makes no sense with dma_contig streaming.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bafec1a6ba4b187a7fcdcfce0faebdc623d4ef8e
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Dec 14 17:16:32 2021 +0100

    media: staging: media: zoran: calculate the right buffer number for zoran_reap_stat_com
    
    [ Upstream commit e3b86f4e558cea9eed71d894df2f19b10d60a207 ]
    
    On the case tmp_dcim=1, the index of buffer is miscalculated.
    This generate a NULL pointer dereference later.
    
    So let's fix the calcul and add a check to prevent this to reappear.
    
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd01629315ffd5b63da91d0bd529a77d30e55028
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Dec 14 17:16:26 2021 +0100

    media: staging: media: zoran: move videodev alloc
    
    [ Upstream commit 82e3a496eb56da0b9f29fdc5b63cedb3289e91de ]
    
    Move some code out of zr36057_init() and create new functions for handling
    zr->video_dev. This permit to ease code reading and fix a zr->video_dev
    memory leak.
    
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b230f2d9441a34c7f483d39ab78519bcf73cc2e0
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Tue Mar 22 14:38:39 2022 -0700

    ntfs: add sanity check on allocation size
    
    [ Upstream commit 714fbf2647b1a33d914edd695d4da92029c7e7c0 ]
    
    ntfs_read_inode_mount invokes ntfs_malloc_nofs with zero allocation
    size.  It triggers one BUG in the __ntfs_malloc function.
    
    Fix this by adding sanity check on ni->attr_list_size.
    
    Link: https://lkml.kernel.org/r/20220120094914.47736-1-dzm91@hust.edu.cn
    Reported-by: syzbot+3c765c5248797356edaa@syzkaller.appspotmail.com
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Acked-by: Anton Altaparmakov <anton@tuxera.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7e8aff062629b5a126ae8d2501ccd6a643d3498
Author: Chao Yu <chao@kernel.org>
Date:   Wed Mar 16 18:20:00 2022 +0800

    f2fs: compress: fix to print raw data size in error path of lz4 decompression
    
    [ Upstream commit d284af43f703760e261b1601378a0c13a19d5f1f ]
    
    In lz4_decompress_pages(), if size of decompressed data is not equal to
    expected one, we should print the size rather than size of target buffer
    for decompressed data, fix it.
    
    Signed-off-by: Chao Yu <chao.yu@oppo.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d91d1e681c999de65809025ac86915e9cd1f52cf
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Feb 14 15:30:13 2022 -0500

    NFSD: Fix nfsd_breaker_owns_lease() return values
    
    [ Upstream commit 50719bf3442dd6cd05159e9c98d020b3919ce978 ]
    
    These have been incorrect since the function was introduced.
    
    A proper kerneldoc comment is added since this function, though
    static, is part of an external interface.
    
    Reported-by: Dai Ngo <dai.ngo@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 498b7088db71f9707359448cd6800bbb1882f4c3
Author: Chao Yu <chao@kernel.org>
Date:   Fri Mar 4 09:49:13 2022 +0800

    f2fs: fix to do sanity check on curseg->alloc_type
    
    [ Upstream commit f41ee8b91c00770d718be2ff4852a80017ae9ab3 ]
    
    As Wenqing Liu reported in bugzilla:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=215657
    
    - Overview
    UBSAN: array-index-out-of-bounds in fs/f2fs/segment.c:3460:2 when mount and operate a corrupted image
    
    - Reproduce
    tested on kernel 5.17-rc4, 5.17-rc6
    
    1. mkdir test_crash
    2. cd test_crash
    3. unzip tmp2.zip
    4. mkdir mnt
    5. ./single_test.sh f2fs 2
    
    - Kernel dump
    [   46.434454] loop0: detected capacity change from 0 to 131072
    [   46.529839] F2FS-fs (loop0): Mounted with checkpoint version = 7548c2d9
    [   46.738319] ================================================================================
    [   46.738412] UBSAN: array-index-out-of-bounds in fs/f2fs/segment.c:3460:2
    [   46.738475] index 231 is out of range for type 'unsigned int [2]'
    [   46.738539] CPU: 2 PID: 939 Comm: umount Not tainted 5.17.0-rc6 #1
    [   46.738547] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    [   46.738551] Call Trace:
    [   46.738556]  <TASK>
    [   46.738563]  dump_stack_lvl+0x47/0x5c
    [   46.738581]  ubsan_epilogue+0x5/0x50
    [   46.738592]  __ubsan_handle_out_of_bounds+0x68/0x80
    [   46.738604]  f2fs_allocate_data_block+0xdff/0xe60 [f2fs]
    [   46.738819]  do_write_page+0xef/0x210 [f2fs]
    [   46.738934]  f2fs_do_write_node_page+0x3f/0x80 [f2fs]
    [   46.739038]  __write_node_page+0x2b7/0x920 [f2fs]
    [   46.739162]  f2fs_sync_node_pages+0x943/0xb00 [f2fs]
    [   46.739293]  f2fs_write_checkpoint+0x7bb/0x1030 [f2fs]
    [   46.739405]  kill_f2fs_super+0x125/0x150 [f2fs]
    [   46.739507]  deactivate_locked_super+0x60/0xc0
    [   46.739517]  deactivate_super+0x70/0xb0
    [   46.739524]  cleanup_mnt+0x11a/0x200
    [   46.739532]  __cleanup_mnt+0x16/0x20
    [   46.739538]  task_work_run+0x67/0xa0
    [   46.739547]  exit_to_user_mode_prepare+0x18c/0x1a0
    [   46.739559]  syscall_exit_to_user_mode+0x26/0x40
    [   46.739568]  do_syscall_64+0x46/0xb0
    [   46.739584]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    The root cause is we missed to do sanity check on curseg->alloc_type,
    result in out-of-bound accessing on sbi->block_count[] array, fix it.
    
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 330d0e44fc5a47c27df958ecdd4693a3cb1d8b81
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Mar 3 09:38:47 2022 -0500

    ext4: don't BUG if someone dirty pages without asking ext4 first
    
    [ Upstream commit cc5095747edfb054ca2068d01af20be3fcc3634f ]
    
    [un]pin_user_pages_remote is dirtying pages without properly warning
    the file system in advance.  A related race was noted by Jan Kara in
    2018[1]; however, more recently instead of it being a very hard-to-hit
    race, it could be reliably triggered by process_vm_writev(2) which was
    discovered by Syzbot[2].
    
    This is technically a bug in mm/gup.c, but arguably ext4 is fragile in
    that if some other kernel subsystem dirty pages without properly
    notifying the file system using page_mkwrite(), ext4 will BUG, while
    other file systems will not BUG (although data will still be lost).
    
    So instead of crashing with a BUG, issue a warning (since there may be
    potential data loss) and just mark the page as clean to avoid
    unprivileged denial of service attacks until the problem can be
    properly fixed.  More discussion and background can be found in the
    thread starting at [2].
    
    [1] https://lore.kernel.org/linux-mm/20180103100430.GE4911@quack2.suse.cz
    [2] https://lore.kernel.org/r/Yg0m6IjcNmfaSokM@google.com
    
    Reported-by: syzbot+d59332e2db681cf18f0318a06e994ebbb529a8db@syzkaller.appspotmail.com
    Reported-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/YiDS9wVfq4mM2jGK@mit.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd6d719534af993210306f8a13f9cb3e615f7c8d
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Wed Feb 16 12:32:44 2022 +0530

    ext4: fix ext4_mb_mark_bb() with flex_bg with fast_commit
    
    [ Upstream commit bfdc502a4a4c058bf4cbb1df0c297761d528f54d ]
    
    In case of flex_bg feature (which is by default enabled), extents for
    any given inode might span across blocks from two different block group.
    ext4_mb_mark_bb() only reads the buffer_head of block bitmap once for the
    starting block group, but it fails to read it again when the extent length
    boundary overflows to another block group. Then in this below loop it
    accesses memory beyond the block group bitmap buffer_head and results
    into a data abort.
    
            for (i = 0; i < clen; i++)
                    if (!mb_test_bit(blkoff + i, bitmap_bh->b_data) == !state)
                            already++;
    
    This patch adds this functionality for checking block group boundary in
    ext4_mb_mark_bb() and update the buffer_head(bitmap_bh) for every different
    block group.
    
    w/o this patch, I was easily able to hit a data access abort using Power platform.
    
    <...>
    [   74.327662] EXT4-fs error (device loop3): ext4_mb_generate_buddy:1141: group 11, block bitmap and bg descriptor inconsistent: 21248 vs 23294 free clusters
    [   74.533214] EXT4-fs (loop3): shut down requested (2)
    [   74.536705] Aborting journal on device loop3-8.
    [   74.702705] BUG: Unable to handle kernel data access on read at 0xc00000005e980000
    [   74.703727] Faulting instruction address: 0xc0000000007bffb8
    cpu 0xd: Vector: 300 (Data Access) at [c000000015db7060]
        pc: c0000000007bffb8: ext4_mb_mark_bb+0x198/0x5a0
        lr: c0000000007bfeec: ext4_mb_mark_bb+0xcc/0x5a0
        sp: c000000015db7300
       msr: 800000000280b033
       dar: c00000005e980000
     dsisr: 40000000
      current = 0xc000000027af6880
      paca    = 0xc00000003ffd5200   irqmask: 0x03   irq_happened: 0x01
        pid   = 5167, comm = mount
    <...>
    enter ? for help
    [c000000015db7380] c000000000782708 ext4_ext_clear_bb+0x378/0x410
    [c000000015db7400] c000000000813f14 ext4_fc_replay+0x1794/0x2000
    [c000000015db7580] c000000000833f7c do_one_pass+0xe9c/0x12a0
    [c000000015db7710] c000000000834504 jbd2_journal_recover+0x184/0x2d0
    [c000000015db77c0] c000000000841398 jbd2_journal_load+0x188/0x4a0
    [c000000015db7880] c000000000804de8 ext4_fill_super+0x2638/0x3e10
    [c000000015db7a40] c0000000005f8404 get_tree_bdev+0x2b4/0x350
    [c000000015db7ae0] c0000000007ef058 ext4_get_tree+0x28/0x40
    [c000000015db7b00] c0000000005f6344 vfs_get_tree+0x44/0x100
    [c000000015db7b70] c00000000063c408 path_mount+0xdd8/0xe70
    [c000000015db7c40] c00000000063c8f0 sys_mount+0x450/0x550
    [c000000015db7d50] c000000000035770 system_call_exception+0x4a0/0x4e0
    [c000000015db7e10] c00000000000c74c system_call_common+0xec/0x250
    
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/2609bc8f66fc15870616ee416a18a3d392a209c4.1644992609.git.riteshh@linux.ibm.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69d2421b5527609387998d76cabd8d700c2f23c1
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Wed Feb 16 12:32:43 2022 +0530

    ext4: correct cluster len and clusters changed accounting in ext4_mb_mark_bb
    
    [ Upstream commit a5c0e2fdf7cea535ba03259894dc184e5a4c2800 ]
    
    ext4_mb_mark_bb() currently wrongly calculates cluster len (clen) and
    flex_group->free_clusters. This patch fixes that.
    
    Identified based on code review of ext4_mb_mark_bb() function.
    
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/a0b035d536bafa88110b74456853774b64c8ac40.1644992609.git.riteshh@linux.ibm.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecd384c436fd57195a2d178d5b85ab7060e35866
Author: Waiman Long <longman@redhat.com>
Date:   Thu Feb 10 22:55:26 2022 -0500

    locking/lockdep: Iterate lock_classes directly when reading lockdep files
    
    [ Upstream commit fb7275acd6fb988313dddd8d3d19efa70d9015ad ]
    
    When dumping lock_classes information via /proc/lockdep, we can't take
    the lockdep lock as the lock hold time is indeterminate. Iterating
    over all_lock_classes without holding lock can be dangerous as there
    is a slight chance that it may branch off to other lists leading to
    infinite loop or even access invalid memory if changes are made to
    all_lock_classes list in parallel.
    
    To avoid this problem, iteration of lock classes is now done directly
    on the lock_classes array itself. The lock_classes_in_use bitmap is
    checked to see if the lock class is being used. To avoid iterating
    the full array all the times, a new max_lock_class_idx value is added
    to track the maximum lock_class index that is currently being used.
    
    We can theoretically take the lockdep lock for iterating all_lock_classes
    when other lockdep files (lockdep_stats and lock_stat) are accessed as
    the lock hold time will be shorter for them. For consistency, they are
    also modified to iterate the lock_classes array directly.
    
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20220211035526.1329503-2-longman@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ad817f1bd6242f10ae3d63acafed78956fd02f1
Author: Minghao Chi <chi.minghao@zte.com.cn>
Date:   Tue Mar 15 02:31:38 2022 +0000

    spi: tegra20: Use of_device_get_match_data()
    
    [ Upstream commit c9839acfcbe20ce43d363c2a9d0772472d9921c0 ]
    
    Use of_device_get_match_data() to simplify the code.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Minghao Chi <chi.minghao@zte.com.cn>
    Link: https://lore.kernel.org/r/20220315023138.2118293-1-chi.minghao@zte.com.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c200c8bce087fbc7c3a5b79bc9f547e05bfffe7
Author: Chris Leech <cleech@redhat.com>
Date:   Tue Feb 15 18:22:49 2022 -0800

    nvme-tcp: lockdep: annotate in-kernel sockets
    
    [ Upstream commit 841aee4d75f18fdfb53935080b03de0c65e9b92c ]
    
    Put NVMe/TCP sockets in their own class to avoid some lockdep warnings.
    Sockets created by nvme-tcp are not exposed to user-space, and will not
    trigger certain code paths that the general socket API exposes.
    
    Lockdep complains about a circular dependency between the socket and
    filesystem locks, because setsockopt can trigger a page fault with a
    socket lock held, but nvme-tcp sends requests on the socket while file
    system locks are held.
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.15.0-rc3 #1 Not tainted
      ------------------------------------------------------
      fio/1496 is trying to acquire lock:
      (sk_lock-AF_INET){+.+.}-{0:0}, at: tcp_sendpage+0x23/0x80
    
      but task is already holding lock:
      (&xfs_dir_ilock_class/5){+.+.}-{3:3}, at: xfs_ilock+0xcf/0x290 [xfs]
    
      which lock already depends on the new lock.
    
      other info that might help us debug this:
    
      chain exists of:
       sk_lock-AF_INET --> sb_internal --> &xfs_dir_ilock_class/5
    
      Possible unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(&xfs_dir_ilock_class/5);
                                    lock(sb_internal);
                                    lock(&xfs_dir_ilock_class/5);
       lock(sk_lock-AF_INET);
    
      *** DEADLOCK ***
    
      6 locks held by fio/1496:
       #0: (sb_writers#13){.+.+}-{0:0}, at: path_openat+0x9fc/0xa20
       #1: (&inode->i_sb->s_type->i_mutex_dir_key){++++}-{3:3}, at: path_openat+0x296/0xa20
       #2: (sb_internal){.+.+}-{0:0}, at: xfs_trans_alloc_icreate+0x41/0xd0 [xfs]
       #3: (&xfs_dir_ilock_class/5){+.+.}-{3:3}, at: xfs_ilock+0xcf/0x290 [xfs]
       #4: (hctx->srcu){....}-{0:0}, at: hctx_lock+0x51/0xd0
       #5: (&queue->send_mutex){+.+.}-{3:3}, at: nvme_tcp_queue_rq+0x33e/0x380 [nvme_tcp]
    
    This annotation lets lockdep analyze nvme-tcp controlled sockets
    independently of what the user-space sockets API does.
    
    Link: https://lore.kernel.org/linux-nvme/CAHj4cs9MDYLJ+q+2_GXUK9HxFizv2pxUryUR0toX974M040z7g@mail.gmail.com/
    
    Signed-off-by: Chris Leech <cleech@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e4967e913ab822ed16e352f2ada9ac83fa0290f
Author: John David Anglin <dave.anglin@bell.net>
Date:   Wed Mar 9 21:14:36 2022 +0000

    parisc: Fix handling off probe non-access faults
    
    [ Upstream commit e00b0a2ab8ec019c344e53bfc76e31c18bb587b7 ]
    
    Currently, the parisc kernel does not fully support non-access TLB
    fault handling for probe instructions. In the fast path, we set the
    target register to zero if it is not a shadowed register. The slow
    path is not implemented, so we call do_page_fault. The architecture
    indicates that non-access faults should not cause a page fault from
    disk.
    
    This change adds to code to provide non-access fault support for
    probe instructions. It also modifies the handling of faults on
    userspace so that if the address lies in a valid VMA and the access
    type matches that for the VMA, the probe target register is set to
    one. Otherwise, the target register is set to zero.
    
    This was done to make probe instructions more useful for userspace.
    Probe instructions are not very useful if they set the target register
    to zero whenever a page is not present in memory. Nominally, the
    purpose of the probe instruction is determine whether read or write
    access to a given address is allowed.
    
    This fixes a problem in function pointer comparison noticed in the
    glibc testsuite (stdio-common/tst-vfprintf-user-type). The same
    problem is likely in glibc (_dl_lookup_address).
    
    V2 adds flush and lpa instruction support to handle_nadtlb_fault.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ede1ef1a7de973321699736ef96d01a4b9a6fe9e
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sat Mar 5 14:02:14 2022 +0300

    PM: core: keep irq flags in device_pm_check_callbacks()
    
    [ Upstream commit 524bb1da785a7ae43dd413cd392b5071c6c367f8 ]
    
    The function device_pm_check_callbacks() can be called under the spin
    lock (in the reported case it happens from genpd_add_device() ->
    dev_pm_domain_set(), when the genpd uses spinlocks rather than mutexes.
    
    However this function uncoditionally uses spin_lock_irq() /
    spin_unlock_irq(), thus not preserving the CPU flags. Use the
    irqsave/irqrestore instead.
    
    The backtrace for the reference:
    [    2.752010] ------------[ cut here ]------------
    [    2.756769] raw_local_irq_restore() called with IRQs enabled
    [    2.762596] WARNING: CPU: 4 PID: 1 at kernel/locking/irqflag-debug.c:10 warn_bogus_irq_restore+0x34/0x50
    [    2.772338] Modules linked in:
    [    2.775487] CPU: 4 PID: 1 Comm: swapper/0 Tainted: G S                5.17.0-rc6-00384-ge330d0d82eff-dirty #684
    [    2.781384] Freeing initrd memory: 46024K
    [    2.785839] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [    2.785841] pc : warn_bogus_irq_restore+0x34/0x50
    [    2.785844] lr : warn_bogus_irq_restore+0x34/0x50
    [    2.785846] sp : ffff80000805b7d0
    [    2.785847] x29: ffff80000805b7d0 x28: 0000000000000000 x27: 0000000000000002
    [    2.785850] x26: ffffd40e80930b18 x25: ffff7ee2329192b8 x24: ffff7edfc9f60800
    [    2.785853] x23: ffffd40e80930b18 x22: ffffd40e80930d30 x21: ffff7edfc0dffa00
    [    2.785856] x20: ffff7edfc09e3768 x19: 0000000000000000 x18: ffffffffffffffff
    [    2.845775] x17: 6572206f74206465 x16: 6c696166203a3030 x15: ffff80008805b4f7
    [    2.853108] x14: 0000000000000000 x13: ffffd40e809550b0 x12: 00000000000003d8
    [    2.860441] x11: 0000000000000148 x10: ffffd40e809550b0 x9 : ffffd40e809550b0
    [    2.867774] x8 : 00000000ffffefff x7 : ffffd40e809ad0b0 x6 : ffffd40e809ad0b0
    [    2.875107] x5 : 000000000000bff4 x4 : 0000000000000000 x3 : 0000000000000000
    [    2.882440] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff7edfc03a8000
    [    2.889774] Call trace:
    [    2.892290]  warn_bogus_irq_restore+0x34/0x50
    [    2.896770]  _raw_spin_unlock_irqrestore+0x94/0xa0
    [    2.901690]  genpd_unlock_spin+0x20/0x30
    [    2.905724]  genpd_add_device+0x100/0x2d0
    [    2.909850]  __genpd_dev_pm_attach+0xa8/0x23c
    [    2.914329]  genpd_dev_pm_attach_by_id+0xc4/0x190
    [    2.919167]  genpd_dev_pm_attach_by_name+0x3c/0xd0
    [    2.924086]  dev_pm_domain_attach_by_name+0x24/0x30
    [    2.929102]  psci_dt_attach_cpu+0x24/0x90
    [    2.933230]  psci_cpuidle_probe+0x2d4/0x46c
    [    2.937534]  platform_probe+0x68/0xe0
    [    2.941304]  really_probe.part.0+0x9c/0x2fc
    [    2.945605]  __driver_probe_device+0x98/0x144
    [    2.950085]  driver_probe_device+0x44/0x15c
    [    2.954385]  __device_attach_driver+0xb8/0x120
    [    2.958950]  bus_for_each_drv+0x78/0xd0
    [    2.962896]  __device_attach+0xd8/0x180
    [    2.966843]  device_initial_probe+0x14/0x20
    [    2.971144]  bus_probe_device+0x9c/0xa4
    [    2.975092]  device_add+0x380/0x88c
    [    2.978679]  platform_device_add+0x114/0x234
    [    2.983067]  platform_device_register_full+0x100/0x190
    [    2.988344]  psci_idle_init+0x6c/0xb0
    [    2.992113]  do_one_initcall+0x74/0x3a0
    [    2.996060]  kernel_init_freeable+0x2fc/0x384
    [    3.000543]  kernel_init+0x28/0x130
    [    3.004132]  ret_from_fork+0x10/0x20
    [    3.007817] irq event stamp: 319826
    [    3.011404] hardirqs last  enabled at (319825): [<ffffd40e7eda0268>] __up_console_sem+0x78/0x84
    [    3.020332] hardirqs last disabled at (319826): [<ffffd40e7fd6d9d8>] el1_dbg+0x24/0x8c
    [    3.028458] softirqs last  enabled at (318312): [<ffffd40e7ec90410>] _stext+0x410/0x588
    [    3.036678] softirqs last disabled at (318299): [<ffffd40e7ed1bf68>] __irq_exit_rcu+0x158/0x174
    [    3.045607] ---[ end trace 0000000000000000 ]---
    
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 227718c8bbd5318ea660775f647d161531065cfe
Author: Darren Hart <darren@os.amperecomputing.com>
Date:   Tue Mar 8 10:50:48 2022 -0800

    ACPI/APEI: Limit printable size of BERT table data
    
    [ Upstream commit 3f8dec116210ca649163574ed5f8df1e3b837d07 ]
    
    Platforms with large BERT table data can trigger soft lockup errors
    while attempting to print the entire BERT table data to the console at
    boot:
    
      watchdog: BUG: soft lockup - CPU#160 stuck for 23s! [swapper/0:1]
    
    Observed on Ampere Altra systems with a single BERT record of ~250KB.
    
    The original bert driver appears to have assumed relatively small table
    data. Since it is impractical to reassemble large table data from
    interwoven console messages, and the table data is available in
    
      /sys/firmware/acpi/tables/data/BERT
    
    limit the size for tables printed to the console to 1024 (for no reason
    other than it seemed like a good place to kick off the discussion, would
    appreciate feedback from existing users in terms of what size would
    maintain their current usage model).
    
    Alternatively, we could make printing a CONFIG option, use the
    bert_disable boot arg (or something similar), or use a debug log level.
    However, all those solutions require extra steps or change the existing
    behavior for small table data. Limiting the size preserves existing
    behavior on existing platforms with small table data, and eliminates the
    soft lockups for platforms with large table data, while still making it
    available.
    
    Signed-off-by: Darren Hart <darren@os.amperecomputing.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc051f497eac9d8a0d816cd4bffa3415f2724871
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Thu Nov 25 19:15:10 2021 +0100

    Revert "Revert "block, bfq: honor already-setup queue merges""
    
    [ Upstream commit 15729ff8143f8135b03988a100a19e66d7cb7ecd ]
    
    A crash [1] happened to be triggered in conjunction with commit
    2d52c58b9c9b ("block, bfq: honor already-setup queue merges"). The
    latter was then reverted by commit ebc69e897e17 ("Revert "block, bfq:
    honor already-setup queue merges""). Yet, the reverted commit was not
    the one introducing the bug. In fact, it actually triggered a UAF
    introduced by a different commit, and now fixed by commit d29bd41428cf
    ("block, bfq: reset last_bfqq_created on group change").
    
    So, there is no point in keeping commit 2d52c58b9c9b ("block, bfq:
    honor already-setup queue merges") out. This commit restores it.
    
    [1] https://bugzilla.kernel.org/show_bug.cgi?id=214503
    
    Reported-by: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Link: https://lore.kernel.org/r/20211125181510.15004-1-paolo.valente@linaro.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b69302bfae38beeb6fe7ab600d8ddf6e0326930
Author: Paul Menzel <pmenzel@molgen.mpg.de>
Date:   Tue Feb 8 16:21:48 2022 +0100

    lib/raid6/test/Makefile: Use $(pound) instead of \# for Make 4.3
    
    [ Upstream commit 633174a7046ec3b4572bec24ef98e6ee89bce14b ]
    
    Buidling raid6test on Ubuntu 21.10 (ppc64le) with GNU Make 4.3 shows the
    errors below:
    
        $ cd lib/raid6/test/
        $ make
        <stdin>:1:1: error: stray ‘\’ in program
        <stdin>:1:2: error: stray ‘#’ in program
        <stdin>:1:11: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ \
            before ‘<’ token
    
        [...]
    
    The errors come from the HAS_ALTIVEC test, which fails, and the POWER
    optimized versions are not built. That’s also reason nobody noticed on the
    other architectures.
    
    GNU Make 4.3 does not remove the backslash anymore. From the 4.3 release
    announcment:
    
    > * WARNING: Backward-incompatibility!
    >   Number signs (#) appearing inside a macro reference or function invocation
    >   no longer introduce comments and should not be escaped with backslashes:
    >   thus a call such as:
    >     foo := $(shell echo '#')
    >   is legal.  Previously the number sign needed to be escaped, for example:
    >     foo := $(shell echo '\#')
    >   Now this latter will resolve to "\#".  If you want to write makefiles
    >   portable to both versions, assign the number sign to a variable:
    >     H := \#
    >     foo := $(shell echo '$H')
    >   This was claimed to be fixed in 3.81, but wasn't, for some reason.
    >   To detect this change search for 'nocomment' in the .FEATURES variable.
    
    So, do the same as commit 9564a8cf422d ("Kbuild: fix # escaping in .cmd
    files for future Make") and commit 929bef467771 ("bpf: Use $(pound) instead
    of \# in Makefiles") and define and use a $(pound) variable.
    
    Reference for the change in make:
    https://git.savannah.gnu.org/cgit/make.git/commit/?id=c6966b323811c37acedff05b57
    
    Cc: Matt Brown <matthew.brown.dev@gmail.com>
    Signed-off-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b87ce6a778eb8478e6fca5191bc4d9ff2361b08
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Mar 7 20:28:26 2022 +0100

    ACPICA: Avoid walking the ACPI Namespace if it is not there
    
    [ Upstream commit 0c9992315e738e7d6e927ef36839a466b080dba6 ]
    
    ACPICA commit b1c3656ef4950098e530be68d4b589584f06cddc
    
    Prevent acpi_ns_walk_namespace() from crashing when called with
    start_node equal to ACPI_ROOT_OBJECT if the Namespace has not been
    instantiated yet and acpi_gbl_root_node is NULL.
    
    For instance, this can happen if the kernel is run with "acpi=off"
    in the command line.
    
    Link: https://github.com/acpica/acpica/commit/b1c3656ef4950098e530be68d4b589584f06cddc
    Link: https://lore.kernel.org/linux-acpi/CAJZ5v0hJWW_vZ3wwajE7xT38aWjY7cZyvqMJpXHzUL98-SiCVQ@mail.gmail.com/
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df6e00b1a53c57dca82c63b5ecbcad5452231bc7
Author: Zhang Wensheng <zhangwensheng5@huawei.com>
Date:   Thu Mar 3 15:03:34 2022 +0800

    bfq: fix use-after-free in bfq_dispatch_request
    
    [ Upstream commit ab552fcb17cc9e4afe0e4ac4df95fc7b30e8490a ]
    
    KASAN reports a use-after-free report when doing normal scsi-mq test
    
    [69832.239032] ==================================================================
    [69832.241810] BUG: KASAN: use-after-free in bfq_dispatch_request+0x1045/0x44b0
    [69832.243267] Read of size 8 at addr ffff88802622ba88 by task kworker/3:1H/155
    [69832.244656]
    [69832.245007] CPU: 3 PID: 155 Comm: kworker/3:1H Not tainted 5.10.0-10295-g576c6382529e #8
    [69832.246626] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
    [69832.249069] Workqueue: kblockd blk_mq_run_work_fn
    [69832.250022] Call Trace:
    [69832.250541]  dump_stack+0x9b/0xce
    [69832.251232]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.252243]  print_address_description.constprop.6+0x3e/0x60
    [69832.253381]  ? __cpuidle_text_end+0x5/0x5
    [69832.254211]  ? vprintk_func+0x6b/0x120
    [69832.254994]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.255952]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.256914]  kasan_report.cold.9+0x22/0x3a
    [69832.257753]  ? bfq_dispatch_request+0x1045/0x44b0
    [69832.258755]  check_memory_region+0x1c1/0x1e0
    [69832.260248]  bfq_dispatch_request+0x1045/0x44b0
    [69832.261181]  ? bfq_bfqq_expire+0x2440/0x2440
    [69832.262032]  ? blk_mq_delay_run_hw_queues+0xf9/0x170
    [69832.263022]  __blk_mq_do_dispatch_sched+0x52f/0x830
    [69832.264011]  ? blk_mq_sched_request_inserted+0x100/0x100
    [69832.265101]  __blk_mq_sched_dispatch_requests+0x398/0x4f0
    [69832.266206]  ? blk_mq_do_dispatch_ctx+0x570/0x570
    [69832.267147]  ? __switch_to+0x5f4/0xee0
    [69832.267898]  blk_mq_sched_dispatch_requests+0xdf/0x140
    [69832.268946]  __blk_mq_run_hw_queue+0xc0/0x270
    [69832.269840]  blk_mq_run_work_fn+0x51/0x60
    [69832.278170]  process_one_work+0x6d4/0xfe0
    [69832.278984]  worker_thread+0x91/0xc80
    [69832.279726]  ? __kthread_parkme+0xb0/0x110
    [69832.280554]  ? process_one_work+0xfe0/0xfe0
    [69832.281414]  kthread+0x32d/0x3f0
    [69832.282082]  ? kthread_park+0x170/0x170
    [69832.282849]  ret_from_fork+0x1f/0x30
    [69832.283573]
    [69832.283886] Allocated by task 7725:
    [69832.284599]  kasan_save_stack+0x19/0x40
    [69832.285385]  __kasan_kmalloc.constprop.2+0xc1/0xd0
    [69832.286350]  kmem_cache_alloc_node+0x13f/0x460
    [69832.287237]  bfq_get_queue+0x3d4/0x1140
    [69832.287993]  bfq_get_bfqq_handle_split+0x103/0x510
    [69832.289015]  bfq_init_rq+0x337/0x2d50
    [69832.289749]  bfq_insert_requests+0x304/0x4e10
    [69832.290634]  blk_mq_sched_insert_requests+0x13e/0x390
    [69832.291629]  blk_mq_flush_plug_list+0x4b4/0x760
    [69832.292538]  blk_flush_plug_list+0x2c5/0x480
    [69832.293392]  io_schedule_prepare+0xb2/0xd0
    [69832.294209]  io_schedule_timeout+0x13/0x80
    [69832.295014]  wait_for_common_io.constprop.1+0x13c/0x270
    [69832.296137]  submit_bio_wait+0x103/0x1a0
    [69832.296932]  blkdev_issue_discard+0xe6/0x160
    [69832.297794]  blk_ioctl_discard+0x219/0x290
    [69832.298614]  blkdev_common_ioctl+0x50a/0x1750
    [69832.304715]  blkdev_ioctl+0x470/0x600
    [69832.305474]  block_ioctl+0xde/0x120
    [69832.306232]  vfs_ioctl+0x6c/0xc0
    [69832.306877]  __se_sys_ioctl+0x90/0xa0
    [69832.307629]  do_syscall_64+0x2d/0x40
    [69832.308362]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [69832.309382]
    [69832.309701] Freed by task 155:
    [69832.310328]  kasan_save_stack+0x19/0x40
    [69832.311121]  kasan_set_track+0x1c/0x30
    [69832.311868]  kasan_set_free_info+0x1b/0x30
    [69832.312699]  __kasan_slab_free+0x111/0x160
    [69832.313524]  kmem_cache_free+0x94/0x460
    [69832.314367]  bfq_put_queue+0x582/0x940
    [69832.315112]  __bfq_bfqd_reset_in_service+0x166/0x1d0
    [69832.317275]  bfq_bfqq_expire+0xb27/0x2440
    [69832.318084]  bfq_dispatch_request+0x697/0x44b0
    [69832.318991]  __blk_mq_do_dispatch_sched+0x52f/0x830
    [69832.319984]  __blk_mq_sched_dispatch_requests+0x398/0x4f0
    [69832.321087]  blk_mq_sched_dispatch_requests+0xdf/0x140
    [69832.322225]  __blk_mq_run_hw_queue+0xc0/0x270
    [69832.323114]  blk_mq_run_work_fn+0x51/0x60
    [69832.323942]  process_one_work+0x6d4/0xfe0
    [69832.324772]  worker_thread+0x91/0xc80
    [69832.325518]  kthread+0x32d/0x3f0
    [69832.326205]  ret_from_fork+0x1f/0x30
    [69832.326932]
    [69832.338297] The buggy address belongs to the object at ffff88802622b968
    [69832.338297]  which belongs to the cache bfq_queue of size 512
    [69832.340766] The buggy address is located 288 bytes inside of
    [69832.340766]  512-byte region [ffff88802622b968, ffff88802622bb68)
    [69832.343091] The buggy address belongs to the page:
    [69832.344097] page:ffffea0000988a00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88802622a528 pfn:0x26228
    [69832.346214] head:ffffea0000988a00 order:2 compound_mapcount:0 compound_pincount:0
    [69832.347719] flags: 0x1fffff80010200(slab|head)
    [69832.348625] raw: 001fffff80010200 ffffea0000dbac08 ffff888017a57650 ffff8880179fe840
    [69832.354972] raw: ffff88802622a528 0000000000120008 00000001ffffffff 0000000000000000
    [69832.356547] page dumped because: kasan: bad access detected
    [69832.357652]
    [69832.357970] Memory state around the buggy address:
    [69832.358926]  ffff88802622b980: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [69832.360358]  ffff88802622ba00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [69832.361810] >ffff88802622ba80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [69832.363273]                       ^
    [69832.363975]  ffff88802622bb00: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc
    [69832.375960]  ffff88802622bb80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [69832.377405] ==================================================================
    
    In bfq_dispatch_requestfunction, it may have function call:
    
    bfq_dispatch_request
            __bfq_dispatch_request
                    bfq_select_queue
                            bfq_bfqq_expire
                                    __bfq_bfqd_reset_in_service
                                            bfq_put_queue
                                                    kmem_cache_free
    In this function call, in_serv_queue has beed expired and meet the
    conditions to free. In the function bfq_dispatch_request, the address
    of in_serv_queue pointing to has been released. For getting the value
    of idle_timer_disabled, it will get flags value from the address which
    in_serv_queue pointing to, then the problem of use-after-free happens;
    
    Fix the problem by check in_serv_queue == bfqd->in_service_queue, to
    get the value of idle_timer_disabled if in_serve_queue is equel to
    bfqd->in_service_queue. If the space of in_serv_queue pointing has
    been released, this judge will aviod use-after-free problem.
    And if in_serv_queue may be expired or finished, the idle_timer_disabled
    will be false which would not give effects to bfq_update_dispatch_stats.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Wensheng <zhangwensheng5@huawei.com>
    Link: https://lore.kernel.org/r/20220303070334.3020168-1-zhangwensheng5@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd85ed4af8f5cb42990fb5f42c22d268028693a3
Author: Akira Kawata <akirakawata1@gmail.com>
Date:   Thu Jan 27 21:40:16 2022 +0900

    fs/binfmt_elf: Fix AT_PHDR for unusual ELF files
    
    [ Upstream commit 0da1d5002745cdc721bc018b582a8a9704d56c42 ]
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=197921
    
    As pointed out in the discussion of buglink, we cannot calculate AT_PHDR
    as the sum of load_addr and exec->e_phoff.
    
    : The AT_PHDR of ELF auxiliary vectors should point to the memory address
    : of program header. But binfmt_elf.c calculates this address as follows:
    :
    : NEW_AUX_ENT(AT_PHDR, load_addr + exec->e_phoff);
    :
    : which is wrong since e_phoff is the file offset of program header and
    : load_addr is the memory base address from PT_LOAD entry.
    :
    : The ld.so uses AT_PHDR as the memory address of program header. In normal
    : case, since the e_phoff is usually 64 and in the first PT_LOAD region, it
    : is the correct program header address.
    :
    : But if the address of program header isn't equal to the first PT_LOAD
    : address + e_phoff (e.g.  Put the program header in other non-consecutive
    : PT_LOAD region), ld.so will try to read program header from wrong address
    : then crash or use incorrect program header.
    
    This is because exec->e_phoff
    is the offset of PHDRs in the file and the address of PHDRs in the
    memory may differ from it. This patch fixes the bug by calculating the
    address of program headers from PT_LOADs directly.
    
    Signed-off-by: Akira Kawata <akirakawata1@gmail.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220127124014.338760-2-akirakawata1@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9fc899ce5a203c726596e0a73fed636678abf5b5
Author: Souptick Joarder (HPE) <jrdr.linux@gmail.com>
Date:   Fri Feb 18 22:03:03 2022 +0530

    irqchip/nvic: Release nvic_base upon failure
    
    [ Upstream commit e414c25e3399b2b3d7337dc47abccab5c71b7c8f ]
    
    smatch warning was reported as below ->
    
    smatch warnings:
    drivers/irqchip/irq-nvic.c:131 nvic_of_init()
    warn: 'nvic_base' not released on lines: 97.
    
    Release nvic_base upon failure.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Souptick Joarder (HPE) <jrdr.linux@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220218163303.33344-1-jrdr.linux@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bbd910de18babe0e58416f4ecf769c8e3fc7194
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Feb 24 10:12:25 2022 +0000

    irqchip/qcom-pdc: Fix broken locking
    
    [ Upstream commit a6aca2f460e203781dc41391913cc5b54f4bc0ce ]
    
    pdc_enable_intr() serves as a primitive to qcom_pdc_gic_{en,dis}able,
    and has a raw spinlock for mutual exclusion, which is uses with
    interruptible primitives.
    
    This means that this critical section can itself be interrupted.
    Should the interrupt also be a PDC interrupt, and the endpoint driver
    perform an irq_disable() on that interrupt, we end-up in a deadlock.
    
    Fix this by using the irqsave/irqrestore variants of the locking
    primitives.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Maulik Shah <quic_mkshah@quicinc.com>
    Link: https://lore.kernel.org/r/20220224101226.88373-5-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f038185b6a62e05c3258a4353c7183f8d1b24b1e
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Mon Feb 28 15:45:32 2022 -0800

    Fix incorrect type in assignment of ipv6 port for audit
    
    [ Upstream commit a5cd1ab7ab679d252a6d2f483eee7d45ebf2040c ]
    
    Remove inappropriate use of ntohs() and assign the
    port value directly.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 012c572007c2e80e18ec905edb61748aab8717c6
Author: Chaitanya Kulkarni <kch@nvidia.com>
Date:   Tue Feb 15 13:33:07 2022 -0800

    loop: use sysfs_emit() in the sysfs xxx show()
    
    [ Upstream commit b27824d31f09ea7b4a6ba2c1b18bd328df3e8bed ]
    
    sprintf does not know the PAGE_SIZE maximum of the temporary buffer
    used for outputting sysfs content and it's possible to overrun the
    PAGE_SIZE buffer length.
    
    Use a generic sysfs_emit function that knows the size of the
    temporary buffer and ensures that no overrun is done for offset
    attribute in
    loop_attr_[offset|sizelimit|autoclear|partscan|dio]_show() callbacks.
    
    Signed-off-by: Chaitanya Kulkarni <kch@nvidia.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Link: https://lore.kernel.org/r/20220215213310.7264-2-kch@nvidia.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 448857f58009fd950f4d732e8f1e4fcf859cb4b1
Author: Richard Haines <richard_c_haines@btinternet.com>
Date:   Fri Feb 25 17:54:38 2022 +0000

    selinux: allow FIOCLEX and FIONCLEX with policy capability
    
    [ Upstream commit 65881e1db4e948614d9eb195b8e1197339822949 ]
    
    These ioctls are equivalent to fcntl(fd, F_SETFD, flags), which SELinux
    always allows too.  Furthermore, a failed FIOCLEX could result in a file
    descriptor being leaked to a process that should not have access to it.
    
    As this patch removes access controls, a policy capability needs to be
    enabled in policy to always allow these ioctls.
    
    Based-on-patch-by: Demi Marie Obenour <demiobenour@gmail.com>
    Signed-off-by: Richard Haines <richard_c_haines@btinternet.com>
    [PM: subject line tweak]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b9b60b5bfc86b9ee7f02c822de4f13116e118c3
Author: Christian Göttsche <cgzones@googlemail.com>
Date:   Thu Feb 17 15:21:25 2022 +0100

    selinux: use correct type for context length
    
    [ Upstream commit b97df7c098c531010e445da88d02b7bf7bf59ef6 ]
    
    security_sid_to_context() expects a pointer to an u32 as the address
    where to store the length of the computed context.
    
    Reported by sparse:
    
        security/selinux/xfrm.c:359:39: warning: incorrect type in arg 4
                                        (different signedness)
        security/selinux/xfrm.c:359:39:    expected unsigned int
                                           [usertype] *scontext_len
        security/selinux/xfrm.c:359:39:    got int *
    
    Signed-off-by: Christian Göttsche <cgzones@googlemail.com>
    [PM: wrapped commit description]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7507ead1e9d42957c2340f2c4a0e9d00034e3366
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Sat Jan 29 09:59:24 2022 +0800

    block, bfq: don't move oom_bfqq
    
    [ Upstream commit 8410f70977734f21b8ed45c37e925d311dfda2e7 ]
    
    Our test report a UAF:
    
    [ 2073.019181] ==================================================================
    [ 2073.019188] BUG: KASAN: use-after-free in __bfq_put_async_bfqq+0xa0/0x168
    [ 2073.019191] Write of size 8 at addr ffff8000ccf64128 by task rmmod/72584
    [ 2073.019192]
    [ 2073.019196] CPU: 0 PID: 72584 Comm: rmmod Kdump: loaded Not tainted 4.19.90-yk #5
    [ 2073.019198] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015
    [ 2073.019200] Call trace:
    [ 2073.019203]  dump_backtrace+0x0/0x310
    [ 2073.019206]  show_stack+0x28/0x38
    [ 2073.019210]  dump_stack+0xec/0x15c
    [ 2073.019216]  print_address_description+0x68/0x2d0
    [ 2073.019220]  kasan_report+0x238/0x2f0
    [ 2073.019224]  __asan_store8+0x88/0xb0
    [ 2073.019229]  __bfq_put_async_bfqq+0xa0/0x168
    [ 2073.019233]  bfq_put_async_queues+0xbc/0x208
    [ 2073.019236]  bfq_pd_offline+0x178/0x238
    [ 2073.019240]  blkcg_deactivate_policy+0x1f0/0x420
    [ 2073.019244]  bfq_exit_queue+0x128/0x178
    [ 2073.019249]  blk_mq_exit_sched+0x12c/0x160
    [ 2073.019252]  elevator_exit+0xc8/0xd0
    [ 2073.019256]  blk_exit_queue+0x50/0x88
    [ 2073.019259]  blk_cleanup_queue+0x228/0x3d8
    [ 2073.019267]  null_del_dev+0xfc/0x1e0 [null_blk]
    [ 2073.019274]  null_exit+0x90/0x114 [null_blk]
    [ 2073.019278]  __arm64_sys_delete_module+0x358/0x5a0
    [ 2073.019282]  el0_svc_common+0xc8/0x320
    [ 2073.019287]  el0_svc_handler+0xf8/0x160
    [ 2073.019290]  el0_svc+0x10/0x218
    [ 2073.019291]
    [ 2073.019294] Allocated by task 14163:
    [ 2073.019301]  kasan_kmalloc+0xe0/0x190
    [ 2073.019305]  kmem_cache_alloc_node_trace+0x1cc/0x418
    [ 2073.019308]  bfq_pd_alloc+0x54/0x118
    [ 2073.019313]  blkcg_activate_policy+0x250/0x460
    [ 2073.019317]  bfq_create_group_hierarchy+0x38/0x110
    [ 2073.019321]  bfq_init_queue+0x6d0/0x948
    [ 2073.019325]  blk_mq_init_sched+0x1d8/0x390
    [ 2073.019330]  elevator_switch_mq+0x88/0x170
    [ 2073.019334]  elevator_switch+0x140/0x270
    [ 2073.019338]  elv_iosched_store+0x1a4/0x2a0
    [ 2073.019342]  queue_attr_store+0x90/0xe0
    [ 2073.019348]  sysfs_kf_write+0xa8/0xe8
    [ 2073.019351]  kernfs_fop_write+0x1f8/0x378
    [ 2073.019359]  __vfs_write+0xe0/0x360
    [ 2073.019363]  vfs_write+0xf0/0x270
    [ 2073.019367]  ksys_write+0xdc/0x1b8
    [ 2073.019371]  __arm64_sys_write+0x50/0x60
    [ 2073.019375]  el0_svc_common+0xc8/0x320
    [ 2073.019380]  el0_svc_handler+0xf8/0x160
    [ 2073.019383]  el0_svc+0x10/0x218
    [ 2073.019385]
    [ 2073.019387] Freed by task 72584:
    [ 2073.019391]  __kasan_slab_free+0x120/0x228
    [ 2073.019394]  kasan_slab_free+0x10/0x18
    [ 2073.019397]  kfree+0x94/0x368
    [ 2073.019400]  bfqg_put+0x64/0xb0
    [ 2073.019404]  bfqg_and_blkg_put+0x90/0xb0
    [ 2073.019408]  bfq_put_queue+0x220/0x228
    [ 2073.019413]  __bfq_put_async_bfqq+0x98/0x168
    [ 2073.019416]  bfq_put_async_queues+0xbc/0x208
    [ 2073.019420]  bfq_pd_offline+0x178/0x238
    [ 2073.019424]  blkcg_deactivate_policy+0x1f0/0x420
    [ 2073.019429]  bfq_exit_queue+0x128/0x178
    [ 2073.019433]  blk_mq_exit_sched+0x12c/0x160
    [ 2073.019437]  elevator_exit+0xc8/0xd0
    [ 2073.019440]  blk_exit_queue+0x50/0x88
    [ 2073.019443]  blk_cleanup_queue+0x228/0x3d8
    [ 2073.019451]  null_del_dev+0xfc/0x1e0 [null_blk]
    [ 2073.019459]  null_exit+0x90/0x114 [null_blk]
    [ 2073.019462]  __arm64_sys_delete_module+0x358/0x5a0
    [ 2073.019467]  el0_svc_common+0xc8/0x320
    [ 2073.019471]  el0_svc_handler+0xf8/0x160
    [ 2073.019474]  el0_svc+0x10/0x218
    [ 2073.019475]
    [ 2073.019479] The buggy address belongs to the object at ffff8000ccf63f00
     which belongs to the cache kmalloc-1024 of size 1024
    [ 2073.019484] The buggy address is located 552 bytes inside of
     1024-byte region [ffff8000ccf63f00, ffff8000ccf64300)
    [ 2073.019486] The buggy address belongs to the page:
    [ 2073.019492] page:ffff7e000333d800 count:1 mapcount:0 mapping:ffff8000c0003a00 index:0x0 compound_mapcount: 0
    [ 2073.020123] flags: 0x7ffff0000008100(slab|head)
    [ 2073.020403] raw: 07ffff0000008100 ffff7e0003334c08 ffff7e00001f5a08 ffff8000c0003a00
    [ 2073.020409] raw: 0000000000000000 00000000001c001c 00000001ffffffff 0000000000000000
    [ 2073.020411] page dumped because: kasan: bad access detected
    [ 2073.020412]
    [ 2073.020414] Memory state around the buggy address:
    [ 2073.020420]  ffff8000ccf64000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020424]  ffff8000ccf64080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020428] >ffff8000ccf64100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020430]                                   ^
    [ 2073.020434]  ffff8000ccf64180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020438]  ffff8000ccf64200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [ 2073.020439] ==================================================================
    
    The same problem exist in mainline as well.
    
    This is because oom_bfqq is moved to a non-root group, thus root_group
    is freed earlier.
    
    Thus fix the problem by don't move oom_bfqq.
    
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Acked-by: Paolo Valente <paolo.valente@linaro.org>
    Link: https://lore.kernel.org/r/20220129015924.3958918-4-yukuai3@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79b16d00de175166f52bdccea54c5ca5eb9296a2
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Feb 1 12:03:08 2022 +0000

    pinctrl: npcm: Fix broken references to chip->parent_device
    
    [ Upstream commit f7e53e2255808ca3abcc8f38d18ad0823425e771 ]
    
    The npcm driver has a bunch of references to the irq_chip parent_device
    field, but never sets it.
    
    Fix it by fishing that reference from somewhere else, but it is
    obvious that these debug statements were never used. Also remove
    an unused field in a local data structure.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Acked-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Link: https://lore.kernel.org/r/20220201120310.878267-11-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d1d8e5e42941d3a51f7cde3bee93c2b47838aaa
Author: Kees Cook <keescook@chromium.org>
Date:   Sun Feb 6 09:08:20 2022 -0800

    gcc-plugins/stackleak: Exactly match strings instead of prefixes
    
    [ Upstream commit 27e9faf415dbf94af19b9c827842435edbc1fbbc ]
    
    Since STRING_CST may not be NUL terminated, strncmp() was used for check
    for equality. However, this may lead to mismatches for longer section
    names where the start matches the tested-for string. Test for exact
    equality by checking for the presences of NUL termination.
    
    Cc: Alexander Popov <alex.popov@linux.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0f2f89d741ab1f2e0fcd14b5a5252fbbdeebb70
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jan 24 17:01:22 2022 -0500

    regulator: rpi-panel: Handle I2C errors/timing to the Atmel
    
    [ Upstream commit 5665eee7a3800430e7dc3ef6f25722476b603186 ]
    
    The Atmel is doing some things in the I2C ISR, during which
    period it will not respond to further commands. This is
    particularly true of the POWERON command.
    
    Increase delays appropriately, and retry should I2C errors be
    reported.
    
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Detlev Casanova <detlev.casanova@collabora.com>
    Link: https://lore.kernel.org/r/20220124220129.158891-3-detlev.casanova@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2784604c8c6fc523248f8f80a421c313a9d790b7
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Thu Jan 27 04:51:00 2022 +0000

    LSM: general protection fault in legacy_parse_param
    
    [ Upstream commit ecff30575b5ad0eda149aadad247b7f75411fd47 ]
    
    The usual LSM hook "bail on fail" scheme doesn't work for cases where
    a security module may return an error code indicating that it does not
    recognize an input.  In this particular case Smack sees a mount option
    that it recognizes, and returns 0. A call to a BPF hook follows, which
    returns -ENOPARAM, which confuses the caller because Smack has processed
    its data.
    
    The SELinux hook incorrectly returns 1 on success. There was a time
    when this was correct, however the current expectation is that it
    return 0 on success. This is repaired.
    
    Reported-by: syzbot+d1e3b1d92d25abf97943@syzkaller.appspotmail.com
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Acked-by: James Morris <jamorris@linux.microsoft.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e600b5973e808848a23eeba3fdbb9b288e5558c1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 29 23:29:18 2022 -0700

    fs: fix fd table size alignment properly
    
    [ Upstream commit d888c83fcec75194a8a48ccd283953bdba7b2550 ]
    
    Jason Donenfeld reports that my commit 1c24a186398f ("fs: fd tables have
    to be multiples of BITS_PER_LONG") doesn't work, and the reason is an
    embarrassing brown-paper-bag bug.
    
    Yes, we want to align the number of fds to BITS_PER_LONG, and yes, the
    reason they might not be aligned is because the incoming 'max_fd'
    argument might not be aligned.
    
    But aligining the argument - while simple - will cause a "infinitely
    big" maxfd (eg NR_OPEN_MAX) to just overflow to zero.  Which most
    definitely isn't what we want either.
    
    The obvious fix was always just to do the alignment last, but I had
    moved it earlier just to make the patch smaller and the code look
    simpler.  Duh.  It certainly made _me_ look simple.
    
    Fixes: 1c24a186398f ("fs: fd tables have to be multiples of BITS_PER_LONG")
    Reported-and-tested-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Fedor Pchelkin <aissur0002@gmail.com>
    Cc: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Cc: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 327f07e3704c821ce33e54ef5046bdf69975cb86
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Mar 24 08:52:07 2022 +0300

    lib/test: use after free in register_test_dev_kmod()
    
    [ Upstream commit dc0ce6cc4b133f5f2beb8b47dacae13a7d283c2c ]
    
    The "test_dev" pointer is freed but then returned to the caller.
    
    Fixes: d9c6a72d6fa2 ("kmod: add test driver to stress test the module loader")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00d2b9fe5e02b41c6e4d7a4c1171cc6dd3008617
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 29 15:06:39 2022 -0700

    fs: fd tables have to be multiples of BITS_PER_LONG
    
    [ Upstream commit 1c24a186398f59c80adb9a967486b65c1423a59d ]
    
    This has always been the rule: fdtables have several bitmaps in them,
    and as a result they have to be sized properly for bitmaps.  We walk
    those bitmaps in chunks of 'unsigned long' in serveral cases, but even
    when we don't, we use the regular kernel bitops that are defined to work
    on arrays of 'unsigned long', not on some byte array.
    
    Now, the distinction between arrays of bytes and 'unsigned long'
    normally only really ends up being noticeable on big-endian systems, but
    Fedor Pchelkin and Alexey Khoroshilov reported that copy_fd_bitmaps()
    could be called with an argument that wasn't even a multiple of
    BITS_PER_BYTE.  And then it fails to do the proper copy even on
    little-endian machines.
    
    The bug wasn't in copy_fd_bitmap(), but in sane_fdtable_size(), which
    didn't actually sanitize the fdtable size sufficiently, and never made
    sure it had the proper BITS_PER_LONG alignment.
    
    That's partly because the alignment historically came not from having to
    explicitly align things, but simply from previous fdtable sizes, and
    from count_open_files(), which counts the file descriptors by walking
    them one 'unsigned long' word at a time and thus naturally ends up doing
    sizing in the proper 'chunks of unsigned long'.
    
    But with the introduction of close_range(), we now have an external
    source of "this is how many files we want to have", and so
    sane_fdtable_size() needs to do a better job.
    
    This also adds that explicit alignment to alloc_fdtable(), although
    there it is mainly just for documentation at a source code level.  The
    arithmetic we do there to pick a reasonable fdtable size already aligns
    the result sufficiently.
    
    In fact,clang notices that the added ALIGN() in that function doesn't
    actually do anything, and does not generate any extra code for it.
    
    It turns out that gcc ends up confusing itself by combining a previous
    constant-sized shift operation with the variable-sized shift operations
    in roundup_pow_of_two().  And probably due to that doesn't notice that
    the ALIGN() is a no-op.  But that's a (tiny) gcc misfeature that doesn't
    matter.  Having the explicit alignment makes sense, and would actually
    matter on a 128-bit architecture if we ever go there.
    
    This also adds big comments above both functions about how fdtable sizes
    have to have that BITS_PER_LONG alignment.
    
    Fixes: 60997c3d45d9 ("close_range: add CLOSE_RANGE_UNSHARE")
    Reported-by: Fedor Pchelkin <aissur0002@gmail.com>
    Reported-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Link: https://lore.kernel.org/all/20220326114009.1690-1-aissur0002@gmail.com/
    Tested-and-acked-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1752fcd4045b4b33fd80b8018848d739043e805a
Author: Xiaomeng Tong <xiam0nd.tong@gmail.com>
Date:   Mon Mar 28 11:24:31 2022 +0800

    net: dsa: bcm_sf2_cfp: fix an incorrect NULL check on list iterator
    
    [ Upstream commit 6da69b1da130e7d96766042750cd9f902e890eba ]
    
    The bug is here:
            return rule;
    
    The list iterator value 'rule' will *always* be set and non-NULL
    by list_for_each_entry(), so it is incorrect to assume that the
    iterator value will be NULL if the list is empty or no element
    is found.
    
    To fix the bug, return 'rule' when found, otherwise return NULL.
    
    Fixes: ae7a5aff783c7 ("net: dsa: bcm_sf2: Keep copy of inserted rules")
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Link: https://lore.kernel.org/r/20220328032431.22538-1-xiam0nd.tong@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit edb91a475da5d8243db9469528e2dc15599b497b
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Mar 28 08:36:34 2022 -0400

    NFSv4/pNFS: Fix another issue with a list iterator pointing to the head
    
    [ Upstream commit 7c9d845f0612e5bcd23456a2ec43be8ac43458f1 ]
    
    In nfs4_callback_devicenotify(), if we don't find a matching entry for
    the deviceid, we're left with a pointer to 'struct nfs_server' that
    actually points to the list of super blocks associated with our struct
    nfs_client.
    Furthermore, even if we have a valid pointer, nothing pins the super
    block, and so the struct nfs_server could end up getting freed while
    we're using it.
    
    Since all we want is a pointer to the struct pnfs_layoutdriver_type,
    let's skip all the iteration over super blocks, and just use APIs to
    find the layout driver directly.
    
    Reported-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Fixes: 1be5683b03a7 ("pnfs: CB_NOTIFY_DEVICEID")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c94b6205e87411dbe9dc1ca088eb36b8837fb47
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Sat Mar 26 18:43:46 2022 +0800

    net/x25: Fix null-ptr-deref caused by x25_disconnect
    
    [ Upstream commit 7781607938c8371d4c2b243527430241c62e39c2 ]
    
    When the link layer is terminating, x25->neighbour will be set to NULL
    in x25_disconnect(). As a result, it could cause null-ptr-deref bugs in
    x25_sendmsg(),x25_recvmsg() and x25_connect(). One of the bugs is
    shown below.
    
        (Thread 1)                 |  (Thread 2)
    x25_link_terminated()          | x25_recvmsg()
     x25_kill_by_neigh()           |  ...
      x25_disconnect()             |  lock_sock(sk)
       ...                         |  ...
       x25->neighbour = NULL //(1) |
       ...                         |  x25->neighbour->extended //(2)
    
    The code sets NULL to x25->neighbour in position (1) and dereferences
    x25->neighbour in position (2), which could cause null-ptr-deref bug.
    
    This patch adds lock_sock() in x25_kill_by_neigh() in order to synchronize
    with x25_sendmsg(), x25_recvmsg() and x25_connect(). What`s more, the
    sock held by lock_sock() is not NULL, because it is extracted from x25_list
    and uses x25_list_lock to synchronize.
    
    Fixes: 4becb7ee5b3d ("net/x25: Fix x25_neigh refcnt leak when x25 disconnect")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Reviewed-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4896c308a57d4f036af4b84ce6f61f97f5c5f23c
Author: Tom Rix <trix@redhat.com>
Date:   Sat Mar 26 10:20:03 2022 -0700

    qlcnic: dcb: default to returning -EOPNOTSUPP
    
    [ Upstream commit 1521db37f0d42334a88e8ff28198a27d1ed5cd7b ]
    
    Clang static analysis reports this issue
    qlcnic_dcb.c:382:10: warning: Assigned value is
      garbage or undefined
      mbx_out = *val;
              ^ ~~~~
    
    val is set in the qlcnic_dcb_query_hw_capability() wrapper.
    If there is no query_hw_capability op in dcp, success is
    returned without setting the val.
    
    For this and similar wrappers, return -EOPNOTSUPP.
    
    Fixes: 14d385b99059 ("qlcnic: dcb: Query adapter DCB capabilities.")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2165d0ebfbacdda40483eaa8ec305b6e79d2a3b3
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Thu Mar 24 22:05:14 2022 +0200

    selftests: test_vxlan_under_vrf: Fix broken test case
    
    [ Upstream commit b50d3b46f84282d795ae3076111acb75ae1031f3 ]
    
    The purpose of the last test case is to test VXLAN encapsulation and
    decapsulation when the underlay lookup takes place in a non-default VRF.
    This is achieved by enslaving the physical device of the tunnel to a
    VRF.
    
    The binding of the VXLAN UDP socket to the VRF happens when the VXLAN
    device itself is opened, not when its physical device is opened. This
    was also mentioned in the cited commit ("tests that moving the underlay
    from a VRF to another works when down/up the VXLAN interface"), but the
    test did something else.
    
    Fix it by reopening the VXLAN device instead of its physical device.
    
    Before:
    
     # ./test_vxlan_under_vrf.sh
     Checking HV connectivity                                           [ OK ]
     Check VM connectivity through VXLAN (underlay in the default VRF)  [ OK ]
     Check VM connectivity through VXLAN (underlay in a VRF)            [FAIL]
    
    After:
    
     # ./test_vxlan_under_vrf.sh
     Checking HV connectivity                                           [ OK ]
     Check VM connectivity through VXLAN (underlay in the default VRF)  [ OK ]
     Check VM connectivity through VXLAN (underlay in a VRF)            [ OK ]
    
    Fixes: 03f1c26b1c56 ("test/net: Add script for VXLAN underlay in a VRF")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20220324200514.1638326-1-idosch@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f98dc124a4828f1f94e460d37a0756811ebe5142
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Mar 24 16:24:38 2022 -0700

    net: phy: broadcom: Fix brcm_fet_config_init()
    
    [ Upstream commit bf8bfc4336f7a34e48b3bbd19b1542bf085bdc3d ]
    
    A Broadcom AC201 PHY (same entry as 5241) would be flagged by the
    Broadcom UniMAC MDIO controller as not completing the turn around
    properly since the PHY expects 65 MDC clock cycles to complete a write
    cycle, and the MDIO controller was only sending 64 MDC clock cycles as
    determined by looking at a scope shot.
    
    This would make the subsequent read fail with the UniMAC MDIO controller
    command field having MDIO_READ_FAIL set and we would abort the
    brcm_fet_config_init() function and thus not probe the PHY at all.
    
    After issuing a software reset, wait for at least 1ms which is well
    above the 1us reset delay advertised by the datasheet and issue a dummy
    read to let the PHY turn around the line properly. This read
    specifically ignores -EIO which would be returned by MDIO controllers
    checking for the line being turned around.
    
    If we have a genuine reaad failure, the next read of the interrupt
    status register would pick it up anyway.
    
    Fixes: d7a2ed9248a3 ("broadcom: Add AC131 phy support")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220324232438.1156812-1-f.fainelli@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e7a483af3bb24e7b2d7722c5240980afb12d079
Author: Jian Shen <shenjian15@huawei.com>
Date:   Thu Mar 24 20:54:47 2022 +0800

    net: hns3: fix bug when PF set the duplicate MAC address for VFs
    
    [ Upstream commit ccb18f05535c96d26e2d559d402acb87700fc5a7 ]
    
    If the MAC address A is configured to vport A and then vport B. The MAC
    address of vport A in the hardware becomes invalid. If the address of
    vport A is changed to MAC address B, the driver needs to delete the MAC
    address A of vport A. Due to the MAC address A of vport A has become
    invalid in the hardware entry, so "-ENOENT" is returned. In this case, the
    "used_umv_size" value recorded in driver is not updated. As a result, the
    MAC entry status of the software is inconsistent with that of the hardware.
    
    Therefore, the driver updates the umv size even if the MAC entry cannot be
    found. Ensure that the software and hardware status is consistent.
    
    Fixes: ee4bcd3b7ae4 ("net: hns3: refactor the MAC address configure")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3eb92660e69a7ebdc40ddb29b1dd1c53a521fe5a
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Thu Mar 24 18:12:10 2022 +0200

    net: enetc: report software timestamping via SO_TIMESTAMPING
    
    [ Upstream commit feb13dcb1818b775fbd9191f797be67cd605f03e ]
    
    Let user space properly determine that the enetc driver provides
    software timestamps.
    
    Fixes: 4caefbce06d1 ("enetc: add software timestamping")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Link: https://lore.kernel.org/r/20220324161210.4122281-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9445a7a59d84ed3ae6c85f299d2a6c4930b1ee9
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Mar 25 15:20:02 2022 +0100

    xen: fix is_xen_pmu()
    
    [ Upstream commit de2ae403b4c0e79a3410e63bc448542fbb9f9bfc ]
    
    is_xen_pmu() is taking the cpu number as parameter, but it is not using
    it. Instead it just tests whether the Xen PMU initialization on the
    current cpu did succeed. As this test is done by checking a percpu
    pointer, preemption needs to be disabled in order to avoid switching
    the cpu while doing the test. While resuming from suspend() this seems
    not to be the case:
    
    [   88.082751] ACPI: PM: Low-level resume complete
    [   88.087933] ACPI: EC: EC started
    [   88.091464] ACPI: PM: Restoring platform NVS memory
    [   88.097166] xen_acpi_processor: Uploading Xen processor PM info
    [   88.103850] Enabling non-boot CPUs ...
    [   88.108128] installing Xen timer for CPU 1
    [   88.112763] BUG: using smp_processor_id() in preemptible [00000000] code: systemd-sleep/7138
    [   88.122256] caller is is_xen_pmu+0x12/0x30
    [   88.126937] CPU: 0 PID: 7138 Comm: systemd-sleep Tainted: G        W         5.16.13-2.fc32.qubes.x86_64 #1
    [   88.137939] Hardware name: Star Labs StarBook/StarBook, BIOS 7.97 03/21/2022
    [   88.145930] Call Trace:
    [   88.148757]  <TASK>
    [   88.151193]  dump_stack_lvl+0x48/0x5e
    [   88.155381]  check_preemption_disabled+0xde/0xe0
    [   88.160641]  is_xen_pmu+0x12/0x30
    [   88.164441]  xen_smp_intr_init_pv+0x75/0x100
    
    Fix that by replacing is_xen_pmu() by a simple boolean variable which
    reflects the Xen PMU initialization state on cpu 0.
    
    Modify xen_pmu_init() to return early in case it is being called for a
    cpu other than cpu 0 and the boolean variable not being set.
    
    Fixes: bf6dfb154d93 ("xen/PMU: PMU emulation code")
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20220325142002.31789-1-jgross@suse.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af0c3ced2468dd28d4dc599ba099adc892019a9b
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Fri Mar 25 17:11:42 2022 +0100

    clk: Initialize orphan req_rate
    
    [ Upstream commit 5f7e2af00807f2117650e711a58b7f0e986ce1df ]
    
    When registering a clock that doesn't have a recalc_rate implementation,
    and doesn't have its parent registered yet, we initialize the clk_core
    rate and 'req_rate' fields to 0.
    
    The rate field is later updated when the parent is registered in
    clk_core_reparent_orphans_nolock() using __clk_recalc_rates(), but the
    'req_rate' field is never updated.
    
    This leads to an issue in clk_set_rate_range() and clk_put(), since
    those functions will call clk_set_rate() with the content of 'req_rate'
    to provide drivers with the opportunity to change the rate based on the
    new boundaries. In this case, we would call clk_set_rate() with a rate
    of 0, effectively enforcing the minimum allowed for this clock whenever
    we would call one of those two functions, even though the actual rate
    might be within range.
    
    Let's fix this by setting 'req_rate' in
    clk_core_reparent_orphans_nolock() with the rate field content just
    updated by the call to __clk_recalc_rates().
    
    Fixes: 1c8e600440c7 ("clk: Add rate constraints to clocks")
    Reported-by: Dmitry Osipenko <dmitry.osipenko@collabora.com>
    Tested-by: Dmitry Osipenko <dmitry.osipenko@collabora.com> # T30 Nexus7
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220325161144.1901695-2-maxime@cerno.tech
    [sboyd@kernel.org: Reword comment]
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 845e734f975f031bb43f81ece2ab6621fb19632d
Author: Konrad Dybcio <konrad.dybcio@somainline.org>
Date:   Sat Mar 19 18:49:40 2022 +0100

    clk: qcom: gcc-msm8994: Fix gpll4 width
    
    [ Upstream commit 71021db1c532c2545ae53b9ee85b37b7154f51d4 ]
    
    The gpll4 postdiv is actually a div4, so make sure that Linux is aware of
    this.
    
    This fixes the following error messages:
    
     mmc1: Card appears overclocked; req 200000000 Hz, actual 343999999 Hz
     mmc1: Card appears overclocked; req 400000000 Hz, actual 687999999 Hz
    
    Fixes: aec89f78cf01 ("clk: qcom: Add support for msm8994 global clock controller")
    Signed-off-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Link: https://lore.kernel.org/r/20220319174940.341137-1-konrad.dybcio@somainline.org
    Tested-by: Petr Vorel <petr.vorel@gmail.com>
    Reviewed-by: Petr Vorel <petr.vorel@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2a26253921920861f17fffcab1ec926807ad2ae
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Fri Jan 28 14:40:55 2022 +0000

    kdb: Fix the putarea helper function
    
    [ Upstream commit c1cb81429df462eca1b6ba615cddd21dd3103c46 ]
    
    Currently kdb_putarea_size() uses copy_from_kernel_nofault() to write *to*
    arbitrary kernel memory. This is obviously wrong and means the memory
    modify ('mm') command is a serious risk to debugger stability: if we poke
    to a bad address we'll double-fault and lose our debug session.
    
    Fix this the (very) obvious way.
    
    Note that there are two Fixes: tags because the API was renamed and this
    patch will only trivially backport as far as the rename (and this is
    probably enough). Nevertheless Christoph's rename did not introduce this
    problem so I wanted to record that!
    
    Fixes: fe557319aa06 ("maccess: rename probe_kernel_{read,write} to copy_{from,to}_kernel_nofault")
    Fixes: 5d5314d6795f ("kdb: core for kgdb back end (1 of 2)")
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20220128144055.207267-1-daniel.thompson@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9fa7d48a1cdcb46f0dcf75c2d63fcb138e194f2
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Mar 24 10:38:42 2022 -0400

    NFSv4.1: don't retry BIND_CONN_TO_SESSION on session error
    
    [ Upstream commit 1d15d121cc2ad4d016a7dc1493132a9696f91fc5 ]
    
    There is no reason to retry the operation if a session error had
    occurred in such case result structure isn't filled out.
    
    Fixes: dff58530c4ca ("NFSv4.1: fix handling of backchannel binding in BIND_CONN_TO_SESSION")
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cd30d28da01e6c29fabca1494baba4f11191ac1
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Mar 21 11:38:32 2022 +0100

    netfilter: nf_conntrack_tcp: preserve liberal flag in tcp options
    
    [ Upstream commit f2dd495a8d589371289981d5ed33e6873df94ecc ]
    
    Do not reset IP_CT_TCP_FLAG_BE_LIBERAL flag in out-of-sync scenarios
    coming before the TCP window tracking, otherwise such connections will
    fail in the window check.
    
    Update tcp_options() to leave this flag in place and add a new helper
    function to reset the tcp window state.
    
    Based on patch from Sven Auhagen.
    
    Fixes: c4832c7bbc3f ("netfilter: nf_ct_tcp: improve out-of-sync situation in TCP tracking")
    Tested-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbd56a61ceee221feea7fc978404e8d458e948a2
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sat Mar 19 22:30:00 2022 +0300

    jfs: fix divide error in dbNextAG
    
    [ Upstream commit 2cc7cc01c15f57d056318c33705647f87dcd4aab ]
    
    Syzbot reported divide error in dbNextAG(). The problem was in missing
    validation check for malicious image.
    
    Syzbot crafted an image with bmp->db_numag equal to 0. There wasn't any
    validation checks, but dbNextAG() blindly use bmp->db_numag in divide
    expression
    
    Fix it by validating bmp->db_numag in dbMount() and return an error if
    image is malicious
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-and-tested-by: syzbot+46f5c25af73eb8330eb6@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acb96e62e690507e059fd8acd3d62858ef4a8366
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 20:18:29 2022 -0800

    driver core: dd: fix return value of __setup handler
    
    [ Upstream commit f2aad54703dbe630f9d8b235eb58e8c8cc78f37d ]
    
    When "driver_async_probe=nulltty" is used on the kernel boot command line,
    it causes an Unknown parameter message and the string is added to init's
    environment strings, polluting them.
    
      Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc6
      driver_async_probe=nulltty", will be passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc6
         driver_async_probe=nulltty
    
    Change the return value of the __setup function to 1 to indicate
    that the __setup option has been handled.
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 1ea61b68d0f8 ("async: Add cmdline option to specify drivers to be async probed")
    Cc: Feng Tang <feng.tang@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "Rafael J. Wysocki" <rafael@kernel.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Reviewed-by: Feng Tang <feng.tang@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220301041829.15137-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89748be18f77498434981061cf2b019a9f7cdf9c
Author: David Gow <davidgow@google.com>
Date:   Fri Feb 25 12:15:02 2022 +0800

    firmware: google: Properly state IOMEM dependency
    
    [ Upstream commit 37fd83916da2e4cae03d350015c82a67b1b334c4 ]
    
    The Google Coreboot implementation requires IOMEM functions
    (memmremap, memunmap, devm_memremap), but does not specify this is its
    Kconfig. This results in build errors when HAS_IOMEM is not set, such as
    on some UML configurations:
    
    /usr/bin/ld: drivers/firmware/google/coreboot_table.o: in function `coreboot_table_probe':
    coreboot_table.c:(.text+0x311): undefined reference to `memremap'
    /usr/bin/ld: coreboot_table.c:(.text+0x34e): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/memconsole-coreboot.o: in function `memconsole_probe':
    memconsole-coreboot.c:(.text+0x12d): undefined reference to `memremap'
    /usr/bin/ld: memconsole-coreboot.c:(.text+0x17e): undefined reference to `devm_memremap'
    /usr/bin/ld: memconsole-coreboot.c:(.text+0x191): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/vpd.o: in function `vpd_section_destroy.isra.0':
    vpd.c:(.text+0x300): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/vpd.o: in function `vpd_section_init':
    vpd.c:(.text+0x382): undefined reference to `memremap'
    /usr/bin/ld: vpd.c:(.text+0x459): undefined reference to `memunmap'
    /usr/bin/ld: drivers/firmware/google/vpd.o: in function `vpd_probe':
    vpd.c:(.text+0x59d): undefined reference to `memremap'
    /usr/bin/ld: vpd.c:(.text+0x5d3): undefined reference to `memunmap'
    collect2: error: ld returned 1 exit status
    
    Fixes: a28aad66da8b ("firmware: coreboot: Collapse platform drivers into bus core")
    Acked-By: anton ivanov <anton.ivanov@cambridgegreys.com>
    Acked-By: Julius Werner <jwerner@chromium.org>
    Signed-off-by: David Gow <davidgow@google.com>
    Link: https://lore.kernel.org/r/20220225041502.1901806-1-davidgow@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d934d7b9019adfa8522606895cab357e6e639d3
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Mar 7 19:32:55 2022 -0800

    kgdbts: fix return value of __setup handler
    
    [ Upstream commit 96c9e802c64014a7716865332d732cc9c7f24593 ]
    
    __setup() handlers should return 1 to indicate that the boot option
    has been handled. A return of 0 causes the boot option/value to be
    listed as an Unknown kernel parameter and added to init's (limited)
    environment strings. So return 1 from kgdbts_option_setup().
    
    Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc7
      kgdboc=kbd kgdbts=", will be passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc7
         kgdboc=kbd
         kgdbts=
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: e8d31c204e36 ("kgdb: add kgdb internal test suite")
    Cc: kgdb-bugreport@lists.sourceforge.net
    Cc: Jason Wessel <jason.wessel@windriver.com>
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220308033255.22118-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f65ba8b98846753cad1231716243d3a3b41319f2
Author: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Date:   Mon Mar 14 11:14:32 2022 +0200

    serial: 8250: fix XOFF/XON sending when DMA is used
    
    [ Upstream commit f58c252e30cf74f68b0054293adc03b5923b9f0e ]
    
    When 8250 UART is using DMA, x_char (XON/XOFF) is never sent
    to the wire. After this change, x_char is injected correctly.
    
    Create uart_xchar_out() helper for sending the x_char out and
    accounting related to it. It seems that almost every driver
    does these same steps with x_char. Except for 8250, however,
    almost all currently lack .serial_out so they cannot immediately
    take advantage of this new helper.
    
    The downside of this patch is that it might reintroduce
    the problems some devices faced with mixed DMA/non-DMA transfer
    which caused revert f967fc8f165f (Revert "serial: 8250_dma:
    don't bother DMA with small transfers"). However, the impact
    should be limited to cases with XON/XOFF (that didn't work
    with DMA capable devices to begin with so this problem is not
    very likely to cause a major issue, if any at all).
    
    Fixes: 9ee4b83e51f74 ("serial: 8250: Add support for dmaengine")
    Reported-by: Gilles Buloz <gilles.buloz@kontron.com>
    Tested-by: Gilles Buloz <gilles.buloz@kontron.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Link: https://lore.kernel.org/r/20220314091432.4288-2-ilpo.jarvinen@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45e95a7bf8c4fd2e5408e89bafe7ccf2a52f7864
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Mar 8 19:30:18 2022 -0800

    kgdboc: fix return value of __setup handler
    
    [ Upstream commit ab818c7aa7544bf8d2dd4bdf68878b17a02eb332 ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) environment strings.
    So return 1 from kgdboc_option_setup().
    
    Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc7
      kgdboc=kbd kgdbts=", will be passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc7
         kgdboc=kbd
         kgdbts=
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 1bd54d851f50 ("kgdboc: Passing ekgdboc to command line causes panic")
    Fixes: f2d937f3bf00 ("consoles: polling support, kgdboc")
    Cc: He Zhe <zhe.he@windriver.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: kgdb-bugreport@lists.sourceforge.net
    Cc: Jason Wessel <jason.wessel@windriver.com>
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: linux-serial@vger.kernel.org
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220309033018.17936-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96038b1cf45e0351594c3e243d5cb57cdb96ad17
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Mar 7 18:42:28 2022 -0800

    tty: hvc: fix return value of __setup handler
    
    [ Upstream commit 53819a0d97aace1425bb042829e3446952a9e8a9 ]
    
    __setup() handlers should return 1 to indicate that the boot option
    has been handled or 0 to indicate that it was not handled.
    Add a pr_warn() message if the option value is invalid and then
    always return 1.
    
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Fixes: 86b40567b917 ("tty: replace strict_strtoul() with kstrtoul()")
    Cc: Jingoo Han <jg1.han@samsung.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Julian Wiedmann <jwi@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: linuxppc-dev@lists.ozlabs.org
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220308024228.20477-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 566e30289d04aeb027f0258f8731542296e20aeb
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 12:02:34 2022 +0000

    pinctrl/rockchip: Add missing of_node_put() in rockchip_pinctrl_probe
    
    [ Upstream commit 89388f8730699c259f8090ec435fb43569efe4ac ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: 1e747e59cc4d ("pinctrl: rockchip: base regmap supplied by a syscon")
    Fixes: 14dee8677e19 ("pinctrl: rockchip: let pmu registers be supplied by a syscon")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220307120234.28657-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 669b05ff43bd7ed684379c6e2006a6dad5127b71
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 11:51:16 2022 +0000

    pinctrl: nomadik: Add missing of_node_put() in nmk_pinctrl_probe
    
    [ Upstream commit c09ac191b1f97cfa06f394dbfd7a5db07986cefc ]
    
    This node pointer is returned by of_parse_phandle() with refcount
    incremented in this function. Calling of_node_put() to avoid
    the refcount leak.
    
    Fixes: 32e67eee670e ("pinctrl: nomadik: Allow prcm_base to be extracted from Device Tree")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220307115116.25316-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d095fe2fb8aae25e9062e17390ed32278cdb6df
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:51 2022 +0800

    pinctrl: mediatek: paris: Skip custom extra pin config dump for virtual GPIOs
    
    [ Upstream commit 1763933d377ecb05454f8d20e3c8922480db2ac0 ]
    
    Virtual GPIOs do not have any hardware state associated with them. Any
    attempt to read back hardware state for these pins result in error
    codes.
    
    Skip dumping extra pin config information for these virtual GPIOs.
    
    Fixes: 184d8e13f9b1 ("pinctrl: mediatek: Add support for pin configuration dump via debugfs.")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-7-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 861946289d4a9f64269563469fa6a2f6a7c9240f
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:49 2022 +0800

    pinctrl: mediatek: paris: Fix pingroup pin config state readback
    
    [ Upstream commit 54fe55fb384ade630ef20b9a8b8f3b2a89ad97f2 ]
    
    mtk_pconf_group_get(), used to read back pingroup pin config state,
    simply returns a set of configs saved from a previous invocation of
    mtk_pconf_group_set(). This is an unfiltered, unvalidated set passed
    in from the pinconf core, which does not match the current hardware
    state.
    
    Since the driver library is designed to have one pin per group, pass
    through mtk_pconf_group_get() to mtk_pinconf_get(), to read back the
    current pin config state of the only pin in the group.
    
    Also drop the assignment of pin config state to the group.
    
    Fixes: 805250982bb5 ("pinctrl: mediatek: add pinctrl-paris that implements the vendor dt-bindings")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-5-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7675fb2aaf8846a33e318322a382c12ae040df8e
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:48 2022 +0800

    pinctrl: mediatek: paris: Fix "argument" argument type for mtk_pinconf_get()
    
    [ Upstream commit 19bce7ce0a593c7024030a0cda9e23facea3c93d ]
    
    For mtk_pinconf_get(), the "argument" argument is typically returned by
    pinconf_to_config_argument(), which holds the value for a given pinconf
    parameter. It certainly should not have the type of "enum pin_config_param",
    which describes the type of the pinconf parameter itself.
    
    Change the type to u32, which matches the return type of
    pinconf_to_config_argument().
    
    Fixes: 805250982bb5 ("pinctrl: mediatek: add pinctrl-paris that implements the vendor dt-bindings")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-4-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 901e192ac91e5cd4172bdf3e3ca0b4d778d98c2b
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Mar 8 18:09:47 2022 +0800

    pinctrl: mediatek: paris: Fix PIN_CONFIG_BIAS_* readback
    
    [ Upstream commit 3e8c6bc608480010f360c4a59578d7841726137d ]
    
    When reading back pin bias settings, if the pin is not in the
    corresponding bias state, the function should return -EINVAL.
    
    Fix this in the mediatek-paris pinctrl library so that the read back
    state is not littered with bogus a "input bias disabled" combined with
    "pull up" or "pull down" states.
    
    Fixes: 805250982bb5 ("pinctrl: mediatek: add pinctrl-paris that implements the vendor dt-bindings")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308100956.2750295-3-wenst@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72ea0fefea18b8b0e1309187098d4ec74bc057ac
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 07:11:54 2022 +0000

    pinctrl: mediatek: Fix missing of_node_put() in mtk_pctrl_init
    
    [ Upstream commit dab4df9ca919f59e5b9dd84385eaf34d4f20dbb0 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: a6df410d420a ("pinctrl: mediatek: Add Pinctrl/GPIO driver for mt8135.")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220308071155.21114-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fddbfe43bf072a5351c6393abb62c8e9f31d7352
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Fri Mar 11 12:03:20 2022 +0300

    staging: mt7621-dts: fix GB-PC2 devicetree
    
    [ Upstream commit 5bc148649cf358d0cccf525452a4efbd4bc89a0f ]
    
    Fix the GB-PC2 devicetree. Refer to the schematics of the device for more
    information.
    
    GB-PC2 devicetree fixes:
    - Include mt7621.dtsi instead of gbpc1.dts. Add the missing definitions.
    - Remove gpio-leds node as the system LED is not wired to anywhere on
    the board and the power LED is directly wired to GND.
    - Remove uart3 pin group from gpio-pinmux node as it's not used as GPIO.
    - Use reg 7 for the external phy to be on par with
    Documentation/devicetree/bindings/net/dsa/mt7530.txt.
    - Use the status value "okay".
    
    Link: https://github.com/ngiger/GnuBee_Docs/blob/master/GB-PCx/Documents/GB-PC2_V1.1_schematic.pdf
    Reviewed-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Link: https://lore.kernel.org/r/20220311090320.3068-2-arinc.unal@arinc9.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00e0739ca1263d19d4d2590e00848f18fc54be65
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Tue Jan 25 18:39:03 2022 +0300

    staging: mt7621-dts: fix pinctrl properties for ethernet
    
    [ Upstream commit 0a93c0d75809582893e82039143591b9265b520e ]
    
    Add pinctrl properties with rgmii1 & mdio pins under ethernet node which
    was wrongfully put under an external phy node.
    GMAC1 will start working with this fix.
    
    Link: https://lore.kernel.org/netdev/02ecce91-7aad-4392-c9d7-f45ca1b31e0b@arinc9.com/T/
    
    Move GB-PC2 specific phy_external node to its own device tree.
    
    Reviewed-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Link: https://lore.kernel.org/r/20220125153903.1469-5-arinc.unal@arinc9.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47c31fe8ca78388fa10568a8f173235f50922327
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Tue Jan 25 18:39:00 2022 +0300

    staging: mt7621-dts: fix formatting
    
    [ Upstream commit 7eeec44d33f6be7caca4fe9ca4e653cf315a36c1 ]
    
    Fix formatting on mt7621.dtsi.
    
    Reviewed-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Link: https://lore.kernel.org/r/20220125153903.1469-2-arinc.unal@arinc9.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59ec187d7c08e8739cf675b7445075fb4d338dd0
Author: Arınç ÜNAL <arinc.unal@arinc9.com>
Date:   Fri Mar 11 12:03:19 2022 +0300

    staging: mt7621-dts: fix LEDs and pinctrl on GB-PC1 devicetree
    
    [ Upstream commit 6256e18686158fa49e019297f990f1c1817aabf1 ]
    
    Fix LED and pinctrl definitions on the GB-PC1 devicetree. Refer to the
    schematics of the device for more information.
    
    LED fixes:
    - Change GPIO6 LED label from system to power as GPIO6 is connected to
    PLED.
    - Add default-on default-trigger to power LED.
    - Change GPIO8 LED label from status to system as GPIO8 is connected to
    SYS_LED.
    - Add disk-activity default-trigger to system LED.
    - Switch to the color:function naming scheme.
    - Remove lan1 and lan2 LEDs as they don't exist.
    
    Pinctrl fixes:
    - Claim state_default node under pinctrl node.
    - Change pinctrl0 node name to state-default.
    - Change gpio node name to gpio-pinmux to respect
    Documentation/devicetree/bindings/pinctrl/ralink,rt2880-pinmux.yaml.
    - Sort pin groups alphabetically.
    
    Misc fixes:
    - Fix formatting.
    - Use the status value "okay".
    - Define hexadecimal addresses in lower case.
    - Make hexadecimal addresses for memory easier to read.
    
    Link: https://github.com/ngiger/GnuBee_Docs/blob/master/GB-PCx/Documents/GB-PC1_V1.0_Schematic.pdf
    Tested-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Signed-off-by: Arınç ÜNAL <arinc.unal@arinc9.com>
    Link: https://lore.kernel.org/r/20220311090320.3068-1-arinc.unal@arinc9.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 942f68bf2950b4057804eff1c636bc3f6c7625d4
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Tue Feb 15 13:17:04 2022 +0300

    NFS: remove unneeded check in decode_devicenotify_args()
    
    [ Upstream commit cb8fac6d2727f79f211e745b16c9abbf4d8be652 ]
    
    [You don't often get email from khoroshilov@ispras.ru. Learn why this is important at http://aka.ms/LearnAboutSenderIdentification.]
    
    Overflow check in not needed anymore after we switch to kmalloc_array().
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: a4f743a6bb20 ("NFSv4.1: Convert open-coded array allocation calls to kmalloc_array()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e025c66387204945b2f2f9fbc3a91095cc6da3a2
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 12 10:45:01 2022 +0000

    clk: tegra: tegra124-emc: Fix missing put_device() call in emc_ensure_emc_driver
    
    [ Upstream commit 6d6ef58c2470da85a99119f74d34216c8074b9f0 ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore.
    Add the corresponding 'put_device()' in the error handling path.
    
    Fixes: 2db04f16b589 ("clk: tegra: Add EMC clock driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Link: https://lore.kernel.org/r/20220112104501.30655-1-linmq006@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54c8128297418099c812507520dbdd2f32f84c3e
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Fri Feb 18 01:09:20 2022 +0100

    clk: clps711x: Terminate clk_div_table with sentinel element
    
    [ Upstream commit 8bed4ed5aa3431085d9d27afc35d684856460eda ]
    
    In order that the end of a clk_div_table can be detected, it must be
    terminated with a sentinel element (.div = 0).
    
    Fixes: 631c53478973d ("clk: Add CLPS711X clk driver")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Link: https://lore.kernel.org/r/20220218000922.134857-5-j.neuschaefer@gmx.net
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ff533033d8e3e1823ee2e512cd466b8979d9fc1
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Fri Feb 18 01:09:18 2022 +0100

    clk: loongson1: Terminate clk_div_table with sentinel element
    
    [ Upstream commit 3eb00f89162e80083dfcaa842468b510462cfeaa ]
    
    In order that the end of a clk_div_table can be detected, it must be
    terminated with a sentinel element (.div = 0).
    
    Fixes: b4626a7f4892 ("CLK: Add Loongson1C clock support")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Philippe Mathieu-Daudé <f4bug@amsat.org>
    Link: https://lore.kernel.org/r/20220218000922.134857-3-j.neuschaefer@gmx.net
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb680cabf2429cd2465c0f52cd9a152349f4f282
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Fri Feb 18 01:09:17 2022 +0100

    clk: actions: Terminate clk_div_table with sentinel element
    
    [ Upstream commit d8a441e53e2434b1401e52dfd66b05263e442edc ]
    
    In order that the end of a clk_div_table can be detected, it must be
    terminated with a sentinel element (.div = 0).
    
    In owl-s900.s, the { 0, 8 } element was probably meant to be just that,
    so this patch changes { 0, 8 } to { 0, 0 }.
    
    Fixes: d47317ca4ade1 ("clk: actions: Add S700 SoC clock support")
    Fixes: d85d20053e195 ("clk: actions: Add S900 SoC clock support")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Manivannan Sadhasivam <mani@kernel.org>
    Link: https://lore.kernel.org/r/20220218000922.134857-2-j.neuschaefer@gmx.net
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 431f8a9cec07537050b59837f1111ff3f2609f0c
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Mar 9 19:49:21 2022 -0800

    nvdimm/region: Fix default alignment for small regions
    
    [ Upstream commit d9d290d7e659e9db3e4518040cc18b97f5535f4a ]
    
    In preparation for removing BLK aperture support the NVDIMM unit tests
    discovered that the default alignment can be set higher than the
    capacity of the region. Fall back to PAGE_SIZE in that case.
    
    Given this has not been seen in the wild, elide notifying -stable.
    
    Fixes: 2522afb86a8c ("libnvdimm/region: Introduce an 'align' attribute")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/164688416128.2879318.17890707310125575258.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7210ca29a783c94478da02368731e4c9cf7cdb7
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 06:45:21 2022 +0000

    remoteproc: qcom_q6v5_mss: Fix some leaks in q6v5_alloc_memory_region
    
    [ Upstream commit 07a5dcc4bed9d7cae54adf5aa10ff9f037a3204b ]
    
    The device_node pointer is returned by of_parse_phandle() or
    of_get_child_by_name() with refcount incremented.
    We should use of_node_put() on it when done.
    
    This function only call of_node_put(node) when of_address_to_resource
    succeeds, missing error cases.
    
    Fixes: 278d744c46fd ("remoteproc: qcom: Fix potential device node leaks")
    Fixes: 051fb70fd4ea ("remoteproc: qcom: Driver for the self-authenticating Hexagon v5")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220308064522.13804-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a494580a89b73662b1cfe2e3c1ee4bb8ff5b5d9
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 06:31:02 2022 +0000

    remoteproc: qcom_wcnss: Add missing of_node_put() in wcnss_alloc_memory_region
    
    [ Upstream commit 8f90161a66bc3d6b9fe8dde4d9028d20eae1b62a ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: aed361adca9f ("remoteproc: qcom: Introduce WCNSS peripheral image loader")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220308063102.10049-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c1d484d966115d3d27809a16241ea89519a78d5
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 03:12:19 2022 +0000

    remoteproc: qcom: Fix missing of_node_put in adsp_alloc_memory_region
    
    [ Upstream commit 505b5b1616e200042999de715dbe7c1e2735cd65 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: dc160e449122 ("remoteproc: qcom: Introduce Non-PAS ADSP PIL driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220308031219.4718-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f95fd61dd85a86f15d431286d3c0297900fa51bd
Author: Jie Hai <haijie1@huawei.com>
Date:   Wed Feb 16 15:21:01 2022 +0800

    dmaengine: hisi_dma: fix MSI allocate fail when reload hisi_dma
    
    [ Upstream commit b95044b38425f563404234d96bbb20cc6360c7e1 ]
    
    Remove the loaded hisi_dma driver and reload it, the driver fails
    to work properly. The following error is reported in the kernel log:
    
    [ 1475.597609] hisi_dma 0000:7b:00.0: Failed to allocate MSI vectors!
    [ 1475.604915] hisi_dma: probe of 0000:7b:00.0 failed with error -28
    
    As noted in "The MSI Driver Guide HOWTO"[1], the number of MSI
    interrupt must be a power of two. The Kunpeng DMA driver allocates 30
    MSI interrupts. As a result, no space left on device is reported
    when the driver is reloaded and allocates interrupt vectors from the
    interrupt domain.
    
    This patch changes the number of interrupt vectors allocated by
    hisi_dma driver to 32 to avoid this problem.
    
    [1] https://www.kernel.org/doc/html/latest/PCI/msi-howto.html
    
    Fixes: e9f08b65250d ("dmaengine: hisilicon: Add Kunpeng DMA engine support")
    
    Signed-off-by: Jie Hai <haijie1@huawei.com>
    Acked-by: Zhou Wang <wangzhou1@hisilicon.com>
    Link: https://lore.kernel.org/r/20220216072101.34473-1-haijie1@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d047d68ff0316502d1b79f15e990c510faf6591c
Author: Taniya Das <tdas@codeaurora.org>
Date:   Sun Feb 27 23:25:36 2022 +0530

    clk: qcom: clk-rcg2: Update the frac table for pixel clock
    
    [ Upstream commit b527358cb4cd58a8279c9062b0786f1fab628fdc ]
    
    Support the new numerator and denominator for pixel clock on SM8350 and
    support rgb101010, RGB888 use cases on SM8450.
    
    Fixes: 99cbd064b059f ("clk: qcom: Support display RCG clocks")
    Signed-off-by: Taniya Das <tdas@codeaurora.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220227175536.3131-2-tdas@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 334720f418f57b1d969dad2117b21f9388cb9395
Author: Taniya Das <tdas@codeaurora.org>
Date:   Sun Feb 27 23:25:35 2022 +0530

    clk: qcom: clk-rcg2: Update logic to calculate D value for RCG
    
    [ Upstream commit 58922910add18583d5273c2edcdb9fd7bf4eca02 ]
    
    The display pixel clock has a requirement on certain newer platforms to
    support M/N as (2/3) and the final D value calculated results in
    underflow errors.
    As the current implementation does not check for D value is within
    the accepted range for a given M & N value. Update the logic to
    calculate the final D value based on the range.
    
    Fixes: 99cbd064b059f ("clk: qcom: Support display RCG clocks")
    Signed-off-by: Taniya Das <tdas@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220227175536.3131-1-tdas@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 639744b2429f01c977e4d3771768d9f0e2617868
Author: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
Date:   Fri Mar 4 20:26:16 2022 +0200

    clk: at91: sama7g5: fix parents of PDMCs' GCLK
    
    [ Upstream commit 1a944729d8635fa59638f24e8727d5ccaa0c8c19 ]
    
    Audio PLL can be used as parent by the GCLKs of PDMCs.
    
    Fixes: cb783bbbcf54 ("clk: at91: sama7g5: add clock support for sama7g5")
    Signed-off-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Link: https://lore.kernel.org/r/20220304182616.1920392-1-codrin.ciubotariu@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0553ecbce95e063679d257b9759bf9193bcd2f54
Author: Abel Vesa <abel.vesa@nxp.com>
Date:   Thu Jan 27 16:10:52 2022 +0200

    clk: imx7d: Remove audio_mclk_root_clk
    
    [ Upstream commit eccac77ede3946c90143447cdc785dc16aec4b24 ]
    
    The audio_mclk_root_clk was added as a gate with the CCGR121 (0x4790),
    but according to the reference manual, there is no such gate. The
    CCGR121 belongs to ECSPI2 and it is not shared.
    
    Fixes: 8f6d8094b215b57 ("ARM: imx: add imx7d clk tree support")
    Reported-by: David Wolfe <david.wolfe@nxp.com>
    Signed-off-by: Abel Vesa <abel.vesa@nxp.com>
    Reviewed-by: Peng Fan <peng.fan@nxp.com>
    Link: https://lore.kernel.org/r/20220127141052.1900174-2-abel.vesa@nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 867258d3f37da1ef2023d9857b0af533e745e050
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:04:53 2022 -0800

    dma-debug: fix return value of __setup handlers
    
    [ Upstream commit 80e4390981618e290616dbd06ea190d4576f219d ]
    
    When valid kernel command line parameters
      dma_debug=off dma_debug_entries=100
    are used, they are reported as Unknown parameters and added to init's
    environment strings, polluting it.
    
      Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc5
        dma_debug=off dma_debug_entries=100", will be passed to user space.
    
    and
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         dma_debug=off
         dma_debug_entries=100
    
    Return 1 from these __setup handlers to indicate that the command line
    option has been handled.
    
    Fixes: 59d3daafa1726 ("dma-debug: add kernel command line parameters")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: iommu@lists.linux-foundation.org
    Cc: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f3885514e410a90123ee3b81b11529eb81efcea
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Feb 24 10:59:37 2022 -0500

    NFS: Return valid errors from nfs2/3_decode_dirent()
    
    [ Upstream commit 64cfca85bacde54caa64e0ab855c48734894fa37 ]
    
    Valid return values for decode_dirent() callback functions are:
     0: Success
     -EBADCOOKIE: End of directory
     -EAGAIN: End of xdr_stream
    
    All errors need to map into one of those three values.
    
    Fixes: 573c4e1ef53a ("NFS: Simplify ->decode_dirent() calling sequence")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b59afe84ad916906beb0ec7eb04918260d1c552
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 24 14:58:05 2022 +0800

    habanalabs: Add check for pci_enable_device
    
    [ Upstream commit 9c27896ac1bb83ea5c461ce6f7089d02102a2b21 ]
    
    As the potential failure of the pci_enable_device(),
    it should be better to check the return value and return
    error if fails.
    
    Fixes: 70b2f993ea4a ("habanalabs: create common folder")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afcbc6375233d3b25cdf1bd60072df851b918bce
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 24 14:28:49 2022 +0800

    iio: adc: Add check for devm_request_threaded_irq
    
    [ Upstream commit b30537a4cedcacf0ade2f33ebb7610178ed1e7d7 ]
    
    As the potential failure of the devm_request_threaded_irq(),
    it should be better to check the return value and return
    error if fails.
    
    Fixes: fa659a40b80b ("iio: adc: twl6030-gpadc: Use devm_* API family")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220224062849.3280966-1-jiasheng@iscas.ac.cn
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df2dc4cf71fa9bfc25115e69c41be97890aa1ece
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Feb 15 17:02:36 2022 +0100

    serial: 8250: Fix race condition in RTS-after-send handling
    
    [ Upstream commit dedab69fd650ea74710b2e626e63fd35584ef773 ]
    
    Set em485->active_timer = NULL isn't always enough to take out the stop
    timer. While there is a check that it acts in the right state (i.e.
    waiting for RTS-after-send to pass after sending some chars) but the
    following might happen:
    
     - CPU1: some chars send, shifter becomes empty, stop tx timer armed
     - CPU0: more chars send before RTS-after-send expired
     - CPU0: shifter empty irq, port lock taken
     - CPU1: tx timer triggers, waits for port lock
     - CPU0: em485->active_timer = &em485->stop_tx_timer, hrtimer_start(),
       releases lock()
     - CPU1: get lock, see em485->active_timer == &em485->stop_tx_timer,
       tear down RTS too early
    
    This fix bases on research done by Steffen Trumtrar.
    
    Fixes: b86f86e8e7c5 ("serial: 8250: fix potential deadlock in rs485-mode")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20220215160236.344236-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 469ce5119f221ecf09549d0fadf340344df0309e
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Feb 15 15:58:38 2022 -0500

    NFS: Use of mapping_set_error() results in spurious errors
    
    [ Upstream commit 6c984083ec2453dfd3fcf98f392f34500c73e3f2 ]
    
    The use of mapping_set_error() in conjunction with calls to
    filemap_check_errors() is problematic because every error gets reported
    as either an EIO or an ENOSPC by filemap_check_errors() in functions
    such as filemap_write_and_wait() or filemap_write_and_wait_range().
    In almost all cases, we prefer to use the more nuanced wb errors.
    
    Fixes: b8946d7bfb94 ("NFS: Revalidate the file mapping on all fatal writeback errors")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 659fe4d653a2d628a22d3b560e33b581e6b63625
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Feb 23 17:12:40 2022 +0200

    serial: 8250_lpss: Balance reference count for PCI DMA device
    
    [ Upstream commit 5318f70da7e82649d794fc27d8a127c22aa3566e ]
    
    The pci_get_slot() increases its reference count, the caller
    must decrement the reference count by calling pci_dev_put().
    
    Fixes: 9a1870ce812e ("serial: 8250: don't use slave_id of dma_slave_config")
    Depends-on: a13e19cf3dc1 ("serial: 8250_lpss: split LPSS driver to separate module")
    Reported-by: Qing Wang <wangqing@vivo.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20220223151240.70248-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0aebb3944ab1a4f74f3e3e4427f0eb5837d3489c
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Feb 15 12:09:20 2022 +0200

    serial: 8250_mid: Balance reference count for PCI DMA device
    
    [ Upstream commit 67ec6dd0b257bd81b4e9fcac89b29da72f6265e5 ]
    
    The pci_get_slot() increases its reference count, the caller
    must decrement the reference count by calling pci_dev_put().
    
    Fixes: 90b9aacf912a ("serial: 8250_pci: add Intel Tangier support")
    Fixes: f549e94effa1 ("serial: 8250_pci: add Intel Penwell ports")
    Reported-by: Qing Wang <wangqing@vivo.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Depends-on: d9eda9bab237 ("serial: 8250_pci: Intel MID UART support to its own driver")
    Link: https://lore.kernel.org/r/20220215100920.41984-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c92bd51313bf91f721087052290d782c9d0666d4
Author: Liu Ying <victor.liu@nxp.com>
Date:   Wed Feb 16 15:12:57 2022 +0800

    phy: dphy: Correct lpx parameter and its derivatives(ta_{get,go,sure})
    
    [ Upstream commit 3153fa38e38af566cf6454a03b1dbadaf6f323c0 ]
    
    According to the comment of the function phy_mipi_dphy_get_default_config(),
    it uses minimum D-PHY timings based on MIPI D-PHY specification.  They are
    derived from the valid ranges specified in Section 6.9, Table 14, Page 41
    of the D-PHY specification (v1.2).  The table 14 explicitly mentions that
    the minimum T-LPX parameter is 50 nanoseconds and the minimum TA-SURE
    parameter is T-LPX nanoseconds.  Likewise, the kernel doc of the 'lpx' and
    'ta_sure' members of struct phy_configure_opts_mipi_dphy mentions that
    the minimum values are 50000 picoseconds and @lpx picoseconds respectively.
    Also, the function phy_mipi_dphy_config_validate() checks if cfg->lpx is
    less than 50000 picoseconds and if cfg->ta_sure is less than cfg->lpx,
    which hints the same minimum values.
    
    Without this patch, the function phy_mipi_dphy_get_default_config()
    wrongly sets cfg->lpx to 60000 picoseconds and cfg->ta_sure to 2 * cfg->lpx.
    So, let's correct them to 50000 picoseconds and cfg->lpx respectively.
    
    Note that I've only tested the patch with RM67191 DSI panel on i.MX8mq EVK.
    Help is needed to test with other i.MX8mq, Meson and Rockchip platforms,
    as I don't have the hardwares.
    
    Fixes: dddc97e82303 ("phy: dphy: Add configuration helpers")
    Cc: Andrzej Hajda <andrzej.hajda@intel.com>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Kishon Vijay Abraham I <kishon@ti.com>
    Cc: Vinod Koul <vkoul@kernel.org>
    Cc: Heiko Stuebner <heiko@sntech.de>
    Cc: Maxime Ripard <mripard@kernel.org>
    Cc: Guido Günther <agx@sigxcpu.org>
    Signed-off-by: Liu Ying <victor.liu@nxp.com>
    Link: https://lore.kernel.org/r/20220216071257.1647703-1-victor.liu@nxp.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80805f555e22baf5245204fff428974711537364
Author: Dirk Buchwalder <buchwalder@posteo.de>
Date:   Thu Feb 10 18:31:00 2022 +0100

    clk: qcom: ipq8074: Use floor ops for SDCC1 clock
    
    [ Upstream commit b77d8306d84f83d1da68028a68c91da9c867b6f6 ]
    
    Use floor ops on SDCC1 APPS clock in order to round down selected clock
    frequency and avoid overclocking SD/eMMC cards.
    
    For example, currently HS200 cards were failling tuning as they were
    actually being clocked at 384MHz instead of 192MHz.
    This caused some boards to disable 1.8V I/O and force the eMMC into the
    standard HS mode (50MHz) and that appeared to work despite the eMMC being
    overclocked to 96Mhz in that case.
    
    There was a previous commit to use floor ops on SDCC clocks, but it looks
    to have only covered SDCC2 clock.
    
    Fixes: 9607f6224b39 ("clk: qcom: ipq8074: add PCIE, USB and SDCC clocks")
    
    Signed-off-by: Dirk Buchwalder <buchwalder@posteo.de>
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220210173100.505128-1-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd2601e3665e642d0887243e0fbe7bad69a088a6
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Feb 21 17:21:58 2022 +0100

    pinctrl: renesas: checker: Fix miscalculation of number of states
    
    [ Upstream commit de9b861018d46af27a5edff8b6baef35c0c0ad4f ]
    
    The checker failed to validate all enum IDs in the description of a
    register with fixed-width register fields, due to a miscalculation of
    the number of described states: each register field of n bits can have
    "1 << n" possible states, not "1".
    
    Increase SH_PFC_MAX_ENUMS accordingly, now more enum IDs are checked
    (SH-Mobile AG5 has more than 4000 enum IDs defined).
    
    Fixes: 12d057bad683b1c6 ("pinctrl: sh-pfc: checker: Add check for enum ID conflicts")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/6d8a6a05564f38f9d20464c1c17f96e52740cf6a.1645460429.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5cf977515b5b59dc82b5c0206244d2c73ee4683
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 23 15:41:11 2021 +0100

    pinctrl: renesas: r8a77470: Reduce size for narrow VIN1 channel
    
    [ Upstream commit 9e04a0eda84fccab0ac22a33825ad53f47c968c7 ]
    
    The second video-in channel on RZ/G1C has only 12 data lanes, but the
    pin control driver uses the vin_data union, which is meant for 24 data
    lanes, thus wasting space.
    
    Fix this by using the vin_data12 union instead.
    
    This reduces kernel size by 96 bytes.
    
    Fixes: 50f3f2d73e3426ba ("pinctrl: sh-pfc: Reduce kernel size for narrow VIN channels")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/52716fa89139f6f92592633edb52804d4c5e18f0.1640269757.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5db33a81ee7acf557dabf03ada137e6e5d5a278
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Feb 6 19:03:09 2022 +0000

    staging:iio:adc:ad7280a: Fix handing of device address bit reversing.
    
    [ Upstream commit f281e4ddbbc0b60f061bc18a2834e9363ba85f9f ]
    
    The bit reversal was wrong for bits 1 and 3 of the 5 bits.
    Result is driver failure to probe if you have more than 2 daisy-chained
    devices.  Discovered via QEMU based device emulation.
    
    Fixes tag is for when this moved from a macro to a function, but it
    was broken before that.
    
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Fixes: 065a7c0b1fec ("Staging: iio: adc: ad7280a.c: Fixed Macro argument reuse")
    Reviewed-by: Marcelo Schmitt <marcelo.schmitt1@gmail.com>
    Link: https://lore.kernel.org/r/20220206190328.333093-2-jic23@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5b01abf5f6529936d2c7932f8567100faaae635
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 8 13:43:35 2022 +0100

    iio: mma8452: Fix probe failing when an i2c_device_id is used
    
    [ Upstream commit a47ac019e7e8129b93a0b991e04b2a59872e053d ]
    
    The mma8452_driver declares both of_match_table and i2c_driver.id_table
    match-tables, but its probe() function only checked for of matches.
    
    Add support for i2c_device_id matches. This fixes the driver not loading
    on some x86 tablets (e.g. the Nextbook Ares 8) where the i2c_client is
    instantiated by platform code using an i2c_device_id.
    
    Drop of_match_ptr() protection to avoid unused warning.
    
    Fixes: c3cdd6e48e35 ("iio: mma8452: refactor for seperating chip specific data")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220208124336.511884-1-hdegoede@redhat.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b89c9e68a01a19a1dd689a42aa65d545e931899
Author: Robert Marko <robimarko@gmail.com>
Date:   Mon Dec 20 12:41:19 2021 +0100

    clk: qcom: ipq8074: fix PCI-E clock oops
    
    [ Upstream commit bf8f5182b8f59309809b41c1d1730ed9ca6134b1 ]
    
    Fix PCI-E clock related kernel oops that are caused by a missing clock
    parent.
    
    pcie0_rchng_clk_src has num_parents set to 2 but only one parent is
    actually set via parent_hws, it should also have "XO" defined.
    This will cause the kernel to panic on a NULL pointer in
    clk_core_get_parent_by_index().
    
    So, to fix this utilize clk_parent_data to provide gcc_xo_gpll0 parent
    data.
    Since there is already an existing static const char * const gcc_xo_gpll0[]
    used to provide the same parents via parent_names convert those users to
    clk_parent_data as well.
    
    Without this earlycon is needed to even catch the OOPS as it will reset
    the board before serial is initialized with the following:
    
    [    0.232279] Unable to handle kernel paging request at virtual address 0000a00000000000
    [    0.232322] Mem abort info:
    [    0.239094]   ESR = 0x96000004
    [    0.241778]   EC = 0x25: DABT (current EL), IL = 32 bits
    [    0.244908]   SET = 0, FnV = 0
    [    0.250377]   EA = 0, S1PTW = 0
    [    0.253236]   FSC = 0x04: level 0 translation fault
    [    0.256277] Data abort info:
    [    0.261141]   ISV = 0, ISS = 0x00000004
    [    0.264262]   CM = 0, WnR = 0
    [    0.267820] [0000a00000000000] address between user and kernel address ranges
    [    0.270954] Internal error: Oops: 96000004 [#1] SMP
    [    0.278067] Modules linked in:
    [    0.282751] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.15.10 #0
    [    0.285882] Hardware name: Xiaomi AX3600 (DT)
    [    0.292043] pstate: 20400005 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [    0.296299] pc : clk_core_get_parent_by_index+0x68/0xec
    [    0.303067] lr : __clk_register+0x1d8/0x820
    [    0.308273] sp : ffffffc01111b7d0
    [    0.312438] x29: ffffffc01111b7d0 x28: 0000000000000000 x27: 0000000000000040
    [    0.315919] x26: 0000000000000002 x25: 0000000000000000 x24: ffffff8000308800
    [    0.323037] x23: ffffff8000308850 x22: ffffff8000308880 x21: ffffff8000308828
    [    0.330155] x20: 0000000000000028 x19: ffffff8000309700 x18: 0000000000000020
    [    0.337272] x17: 000000005cc86990 x16: 0000000000000004 x15: ffffff80001d9d0a
    [    0.344391] x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000006
    [    0.351508] x11: 0000000000000003 x10: 0101010101010101 x9 : 0000000000000000
    [    0.358626] x8 : 7f7f7f7f7f7f7f7f x7 : 6468626f5e626266 x6 : 17000a3a403c1b06
    [    0.365744] x5 : 061b3c403a0a0017 x4 : 0000000000000000 x3 : 0000000000000001
    [    0.372863] x2 : 0000a00000000000 x1 : 0000000000000001 x0 : ffffff8000309700
    [    0.379982] Call trace:
    [    0.387091]  clk_core_get_parent_by_index+0x68/0xec
    [    0.389351]  __clk_register+0x1d8/0x820
    [    0.394210]  devm_clk_hw_register+0x5c/0xe0
    [    0.398030]  devm_clk_register_regmap+0x44/0x8c
    [    0.402198]  qcom_cc_really_probe+0x17c/0x1d0
    [    0.406711]  qcom_cc_probe+0x34/0x44
    [    0.411224]  gcc_ipq8074_probe+0x18/0x30
    [    0.414869]  platform_probe+0x68/0xe0
    [    0.418776]  really_probe.part.0+0x9c/0x30c
    [    0.422336]  __driver_probe_device+0x98/0x144
    [    0.426329]  driver_probe_device+0x44/0x11c
    [    0.430842]  __device_attach_driver+0xb4/0x120
    [    0.434836]  bus_for_each_drv+0x68/0xb0
    [    0.439349]  __device_attach+0xb0/0x170
    [    0.443081]  device_initial_probe+0x14/0x20
    [    0.446901]  bus_probe_device+0x9c/0xa4
    [    0.451067]  device_add+0x35c/0x834
    [    0.454886]  of_device_add+0x54/0x64
    [    0.458360]  of_platform_device_create_pdata+0xc0/0x100
    [    0.462181]  of_platform_bus_create+0x114/0x370
    [    0.467128]  of_platform_bus_create+0x15c/0x370
    [    0.471641]  of_platform_populate+0x50/0xcc
    [    0.476155]  of_platform_default_populate_init+0xa8/0xc8
    [    0.480324]  do_one_initcall+0x50/0x1b0
    [    0.485877]  kernel_init_freeable+0x234/0x29c
    [    0.489436]  kernel_init+0x24/0x120
    [    0.493948]  ret_from_fork+0x10/0x20
    [    0.497253] Code: d50323bf d65f03c0 f94002a2 b4000302 (f9400042)
    [    0.501079] ---[ end trace 4ca7e1129da2abce ]---
    
    Fixes: f0cfcf1a ("clk: qcom: ipq8074: Add missing clocks for pcie")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211220114119.465247-1-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a70d5dbe2e4ead2f9ddce9895ea3b08d76b4a3ff
Author: Libin Yang <libin.yang@intel.com>
Date:   Wed Jan 26 09:14:51 2022 +0800

    soundwire: intel: fix wrong register name in intel_shim_wake
    
    [ Upstream commit 3957db3ae3dae6f8b8168791f154567fe49e1fd7 ]
    
    When clearing the sdw wakests status, we should use SDW_SHIM_WAKESTS.
    
    Fixes: 4a17c441c7cb ("soundwire: intel: revisit SHIM programming sequences.")
    Signed-off-by: Libin Yang <libin.yang@intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Rander Wang <rander.wang@intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20220126011451.27853-1-yung-chuan.liao@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 091704a9a7f4611dae2f2332319bcf1e862d64a1
Author: Luca Weiss <luca@z3ntu.xyz>
Date:   Sun Jan 30 12:45:35 2022 +0100

    cpufreq: qcom-cpufreq-nvmem: fix reading of PVS Valid fuse
    
    [ Upstream commit 4a8a77abf0e2b6468ba0281e33384cbec5fb476a ]
    
    The fuse consists of 64 bits, with this statement we're supposed to get
    the upper 32 bits but it actually read out of bounds and got 0 instead
    of the desired value which lead to the "PVS bin not set." codepath being
    run resetting our pvs value.
    
    Fixes: a8811ec764f9 ("cpufreq: qcom: Add support for krait based socs")
    Signed-off-by: Luca Weiss <luca@z3ntu.xyz>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f90ad943221a59c6f795c42e2e794bca890b1189
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Feb 6 09:39:54 2022 +0100

    misc: alcor_pci: Fix an error handling path
    
    [ Upstream commit 5b3dc949f554379edcb8ef6111aa5ecb78feb798 ]
    
    A successful ida_simple_get() should be balanced by a corresponding
    ida_simple_remove().
    
    Add the missing call in the error handling path of the probe.
    
    While at it, switch to ida_alloc()/ida_free() instead to
    ida_simple_get()/ida_simple_remove().
    The latter is deprecated and more verbose.
    
    Fixes: 4f556bc04e3c ("misc: cardreader: add new Alcor Micro Cardreader PCI driver")
    Reviewed-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/918a9875b7f67b7f8f123c4446452603422e8c5e.1644136776.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 553541c4531ea6e6a69c9292a69ecb2e4c76d4b0
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 9 22:56:10 2022 +0100

    fsi: Aspeed: Fix a potential double free
    
    [ Upstream commit 83ba7e895debc529803a7a258653f2fe9bf3bf40 ]
    
    A struct device can never be devm_alloc()'ed.
    Here, it is embedded in "struct fsi_master", and "struct fsi_master" is
    embedded in "struct fsi_master_aspeed".
    
    Since "struct device" is embedded, the data structure embedding it must be
    released with the release function, as is already done here.
    
    So use kzalloc() instead of devm_kzalloc() when allocating "aspeed" and
    update all error handling branches accordingly.
    
    This prevent a potential double free().
    
    This also fix another issue if opb_readl() fails. Instead of a direct
    return, it now jumps in the error handling path.
    
    Fixes: 606397d67f41 ("fsi: Add ast2600 master driver")
    Suggested-by: Greg KH <gregkh@linuxfoundation.org>
    Suggested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/2c123f8b0a40dc1a061fae982169fe030b4f47e6.1641765339.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb212c3f0de7818cc0977e179707a079cbaab3d5
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Sat Dec 28 19:06:31 2019 +0000

    fsi: aspeed: convert to devm_platform_ioremap_resource
    
    [ Upstream commit a3469912f4caeea32ecbe0bf472b14634fecb38e ]
    
    Use devm_platform_ioremap_resource() to simplify code.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Reviewed-by: Andrew Jeffery <andrew@aj.id.au>
    Link: https://lore.kernel.org/r/20191228190631.26777-1-tiny.windzz@gmail.com
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0b3c06414c39ef473a9274f173c3737ddb09d7b
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Nov 10 09:49:48 2021 +0100

    pwm: lpc18xx-sct: Initialize driver data and hardware before pwmchip_add()
    
    [ Upstream commit 0401f24cd238ae200a23a13925f98de3d2c883b8 ]
    
    When a driver calls pwmchip_add() it has to be prepared to immediately
    get its callbacks called. So move allocation of driver data and hardware
    initialization before the call to pwmchip_add().
    
    This fixes a potential NULL pointer exception and a race condition on
    register writes.
    
    Fixes: 841e6f90bb78 ("pwm: NXP LPC18xx PWM/SCT driver")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cd05c38a27bee7fb42aa4d43174d68ac55dac0f
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Mon Jan 24 08:14:24 2022 +0100

    mxser: fix xmit_buf leak in activate when LSR == 0xff
    
    [ Upstream commit cd3a4907ee334b40d7aa880c7ab310b154fd5cd4 ]
    
    When LSR is 0xff in ->activate() (rather unlike), we return an error.
    Provided ->shutdown() is not called when ->activate() fails, nothing
    actually frees the buffer in this case.
    
    Fix this by properly freeing the buffer in a designated label. We jump
    there also from the "!info->type" if now too.
    
    Fixes: 6769140d3047 ("tty: mxser: use the tty_port_open method")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20220124071430.14907-6-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8513c93eadc6b1009de11033125b197bfe0ae3bd
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 07:29:47 2022 +0000

    mfd: asic3: Add missing iounmap() on error asic3_mfd_probe
    
    [ Upstream commit e84ee1a75f944a0fe3c277aaa10c426603d2b0bc ]
    
    Add the missing iounmap() before return from asic3_mfd_probe
    in the error handling case.
    
    Fixes: 64e8867ba809 ("mfd: tmio_mmc hardware abstraction for CNF area")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20220307072947.5369-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 084be6309f4f7d71cf7cbc4da6a6be513992b69f
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Mon Mar 21 11:22:29 2022 +0700

    tipc: fix the timer expires after interval 100ms
    
    [ Upstream commit 6a7d8cff4a3301087dd139293e9bddcf63827282 ]
    
    In the timer callback function tipc_sk_timeout(), we're trying to
    reschedule another timeout to retransmit a setup request if destination
    link is congested. But we use the incorrect timeout value
    (msecs_to_jiffies(100)) instead of (jiffies + msecs_to_jiffies(100)),
    so that the timer expires immediately, it's irrelevant for original
    description.
    
    In this commit we correct the timeout value in sk_reset_timer()
    
    Fixes: 6787927475e5 ("tipc: buffer overflow handling in listener socket")
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Link: https://lore.kernel.org/r/20220321042229.314288-1-hoang.h.le@dektech.com.au
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d8162371ce80542f882aaec24fad8bfd9724f9b
Author: Aaron Conole <aconole@redhat.com>
Date:   Fri Mar 18 08:43:19 2022 -0400

    openvswitch: always update flow key after nat
    
    [ Upstream commit 60b44ca6bd7518dd38fa2719bc9240378b6172c3 ]
    
    During NAT, a tuple collision may occur.  When this happens, openvswitch
    will make a second pass through NAT which will perform additional packet
    modification.  This will update the skb data, but not the flow key that
    OVS uses.  This means that future flow lookups, and packet matches will
    have incorrect data.  This has been supported since
    5d50aa83e2c8 ("openvswitch: support asymmetric conntrack").
    
    That commit failed to properly update the sw_flow_key attributes, since
    it only called the ovs_ct_nat_update_key once, rather than each time
    ovs_ct_nat_execute was called.  As these two operations are linked, the
    ovs_ct_nat_execute() function should always make sure that the
    sw_flow_key is updated after a successful call through NAT infrastructure.
    
    Fixes: 5d50aa83e2c8 ("openvswitch: support asymmetric conntrack")
    Cc: Dumitru Ceara <dceara@redhat.com>
    Cc: Numan Siddique <nusiddiq@redhat.com>
    Signed-off-by: Aaron Conole <aconole@redhat.com>
    Acked-by: Eelco Chaudron <echaudro@redhat.com>
    Link: https://lore.kernel.org/r/20220318124319.3056455-1-aconole@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4593c76a659d75d5c6bf2dbecefe01d24a2cb3e1
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Mar 21 09:59:57 2022 -0700

    tcp: ensure PMTU updates are processed during fastopen
    
    [ Upstream commit ed0c99dc0f499ff8b6e75b5ae6092ab42be1ad39 ]
    
    tp->rx_opt.mss_clamp is not populated, yet, during TFO send so we
    rise it to the local MSS. tp->mss_cache is not updated, however:
    
    tcp_v6_connect():
      tp->rx_opt.mss_clamp = IPV6_MIN_MTU - headers;
      tcp_connect():
         tcp_connect_init():
           tp->mss_cache = min(mtu, tp->rx_opt.mss_clamp)
         tcp_send_syn_data():
           tp->rx_opt.mss_clamp = tp->advmss
    
    After recent fixes to ICMPv6 PTB handling we started dropping
    PMTU updates higher than tp->mss_cache. Because of the stale
    tp->mss_cache value PMTU updates during TFO are always dropped.
    
    Thanks to Wei for helping zero in on the problem and the fix!
    
    Fixes: c7bb4b89033b ("ipv6: tcp: drop silly ICMPv6 packet too big messages")
    Reported-by: Andre Nash <alnash@fb.com>
    Reported-by: Neil Spring <ntspring@fb.com>
    Reviewed-by: Wei Wang <weiwan@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20220321165957.1769954-1-kuba@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b26091a02093104259ca64aeca73601e56160d62
Author: Jeremy Linton <jeremy.linton@arm.com>
Date:   Wed Mar 9 22:53:58 2022 -0600

    net: bcmgenet: Use stronger register read/writes to assure ordering
    
    [ Upstream commit 8d3ea3d402db94b61075617e71b67459a714a502 ]
    
    GCC12 appears to be much smarter about its dependency tracking and is
    aware that the relaxed variants are just normal loads and stores and
    this is causing problems like:
    
    [  210.074549] ------------[ cut here ]------------
    [  210.079223] NETDEV WATCHDOG: enabcm6e4ei0 (bcmgenet): transmit queue 1 timed out
    [  210.086717] WARNING: CPU: 1 PID: 0 at net/sched/sch_generic.c:529 dev_watchdog+0x234/0x240
    [  210.095044] Modules linked in: genet(E) nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat]
    [  210.146561] ACPI CPPC: PCC check channel failed for ss: 0. ret=-110
    [  210.146927] CPU: 1 PID: 0 Comm: swapper/1 Tainted: G            E     5.17.0-rc7G12+ #58
    [  210.153226] CPPC Cpufreq:cppc_scale_freq_workfn: failed to read perf counters
    [  210.161349] Hardware name: Raspberry Pi Foundation Raspberry Pi 4 Model B/Raspberry Pi 4 Model B, BIOS EDK2-DEV 02/08/2022
    [  210.161353] pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [  210.161358] pc : dev_watchdog+0x234/0x240
    [  210.161364] lr : dev_watchdog+0x234/0x240
    [  210.161368] sp : ffff8000080a3a40
    [  210.161370] x29: ffff8000080a3a40 x28: ffffcd425af87000 x27: ffff8000080a3b20
    [  210.205150] x26: ffffcd425aa00000 x25: 0000000000000001 x24: ffffcd425af8ec08
    [  210.212321] x23: 0000000000000100 x22: ffffcd425af87000 x21: ffff55b142688000
    [  210.219491] x20: 0000000000000001 x19: ffff55b1426884c8 x18: ffffffffffffffff
    [  210.226661] x17: 64656d6974203120 x16: 0000000000000001 x15: 6d736e617274203a
    [  210.233831] x14: 2974656e65676d63 x13: ffffcd4259c300d8 x12: ffffcd425b07d5f0
    [  210.241001] x11: 00000000ffffffff x10: ffffcd425b07d5f0 x9 : ffffcd4258bdad9c
    [  210.248171] x8 : 00000000ffffdfff x7 : 000000000000003f x6 : 0000000000000000
    [  210.255341] x5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000001000
    [  210.262511] x2 : 0000000000001000 x1 : 0000000000000005 x0 : 0000000000000044
    [  210.269682] Call trace:
    [  210.272133]  dev_watchdog+0x234/0x240
    [  210.275811]  call_timer_fn+0x3c/0x15c
    [  210.279489]  __run_timers.part.0+0x288/0x310
    [  210.283777]  run_timer_softirq+0x48/0x80
    [  210.287716]  __do_softirq+0x128/0x360
    [  210.291392]  __irq_exit_rcu+0x138/0x140
    [  210.295243]  irq_exit_rcu+0x1c/0x30
    [  210.298745]  el1_interrupt+0x38/0x54
    [  210.302334]  el1h_64_irq_handler+0x18/0x24
    [  210.306445]  el1h_64_irq+0x7c/0x80
    [  210.309857]  arch_cpu_idle+0x18/0x2c
    [  210.313445]  default_idle_call+0x4c/0x140
    [  210.317470]  cpuidle_idle_call+0x14c/0x1a0
    [  210.321584]  do_idle+0xb0/0x100
    [  210.324737]  cpu_startup_entry+0x30/0x8c
    [  210.328675]  secondary_start_kernel+0xe4/0x110
    [  210.333138]  __secondary_switched+0x94/0x98
    
    The assumption when these were relaxed seems to be that device memory
    would be mapped non reordering, and that other constructs
    (spinlocks/etc) would provide the barriers to assure that packet data
    and in memory rings/queues were ordered with respect to device
    register reads/writes. This itself seems a bit sketchy, but the real
    problem with GCC12 is that it is moving the actual reads/writes around
    at will as though they were independent operations when in truth they
    are not, but the compiler can't know that. When looking at the
    assembly dumps for many of these routines its possible to see very
    clean, but not strictly in program order operations occurring as the
    compiler would be free to do if these weren't actually register
    reads/write operations.
    
    Its possible to suppress the timeout with a liberal bit of dma_mb()'s
    sprinkled around but the device still seems unable to reliably
    send/receive data. A better plan is to use the safer readl/writel
    everywhere.
    
    Since this partially reverts an older commit, which notes the use of
    the relaxed variants for performance reasons. I would suggest that
    any performance problems with this commit are targeted at relaxing only
    the performance critical code paths after assuring proper barriers.
    
    Fixes: 69d2ea9c79898 ("net: bcmgenet: Use correct I/O accessors")
    Reported-by: Peter Robinson <pbrobinson@gmail.com>
    Signed-off-by: Jeremy Linton <jeremy.linton@arm.com>
    Acked-by: Peter Robinson <pbrobinson@gmail.com>
    Tested-by: Peter Robinson <pbrobinson@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20220310045358.224350-1-jeremy.linton@arm.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9088614323f036a82f10aee0aec9e64304d6d427
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Mon Mar 21 13:34:46 2022 -0500

    PCI: Avoid broken MSI on SB600 USB devices
    
    [ Upstream commit 63cd736f449445edcd7f0bcc7d84453e9beec0aa ]
    
    Some ATI SB600 USB adapters advertise MSI, but if INTx is disabled by
    setting PCI_COMMAND_INTX_DISABLE, MSI doesn't work either.  The PCI/PCIe
    specs do not require software to set PCI_COMMAND_INTX_DISABLE when enabling
    MSI, but Linux has done that for many years.
    
    Mick reported that 306c54d0edb6 ("usb: hcd: Try MSI interrupts on PCI
    devices") broke these devices.  Prior to 306c54d0edb6, they used INTx.
    Starting with 306c54d0edb6, they use MSI, and and the fact that Linux sets
    PCI_COMMAND_INTX_DISABLE means both INTx and MSI are disabled on these
    devices.
    
    Avoid this SB600 defect by disabling MSI so we use INTx as before.
    
    Fixes: 306c54d0edb6 ("usb: hcd: Try MSI interrupts on PCI devices")
    Link: https://lore.kernel.org/r/20220321183446.1108325-1-helgaas@kernel.org
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215690
    Link: https://lore.kernel.org/all/PxIByDyBRcsbpcmVhGSNDFAoUcMmb78ctXCkw6fbpx25TGlCHvA6SJjjFkNr1FfQZMntYPTNyvEnblxzAZ8a6jP9ddLpKeCN6Chi_2FuexU=@protonmail.com/
    Link: https://lore.kernel.org/r/20220314101448.90074-1-andriy.shevchenko@linux.intel.com
    BugLink: https://lore.kernel.org/all/20200702143045.23429-1-andriy.shevchenko@linux.intel.com/
    Reported-by: Mick Lorain <micklorain@protonmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75a4a97b7463029d95acb422d630a53ee3ff28f3
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Mon Mar 21 10:41:49 2022 +0800

    selftests/bpf/test_lirc_mode2.sh: Exit with proper code
    
    [ Upstream commit ec80906b0fbd7be11e3e960813b977b1ffe5f8fe ]
    
    When test_lirc_mode2_user exec failed, the test report failed but still
    exit with 0. Fix it by exiting with an error code.
    
    Another issue is for the LIRCDEV checking. With bash -n, we need to quote
    the variable, or it will always be true. So if test_lirc_mode2_user was
    not run, just exit with skip code.
    
    Fixes: 6bdd533cee9a ("bpf: add selftest for lirc_mode2 type program")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220321024149.157861-1-liuhangbin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d3ad6142a05a3e0de5ff71438dd087ea0775266
Author: Peter Rosin <peda@axentia.se>
Date:   Wed Mar 2 12:22:35 2022 +0100

    i2c: mux: demux-pinctrl: do not deactivate a master that is not active
    
    [ Upstream commit 1a22aabf20adf89cb216f566913196128766f25b ]
    
    Attempting to rollback the activation of the current master when
    the current master has not been activated is bad. priv->cur_chan
    and priv->cur_adap are both still zeroed out and the rollback
    may result in attempts to revert an of changeset that has not been
    applied and do result in calls to both del and put the zeroed out
    i2c_adapter. Maybe it crashes, or whatever, but it's bad in any
    case.
    
    Fixes: e9d1a0a41d44 ("i2c: mux: demux-pinctrl: Fix an error handling path in 'i2c_demux_pinctrl_probe()'")
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c483f8002d17dcac65284b920026cf544f022762
Author: Lucas Tanure <tanure@linux.com>
Date:   Tue Mar 1 07:26:00 2022 +0000

    i2c: meson: Fix wrong speed use from probe
    
    [ Upstream commit cb13aa16f34f794a9cee2626862af8a95f0f0ee9 ]
    
    Having meson_i2c_set_clk_div after i2c_add_adapter
    causes issues for client drivers that try to use
    the bus before the requested speed is applied.
    
    The bus can be used just after i2c_add_adapter, so
    move i2c_add_adapter to the final step as
    meson_i2c_set_clk_div needs to be called before
    the bus is used.
    
    Fixes: 09af1c2fa490 ("i2c: meson: set clock divider in probe instead of setting it for each transfer")
    Signed-off-by: Lucas Tanure <tanure@linux.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0898362188e05b2202656058cc32d98fabf3bac
Author: Petr Machata <petrm@nvidia.com>
Date:   Thu Mar 17 15:53:06 2022 +0100

    af_netlink: Fix shift out of bounds in group mask calculation
    
    [ Upstream commit 0caf6d9922192dd1afa8dc2131abfb4df1443b9f ]
    
    When a netlink message is received, netlink_recvmsg() fills in the address
    of the sender. One of the fields is the 32-bit bitfield nl_groups, which
    carries the multicast group on which the message was received. The least
    significant bit corresponds to group 1, and therefore the highest group
    that the field can represent is 32. Above that, the UB sanitizer flags the
    out-of-bounds shift attempts.
    
    Which bits end up being set in such case is implementation defined, but
    it's either going to be a wrong non-zero value, or zero, which is at least
    not misleading. Make the latter choice deterministic by always setting to 0
    for higher-numbered multicast groups.
    
    To get information about membership in groups >= 32, userspace is expected
    to use nl_pktinfo control messages[0], which are enabled by NETLINK_PKTINFO
    socket option.
    [0] https://lwn.net/Articles/147608/
    
    The way to trigger this issue is e.g. through monitoring the BRVLAN group:
    
            # bridge monitor vlan &
            # ip link add name br type bridge
    
    Which produces the following citation:
    
            UBSAN: shift-out-of-bounds in net/netlink/af_netlink.c:162:19
            shift exponent 32 is too large for 32-bit type 'int'
    
    Fixes: f7fa9b10edbb ("[NETLINK]: Support dynamic number of multicast groups per netlink family")
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Link: https://lore.kernel.org/r/2bef6aabf201d1fc16cca139a744700cff9dcb04.1647527635.git.petrm@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40f3b8dadae8e8509166e31198065bc8f6144ed2
Author: Guillaume Nault <gnault@redhat.com>
Date:   Thu Mar 17 13:45:09 2022 +0100

    ipv4: Fix route lookups when handling ICMP redirects and PMTU updates
    
    [ Upstream commit 544b4dd568e3b09c1ab38a759d3187e7abda11a0 ]
    
    The PMTU update and ICMP redirect helper functions initialise their fl4
    variable with either __build_flow_key() or build_sk_flow_key(). These
    initialisation functions always set ->flowi4_scope with
    RT_SCOPE_UNIVERSE and might set the ECN bits of ->flowi4_tos. This is
    not a problem when the route lookup is later done via
    ip_route_output_key_hash(), which properly clears the ECN bits from
    ->flowi4_tos and initialises ->flowi4_scope based on the RTO_ONLINK
    flag. However, some helpers call fib_lookup() directly, without
    sanitising the tos and scope fields, so the route lookup can fail and,
    as a result, the ICMP redirect or PMTU update aren't taken into
    account.
    
    Fix this by extracting the ->flowi4_tos and ->flowi4_scope sanitisation
    code into ip_rt_fix_tos(), then use this function in handlers that call
    fib_lookup() directly.
    
    Note 1: We can't sanitise ->flowi4_tos and ->flowi4_scope in a central
    place (like __build_flow_key() or flowi4_init_output()), because
    ip_route_output_key_hash() expects non-sanitised values. When called
    with sanitised values, it can erroneously overwrite RT_SCOPE_LINK with
    RT_SCOPE_UNIVERSE in ->flowi4_scope. Therefore we have to be careful to
    sanitise the values only for those paths that don't call
    ip_route_output_key_hash().
    
    Note 2: The problem is mostly about sanitising ->flowi4_tos. Having
    ->flowi4_scope initialised with RT_SCOPE_UNIVERSE instead of
    RT_SCOPE_LINK probably wasn't really a problem: sockets with the
    SOCK_LOCALROUTE flag set (those that'd result in RTO_ONLINK being set)
    normally shouldn't receive ICMP redirects or PMTU updates.
    
    Fixes: 4895c771c7f0 ("ipv4: Add FIB nexthop exceptions.")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70a6cf749d9ff9f463490248322e5343199bc267
Author: Yake Yang <yake.yang@mediatek.com>
Date:   Thu Mar 17 07:15:19 2022 +0800

    Bluetooth: btmtksdio: Fix kernel oops in btmtksdio_interrupt
    
    [ Upstream commit b062a0b9c1dc1ff63094337dccfe1568d5b62023 ]
    
    Fix the following kernel oops in btmtksdio_interrrupt
    
    [   14.339134]  btmtksdio_interrupt+0x28/0x54
    [   14.339139]  process_sdio_pending_irqs+0x68/0x1a0
    [   14.339144]  sdio_irq_work+0x40/0x70
    [   14.339154]  process_one_work+0x184/0x39c
    [   14.339160]  worker_thread+0x228/0x3e8
    [   14.339168]  kthread+0x148/0x3ac
    [   14.339176]  ret_from_fork+0x10/0x30
    
    That happened because hdev->power_on is already called before
    sdio_set_drvdata which btmtksdio_interrupt handler relies on is not
    properly set up.
    
    The details are shown as the below: hci_register_dev would run
    queue_work(hdev->req_workqueue, &hdev->power_on) as WQ_HIGHPRI
    workqueue_struct to complete the power-on sequeunce and thus hci_power_on
    may run before sdio_set_drvdata is done in btmtksdio_probe.
    
    The hci_dev_do_open in hci_power_on would initialize the device and enable
    the interrupt and thus it is possible that btmtksdio_interrupt is being
    called right before sdio_set_drvdata is filled out.
    
    When btmtksdio_interrupt is being called and sdio_set_drvdata is not filled
    , the kernel oops is going to happen because btmtksdio_interrupt access an
    uninitialized pointer.
    
    Fixes: 9aebfd4a2200 ("Bluetooth: mediatek: add support for MediaTek MT7663S and MT7668S SDIO devices")
    Reviewed-by: Mark Chen <markyawenchen@gmail.com>
    Co-developed-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Yake Yang <yake.yang@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b441fcdff2ebaab6611cc4f83938f343843d291c
Author: Niels Dossche <dossche.niels@gmail.com>
Date:   Wed Mar 16 16:33:50 2022 +0100

    Bluetooth: call hci_le_conn_failed with hdev lock in hci_le_conn_failed
    
    [ Upstream commit 9fa6b4cda3b414e990f008f45f9bcecbcb54d4d1 ]
    
    hci_le_conn_failed function's documentation says that the caller must
    hold hdev->lock. The only callsite that does not hold that lock is
    hci_le_conn_failed. The other 3 callsites hold the hdev->lock very
    locally. The solution is to hold the lock during the call to
    hci_le_conn_failed.
    
    Fixes: 3c857757ef6e ("Bluetooth: Add directed advertising support through connect()")
    Signed-off-by: Niels Dossche <dossche.niels@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 876cfe1380c372b8715618470072ff6188b23a81
Author: Jakub Sitnicki <jakub@cloudflare.com>
Date:   Thu Mar 17 12:39:17 2022 +0100

    selftests/bpf: Fix error reporting from sock_fields programs
    
    [ Upstream commit a4c9fe0ed4a13e25e43fcd44d9f89bc19ba8fbb7 ]
    
    The helper macro that records an error in BPF programs that exercise sock
    fields access has been inadvertently broken by adaptation work that
    happened in commit b18c1f0aa477 ("bpf: selftest: Adapt sock_fields test to
    use skel and global variables").
    
    BPF_NOEXIST flag cannot be used to update BPF_MAP_TYPE_ARRAY. The operation
    always fails with -EEXIST, which in turn means the error never gets
    recorded, and the checks for errors always pass.
    
    Revert the change in update flags.
    
    Fixes: b18c1f0aa477 ("bpf: selftest: Adapt sock_fields test to use skel and global variables")
    Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/20220317113920.1068535-2-jakub@cloudflare.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac1ec6f319c02faebce514d07c11d2cac939c078
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue Mar 15 14:26:18 2022 +0800

    bareudp: use ipv6_mod_enabled to check if IPv6 enabled
    
    [ Upstream commit e077ed58c243afc197bc2a2ba0e1ff61135e4ec2 ]
    
    bareudp_create_sock() use AF_INET6 by default if IPv6 CONFIG enabled.
    But if user start kernel with ipv6.disable=1, the bareudp sock will
    created failed, which cause the interface open failed even with ethertype
    ip. e.g.
    
     # ip link add bareudp1 type bareudp dstport 2 ethertype ip
     # ip link set bareudp1 up
     RTNETLINK answers: Address family not supported by protocol
    
    Fix it by using ipv6_mod_enabled() to check if IPv6 enabled. There is
    no need to check IS_ENABLED(CONFIG_IPV6) as ipv6_mod_enabled() will
    return false when CONFIG_IPV6 no enabled in include/linux/ipv6.h.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Fixes: 571912c69f0e ("net: UDP tunnel encapsulation module for tunnelling different protocols like MPLS, IP, NSH etc.")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Link: https://lore.kernel.org/r/20220315062618.156230-1-liuhangbin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c037e135391c70d4a3304b5df012d404ad8d3d58
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Mar 16 17:42:58 2022 +0100

    can: isotp: support MSG_TRUNC flag when reading from socket
    
    [ Upstream commit 42bf50a1795a1854d48717b7361dbdbce496b16b ]
    
    When providing the MSG_TRUNC flag via recvmsg() syscall the return value
    provides the real length of the packet or datagram, even when it was longer
    than the passed buffer.
    
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://github.com/linux-can/can-utils/issues/347#issuecomment-1065932671
    Link: https://lore.kernel.org/all/20220316164258.54155-3-socketcan@hartkopp.net
    Suggested-by: Derek Will <derekrobertwill@gmail.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f402c498651993de361f349ac0cedb9f8622319f
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Mar 16 17:42:57 2022 +0100

    can: isotp: return -EADDRNOTAVAIL when reading from unbound socket
    
    [ Upstream commit 30ffd5332e06316bd69a654c06aa033872979b7c ]
    
    When reading from an unbound can-isotp socket the syscall blocked
    indefinitely. As unbound sockets (without given CAN address information)
    do not make sense anyway we directly return -EADDRNOTAVAIL on read()
    analogue to the known behavior from sendmsg().
    
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://github.com/linux-can/can-utils/issues/349
    Link: https://lore.kernel.org/all/20220316164258.54155-2-socketcan@hartkopp.net
    Suggested-by: Derek Will <derekrobertwill@gmail.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a9d996d4edd1fb28dd87a82ec40740de847ce9b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 4 10:35:04 2022 +0300

    USB: storage: ums-realtek: fix error code in rts51x_read_mem()
    
    [ Upstream commit b07cabb8361dc692522538205552b1b9dab134be ]
    
    The rts51x_read_mem() function should return negative error codes.
    Currently if the kmalloc() fails it returns USB_STOR_TRANSPORT_ERROR (3)
    which is treated as success by the callers.
    
    Fixes: 065e60964e29 ("ums_realtek: do not use stack memory for DMA")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20220304073504.GA26464@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9a666100955b3af5a083de2952bd1b2b4e3046a
Author: Niklas Söderlund <niklas.soderlund@corigine.com>
Date:   Tue Mar 15 11:29:48 2022 +0100

    samples/bpf, xdpsock: Fix race when running for fix duration of time
    
    [ Upstream commit 8fa42d78f6354bb96ad3a079dcbef528ca9fa9e0 ]
    
    When running xdpsock for a fix duration of time before terminating
    using --duration=<n>, there is a race condition that may cause xdpsock
    to terminate immediately.
    
    When running for a fixed duration of time the check to determine when to
    terminate execution is in is_benchmark_done() and is being executed in
    the context of the poller thread,
    
        if (opt_duration > 0) {
                unsigned long dt = (get_nsecs() - start_time);
    
                if (dt >= opt_duration)
                        benchmark_done = true;
        }
    
    However start_time is only set after the poller thread have been
    created. This leaves a small window when the poller thread is starting
    and calls is_benchmark_done() for the first time that start_time is not
    yet set. In that case start_time have its initial value of 0 and the
    duration check fails as it do not correlate correctly for the
    applications start time and immediately sets benchmark_done which in
    turn terminates the xdpsock application.
    
    Fix this by setting start_time before creating the poller thread.
    
    Fixes: d3f11b018f6c ("samples/bpf: xdpsock: Add duration option to specify how long to run")
    Signed-off-by: Niklas Söderlund <niklas.soderlund@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220315102948.466436-1-niklas.soderlund@corigine.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd84ea3920aef936c559b63099ef0013ce6b2325
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Mar 4 16:11:45 2022 +0800

    bpf, sockmap: Fix double uncharge the mem of sk_msg
    
    [ Upstream commit 2486ab434b2c2a14e9237296db00b1e1b7ae3273 ]
    
    If tcp_bpf_sendmsg is running during a tear down operation, psock may be
    freed.
    
    tcp_bpf_sendmsg()
     tcp_bpf_send_verdict()
      sk_msg_return()
      tcp_bpf_sendmsg_redir()
       unlikely(!psock))
         sk_msg_free()
    
    The mem of msg has been uncharged in tcp_bpf_send_verdict() by
    sk_msg_return(), and would be uncharged by sk_msg_free() again. When psock
    is null, we can simply returning an error code, this would then trigger
    the sk_msg_free_nocharge in the error path of __SK_REDIRECT and would have
    the side effect of throwing an error up to user space. This would be a
    slight change in behavior from user side but would look the same as an
    error if the redirect on the socket threw an error.
    
    This issue can cause the following info:
    WARNING: CPU: 0 PID: 2136 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260
    Call Trace:
     <TASK>
     __sk_destruct+0x24/0x1f0
     sk_psock_destroy+0x19b/0x1c0
     process_one_work+0x1b3/0x3c0
     worker_thread+0x30/0x350
     ? process_one_work+0x3c0/0x3c0
     kthread+0xe6/0x110
     ? kthread_complete_and_exit+0x20/0x20
     ret_from_fork+0x22/0x30
     </TASK>
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220304081145.2037182-5-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b812a369e6416ab06d83cdd39d8e3f752781dd0
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Mar 4 16:11:44 2022 +0800

    bpf, sockmap: Fix more uncharged while msg has more_data
    
    [ Upstream commit 84472b436e760ba439e1969a9e3c5ae7c86de39d ]
    
    In tcp_bpf_send_verdict(), if msg has more data after
    tcp_bpf_sendmsg_redir():
    
    tcp_bpf_send_verdict()
     tosend = msg->sg.size  //msg->sg.size = 22220
     case __SK_REDIRECT:
      sk_msg_return()  //uncharged msg->sg.size(22220) sk->sk_forward_alloc
      tcp_bpf_sendmsg_redir() //after tcp_bpf_sendmsg_redir, msg->sg.size=11000
     goto more_data;
     tosend = msg->sg.size  //msg->sg.size = 11000
     case __SK_REDIRECT:
      sk_msg_return()  //uncharged msg->sg.size(11000) to sk->sk_forward_alloc
    
    The msg->sg.size(11000) has been uncharged twice, to fix we can charge the
    remaining msg->sg.size before goto more data.
    
    This issue can cause the following info:
    WARNING: CPU: 0 PID: 9860 at net/core/stream.c:208 sk_stream_kill_queues+0xd4/0x1a0
    Call Trace:
     <TASK>
     inet_csk_destroy_sock+0x55/0x110
     __tcp_close+0x279/0x470
     tcp_close+0x1f/0x60
     inet_release+0x3f/0x80
     __sock_release+0x3d/0xb0
     sock_close+0x11/0x20
     __fput+0x92/0x250
     task_work_run+0x6a/0xa0
     do_exit+0x33b/0xb60
     do_group_exit+0x2f/0xa0
     get_signal+0xb6/0x950
     arch_do_signal_or_restart+0xac/0x2a0
     ? vfs_write+0x237/0x290
     exit_to_user_mode_prepare+0xa9/0x200
     syscall_exit_to_user_mode+0x12/0x30
     do_syscall_64+0x46/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
     </TASK>
    
    WARNING: CPU: 0 PID: 2136 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260
    Call Trace:
     <TASK>
     __sk_destruct+0x24/0x1f0
     sk_psock_destroy+0x19b/0x1c0
     process_one_work+0x1b3/0x3c0
     worker_thread+0x30/0x350
     ? process_one_work+0x3c0/0x3c0
     kthread+0xe6/0x110
     ? kthread_complete_and_exit+0x20/0x20
     ret_from_fork+0x22/0x30
     </TASK>
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220304081145.2037182-4-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bec34a91eba3483e1830c02bdd36f8f968642047
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Mar 4 16:11:43 2022 +0800

    bpf, sockmap: Fix memleak in tcp_bpf_sendmsg while sk msg is full
    
    [ Upstream commit 9c34e38c4a870eb30b13f42f5b44f42e9d19ccb8 ]
    
    If tcp_bpf_sendmsg() is running while sk msg is full. When sk_msg_alloc()
    returns -ENOMEM error, tcp_bpf_sendmsg() goes to wait_for_memory. If partial
    memory has been alloced by sk_msg_alloc(), that is, msg_tx->sg.size is
    greater than osize after sk_msg_alloc(), memleak occurs. To fix we use
    sk_msg_trim() to release the allocated memory, then goto wait for memory.
    
    Other call paths of sk_msg_alloc() have the similar issue, such as
    tls_sw_sendmsg(), so handle sk_msg_trim logic inside sk_msg_alloc(),
    as Cong Wang suggested.
    
    This issue can cause the following info:
    WARNING: CPU: 3 PID: 7950 at net/core/stream.c:208 sk_stream_kill_queues+0xd4/0x1a0
    Call Trace:
     <TASK>
     inet_csk_destroy_sock+0x55/0x110
     __tcp_close+0x279/0x470
     tcp_close+0x1f/0x60
     inet_release+0x3f/0x80
     __sock_release+0x3d/0xb0
     sock_close+0x11/0x20
     __fput+0x92/0x250
     task_work_run+0x6a/0xa0
     do_exit+0x33b/0xb60
     do_group_exit+0x2f/0xa0
     get_signal+0xb6/0x950
     arch_do_signal_or_restart+0xac/0x2a0
     exit_to_user_mode_prepare+0xa9/0x200
     syscall_exit_to_user_mode+0x12/0x30
     do_syscall_64+0x46/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
     </TASK>
    
    WARNING: CPU: 3 PID: 2094 at net/ipv4/af_inet.c:155 inet_sock_destruct+0x13c/0x260
    Call Trace:
     <TASK>
     __sk_destruct+0x24/0x1f0
     sk_psock_destroy+0x19b/0x1c0
     process_one_work+0x1b3/0x3c0
     kthread+0xe6/0x110
     ret_from_fork+0x22/0x30
     </TASK>
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20220304081145.2037182-3-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c98d903ff9e79c210beddea4e6bc15ac38e25aa5
Author: Yongzhi Liu <lyz_cs@pku.edu.cn>
Date:   Fri Mar 11 09:06:01 2022 -0800

    RDMA/mlx5: Fix memory leak in error flow for subscribe event routine
    
    [ Upstream commit 087f9c3f2309ed183f7e4b85ae57121d8663224d ]
    
    In case the second xa_insert() fails, the obj_event is not released.  Fix
    the error unwind flow to free that memory to avoid a memory leak.
    
    Fixes: 759738537142 ("IB/mlx5: Enable subscription for device events over DEVX")
    Link: https://lore.kernel.org/r/1647018361-18266-1-git-send-email-lyz_cs@pku.edu.cn
    Signed-off-by: Yongzhi Liu <lyz_cs@pku.edu.cn>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3587259ae553e41d1ce8c7435351a5d6b299a11
Author: Xin Xiong <xiongx18@fudan.edu.cn>
Date:   Fri Mar 4 16:53:32 2022 +0800

    mtd: rawnand: atmel: fix refcount issue in atmel_nand_controller_init
    
    [ Upstream commit fecbd4a317c95d73c849648c406bcf1b6a0ec1cf ]
    
    The reference counting issue happens in several error handling paths
    on a refcounted object "nc->dmac". In these paths, the function simply
    returns the error code, forgetting to balance the reference count of
    "nc->dmac", increased earlier by dma_request_channel(), which may
    cause refcount leaks.
    
    Fix it by decrementing the refcount of specific object in those error
    paths.
    
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Co-developed-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Co-developed-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220304085330.3610-1-xiongx18@fudan.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa3d44424579972cc7c4fac3d9cf227798ebdfa0
Author: Yaliang Wang <Yaliang.Wang@windriver.com>
Date:   Thu Mar 10 19:31:16 2022 +0800

    MIPS: pgalloc: fix memory leak caused by pgd_free()
    
    [ Upstream commit 2bc5bab9a763d520937e4f3fe8df51c6a1eceb97 ]
    
    pgd page is freed by generic implementation pgd_free() since commit
    f9cb654cb550 ("asm-generic: pgalloc: provide generic pgd_free()"),
    however, there are scenarios that the system uses more than one page as
    the pgd table, in such cases the generic implementation pgd_free() won't
    be applicable anymore. For example, when PAGE_SIZE_4KB is enabled and
    MIPS_VA_BITS_48 is not enabled in a 64bit system, the macro "PGD_ORDER"
    will be set as "1", which will cause allocating two pages as the pgd
    table. Well, at the same time, the generic implementation pgd_free()
    just free one pgd page, which will result in the memory leak.
    
    The memory leak can be easily detected by executing shell command:
    "while true; do ls > /dev/null; grep MemFree /proc/meminfo; done"
    
    Fixes: f9cb654cb550 ("asm-generic: pgalloc: provide generic pgd_free()")
    Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c4808ff9e10eb292c300affc0ee6325c923eb99
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Mar 11 20:20:26 2022 -0800

    MIPS: RB532: fix return value of __setup handler
    
    [ Upstream commit 8755d57ba1ff910666572fab9e32890e8cc6ed3b ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) argument or environment
    strings. Also, error return codes don't mean anything to
    obsolete_checksetup() -- only non-zero (usually 1) or zero.
    So return 1 from setup_kmac().
    
    Fixes: 9e21c7e40b7e ("MIPS: RB532: Replace parse_mac_addr() with mac_pton().")
    Fixes: 73b4390fb234 ("[MIPS] Routerboard 532: Support for base system")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    From: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: linux-mips@vger.kernel.org
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Phil Sutter <n0-1@freewrt.org>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Daniel Walter <dwalter@google.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef1728e3cb9e43f38ed10cde705a7ba2b4ad2d35
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Mar 9 09:17:10 2022 +0000

    mips: cdmm: Fix refcount leak in mips_cdmm_phys_base
    
    [ Upstream commit 4528668ca331f7ce5999b7746657b46db5b3b785 ]
    
    The of_find_compatible_node() function returns a node pointer with
    refcount incremented, We should use of_node_put() on it when done
    Add the missing of_node_put() to release the refcount.
    
    Fixes: 2121aa3e2312 ("mips: cdmm: Add mti,mips-cdmm dtb node support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 315772133a4b960859e4f5efe0e738e347188cdc
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 07:02:38 2022 +0000

    ath10k: Fix error handling in ath10k_setup_msa_resources
    
    [ Upstream commit 9747a78d5f758a5284751a10aee13c30d02bd5f1 ]
    
    The device_node pointer is returned by of_parse_phandle() with refcount
    incremented. We should use of_node_put() on it when done.
    
    This function only calls of_node_put() in the regular path.
    And it will cause refcount leak in error path.
    
    Fixes: 727fec790ead ("ath10k: Setup the msa resources before qmi init")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220308070238.19295-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71f311b1238009c070af21c80c6e34ce85d9e7e9
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Mar 9 13:04:16 2022 +0100

    vxcan: enable local echo for sent CAN frames
    
    [ Upstream commit 259bdba27e32368b4404f69d613b1c1014c07cbf ]
    
    The vxcan driver provides a pair of virtual CAN interfaces to exchange
    CAN traffic between different namespaces - analogue to veth.
    
    In opposite to the vcan driver the local sent CAN traffic on this interface
    is not echo'ed back but only sent to the remote peer. This is unusual and
    can be easily fixed by removing IFF_ECHO from the netdevice flags that
    are set for vxcan interfaces by default at startup.
    
    Without IFF_ECHO set on driver level, the local sent CAN frames are echo'ed
    in af_can.c in can_send(). This patch makes vxcan interfaces adopt the
    same local echo behavior and procedures as known from the vcan interfaces.
    
    Fixes: a8f820a380a2 ("can: add Virtual CAN Tunnel driver (vxcan)")
    Link: https://lore.kernel.org/all/20220309120416.83514-5-socketcan@hartkopp.net
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c2a39784974fb7dc88cc27b71569d13e45fc4b2
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Wed Feb 23 15:02:23 2022 +0800

    powerpc: 8xx: fix a return value error in mpc8xx_pic_init
    
    [ Upstream commit 3fd46e551f67f4303c3276a0d6cd20baf2d192c4 ]
    
    mpc8xx_pic_init() should return -ENOMEM instead of 0 when
    irq_domain_add_linear() return NULL. This cause mpc8xx_pics_init to continue
    executing even if mpc8xx_pic_host is NULL.
    
    Fixes: cc76404feaed ("powerpc/8xx: Fix possible device node reference leak")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220223070223.26845-1-hbh25y@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 956fab99ad269831a1b32c7f4b762c31ad9364fb
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Mar 2 18:24:21 2022 -0800

    platform/x86: huawei-wmi: check the return value of device_create_file()
    
    [ Upstream commit c91a5b1c221a58d008485cf7d02ccce73108b119 ]
    
    The function device_create_file() in huawei_wmi_battery_add() can fail,
    so its return value should be checked.
    
    Fixes: 355a070b09ab ("platform/x86: huawei-wmi: Add battery charging thresholds")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Link: https://lore.kernel.org/r/20220303022421.313-1-baijiaju1990@gmail.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba28cb69218b01408b8793db68a9edaa8407d86
Author: Felix Maurer <fmaurer@redhat.com>
Date:   Thu Mar 3 12:15:26 2022 +0100

    selftests/bpf: Make test_lwt_ip_encap more stable and faster
    
    [ Upstream commit d23a8720327d33616f584d76c80824bfa4699be6 ]
    
    In test_lwt_ip_encap, the ingress IPv6 encap test failed from time to
    time. The failure occured when an IPv4 ping through the IPv6 GRE
    encapsulation did not receive a reply within the timeout. The IPv4 ping
    and the IPv6 ping in the test used different timeouts (1 sec for IPv4
    and 6 sec for IPv6), probably taking into account that IPv6 might need
    longer to successfully complete. However, when IPv4 pings (with the
    short timeout) are encapsulated into the IPv6 tunnel, the delays of IPv6
    apply.
    
    The actual reason for the long delays with IPv6 was that the IPv6
    neighbor discovery sometimes did not complete in time. This was caused
    by the outgoing interface only having a tentative link local address,
    i.e., not having completed DAD for that lladdr. The ND was successfully
    retried after 1 sec but that was too late for the ping timeout.
    
    The IPv6 addresses for the test were already added with nodad. However,
    for the lladdrs, DAD was still performed. We now disable DAD in the test
    netns completely and just assume that the two lladdrs on each veth pair
    do not collide. This removes all the delays for IPv6 traffic in the
    test.
    
    Without the delays, we can now also reduce the delay of the IPv6 ping to
    1 sec. This makes the whole test complete faster because we don't need
    to wait for the excessive timeout for each IPv6 ping that is supposed
    to fail.
    
    Fixes: 0fde56e4385b0 ("selftests: bpf: add test_lwt_ip_encap selftest")
    Signed-off-by: Felix Maurer <fmaurer@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/4987d549d48b4e316cd5b3936de69c8d4bc75a4f.1646305899.git.fmaurer@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08ab4067815eb92a4c752872404e2483c4a46273
Author: lic121 <lic121@chinatelecom.cn>
Date:   Tue Mar 1 13:26:23 2022 +0000

    libbpf: Unmap rings when umem deleted
    
    [ Upstream commit 9c6e6a80ee741adf6cb3cfd8eef7d1554f91fceb ]
    
    xsk_umem__create() does mmap for fill/comp rings, but xsk_umem__delete()
    doesn't do the unmap. This works fine for regular cases, because
    xsk_socket__delete() does unmap for the rings. But for the case that
    xsk_socket__create_shared() fails, umem rings are not unmapped.
    
    fill_save/comp_save are checked to determine if rings have already be
    unmapped by xsk. If fill_save and comp_save are NULL, it means that the
    rings have already been used by xsk. Then they are supposed to be
    unmapped by xsk_socket__delete(). Otherwise, xsk_umem__delete() does the
    unmap.
    
    Fixes: 2f6324a3937f ("libbpf: Support shared umems between queues and devices")
    Signed-off-by: Cheng Li <lic121@chinatelecom.cn>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20220301132623.GA19995@vscode.7~
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fa8edfc9020eb13a9f5a10792cb85a9b5c5d34f
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 24 10:23:31 2022 +0800

    mfd: mc13xxx: Add check for mc13xxx_irq_request
    
    [ Upstream commit e477e51a41cb5d6034f3c5ea85a71ad4613996b9 ]
    
    As the potential failure of the devm_request_threaded_irq(),
    it should be better to check the return value of the
    mc13xxx_irq_request() and return error if fails.
    
    Fixes: 8e00593557c3 ("mfd: Add mc13892 support to mc13xxx")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20220224022331.3208275-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcf93175ed84ead43bafed9722cd488d2b13b8cb
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Mon Feb 28 15:24:33 2022 +0100

    powerpc/sysdev: fix incorrect use to determine if list is empty
    
    [ Upstream commit fa1321b11bd01752f5be2415e74a0e1a7c378262 ]
    
    'gtm' will *always* be set by list_for_each_entry().
    It is incorrect to assume that the iterator value will be NULL if the
    list is empty.
    
    Instead of checking the pointer it should be checked if
    the list is empty.
    
    Fixes: 83ff9dcf375c ("powerpc/sysdev: implement FSL GTM support")
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220228142434.576226-1-jakobkoschel@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab0a335b546e6a65d491999529e99ca88818a0d7
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Mar 4 08:24:27 2022 -0800

    mips: DEC: honor CONFIG_MIPS_FP_SUPPORT=n
    
    [ Upstream commit 97bf0395c226907e1a9b908511a35192bf1e09bb ]
    
    Include the DECstation interrupt handler in opting out of
    FPU support.
    
    Fixes a linker error:
    
    mips-linux-ld: arch/mips/dec/int-handler.o: in function `fpu':
    (.text+0x148): undefined reference to `handle_fpe_int'
    
    Fixes: 183b40f992c8 ("MIPS: Allow FP support to be disabled")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Paul Burton <paulburton@kernel.org>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Maciej W. Rozycki <macro@orcam.me.uk>
    Cc: linux-mips@vger.kernel.org
    Acked-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbd91cdb620ed74e4dcb85c3d2e9585a6b3aa0d5
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Fri Mar 4 20:24:37 2022 -0600

    net: axienet: fix RX ring refill allocation failure handling
    
    [ Upstream commit 7a7d340ba4d9351e4c8847b898a2b996727a922a ]
    
    If a memory allocation error occurred during an attempt to refill a slot
    in the RX ring after the packet was received, the hardware tail pointer
    would still have been updated to point to or past the slot which remained
    marked as previously completed. This would likely result in the DMA engine
    raising an error when it eventually tried to use that slot again.
    
    If a slot cannot be refilled, then just stop processing and do not move
    the tail pointer past it. On the next attempt, we should skip receiving
    the packet from the empty slot and just try to refill it again.
    
    This failure mode has not actually been observed, but was found as part
    of other driver updates.
    
    Fixes: 8a3b7a252dca ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ec698984db29d86c4e6cb256ca2810c613da2d2
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Thu Aug 6 16:14:55 2020 +1200

    PCI: Reduce warnings on possible RW1C corruption
    
    [ Upstream commit 92c45b63ce22c8898aa41806e8d6692bcd577510 ]
    
    For hardware that only supports 32-bit writes to PCI there is the
    possibility of clearing RW1C (write-one-to-clear) bits. A rate-limited
    messages was introduced by fb2659230120, but rate-limiting is not the best
    choice here. Some devices may not show the warnings they should if another
    device has just produced a bunch of warnings. Also, the number of messages
    can be a nuisance on devices which are otherwise working fine.
    
    Change the ratelimit to a single warning per bus. This ensures no bus is
    'starved' of emitting a warning and also that there isn't a continuous
    stream of warnings. It would be preferable to have a warning per device,
    but the pci_dev structure is not available here, and a lookup from devfn
    would be far too slow.
    
    Suggested-by: Bjorn Helgaas <helgaas@kernel.org>
    Fixes: fb2659230120 ("PCI: Warn on possible RW1C corruption for sub-32 bit config writes")
    Link: https://lore.kernel.org/r/20200806041455.11070-1-mark.tomlinson@alliedtelesis.co.nz
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Acked-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a84cb039d28231a7a2ffe3b79059c92415b956a4
Author: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
Date:   Tue Feb 8 14:25:09 2022 -0500

    IB/hfi1: Allow larger MTU without AIP
    
    [ Upstream commit b135e324d7a2e7fa0a7ef925076136e799b79f44 ]
    
    The AIP code signals the phys_mtu in the following query_port()
    fragment:
    
            props->phys_mtu = HFI1_CAP_IS_KSET(AIP) ? hfi1_max_mtu :
                                    ib_mtu_enum_to_int(props->max_mtu);
    
    Using the largest MTU possible should not depend on AIP.
    
    Fix by unconditionally using the hfi1_max_mtu value.
    
    Fixes: 6d72344cf6c4 ("IB/ipoib: Increase ipoib Datagram mode MTU's upper limit")
    Link: https://lore.kernel.org/r/1644348309-174874-1-git-send-email-mike.marciniszyn@cornelisnetworks.com
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48d23ef90116c8c702bfa4cad93744e4e5588d7d
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Mar 3 17:43:22 2022 +0800

    power: supply: wm8350-power: Add missing free in free_charger_irq
    
    [ Upstream commit 6dee930f6f6776d1e5a7edf542c6863b47d9f078 ]
    
    In free_charger_irq(), there is no free for 'WM8350_IRQ_CHG_FAST_RDY'.
    Therefore, it should be better to add it in order to avoid the memory leak.
    
    Fixes: 14431aa0c5a4 ("power_supply: Add support for WM8350 PMU")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d3dab40af719a1b192a80b19412a352b78975b0
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Mar 4 09:57:51 2022 +0800

    power: supply: wm8350-power: Handle error for wm8350_register_irq
    
    [ Upstream commit b0b14b5ba11bec56fad344a4a0b2e16449cc8b94 ]
    
    As the potential failure of the wm8350_register_irq(),
    it should be better to check it and return error if fails.
    Also, use 'free_' in order to avoid same code.
    
    Fixes: 14431aa0c5a4 ("power_supply: Add support for WM8350 PMU")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cf1371628a43f1e7c1b9550e309431939fa1f22
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Thu Jan 27 11:50:13 2022 -0600

    i2c: xiic: Make bus names unique
    
    [ Upstream commit 1d366c2f9df8279df2adbb60471f86fc40a1c39e ]
    
    This driver is for an FPGA logic core, so there can be arbitrarily many
    instances of the bus on a given system. Previously all of the I2C bus
    names were "xiic-i2c" which caused issues with lm_sensors when trying to
    map human-readable names to sensor inputs because it could not properly
    distinguish the busses, for example. Append the platform device name to
    the I2C bus name so it is unique between different instances.
    
    Fixes: e1d5b6598cdc ("i2c: Add support for Xilinx XPS IIC Bus Interface")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Tested-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f01e08083c9460d4855784a8b670c8dbbaa19088
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Tue Feb 22 16:14:00 2022 +0200

    hv_balloon: rate-limit "Unhandled message" warning
    
    [ Upstream commit 1d7286729aa616772be334eb908e11f527e1e291 ]
    
    For a couple of times I have encountered a situation where
    
      hv_balloon: Unhandled message: type: 12447
    
    is being flooded over 1 million times per second with various values,
    filling the log and consuming cycles, making debugging difficult.
    
    Add rate limiting to the message.
    
    Most other Hyper-V drivers already have similar rate limiting in their
    message callbacks.
    
    The cause of the floods in my case was probably fixed by 96d9d1fa5cd5
    ("Drivers: hv: balloon: account for vmbus packet header in
    max_pkt_size").
    
    Fixes: 9aa8b50b2b3d ("Drivers: hv: Add Hyper-V balloon driver")
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/20220222141400.98160-1-anssi.hannula@bitwise.fi
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba2c6e353b11d909233cd898757ee2be1d46f915
Author: Hou Wenlong <houwenlong.hwl@antgroup.com>
Date:   Tue Feb 8 17:34:03 2022 +0800

    KVM: x86/emulator: Defer not-present segment check in __load_segment_descriptor()
    
    [ Upstream commit ca85f002258fdac3762c57d12d5e6e401b6a41af ]
    
    Per Intel's SDM on the "Instruction Set Reference", when
    loading segment descriptor, not-present segment check should
    be after all type and privilege checks. But the emulator checks
    it first, then #NP is triggered instead of #GP if privilege fails
    and segment is not present. Put not-present segment check after
    type and privilege checks in __load_segment_descriptor().
    
    Fixes: 38ba30ba51a00 (KVM: x86 emulator: Emulate task switch in emulator.c)
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Hou Wenlong <houwenlong.hwl@antgroup.com>
    Message-Id: <52573c01d369f506cadcf7233812427cf7db81a7.1644292363.git.houwenlong.hwl@antgroup.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa9089949daca632fcf9c50ba5754e440562f9b5
Author: Zhenzhong Duan <zhenzhong.duan@intel.com>
Date:   Thu Feb 10 17:45:06 2022 +0800

    KVM: x86: Fix emulation in writing cr8
    
    [ Upstream commit f66af9f222f08d5b11ea41c1bd6c07a0f12daa07 ]
    
    In emulation of writing to cr8, one of the lowest four bits in TPR[3:0]
    is kept.
    
    According to Intel SDM 10.8.6.1(baremetal scenario):
    "APIC.TPR[bits 7:4] = CR8[bits 3:0], APIC.TPR[bits 3:0] = 0";
    
    and SDM 28.3(use TPR shadow):
    "MOV to CR8. The instruction stores bits 3:0 of its source operand into
    bits 7:4 of VTPR; the remainder of VTPR (bits 3:0 and bits 31:8) are
    cleared.";
    
    and AMD's APM 16.6.4:
    "Task Priority Sub-class (TPS)-Bits 3 : 0. The TPS field indicates the
    current sub-priority to be used when arbitrating lowest-priority messages.
    This field is written with zero when TPR is written using the architectural
    CR8 register.";
    
    so in KVM emulated scenario, clear TPR[3:0] to make a consistent behavior
    as in other scenarios.
    
    This doesn't impact evaluation and delivery of pending virtual interrupts
    because processor does not use the processor-priority sub-class to
    determine which interrupts to delivery and which to inhibit.
    
    Sub-class is used by hardware to arbitrate lowest priority interrupts,
    but KVM just does a round-robin style delivery.
    
    Fixes: b93463aa59d6 ("KVM: Accelerated apic support")
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@intel.com>
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220210094506.20181-1-zhenzhong.duan@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e7e73ae2bbd197e4212de41b7e9379ca3b5a6af
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Feb 15 22:28:58 2022 +1100

    powerpc/Makefile: Don't pass -mcpu=powerpc64 when building 32-bit
    
    [ Upstream commit 2863dd2db23e0407f6c50b8ba5c0e55abef894f1 ]
    
    When CONFIG_GENERIC_CPU=y (true for all our defconfigs) we pass
    -mcpu=powerpc64 to the compiler, even when we're building a 32-bit
    kernel.
    
    This happens because we have an ifdef CONFIG_PPC_BOOK3S_64/else block in
    the Makefile that was written before 32-bit supported GENERIC_CPU. Prior
    to that the else block only applied to 64-bit Book3E.
    
    The GCC man page says -mcpu=powerpc64 "[specifies] a pure ... 64-bit big
    endian PowerPC ... architecture machine [type], with an appropriate,
    generic processor model assumed for scheduling purposes."
    
    It's unclear how that interacts with -m32, which we are also passing,
    although obviously -m32 is taking precedence in some sense, as the
    32-bit kernel only contains 32-bit instructions.
    
    This was noticed by inspection, not via any bug reports, but it does
    affect code generation. Comparing before/after code generation, there
    are some changes to instruction scheduling, and the after case (with
    -mcpu=powerpc64 removed) the compiler seems more keen to use r8.
    
    Fix it by making the else case only apply to Book3E 64, which excludes
    32-bit.
    
    Fixes: 0e00a8c9fd92 ("powerpc: Allow CPU selection also on PPC32")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220215112858.304779-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05abd49972e1965d6ee88b9b7ad55865b4e7e73e
Author: Daniel Henrique Barboza <danielhb413@gmail.com>
Date:   Thu Feb 24 15:23:12 2022 -0300

    powerpc/mm/numa: skip NUMA_NO_NODE onlining in parse_numa_properties()
    
    [ Upstream commit 749ed4a20657bcea66a6e082ca3dc0d228cbec80 ]
    
    Executing node_set_online() when nid = NUMA_NO_NODE results in an
    undefined behavior. node_set_online() will call node_set_state(), into
    __node_set(), into set_bit(), and since NUMA_NO_NODE is -1 we'll end up
    doing a negative shift operation inside
    arch/powerpc/include/asm/bitops.h. This potential UB was detected
    running a kernel with CONFIG_UBSAN.
    
    The behavior was introduced by commit 10f78fd0dabb ("powerpc/numa: Fix a
    regression on memoryless node 0"), where the check for nid > 0 was
    removed to fix a problem that was happening with nid = 0, but the result
    is that now we're trying to online NUMA_NO_NODE nids as well.
    
    Checking for nid >= 0 will allow node 0 to be onlined while avoiding
    this UB with NUMA_NO_NODE.
    
    Fixes: 10f78fd0dabb ("powerpc/numa: Fix a regression on memoryless node 0")
    Reported-by: Ping Fang <pifang@redhat.com>
    Signed-off-by: Daniel Henrique Barboza <danielhb413@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220224182312.1012527-1-danielhb413@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e04a837dba71593dc3c21ecbe142bb465e48a16
Author: Xu Kuohai <xukuohai@huawei.com>
Date:   Tue Mar 1 00:32:49 2022 -0500

    libbpf: Skip forward declaration when counting duplicated type names
    
    [ Upstream commit 4226961b0019b2e1612029e8950a9e911affc995 ]
    
    Currently if a declaration appears in the BTF before the definition, the
    definition is dumped as a conflicting name, e.g.:
    
        $ bpftool btf dump file vmlinux format raw | grep "'unix_sock'"
        [81287] FWD 'unix_sock' fwd_kind=struct
        [89336] STRUCT 'unix_sock' size=1024 vlen=14
    
        $ bpftool btf dump file vmlinux format c | grep "struct unix_sock"
        struct unix_sock;
        struct unix_sock___2 {      <--- conflict, the "___2" is unexpected
                        struct unix_sock___2 *unix_sk;
    
    This causes a compilation error if the dump output is used as a header file.
    
    Fix it by skipping declaration when counting duplicated type names.
    
    Fixes: 351131b51c7a ("libbpf: add btf_dump API for BTF-to-C conversion")
    Signed-off-by: Xu Kuohai <xukuohai@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20220301053250.1464204-2-xukuohai@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bb107332db28a0e9256c2d36a0902b85307612c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Nov 7 22:16:36 2021 +0100

    gpu: host1x: Fix a memory leak in 'host1x_remove()'
    
    [ Upstream commit 025c6643a81564f066d8381b9e2f4603e0f8438f ]
    
    Add a missing 'host1x_channel_list_free()' call in the remove function,
    as already done in the error handling path of the probe function.
    
    Fixes: 8474b02531c4 ("gpu: host1x: Refactor channel allocation code")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1c7759304a123dc7519e69a661287963dd92b1f
Author: Hou Tao <houtao1@huawei.com>
Date:   Sat Feb 26 20:19:06 2022 +0800

    bpf, arm64: Feed byte-offset into bpf line info
    
    [ Upstream commit dda7596c109fc382876118627e29db7607cde35d ]
    
    insn_to_jit_off passed to bpf_prog_fill_jited_linfo() is calculated in
    instruction granularity instead of bytes granularity, but BPF line info
    requires byte offset.
    
    bpf_prog_fill_jited_linfo() will be the last user of ctx.offset before
    it is freed, so convert the offset into byte-offset before calling into
    bpf_prog_fill_jited_linfo() in order to fix the line info dump on arm64.
    
    Fixes: 37ab566c178d ("bpf: arm64: Enable arm64 jit to provide bpf_line_info")
    Suggested-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220226121906.5709-3-houtao1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 694398af5fea0f99b721aa9877d5f52b3f7f2790
Author: Hou Tao <houtao1@huawei.com>
Date:   Sat Feb 26 20:19:05 2022 +0800

    bpf, arm64: Call build_prologue() first in first JIT pass
    
    [ Upstream commit 68e4f238b0e9d3670a1612ad900a6e98b2b3f7dd ]
    
    BPF line info needs ctx->offset to be the instruction offset in the whole JITed
    image instead of the body itself, so also call build_prologue() first in first
    JIT pass.
    
    Fixes: 37ab566c178d ("bpf: arm64: Enable arm64 jit to provide bpf_line_info")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20220226121906.5709-2-houtao1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06a0001366ac0d31f3d5ae61b611173d26f22be8
Author: Nishanth Menon <nm@ti.com>
Date:   Tue Sep 21 12:40:59 2021 -0500

    drm/bridge: cdns-dsi: Make sure to to create proper aliases for dt
    
    [ Upstream commit ffb5c099aaa13ab7f73c29ea6ae26bce8d7575ae ]
    
    Add MODULE_DEVICE_TABLE to the device tree table to create required
    aliases needed for module to be loaded with device tree based platform.
    
    Fixes: e19233955d9e ("drm/bridge: Add Cadence DSI driver")
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210921174059.17946-1-nm@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3d53f00056149f4d15da12ac346c9e5649d9307
Author: Xiang Chen <chenxiang66@hisilicon.com>
Date:   Thu Feb 24 19:51:24 2022 +0800

    scsi: hisi_sas: Change permission of parameter prot_mask
    
    [ Upstream commit c4e070457a93705e56ed06b3910d9e5fe56d3be3 ]
    
    Currently the permission of parameter prot_mask is 0x0, which means that
    the member does not appear in sysfs. Change it as other module parameters
    to 0444 for world-readable.
    
    [mkp: s/v3/v2/]
    
    Link: https://lore.kernel.org/r/1645703489-87194-2-git-send-email-john.garry@huawei.com
    Fixes: d6a9000b81be ("scsi: hisi_sas: Add support for DIF feature for v2 hw")
    Reported-by: Yihang Li <liyihang6@hisilicon.com>
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 705c70399e062db96c782af66a40b3ac720bfa94
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Feb 12 17:48:16 2022 +0100

    power: supply: bq24190_charger: Fix bq24190_vbus_is_enabled() wrong false return
    
    [ Upstream commit f7731754fdce33dad19be746f647d6ac47c5d695 ]
    
    The datasheet says that the BQ24190_REG_POC_CHG_CONFIG bits can
    have a value of either 10(0x2) or 11(0x3) for OTG (5V boost regulator)
    mode.
    
    Sofar bq24190_vbus_is_enabled() was only checking for 10 but some BIOS-es
    uses 11 when enabling the regulator at boot.
    
    Make bq24190_vbus_is_enabled() also check for 11 so that it does not
    wrongly returns false when the bits are set to 11.
    
    Fixes: 66b6bef2c4e0 ("power: supply: bq24190_charger: Export 5V boost converter as regulator")
    Cc: Bastien Nocera <hadess@hadess.net>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e06710c43a090f14bb67714265a01cd1d7a37c5
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 10 06:53:16 2022 +0000

    drm/tegra: Fix reference leak in tegra_dsi_ganged_probe
    
    [ Upstream commit 221e3638feb8bc42143833c9a704fa89b6c366bb ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore. Add put_device() call to fix this.
    
    Fixes: e94236cde4d5 ("drm/tegra: dsi: Add ganged mode support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ffa07c699a72fc351620ee3cf6797d1a8abe37f
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Sat Feb 12 13:05:32 2022 +0800

    ext2: correct max file size computing
    
    [ Upstream commit 50b3a818991074177a56c87124c7a7bdf5fa4f67 ]
    
    We need to calculate the max file size accurately if the total blocks
    that can address by block tree exceed the upper_limit. But this check is
    not correct now, it only compute the total data blocks but missing
    metadata blocks are needed. So in the case of "data blocks < upper_limit
    && total blocks > upper_limit", we will get wrong result. Fortunately,
    this case could not happen in reality, but it's confused and better to
    correct the computing.
    
      bits   data blocks   metadatablocks   upper_limit
      10        16843020            66051    2147483647
      11       134480396           263171    1073741823
      12      1074791436          1050627     536870911 (*)
      13      8594130956          4198403     268435455 (*)
      14     68736258060         16785411     134217727 (*)
      15    549822930956         67125251      67108863 (*)
      16   4398314962956        268468227      33554431 (*)
    
      [*] Need to calculate in depth.
    
    Fixes: 1c2d14212b15 ("ext2: Fix underflow in ext2_max_size()")
    Link: https://lore.kernel.org/r/20220212050532.179055-1-yi.zhang@huawei.com
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60605acf5bf857a93938ae5174be9836874b4608
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Feb 22 13:45:33 2022 -0800

    TOMOYO: fix __setup handlers return values
    
    [ Upstream commit 39844b7e3084baecef52d1498b5fa81afa2cefa9 ]
    
    __setup() handlers should return 1 if the parameter is handled.
    Returning 0 causes the entire string to be added to init's
    environment strings (limited to 32 strings), unnecessarily polluting it.
    
    Using the documented strings "TOMOYO_loader=string1" and
    "TOMOYO_trigger=string2" causes an Unknown parameter message:
      Unknown kernel command line parameters
        "BOOT_IMAGE=/boot/bzImage-517rc5 TOMOYO_loader=string1 \
         TOMOYO_trigger=string2", will be passed to user space.
    
    and these strings are added to init's environment string space:
      Run /sbin/init as init process
        with arguments:
         /sbin/init
        with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         TOMOYO_loader=string1
         TOMOYO_trigger=string2
    
    With this change, these __setup handlers act as expected,
    and init's environment is not polluted with these strings.
    
    Fixes: 0e4ae0e0dec63 ("TOMOYO: Make several options configurable.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: https://lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: James Morris <jmorris@namei.org>
    Cc: Kentaro Takeda <takedakn@nttdata.co.jp>
    Cc: tomoyo-dev-en@lists.osdn.me
    Cc: "Serge E. Hallyn" <serge@hallyn.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adb7c8d1de052e2ca23ead2ea3f862507f45e9c6
Author: Maíra Canal <maira.canal@usp.br>
Date:   Tue Feb 22 10:16:57 2022 -0300

    drm/amd/display: Remove vupdate_int_entry definition
    
    [ Upstream commit 3679b8518cd213c25d555553ef212e233faf698c ]
    
    Remove the vupdate_int_entry definition and utilization to avoid the
    following warning by Clang:
    
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:410:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(0),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:404:2:
    note: previous initialization is here
        vupdate_int_entry(0),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:411:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(1),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:405:2:
    note: previous initialization is here
        vupdate_int_entry(1),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:412:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(2),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:406:2:
    note: previous initialization is here
        vupdate_int_entry(2),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:413:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(3),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:407:2:
    note: previous initialization is here
        vupdate_int_entry(3),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:414:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(4),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:408:2:
    note: previous initialization is here
        vupdate_int_entry(4),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:415:2:
    warning: initializer overrides prior initialization of this subobject
    [-Winitializer-overrides]
        vupdate_no_lock_int_entry(5),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:280:39:
    note: expanded from macro 'vupdate_no_lock_int_entry'
        [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
        ^~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:409:2:
    note: previous initialization is here
        vupdate_int_entry(5),
        ^~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/amd/amdgpu/../display/dc/irq/dcn21/irq_service_dcn21.c:269:39:
    note: expanded from macro 'vupdate_int_entry'
            [DC_IRQ_SOURCE_VUPDATE1 + reg_num] = {\
            ^~
    6 warnings generated.
    
    Fixes: 688f97ed3f5e ("drm/amd/display: Add vupdate_no_lock interrupts for DCN2.1")
    Signed-off-by: Maíra Canal <maira.canal@usp.br>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e462b0f518e99589ef7f4b60c5054757e3bec51e
Author: Aharon Landau <aharonl@nvidia.com>
Date:   Tue Feb 15 19:55:30 2022 +0200

    RDMA/mlx5: Fix the flow of a miss in the allocation of a cache ODP MR
    
    [ Upstream commit 2f0e60d5e9f96341a0c8a01be8878cdb3b29ff20 ]
    
    When an ODP MR cache entry is empty and trying to allocate it, increment
    the ent->miss counter and call to queue_adjust_cache_locked() to verify
    the entry is balanced.
    
    Fixes: aad719dcf379 ("RDMA/mlx5: Allow MRs to be created in the cache synchronously")
    Link: https://lore.kernel.org/r/09503e295276dcacc92cb1d8aef1ad0961c99dc1.1644947594.git.leonro@nvidia.com
    Signed-off-by: Aharon Landau <aharonl@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 279f318bd7d6e04e6e0bc7b8cd8e190da8fa37a4
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:55 2022 +0900

    scsi: pm8001: Fix abort all task initialization
    
    [ Upstream commit 7f12845c8389855dbcc67baa068b6832dc4a396e ]
    
    In pm80xx_send_abort_all(), the n_elem field of the ccb used is not
    initialized to 0. This missing initialization sometimes lead to the task
    completion path seeing the ccb with a non-zero n_elem resulting in the
    execution of invalid dma_unmap_sg() calls in pm8001_ccb_task_free(),
    causing a crash such as:
    
    [  197.676341] RIP: 0010:iommu_dma_unmap_sg+0x6d/0x280
    [  197.700204] RSP: 0018:ffff889bbcf89c88 EFLAGS: 00010012
    [  197.705485] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff83d0bda0
    [  197.712687] RDX: 0000000000000002 RSI: 0000000000000000 RDI: ffff88810dffc0d0
    [  197.719887] RBP: 0000000000000000 R08: 0000000000000000 R09: ffff8881c790098b
    [  197.727089] R10: ffffed1038f20131 R11: 0000000000000001 R12: 0000000000000000
    [  197.734296] R13: ffff88810dffc0d0 R14: 0000000000000010 R15: 0000000000000000
    [  197.741493] FS:  0000000000000000(0000) GS:ffff889bbcf80000(0000) knlGS:0000000000000000
    [  197.749659] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  197.755459] CR2: 00007f16c1b42734 CR3: 0000000004814000 CR4: 0000000000350ee0
    [  197.762656] Call Trace:
    [  197.765127]  <IRQ>
    [  197.767162]  pm8001_ccb_task_free+0x5f1/0x820 [pm80xx]
    [  197.772364]  ? do_raw_spin_unlock+0x54/0x220
    [  197.776680]  pm8001_mpi_task_abort_resp+0x2ce/0x4f0 [pm80xx]
    [  197.782406]  process_oq+0xe85/0x7890 [pm80xx]
    [  197.786817]  ? lock_acquire+0x194/0x490
    [  197.790697]  ? handle_irq_event+0x10e/0x1b0
    [  197.794920]  ? mpi_sata_completion+0x2d70/0x2d70 [pm80xx]
    [  197.800378]  ? __wake_up_bit+0x100/0x100
    [  197.804340]  ? lock_is_held_type+0x98/0x110
    [  197.808565]  pm80xx_chip_isr+0x94/0x130 [pm80xx]
    [  197.813243]  tasklet_action_common.constprop.0+0x24b/0x2f0
    [  197.818785]  __do_softirq+0x1b5/0x82d
    [  197.822485]  ? do_raw_spin_unlock+0x54/0x220
    [  197.826799]  __irq_exit_rcu+0x17e/0x1e0
    [  197.830678]  irq_exit_rcu+0xa/0x20
    [  197.834114]  common_interrupt+0x78/0x90
    [  197.840051]  </IRQ>
    [  197.844236]  <TASK>
    [  197.848397]  asm_common_interrupt+0x1e/0x40
    
    Avoid this issue by always initializing the ccb n_elem field to 0 in
    pm8001_send_abort_all(), pm8001_send_read_log() and
    pm80xx_send_abort_all().
    
    Link: https://lore.kernel.org/r/20220220031810.738362-17-damien.lemoal@opensource.wdc.com
    Fixes: c6b9ef5779c3 ("[SCSI] pm80xx: NCQ error handling changes")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 780c668a2dd4e5e479a13295e056144f8954829c
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:54 2022 +0900

    scsi: pm8001: Fix NCQ NON DATA command completion handling
    
    [ Upstream commit 1d6736c3e162061dc811c76e605f35ef3234bffa ]
    
    NCQ NON DATA is an NCQ command with the DMA_NONE DMA direction and so a
    register-device-to-host-FIS response is expected for it.
    
    However, for an IO_SUCCESS case, mpi_sata_completion() expects a
    set-device-bits-FIS for any ata task with an use_ncq field true, which
    includes NCQ NON DATA commands.
    
    Fix this to correctly treat NCQ NON DATA commands as non-data by also
    testing for the DMA_NONE DMA direction.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-16-damien.lemoal@opensource.wdc.com
    Fixes: dbf9bfe61571 ("[SCSI] pm8001: add SAS/SATA HBA driver")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7a3f9e4e81b96bb7d6ad6ab2e083f5508e9cfd9
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:53 2022 +0900

    scsi: pm8001: Fix NCQ NON DATA command task initialization
    
    [ Upstream commit aa028141ab0bc62c44a84d42f09db35d82df82a2 ]
    
    In the pm8001_chip_sata_req() and pm80xx_chip_sata_req() functions, all
    tasks with a DMA direction of DMA_NONE (no data transfer) are initialized
    using the ATAP value 0x04. However, NCQ NON DATA commands, while being
    DMA_NONE commands are NCQ commands and need to be initialized using the
    value 0x07 for ATAP, similarly to other NCQ commands.
    
    Make sure that NCQ NON DATA command tasks are initialized similarly to
    other NCQ commands by also testing the task "use_ncq" field in addition to
    the DMA direction. While at it, reorganize the code into a chain of if -
    else if - else to avoid useless affectations and debug messages.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-15-damien.lemoal@opensource.wdc.com
    Fixes: dbf9bfe61571 ("[SCSI] pm8001: add SAS/SATA HBA driver")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f76bbee39eda6268b63bf3d165e6f629e77385f7
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:50 2022 +0900

    scsi: pm8001: Fix le32 values handling in pm80xx_chip_sata_req()
    
    [ Upstream commit fd6d0e376211d7ed759db96b0fbd9a1cee67d462 ]
    
    Make sure that the __le32 fields of struct sata_cmd are manipulated after
    applying the correct endian conversion. That is, use cpu_to_le32() for
    assigning values and le32_to_cpu() for consulting a field value.  In
    particular, make sure that the calculations for the 4G boundary check are
    done using CPU endianness and *not* little endian values. With these fixes,
    many sparse warnings are removed.
    
    While at it, fix some code identation and add blank lines after variable
    declarations and in some other places to make this code more readable.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-12-damien.lemoal@opensource.wdc.com
    Fixes: 0ecdf00ba6e5 ("[SCSI] pm80xx: 4G boundary fix.")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bc86bca3502a8b617ae563a5e40c6dc5fcbec10
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:49 2022 +0900

    scsi: pm8001: Fix le32 values handling in pm80xx_chip_ssp_io_req()
    
    [ Upstream commit 970404cc5744b1033b6ee601be4ef0e2d1fbcf72 ]
    
    Make sure that the __le32 fields of struct ssp_ini_io_start_req are
    manipulated after applying the correct endian conversion. That is, use
    cpu_to_le32() for assigning values and le32_to_cpu() for consulting a field
    value. In particular, make sure that the calculations for the 4G boundary
    check are done using CPU endianness and *not* little endian values. With
    these fixes, many sparse warnings are removed.
    
    While at it, add blank lines after variable declarations and in some other
    places to make this code more readable.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-11-damien.lemoal@opensource.wdc.com
    Fixes: 0ecdf00ba6e5 ("[SCSI] pm80xx: 4G boundary fix.")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27ccdcaa015d4194ceaa878c5d8df55ec68abd33
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:48 2022 +0900

    scsi: pm8001: Fix payload initialization in pm80xx_encrypt_update()
    
    [ Upstream commit f8b12dfb476dad38ce755aaf5e2df46f06f1822e ]
    
    All fields of the kek_mgmt_req structure have the type __le32. So make sure
    to use cpu_to_le32() to initialize them. This suppresses the sparse
    warning:
    
    warning: incorrect type in assignment (different base types)
       expected restricted __le32 [addressable] [assigned] [usertype] new_curidx_ksop
       got int
    
    Link: https://lore.kernel.org/r/20220220031810.738362-10-damien.lemoal@opensource.wdc.com
    Fixes: f5860992db55 ("[SCSI] pm80xx: Added SPCv/ve specific hardware functionalities and relevant changes in common files")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c0e850c2289e89a18c880be4a225f3770877c1a
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:47 2022 +0900

    scsi: pm8001: Fix le32 values handling in pm80xx_set_sas_protocol_timer_config()
    
    [ Upstream commit ca374f5d92b8ae778f6a37dd3e7ed809bbf7a953 ]
    
    All fields of the SASProtocolTimerConfig structure have the __le32 type.
    As such, use cpu_to_le32() to initialize them. This change suppresses many
    sparse warnings:
    
    warning: incorrect type in assignment (different base types)
       expected restricted __le32 [addressable] [usertype] pageCode
       got int
    
    Note that the check to limit the value of the STP_IDLE_TMO field is removed
    as this field is initialized using the fixed (and small) value defined by
    the STP_IDLE_TIME macro.
    
    The pm8001_dbg() calls printing the values of the SASProtocolTimerConfig
    structure fileds are changed to use le32_to_cpu() to present the values in
    human readable form.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-9-damien.lemoal@opensource.wdc.com
    Fixes: a6cb3d012b98 ("[SCSI] pm80xx: thermal, sas controller config and error handling update")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit edde1ede761e94a09f2fe04792e34252799fab4c
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:46 2022 +0900

    scsi: pm8001: Fix payload initialization in pm80xx_set_thermal_config()
    
    [ Upstream commit bb225b12dbcc82d53d637d10b8d70b64494f8c16 ]
    
    The fields of the set_ctrl_cfg_req structure have the __le32 type, so use
    cpu_to_le32() to assign them. This removes the sparse warnings:
    
    warning: incorrect type in assignment (different base types)
        expected restricted __le32
        got unsigned int
    
    Link: https://lore.kernel.org/r/20220220031810.738362-8-damien.lemoal@opensource.wdc.com
    Fixes: 842784e0d15b ("pm80xx: Update For Thermal Page Code")
    Fixes: f5860992db55 ("[SCSI] pm80xx: Added SPCv/ve specific hardware functionalities and relevant changes in common files")
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 257a55622cc6d526f6c9482a5ac5958c86b087be
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:45 2022 +0900

    scsi: pm8001: Fix command initialization in pm8001_chip_ssp_tm_req()
    
    [ Upstream commit cd2268a180117aa8ebb23e090ba204324b2d0e93 ]
    
    The ds_ads_m field of struct ssp_ini_tm_start_req has the type __le32.
    Assigning a value to it should thus use cpu_to_le32(). This fixes the
    sparse warning:
    
    warning: incorrect type in assignment (different base types)
       expected restricted __le32 [addressable] [assigned] [usertype] ds_ads_m
       got int
    
    Link: https://lore.kernel.org/r/20220220031810.738362-7-damien.lemoal@opensource.wdc.com
    Fixes: dbf9bfe61571 ("[SCSI] pm8001: add SAS/SATA HBA driver")
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f55a7bc38f74e17390a73cf1f6eaee9fb0518ca5
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:43 2022 +0900

    scsi: pm8001: Fix command initialization in pm80XX_send_read_log()
    
    [ Upstream commit 1a37b6738b58d86f6b144b3fc754ace0f2e0166d ]
    
    Since the sata_cmd struct is zeroed out before its fields are initialized,
    there is no need for using "|=" to initialize the ncqtag_atap_dir_m
    field. Using a standard assignment removes the sparse warning:
    
    warning: invalid assignment: |=
    
    Also, since the ncqtag_atap_dir_m field has type __le32, use cpu_to_le32()
    to generate the assigned value.
    
    Link: https://lore.kernel.org/r/20220220031810.738362-5-damien.lemoal@opensource.wdc.com
    Fixes: c6b9ef5779c3 ("[SCSI] pm80xx: NCQ error handling changes")
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5349cde1dfaae67554fec4e844ef9c0030a0dd87
Author: Aashish Sharma <shraash@google.com>
Date:   Fri Feb 11 12:15:38 2022 +0000

    dm crypt: fix get_key_size compiler warning if !CONFIG_KEYS
    
    [ Upstream commit 6fc51504388c1a1a53db8faafe9fff78fccc7c87 ]
    
    Explicitly convert unsigned int in the right of the conditional
    expression to int to match the left side operand and the return type,
    fixing the following compiler warning:
    
    drivers/md/dm-crypt.c:2593:43: warning: signed and unsigned
    type in conditional expression [-Wsign-compare]
    
    Fixes: c538f6ec9f56 ("dm crypt: add ability to use keys from the kernel key retention service")
    Signed-off-by: Aashish Sharma <shraash@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4862bea088c1e03ca56ec2a9272597046fb2d04
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Thu Feb 17 06:53:52 2022 +0300

    drm/msm/dpu: fix dp audio condition
    
    [ Upstream commit 1e0505a5a7a2fea243f8e6d7e13fcde65f9e41bc ]
    
    DP audio enablement code which is comparing intf_type,
    DRM_MODE_ENCODER_TMDS (= 2) with DRM_MODE_CONNECTOR_DisplayPort (= 10).
    Which would never succeed. Fix it to check for DRM_MODE_ENCODER_TMDS.
    
    Fixes: d13e36d7d222 ("drm/msm/dp: add audio support for Display Port on MSM")
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20220217035358.465904-2-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b52fb813cd1b6b502848fb2f017f6e760299d6a
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sat Jan 22 00:06:14 2022 +0300

    drm/msm/dpu: add DSPP blocks teardown
    
    [ Upstream commit d5c5e78f217172e87d8fb2c3418dd8b58b4adfcb ]
    
    Add missing calls to dpu_hw_dspp_destroy() to free resources allocated
    for DSPP hardware blocks.
    
    Fixes: e47616df008b ("drm/msm/dpu: add support for color processing blocks in dpu driver")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Link: https://lore.kernel.org/r/20220121210618.3482550-3-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 413c62697b61226a236c8b1f5cd64dcf42bcc12f
Author: Kuogee Hsieh <quic_khsieh@quicinc.com>
Date:   Tue Jan 18 10:47:26 2022 -0800

    drm/msm/dp: populate connector of struct dp_panel
    
    [ Upstream commit 5e602f5156910c7b19661699896cb6e3fb94fab9 ]
    
    DP CTS test case 4.2.2.6 has valid edid with bad checksum on purpose
    and expect DP source return correct checksum. During drm edid read,
    correct edid checksum is calculated and stored at
    connector::real_edid_checksum.
    
    The problem is struct dp_panel::connector never be assigned, instead the
    connector is stored in struct msm_dp::connector. When we run compliance
    testing test case 4.2.2.6 dp_panel_handle_sink_request() won't have a valid
    edid set in struct dp_panel::edid so we'll try to use the connectors
    real_edid_checksum and hit a NULL pointer dereference error because the
    connector pointer is never assigned.
    
    Changes in V2:
    -- populate panel connector at msm_dp_modeset_init() instead of at dp_panel_read_sink_caps()
    
    Changes in V3:
    -- remove unhelpful kernel crash trace commit text
    -- remove renaming dp_display parameter to dp
    
    Changes in V4:
    -- add more details to commit text
    
    Changes in v10:
    --  group into one series
    
    Changes in v11:
    -- drop drm/msm/dp: dp_link_parse_sink_count() return immediately if aux read
    
    Fixes: 7948fe12d47 ("drm/msm/dp: return correct edid checksum after corrupted edid checksum read")
    Signee-off-by: Kuogee Hsieh <quic_khsieh@quicinc.com>
    
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/1642531648-8448-3-git-send-email-quic_khsieh@quicinc.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 441a83ff270effab2ccdcee9ed441c8c1c250a28
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Aug 16 21:39:30 2021 +0300

    iwlwifi: mvm: Fix an error code in iwl_mvm_up()
    
    [ Upstream commit 583d18336abdfb1b355270289ff8f6a2608ba905 ]
    
    Return -ENODEV instead of success on this error path.
    
    Fixes: dd36a507c806 ("iwlwifi: mvm: look for the first supported channel when add/remove phy ctxt")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210816183930.GA2068@kili
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c12692c3e97989103f0eb2891de64712ae5dc560
Author: Colin Ian King <colin.king@intel.com>
Date:   Tue Sep 7 11:46:58 2021 +0100

    iwlwifi: Fix -EIO error code that is never returned
    
    [ Upstream commit c305c94bdc18e45b5ad1db54da4269f8cbfdff6b ]
    
    Currently the error -EIO is being assinged to variable ret when
    the READY_BIT is not set but the function iwlagn_mac_start returns
    0 rather than ret. Fix this by returning ret instead of 0.
    
    Addresses-Coverity: ("Unused value")
    Fixes: 7335613ae27a ("iwlwifi: move all mac80211 related functions to one place")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210907104658.14706-1-colin.king@canonical.com
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec376f5c11c88c0215d173599db8449cd4196759
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Fri Feb 11 23:11:11 2022 -0800

    dax: make sure inodes are flushed before destroy cache
    
    [ Upstream commit a7e8de822e0b1979f08767c751f6c8a9c1d4ad86 ]
    
    A bug can be triggered by following command
    
    $ modprobe nd_pmem && modprobe -r nd_pmem
    
    [   10.060014] BUG dax_cache (Not tainted): Objects remaining in dax_cache on __kmem_cache_shutdown()
    [   10.060938] Slab 0x0000000085b729ac objects=9 used=1 fp=0x000000004f5ae469 flags=0x200000000010200(slab|head|node)
    [   10.062433] Call Trace:
    [   10.062673]  dump_stack_lvl+0x34/0x44
    [   10.062865]  slab_err+0x90/0xd0
    [   10.063619]  __kmem_cache_shutdown+0x13b/0x2f0
    [   10.063848]  kmem_cache_destroy+0x4a/0x110
    [   10.064058]  __x64_sys_delete_module+0x265/0x300
    
    This is caused by dax_fs_exit() not flushing inodes before destroy cache.
    To fix this issue, call rcu_barrier() before destroy cache.
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20220212071111.148575-1-ztong0001@gmail.com
    Fixes: 7b6be8444e0f ("dax: refactor dax-fs into a generic provider of 'struct dax_device' instances")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e6b030ac345033bd9259f7a591c424213247000
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Wed Feb 9 16:39:35 2022 +0100

    IB/cma: Allow XRC INI QPs to set their local ACK timeout
    
    [ Upstream commit 748663c8ccf6b2e5a800de19127c2cc1c4423fd2 ]
    
    XRC INI QPs should be able to adjust their local ACK timeout.
    
    Fixes: 2c1619edef61 ("IB/cma: Define option to set ack timeout and pack tos_set")
    Link: https://lore.kernel.org/r/1644421175-31943-1-git-send-email-haakon.bugge@oracle.com
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Suggested-by: Avneesh Pant <avneesh.pant@oracle.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c384e1afa552c94b5684036d5a26fa6dc11c37e
Author: Roman Li <Roman.Li@amd.com>
Date:   Thu Dec 23 17:39:57 2021 -0500

    drm/amd/display: Add affected crtcs to atomic state for dsc mst unplug
    
    [ Upstream commit 128f8ed5902a287a6bb4afe0ffdae8a80b2a64ec ]
    
    [Why]
    When display topology changed on DSC hub we add all crtcs with dsc support to
    atomic state.
    Refer to patch:"drm/amd/display: Trigger modesets on MST DSC connectors"
    However the original implementation may skip crtc if the topology change
    caused by unplug.
    That potentially could lead to no-lightup or corruption on DSC hub after
    unplug event on one of the connectors.
    
    [How]
    Update add_affected_mst_dsc_crtcs() to use old connector state
    if new connector state has no crtc (undergoes modeset due to unplug)
    
    Fixes: 44be939ff7ac58 ("drm/amd/display: Trigger modesets on MST DSC connectors")
    
    Reviewed-by: Hersen Wu <hersenwu@amd.com>
    Acked-by: Jasdeep Dhillon <jdhillon@amd.com>
    Signed-off-by: Roman Li <Roman.Li@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80b96ac9d2fb06a364737c8de4b46a7c22aab1b8
Author: Yiqing Yao <yiqing.yao@amd.com>
Date:   Mon Jan 24 16:11:20 2022 +0800

    drm/amd/pm: enable pm sysfs write for one VF mode
    
    [ Upstream commit e610941c45bad75aa839af015c27d236ab6749e5 ]
    
    [why]
    pm sysfs should be writable in one VF mode as is in passthrough
    
    [how]
    do not remove write access on pm sysfs if device is in one VF mode
    
    Fixes: 11c9cc95f818 ("amdgpu/pm: Make sysfs pm attributes as read-only for VFs")
    Signed-off-by: Yiqing Yao <yiqing.yao@amd.com>
    Reviewed-by: Monk Liu <Monk.liu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06e778d1849d07093bb96b2c943b4c6055f215cf
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Jan 6 10:43:02 2022 +0800

    iommu/ipmmu-vmsa: Check for error num after setting mask
    
    [ Upstream commit 1fdbbfd5099f797a4dac05e7ef0192ba4a9c39b4 ]
    
    Because of the possible failure of the dma_supported(), the
    dma_set_mask_and_coherent() may return error num.
    Therefore, it should be better to check it and return the error if
    fails.
    
    Fixes: 1c894225bf5b ("iommu/ipmmu-vmsa: IPMMU device is 40-bit bus master")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Link: https://lore.kernel.org/r/20220106024302.2574180-1-jiasheng@iscas.ac.cn
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab63b24ae632f8b5ff034c7baf8cf583991e02c0
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Jan 17 23:26:18 2022 -0800

    HID: i2c-hid: fix GET/SET_REPORT for unnumbered reports
    
    [ Upstream commit a5e5e03e94764148a01757b2fa4737d3445c13a6 ]
    
    Internally kernel prepends all report buffers, for both numbered and
    unnumbered reports, with report ID, therefore to properly handle unnumbered
    reports we should prepend it ourselves.
    
    For the same reason we should skip the first byte of the buffer when
    calling i2c_hid_set_or_send_report() which then will take care of properly
    formatting the transfer buffer based on its separate report ID argument
    along with report payload.
    
    [jkosina@suse.cz: finalize trimmed sentence in changelog as spotted by Benjamin]
    Fixes: 9b5a9ae88573 ("HID: i2c-hid: implement ll_driver transport-layer callbacks")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Tested-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 879356a6a05559582b0a7895d86d2d4359745c08
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 24 13:13:46 2022 +0000

    power: supply: ab8500: Fix memory leak in ab8500_fg_sysfs_init
    
    [ Upstream commit 6a4760463dbc6b603690938c468839985189ce0a ]
    
    kobject_init_and_add() takes reference even when it fails.
    According to the doc of kobject_init_and_add()：
    
       If this function returns an error, kobject_put() must be called to
       properly clean up the memory associated with the object.
    
    Fix memory leak by calling kobject_put().
    
    Fixes: 8c0984e5a753 ("power: move power supply drivers to power/supply")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f03ef518c1c1987b100b3195596542c9d44b2c99
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Fri Feb 4 15:33:37 2022 +0100

    drm/bridge: dw-hdmi: use safe format when first in bridge chain
    
    [ Upstream commit 1528038385c0a706aac9ac165eeb24044fef6825 ]
    
    When the dw-hdmi bridge is in first place of the bridge chain, this
    means there is no way to select an input format of the dw-hdmi HW
    component.
    
    Since introduction of display-connector, negotiation was broken since
    the dw-hdmi negotiation code only worked when the dw-hdmi bridge was
    in last position of the bridge chain or behind another bridge also
    supporting input & output format negotiation.
    
    Commit 7cd70656d128 ("drm/bridge: display-connector: implement bus fmts callbacks")
    was introduced to make negotiation work again by making display-connector
    act as a pass-through concerning input & output format negotiation.
    
    But in the case where the dw-hdmi is single in the bridge chain, for
    example on Renesas SoCs, with the display-connector bridge the dw-hdmi
    is no more single, breaking output format.
    
    Reported-by: Biju Das <biju.das.jz@bp.renesas.com>
    Bisected-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Tested-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Fixes: 6c3c719936da ("drm/bridge: synopsys: dw-hdmi: add bus format negociation")
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    [narmstrong: add proper fixes commit]
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220204143337.89221-1-narmstrong@baylibre.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0e25e131d18445103b8c756e0bc05f953ce3d46
Author: Pali Rohár <pali@kernel.org>
Date:   Mon Jan 10 02:50:09 2022 +0100

    PCI: aardvark: Fix reading PCI_EXP_RTSTA_PME bit on emulated bridge
    
    [ Upstream commit 735f5ae49e1b44742cc63ca9b5c1ffde3e94ba91 ]
    
    The emulated bridge returns incorrect value for PCI_EXP_RTSTA register
    during readout in advk_pci_bridge_emul_pcie_conf_read() function: the
    correct bit is BIT(16), but we are setting BIT(23), because the code
    does
      *value = (isr0 & PCIE_MSG_PM_PME_MASK) << 16
    where
      PCIE_MSG_PM_PME_MASK
    is
      BIT(7).
    
    The code should probably have been something like
      *value = (!!(isr0 & PCIE_MSG_PM_PME_MASK)) << 16,
    but we are better of using an if() and using the proper macro for this
    bit.
    
    Link: https://lore.kernel.org/r/20220110015018.26359-15-kabel@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1af8b9ec032826fc532b93308215449229a9e10
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Mon Dec 20 16:38:02 2021 +0000

    livepatch: Fix build failure on 32 bits processors
    
    [ Upstream commit 2f293651eca3eacaeb56747dede31edace7329d2 ]
    
    Trying to build livepatch on powerpc/32 results in:
    
            kernel/livepatch/core.c: In function 'klp_resolve_symbols':
            kernel/livepatch/core.c:221:23: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
              221 |                 sym = (Elf64_Sym *)sechdrs[symndx].sh_addr + ELF_R_SYM(relas[i].r_info);
                  |                       ^
            kernel/livepatch/core.c:221:21: error: assignment to 'Elf32_Sym *' {aka 'struct elf32_sym *'} from incompatible pointer type 'Elf64_Sym *' {aka 'struct elf64_sym *'} [-Werror=incompatible-pointer-types]
              221 |                 sym = (Elf64_Sym *)sechdrs[symndx].sh_addr + ELF_R_SYM(relas[i].r_info);
                  |                     ^
            kernel/livepatch/core.c: In function 'klp_apply_section_relocs':
            kernel/livepatch/core.c:312:35: error: passing argument 1 of 'klp_resolve_symbols' from incompatible pointer type [-Werror=incompatible-pointer-types]
              312 |         ret = klp_resolve_symbols(sechdrs, strtab, symndx, sec, sec_objname);
                  |                                   ^~~~~~~
                  |                                   |
                  |                                   Elf32_Shdr * {aka struct elf32_shdr *}
            kernel/livepatch/core.c:193:44: note: expected 'Elf64_Shdr *' {aka 'struct elf64_shdr *'} but argument is of type 'Elf32_Shdr *' {aka 'struct elf32_shdr *'}
              193 | static int klp_resolve_symbols(Elf64_Shdr *sechdrs, const char *strtab,
                  |                                ~~~~~~~~~~~~^~~~~~~
    
    Fix it by using the right types instead of forcing 64 bits types.
    
    Fixes: 7c8e2bdd5f0d ("livepatch: Apply vmlinux-specific KLP relocations early")
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Acked-by: Petr Mladek <pmladek@suse.com>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Acked-by: Miroslav Benes <mbenes@suse.cz>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/5288e11b018a762ea3351cc8fb2d4f15093a4457.1640017960.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f095441f808ee81e669ee03842c05f5c819b573
Author: Thomas Bracht Laumann Jespersen <t@laumann.xyz>
Date:   Mon Jan 31 12:20:28 2022 +0100

    scripts/dtc: Call pkg-config POSIXly correct
    
    [ Upstream commit a8b309ce9760943486e0585285e0125588a31650 ]
    
    Running with POSIXLY_CORRECT=1 in the environment the scripts/dtc build
    fails, because pkg-config doesn't output anything when the flags come
    after the arguments.
    
    Fixes: 067c650c456e ("dtc: Use pkg-config to locate libyaml")
    Signed-off-by: Thomas Bracht Laumann Jespersen <t@laumann.xyz>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20220131112028.7907-1-t@laumann.xyz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 080822563b35033595575ebf84568263ce8f6d61
Author: Tobias Waldekranz <tobias@waldekranz.com>
Date:   Thu Feb 3 11:16:55 2022 +0100

    net: dsa: mv88e6xxx: Enable port policy support on 6097
    
    [ Upstream commit 585d42bb57bb358d48906660a8de273b078810b1 ]
    
    This chip has support for the same per-port policy actions found in
    later versions of LinkStreet devices.
    
    Fixes: f3a2cd326e44 ("net: dsa: mv88e6xxx: introduce .port_set_policy")
    Signed-off-by: Tobias Waldekranz <tobias@waldekranz.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ac4f049db6e8ea930f1e74520e5f5d3d8cbf454
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Jan 22 15:58:58 2022 +0100

    mt76: mt7615: check sta_rates pointer in mt7615_sta_rate_tbl_update
    
    [ Upstream commit 6a6f457ed5fdf6777536c20644a9e42128a50ec2 ]
    
    Check sta_rates pointer value in mt7615_sta_rate_tbl_update routine
    since minstrel_ht_update_rates can fail allocating rates array.
    
    Fixes: 04b8e65922f63 ("mt76: add mac80211 driver for MT7615 PCIe-based chipsets")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2430af124125b9be4bcffd2867dbba451daf4666
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Jan 22 15:58:57 2022 +0100

    mt76: mt7603: check sta_rates pointer in mt7603_sta_rate_tbl_update
    
    [ Upstream commit fc8e2c707ce11c8ec2e992885b0d53a5e04031ac ]
    
    Check sta_rates pointer value in mt7603_sta_rate_tbl_update routine
    since minstrel_ht_update_rates can fail allocating rates array.
    
    Fixes: c8846e1015022 ("mt76: add driver for MT7603E and MT7628/7688")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 232c1cc9861100d87af25c9cebfbd1acbb5c41d8
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Wed Dec 22 17:06:36 2021 +0100

    mt76: mt7915: use proper aid value in mt7915_mcu_sta_basic_tlv
    
    [ Upstream commit abdb8bc94be4cf68aa71c9a8ee0bad9b3e6f52d3 ]
    
    Similar to mt7915_mcu_wtbl_generic_tlv, rely on vif->bss_conf.aid for
    aid in sta mode and not on sta->aid.
    
    Fixes: e57b7901469fc ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 253cc4aafc219692749edc581efbd9d218d7d990
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Wed Dec 22 12:52:17 2021 +0100

    mt76: mt7915: use proper aid value in mt7915_mcu_wtbl_generic_tlv in sta mode
    
    [ Upstream commit a56b1b0f145ef2d6bb9312dedf3ab8558ef50a5b ]
    
    mac80211 provides aid in vif->bss_conf.aid for sta mode and not in
    sta->aid. Fix mt7915_mcu_wtbl_generic_tlv routine using proper value for
    aid in sta mode.
    
    Fixes: e57b7901469fc ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5d363ff171e208fd546ed718535002cc64a13c4
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Wed Feb 2 09:48:37 2022 +0530

    powerpc/perf: Don't use perf_hw_context for trace IMC PMU
    
    [ Upstream commit 0198322379c25215b2778482bf1221743a76e2b5 ]
    
    Trace IMC (In-Memory collection counters) in powerpc is useful for
    application level profiling.
    
    For trace_imc, presently task context (task_ctx_nr) is set to
    perf_hw_context. But perf_hw_context should only be used for CPU PMU.
    See commit 26657848502b ("perf/core: Verify we have a single
    perf_hw_context PMU").
    
    So for trace_imc, even though it is per thread PMU, it is preferred to
    use sw_context in order to be able to do application level monitoring.
    Hence change the task_ctx_nr to use perf_sw_context.
    
    Fixes: 012ae244845f ("powerpc/perf: Trace imc PMU functions")
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Reviewed-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    [mpe: Update subject & incorporate notes into change log, reflow comment]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220202041837.65968-1-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c18b538617967581087fb946a556db42949b3ac4
Author: Fabiano Rosas <farosas@linux.ibm.com>
Date:   Tue Jan 25 12:57:32 2022 -0300

    KVM: PPC: Book3S HV: Check return value of kvmppc_radix_init
    
    [ Upstream commit 69ab6ac380a00244575de02c406dcb9491bf3368 ]
    
    The return of the function is being shadowed by the call to
    kvmppc_uvmem_init.
    
    Fixes: ca9f4942670c ("KVM: PPC: Book3S HV: Support for running secure guests")
    Signed-off-by: Fabiano Rosas <farosas@linux.ibm.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220125155735.1018683-2-farosas@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b64c158a07bd64054b53a95db5f3103a9809675
Author: Maxim Kiselev <bigunclemax@gmail.com>
Date:   Fri Jan 21 12:14:47 2022 +0300

    powerpc: dts: t1040rdb: fix ports names for Seville Ethernet switch
    
    [ Upstream commit 5ebb74749202a25da4b3cc2eb15470225a05527c ]
    
    On board rev A, the network interface labels for the switch ports
    written on the front panel are different than on rev B and later.
    
    This patch fixes network interface names for the switch ports according
    to labels that are written on the front panel of the board rev B.
    They start from ETH3 and end at ETH10.
    
    This patch also introduces a separate device tree for rev A.
    The main device tree is supposed to cover rev B and later.
    
    Fixes: e69eb0824d8c ("powerpc: dts: t1040rdb: add ports for Seville Ethernet switch")
    Signed-off-by: Maxim Kiselev <bigunclemax@gmail.com>
    Reviewed-by: Maxim Kochetkov <fido_max@inbox.ru>
    Reviewed-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220121091447.3412907-1-bigunclemax@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be703360ed355bdac1f3b472ebeb9c1a33e49b96
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Dec 30 10:29:26 2021 +0800

    ray_cs: Check ioremap return value
    
    [ Upstream commit 7e4760713391ee46dc913194b33ae234389a174e ]
    
    As the possible failure of the ioremap(), the 'local->sram' and other
    two could be NULL.
    Therefore it should be better to check it in order to avoid the later
    dev_dbg.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20211230022926.1846757-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43f2fe2a6995f835a51eabd3be1773d7fc6d7b8b
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jan 20 10:46:54 2022 +0000

    power: reset: gemini-poweroff: Fix IRQ check in gemini_poweroff_probe
    
    [ Upstream commit ba18dad0fb880cd29aa97b6b75560ef14d1061ba ]
    
    platform_get_irq() returns negative error number instead 0 on failure.
    And the doc of platform_get_irq() provides a usage example:
    
        int irq = platform_get_irq(pdev, 0);
        if (irq < 0)
            return irq;
    
    Fix the check of return value to catch errors correctly.
    
    Fixes: f7a388d6cd1c ("power: reset: Add a driver for the Gemini poweroff")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da71a1483b6c04e45d4eb6ac4eb9caffb0061975
Author: Alexander Lobakin <alexandr.lobakin@intel.com>
Date:   Wed Dec 8 15:06:55 2021 +0100

    i40e: respect metadata on XSK Rx to skb
    
    [ Upstream commit 6dba29537c0f639b482bd8f8bbd50ab4ae74b48d ]
    
    For now, if the XDP prog returns XDP_PASS on XSK, the metadata will
    be lost as it doesn't get copied to the skb.
    
    Copy it along with the frame headers. Account its size on skb
    allocation, and when copying just treat it as a part of the frame
    and do a pull after to "move" it to the "reserved" zone.
    
    net_prefetch() xdp->data_meta and align the copy size to speed-up
    memcpy() a little and better match i40e_construct_skb().
    
    Fixes: 0a714186d3c0 ("i40e: add AF_XDP zero-copy Rx support")
    Suggested-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Suggested-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Signed-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
    Tested-by: Kiran Bhandare <kiranx.bhandare@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2e48cd14110fff7d4b3552515dc73f09eaa76a7
Author: Alexander Lobakin <alexandr.lobakin@intel.com>
Date:   Wed Dec 8 15:06:54 2021 +0100

    i40e: don't reserve excessive XDP_PACKET_HEADROOM on XSK Rx to skb
    
    [ Upstream commit bc97f9c6f988b31b728eb47a94ca825401dbeffe ]
    
    {__,}napi_alloc_skb() allocates and reserves additional NET_SKB_PAD
    + NET_IP_ALIGN for any skb.
    OTOH, i40e_construct_skb_zc() currently allocates and reserves
    additional `xdp->data - xdp->data_hard_start`, which is
    XDP_PACKET_HEADROOM for XSK frames.
    There's no need for that at all as the frame is post-XDP and will
    go only to the networking stack core.
    Pass the size of the actual data only to __napi_alloc_skb() and
    don't reserve anything. This will give enough headroom for stack
    processing.
    
    Fixes: 0a714186d3c0 ("i40e: add AF_XDP zero-copy Rx support")
    Signed-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Tested-by: Kiran Bhandare <kiranx.bhandare@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8fe653fa7c63fc6fc6ad9016c84515298db8c60
Author: Fabiano Rosas <farosas@linux.ibm.com>
Date:   Tue Jan 25 18:56:52 2022 -0300

    KVM: PPC: Fix vmx/vsx mixup in mmio emulation
    
    [ Upstream commit b99234b918c6e36b9aa0a5b2981e86b6bd11f8e2 ]
    
    The MMIO emulation code for vector instructions is duplicated between
    VSX and VMX. When emulating VMX we should check the VMX copy size
    instead of the VSX one.
    
    Fixes: acc9eb9305fe ("KVM: PPC: Reimplement LOAD_VMX/STORE_VMX instruction ...")
    Signed-off-by: Fabiano Rosas <farosas@linux.ibm.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220125215655.1026224-3-farosas@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11cb9eba06c8f08305a8989086dedb271849f1a2
Author: Maor Gottlieb <maorg@nvidia.com>
Date:   Tue Jan 18 09:35:02 2022 +0200

    RDMA/core: Set MR type in ib_reg_user_mr
    
    [ Upstream commit 32a88d16615c2be295571c29273c4ac94cb75309 ]
    
    Add missing assignment of MR type to IB_MR_TYPE_USER.
    
    Fixes: 33006bd4f37f ("IB/core: Introduce ib_reg_user_mr")
    Link: https://lore.kernel.org/r/be2e91bcd6e52dc36be289ae92f30d3a5cc6dcb1.1642491047.git.leonro@nvidia.com
    Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11f11ac281f0c0b363d2940204f28bae0422ed71
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Wed Jan 19 10:52:37 2022 +0200

    ath9k_htc: fix uninit value bugs
    
    [ Upstream commit d1e0df1c57bd30871dd1c855742a7c346dbca853 ]
    
    Syzbot reported 2 KMSAN bugs in ath9k. All of them are caused by missing
    field initialization.
    
    In htc_connect_service() svc_meta_len and pad are not initialized. Based
    on code it looks like in current skb there is no service data, so simply
    initialize svc_meta_len to 0.
    
    htc_issue_send() does not initialize htc_frame_hdr::control array. Based
    on firmware code, it will initialize it by itself, so simply zero whole
    array to make KMSAN happy
    
    Fail logs:
    
    BUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     hif_usb_send_regout drivers/net/wireless/ath/ath9k/hif_usb.c:127 [inline]
     hif_usb_send+0x5f0/0x16f0 drivers/net/wireless/ath/ath9k/hif_usb.c:479
     htc_issue_send drivers/net/wireless/ath/ath9k/htc_hst.c:34 [inline]
     htc_connect_service+0x143e/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:275
    ...
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:524 [inline]
     slab_alloc_node mm/slub.c:3251 [inline]
     __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974
     kmalloc_reserve net/core/skbuff.c:354 [inline]
     __alloc_skb+0x545/0xf90 net/core/skbuff.c:426
     alloc_skb include/linux/skbuff.h:1126 [inline]
     htc_connect_service+0x1029/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:258
    ...
    
    Bytes 4-7 of 18 are uninitialized
    Memory access of size 18 starts at ffff888027377e00
    
    BUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     usb_submit_urb+0x6c1/0x2aa0 drivers/usb/core/urb.c:430
     hif_usb_send_regout drivers/net/wireless/ath/ath9k/hif_usb.c:127 [inline]
     hif_usb_send+0x5f0/0x16f0 drivers/net/wireless/ath/ath9k/hif_usb.c:479
     htc_issue_send drivers/net/wireless/ath/ath9k/htc_hst.c:34 [inline]
     htc_connect_service+0x143e/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:275
    ...
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:524 [inline]
     slab_alloc_node mm/slub.c:3251 [inline]
     __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974
     kmalloc_reserve net/core/skbuff.c:354 [inline]
     __alloc_skb+0x545/0xf90 net/core/skbuff.c:426
     alloc_skb include/linux/skbuff.h:1126 [inline]
     htc_connect_service+0x1029/0x1960 drivers/net/wireless/ath/ath9k/htc_hst.c:258
    ...
    
    Bytes 16-17 of 18 are uninitialized
    Memory access of size 18 starts at ffff888027377e00
    
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Reported-by: syzbot+f83a1df1ed4f67e8d8ad@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220115122733.11160-1-paskripkin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e669baa3363406c4f600bce95756e58123b19c4
Author: Tom Rix <trix@redhat.com>
Date:   Mon Jan 24 12:18:12 2022 -0800

    drm/amd/pm: return -ENOTSUPP if there is no get_dpm_ultimate_freq function
    
    [ Upstream commit 430e6a0212b2a0eb1de5e9d47a016fa79edf3978 ]
    
    clang static analysis reports this represenative problem
    amdgpu_smu.c:144:18: warning: The left operand of '*' is a garbage value
            return clk_freq * 100;
                   ~~~~~~~~ ^
    
    If there is no get_dpm_ultimate_freq function,
    smu_get_dpm_freq_range returns success without setting the
    output min,max parameters.  So return an -ENOTSUPP error.
    
    Fixes: e5ef784b1e17 ("drm/amd/powerplay: revise calling chain on retrieving frequency range")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19a7eba284790cfbba2945deb2363cf03ce41648
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Tue Jan 25 00:57:29 2022 +0800

    drm/amd/display: Fix a NULL pointer dereference in amdgpu_dm_connector_add_common_modes()
    
    [ Upstream commit 588a70177df3b1777484267584ef38ab2ca899a2 ]
    
    In amdgpu_dm_connector_add_common_modes(), amdgpu_dm_create_common_mode()
    is assigned to mode and is passed to drm_mode_probed_add() directly after
    that. drm_mode_probed_add() passes &mode->head to list_add_tail(), and
    there is a dereference of it in list_add_tail() without recoveries, which
    could lead to NULL pointer dereference on failure of
    amdgpu_dm_create_common_mode().
    
    Fix this by adding a NULL check of mode.
    
    This bug was found by a static analyzer.
    
    Builds with 'make allyesconfig' show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: e7b07ceef2a6 ("drm/amd/display: Merge amdgpu_dm_types and amdgpu_dm")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9abee51534113368479bdb334472147f5a1780b1
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Tue Jan 25 00:58:55 2022 +0800

    drm/nouveau/acr: Fix undefined behavior in nvkm_acr_hsfw_load_bl()
    
    [ Upstream commit 2343bcdb4747d4f418a4daf2e898b94f86c24a59 ]
    
    In nvkm_acr_hsfw_load_bl(), the return value of kmalloc() is directly
    passed to memcpy(), which could lead to undefined behavior on failure
    of kmalloc().
    
    Fix this bug by using kmemdup() instead of kmalloc()+memcpy().
    
    This bug was found by a static analyzer.
    
    Builds with 'make allyesconfig' show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: 22dcda45a3d1 ("drm/nouveau/acr: implement new subdev to replace "secure boot"")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220124165856.57022-1-zhou1615@umn.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47402eaf888e03d59c9294555f3d3cad1f810810
Author: Shannon Nelson <snelson@pensando.io>
Date:   Mon Jan 24 10:52:57 2022 -0800

    ionic: fix type complaint in ionic_dev_cmd_clean()
    
    [ Upstream commit bc0bf9de6f48268f4ee59e57fb42ac751be3ecda ]
    
    Sparse seems to have gotten a little more picky lately and
    we need to revisit this bit of code to make sparse happy.
    
    warning: incorrect type in initializer (different address spaces)
       expected union ionic_dev_cmd_regs *regs
       got union ionic_dev_cmd_regs [noderef] __iomem *dev_cmd_regs
    warning: incorrect type in argument 2 (different address spaces)
       expected void [noderef] __iomem *
       got unsigned int *
    warning: incorrect type in argument 1 (different address spaces)
       expected void volatile [noderef] __iomem *
       got union ionic_dev_cmd *
    
    Fixes: d701ec326a31 ("ionic: clean up sparse complaints")
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ba10e5c39d41ad2c410d9db13ca2bcbbc0286a2
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Jan 20 16:16:11 2022 +0100

    drm/edid: Don't clear formats if using deep color
    
    [ Upstream commit 75478b3b393bcbdca4e6da76fe3a9f1a4133ec5d ]
    
    The current code, when parsing the EDID Deep Color depths, that the
    YUV422 cannot be used, referring to the HDMI 1.3 Specification.
    
    This specification, in its section 6.2.4, indeed states:
    
      For each supported Deep Color mode, RGB 4:4:4 shall be supported and
      optionally YCBCR 4:4:4 may be supported.
    
      YCBCR 4:2:2 is not permitted for any Deep Color mode.
    
    This indeed can be interpreted like the code does, but the HDMI 1.4
    specification further clarifies that statement in its section 6.2.4:
    
      For each supported Deep Color mode, RGB 4:4:4 shall be supported and
      optionally YCBCR 4:4:4 may be supported.
    
      YCBCR 4:2:2 is also 36-bit mode but does not require the further use
      of the Deep Color modes described in section 6.5.2 and 6.5.3.
    
    This means that, even though YUV422 can be used with 12 bit per color,
    it shouldn't be treated as a deep color mode.
    
    This is also broken with YUV444 if it's supported by the display, but
    DRM_EDID_HDMI_DC_Y444 isn't set. In such a case, the code will clear
    color_formats of the YUV444 support set previously in
    drm_parse_cea_ext(), but will not set it back.
    
    Since the formats supported are already setup properly in
    drm_parse_cea_ext(), let's just remove the code modifying the formats in
    drm_parse_hdmi_deep_color_info()
    
    Fixes: d0c94692e0a3 ("drm/edid: Parse and handle HDMI deep color modes.")
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220120151625.594595-3-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d99e7feaed4c715e7ac974866905b6919cfda8cd
Author: Dario Binacchi <dario.binacchi@amarulasolutions.com>
Date:   Tue Jan 18 10:54:32 2022 +0100

    mtd: rawnand: gpmi: fix controller timings setting
    
    [ Upstream commit 2970bf5a32f079e1e9197411db4fe9faccb1503a ]
    
    Set the controller registers according to the real clock rate. The
    controller registers configuration (setup, hold, timeout, ... cycles)
    depends on the clock rate of the GPMI. Using the real rate instead of
    the ideal one, avoids that this inaccuracy (required_rate - real_rate)
    affects the registers setting.
    
    This patch has been tested on two custom boards with i.MX28 and i.MX6
    SOCs:
    - i.MX28:
      required rate 100MHz, real rate 99.3MHz
    - i.MX6
      required rate 100MHz, real rate 99MHz
    
    Fixes: b1206122069a ("mtd: rawnand: gpmi: use core timings instead of an empirical derivation")
    Co-developed-by: Michael Trimarchi <michael@amarulasolutions.com>
    Signed-off-by: Michael Trimarchi <michael@amarulasolutions.com>
    Signed-off-by: Dario Binacchi <dario.binacchi@amarulasolutions.com>
    Tested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Reviewed-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220118095434.35081-3-dario.binacchi@amarulasolutions.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 364b2eee6233badedbb3745522c6e5eb5d3a60f3
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Jan 5 00:26:58 2022 +0800

    mtd: onenand: Check for error irq
    
    [ Upstream commit 3e68f331c8c759c0daa31cc92c3449b23119a215 ]
    
    For the possible failure of the platform_get_irq(), the returned irq
    could be error number and will finally cause the failure of the
    request_irq().
    Consider that platform_get_irq() can now in certain cases return
    -EPROBE_DEFER, and the consequences of letting request_irq() effectively
    convert that into -EINVAL, even at probe time rather than later on.
    So it might be better to check just now.
    
    Fixes: 2c22120fbd01 ("MTD: OneNAND: interrupt based wait support")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220104162658.1988142-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96ea88eb9ba349c92be458e4e69031eb7c014091
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Jan 13 16:27:04 2022 +0300

    Bluetooth: hci_serdev: call init_rwsem() before p->open()
    
    [ Upstream commit 9d7cbe2b9cf5f650067df4f402fdd799d4bbb4e1 ]
    
    kvartet reported, that hci_uart_tx_wakeup() uses uninitialized rwsem.
    The problem was in wrong place for percpu_init_rwsem() call.
    
    hci_uart_proto::open() may register a timer whose callback may call
    hci_uart_tx_wakeup(). There is a chance, that hci_uart_register_device()
    thread won't be fast enough to call percpu_init_rwsem().
    
    Fix it my moving percpu_init_rwsem() call before p->open().
    
    INFO: trying to register non-static key.
    The code is fine but needs lockdep annotation, or maybe
    you didn't initialize this object before use?
    turning off the locking correctness validator.
    CPU: 2 PID: 18524 Comm: syz-executor.5 Not tainted 5.16.0-rc6 #9
    ...
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     assign_lock_key kernel/locking/lockdep.c:951 [inline]
     register_lock_class+0x148d/0x1950 kernel/locking/lockdep.c:1263
     __lock_acquire+0x106/0x57e0 kernel/locking/lockdep.c:4906
     lock_acquire kernel/locking/lockdep.c:5637 [inline]
     lock_acquire+0x1ab/0x520 kernel/locking/lockdep.c:5602
     percpu_down_read_trylock include/linux/percpu-rwsem.h:92 [inline]
     hci_uart_tx_wakeup+0x12e/0x490 drivers/bluetooth/hci_ldisc.c:124
     h5_timed_event+0x32f/0x6a0 drivers/bluetooth/hci_h5.c:188
     call_timer_fn+0x1a5/0x6b0 kernel/time/timer.c:1421
    
    Fixes: d73e17281665 ("Bluetooth: hci_serdev: Init hci_uart proto_lock to avoid oops")
    Reported-by: Yiru Xu <xyru1999@gmail.com>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b267a8118c2b171bf7d67b90ed64154eeab9fae0
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Dec 30 17:26:49 2021 +0300

    udmabuf: validate ubuf->pagecount
    
    [ Upstream commit 2b6dd600dd72573c23ea180b5b0b2f1813405882 ]
    
    Syzbot has reported GPF in sg_alloc_append_table_from_pages(). The
    problem was in ubuf->pages == ZERO_PTR.
    
    ubuf->pagecount is calculated from arguments passed from user-space. If
    user creates udmabuf with list.size == 0 then ubuf->pagecount will be
    also equal to zero; it causes kmalloc_array() to return ZERO_PTR.
    
    Fix it by validating ubuf->pagecount before passing it to
    kmalloc_array().
    
    Fixes: fbb0de795078 ("Add udmabuf misc device")
    Reported-and-tested-by: syzbot+2c56b725ec547fa9cb29@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20211230142649.23022-1-paskripkin@gmail.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56722aa77b3bb9b53882182cb424514ed4287198
Author: Yafang Shao <laoar.shao@gmail.com>
Date:   Sat Jan 8 13:47:39 2022 +0000

    libbpf: Fix possible NULL pointer dereference when destroying skeleton
    
    [ Upstream commit a32ea51a3f17ce6524c9fc19d311e708331c8b5f ]
    
    When I checked the code in skeleton header file generated with my own
    bpf prog, I found there may be possible NULL pointer dereference when
    destroying skeleton. Then I checked the in-tree bpf progs, finding that is
    a common issue. Let's take the generated samples/bpf/xdp_redirect_cpu.skel.h
    for example. Below is the generated code in
    xdp_redirect_cpu__create_skeleton():
    
            xdp_redirect_cpu__create_skeleton
                    struct bpf_object_skeleton *s;
                    s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
                    if (!s)
                            goto error;
                    ...
            error:
                    bpf_object__destroy_skeleton(s);
                    return  -ENOMEM;
    
    After goto error, the NULL 's' will be deferenced in
    bpf_object__destroy_skeleton().
    
    We can simply fix this issue by just adding a NULL check in
    bpf_object__destroy_skeleton().
    
    Fixes: d66562fba1ce ("libbpf: Add BPF object skeleton support")
    Signed-off-by: Yafang Shao <laoar.shao@gmail.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20220108134739.32541-1-laoar.shao@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a9c268a404456ea2384298e9620dfd023bf503f
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Jan 6 11:03:26 2022 +0800

    drm/panfrost: Check for error num after setting mask
    
    [ Upstream commit 44ab30b056149bd59dd7989a593dd25ead6007fd ]
    
    Because of the possible failure of the dma_supported(), the
    dma_set_mask_and_coherent() may return error num.
    Therefore, it should be better to check it and return the error if
    fails.
    
    Fixes: f3ba91228e8e ("drm/panfrost: Add initial panfrost driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    [Steve: fix Fixes: line]
    Reviewed-by: Steven Price <steven.price@arm.com>
    Signed-off-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220106030326.2620942-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d1114ede5a1dfca02a59a8282f7b4cf38029454
Author: Wen Gong <quic_wgong@quicinc.com>
Date:   Mon Jan 10 16:24:13 2022 +0200

    ath10k: fix memory overwrite of the WoWLAN wakeup packet pattern
    
    [ Upstream commit e3fb3d4418fce5484dfe7995fcd94c18b10a431a ]
    
    In function ath10k_wow_convert_8023_to_80211(), it will do memcpy for
    the new->pattern, and currently the new->pattern and new->mask is same
    with the old, then the memcpy of new->pattern will also overwrite the
    old->pattern, because the header format of new->pattern is 802.11,
    its length is larger than the old->pattern which is 802.3. Then the
    operation of "Copy frame body" will copy a mistake value because the
    body memory has been overwrite when memcpy the new->pattern.
    
    Assign another empty value to new_pattern to avoid the overwrite issue.
    
    Tested-on: QCA6174 hw3.2 SDIO WLAN.RMH.4.4.1-00049
    
    Fixes: fa3440fa2fa1 ("ath10k: convert wow pattern from 802.3 to 802.11")
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20211222031347.25463-1-quic_wgong@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb2be762a49bea1fe5febfe8eb55167f205334b9
Author: Jagan Teki <jagan@amarulasolutions.com>
Date:   Sun Jan 9 22:59:49 2022 +0530

    drm: bridge: adv7511: Fix ADV7535 HPD enablement
    
    [ Upstream commit 3dbc84a595d17f64f14fcea00120d31e33e98880 ]
    
    Existing HPD enablement logic is not compatible with ADV7535
    bridge, thus any runtime plug-in of HDMI cable is not working
    on these bridge designs.
    
    Unlike other ADV7511 family of bridges, the ADV7535 require
    HPD_OVERRIDE bit to set and reset for proper handling of HPD
    functionality.
    
    Fix it.
    
    Fixes: 8501fe4b14a3 ("drm: bridge: adv7511: Add support for ADV7535")
    Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220109172949.168167-1-jagan@amarulasolutions.com
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9d61beb21d703e0d2d93314ca0b70d63c210378
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 5 10:48:26 2022 +0000

    drm/bridge: nwl-dsi: Fix PM disable depth imbalance in nwl_dsi_probe
    
    [ Upstream commit b146e343a9e05605b491b1bf4a2b62a39d5638d8 ]
    
    The pm_runtime_enable will increase power disable depth.
    Thus a pairing decrement is needed on the error handling
    path to keep it balanced according to context.
    
    Fixes: 44cfc6233447 ("drm/bridge: Add NWL MIPI DSI host controller support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220105104826.1418-1-linmq006@gmail.com
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 064e7f75325c2425de0eeba2aebed326b700612d
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 5 10:41:09 2022 +0000

    drm/bridge: Add missing pm_runtime_disable() in __dw_mipi_dsi_probe
    
    [ Upstream commit 96211b7c56b109a52768e6cc5e23a1f79316eca0 ]
    
    If the probe fails, we should use pm_runtime_disable() to balance
    pm_runtime_enable().
    Add missing pm_runtime_disable() for __dw_mipi_dsi_probe.
    
    Fixes: 46fc51546d44 ("drm/bridge/synopsys: Add MIPI DSI host controller bridge")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220105104113.31415-1-linmq006@gmail.com
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8db734df6e62c5cff6d7a3a1936f4831fac8bfc
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Dec 27 09:25:22 2021 +0000

    drm/bridge: Fix free wrong object in sii8620_init_rcp_input_dev
    
    [ Upstream commit 7c442e76c06cb1bef16a6c523487438175584eea ]
    
    rc_dev is allocated by rc_allocate_device(), and doesn't assigned to
    ctx->rc_dev before calling  rc_free_device(ctx->rc_dev).
    So it should call rc_free_device(rc_dev);
    
    Fixes: e25f1f7c94e1 ("drm/bridge/sii8620: add remote control support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211227092522.21755-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec3924eab53343c6f18224951f0a84ffd4276f42
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Fri Dec 31 00:55:14 2021 +0100

    drm/meson: osd_afbcd: Add an exit callback to struct meson_afbcd_ops
    
    [ Upstream commit 04b8a5d9cfd171f65df75f444b5617a372649edd ]
    
    Use this to simplify the driver shutdown. It will also come handy when
    fixing the error handling in meson_drv_bind_master().
    
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Fixes: d1b5e41e13a7e9 ("drm/meson: Add AFBCD module driver")
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211230235515.1627522-2-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1c665f5b7f9c8a7f2fe62b9076c8e4e3ea7a948
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Thu Mar 17 18:30:40 2022 +0000

    ARM: configs: multi_v5_defconfig: re-enable CONFIG_V4L_PLATFORM_DRIVERS
    
    [ Upstream commit f5eb04d7a0e419d61f784de3ced708259ddb71d7 ]
    
    Commit 06b93644f4d1 ("media: Kconfig: add an option to filter in/out
    platform drivers") introduced CONFIG_MEDIA_PLATFORM_SUPPORT, to allow
    more fine grained control over the inclusion of certain Kconfig files.
    multi_v5_defconfig was selecting some drivers described in
    drivers/media/platform/Kconfig, which now wasn't included anymore.
    
    Explicitly set the new symbol in multi_v5_defconfig to bring those
    drivers back.
    This enables some new V4L2 and VIDEOBUF2 features, but as modules only.
    
    Fixes: 06b93644f4d1 ("media: Kconfig: add an option to filter in/out platform drivers")
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Link: https://lore.kernel.org/r/20220317183043.948432-3-andre.przywara@arm.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f24716e38220fc9e52e208d20591d2bc9b7f020
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Mar 16 08:36:31 2022 +0000

    ASoC: codecs: wcd934x: Add missing of_node_put() in wcd934x_codec_parse_data
    
    [ Upstream commit 9531a631379169d57756b2411178c6238655df88 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    This is similar to commit 64b92de9603f
    ("ASoC: wcd9335: fix a leaked reference by adding missing of_node_put")
    
    Fixes: a61f3b4f476e ("ASoC: wcd934x: add support to wcd9340/wcd9341 codec")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220316083631.14103-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abefbf602c6a3c0ea5e9f87e91049915206e8f95
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Mar 16 04:19:24 2022 +0000

    ASoC: msm8916-wcd-analog: Fix error handling in pm8916_wcd_analog_spmi_probe
    
    [ Upstream commit 9ebd62d60edcd4d9c75485e5ccd0b79581ad3c49 ]
    
    In the error handling path, the clk_prepare_enable() function
    call should be balanced by a corresponding 'clk_disable_unprepare()'
    call , as already done in the remove function.
    
    Fixes: de66b3455023 ("ASoC: codecs: msm8916-wcd-analog: add MBHC support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220316041924.17560-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90ac679aa6a01841da90ec5a4aaa4b5e0badddf0
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Mar 16 11:15:30 2022 +0000

    ASoC: atmel: Fix error handling in sam9x5_wm8731_driver_probe
    
    [ Upstream commit 740dc3e846537c3743da98bf106f376023fd085c ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    This function only calls of_node_put() in the regular path.
    And it will cause refcount leak in error path.
    
    Fixes: fdbcb3cba54b ("ASoC: atmel: machine driver for at91sam9x5-wm8731 boards")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Link: https://lore.kernel.org/r/20220316111530.4551-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec26e3ce3c711a41a088d984c85c5d6b2f8208f7
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Jun 2 22:16:19 2021 +0800

    ASoC: atmel: sam9x5_wm8731: use devm_snd_soc_register_card()
    
    [ Upstream commit 6522a8486c00d130a32a57c6c8a365572958b4df ]
    
    Using devm_snd_soc_register_card() can make the code
    shorter and cleaner.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210602141619.323286-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 541251b90338b9e804db5094faa2a567c9a44ccb
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 8 15:14:15 2022 +0800

    mmc: davinci_mmc: Handle error for clk_enable
    
    [ Upstream commit 09e7af76db02c74f2a339b3cb2d95460fa2ddbe4 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: bbce5802afc5 ("davinci: mmc: updates to suspend/resume implementation")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220308071415.1093393-1-jiasheng@iscas.ac.cn
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19eb5c7957e6acf90c09a74230f113cbb35dbf9c
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 08:45:22 2022 +0000

    ASoC: msm8916-wcd-digital: Fix missing clk_disable_unprepare() in msm8916_wcd_digital_probe
    
    [ Upstream commit 375a347da4889f64d86e1ab7f4e6702b6e9bf299 ]
    
    Fix the missing clk_disable_unprepare() before return
    from msm8916_wcd_digital_probe in the error handling case.
    
    Fixes: 150db8c5afa1 ("ASoC: codecs: Add msm8916-wcd digital codec")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220307084523.28687-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42042c7a3ddb4eb928061d03ebb34160153cc45c
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Thu Mar 10 09:19:02 2022 +0000

    ASoC: imx-es8328: Fix error return code in imx_es8328_probe()
    
    [ Upstream commit 3b891513f95cba3944e72c1139ea706d04f3781b ]
    
    Fix to return a negative error code from the error handling case instead
    of 0, as done elsewhere in this function.
    
    Fixes: 7e7292dba215 ("ASoC: fsl: add imx-es8328 machine driver")
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Link: https://lore.kernel.org/r/20220310091902.129299-1-wangwensheng4@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe4db4ea210462f440a0c33fab12313be5340c3d
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Thu Mar 10 10:37:43 2022 +0800

    ASoC: fsl_spdif: Disable TX clock when stop
    
    [ Upstream commit 6ddf611219ba8f7c8fa0d26b39710a641e7d37a5 ]
    
    The TX clock source may be changed in next case, need to
    disable it when stop, otherwise the TX may not work after
    changing the clock source, error log is:
    
    aplay: pcm_write:2058: write error: Input/output error
    
    Fixes: a2388a498ad2 ("ASoC: fsl: Add S/PDIF CPU DAI driver")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/1646879863-27711-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86b6cf989437e694fd0a15782b5a513853a739e0
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 02:01:44 2022 +0000

    ASoC: mxs: Fix error handling in mxs_sgtl5000_probe
    
    [ Upstream commit 6ae0a4d8fec551ec581d620f0eb1fe31f755551c ]
    
    This function only calls of_node_put() in the regular path.
    And it will cause refcount leak in error paths.
    For example, when codec_np is NULL, saif_np[0] and saif_np[1]
    are not NULL, it will cause leaks.
    
    of_node_put() will check if the node pointer is NULL, so we can
    call it directly to release the refcount of regular pointers.
    
    Fixes: e968194b45c4 ("ASoC: mxs: add device tree support for mxs-sgtl5000")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220308020146.26496-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8c981cfc06dead13829a1bd89effc8b131a3ac8
Author: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
Date:   Mon Mar 7 14:21:57 2022 +0200

    ASoC: dmaengine: do not use a NULL prepare_slave_config() callback
    
    [ Upstream commit 9a1e13440a4f2e7566fd4c5eae6a53e6400e08a4 ]
    
    Even if struct snd_dmaengine_pcm_config is used, prepare_slave_config()
    callback might not be set. Check if this callback is set before using it.
    
    Fixes: fa654e085300 ("ASoC: dmaengine-pcm: Provide default config")
    Signed-off-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Link: https://lore.kernel.org/r/20220307122202.2251639-2-codrin.ciubotariu@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f452cff02531cbc423a61a99cfec62da1ae64363
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 02:33:23 2022 +0000

    ASoC: SOF: Add missing of_node_put() in imx8m_probe
    
    [ Upstream commit 5575f7f49134c7386a684335c9007737c606d3b5 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: afb93d716533 ("ASoC: SOF: imx: Add i.MX8M HW support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Link: https://lore.kernel.org/r/20220308023325.31702-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d82401d4650bc53cf3b54fc5dab6902d684f20b
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 08:35:52 2022 +0000

    ASoC: rockchip: i2s: Fix missing clk_disable_unprepare() in rockchip_i2s_probe
    
    [ Upstream commit f725d20579807a68afbe5dba69e78b8fa05f5ef0 ]
    
    Fix the missing clk_disable_unprepare() before return
    from rockchip_i2s_probe() in the error handling case.
    
    Fixes: 01605ad12875 ("ASoC: rockchip-i2s: enable "hclk" for rockchip I2S controller")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220307083553.26009-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e8b0fd0ebe000f0379fbe9e6264f0cbe7395ec1
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Jun 15 22:15:00 2021 +0800

    ASoC: rockchip: i2s: Use devm_platform_get_and_ioremap_resource()
    
    [ Upstream commit 4ffbcd4ab0b6f77d29acde69dc25bd95318fae5e ]
    
    Use devm_platform_get_and_ioremap_resource() to simplify
    code.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210615141502.1683686-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5664a584ea2e03035211da4f8b16dcd4a8e8eee
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Sun Mar 6 12:29:11 2022 +0100

    ivtv: fix incorrect device_caps for ivtvfb
    
    [ Upstream commit 25e94139218c0293b4375233c14f2256d7dcfaa8 ]
    
    The VIDIOC_G_FBUF and related overlay ioctls no longer worked (-ENOTTY was
    returned).
    
    The root cause was the introduction of the caps field in ivtv-driver.h.
    While loading the ivtvfb module would update the video_device device_caps
    field with V4L2_CAP_VIDEO_OUTPUT_OVERLAY it would not update that caps
    field, and that's what the overlay ioctls would look at.
    
    It's a bad idea to keep information in two places, so drop the caps field
    and only use vdev.device_caps.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: Martin Dauskardt <martin.dauskardt@gmx.de>
    Fixes: 2161536516ed (media: media/pci: set device_caps in struct video_device)
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebd4f1501e0be05d36dc2a114af5b3067c41eadb
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Mon Feb 28 15:26:26 2022 +0100

    media: saa7134: fix incorrect use to determine if list is empty
    
    [ Upstream commit 9f1f4b642451d35667a4dc6a9c0a89d954b530a3 ]
    
    'dev' will *always* be set by list_for_each_entry().
    It is incorrect to assume that the iterator value will be NULL if the
    list is empty.
    
    Instead of checking the pointer it should be checked if
    the list is empty.
    
    Fixes: 79dd0c69f05f ("V4L: 925: saa7134 alsa is now a standalone module")
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd67315994c4ace500fce779699477597d59f2a4
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Jun 16 10:36:45 2021 +0200

    media: saa7134: convert list_for_each to entry variant
    
    [ Upstream commit 3f3475a5c77e9eabab43537f713b90f1d19258b7 ]
    
    Convert list_for_each() to list_for_each_entry() where
    applicable.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 066d9b48f9492662946af933b3cada42f2a13f62
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 12:38:12 2022 +0000

    video: fbdev: omapfb: Add missing of_node_put() in dvic_probe_of
    
    [ Upstream commit a58c22cfbbf62fefca090334bbd35fd132e92a23 ]
    
    The device_node pointer is returned by of_parse_phandle()  with refcount
    incremented. We should use of_node_put() on it when done.
    
    Fixes: f76ee892a99e ("omapfb: copy omapdss & displays for omapfb")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20da8404e46468ba18f6a46fdc7ce7418afbc7af
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Mar 2 14:28:44 2022 +0800

    ASoC: fsi: Add check for clk_enable
    
    [ Upstream commit 405afed8a728f23cfaa02f75bbc8bdd6b7322123 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: ab6f6d85210c ("ASoC: fsi: add master clock control functions")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220302062844.46869-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db1c00a025c67a3aad7b6bd36de310bf1c89ba0b
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Mar 4 10:38:21 2022 +0800

    ASoC: wm8350: Handle error for wm8350_register_irq
    
    [ Upstream commit db0350da8084ad549bca16cc0486c11cc70a1f9b ]
    
    As the potential failure of the wm8350_register_irq(),
    it should be better to check it and return error if fails.
    Also, use 'free_' in order to avoid the same code.
    
    Fixes: a6ba2b2dabb5 ("ASoC: Implement WM8350 headphone jack detection")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20220304023821.391936-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 662ee5ac6b451aa5a27b8eebd397f2f5c7f42cec
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 12:45:39 2022 +0000

    ASoC: atmel: Add missing of_node_put() in at91sam9g20ek_audio_probe
    
    [ Upstream commit f590797fa3c1bccdd19e55441592a23b46aef449 ]
    
    This node pointer is returned by of_parse_phandle() with refcount
    incremented in this function.
    Calling of_node_put() to avoid the refcount leak.
    
    Fixes: 531f67e41dcd ("ASoC: at91sam9g20ek-wm8731: convert to dt support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Link: https://lore.kernel.org/r/20220307124539.1743-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 663e7a72871f89f7a10cc8d7b2f17f27c64e071d
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Jan 14 07:28:40 2022 +0100

    media: vidtv: Check for null return of vzalloc
    
    [ Upstream commit e6a21a14106d9718aa4f8e115b1e474888eeba44 ]
    
    As the possible failure of the vzalloc(), e->encoder_buf might be NULL.
    Therefore, it should be better to check it in order
    to guarantee the success of the initialization.
    If fails, we need to free not only 'e' but also 'e->name'.
    Also, if the allocation for ctx fails, we need to free 'e->encoder_buf'
    else.
    
    Fixes: f90cf6079bf6 ("media: vidtv: add a bridge driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d68603cc4382174bc1e7d532e10675c48c6b257
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Tue Jan 25 09:02:11 2022 +0100

    media: stk1160: If start stream fails, return buffers with VB2_BUF_STATE_QUEUED
    
    [ Upstream commit fbe04b49a54e31f4321d632270207f0e6304cd16 ]
    
    If the callback 'start_streaming' fails, then all
    queued buffers in the driver should be returned with
    state 'VB2_BUF_STATE_QUEUED'. Currently, they are
    returned with 'VB2_BUF_STATE_ERROR' which is wrong.
    Fix this. This also fixes the warning:
    
    [   65.583633] WARNING: CPU: 5 PID: 593 at drivers/media/common/videobuf2/videobuf2-core.c:1612 vb2_start_streaming+0xd4/0x160 [videobuf2_common]
    [   65.585027] Modules linked in: snd_usb_audio snd_hwdep snd_usbmidi_lib snd_rawmidi snd_soc_hdmi_codec dw_hdmi_i2s_audio saa7115 stk1160 videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_common videodev mc crct10dif_ce panfrost snd_soc_simple_card snd_soc_audio_graph_card snd_soc_spdif_tx snd_soc_simple_card_utils gpu_sched phy_rockchip_pcie snd_soc_rockchip_i2s rockchipdrm analogix_dp dw_mipi_dsi dw_hdmi cec drm_kms_helper drm rtc_rk808 rockchip_saradc industrialio_triggered_buffer kfifo_buf rockchip_thermal pcie_rockchip_host ip_tables x_tables ipv6
    [   65.589383] CPU: 5 PID: 593 Comm: v4l2src0:src Tainted: G        W         5.16.0-rc4-62408-g32447129cb30-dirty #14
    [   65.590293] Hardware name: Radxa ROCK Pi 4B (DT)
    [   65.590696] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [   65.591304] pc : vb2_start_streaming+0xd4/0x160 [videobuf2_common]
    [   65.591850] lr : vb2_start_streaming+0x6c/0x160 [videobuf2_common]
    [   65.592395] sp : ffff800012bc3ad0
    [   65.592685] x29: ffff800012bc3ad0 x28: 0000000000000000 x27: ffff800012bc3cd8
    [   65.593312] x26: 0000000000000000 x25: ffff00000d8a7800 x24: 0000000040045612
    [   65.593938] x23: ffff800011323000 x22: ffff800012bc3cd8 x21: ffff00000908a8b0
    [   65.594562] x20: ffff00000908a8c8 x19: 00000000fffffff4 x18: ffffffffffffffff
    [   65.595188] x17: 000000040044ffff x16: 00400034b5503510 x15: ffff800011323f78
    [   65.595813] x14: ffff000013163886 x13: ffff000013163885 x12: 00000000000002ce
    [   65.596439] x11: 0000000000000028 x10: 0000000000000001 x9 : 0000000000000228
    [   65.597064] x8 : 0101010101010101 x7 : 7f7f7f7f7f7f7f7f x6 : fefefeff726c5e78
    [   65.597690] x5 : ffff800012bc3990 x4 : 0000000000000000 x3 : ffff000009a34880
    [   65.598315] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000007cd99f0
    [   65.598940] Call trace:
    [   65.599155]  vb2_start_streaming+0xd4/0x160 [videobuf2_common]
    [   65.599672]  vb2_core_streamon+0x17c/0x1a8 [videobuf2_common]
    [   65.600179]  vb2_streamon+0x54/0x88 [videobuf2_v4l2]
    [   65.600619]  vb2_ioctl_streamon+0x54/0x60 [videobuf2_v4l2]
    [   65.601103]  v4l_streamon+0x3c/0x50 [videodev]
    [   65.601521]  __video_do_ioctl+0x1a4/0x428 [videodev]
    [   65.601977]  video_usercopy+0x320/0x828 [videodev]
    [   65.602419]  video_ioctl2+0x3c/0x58 [videodev]
    [   65.602830]  v4l2_ioctl+0x60/0x90 [videodev]
    [   65.603227]  __arm64_sys_ioctl+0xa8/0xe0
    [   65.603576]  invoke_syscall+0x54/0x118
    [   65.603911]  el0_svc_common.constprop.3+0x84/0x100
    [   65.604332]  do_el0_svc+0x34/0xa0
    [   65.604625]  el0_svc+0x1c/0x50
    [   65.604897]  el0t_64_sync_handler+0x88/0xb0
    [   65.605264]  el0t_64_sync+0x16c/0x170
    [   65.605587] ---[ end trace 578e0ba07742170d ]---
    
    Fixes: 8ac456495a33d ("[media] stk1160: Stop device and unqueue buffers when start_streaming() fails")
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b02752d75300af193f59ce4d252cd5a14b543ef5
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Mar 4 22:40:36 2022 -0800

    m68k: coldfire/device.c: only build for MCF_EDMA when h/w macros are defined
    
    [ Upstream commit e6e1e7b19fa132d23d09c465942aab4c110d3da9 ]
    
    When CONFIG_MCF_EDMA is set (due to COMPILE_TEST, not due to
    CONFIG_M5441x), coldfire/device.c has compile errors due to
    missing MCFEDMA_* symbols. In the .config file that was provided,
    CONFIG_M5206=y, not CONFIG_M5441x, so <asm/m5441xsim.h> is not
    included in coldfire/device.c.
    
    Only build the MCF_EDMA code in coldfire/device.c if the MCFEDMA_*
    hardware macros are defined.
    
    Fixes these build errors:
    
    ../arch/m68k/coldfire/device.c:512:35: error: 'MCFEDMA_BASE' undeclared here (not in a function); did you mean 'MCFDMA_BASE1'?
      512 |                 .start          = MCFEDMA_BASE,
    ../arch/m68k/coldfire/device.c:513:50: error: 'MCFEDMA_SIZE' undeclared here (not in a function)
      513 |                 .end            = MCFEDMA_BASE + MCFEDMA_SIZE - 1,
    ../arch/m68k/coldfire/device.c:517:35: error: 'MCFEDMA_IRQ_INTR0' undeclared here (not in a function)
      517 |                 .start          = MCFEDMA_IRQ_INTR0,
    ../arch/m68k/coldfire/device.c:523:35: error: 'MCFEDMA_IRQ_INTR16' undeclared here (not in a function)
      523 |                 .start          = MCFEDMA_IRQ_INTR16,
    ../arch/m68k/coldfire/device.c:529:35: error: 'MCFEDMA_IRQ_INTR56' undeclared here (not in a function)
      529 |                 .start          = MCFEDMA_IRQ_INTR56,
    ../arch/m68k/coldfire/device.c:535:35: error: 'MCFEDMA_IRQ_ERR' undeclared here (not in a function)
      535 |                 .start          = MCFEDMA_IRQ_ERR,
    
    Fixes: d7e9d01ac292 ("m68k: add ColdFire mcf5441x eDMA platform support")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Link: lore.kernel.org/r/202203030252.P752DK46-lkp@intel.com
    Cc: Angelo Dureghello <angelo@sysam.it>
    Cc: Greg Ungerer <gerg@kernel.org>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: linux-m68k@lists.linux-m68k.org
    Cc: uclinux-dev@uclinux.org
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ca3635a0af486647b1dfe1c9f5dabe4ca6b0427
Author: Rob Herring <robh@kernel.org>
Date:   Fri Mar 4 14:25:58 2022 -0600

    arm64: dts: rockchip: Fix SDIO regulator supply properties on rk3399-firefly
    
    [ Upstream commit 37cbd3c522869247ed4525b5042ff4c6a276c813 ]
    
    A label reference without brackets is a path string, not a phandle as
    intended. Add the missing brackets.
    
    Fixes: a5002c41c383 ("arm64: dts: rockchip: add WiFi module support for Firefly-RK3399")
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20220304202559.317749-1-robh@kernel.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e6f5786621df060f8296f074efd275eaf20361a
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Mar 4 21:56:47 2022 +0900

    ALSA: firewire-lib: fix uninitialized flag for AV/C deferred transaction
    
    [ Upstream commit bf0cd60b7e33cf221fbe1114e4acb2c828b0af0d ]
    
    AV/C deferred transaction was supported at a commit 00a7bb81c20f ("ALSA:
    firewire-lib: Add support for deferred transaction") while 'deferrable'
    flag can be uninitialized for non-control/notify AV/C transactions.
    UBSAN reports it:
    
    kernel: ================================================================================
    kernel: UBSAN: invalid-load in /build/linux-aa0B4d/linux-5.15.0/sound/firewire/fcp.c:363:9
    kernel: load of value 158 is not a valid value for type '_Bool'
    kernel: CPU: 3 PID: 182227 Comm: irq/35-firewire Tainted: P           OE     5.15.0-18-generic #18-Ubuntu
    kernel: Hardware name: Gigabyte Technology Co., Ltd. AX370-Gaming 5/AX370-Gaming 5, BIOS F42b 08/01/2019
    kernel: Call Trace:
    kernel:  <IRQ>
    kernel:  show_stack+0x52/0x58
    kernel:  dump_stack_lvl+0x4a/0x5f
    kernel:  dump_stack+0x10/0x12
    kernel:  ubsan_epilogue+0x9/0x45
    kernel:  __ubsan_handle_load_invalid_value.cold+0x44/0x49
    kernel:  fcp_response.part.0.cold+0x1a/0x2b [snd_firewire_lib]
    kernel:  fcp_response+0x28/0x30 [snd_firewire_lib]
    kernel:  fw_core_handle_request+0x230/0x3d0 [firewire_core]
    kernel:  handle_ar_packet+0x1d9/0x200 [firewire_ohci]
    kernel:  ? handle_ar_packet+0x1d9/0x200 [firewire_ohci]
    kernel:  ? transmit_complete_callback+0x9f/0x120 [firewire_core]
    kernel:  ar_context_tasklet+0xa8/0x2e0 [firewire_ohci]
    kernel:  tasklet_action_common.constprop.0+0xea/0xf0
    kernel:  tasklet_action+0x22/0x30
    kernel:  __do_softirq+0xd9/0x2e3
    kernel:  ? irq_finalize_oneshot.part.0+0xf0/0xf0
    kernel:  do_softirq+0x75/0xa0
    kernel:  </IRQ>
    kernel:  <TASK>
    kernel:  __local_bh_enable_ip+0x50/0x60
    kernel:  irq_forced_thread_fn+0x7e/0x90
    kernel:  irq_thread+0xba/0x190
    kernel:  ? irq_thread_fn+0x60/0x60
    kernel:  kthread+0x11e/0x140
    kernel:  ? irq_thread_check_affinity+0xf0/0xf0
    kernel:  ? set_kthread_struct+0x50/0x50
    kernel:  ret_from_fork+0x22/0x30
    kernel:  </TASK>
    kernel: ================================================================================
    
    This commit fixes the bug. The bug has no disadvantage for the non-
    control/notify AV/C transactions since the flag has an effect for AV/C
    response with INTERIM (0x0f) status which is not used for the transactions
    in AV/C general specification.
    
    Fixes: 00a7bb81c20f ("ALSA: firewire-lib: Add support for deferred transaction")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20220304125647.78430-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64eee4127c23e29f2645139a3a6564ae4607c2e6
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Feb 25 05:25:52 2022 -0800

    memory: emif: check the pointer temp in get_device_details()
    
    [ Upstream commit 5b5ab1bfa1898c6d52936a57c25c5ceba2cb2f87 ]
    
    The pointer temp is allocated by devm_kzalloc(), so it should be
    checked for error handling.
    
    Fixes: 7ec944538dde ("memory: emif: add basic infrastructure for EMIF driver")
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Link: https://lore.kernel.org/r/20220225132552.27894-1-baijiaju1990@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 330a9b0d38e6609dc1cfe52f0b5a24c9ea71db9a
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 24 10:54:44 2022 +0800

    memory: emif: Add check for setup_interrupts
    
    [ Upstream commit fd7bd80b46373887b390852f490f21b07e209498 ]
    
    As the potential failure of the devm_request_threaded_irq(),
    it should be better to check the return value of the
    setup_interrupts() and return error if fails.
    
    Fixes: 68b4aee35d1f ("memory: emif: add interrupt and temperature handling")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220224025444.3256530-1-jiasheng@iscas.ac.cn
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4639c1d97f385f4784f44d66a3da0672f4951ada
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Oct 15 08:13:53 2021 +0000

    ASoC: soc-compress: prevent the potentially use of null pointer
    
    [ Upstream commit de2c6f98817fa5decb9b7d3b3a8a3ab864c10588 ]
    
    There is one call trace that snd_soc_register_card()
    ->snd_soc_bind_card()->soc_init_pcm_runtime()
    ->snd_soc_dai_compress_new()->snd_soc_new_compress().
    In the trace the 'codec_dai' transfers from card->dai_link,
    and we can see from the snd_soc_add_pcm_runtime() in
    snd_soc_bind_card() that, if value of card->dai_link->num_codecs
    is 0, then 'codec_dai' could be null pointer caused
    by index out of bound in 'asoc_rtd_to_codec(rtd, 0)'.
    And snd_soc_register_card() is called by various platforms.
    Therefore, it is better to add the check in the case of misusing.
    And because 'cpu_dai' has already checked in soc_init_pcm_runtime(),
    there is no need to check again.
    Adding the check as follow, then if 'codec_dai' is null,
    snd_soc_new_compress() will not pass through the check
    'if (playback + capture != 1)', avoiding the leftover use of
    'codec_dai'.
    
    Fixes: 467fece ("ASoC: soc-dai: move snd_soc_dai_stream_valid() to soc-dai.c")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/1634285633-529368-1-git-send-email-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6ee60d4a98f731a0ee2d4b02ddda1846706daf3
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 1 16:47:42 2022 +0800

    ASoC: dwc-i2s: Handle errors for clk_enable
    
    [ Upstream commit 45ea97d74313bae681328b0c36fa348036777644 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it, as same as clk_prepare_enable().
    
    Fixes: c9afc1834e81 ("ASoC: dwc: Disallow building designware_pcm as a module")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220301084742.3751939-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39bee81e30834f3bdf26c56fe219a23b2a540962
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 1 17:06:37 2022 +0800

    ASoC: atmel_ssc_dai: Handle errors for clk_enable
    
    [ Upstream commit f9e2ca0640e59d19af0ff285ee5591ed39069b09 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error if fals.
    
    Fixes: cbaadf0f90d6 ("ASoC: atmel_ssc_dai: refactor the startup and shutdown")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220301090637.3776558-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc947d175c1742755103a8bbdfc84ec8e1ed1688
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 1 16:17:17 2022 +0800

    ASoC: mxs-saif: Handle errors for clk_enable
    
    [ Upstream commit 2ecf362d220317debf5da376e0390e9f7a3f7b29 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it, like mxs_saif_trigger().
    
    Fixes: d0ba4c014934 ("ASoC: mxs-saif: set a base clock rate for EXTMASTER mode work")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220301081717.3727190-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a754ea0de369fe61868fd96fe54cc4b3f7d66de6
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:05:56 2022 -0800

    printk: fix return value of printk.devkmsg __setup handler
    
    [ Upstream commit b665eae7a788c5e2bc10f9ac3c0137aa0ad1fc97 ]
    
    If an invalid option value is used with "printk.devkmsg=<value>",
    it is silently ignored.
    If a valid option value is used, it is honored but the wrong return
    value (0) is used, indicating that the command line option had an
    error and was not handled. This string is not added to init's
    environment strings due to init/main.c::unknown_bootoption()
    checking for a '.' in the boot option string and then considering
    that string to be an "Unused module parameter".
    
    Print a warning message if a bad option string is used.
    Always return 1 from the __setup handler to indicate that the command
    line option has been handled.
    
    Fixes: 750afe7babd1 ("printk: add kernel parameter to control writes to /dev/kmsg")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Sergey Senozhatsky <senozhatsky@chromium.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20220228220556.23484-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87a265e292f8c87298c8a407a01b5f0e1907a4d5
Author: Frank Wunderlich <frank-w@public-files.de>
Date:   Tue Mar 1 16:24:18 2022 +0100

    arm64: dts: broadcom: Fix sata nodename
    
    [ Upstream commit 55927cb44db43a57699fa652e2437a91620385dc ]
    
    After converting ahci-platform txt binding to yaml nodename is reported
    as not matching the standard:
    
    arch/arm64/boot/dts/broadcom/northstar2/ns2-svk.dt.yaml:
    ahci@663f2000: $nodename:0: 'ahci@663f2000' does not match '^sata(@.*)?$'
    
    Fix it to match binding.
    
    Fixes: ac9aae00f0fc ("arm64: dts: Add SATA3 AHCI and SATA3 PHY DT nodes for NS2")
    Signed-off-by: Frank Wunderlich <frank-w@public-files.de>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f63122803d66f3d579272c633dc9131804504423
Author: Kuldeep Singh <singh.kuldeep87k@gmail.com>
Date:   Mon Feb 28 16:39:03 2022 +0530

    arm64: dts: ns2: Fix spi-cpol and spi-cpha property
    
    [ Upstream commit c953c764e505428f59ffe6afb1c73b89b5b1ac35 ]
    
    Broadcom ns2 platform has spi-cpol and spi-cpho properties set
    incorrectly. As per spi-slave-peripheral-prop.yaml, these properties are
    of flag or boolean type and not integer type. Fix the values.
    
    Fixes: d69dbd9f41a7c (arm64: dts: Add ARM PL022 SPI DT nodes for NS2)
    Signed-off-by: Kuldeep Singh <singh.kuldeep87k@gmail.com>
    CC: Ray Jui <rjui@broadcom.com>
    CC: Scott Branden <sbranden@broadcom.com>
    CC: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d6a0dc6bad495817efcaa32ef209a6b4f86485d
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Mon Feb 28 10:28:39 2022 +0800

    ALSA: spi: Add check for clk_enable()
    
    [ Upstream commit ca1697eb09208f0168d94b88b72f57505339cbe5 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: 3568459a5113 ("ALSA: at73c213: manage SSC clock")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220228022839.3547266-1-jiasheng@iscas.ac.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 039fae34f8cd906d2aa109f354ea815536872001
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Mon Feb 28 11:15:40 2022 +0800

    ASoC: ti: davinci-i2s: Add check for clk_enable()
    
    [ Upstream commit ed7c9fef11931fc5d32a83d68017ff390bf5c280 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: 5f9a50c3e55e ("ASoC: Davinci: McBSP: add device tree support for McBSP")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@gmail.com>
    Link: https://lore.kernel.org/r/20220228031540.3571959-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94cb9fe5d86ed7e7e2f4e56dbb5aebe8cf7c7b0e
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Feb 25 05:10:30 2022 -0800

    ASoC: rt5663: check the return value of devm_kzalloc() in rt5663_parse_dp()
    
    [ Upstream commit 4d06f92f38b799295ae22c98be7a20cac3e2a1a7 ]
    
    The function devm_kzalloc() in rt5663_parse_dp() can fail, so its return
    value should be checked.
    
    Fixes: 457c25efc592 ("ASoC: rt5663: Add the function of impedance sensing")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Link: https://lore.kernel.org/r/20220225131030.27248-1-baijiaju1990@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ce3e6e1036e98eb3712b29433784061cfa0bbff
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 15 15:37:37 2022 +0100

    uaccess: fix nios2 and microblaze get_user_8()
    
    [ Upstream commit a97b693c3712f040c5802f32b2d685352e08cefa ]
    
    These two architectures implement 8-byte get_user() through
    a memcpy() into a four-byte variable, which won't fit.
    
    Use a temporary 64-bit variable instead here, and use a double
    cast the way that risc-v and openrisc do to avoid compile-time
    warnings.
    
    Fixes: 6a090e97972d ("arch/microblaze: support get_user() of size 8 bytes")
    Fixes: 5ccc6af5e88e ("nios2: Memory management")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19894751f65785ee8d9cf7d94853c8c1f76bceb7
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Tue Feb 22 18:32:12 2022 +0000

    ASoC: codecs: wcd934x: fix return value of wcd934x_rx_hph_mode_put
    
    [ Upstream commit 4b0bec6088588a120d33db85b1f0d9f096d1df71 ]
    
    wcd934x_rx_hph_mode_put currently returns zero eventhough it changes the value.
    Fix this, so that change notifications are sent correctly.
    
    Fixes: 1cde8b822332 ("ASoC: wcd934x: add basic controls")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20220222183212.11580-10-srinivas.kandagatla@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f126dcbe707486a50671fd0aad10f3f06f24347c
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Mon Feb 14 20:08:39 2022 +0100

    media: cedrus: h264: Fix neighbour info buffer size
    
    [ Upstream commit fecd363ae2d5042553370b0adf60c47e35c34a83 ]
    
    According to BSP library source, H264 neighbour info buffer size needs
    to be 32 kiB for H6. This is similar to H265 decoding, which also needs
    double buffer size in comparison to older Cedrus core generations.
    
    Increase buffer size to cover H6 needs. Since increase is not that big
    in absolute numbers, it doesn't make sense to complicate logic for older
    generations.
    
    Issue was discovered using iommu and cross checked with BSP library
    source.
    
    Fixes: 6eb9b758e307 ("media: cedrus: Add H264 decoding support")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c011ae1665f8f589298837728933161d689bec67
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Sat Feb 12 08:42:41 2022 +0100

    media: cedrus: H265: Fix neighbour info buffer size
    
    [ Upstream commit ee8b887329c78971967506f3ac79b9302c9f83c1 ]
    
    Neighbour info buffer size needs to be 794 kiB in H6. This is actually
    already indirectly mentioned in the comment, but smaller size is used
    nevertheless.
    
    Increase buffer size to cover H6 needs. Since increase is not that big
    in absolute numbers, it doesn't make sense to complicate logic for older
    generations.
    
    Bug was discovered using iommu, which reported access error when trying
    to play H265 video.
    
    Fixes: 86caab29da78 ("media: cedrus: Add HEVC/H.265 decoding support")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44973633b0064c46083833b55dd0a45e6235f8ca
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 2 20:52:01 2022 +0300

    media: usb: go7007: s2250-board: fix leak in probe()
    
    [ Upstream commit 67e4550ecd6164bfbdff54c169e5bbf9ccfaf14d ]
    
    Call i2c_unregister_device(audio) on this error path.
    
    Fixes: d3b2ccd9e307 ("[media] s2250: convert to the control framework")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec8a37b2d9a76a9443feb0af95bd06ac3df25444
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Sat Jan 22 15:44:59 2022 +0800

    media: em28xx: initialize refcount before kref_get
    
    [ Upstream commit c08eadca1bdfa099e20a32f8fa4b52b2f672236d ]
    
    The commit 47677e51e2a4("[media] em28xx: Only deallocate struct
    em28xx after finishing all extensions") adds kref_get to many init
    functions (e.g., em28xx_audio_init). However, kref_init is called too
    late in em28xx_usb_probe, since em28xx_init_dev before will invoke
    those init functions and call kref_get function. Then refcount bug
    occurs in my local syzkaller instance.
    
    Fix it by moving kref_init before em28xx_init_dev. This issue occurs
    not only in dev but also dev->dev_next.
    
    Fixes: 47677e51e2a4 ("[media] em28xx: Only deallocate struct em28xx after finishing all extensions")
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b46f57d516f9d2bcfe24991819d692cdac28c7f
Author: Tom Rix <trix@redhat.com>
Date:   Thu Aug 12 19:01:46 2021 +0200

    media: video/hdmi: handle short reads of hdmi info frame.
    
    [ Upstream commit 4a92fc6e55da5b87cecb572275deaff6ac9dd27e ]
    
    Calling hdmi_infoframe_unpack() with static sizeof(buffer) skips all
    the size checking done later in hdmi_infoframe_unpack().  A better
    value is the amount of data read into buffer.
    
    Fixes: 480b8b3e42c3 ("video/hdmi: Pass buffer size to infoframe unpack functions")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 170ad3942b7b31fcc381270e2a4865febf18709e
Author: Marek Vasut <marex@denx.de>
Date:   Sun Feb 6 23:11:23 2022 +0100

    ARM: dts: imx: Add missing LVDS decoder on M53Menlo
    
    [ Upstream commit 0c6f71176ea43d6f4003a4d57f7bb518c5ad6145 ]
    
    The M53Menlo display unit uses an LVDS-to-DPI bridge, TI DS90CF364A.
    Describe this bridge in DT, otherwise the DT incorrectly describes
    DPI panel attached directly to LVDS source.
    
    Fixes: 716be61d1869 ("ARM: dts: imx53: Add Menlosystems M53 board")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a0eb50d9afd85a15f124ae9c8407f75cd19e7d7
Author: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Date:   Sat Feb 5 19:53:24 2022 +0100

    ARM: dts: sun8i: v3s: Move the csi1 block to follow address order
    
    [ Upstream commit c4af51698c4fb4fc683f2ac67f482cdf9ba2cd13 ]
    
    The csi1 block node was mistakenly added before the gic node, although
    its address comes after the gic's. Move the node to its correct
    position.
    
    Fixes: 90e048101fa1 ("ARM: dts: sun8i: V3/V3s/S3/S3L: add CSI1 device node")
    Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20220205185429.2278860-2-paul.kocialkowski@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77406ac6efe44aba8601ea13a39bc6c5037c0897
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jan 14 06:28:40 2022 +0000

    soc: ti: wkup_m3_ipc: Fix IRQ check in wkup_m3_ipc_probe
    
    [ Upstream commit c3d66a164c726cc3b072232d3b6d87575d194084 ]
    
    platform_get_irq() returns negative error number instead 0 on failure.
    And the doc of platform_get_irq() provides a usage example:
    
        int irq = platform_get_irq(pdev, 0);
        if (irq < 0)
            return irq;
    
    Fix the check of return value to catch errors correctly.
    
    Fixes: cdd5de500b2c ("soc: ti: Add wkup_m3_ipc driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Acked-by: Dave Gerlach <d-gerlach@ti.com>
    Link: https://lore.kernel.org/r/20220114062840.16620-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18b2ec361a68b89248a13b22b4d572ccf5d5e54c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Dec 23 17:23:00 2021 +0100

    firmware: ti_sci: Fix compilation failure when CONFIG_TI_SCI_PROTOCOL is not defined
    
    [ Upstream commit 043cfff99a18933fda2fb2e163daee73cc07910b ]
    
    Remove an extra ";" which breaks compilation.
    
    Fixes: 53bf2b0e4e4c ("firmware: ti_sci: Add support for getting resource with subtype")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/e6c3cb793e1a6a2a0ae2528d5a5650dfe6a4b6ff.1640276505.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8395a17ef6badd38778b63efd4656347ac8953a9
Author: Maulik Shah <quic_mkshah@quicinc.com>
Date:   Sun Jan 9 22:54:58 2022 +0530

    arm64: dts: qcom: sm8150: Correct TCS configuration for apps rsc
    
    [ Upstream commit 17ac8af678b6da6a8f1df7da8ebf2c5198741827 ]
    
    Correct the TCS config by updating the number of TCSes for each type.
    
    Cc: devicetree@vger.kernel.org
    Fixes: d8cf9372b654 ("arm64: dts: qcom: sm8150: Add apps shared nodes")
    Signed-off-by: Maulik Shah <quic_mkshah@quicinc.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/1641749107-31979-2-git-send-email-quic_mkshah@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d19248e23fbee6ec22bcb3cd94fbf043edbba3fe
Author: David Heidelberg <david@ixit.cz>
Date:   Mon Dec 13 20:51:04 2021 +0100

    arm64: dts: qcom: sdm845: fix microphone bias properties and values
    
    [ Upstream commit 625c24460dbbc3b6c9a148c0a30f0830893fc909 ]
    
    replace millivolt with correct microvolt and adjust value to
    the minimal value allowed by documentation.
    
    Found with `make qcom/sdm845-oneplus-fajita.dtb`.
    
    Fixes:
    arch/arm64/boot/dts/qcom/sdm845-oneplus-fajita.dt.yaml: codec@1: 'qcom,micbias1-microvolt' is a required property
            From schema: Documentation/devicetree/bindings/sound/qcom,wcd934x.yaml
    arch/arm64/boot/dts/qcom/sdm845-oneplus-fajita.dt.yaml: codec@1: 'qcom,micbias2-microvolt' is a required property
            From schema: Documentation/devicetree/bindings/sound/qcom,wcd934x.yaml
    arch/arm64/boot/dts/qcom/sdm845-oneplus-fajita.dt.yaml: codec@1: 'qcom,micbias3-microvolt' is a required property
            From schema: Documentation/devicetree/bindings/sound/qcom,wcd934x.yaml
    arch/arm64/boot/dts/qcom/sdm845-oneplus-fajita.dt.yaml: codec@1: 'qcom,micbias4-microvolt' is a required property
            From schema: Documentation/devicetree/bindings/sound/qcom,wcd934x.yaml
    arch/arm64/boot/dts/qcom/sdm845-oneplus-fajita.dt.yaml: codec@1: 'qcom,micbias1-millivolt', 'qcom,micbias2-millivolt', 'qcom,micbias3-millivolt', 'qcom,micbias4-millivolt' do not match any of the regexes: '^.*@[0-9a-f]+$', 'pinctrl-[0-9]+'
    
    Fixes: 27ca1de07dc3 ("arm64: dts: qcom: sdm845: add slimbus nodes")
    
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Tested-by: Steev Klimaszewski <steev@kali.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211213195105.114596-1-david@ixit.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2042c6fbfb0fd44a18a1792a1cdabf936a3ae9a5
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Thu Jan 27 17:35:54 2022 +0000

    soc: qcom: aoss: remove spurious IRQF_ONESHOT flags
    
    [ Upstream commit 8030cb9a55688c1339edd284d9d6ce5f9fc75160 ]
    
    Quoting the header comments, IRQF_ONESHOT is "Used by threaded interrupts
    which need to keep the irq line disabled until the threaded handler has
    been run.". When applied to an interrupt that doesn't request a threaded
    irq then IRQF_ONESHOT has a lesser known (undocumented?) side effect,
    which it to disable the forced threading of the irq. For "normal" kernels
    (without forced threading) then, if there is no thread_fn, then
    IRQF_ONESHOT is a nop.
    
    In this case disabling forced threading is not appropriate for this driver
    because it calls wake_up_all() and this API cannot be called from
    no-thread interrupt handlers on PREEMPT_RT systems (deadlock risk, triggers
    sleeping-while-atomic warnings).
    
    Fix this by removing IRQF_ONESHOT.
    
    Fixes: 2209481409b7 ("soc: qcom: Add AOSS QMP driver")
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    [bjorn: Added Fixes tag]
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220127173554.158111-1-daniel.thompson@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a990a65d4a3afc869346d21be5b63ffd6418176
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jan 7 07:31:26 2022 +0000

    soc: qcom: ocmem: Fix missing put_device() call in of_get_ocmem
    
    [ Upstream commit 0ff027027e05a866491bbb53494f0e2a61354c85 ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore.
    Add the corresponding 'put_device()' in the error handling path.
    
    Fixes: 01f937ffc468 ("soc: qcom: ocmem: don't return NULL in of_get_ocmem")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220107073126.2335-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5d6eba71997b6d661935d2b15094ac7f9f6132d
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Dec 31 17:44:19 2021 +0800

    soc: qcom: rpmpd: Check for null return of devm_kcalloc
    
    [ Upstream commit 5a811126d38f9767a20cc271b34db7c8efc5a46c ]
    
    Because of the possible failure of the allocation, data->domains might
    be NULL pointer and will cause the dereference of the NULL pointer
    later.
    Therefore, it might be better to check it and directly return -ENOMEM
    without releasing data manually if fails, because the comment of the
    devm_kmalloc() says "Memory allocated with this function is
    automatically freed on driver detach.".
    
    Fixes: bbe3a66c3f5a ("soc: qcom: rpmpd: Add a Power domain driver to model corners")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211231094419.1941054-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c11cb8db49a7945b21c7144f3d5ed8abd4e1b54
Author: Pavel Kubelun <be.dissent@gmail.com>
Date:   Mon Dec 20 18:03:52 2021 +0100

    ARM: dts: qcom: ipq4019: fix sleep clock
    
    [ Upstream commit 3d7e7980993d2c1ae42d3d314040fc2de6a9c45f ]
    
    It seems like sleep_clk was copied from ipq806x.
    Fix ipq40xx sleep_clk to the value QSDK defines.
    
    Link: https://source.codeaurora.org/quic/qsdk/oss/kernel/linux-msm/commit/?id=d92ec59973484acc86dd24b67f10f8911b4b4b7d
    Link: https://patchwork.kernel.org/comment/22721613/
    Fixes: bec6ba4cdf2a ("qcom: ipq4019: Add basic board/dts support for IPQ4019 SoC")
    Suggested-by: Bjorn Andersson <bjorn.andersson@linaro.org> (clock-output-names)
    Signed-off-by: Pavel Kubelun <be.dissent@gmail.com>
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com> (removed clock rename)
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211220170352.34591-1-chunkeey@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22474dfd0c17772415b1f023f1a139b1797a0dfe
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Wed Dec 8 09:34:21 2021 +0100

    firmware: qcom: scm: Remove reassignment to desc following initializer
    
    [ Upstream commit 7823e5aa5d1dd9ed5849923c165eb8f29ad23c54 ]
    
    Member assignments to qcom_scm_desc were moved into struct initializers
    in 57d3b816718c ("firmware: qcom_scm: Remove thin wrappers") including
    the case in qcom_scm_iommu_secure_ptbl_init, except that the - now
    duplicate - assignment to desc was left in place. While not harmful,
    remove this unnecessary extra reassignment.
    
    Fixes: 57d3b816718c ("firmware: qcom_scm: Remove thin wrappers")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211208083423.22037-2-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf4bad1114a396f441daa83a0e368b9a6a9ec8e6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:29:19 2021 +0300

    video: fbdev: fbcvt.c: fix printing in fb_cvt_print_name()
    
    [ Upstream commit 78482af095abd9f4f29f1aa3fe575d25c6ae3028 ]
    
    This code has two bugs:
    1) "cnt" is 255 but the size of the buffer is 256 so the last byte is
       not used.
    2) If we try to print more than 255 characters then "cnt" will be
       negative and that will trigger a WARN() in snprintf(). The fix for
       this is to use scnprintf() instead of snprintf().
    
    We can re-write this code to be cleaner:
    1) Rename "offset" to "off" because that's shorter.
    2) Get rid of the "cnt" variable and just use "size - off" directly.
    3) Get rid of the "read" variable and just increment "off" directly.
    
    Fixes: 96fe6a2109db ("fbdev: Add VESA Coordinated Video Timings (CVT) support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6de6a64f23a67c16369f3d02c914e10df14c7332
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 3 12:58:08 2021 +0300

    video: fbdev: atmel_lcdfb: fix an error code in atmel_lcdfb_probe()
    
    [ Upstream commit fee5c1e4b789e41719af9fee0e2dd397cd31988f ]
    
    If "sinfo->config" is not found, then return -ENODEV.  Don't
    return success.
    
    Fixes: b985172b328a ("video: atmel_lcdfb: add device tree suport")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64ec3e678d76419f207b9cdd338dda438ca10b1c
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Oct 14 21:22:31 2021 +0800

    video: fbdev: smscufx: Fix null-ptr-deref in ufx_usb_probe()
    
    [ Upstream commit 1791f487f877a9e83d81c8677bd3e7b259e7cb27 ]
    
    I got a null-ptr-deref report:
    
    BUG: kernel NULL pointer dereference, address: 0000000000000000
    ...
    RIP: 0010:fb_destroy_modelist+0x38/0x100
    ...
    Call Trace:
     ufx_usb_probe.cold+0x2b5/0xac1 [smscufx]
     usb_probe_interface+0x1aa/0x3c0 [usbcore]
     really_probe+0x167/0x460
    ...
     ret_from_fork+0x1f/0x30
    
    If fb_alloc_cmap() fails in ufx_usb_probe(), fb_destroy_modelist() will
    be called to destroy modelist in the error handling path. But modelist
    has not been initialized yet, so it will result in null-ptr-deref.
    
    Initialize modelist before calling fb_alloc_cmap() to fix this bug.
    
    Fixes: 3c8a63e22a08 ("Add support for SMSC UFX6000/7000 USB display adapters")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0dff86aeb191651f4bec56d66fab4d3d74d039ac
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Dec 9 17:01:13 2021 +0800

    video: fbdev: controlfb: Fix COMPILE_TEST build
    
    [ Upstream commit 567e44fb51b4f909ae58038a7301352eecea8426 ]
    
    If PPC_BOOK3S, PPC_PMAC and PPC32 is n, COMPILE_TEST build fails:
    
    drivers/video/fbdev/controlfb.c:70:0: error: "pgprot_cached_wthru" redefined [-Werror]
     #define pgprot_cached_wthru(prot) (prot)
    
    In file included from ./arch/powerpc/include/asm/pgtable.h:20:0,
                     from ./include/linux/pgtable.h:6,
                     from ./include/linux/mm.h:33,
                     from drivers/video/fbdev/controlfb.c:37:
    ./arch/powerpc/include/asm/nohash/pgtable.h:243:0: note: this is the location of the previous definition
     #define pgprot_cached_wthru(prot) (__pgprot((pgprot_val(prot) & ~_PAGE_CACHE_CTL) | \
    
    Fixes: a07a63b0e24d ("video: fbdev: controlfb: add COMPILE_TEST support")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec1c20b02ae0bdce82b54b1b8a1e72e86d45f672
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sun Dec 6 20:02:46 2020 +0100

    video: fbdev: controlfb: Fix set but not used warnings
    
    [ Upstream commit 4aca4dbcac9d8eed8a8dc15b6883270a20a84218 ]
    
    The controlfb driver has a number of dummy defines for IO operations.
    They were introduced in commit a07a63b0e24d
    ("video: fbdev: controlfb: add COMPILE_TEST support").
    
    The write variants did not use their value parameter in the
    dummy versions, resulting in set but not used warnings.
    Fix this by adding "(void)val" to silence the compiler.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Cc: "Gustavo A. R. Silva" <gustavoars@kernel.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201206190247.1861316-13-sam@ravnborg.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8bf19f7f3112f28b55222977687ce729cc217e3
Author: Z. Liu <liuzx@knownsec.com>
Date:   Sun Dec 19 02:00:35 2021 +0800

    video: fbdev: matroxfb: set maxvram of vbG200eW to the same as vbG200 to avoid black screen
    
    [ Upstream commit 62d89a7d49afe46e6b9bbe9e23b004ad848dbde4 ]
    
    Start from commit 11be60bd66d54 "matroxfb: add Matrox MGA-G200eW board
    support", when maxvram is 0x800000, monitor become black w/ error message
    said: "The current input timing is not supported by the monitor display.
    Please change your input timing to 1920x1080@60Hz ...".
    
    Fixes: 11be60bd66d5 ("matroxfb: add Matrox MGA-G200eW board support")
    Signed-off-by: Z. Liu <liuzx@knownsec.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3187a1d4d5c5d7ce128a537164bb95e40e6eba12
Author: Jammy Huang <jammy_huang@aspeedtech.com>
Date:   Tue Jan 25 07:44:07 2022 +0100

    media: aspeed: Correct value for h-total-pixels
    
    [ Upstream commit 4b732a0016853eaff35944f900b0db66f3914374 ]
    
    Previous reg-field, 0x98[11:0], stands for the period of the detected
    hsync signal.
    Use the correct reg, 0xa0, to get h-total in pixels.
    
    Fixes: d2b4387f3bdf ("media: platform: Add Aspeed Video Engine driver")
    Signed-off-by: Jammy Huang <jammy_huang@aspeedtech.com>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 245561612b490969cf1f222cbec6365060bdbc72
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Fri Jan 7 10:34:49 2022 +0100

    media: hantro: Fix overfill bottom register field name
    
    [ Upstream commit 89d78e0133e71ba324fb67ca776223fba4353418 ]
    
    The Hantro H1 hardware can crop off pixels from the right and bottom of
    the source frame. These are controlled with the H1_REG_IN_IMG_CTRL_OVRFLB
    and H1_REG_IN_IMG_CTRL_OVRFLR in the H1_REG_IN_IMG_CTRL register.
    
    The ChromeOS kernel driver that this was based on incorrectly added the
    _D4 suffix H1_REG_IN_IMG_CTRL_OVRFLB. This field crops the bottom of the
    input frame, and the number is _not_ divided by 4. [1]
    
    Correct the name to avoid confusion when crop support with the selection
    API is added.
    
    [1] https://chromium.googlesource.com/chromiumos/third_party/kernel/+/refs/ \
            heads/chromeos-4.19/drivers/staging/media/hantro/hantro_h1_vp8_enc.c#377
    
    Fixes: 775fec69008d ("media: add Rockchip VPU JPEG encoder driver")
    Fixes: a29add8c9bb2 ("media: rockchip/vpu: rename from rockchip to hantro")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 032b141a91a82a5f0107ce664a35b201e60c5ce1
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Jan 13 07:59:28 2022 +0100

    media: meson: vdec: potential dereference of null pointer
    
    [ Upstream commit c8c80c996182239ff9b05eda4db50184cf3b2e99 ]
    
    As the possible failure of the kzalloc(), the 'new_ts' could be NULL
    pointer.
    Therefore, it should be better to check it in order to avoid the
    dereference of the NULL pointer.
    Also, the caller esparser_queue() needs to deal with the return value of
    the amvdec_add_ts().
    
    Fixes: 876f123b8956 ("media: meson: vdec: bring up to compliance")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Suggested-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3e5106c6768f20e38a076a779f59869bf8a7df0
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jan 12 12:05:54 2022 +0100

    media: coda: Fix missing put_device() call in coda_get_vdoa_data
    
    [ Upstream commit ca85d271531a1e1c86f24b892f57b7d0a3ddb5a6 ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore.
    Add the corresponding 'put_device()' in the error handling path.
    
    Fixes: e7f3c5481035 ("[media] coda: use VDOA for un-tiling custom macroblock format")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9f4586d9935eea511925ded48efef1b910887df
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Feb 18 16:19:21 2021 -0600

    ASoC: generic: simple-card-utils: remove useless assignment
    
    [ Upstream commit bd029fc86834760276171bd2301d6c43e45a65b0 ]
    
    cppcheck warning:
    
    sound/soc/generic/simple-card-utils.c:258:10: style: Variable 'ret' is
    assigned a value that is never used. [unreadVariable]
     int ret = 0;
             ^
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210218221921.88991-7-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c357e027725b55f2300cb4744c9c5c67dfa5e01
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Thu Jan 20 13:58:27 2022 -0600

    ASoC: xilinx: xlnx_formatter_pcm: Handle sysclk setting
    
    [ Upstream commit 1c5091fbe7e0d0804158200b7feac5123f7b4fbd ]
    
    This driver did not set the MM2S Fs Multiplier Register to the proper
    value for playback streams. This needs to be set to the sample rate to
    MCLK multiplier, or random stream underflows can occur on the downstream
    I2S transmitter.
    
    Store the sysclk value provided via the set_sysclk callback and use that
    in conjunction with the sample rate in the hw_params callback to calculate
    the proper value to set for this register.
    
    Fixes: 6f6c3c36f091 ("ASoC: xlnx: add pcm formatter platform driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Link: https://lore.kernel.org/r/20220120195832.1742271-2-robert.hancock@calian.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 712dd2ac267ae6600050dc82fe4f3d0c0617365b
Author: Ondrej Zary <linux@zary.sk>
Date:   Sat Dec 25 22:58:44 2021 +0100

    media: bttv: fix WARNING regression on tunerless devices
    
    [ Upstream commit ef058cc8b7193d15a771272359c7454839ae74ee ]
    
    Commit 2161536516ed ("media: media/pci: set device_caps in struct video_device")
    introduced a regression: V4L2_CAP_TUNER is always present in device_caps,
    even when the device has no tuner.
    
    This causes a warning:
    WARNING: CPU: 0 PID: 249 at drivers/media/v4l2-core/v4l2-ioctl.c:1102 v4l_querycap+0xa0/0xb0 [videodev]
    
    Fixes: 2161536516ed ("media: media/pci: set device_caps in struct video_device")
    Signed-off-by: Ondrej Zary <linux@zary.sk>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc2573abc691a269b54a6c14a2660f26d88876a5
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Dec 15 06:21:57 2021 +0100

    media: mtk-vcodec: potential dereference of null pointer
    
    [ Upstream commit e25a89f743b18c029bfbe5e1663ae0c7190912b0 ]
    
    The return value of devm_kzalloc() needs to be checked.
    To avoid use of null pointer in case of thefailure of alloc.
    
    Fixes: 46233e91fa24 ("media: mtk-vcodec: move firmware implementations into their own files")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Tzung-Bi Shih <tzungbi@google.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a83731a09a5954b85b1ce49c01ff5c2a3465cb7
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Thu Dec 9 17:38:03 2021 +0100

    media: v4l2-mem2mem: Apply DST_QUEUE_OFF_BASE on MMAP buffers across ioctls
    
    [ Upstream commit 8310ca94075e784bbb06593cd6c068ee6b6e4ca6 ]
    
    DST_QUEUE_OFF_BASE is applied to offset/mem_offset on MMAP capture buffers
    only for the VIDIOC_QUERYBUF ioctl, while the userspace fields (including
    offset/mem_offset) are filled in for VIDIOC_{QUERY,PREPARE,Q,DQ}BUF
    ioctls. This leads to differences in the values presented to userspace.
    If userspace attempts to mmap the capture buffer directly using values
    from DQBUF, it will fail.
    
    Move the code that applies the magic offset into a helper, and call
    that helper from all four ioctl entry points.
    
    [hverkuil: drop unnecessary '= 0' in v4l2_m2m_querybuf() for ret]
    
    Fixes: 7f98639def42 ("V4L/DVB: add memory-to-memory device helper framework for videobuf")
    Fixes: 908a0d7c588e ("[media] v4l: mem2mem: port to videobuf2")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c76188715dfc73ae727bbcc13693a0d66fcab010
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Tue Dec 14 17:16:29 2021 +0100

    media: staging: media: zoran: fix usage of vb2_dma_contig_set_max_seg_size
    
    [ Upstream commit 241f5b67fb48def58643f279dfb8468bdd54b443 ]
    
    vb2_dma_contig_set_max_seg_size need to have a size in parameter and not
    a DMA_BIT_MASK().
    While fixing this issue, also fix error handling of all DMA size
    setting.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: d4ae3689226e5 ("media: zoran: device support only 32bit DMA address")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f622bd0758bd918076c7e6d1d63d2c6f27d354ed
Author: Peng Liu <liupeng256@huawei.com>
Date:   Tue Mar 22 14:48:19 2022 -0700

    kunit: make kunit_test_timeout compatible with comment
    
    [ Upstream commit bdd015f7b71b92c2e4ecabac689642cc72553e04 ]
    
    In function kunit_test_timeout, it is declared "300 * MSEC_PER_SEC"
    represent 5min.  However, it is wrong when dealing with arm64 whose
    default HZ = 250, or some other situations.  Use msecs_to_jiffies to fix
    this, and kunit_test_timeout will work as desired.
    
    Link: https://lkml.kernel.org/r/20220309083753.1561921-3-liupeng256@huawei.com
    Fixes: 5f3e06208920 ("kunit: test: add support for test abort")
    Signed-off-by: Peng Liu <liupeng256@huawei.com>
    Reviewed-by: Marco Elver <elver@google.com>
    Reviewed-by: Daniel Latypov <dlatypov@google.com>
    Reviewed-by: Brendan Higgins <brendanhiggins@google.com>
    Tested-by: Brendan Higgins <brendanhiggins@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Wang Kefeng <wangkefeng.wang@huawei.com>
    Cc: David Gow <davidgow@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e63bcb71df96c2edcfb85043629ab3a1b4b08d0
Author: Guillaume Tucker <guillaume.tucker@collabora.com>
Date:   Tue Mar 22 14:41:44 2022 -0700

    selftests, x86: fix how check_cc.sh is being invoked
    
    [ Upstream commit ef696f93ed9778d570bd5ac58414421cdd4f1aab ]
    
    The $(CC) variable used in Makefiles could contain several arguments
    such as "ccache gcc".  These need to be passed as a single string to
    check_cc.sh, otherwise only the first argument will be used as the
    compiler command.  Without quotes, the $(CC) variable is passed as
    distinct arguments which causes the script to fail to build trivial
    programs.
    
    Fix this by adding quotes around $(CC) when calling check_cc.sh to pass
    the whole string as a single argument to the script even if it has
    several words such as "ccache gcc".
    
    Link: https://lkml.kernel.org/r/d0d460d7be0107a69e3c52477761a6fe694c1840.1646991629.git.guillaume.tucker@collabora.com
    Fixes: e9886ace222e ("selftests, x86: Rework x86 target architecture detection")
    Signed-off-by: Guillaume Tucker <guillaume.tucker@collabora.com>
    Tested-by: "kernelci.org bot" <bot@kernelci.org>
    Reviewed-by: Guenter Roeck <groeck@google.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2c53e77b0431a0954f0655cc517abb6309f6a79
Author: Fengnan Chang <changfengnan@vivo.com>
Date:   Fri Mar 18 09:23:04 2022 +0800

    f2fs: fix compressed file start atomic write may cause data corruption
    
    [ Upstream commit 9b56adcf525522e9ffa52471260298d91fc1d395 ]
    
    When compressed file has blocks, f2fs_ioc_start_atomic_write will succeed,
    but compressed flag will be remained in inode. If write partial compreseed
    cluster and commit atomic write will cause data corruption.
    
    This is the reproduction process:
    Step 1:
    create a compressed file ,write 64K data , call fsync(), then the blocks
    are write as compressed cluster.
    Step2:
    iotcl(F2FS_IOC_START_ATOMIC_WRITE)  --- this should be fail, but not.
    write page 0 and page 3.
    iotcl(F2FS_IOC_COMMIT_ATOMIC_WRITE)  -- page 0 and 3 write as normal file,
    Step3:
    drop cache.
    read page 0-4   -- Since page 0 has a valid block address, read as
    non-compressed cluster, page 1 and 2 will be filled with compressed data
    or zero.
    
    The root cause is, after commit 7eab7a696827 ("f2fs: compress: remove
    unneeded read when rewrite whole cluster"), in step 2, f2fs_write_begin()
    only set target page dirty, and in f2fs_commit_inmem_pages(), we will write
    partial raw pages into compressed cluster, result in corrupting compressed
    cluster layout.
    
    Fixes: 4c8ff7095bef ("f2fs: support data compression")
    Fixes: 7eab7a696827 ("f2fs: compress: remove unneeded read when rewrite whole cluster")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Fengnan Chang <changfengnan@vivo.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c4d94e4f0b14a5a5cdf558e22af490aacb6a766
Author: Fengnan Chang <changfengnan@vivo.com>
Date:   Tue Jun 22 19:50:59 2021 +0800

    f2fs: compress: remove unneeded read when rewrite whole cluster
    
    [ Upstream commit 7eab7a6968278c735b1ca6387056a408f7960265 ]
    
    when we overwrite the whole page in cluster, we don't need read original
    data before write, because after write_end(), writepages() can help to
    load left data in that cluster.
    
    Signed-off-by: Fengnan Chang <changfengnan@vivo.com>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Acked-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c4741d1b0d236ce2f24d4677f8e23d6bd38ab61
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Feb 17 12:12:07 2022 +0000

    btrfs: fix unexpected error path when reflinking an inline extent
    
    [ Upstream commit 1f4613cdbe7739ce291554b316bff8e551383389 ]
    
    When reflinking an inline extent, we assert that its file offset is 0 and
    that its uncompressed length is not greater than the sector size. We then
    return an error if one of those conditions is not satisfied. However we
    use a return statement, which results in returning from btrfs_clone()
    without freeing the path and buffer that were allocated before, as well as
    not clearing the flag BTRFS_INODE_NO_DELALLOC_FLUSH for the destination
    inode.
    
    Fix that by jumping to the 'out' label instead, and also add a WARN_ON()
    for each condition so that in case assertions are disabled, we get to
    known which of the unexpected conditions triggered the error.
    
    Fixes: a61e1e0df9f321 ("Btrfs: simplify inline extent handling when doing reflinks")
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ef3bc75cd3ebf1e7b84a5d588229bad0255b287
Author: Chao Yu <chao@kernel.org>
Date:   Thu Jan 27 13:44:49 2022 +0800

    f2fs: fix to avoid potential deadlock
    
    [ Upstream commit 344150999b7fc88502a65bbb147a47503eca2033 ]
    
    Quoted from Jing Xia's report, there is a potential deadlock may happen
    between kworker and checkpoint as below:
    
    [T:writeback]                           [T:checkpoint]
    - wb_writeback
     - blk_start_plug
    bio contains NodeA was plugged in writeback threads
                                            - do_writepages  -- sync write inodeB, inc wb_sync_req[DATA]
                                             - f2fs_write_data_pages
                                              - f2fs_write_single_data_page -- write last dirty page
                                               - f2fs_do_write_data_page
                                                - set_page_writeback  -- clear page dirty flag and
                                                PAGECACHE_TAG_DIRTY tag in radix tree
                                                - f2fs_outplace_write_data
                                                 - f2fs_update_data_blkaddr
                                                  - f2fs_wait_on_page_writeback -- wait NodeA to writeback here
                                               - inode_dec_dirty_pages
     - writeback_sb_inodes
      - writeback_single_inode
       - do_writepages
        - f2fs_write_data_pages -- skip writepages due to wb_sync_req[DATA]
         - wbc->pages_skipped += get_dirty_pages() -- PAGECACHE_TAG_DIRTY is not set but get_dirty_pages() returns one
      - requeue_inode -- requeue inode to wb->b_dirty queue due to non-zero.pages_skipped
     - blk_finish_plug
    
    Let's try to avoid deadlock condition by forcing unplugging previous bio via
    blk_finish_plug(current->plug) once we'v skipped writeback in writepages()
    due to valid sbi->wb_sync_req[DATA/NODE].
    
    Fixes: 687de7f1010c ("f2fs: avoid IO split due to mixed WB_SYNC_ALL and WB_SYNC_NONE")
    Signed-off-by: Zhiguo Niu <zhiguo.niu@unisoc.com>
    Signed-off-by: Jing Xia <jing.xia@unisoc.com>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85cc399b650f10378b2753a1a5e13442f44277be
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Thu Feb 24 18:17:05 2022 +0200

    nfsd: more robust allocation failure handling in nfsd_file_cache_init
    
    [ Upstream commit 4d2eeafecd6c83b4444db3dc0ada201c89b1aa44 ]
    
    The nfsd file cache table can be pretty large and its allocation
    may require as many as 80 contigious pages.
    
    Employ the same fix that was employed for similar issue that was
    reported for the reply cache hash table allocation several years ago
    by commit 8f97514b423a ("nfsd: more robust allocation failure handling
    in nfsd_reply_cache_init").
    
    Fixes: 65294c1f2c5e ("nfsd: add a new struct file caching facility to nfsd")
    Link: https://lore.kernel.org/linux-nfs/e3cdaeec85a6cfec980e87fc294327c0381c1778.camel@kernel.org/
    Suggested-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a11a873749c6375bb668953fa1a196d8538d26b
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Fri Feb 11 18:56:46 2022 -0800

    f2fs: fix missing free nid in f2fs_handle_failed_inode
    
    [ Upstream commit 2fef99b8372c1ae3d8445ab570e888b5a358dbe9 ]
    
    This patch fixes xfstests/generic/475 failure.
    
    [  293.680694] F2FS-fs (dm-1): May loss orphan inode, run fsck to fix.
    [  293.685358] Buffer I/O error on dev dm-1, logical block 8388592, async page read
    [  293.691527] Buffer I/O error on dev dm-1, logical block 8388592, async page read
    [  293.691764] sh (7615): drop_caches: 3
    [  293.691819] sh (7616): drop_caches: 3
    [  293.694017] Buffer I/O error on dev dm-1, logical block 1, async page read
    [  293.695659] sh (7618): drop_caches: 3
    [  293.696979] sh (7617): drop_caches: 3
    [  293.700290] sh (7623): drop_caches: 3
    [  293.708621] sh (7626): drop_caches: 3
    [  293.711386] sh (7628): drop_caches: 3
    [  293.711825] sh (7627): drop_caches: 3
    [  293.716738] sh (7630): drop_caches: 3
    [  293.719613] sh (7632): drop_caches: 3
    [  293.720971] sh (7633): drop_caches: 3
    [  293.727741] sh (7634): drop_caches: 3
    [  293.730783] sh (7636): drop_caches: 3
    [  293.732681] sh (7635): drop_caches: 3
    [  293.732988] sh (7637): drop_caches: 3
    [  293.738836] sh (7639): drop_caches: 3
    [  293.740568] sh (7641): drop_caches: 3
    [  293.743053] sh (7640): drop_caches: 3
    [  293.821889] ------------[ cut here ]------------
    [  293.824654] kernel BUG at fs/f2fs/node.c:3334!
    [  293.826226] invalid opcode: 0000 [#1] PREEMPT SMP PTI
    [  293.828713] CPU: 0 PID: 7653 Comm: umount Tainted: G           OE     5.17.0-rc1-custom #1
    [  293.830946] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
    [  293.832526] RIP: 0010:f2fs_destroy_node_manager+0x33f/0x350 [f2fs]
    [  293.833905] Code: e8 d6 3d f9 f9 48 8b 45 d0 65 48 2b 04 25 28 00 00 00 75 1a 48 81 c4 28 03 00 00 5b 41 5c 41 5d 41 5e 41 5f 5d c3 0f 0b
    [  293.837783] RSP: 0018:ffffb04ec31e7a20 EFLAGS: 00010202
    [  293.839062] RAX: 0000000000000001 RBX: ffff9df947db2eb8 RCX: 0000000080aa0072
    [  293.840666] RDX: 0000000000000000 RSI: ffffe86c0432a140 RDI: ffffffffc0b72a21
    [  293.842261] RBP: ffffb04ec31e7d70 R08: ffff9df94ca85780 R09: 0000000080aa0072
    [  293.843909] R10: ffff9df94ca85700 R11: ffff9df94e1ccf58 R12: ffff9df947db2e00
    [  293.845594] R13: ffff9df947db2ed0 R14: ffff9df947db2eb8 R15: ffff9df947db2eb8
    [  293.847855] FS:  00007f5a97379800(0000) GS:ffff9dfa77c00000(0000) knlGS:0000000000000000
    [  293.850647] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  293.852940] CR2: 00007f5a97528730 CR3: 000000010bc76005 CR4: 0000000000370ef0
    [  293.854680] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  293.856423] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  293.858380] Call Trace:
    [  293.859302]  <TASK>
    [  293.860311]  ? ttwu_do_wakeup+0x1c/0x170
    [  293.861800]  ? ttwu_do_activate+0x6d/0xb0
    [  293.863057]  ? _raw_spin_unlock_irqrestore+0x29/0x40
    [  293.864411]  ? try_to_wake_up+0x9d/0x5e0
    [  293.865618]  ? debug_smp_processor_id+0x17/0x20
    [  293.866934]  ? debug_smp_processor_id+0x17/0x20
    [  293.868223]  ? free_unref_page+0xbf/0x120
    [  293.869470]  ? __free_slab+0xcb/0x1c0
    [  293.870614]  ? preempt_count_add+0x7a/0xc0
    [  293.871811]  ? __slab_free+0xa0/0x2d0
    [  293.872918]  ? __wake_up_common_lock+0x8a/0xc0
    [  293.874186]  ? __slab_free+0xa0/0x2d0
    [  293.875305]  ? free_inode_nonrcu+0x20/0x20
    [  293.876466]  ? free_inode_nonrcu+0x20/0x20
    [  293.877650]  ? debug_smp_processor_id+0x17/0x20
    [  293.878949]  ? call_rcu+0x11a/0x240
    [  293.880060]  ? f2fs_destroy_stats+0x59/0x60 [f2fs]
    [  293.881437]  ? kfree+0x1fe/0x230
    [  293.882674]  f2fs_put_super+0x160/0x390 [f2fs]
    [  293.883978]  generic_shutdown_super+0x7a/0x120
    [  293.885274]  kill_block_super+0x27/0x50
    [  293.886496]  kill_f2fs_super+0x7f/0x100 [f2fs]
    [  293.887806]  deactivate_locked_super+0x35/0xa0
    [  293.889271]  deactivate_super+0x40/0x50
    [  293.890513]  cleanup_mnt+0x139/0x190
    [  293.891689]  __cleanup_mnt+0x12/0x20
    [  293.892850]  task_work_run+0x64/0xa0
    [  293.894035]  exit_to_user_mode_prepare+0x1b7/0x1c0
    [  293.895409]  syscall_exit_to_user_mode+0x27/0x50
    [  293.896872]  do_syscall_64+0x48/0xc0
    [  293.898090]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  293.899517] RIP: 0033:0x7f5a975cd25b
    
    Fixes: 7735730d39d7 ("f2fs: fix to propagate error from __get_meta_page()")
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0cffc1fb38dc08a8a7750119ee41bb78906bc42
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jan 31 09:24:52 2022 +0200

    perf/x86/intel/pt: Fix address filter config for 32-bit kernel
    
    [ Upstream commit e5524bf1047eb3b3f3f33b5f59897ba67b3ade87 ]
    
    Change from shifting 'unsigned long' to 'u64' to prevent the config bits
    being lost on a 32-bit kernel.
    
    Fixes: eadf48cab4b6b0 ("perf/x86/intel/pt: Add support for address range filtering in PT")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220131072453.2839535-5-adrian.hunter@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13c8e37e1faf8b7a5d50815cb68de0d5f73e7ad7
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jan 31 09:24:51 2022 +0200

    perf/core: Fix address filter parser for multiple filters
    
    [ Upstream commit d680ff24e9e14444c63945b43a37ede7cd6958f9 ]
    
    Reset appropriate variables in the parser loop between parsing separate
    filters, so that they do not interfere with parsing the next filter.
    
    Fixes: 375637bc524952 ("perf/core: Introduce address range filtering")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20220131072453.2839535-4-adrian.hunter@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9faa5beda6b7df2a6b7958e62037b80c604d80d
Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date:   Thu Jan 27 10:27:20 2022 -0500

    rseq: Remove broken uapi field layout on 32-bit little endian
    
    [ Upstream commit bfdf4e6208051ed7165b2e92035b4bf11f43eb63 ]
    
    The rseq rseq_cs.ptr.{ptr32,padding} uapi endianness handling is
    entirely wrong on 32-bit little endian: a preprocessor logic mistake
    wrongly uses the big endian field layout on 32-bit little endian
    architectures.
    
    Fortunately, those ptr32 accessors were never used within the kernel,
    and only meant as a convenience for user-space.
    
    Remove those and replace the whole rseq_cs union by a __u64 type, as
    this is the only thing really needed to express the ABI. Document how
    32-bit architectures are meant to interact with this field.
    
    Fixes: ec9c82e03a74 ("rseq: uapi: Declare rseq_cs field as union, update includes")
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20220127152720.25898-1-mathieu.desnoyers@efficios.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0250e05e5744899539a514b722ccc34430ede64
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Apr 13 13:33:52 2021 -0700

    rseq: Optimise rseq_get_rseq_cs() and clear_rseq_cs()
    
    [ Upstream commit 5e0ccd4a3b01c5a71732a13186ca110a138516ea ]
    
    Commit ec9c82e03a74 ("rseq: uapi: Declare rseq_cs field as union,
    update includes") added regressions for our servers.
    
    Using copy_from_user() and clear_user() for 64bit values
    is suboptimal.
    
    We can use faster put_user() and get_user() on 64bit arches.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Link: https://lkml.kernel.org/r/20210413203352.71350-4-eric.dumazet@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecc17de4b99a016f96e2129e3e6e2c884d18cca6
Author: Qais Yousef <qais.yousef@arm.com>
Date:   Thu Oct 28 12:50:05 2021 +0100

    sched/core: Export pelt_thermal_tp
    
    [ Upstream commit 77cf151b7bbdfa3577b3c3f3a5e267a6c60a263b ]
    
    We can't use this tracepoint in modules without having the symbol
    exported first, fix that.
    
    Fixes: 765047932f15 ("sched/pelt: Add support to track thermal pressure")
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20211028115005.873539-1-qais.yousef@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40732cab515d687dd34c081b55354504e339087b
Author: Bharata B Rao <bharata@amd.com>
Date:   Tue Jan 18 10:35:15 2022 +0530

    sched/debug: Remove mpol_get/put and task_lock/unlock from sched_show_numa
    
    [ Upstream commit 28c988c3ec29db74a1dda631b18785958d57df4f ]
    
    The older format of /proc/pid/sched printed home node info which
    required the mempolicy and task lock around mpol_get(). However
    the format has changed since then and there is no need for
    sched_show_numa() any more to have mempolicy argument,
    asssociated mpol_get/put and task_lock/unlock. Remove them.
    
    Fixes: 397f2378f1361 ("sched/numa: Fix numa balancing stats in /proc/pid/sched")
    Signed-off-by: Bharata B Rao <bharata@amd.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Link: https://lore.kernel.org/r/20220118050515.2973-1-bharata@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b5d41bcf28f5d8b3c7806d6e353970014d29927
Author: Chao Yu <chao@kernel.org>
Date:   Tue Jan 18 11:48:02 2022 +0800

    f2fs: fix to enable ATGC correctly via gc_idle sysfs interface
    
    [ Upstream commit 7d19e3dab0002e527052b0aaf986e8c32e5537bf ]
    
    It needs to assign sbi->gc_mode with GC_IDLE_AT rather than GC_AT when
    user tries to enable ATGC via gc_idle sysfs interface, fix it.
    
    Fixes: 093749e296e2 ("f2fs: support age threshold based garbage collection")
    Cc: Zhipeng Tan <tanzhipeng@hust.edu.cn>
    Signed-off-by: Jicheng Shao <shaojicheng@hust.edu.cn>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d92be1a09fbb3dd65600dbfe7eedb40e7228e4b
Author: David Howells <dhowells@redhat.com>
Date:   Mon Mar 21 11:18:54 2022 +0000

    watch_queue: Actually free the watch
    
    [ Upstream commit 3d8dcf278b1ee1eff1e90be848fa2237db4c07a7 ]
    
    free_watch() does everything barring actually freeing the watch object.  Fix
    this by adding the missing kfree.
    
    kmemleak produces a report something like the following.  Note that as an
    address can be seen in the first word, the watch would appear to have gone
    through call_rcu().
    
    BUG: memory leak
    unreferenced object 0xffff88810ce4a200 (size 96):
      comm "syz-executor352", pid 3605, jiffies 4294947473 (age 13.720s)
      hex dump (first 32 bytes):
        e0 82 48 0d 81 88 ff ff 00 00 00 00 00 00 00 00  ..H.............
        80 a2 e4 0c 81 88 ff ff 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8214e6cc>] kmalloc include/linux/slab.h:581 [inline]
        [<ffffffff8214e6cc>] kzalloc include/linux/slab.h:714 [inline]
        [<ffffffff8214e6cc>] keyctl_watch_key+0xec/0x2e0 security/keys/keyctl.c:1800
        [<ffffffff8214ec84>] __do_sys_keyctl+0x3c4/0x490 security/keys/keyctl.c:2016
        [<ffffffff84493a25>] do_syscall_x64 arch/x86/entry/common.c:50 [inline]
        [<ffffffff84493a25>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
        [<ffffffff84600068>] entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: c73be61cede5 ("pipe: Add general notification queue support")
    Reported-and-tested-by: syzbot+6e2de48f06cdb2884bfc@syzkaller.appspotmail.com
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ae75b4ed30322b42abaa75ef1b784addfdb7dc9
Author: David Howells <dhowells@redhat.com>
Date:   Mon Mar 21 08:11:52 2022 +0000

    watch_queue: Fix NULL dereference in error cleanup
    
    [ Upstream commit a635415a064e77bcfbf43da413fd9dfe0bbed9cb ]
    
    In watch_queue_set_size(), the error cleanup code doesn't take account of
    the fact that __free_page() can't handle a NULL pointer when trying to free
    up buffer pages that did get allocated.
    
    Fix this by only calling __free_page() on the pages actually allocated.
    
    Without the fix, this can lead to something like the following:
    
    BUG: KASAN: null-ptr-deref in __free_pages+0x1f/0x1b0 mm/page_alloc.c:5473
    Read of size 4 at addr 0000000000000034 by task syz-executor168/3599
    ...
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     __kasan_report mm/kasan/report.c:446 [inline]
     kasan_report.cold+0x66/0xdf mm/kasan/report.c:459
     check_region_inline mm/kasan/generic.c:183 [inline]
     kasan_check_range+0x13d/0x180 mm/kasan/generic.c:189
     instrument_atomic_read include/linux/instrumented.h:71 [inline]
     atomic_read include/linux/atomic/atomic-instrumented.h:27 [inline]
     page_ref_count include/linux/page_ref.h:67 [inline]
     put_page_testzero include/linux/mm.h:717 [inline]
     __free_pages+0x1f/0x1b0 mm/page_alloc.c:5473
     watch_queue_set_size+0x499/0x630 kernel/watch_queue.c:275
     pipe_ioctl+0xac/0x2b0 fs/pipe.c:632
     vfs_ioctl fs/ioctl.c:51 [inline]
     __do_sys_ioctl fs/ioctl.c:874 [inline]
     __se_sys_ioctl fs/ioctl.c:860 [inline]
     __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:860
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: c73be61cede5 ("pipe: Add general notification queue support")
    Reported-and-tested-by: syzbot+d55757faa9b80590767b@syzkaller.appspotmail.com
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Fabio M. De Francesco <fmdefrancesco@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 509565faed7e6a4d27b9df2b8f7ffeedae0067aa
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Mar 18 11:28:13 2022 -0600

    io_uring: terminate manual loop iterator loop correctly for non-vecs
    
    [ Upstream commit 5e929367468c8f97cd1ffb0417316cecfebef94b ]
    
    The fix for not advancing the iterator if we're using fixed buffers is
    broken in that it can hit a condition where we don't terminate the loop.
    This results in io-wq looping forever, asking to read (or write) 0 bytes
    for every subsequent loop.
    
    Reported-by: Joel Jaeschke <joel.jaeschke@gmail.com>
    Link: https://github.com/axboe/liburing/issues/549
    Fixes: 16c8d2df7ec0 ("io_uring: ensure symmetry in handling iter types in loop_rw_iter()")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44a77e52bd791ffea565c49d7a5322bb9ea21ae8
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Mar 17 08:39:39 2022 -0700

    clocksource: acpi_pm: fix return value of __setup handler
    
    [ Upstream commit 6a861abceecb68497dd82a324fee45a5332dcece ]
    
    __setup() handlers should return 1 to obsolete_checksetup() in
    init/main.c to indicate that the boot option has been handled.
    A return of 0 causes the boot option/value to be listed as an Unknown
    kernel parameter and added to init's (limited) environment strings.
    
    The __setup() handler interface isn't meant to handle negative return
    values -- they are non-zero, so they mean "handled" (like a return
    value of 1 does), but that's just a quirk. So return 1 from
    parse_pmtmr(). Also print a warning message if kstrtouint() returns
    an error.
    
    Fixes: 6b148507d3d0 ("pmtmr: allow command line override of ioport")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d678f002f0bc38f938b0b9574e5bfc717fc95902
Author: Brandon Wyman <bjwyman@gmail.com>
Date:   Thu Mar 17 23:21:23 2022 +0000

    hwmon: (pmbus) Add Vin unit off handling
    
    [ Upstream commit a5436af598779219b375c1977555c82def1c35d0 ]
    
    If there is an input undervoltage fault, reported in STATUS_INPUT
    command response, there is quite likely a "Unit Off For Insufficient
    Input Voltage" condition as well.
    
    Add a constant for bit 3 of STATUS_INPUT. Update the Vin limit
    attributes to include both bits in the mask for clearing faults.
    
    If an input undervoltage fault occurs, causing a unit off for
    insufficient input voltage, but the unit is off bit is not cleared, the
    STATUS_WORD will not be updated to clear the input fault condition.
    Including the unit is off bit (bit 3) allows for the input fault
    condition to completely clear.
    
    Signed-off-by: Brandon Wyman <bjwyman@gmail.com>
    Link: https://lore.kernel.org/r/20220317232123.2103592-1-bjwyman@gmail.com
    Fixes: b4ce237b7f7d3 ("hwmon: (pmbus) Introduce infrastructure to detect sensors and limit registers")
    [groeck: Dropped unnecessary ()]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ca525b4cc658d9105efe45f5f97c2a9ab5b6dfa
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Mar 7 11:07:24 2022 +0000

    hwrng: nomadik - Change clk_disable to clk_disable_unprepare
    
    [ Upstream commit 7f0f1f3ef62ed7a40e30aff28115bd94c4211d1d ]
    
    The corresponding API for clk_prepare_enable is clk_disable_unprepare,
    other than clk_disable_unprepare.
    
    Fix this by changing clk_disable to clk_disable_unprepare.
    
    Fixes: beca35d05cc2 ("hwrng: nomadik - use clk_prepare_enable()")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4c777fd8c371b2a46b7541fbd92903d700def11
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Jan 26 17:58:34 2021 +0100

    amba: Make the remove callback return void
    
    [ Upstream commit 3fd269e74f2feec973f45ee11d822faeda4fe284 ]
    
    All amba drivers return 0 in their remove callback. Together with the
    driver core ignoring the return value anyhow, it doesn't make sense to
    return a value here.
    
    Change the remove prototype to return void, which makes it explicit that
    returning an error value doesn't work as expected. This simplifies changing
    the core remove callback to return void, too.
    
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Acked-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org> # for drivers/memory
    Acked-by: Mark Brown <broonie@kernel.org>
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Suzuki K Poulose <suzuki.poulose@arm.com> # for hwtracing/coresight
    Acked-By: Vinod Koul <vkoul@kernel.org> # for dmaengine
    Acked-by: Guenter Roeck <linux@roeck-us.net> # for watchdog
    Acked-by: Wolfram Sang <wsa@kernel.org> # for I2C
    Acked-by: Takashi Iwai <tiwai@suse.de> # for sound
    Acked-by: Vladimir Zapolskiy <vz@mleia.com> # for memory/pl172
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20210126165835.687514-5-u.kleine-koenig@pengutronix.de
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c6ac39763bc2bbee789ad9f7f527066a50abb9a
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Jan 26 17:58:33 2021 +0100

    vfio: platform: simplify device removal
    
    [ Upstream commit 5b495ac8fe03b9e0d2e775f9064c3e2a340ff440 ]
    
    vfio_platform_remove_common() cannot return non-NULL in
    vfio_amba_remove() as the latter is only called if vfio_amba_probe()
    returned success.
    
    Diagnosed-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Eric Auger <eric.auger@redhat.com>
    Link: https://lore.kernel.org/r/20210126165835.687514-4-u.kleine-koenig@pengutronix.de
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c93017c8d5ebf55a4e453ac7c84cc84cf92ab570
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Thu Mar 3 10:23:37 2022 +0800

    crypto: ccree - Fix use after free in cc_cipher_exit()
    
    [ Upstream commit 3d950c34074ed74d2713c3856ba01264523289e6 ]
    
    kfree_sensitive(ctx_p->user.key) will free the ctx_p->user.key. But
    ctx_p->user.key is still used in the next line, which will lead to a
    use after free.
    
    We can call kfree_sensitive() after dev_dbg() to avoid the uaf.
    
    Fixes: 63ee04c8b491 ("crypto: ccree - add skcipher support")
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78622926fe01363d78b0f861bfa5c35223c0a645
Author: Dāvis Mosāns <davispuh@gmail.com>
Date:   Mon Feb 28 05:15:45 2022 +0200

    crypto: ccp - ccp_dmaengine_unregister release dma channels
    
    [ Upstream commit 54cce8ecb9254f971b40a72911c6da403720a2d2 ]
    
    ccp_dmaengine_register adds dma_chan->device_node to dma_dev->channels list
    but ccp_dmaengine_unregister didn't remove them.
    That can cause crashes in various dmaengine methods that tries to use dma_dev->channels
    
    Fixes: 58ea8abf4904 ("crypto: ccp - Register the CCP as a DMA...")
    Signed-off-by: Dāvis Mosāns <davispuh@gmail.com>
    Acked-by: John Allen <john.allen@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9eeee6f684e0cce69afbf2219fe29a793ac17d24
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Mar 5 18:46:20 2022 -0800

    ACPI: APEI: fix return value of __setup handlers
    
    [ Upstream commit f3303ff649dbf7dcdc6a6e1a922235b12b3028f4 ]
    
    __setup() handlers should return 1 to indicate that the boot option
    has been handled. Returning 0 causes a boot option to be listed in
    the Unknown kernel command line parameters and also added to init's
    arg list (if no '=' sign) or environment list (if of the form 'a=b').
    
    Unknown kernel command line parameters "erst_disable
      bert_disable hest_disable BOOT_IMAGE=/boot/bzImage-517rc6", will be
      passed to user space.
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
         erst_disable
         bert_disable
         hest_disable
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc6
    
    Fixes: a3e2acc5e37b ("ACPI / APEI: Add Boot Error Record Table (BERT) support")
    Fixes: a08f82d08053 ("ACPI, APEI, Error Record Serialization Table (ERST) support")
    Fixes: 9dc966641677 ("ACPI, APEI, HEST table parsing")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Reviewed-by: "Huang, Ying" <ying.huang@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b45bf16593238fee3c01cb8c9841e68154e9318
Author: Guillaume Ranquet <granquet@baylibre.com>
Date:   Mon Mar 7 18:26:56 2022 +0100

    clocksource/drivers/timer-of: Check return value of of_iomap in timer_of_base_init()
    
    [ Upstream commit 4467b8bad2401794fb89a0268c8c8257180bf60f ]
    
    of_base->base can either be iomapped using of_io_request_and_map() or
    of_iomap() depending whether or not an of_base->name has been set.
    
    Thus check of_base->base against NULL as of_iomap() does not return a
    PTR_ERR() in case of error.
    
    Fixes: 9aea417afa6b ("clocksource/drivers/timer-of: Don't request the resource by name")
    Signed-off-by: Guillaume Ranquet <granquet@baylibre.com>
    Link: https://lore.kernel.org/r/20220307172656.4836-1-granquet@baylibre.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b33c753cff6ca5e3302cf97d70c6b92fe17ebad1
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Fri Mar 4 15:35:57 2022 +0200

    clocksource/drivers/timer-microchip-pit64b: Use notrace
    
    [ Upstream commit ff10ee97cb203262e88d9c8bc87369cbd4004a0c ]
    
    Use notrace for mchp_pit64b_sched_read_clk() to avoid recursive call of
    prepare_ftrace_return() when issuing:
    echo function_graph > /sys/kernel/debug/tracing/current_tracer
    
    Fixes: 625022a5f160 ("clocksource/drivers/timer-microchip-pit64b: Add Microchip PIT64B support")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220304133601.2404086-3-claudiu.beznea@microchip.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db9d00461bdf9a0567a899f2980cf47f4217476d
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Sun Feb 20 11:38:15 2022 +0100

    clocksource/drivers/exynos_mct: Handle DTS with higher number of interrupts
    
    [ Upstream commit ab8da93dc06d82f464c47ab30e6c75190702f369 ]
    
    The driver statically defines maximum number of interrupts it can
    handle, however it does not respect that limit when configuring them.
    When provided with a DTS with more interrupts than assumed, the driver
    will overwrite static array mct_irqs leading to silent memory
    corruption.
    
    Validate the interrupts coming from DTS to avoid this.  This does not
    change the fact that such DTS might not boot at all, because it is
    simply incompatible, however at least some warning will be printed.
    
    Fixes: 36ba5d527e95 ("ARM: EXYNOS: add device tree support for MCT controller driver")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Link: https://lore.kernel.org/r/20220220103815.135380-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4e13c4a6f4186645260db86473a59871983ee5e
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Nov 1 21:35:30 2021 +0200

    clocksource/drivers/exynos_mct: Refactor resources allocation
    
    [ Upstream commit 7cd925a8823d16de5614d3f0aabea9948747accd ]
    
    Move interrupts allocation from exynos4_timer_resources() into separate
    function together with the interrupt number parsing code from
    mct_init_dt(), so the code for managing interrupts is kept together.
    While touching exynos4_timer_resources() function, move of_iomap() to it.
    No functional changes.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Tested-by: Chanwoo Choi <cw00.choi@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sam Protsenko <semen.protsenko@linaro.org>
    Link: https://lore.kernel.org/r/20211101193531.15078-2-semen.protsenko@linaro.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42d331a279d012680bc92a81ed7bc154094f4842
Author: Drew Fustini <dfustini@baylibre.com>
Date:   Thu Feb 3 21:35:05 2022 -0800

    clocksource/drivers/timer-ti-dm: Fix regression from errata i940 fix
    
    [ Upstream commit bceaae3bac0ce27c549bb050336d8d08abc2ee54 ]
    
    The existing fix for errata i940 causes a conflict for IPU2 which is
    using timer 3 and 4. From arch/arm/boot/dts/dra7-ipu-dsp-common.dtsi:
    
      &ipu2 {
              mboxes = <&mailbox6 &mbox_ipu2_ipc3x>;
              ti,timers = <&timer3>;
              ti,watchdog-timers = <&timer4>, <&timer9>;
      };
    
    The conflict was noticed when booting mainline on the BeagleBoard X15
    which has a TI AM5728 SoC:
    
      remoteproc remoteproc1: 55020000.ipu is available
      remoteproc remoteproc1: powering up 55020000.ipu
      remoteproc remoteproc1: Booting fw image dra7-ipu2-fw.xem4
      omap-rproc 55020000.ipu: could not get timer platform device
      omap-rproc 55020000.ipu: omap_rproc_enable_timers failed: -19
      remoteproc remoteproc1: can't start rproc 55020000.ipu: -19
    
    This change modifies the errata fix to instead use timer 15 and 16 which
    resolves the timer conflict.
    
    It does not appear to introduce any latency regression. Results from
    cyclictest with original errata fix using dmtimer 3 and 4:
    
      # cyclictest --mlockall --smp --priority=80 --interval=200 --distance=0
      policy: fifo: loadavg: 0.02 0.03 0.05
    
      T: 0 ( 1449) P:80 I:200 C: 800368 Min:   0 Act:   32 Avg:   22 Max:  128
      T: 1 ( 1450) P:80 I:200 C: 800301 Min:   0 Act:   12 Avg:   23 Max:   70
    
    The results after the change to dmtimer 15 and 16:
    
      # cyclictest --mlockall --smp --priority=80 --interval=200 --distance=0
      policy: fifo: loadavg: 0.36 0.19 0.07
    
      T: 0 ( 1711) P:80 I:200 C: 759599 Min:   0 Act:    6 Avg:   22 Max:  108
      T: 1 ( 1712) P:80 I:200 C: 759539 Min:   0 Act:   19 Avg:   23 Max:   79
    
    Fixes: 25de4ce5ed02 ("clocksource/drivers/timer-ti-dm: Handle dra7 timer wrap errata i940")
    Link: https://lore.kernel.org/linux-omap/YfWsG0p6to3IJuvE@x1/
    Suggested-by: Suman Anna <s-anna@ti.com>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Drew Fustini <dfustini@baylibre.com>
    Link: https://lore.kernel.org/r/20220204053503.1409162-1-dfustini@baylibre.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aedff03da4a5bbef10c11253c4708a5b771a1fa3
Author: Petr Vorel <pvorel@suse.cz>
Date:   Wed Feb 23 16:11:15 2022 +0100

    crypto: vmx - add missing dependencies
    
    [ Upstream commit 647d41d3952d726d4ae49e853a9eff68ebad3b3f ]
    
    vmx-crypto module depends on CRYPTO_AES, CRYPTO_CBC, CRYPTO_CTR or
    CRYPTO_XTS, thus add them.
    
    These dependencies are likely to be enabled, but if
    CRYPTO_DEV_VMX=y && !CRYPTO_MANAGER_DISABLE_TESTS
    and either of CRYPTO_AES, CRYPTO_CBC, CRYPTO_CTR or CRYPTO_XTS is built
    as module or disabled, alg_test() from crypto/testmgr.c complains during
    boot about failing to allocate the generic fallback implementations
    (2 == ENOENT):
    
    [    0.540953] Failed to allocate xts(aes) fallback: -2
    [    0.541014] alg: skcipher: failed to allocate transform for p8_aes_xts: -2
    [    0.541120] alg: self-tests for p8_aes_xts (xts(aes)) failed (rc=-2)
    [    0.544440] Failed to allocate ctr(aes) fallback: -2
    [    0.544497] alg: skcipher: failed to allocate transform for p8_aes_ctr: -2
    [    0.544603] alg: self-tests for p8_aes_ctr (ctr(aes)) failed (rc=-2)
    [    0.547992] Failed to allocate cbc(aes) fallback: -2
    [    0.548052] alg: skcipher: failed to allocate transform for p8_aes_cbc: -2
    [    0.548156] alg: self-tests for p8_aes_cbc (cbc(aes)) failed (rc=-2)
    [    0.550745] Failed to allocate transformation for 'aes': -2
    [    0.550801] alg: cipher: Failed to load transform for p8_aes: -2
    [    0.550892] alg: self-tests for p8_aes (aes) failed (rc=-2)
    
    Fixes: c07f5d3da643 ("crypto: vmx - Adding support for XTS")
    Fixes: d2e3ae6f3aba ("crypto: vmx - Enabling VMX module for PPC64")
    
    Suggested-by: Nicolai Stange <nstange@suse.de>
    Signed-off-by: Petr Vorel <pvorel@suse.cz>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51939008ca5fe92b3f4b5b989eedef6dd8b8af04
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Mon Feb 21 12:08:31 2022 +0000

    crypto: amlogic - call finalize with bh disabled
    
    [ Upstream commit dba633342994ce47d347bcf5522ba28301247b79 ]
    
    Doing ipsec produces a spinlock recursion warning.
    This is due to not disabling BH during crypto completion function.
    
    Fixes: 48fe583fe541 ("crypto: amlogic - Add crypto accelerator for amlogic GXL")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24857d87cc7459fcd234fa46cbc7136c23810ff1
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Mon Feb 21 12:08:30 2022 +0000

    crypto: sun8i-ce - call finalize with bh disabled
    
    [ Upstream commit f75a749b6d78aeae2ce90e14fcc4b7b3ba46126d ]
    
    Doing ipsec produces a spinlock recursion warning.
    This is due to not disabling BH during crypto completion function.
    
    Fixes: 06f751b61329 ("crypto: allwinner - Add sun8i-ce Crypto Engine")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf4814d58b1b1589ec205ffb180f365023d9b4c6
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Mon Feb 21 12:08:29 2022 +0000

    crypto: sun8i-ss - call finalize with bh disabled
    
    [ Upstream commit b169b3766242b6f3336e24a6c8ee1522978b57a7 ]
    
    Doing ipsec produces a spinlock recursion warning.
    This is due to not disabling BH during crypto completion function.
    
    Fixes: f08fcced6d00 ("crypto: allwinner - Add sun8i-ss cryptographic offloader")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4067ccb97e5eb7cf7da5132139d7678ab97cde0
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Feb 21 09:59:23 2022 +0200

    hwrng: atmel - disable trng on failure path
    
    [ Upstream commit a223ea9f89ab960eb254ba78429efd42eaf845eb ]
    
    Call atmel_trng_disable() on failure path of probe.
    
    Fixes: a1fa98d8116f ("hwrng: atmel - disable TRNG during suspend")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7940bef6f21f23955661d476c9760e6b046d21b
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Mar 2 17:20:51 2022 +0800

    spi: spi-zynqmp-gqspi: Handle error for dma_set_mask
    
    [ Upstream commit 13262fc26c1837c51a5131dbbdd67a2387f8bfc7 ]
    
    As the potential failure of the dma_set_mask(),
    it should be better to check it and return error
    if fails.
    
    Fixes: 126bdb606fd2 ("spi: spi-zynqmp-gqspi: return -ENOMEM if dma_map_single fails")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220302092051.121343-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3928a04bc65ad2b25cd6d7e8103c18e367d74ff5
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:05:44 2022 -0800

    PM: suspend: fix return value of __setup handler
    
    [ Upstream commit 7a64ca17e4dd50d5f910769167f3553902777844 ]
    
    If an invalid option is given for "test_suspend=<option>", the entire
    string is added to init's environment, so return 1 instead of 0 from
    the __setup handler.
    
      Unknown kernel command line parameters "BOOT_IMAGE=/boot/bzImage-517rc5
        test_suspend=invalid"
    
    and
    
     Run /sbin/init as init process
       with arguments:
         /sbin/init
       with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         test_suspend=invalid
    
    Fixes: 2ce986892faf ("PM / sleep: Enhance test_suspend option with repeat capability")
    Fixes: 27ddcc6596e5 ("PM / sleep: Add state field to pm_states[] entries")
    Fixes: a9d7052363a6 ("PM: Separate suspend to RAM functionality from core")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 052a218db0cb7b3d203fd54ce2097ea43253105c
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Feb 28 14:05:32 2022 -0800

    PM: hibernate: fix __setup handler error handling
    
    [ Upstream commit ba7ffcd4c4da374b0f64666354eeeda7d3827131 ]
    
    If an invalid value is used in "resumedelay=<seconds>", it is
    silently ignored. Add a warning message and then let the __setup
    handler return 1 to indicate that the kernel command line option
    has been handled.
    
    Fixes: 317cf7e5e85e3 ("PM / hibernate: convert simple_strtoul to kstrtoul")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b5924a14d64487ebd51127b0358d06066ef5384
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jan 24 13:59:37 2022 -0800

    block: don't delete queue kobject before its children
    
    [ Upstream commit 0f69288253e9fc7c495047720e523b9f1aba5712 ]
    
    kobjects aren't supposed to be deleted before their child kobjects are
    deleted.  Apparently this is usually benign; however, a WARN will be
    triggered if one of the child kobjects has a named attribute group:
    
        sysfs group 'modes' not found for kobject 'crypto'
        WARNING: CPU: 0 PID: 1 at fs/sysfs/group.c:278 sysfs_remove_group+0x72/0x80
        ...
        Call Trace:
          sysfs_remove_groups+0x29/0x40 fs/sysfs/group.c:312
          __kobject_del+0x20/0x80 lib/kobject.c:611
          kobject_cleanup+0xa4/0x140 lib/kobject.c:696
          kobject_release lib/kobject.c:736 [inline]
          kref_put include/linux/kref.h:65 [inline]
          kobject_put+0x53/0x70 lib/kobject.c:753
          blk_crypto_sysfs_unregister+0x10/0x20 block/blk-crypto-sysfs.c:159
          blk_unregister_queue+0xb0/0x110 block/blk-sysfs.c:962
          del_gendisk+0x117/0x250 block/genhd.c:610
    
    Fix this by moving the kobject_del() and the corresponding
    kobject_uevent() to the correct place.
    
    Fixes: 2c2086afc2b8 ("block: Protect less code with sysfs_lock in blk_{un,}register_queue()")
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20220124215938.2769-3-ebiggers@kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40b288a86186ff9c40f2a7970f5c0edb19a5c675
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Feb 24 10:57:15 2022 +0100

    nvme: cleanup __nvme_check_ids
    
    [ Upstream commit fd8099e7918cd2df39ef306dd1d1af7178a15b81 ]
    
    Pass the actual nvme_ns_ids used for the comparison instead of the
    ns_head that isn't needed and use a more descriptive function name.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32c4db2a52965f6ab14427aca27ba2483621376b
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Mon Jan 31 22:19:35 2022 +0100

    hwmon: (sch56xx-common) Replace WDOG_ACTIVE with WDOG_HW_RUNNING
    
    [ Upstream commit 647d6f09bea7dacf4cdb6d4ea7e3051883955297 ]
    
    If the watchdog was already enabled by the BIOS after booting, the
    watchdog infrastructure needs to regularly send keepalives to
    prevent a unexpected reset.
    WDOG_ACTIVE only serves as an status indicator for userspace,
    we want to use WDOG_HW_RUNNING instead.
    
    Since my Fujitsu Esprimo P720 does not support the watchdog,
    this change is compile-tested only.
    
    Suggested-by: Guenter Roeck <linux@roeck-us.net>
    Fixes: fb551405c0f8 (watchdog: sch56xx: Use watchdog core)
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Link: https://lore.kernel.org/r/20220131211935.3656-5-W_Armin@gmx.de
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec8536f7012edd8ee96a35d57d748564fcc3656f
Author: Patrick Rudolph <patrick.rudolph@9elements.com>
Date:   Fri Feb 25 17:06:09 2022 +0100

    hwmon: (pmbus) Add mutex to regulator ops
    
    [ Upstream commit 686d303ee6301261b422ea51e64833d7909a2c36 ]
    
    On PMBUS devices with multiple pages, the regulator ops need to be
    protected with the update mutex. This prevents accidentally changing
    the page in a separate thread while operating on the PMBUS_OPERATION
    register.
    
    Tested on Infineon xdpe11280 while a separate thread polls for sensor
    data.
    
    Signed-off-by: Patrick Rudolph <patrick.rudolph@9elements.com>
    Signed-off-by: Marcello Sylvester Bauer <sylv@sylv.io>
    Link: https://lore.kernel.org/r/b991506bcbf665f7af185945f70bf9d5cf04637c.1645804976.git.sylv@sylv.io
    Fixes: ddbb4db4ced1b ("hwmon: (pmbus) Add regulator support")
    Cc: Alan Tull <atull@opensource.altera.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18a18594ae696abf0e0ec75dccc7d43da78660a6
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Feb 23 21:16:37 2022 +0200

    spi: pxa2xx-pci: Balance reference count for PCI DMA device
    
    [ Upstream commit 609d7ffdc42199a0ec949db057e3b4be6745d6c5 ]
    
    The pci_get_slot() increases its reference count, the caller
    must decrement the reference count by calling pci_dev_put().
    
    Fixes: 743485ea3bee ("spi: pxa2xx-pci: Do a specific setup in a separate function")
    Fixes: 25014521603f ("spi: pxa2xx-pci: Enable DMA for Intel Merrifield")
    Reported-by: Wang Qing <wangqing@vivo.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20220223191637.31147-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55259cb3741527b731989bdb7200f11808c1ab5a
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Feb 17 21:27:26 2022 +0200

    crypto: ccree - don't attempt 0 len DMA mappings
    
    [ Upstream commit 1fb37b5692c915edcc2448a6b37255738c7c77e0 ]
    
    Refuse to try mapping zero bytes as this may cause a fault
    on some configurations / platforms and it seems the prev.
    attempt is not enough and we need to be more explicit.
    
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Reported-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Fixes: ce0fc6db38de ("crypto: ccree - protect against empty or NULL
    scatterlists")
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d788ad472f83fc92df76deb7fff738d4d69329a2
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Feb 22 13:45:18 2022 -0800

    EVM: fix the evm= __setup handler return value
    
    [ Upstream commit f2544f5e6c691679d56bb38637d2f347075b36fa ]
    
    __setup() handlers should return 1 if the parameter is handled.
    Returning 0 causes the entire string to be added to init's
    environment strings (limited to 32 strings), unnecessarily polluting it.
    
    Using the documented string "evm=fix" causes an Unknown parameter message:
      Unknown kernel command line parameters
      "BOOT_IMAGE=/boot/bzImage-517rc5 evm=fix", will be passed to user space.
    
    and that string is added to init's environment string space:
      Run /sbin/init as init process
        with arguments:
         /sbin/init
        with environment:
         HOME=/
         TERM=linux
         BOOT_IMAGE=/boot/bzImage-517rc5
         evm=fix
    
    With this change, using "evm=fix" acts as expected and an invalid
    option ("evm=evm") causes a warning to be printed:
      evm: invalid "evm" mode
    but init's environment is not polluted with this string, as expected.
    
    Fixes: 7102ebcd65c1 ("evm: permit only valid security.evm xattrs to be updated")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Igor Zhbanov <i.zhbanov@omprussia.ru>
    Link: lore.kernel.org/r/64644a2f-4a20-bab3-1e15-3b2cdd0defe3@omprussia.ru
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a137f93ae581668d5ad384f9cbd6cc85ee5344ac
Author: Richard Guy Briggs <rgb@redhat.com>
Date:   Tue Feb 22 11:44:51 2022 -0500

    audit: log AUDIT_TIME_* records only from rules
    
    [ Upstream commit 272ceeaea355214b301530e262a0df8600bfca95 ]
    
    AUDIT_TIME_* events are generated when there are syscall rules present
    that are not related to time keeping.  This will produce noisy log
    entries that could flood the logs and hide events we really care about.
    
    Rather than immediately produce the AUDIT_TIME_* records, store the data
    in the context and log it at syscall exit time respecting the filter
    rules.
    
    Note: This eats the audit_buffer, unlike any others in show_special().
    
    Please see https://bugzilla.redhat.com/show_bug.cgi?id=1991919
    
    Fixes: 7e8eda734d30 ("ntp: Audit NTP parameters adjustment")
    Fixes: 2d87a0674bd6 ("timekeeping: Audit clock adjustments")
    Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
    [PM: fixed style/whitespace issues]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e9501e60b8d2654d85bbe6e00d69b8878d984c3
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Fri Feb 11 12:16:17 2022 +0000

    crypto: rockchip - ECB does not need IV
    
    [ Upstream commit 973d74e93820d99d8ea203882631c76edab699c9 ]
    
    When loading rockchip crypto module, testmgr complains that ivsize of ecb-des3-ede-rk
    is not the same than generic implementation.
    In fact ECB does not use an IV.
    
    Fixes: ce0183cb6464b ("crypto: rockchip - switch to skcipher API")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8265bea7d8cd9006649dee961f9a1cd3949b726c
Author: Muhammad Usama Anjum <usama.anjum@collabora.com>
Date:   Mon Feb 14 23:41:08 2022 +0500

    selftests/x86: Add validity check and allow field splitting
    
    [ Upstream commit b06e15ebd5bfb670f93c7f11a29b8299c1178bc6 ]
    
    Add check to test if CC has a string. CC can have multiple sub-strings
    like "ccache gcc". Erorr pops up if it is treated as single string and
    double quotes are used around it. This can be fixed by removing the
    quotes and not treating CC as a single string.
    
    Fixes: e9886ace222e ("selftests, x86: Rework x86 target architecture detection")
    Reported-by: "kernelci.org bot" <bot@kernelci.org>
    Signed-off-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20220214184109.3739179-2-usama.anjum@collabora.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7d9249af33c9b77030932f97c4e5002db20cc8a
Author: Jianyong Wu <jianyong.wu@arm.com>
Date:   Tue Feb 1 19:44:00 2022 +0800

    arm64/mm: avoid fixmap race condition when create pud mapping
    
    [ Upstream commit ee017ee353506fcec58e481673e4331ff198a80e ]
    
    The 'fixmap' is a global resource and is used recursively by
    create pud mapping(), leading to a potential race condition in the
    presence of a concurrent call to alloc_init_pud():
    
    kernel_init thread                          virtio-mem workqueue thread
    ==================                          ===========================
    
      alloc_init_pud(...)                       alloc_init_pud(...)
      pudp = pud_set_fixmap_offset(...)         pudp = pud_set_fixmap_offset(...)
      READ_ONCE(*pudp)
      pud_clear_fixmap(...)
                                                READ_ONCE(*pudp) // CRASH!
    
    As kernel may sleep during creating pud mapping, introduce a mutex lock to
    serialise use of the fixmap entries by alloc_init_pud(). However, there is
    no need for locking in early boot stage and it doesn't work well with
    KASLR enabled when early boot. So, enable lock when system_state doesn't
    equal to "SYSTEM_BOOTING".
    
    Signed-off-by: Jianyong Wu <jianyong.wu@arm.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Fixes: f4710445458c ("arm64: mm: use fixmap when creating page tables")
    Link: https://lore.kernel.org/r/20220201114400.56885-1-jianyong.wu@arm.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99a8dfce7c0b9c2e3c2c4b4989bd2870da6b1598
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jan 28 16:52:38 2022 +0000

    spi: tegra114: Add missing IRQ check in tegra_spi_probe
    
    [ Upstream commit 4f92724d4b92c024e721063f520d66e11ca4b54b ]
    
    This func misses checking for platform_get_irq()'s call and may passes the
    negative error codes to request_threaded_irq(), which takes unsigned IRQ #,
    causing it to fail with -EINVAL, overriding an original error code.
    Stop calling request_threaded_irq() with invalid IRQ #s.
    
    Fixes: f333a331adfa ("spi/tegra114: add spi driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220128165238.25615-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71dba67138f6f8dfe2d2f1588d23c3572f14a13b
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Jan 26 09:48:53 2022 +0800

    thermal: int340x: Check for NULL after calling kmemdup()
    
    [ Upstream commit 38b16d6cfe54c820848bcfc999bc5e8a7da1cefb ]
    
    As the potential failure of the allocation, kmemdup() may return NULL.
    
    Then, 'bin_attr_data_vault.private' will be NULL, but
    'bin_attr_data_vault.size' is not 0, which is not consistent.
    
    Therefore, it is better to check the return value of kmemdup() to
    avoid the confusion.
    
    Fixes: 0ba13c763aac ("thermal/int340x_thermal: Export GDDV")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    [ rjw: Subject and changelog edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e57117142bbe4adcf2088996c6900b128823eb5
Author: Tomas Paukrt <tomaspaukrt@email.cz>
Date:   Sat Jan 22 18:07:53 2022 +0100

    crypto: mxs-dcp - Fix scatterlist processing
    
    [ Upstream commit 28e9b6d8199a3f124682b143800c2dacdc3d70dd ]
    
    This patch fixes a bug in scatterlist processing that may cause incorrect AES block encryption/decryption.
    
    Fixes: 2e6d793e1bf0 ("crypto: mxs-dcp - Use sg_mapping_iter to copy data")
    Signed-off-by: Tomas Paukrt <tomaspaukrt@email.cz>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec1d372974ec82a2a15ebdce3df71af308ec8cb8
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed Jan 19 17:58:40 2022 +1100

    crypto: authenc - Fix sleep in atomic context in decrypt_tail
    
    [ Upstream commit 66eae850333d639fc278d6f915c6fc01499ea893 ]
    
    The function crypto_authenc_decrypt_tail discards its flags
    argument and always relies on the flags from the original request
    when starting its sub-request.
    
    This is clearly wrong as it may cause the SLEEPABLE flag to be
    set when it shouldn't.
    
    Fixes: 92d95ba91772 ("crypto: authenc - Convert to new AEAD interface")
    Reported-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdfaafeb4bf816922c9650d038a9b065ddde1f8f
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Sat Jan 15 10:07:14 2022 +0000

    crypto: sun8i-ss - really disable hash on A80
    
    [ Upstream commit 881fc7fba6c3e7d77d608b9a50b01a89d5e0c61b ]
    
    When adding hashes support to sun8i-ss, I have added them only on A83T.
    But I forgot that 0 is a valid algorithm ID, so hashes are enabled on A80 but
    with an incorrect ID.
    Anyway, even with correct IDs, hashes do not work on A80 and I cannot
    find why.
    So let's disable all of them on A80.
    
    Fixes: d9b45418a917 ("crypto: sun8i-ss - support hash algorithms")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19693838c82f1748cddcd9d28eb40f1c3b679668
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jan 12 15:05:03 2022 +0100

    hwrng: cavium - HW_RANDOM_CAVIUM should depend on ARCH_THUNDER
    
    [ Upstream commit ab7d88549e2f7ae116afd303f32e1950cb790a1d ]
    
    The Cavium ThunderX Random Number Generator is only present on Cavium
    ThunderX SoCs, and not available as an independent PCIe endpoint.  Hence
    add a dependency on ARCH_THUNDER, to prevent asking the user about this
    driver when configuring a kernel without Cavium Thunder SoC  support.
    
    Fixes: cc2f1908c6b8f625 ("hwrng: cavium - Add Cavium HWRNG driver for ThunderX SoC.")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc20294cc8da53c0dc0f5a076b4883be6ec96930
Author: Sunil Goutham <sgoutham@marvell.com>
Date:   Fri Oct 29 22:49:59 2021 +0530

    hwrng: cavium - Check health status while reading random data
    
    [ Upstream commit 680efb33546be8960ccbb2f4e0e43034d9c93b30 ]
    
    This RNG device is present on Marvell OcteonTx2 silicons as well and
    also provides entropy health status.
    
    HW continuously checks health condition of entropy and reports
    faults. Fault is in terms of co-processor cycles since last fault
    detected. This doesn't get cleared and only updated when new fault
    is detected. Also there are chances of detecting false positives.
    So to detect a entropy failure SW has to check if failures are
    persistent ie cycles elapsed is frequently updated by HW.
    
    This patch adds support to detect health failures using below algo.
    1. Consider any fault detected before 10ms as a false positive and ignore.
       10ms is chosen randomly, no significance.
    2. Upon first failure detection make a note of cycles elapsed and when this
       error happened in realtime (cntvct).
    3. Upon subsequent failure, check if this is new or a old one by comparing
       current cycles with the ones since last failure. cycles or time since
       last failure is calculated using cycles and time info captured at (2).
    
    HEALTH_CHECK status register is not available to VF, hence had to map
    PF registers. Also since cycles are in terms of co-processor cycles,
    had to retrieve co-processor clock rate from RST device.
    
    Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 962d1f59d5f7e777a47d1691251242d2ab46ef5e
Author: Christian Göttsche <cgzones@googlemail.com>
Date:   Tue Jan 25 15:14:20 2022 +0100

    selinux: check return value of sel_make_avc_files
    
    [ Upstream commit bcb62828e3e8c813b6613db6eb7fd9657db248fc ]
    
    sel_make_avc_files() might fail and return a negative errno value on
    memory allocation failures. Re-add the check of the return value,
    dropped in 66f8e2f03c02 ("selinux: sidtab reverse lookup hash table").
    
    Reported by clang-analyzer:
    
        security/selinux/selinuxfs.c:2129:2: warning: Value stored to
          'ret' is never read [deadcode.DeadStores]
                ret = sel_make_avc_files(dentry);
                ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Fixes: 66f8e2f03c02 ("selinux: sidtab reverse lookup hash table")
    Signed-off-by: Christian Göttsche <cgzones@googlemail.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    [PM: description line wrapping, added proper commit ref]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ae9b020ddfcec9c8864774c08af98b8cd20a210
Author: kernel test robot <lkp@intel.com>
Date:   Sat Jan 15 12:11:38 2022 +0100

    regulator: qcom_smd: fix for_each_child.cocci warnings
    
    [ Upstream commit 6390d42c21efff0b4c10956a38e341f4e84ecd3d ]
    
    drivers/regulator/qcom_smd-regulator.c:1318:1-33: WARNING: Function "for_each_available_child_of_node" should have of_node_put() before return around line 1321.
    
    Semantic patch information:
     False positives can be due to function calls within the for_each
     loop that may encapsulate an of_node_put.
    
    Generated by: scripts/coccinelle/iterators/for_each_child.cocci
    
    Fixes: 14e2976fbabd ("regulator: qcom_smd: Align probe function with rpmh-regulator")
    CC: Konrad Dybcio <konrad.dybcio@somainline.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Julia Lawall <julia.lawall@inria.fr>
    Link: https://lore.kernel.org/r/alpine.DEB.2.22.394.2201151210170.3051@hadrien
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c20975954e965841ae54d6a141c2e92fa2957894
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Mar 21 10:48:43 2022 +0000

    PCI: xgene: Revert "PCI: xgene: Fix IB window setup"
    
    commit 825da4e9cec68713fbb02dc6f71fe1bf65fe8050 upstream.
    
    Commit c7a75d07827a ("PCI: xgene: Fix IB window setup") tried to
    fix the damages that 6dce5aa59e0b ("PCI: xgene: Use inbound resources
    for setup") caused, but actually didn't improve anything for some
    plarforms (at least Mustang and m400 are still broken).
    
    Given that 6dce5aa59e0b has been reverted, revert this patch as well,
    restoring the PCIe support on XGene to its pre-5.5, working state.
    
    Link: https://lore.kernel.org/r/YjN8pT5e6/8cRohQ@xps13.dannf
    Link: https://lore.kernel.org/r/20220321104843.949645-3-maz@kernel.org
    Fixes: c7a75d07827a ("PCI: xgene: Fix IB window setup")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Cc: Rob Herring <robh@kernel.org>
    Cc: Toan Le <toan@os.amperecomputing.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Krzysztof Wilczyński <kw@linux.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Stéphane Graber <stgraber@ubuntu.com>
    Cc: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f56f240157dfeabda945f245dfa75fd5b16a2e3
Author: Liguang Zhang <zhangliguang@linux.alibaba.com>
Date:   Thu Nov 11 13:42:58 2021 +0800

    PCI: pciehp: Clear cmd_busy bit in polling mode
    
    commit 92912b175178c7e895f5e5e9f1e30ac30319162b upstream.
    
    Writes to a Downstream Port's Slot Control register are PCIe hotplug
    "commands."  If the Port supports Command Completed events, software must
    wait for a command to complete before writing to Slot Control again.
    
    pcie_do_write_cmd() sets ctrl->cmd_busy when it writes to Slot Control.  If
    software notification is enabled, i.e., PCI_EXP_SLTCTL_HPIE and
    PCI_EXP_SLTCTL_CCIE are set, ctrl->cmd_busy is cleared by pciehp_isr().
    
    But when software notification is disabled, as it is when pcie_init()
    powers off an empty slot, pcie_wait_cmd() uses pcie_poll_cmd() to poll for
    command completion, and it neglects to clear ctrl->cmd_busy, which leads to
    spurious timeouts:
    
      pcieport 0000:00:03.0: pciehp: Timeout on hotplug command 0x01c0 (issued 2264 msec ago)
      pcieport 0000:00:03.0: pciehp: Timeout on hotplug command 0x05c0 (issued 2288 msec ago)
    
    Clear ctrl->cmd_busy in pcie_poll_cmd() when it detects a Command Completed
    event (PCI_EXP_SLTSTA_CC).
    
    [bhelgaas: commit log]
    Fixes: a5dd4b4b0570 ("PCI: pciehp: Wait for hotplug command completion where necessary")
    Link: https://lore.kernel.org/r/20211111054258.7309-1-zhangliguang@linux.alibaba.com
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215143
    Link: https://lore.kernel.org/r/20211126173309.GA12255@wunner.de
    Signed-off-by: Liguang Zhang <zhangliguang@linux.alibaba.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org      # v4.19+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89ddcc81914ab58cc203acc844f27d55ada8ec0e
Author: Mastan Katragadda <mastanx.katragadda@intel.com>
Date:   Thu Mar 3 11:34:28 2022 +0530

    drm/i915/gem: add missing boundary check in vm_access
    
    commit 3886a86e7e6cc6ce2ce93c440fecd8f42aed0ce7 upstream.
    
    A missing bounds check in vm_access() can lead to an out-of-bounds read
    or write in the adjacent memory area, since the len attribute is not
    validated before the memcpy later in the function, potentially hitting:
    
    [  183.637831] BUG: unable to handle page fault for address: ffffc90000c86000
    [  183.637934] #PF: supervisor read access in kernel mode
    [  183.637997] #PF: error_code(0x0000) - not-present page
    [  183.638059] PGD 100000067 P4D 100000067 PUD 100258067 PMD 106341067 PTE 0
    [  183.638144] Oops: 0000 [#2] PREEMPT SMP NOPTI
    [  183.638201] CPU: 3 PID: 1790 Comm: poc Tainted: G      D           5.17.0-rc6-ci-drm-11296+ #1
    [  183.638298] Hardware name: Intel Corporation CoffeeLake Client Platform/CoffeeLake H DDR4 RVP, BIOS CNLSFWR1.R00.X208.B00.1905301319 05/30/2019
    [  183.638430] RIP: 0010:memcpy_erms+0x6/0x10
    [  183.640213] RSP: 0018:ffffc90001763d48 EFLAGS: 00010246
    [  183.641117] RAX: ffff888109c14000 RBX: ffff888111bece40 RCX: 0000000000000ffc
    [  183.642029] RDX: 0000000000001000 RSI: ffffc90000c86000 RDI: ffff888109c14004
    [  183.642946] RBP: 0000000000000ffc R08: 800000000000016b R09: 0000000000000000
    [  183.643848] R10: ffffc90000c85000 R11: 0000000000000048 R12: 0000000000001000
    [  183.644742] R13: ffff888111bed190 R14: ffff888109c14000 R15: 0000000000001000
    [  183.645653] FS:  00007fe5ef807540(0000) GS:ffff88845b380000(0000) knlGS:0000000000000000
    [  183.646570] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  183.647481] CR2: ffffc90000c86000 CR3: 000000010ff02006 CR4: 00000000003706e0
    [  183.648384] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  183.649271] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  183.650142] Call Trace:
    [  183.650988]  <TASK>
    [  183.651793]  vm_access+0x1f0/0x2a0 [i915]
    [  183.652726]  __access_remote_vm+0x224/0x380
    [  183.653561]  mem_rw.isra.0+0xf9/0x190
    [  183.654402]  vfs_read+0x9d/0x1b0
    [  183.655238]  ksys_read+0x63/0xe0
    [  183.656065]  do_syscall_64+0x38/0xc0
    [  183.656882]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  183.657663] RIP: 0033:0x7fe5ef725142
    [  183.659351] RSP: 002b:00007ffe1e81c7e8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
    [  183.660227] RAX: ffffffffffffffda RBX: 0000557055dfb780 RCX: 00007fe5ef725142
    [  183.661104] RDX: 0000000000001000 RSI: 00007ffe1e81d880 RDI: 0000000000000005
    [  183.661972] RBP: 00007ffe1e81e890 R08: 0000000000000030 R09: 0000000000000046
    [  183.662832] R10: 0000557055dfc2e0 R11: 0000000000000246 R12: 0000557055dfb1c0
    [  183.663691] R13: 00007ffe1e81e980 R14: 0000000000000000 R15: 0000000000000000
    
    Changes since v1:
         - Updated if condition with range_overflows_t [Chris Wilson]
    
    Fixes: 9f909e215fea ("drm/i915: Implement vm_ops->access for gdb access into mmaps")
    Signed-off-by: Mastan Katragadda <mastanx.katragadda@intel.com>
    Suggested-by: Adam Zabrocki <adamza@microsoft.com>
    Reported-by: Jackson Cody <cody.jackson@intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Jon Bloomfield <jon.bloomfield@intel.com>
    Cc: Sudeep Dutt <sudeep.dutt@intel.com>
    Cc: <stable@vger.kernel.org> # v5.8+
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    [mauld: tidy up the commit message and add Cc: stable]
    Signed-off-by: Matthew Auld <matthew.auld@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220303060428.1668844-1-mastanx.katragadda@intel.com
    (cherry picked from commit 661412e301e2ca86799aa4f400d1cf0bd38c57c6)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b84857c06ef9e72d09fadafdbb3ce9af64af954f
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Thu Feb 10 12:36:42 2022 +0200

    drm/i915/opregion: check port number bounds for SWSCI display power state
    
    commit 24a644ebbfd3b13cda702f98907f9dd123e34bf9 upstream.
    
    The mapping from enum port to whatever port numbering scheme is used by
    the SWSCI Display Power State Notification is odd, and the memory of it
    has faded. In any case, the parameter only has space for ports numbered
    [0..4], and UBSAN reports bit shift beyond it when the platform has port
    F or more.
    
    Since the SWSCI functionality is supposed to be obsolete for new
    platforms (i.e. ones that might have port F or more), just bail out
    early if the mapped and mangled port number is beyond what the Display
    Power State Notification can support.
    
    Fixes: 9c4b0a683193 ("drm/i915: add opregion function to notify bios of encoder enable/disable")
    Cc: <stable@vger.kernel.org> # v3.13+
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Lucas De Marchi <lucas.demarchi@intel.com>
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/4800
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/cc363f42d6b5a5932b6d218fefcc8bdfb15dbbe5.1644489329.git.jani.nikula@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88975951d4e04826c3fd077d9b7eadb21ca37bdb
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:10 2022 +0900

    brcmfmac: pcie: Fix crashes due to early IRQs
    
    commit b50255c83b914defd61a57fbc81d452334b63f4c upstream.
    
    The driver was enabling IRQs before the message processing was
    initialized. This could cause IRQs to come in too early and crash the
    driver. Instead, move the IRQ enable and hostready to a bus preinit
    function, at which point everything is properly initialized.
    
    Fixes: 9e37f045d5e7 ("brcmfmac: Adding PCIe bus layer support.")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-7-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cbcf93a93e5e4c19f89d9c01ae4c707efc6d301
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:09 2022 +0900

    brcmfmac: pcie: Replace brcmf_pcie_copy_mem_todev with memcpy_toio
    
    commit 9466987f246758eb7e9071ae58005253f631271e upstream.
    
    The alignment check was wrong (e.g. & 4 instead of & 3), and the logic
    was also inefficient if the length was not a multiple of 4, since it
    would needlessly fall back to copying the entire buffer bytewise.
    
    We already have a perfectly good memcpy_toio function, so just call that
    instead of rolling our own copy logic here. brcmf_pcie_init_ringbuffers
    was already using it anyway.
    
    Fixes: 9e37f045d5e7 ("brcmfmac: Adding PCIe bus layer support.")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-6-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3820ddaf4f3ac80c7401ccc6a42e663c9317f31
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:05 2022 +0900

    brcmfmac: pcie: Release firmwares in the brcmf_pcie_setup error path
    
    commit 5e90f0f3ead014867dade7a22f93958119f5efab upstream.
    
    This avoids leaking memory if brcmf_chip_get_raminfo fails. Note that
    the CLM blob is released in the device remove path.
    
    Fixes: 82f93cf46d60 ("brcmfmac: get chip's default RAM info during PCIe setup")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-2-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit daa07f29027c85f344f31c143d9c22ef299a31ff
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Feb 1 01:07:06 2022 +0900

    brcmfmac: firmware: Allocate space for default boardrev in nvram
    
    commit d19d8e3ba256f81ea4a27209dbbd1f0a00ef1903 upstream.
    
    If boardrev is missing from the NVRAM we add a default one, but this
    might need more space in the output buffer than was allocated. Ensure
    we have enough padding for this in the buffer.
    
    Fixes: 46f2b38a91b0 ("brcmfmac: insert default boardrev in nvram data if missing")
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220131160713.245637-3-marcan@marcan.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dd031eb99107bf81aa0e72399717a87da5d0433
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Sun Mar 20 09:40:14 2022 -0700

    xtensa: fix xtensa_wsr always writing 0
    
    commit a3d0245c58f962ee99d4440ea0eaf45fb7f5a5cc upstream.
    
    The commit cad6fade6e78 ("xtensa: clean up WSR*/RSR*/get_sr/set_sr")
    replaced 'WSR' macro in the function xtensa_wsr with 'xtensa_set_sr',
    but variable 'v' in the xtensa_set_sr body shadowed the argument 'v'
    passed to it, resulting in wrong value written to debug registers.
    
    Fix that by removing intermediate variable from the xtensa_set_sr
    macro body.
    
    Cc: stable@vger.kernel.org
    Fixes: cad6fade6e78 ("xtensa: clean up WSR*/RSR*/get_sr/set_sr")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dac518bbcebf128f48b34701db8578f9f95485e3
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Mar 16 02:04:17 2022 -0700

    xtensa: fix stop_machine_cpuslocked call in patch_text
    
    commit f406f2d03e07afc199dd8cf501f361dde6be8a69 upstream.
    
    patch_text must invoke patch_text_stop_machine on all online CPUs, but
    it calls stop_machine_cpuslocked with NULL cpumask. As a result only one
    CPU runs patch_text_stop_machine potentially leaving stale icache
    entries on other CPUs. Fix that by calling stop_machine_cpuslocked with
    cpu_online_mask as the last argument.
    
    Cc: stable@vger.kernel.org
    Fixes: 64711f9a47d4 ("xtensa: implement jump_label support")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20f974dce5df2de0c0267370d176b801e21051c3
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Dec 22 15:20:23 2021 +0100

    media: davinci: vpif: fix unbalanced runtime PM enable
    
    commit d42b3ad105b5d3481f6a56bc789aa2b27aa09325 upstream.
    
    Make sure to disable runtime PM before returning on probe errors.
    
    Fixes: 479f7a118105 ("[media] davinci: vpif: adaptions for DT support")
    Cc: stable@vger.kernel.org
    Cc: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c9b915b9463604a29a0b03383835e2a23e53d21
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Dec 22 15:20:22 2021 +0100

    media: davinci: vpif: fix unbalanced runtime PM get
    
    commit 4a321de239213300a714fa0353a5f1272d381a44 upstream.
    
    Make sure to balance the runtime PM usage counter on driver unbind.
    
    Fixes: 407ccc65bfd2 ("[media] davinci: vpif: add pm_runtime support")
    Cc: stable@vger.kernel.org      # 3.9
    Cc: Lad, Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Lad Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cde90e82919005ad581529c5375ff1b1189cd8c0
Author: Sean Young <sean@mess.org>
Date:   Sun Feb 20 15:28:24 2022 +0100

    media: gpio-ir-tx: fix transmit with long spaces on Orange Pi PC
    
    commit 5ad05ecad4326ddaa26a83ba2233a67be24c1aaa upstream.
    
    Calling udelay for than 1000us does not always yield the correct
    results.
    
    Cc: stable@vger.kernel.org
    Reported-by: Михаил <vrserver1@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 785ffce44a1f786392dec7d3555a55275547a7fe
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Fri Mar 4 20:16:23 2022 +0000

    DEC: Limit PMAX memory probing to R3k systems
    
    commit 244eae91a94c6dab82b3232967d10eeb9dfa21c6 upstream.
    
    Recent tightening of the opcode table in binutils so as to consistently
    disallow the assembly or disassembly of CP0 instructions not supported
    by the processor architecture chosen has caused a regression like below:
    
    arch/mips/dec/prom/locore.S: Assembler messages:
    arch/mips/dec/prom/locore.S:29: Error: opcode not supported on this processor: r4600 (mips3) `rfe'
    
    in a piece of code used to probe for memory with PMAX DECstation models,
    which have non-REX firmware.  Those computers always have an R2000 CPU
    and consequently the exception handler used in memory probing uses the
    RFE instruction, which those processors use.
    
    While adding 64-bit support this code was correctly excluded for 64-bit
    configurations, however it should have also been excluded for irrelevant
    32-bit configurations.  Do this now then, and only enable PMAX memory
    probing for R3k systems.
    
    Reported-by: Jan-Benedict Glaw <jbglaw@lug-owl.de>
    Reported-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org # v2.6.12+
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8dde2296eca18369c0384b934233851a40bb5969
Author: Mingzhe Zou <mingzhe.zou@easystack.cn>
Date:   Fri Feb 11 14:39:15 2022 +0800

    bcache: fixup multiple threads crash
    
    commit 887554ab96588de2917b6c8c73e552da082e5368 upstream.
    
    When multiple threads to check btree nodes in parallel, the main
    thread wait for all threads to stop or CACHE_SET_IO_DISABLE flag:
    
    wait_event_interruptible(check_state->wait,
                             atomic_read(&check_state->started) == 0 ||
                             test_bit(CACHE_SET_IO_DISABLE, &c->flags));
    
    However, the bch_btree_node_read and bch_btree_node_read_done
    maybe call bch_cache_set_error, then the CACHE_SET_IO_DISABLE
    will be set. If the flag already set, the main thread return
    error. At the same time, maybe some threads still running and
    read NULL pointer, the kernel will crash.
    
    This patch change the event wait condition, the main thread must
    wait for all threads to stop.
    
    Fixes: 8e7102273f597 ("bcache: make bch_btree_check() to be multithreaded")
    Signed-off-by: Mingzhe Zou <mingzhe.zou@easystack.cn>
    Cc: stable@vger.kernel.org # v5.7+
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37d2b4fa5cddc567e7570e89982978017272fe20
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 18 16:13:05 2022 -0800

    crypto: rsa-pkcs1pad - fix buffer overread in pkcs1pad_verify_complete()
    
    commit a24611ea356c7f3f0ec926da11b9482ac1f414fd upstream.
    
    Before checking whether the expected digest_info is present, we need to
    check that there are enough bytes remaining.
    
    Fixes: a49de377e051 ("crypto: Add hash param to pkcs1pad")
    Cc: <stable@vger.kernel.org> # v4.6+
    Cc: Tadeusz Struk <tadeusz.struk@linaro.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b89fb8b8824222c0568ad03e02c612df0746959e
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 18 16:13:04 2022 -0800

    crypto: rsa-pkcs1pad - restore signature length check
    
    commit d3481accd974541e6a5d6a1fb588924a3519c36e upstream.
    
    RSA PKCS#1 v1.5 signatures are required to be the same length as the RSA
    key size.  RFC8017 specifically requires the verifier to check this
    (https://datatracker.ietf.org/doc/html/rfc8017#section-8.2.2).
    
    Commit a49de377e051 ("crypto: Add hash param to pkcs1pad") changed the
    kernel to allow longer signatures, but didn't explain this part of the
    change; it seems to be unrelated to the rest of the commit.
    
    Revert this change, since it doesn't appear to be correct.
    
    We can be pretty sure that no one is relying on overly-long signatures
    (which would have to be front-padded with zeroes) being supported, given
    that they would have been broken since commit c7381b012872
    ("crypto: akcipher - new verify API for public key algorithms").
    
    Fixes: a49de377e051 ("crypto: Add hash param to pkcs1pad")
    Cc: <stable@vger.kernel.org> # v4.6+
    Cc: Tadeusz Struk <tadeusz.struk@linaro.org>
    Suggested-by: Vitaly Chikunov <vt@altlinux.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f38c318068ee12cdeeebbb3890edd5fe5876bb4a
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 18 16:13:03 2022 -0800

    crypto: rsa-pkcs1pad - correctly get hash from source scatterlist
    
    commit e316f7179be22912281ce6331d96d7c121fb2b17 upstream.
    
    Commit c7381b012872 ("crypto: akcipher - new verify API for public key
    algorithms") changed akcipher_alg::verify to take in both the signature
    and the actual hash and do the signature verification, rather than just
    return the hash expected by the signature as was the case before.  To do
    this, it implemented a hack where the signature and hash are
    concatenated with each other in one scatterlist.
    
    Obviously, for this to work correctly, akcipher_alg::verify needs to
    correctly extract the two items from the scatterlist it is given.
    Unfortunately, it doesn't correctly extract the hash in the case where
    the signature is longer than the RSA key size, as it assumes that the
    signature's length is equal to the RSA key size.  This causes a prefix
    of the hash, or even the entire hash, to be taken from the *signature*.
    
    (Note, the case of a signature longer than the RSA key size should not
    be allowed in the first place; a separate patch will fix that.)
    
    It is unclear whether the resulting scheme has any useful security
    properties.
    
    Fix this by correctly extracting the hash from the scatterlist.
    
    Fixes: c7381b012872 ("crypto: akcipher - new verify API for public key algorithms")
    Cc: <stable@vger.kernel.org> # v5.2+
    Reviewed-by: Vitaly Chikunov <vt@altlinux.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1db3f44f252e1f2e9ecd0e7decf23d3f943cafe
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 18 16:13:02 2022 -0800

    crypto: rsa-pkcs1pad - only allow with rsa
    
    commit 9b30430ea356f237945e52f8a3a42158877bd5a9 upstream.
    
    The pkcs1pad template can be instantiated with an arbitrary akcipher
    algorithm, which doesn't make sense; it is specifically an RSA padding
    scheme.  Make it check that the underlying algorithm really is RSA.
    
    Fixes: 3d5b1ecdea6f ("crypto: rsa - RSA padding algorithm")
    Cc: <stable@vger.kernel.org> # v4.5+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27a6f495b63a1804cc71be45911065db7757a98c
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jan 31 16:09:47 2022 -0800

    exec: Force single empty string when argv is empty
    
    commit dcd46d897adb70d63e025f175a00a89797d31a43 upstream.
    
    Quoting[1] Ariadne Conill:
    
    "In several other operating systems, it is a hard requirement that the
    second argument to execve(2) be the name of a program, thus prohibiting
    a scenario where argc < 1. POSIX 2017 also recommends this behaviour,
    but it is not an explicit requirement[2]:
    
        The argument arg0 should point to a filename string that is
        associated with the process being started by one of the exec
        functions.
    ...
    Interestingly, Michael Kerrisk opened an issue about this in 2008[3],
    but there was no consensus to support fixing this issue then.
    Hopefully now that CVE-2021-4034 shows practical exploitative use[4]
    of this bug in a shellcode, we can reconsider.
    
    This issue is being tracked in the KSPP issue tracker[5]."
    
    While the initial code searches[6][7] turned up what appeared to be
    mostly corner case tests, trying to that just reject argv == NULL
    (or an immediately terminated pointer list) quickly started tripping[8]
    existing userspace programs.
    
    The next best approach is forcing a single empty string into argv and
    adjusting argc to match. The number of programs depending on argc == 0
    seems a smaller set than those calling execve with a NULL argv.
    
    Account for the additional stack space in bprm_stack_limits(). Inject an
    empty string when argc == 0 (and set argc = 1). Warn about the case so
    userspace has some notice about the change:
    
        process './argc0' launched './argc0' with NULL argv: empty string added
    
    Additionally WARN() and reject NULL argv usage for kernel threads.
    
    [1] https://lore.kernel.org/lkml/20220127000724.15106-1-ariadne@dereferenced.org/
    [2] https://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html
    [3] https://bugzilla.kernel.org/show_bug.cgi?id=8408
    [4] https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt
    [5] https://github.com/KSPP/linux/issues/176
    [6] https://codesearch.debian.net/search?q=execve%5C+*%5C%28%5B%5E%2C%5D%2B%2C+*NULL&literal=0
    [7] https://codesearch.debian.net/search?q=execlp%3F%5Cs*%5C%28%5B%5E%2C%5D%2B%2C%5Cs*NULL&literal=0
    [8] https://lore.kernel.org/lkml/20220131144352.GE16385@xsang-OptiPlex-9020/
    
    Reported-by: Ariadne Conill <ariadne@dereferenced.org>
    Reported-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Christian Brauner <brauner@kernel.org>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: linux-fsdevel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Christian Brauner <brauner@kernel.org>
    Acked-by: Ariadne Conill <ariadne@dereferenced.org>
    Acked-by: Andy Lutomirski <luto@kernel.org>
    Link: https://lore.kernel.org/r/20220201000947.2453721-1-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b02d33171dfb26a7285f6cb131d4159685395296
Author: Dirk Müller <dmueller@suse.de>
Date:   Tue Feb 8 17:50:50 2022 +0100

    lib/raid6/test: fix multiple definition linking error
    
    commit a5359ddd052860bacf957e65fe819c63e974b3a6 upstream.
    
    GCC 10+ defaults to -fno-common, which enforces proper declaration of
    external references using "extern". without this change a link would
    fail with:
    
      lib/raid6/test/algos.c:28: multiple definition of `raid6_call';
      lib/raid6/test/test.c:22: first defined here
    
    the pq.h header that is included already includes an extern declaration
    so we can just remove the redundant one here.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Dirk Müller <dmueller@suse.de>
    Reviewed-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf057eac9a34efce45d3b8ab2c0f7242703cc391
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Mon Mar 14 15:08:55 2022 -0700

    thermal: int340x: Increase bitmap size
    
    commit 668f69a5f863b877bc3ae129efe9a80b6f055141 upstream.
    
    The number of policies are 10, so can't be supported by the bitmap size
    of u8.
    
    Even though there are no platfoms with these many policies, but
    for correctness increase to u32.
    
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Fixes: 16fc8eca1975 ("thermal/int340x_thermal: Add additional UUIDs")
    Cc: 5.1+ <stable@vger.kernel.org> # 5.1+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86a926c3f00ef7c89569f74c73d4a67da9b8e359
Author: Jann Horn <jannh@google.com>
Date:   Mon Mar 14 19:59:53 2022 +0100

    pstore: Don't use semaphores in always-atomic-context code
    
    commit 8126b1c73108bc691f5643df19071a59a69d0bc6 upstream.
    
    pstore_dump() is *always* invoked in atomic context (nowadays in an RCU
    read-side critical section, before that under a spinlock).
    It doesn't make sense to try to use semaphores here.
    
    This is mostly a revert of commit ea84b580b955 ("pstore: Convert buf_lock
    to semaphore"), except that two parts aren't restored back exactly as they
    were:
    
     - keep the lock initialization in pstore_register
     - in efi_pstore_write(), always set the "block" flag to false
     - omit "is_locked", that was unnecessary since
       commit 959217c84c27 ("pstore: Actually give up during locking failure")
     - fix the bailout message
    
    The actual problem that the buggy commit was trying to address may have
    been that the use of preemptible() in efi_pstore_write() was wrong - it
    only looks at preempt_count() and the state of IRQs, but __rcu_read_lock()
    doesn't touch either of those under CONFIG_PREEMPT_RCU.
    (Sidenote: CONFIG_PREEMPT_RCU means that the scheduler can preempt tasks in
    RCU read-side critical sections, but you're not allowed to actively
    block/reschedule.)
    
    Lockdep probably never caught the problem because it's very rare that you
    actually hit the contended case, so lockdep always just sees the
    down_trylock(), not the down_interruptible(), and so it can't tell that
    there's a problem.
    
    Fixes: ea84b580b955 ("pstore: Convert buf_lock to semaphore")
    Cc: stable@vger.kernel.org
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220314185953.2068993-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b26f400e4fe4e4a511e33f3188b61afa897d7361
Author: Colin Ian King <colin.king@intel.com>
Date:   Tue Jan 25 00:44:06 2022 +0000

    carl9170: fix missing bit-wise or operator for tx_params
    
    commit 02a95374b5eebdbd3b6413fd7ddec151d2ea75a1 upstream.
    
    Currently tx_params is being re-assigned with a new value and the
    previous setting IEEE80211_HT_MCS_TX_RX_DIFF is being overwritten.
    The assignment operator is incorrect, the original intent was to
    bit-wise or the value in. Fix this by replacing the = operator
    with |= instead.
    
    Kudos to Christian Lamparter for suggesting the correct fix.
    
    Fixes: fe8ee9ad80b2 ("carl9170: mac80211 glue and command interface")
    Signed-off-by: Colin Ian King <colin.i.king@gmail.com>
    Cc: <Stable@vger.kernel.org>
    Acked-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220125004406.344422-1-colin.i.king@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aef4df6e1cc4bd5c9ac2b850d4451582dea47e9
Author: Jocelyn Falempe <jfalempe@redhat.com>
Date:   Wed Jan 19 11:29:05 2022 +0100

    mgag200 fix memmapsl configuration in GCTL6 register
    
    commit 028a73e10705af1ffd51f2537460f616dc58680e upstream.
    
    On some servers with MGA G200_SE_A (rev 42), booting with Legacy BIOS,
    the hardware hangs when using kdump and kexec into the kdump kernel.
    This happens when the uncompress code tries to write "Decompressing Linux"
    to the VGA Console.
    
    It can be reproduced by writing to the VGA console (0xB8000) after
    booting to graphic mode, it generates the following error:
    
    kernel:NMI: PCI system error (SERR) for reason a0 on CPU 0.
    kernel:Dazed and confused, but trying to continue
    
    The root cause is the configuration of the MGA GCTL6 register
    
    According to the GCTL6 register documentation:
    
    bit 0 is gcgrmode:
        0: Enables alpha mode, and the character generator addressing system is
         activated.
        1: Enables graphics mode, and the character addressing system is not
         used.
    
    bit 1 is chainodd even:
        0: The A0 signal of the memory address bus is used during system memory
         addressing.
        1: Allows A0 to be replaced by either the A16 signal of the system
         address (ifmemmapsl is ‘00’), or by the hpgoddev (MISC<5>, odd/even
         page select) field, described on page 3-294).
    
    bit 3-2 are memmapsl:
        Memory map select bits 1 and 0. VGA.
        These bits select where the video memory is mapped, as shown below:
            00 => A0000h - BFFFFh
            01 => A0000h - AFFFFh
            10 => B0000h - B7FFFh
            11 => B8000h - BFFFFh
    
    bit 7-4 are reserved.
    
    Current code set it to 0x05 => memmapsl to b01 => 0xa0000 (graphic mode)
    But on x86, the VGA console is at 0xb8000 (text mode)
    In arch/x86/boot/compressed/misc.c debug strings are written to 0xb8000
    As the driver doesn't use this mapping at 0xa0000, it is safe to set it to
    0xb8000 instead, to avoid kernel hang on G200_SE_A rev42, with kexec/kdump.
    
    Thus changing the value 0x05 to 0x0d
    
    Signed-off-by: Jocelyn Falempe <jfalempe@redhat.com>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Acked-by: Lyude Paul <lyude@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220119102905.1194787-1-jfalempe@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef1df9168532cf00e65ccee43c0fe95f78f84d21
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Feb 8 18:18:15 2022 +0100

    ARM: dts: exynos: add missing HDMI supplies on SMDK5420
    
    commit 453a24ded415f7fce0499c6b0a2c7b28f84911f2 upstream.
    
    Add required VDD supplies to HDMI block on SMDK5420.  Without them, the
    HDMI driver won't probe.  Because of lack of schematics, use same
    supplies as on Arndale Octa and Odroid XU3 boards (voltage matches).
    
    Cc: <stable@vger.kernel.org> # v3.15+
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Link: https://lore.kernel.org/r/20220208171823.226211-3-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cde68a1ebbc8dc054203ed5200013623a960d23
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Feb 8 18:18:14 2022 +0100

    ARM: dts: exynos: add missing HDMI supplies on SMDK5250
    
    commit 60a9914cb2061ba612a3f14f6ad329912b486360 upstream.
    
    Add required VDD supplies to HDMI block on SMDK5250.  Without them, the
    HDMI driver won't probe.  Because of lack of schematics, use same
    supplies as on Arndale 5250 board (voltage matches).
    
    Cc: <stable@vger.kernel.org> # v3.15+
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Link: https://lore.kernel.org/r/20220208171823.226211-2-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ac205c414c5d675f777a007eeea2b8f34b83675
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 30 20:53:23 2021 +0100

    ARM: dts: exynos: fix UART3 pins configuration in Exynos5250
    
    commit 372d7027fed43c8570018e124cf78b89523a1f8e upstream.
    
    The gpa1-4 pin was put twice in UART3 pin configuration of Exynos5250,
    instead of proper pin gpa1-5.
    
    Fixes: f8bfe2b050f3 ("ARM: dts: add pin state information in client nodes for Exynos5 platforms")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Link: https://lore.kernel.org/r/20211230195325.328220-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7187c9beb70232d09798a8f583780c98bafb049c
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Tue Jan 11 15:23:01 2022 +0200

    ARM: dts: at91: sama5d2: Fix PMERRLOC resource size
    
    commit 0fb578a529ac7aca326a9fa475b4a6f58a756fda upstream.
    
    PMERRLOC resource size was set to 0x100, which resulted in HSMC_ERRLOCx
    register being truncated to offset x = 21, causing error correction to
    fail if more than 22 bit errors and if 24 or 32 bit error correction
    was supported.
    
    Fixes: d9c41bf30cf8 ("ARM: dts: at91: Declare EBI/NAND controllers")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Cc: <stable@vger.kernel.org> # 4.13.x
    Acked-by: Alexander Dahl <ada@thorsis.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Link: https://lore.kernel.org/r/20220111132301.906712-1-tudor.ambarus@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ca2a5552a83ae16e87d5ddeb3c31c0495985a3e
Author: Michael Schmitz <schmitzmic@gmail.com>
Date:   Wed Feb 16 20:26:25 2022 +1300

    video: fbdev: atari: Atari 2 bpp (STe) palette bugfix
    
    commit c8be5edbd36ceed2ff3d6b8f8e40643c3f396ea3 upstream.
    
    The code to set the shifter STe palette registers has a long
    standing operator precedence bug, manifesting as colors set
    on a 2 bits per pixel frame buffer coming up with a distinctive
    blue tint.
    
    Add parentheses around the calculation of the per-color palette
    data before shifting those into their respective bit field position.
    
    This bug goes back a long way (2.4 days at the very least) so there
    won't be a Fixes: tag.
    
    Tested on ARAnyM as well on Falcon030 hardware.
    
    Cc: stable@vger.kernel.org
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Link: https://lore.kernel.org/all/CAMuHMdU3ievhXxKR_xi_v3aumnYW7UNUO6qMdhgfyWTyVSsCkQ@mail.gmail.com
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Tested-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72af8810922eb143ed4f116db246789ead2d8543
Author: Helge Deller <deller@gmx.de>
Date:   Sun Feb 27 08:43:56 2022 +0100

    video: fbdev: sm712fb: Fix crash in smtcfb_read()
    
    commit bd771cf5c4254511cc4abb88f3dab3bd58bdf8e8 upstream.
    
    Zheyu Ma reported this crash in the sm712fb driver when reading
    three bytes from the framebuffer:
    
     BUG: unable to handle page fault for address: ffffc90001ffffff
     RIP: 0010:smtcfb_read+0x230/0x3e0
     Call Trace:
      vfs_read+0x198/0xa00
      ? do_sys_openat2+0x27d/0x350
      ? __fget_light+0x54/0x340
      ksys_read+0xce/0x190
      do_syscall_64+0x43/0x90
    
    Fix it by removing the open-coded endianess fixup-code and
    by moving the pointer post decrement out the fb_readl() function.
    
    Reported-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Tested-by: Zheyu Ma <zheyuma97@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba09b04173242c379d2442be979ab2f1971f2f8b
Author: Cooper Chiou <cooper.chiou@intel.com>
Date:   Thu Mar 24 14:12:18 2022 +0800

    drm/edid: check basic audio support on CEA extension block
    
    commit 5662abf6e21338be6d085d6375d3732ac6147fd2 upstream.
    
    Tag code stored in bit7:5 for CTA block byte[3] is not the same as
    CEA extension block definition. Only check CEA block has
    basic audio support.
    
    v3: update commit message.
    
    Cc: stable@vger.kernel.org
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Shawn C Lee <shawn.c.lee@intel.com>
    Cc: intel-gfx <intel-gfx@lists.freedesktop.org>
    Signed-off-by: Cooper Chiou <cooper.chiou@intel.com>
    Signed-off-by: Lee Shawn C <shawn.c.lee@intel.com>
    Fixes: e28ad544f462 ("drm/edid: parse CEA blocks embedded in DisplayID")
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220324061218.32739-1-shawn.c.lee@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce1927b8cfed3084c6951916494195fc913da9c5
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 14 14:30:11 2022 -1000

    block: don't merge across cgroup boundaries if blkcg is enabled
    
    commit 6b2b04590b51aa4cf395fcd185ce439cab5961dc upstream.
    
    blk-iocost and iolatency are cgroup aware rq-qos policies but they didn't
    disable merges across different cgroups. This obviously can lead to
    accounting and control errors but more importantly to priority inversions -
    e.g. an IO which belongs to a higher priority cgroup or IO class may end up
    getting throttled incorrectly because it gets merged to an IO issued from a
    low priority cgroup.
    
    Fix it by adding blk_cgroup_mergeable() which is called from merge paths and
    rejects cross-cgroup and cross-issue_as_root merges.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: d70675121546 ("block: introduce blk-iolatency io controller")
    Cc: stable@vger.kernel.org # v4.19+
    Cc: Josef Bacik <jbacik@fb.com>
    Link: https://lore.kernel.org/r/Yi/eE/6zFNyWJ+qd@slm.duckdns.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e0d24598ca0a75864739515bd8094f3f69cab02
Author: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
Date:   Fri Mar 18 11:26:41 2022 +0900

    block: limit request dispatch loop duration
    
    commit 572299f03afd676dd4e20669cdaf5ed0fe1379d4 upstream.
    
    When IO requests are made continuously and the target block device
    handles requests faster than request arrival, the request dispatch loop
    keeps on repeating to dispatch the arriving requests very long time,
    more than a minute. Since the loop runs as a workqueue worker task, the
    very long loop duration triggers workqueue watchdog timeout and BUG [1].
    
    To avoid the very long loop duration, break the loop periodically. When
    opportunity to dispatch requests still exists, check need_resched(). If
    need_resched() returns true, the dispatch loop already consumed its time
    slice, then reschedule the dispatch work and break the loop. With heavy
    IO load, need_resched() does not return true for 20~30 seconds. To cover
    such case, check time spent in the dispatch loop with jiffies. If more
    than 1 second is spent, reschedule the dispatch work and break the loop.
    
    [1]
    
    [  609.691437] BUG: workqueue lockup - pool cpus=10 node=1 flags=0x0 nice=-20 stuck for 35s!
    [  609.701820] Showing busy workqueues and worker pools:
    [  609.707915] workqueue events: flags=0x0
    [  609.712615]   pwq 0: cpus=0 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
    [  609.712626]     pending: drm_fb_helper_damage_work [drm_kms_helper]
    [  609.712687] workqueue events_freezable: flags=0x4
    [  609.732943]   pwq 0: cpus=0 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
    [  609.732952]     pending: pci_pme_list_scan
    [  609.732968] workqueue events_power_efficient: flags=0x80
    [  609.751947]   pwq 0: cpus=0 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
    [  609.751955]     pending: neigh_managed_work
    [  609.752018] workqueue kblockd: flags=0x18
    [  609.769480]   pwq 21: cpus=10 node=1 flags=0x0 nice=-20 active=3/256 refcnt=4
    [  609.769488]     in-flight: 1020:blk_mq_run_work_fn
    [  609.769498]     pending: blk_mq_timeout_work, blk_mq_run_work_fn
    [  609.769744] pool 21: cpus=10 node=1 flags=0x0 nice=-20 hung=35s workers=2 idle: 67
    [  639.899730] BUG: workqueue lockup - pool cpus=10 node=1 flags=0x0 nice=-20 stuck for 66s!
    [  639.909513] Showing busy workqueues and worker pools:
    [  639.915404] workqueue events: flags=0x0
    [  639.920197]   pwq 0: cpus=0 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
    [  639.920215]     pending: drm_fb_helper_damage_work [drm_kms_helper]
    [  639.920365] workqueue kblockd: flags=0x18
    [  639.939932]   pwq 21: cpus=10 node=1 flags=0x0 nice=-20 active=3/256 refcnt=4
    [  639.939942]     in-flight: 1020:blk_mq_run_work_fn
    [  639.939955]     pending: blk_mq_timeout_work, blk_mq_run_work_fn
    [  639.940212] pool 21: cpus=10 node=1 flags=0x0 nice=-20 hung=66s workers=2 idle: 67
    
    Fixes: 6e6fcbc27e778 ("blk-mq: support batching dispatch in case of io")
    Signed-off-by: Shin'ichiro Kawasaki <shinichiro.kawasaki@wdc.com>
    Cc: stable@vger.kernel.org # v5.10+
    Link: https://lore.kernel.org/linux-block/20220310091649.zypaem5lkyfadymg@shindev/
    Link: https://lore.kernel.org/r/20220318022641.133484-1-shinichiro.kawasaki@wdc.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 958e9b56de7b8dad732d67b00c632e2ec15c337a
Author: Pekka Pessi <ppessi@nvidia.com>
Date:   Wed Mar 2 16:04:24 2022 +0100

    mailbox: tegra-hsp: Flush whole channel
    
    commit 60de2d2dc284e0dd1c2c897d08625bde24ef3454 upstream.
    
    The txdone can re-fill the mailbox. Keep polling the mailbox during the
    flush until all the messages have been delivered.
    
    This fixes an issue with the Tegra Combined UART (TCU) where output can
    get truncated under high traffic load.
    
    Signed-off-by: Pekka Pessi <ppessi@nvidia.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Fixes: 91b1b1c3da8a ("mailbox: tegra-hsp: Add support for shared mailboxes")
    Cc: stable@vger.kernel.org
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f67a1400788f550d201c71aeaf56706afe57f0da
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Thu Feb 17 09:43:03 2022 +0800

    drivers: hamradio: 6pack: fix UAF bug caused by mod_timer()
    
    commit efe4186e6a1b54bf38b9e05450d43b0da1fd7739 upstream.
    
    When a 6pack device is detaching, the sixpack_close() will act to cleanup
    necessary resources. Although del_timer_sync() in sixpack_close()
    won't return if there is an active timer, one could use mod_timer() in
    sp_xmit_on_air() to wake up timer again by calling userspace syscall such
    as ax25_sendmsg(), ax25_connect() and ax25_ioctl().
    
    This unexpected waked handler, sp_xmit_on_air(), realizes nothing about
    the undergoing cleanup and may still call pty_write() to use driver layer
    resources that have already been released.
    
    One of the possible race conditions is shown below:
    
          (USE)                      |      (FREE)
    ax25_sendmsg()                   |
     ax25_queue_xmit()               |
      ...                            |
      sp_xmit()                      |
       sp_encaps()                   | sixpack_close()
        sp_xmit_on_air()             |  del_timer_sync(&sp->tx_t)
         mod_timer(&sp->tx_t,...)    |  ...
                                     |  unregister_netdev()
                                     |  ...
         (wait a while)              | tty_release()
                                     |  tty_release_struct()
                                     |   release_tty()
        sp_xmit_on_air()             |    tty_kref_put(tty_struct) //FREE
         pty_write(tty_struct) //USE |    ...
    
    The corresponding fail log is shown below:
    ===============================================================
    BUG: KASAN: use-after-free in __run_timers.part.0+0x170/0x470
    Write of size 8 at addr ffff88800a652ab8 by task swapper/2/0
    ...
    Call Trace:
      ...
      queue_work_on+0x3f/0x50
      pty_write+0xcd/0xe0pty_write+0xcd/0xe0
      sp_xmit_on_air+0xb2/0x1f0
      call_timer_fn+0x28/0x150
      __run_timers.part.0+0x3c2/0x470
      run_timer_softirq+0x3b/0x80
      __do_softirq+0xf1/0x380
      ...
    
    This patch reorders the del_timer_sync() after the unregister_netdev()
    to avoid UAF bugs. Because the unregister_netdev() is well synchronized,
    it flushs out any pending queues, waits the refcount of net_device
    decreases to zero and removes net_device from kernel. There is not any
    running routines after executing unregister_netdev(). Therefore, we could
    not arouse timer from userspace again.
    
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Reviewed-by: Lin Ma <linma@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b35eb48471822a60f3dda67c57d49fd515c9a121
Author: Ye Bin <yebin10@huawei.com>
Date:   Mon Feb 28 10:48:15 2022 +0800

    ext4: fix fs corruption when tring to remove a non-empty directory with IO error
    
    commit 7aab5c84a0f6ec2290e2ba4a6b245178b1bf949a upstream.
    
    We inject IO error when rmdir non empty direcory, then got issue as follows:
    step1: mkfs.ext4 -F /dev/sda
    step2: mount /dev/sda  test
    step3: cd test
    step4: mkdir -p 1/2
    step5: rmdir 1
            [  110.920551] ext4_empty_dir: inject fault
            [  110.921926] EXT4-fs warning (device sda): ext4_rmdir:3113: inode #12:
            comm rmdir: empty directory '1' has too many links (3)
    step6: cd ..
    step7: umount test
    step8: fsck.ext4 -f /dev/sda
            e2fsck 1.42.9 (28-Dec-2013)
            Pass 1: Checking inodes, blocks, and sizes
            Pass 2: Checking directory structure
            Entry '..' in .../??? (13) has deleted/unused inode 12.  Clear<y>? yes
            Pass 3: Checking directory connectivity
            Unconnected directory inode 13 (...)
            Connect to /lost+found<y>? yes
            Pass 4: Checking reference counts
            Inode 13 ref count is 3, should be 2.  Fix<y>? yes
            Pass 5: Checking group summary information
    
            /dev/sda: ***** FILE SYSTEM WAS MODIFIED *****
            /dev/sda: 12/131072 files (0.0% non-contiguous), 26157/524288 blocks
    
    ext4_rmdir
            if (!ext4_empty_dir(inode))
                    goto end_rmdir;
    ext4_empty_dir
            bh = ext4_read_dirblock(inode, 0, DIRENT_HTREE);
            if (IS_ERR(bh))
                    return true;
    Now if read directory block failed, 'ext4_empty_dir' will return true, assume
    directory is empty. Obviously, it will lead to above issue.
    To solve this issue, if read directory block failed 'ext4_empty_dir' just
    return false. To avoid making things worse when file system is already
    corrupted, 'ext4_empty_dir' also return false.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20220228024815.3952506-1-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1e6884b2d28e8f82b9a2c18060e70e61b609133
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Sat Mar 12 11:09:47 2022 +0530

    ext4: fix ext4_fc_stats trace point
    
    commit 7af1974af0a9ba8a8ed2e3e947d87dd4d9a78d27 upstream.
    
    ftrace's __print_symbolic() requires that any enum values used in the
    symbol to string translation table be wrapped in a TRACE_DEFINE_ENUM
    so that the enum value can be decoded from the ftrace ring buffer by
    user space tooling.
    
    This patch also fixes few other problems found in this trace point.
    e.g. dereferencing structures in TP_printk which should not be done
    at any cost.
    
    Also to avoid checkpatch warnings, this patch removes those
    whitespaces/tab stops issues.
    
    Cc: stable@kernel.org
    Fixes: aa75f4d3daae ("ext4: main fast-commit commit path")
    Reported-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Reviewed-by: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
    Link: https://lore.kernel.org/r/b4b9691414c35c62e570b723e661c80674169f9a.1647057583.git.riteshh@linux.ibm.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c119fb65f6ab4fa6118b75ec99686cbdf1813130
Author: Jann Horn <jannh@google.com>
Date:   Wed Jan 26 03:57:39 2022 +0100

    coredump: Also dump first pages of non-executable ELF libraries
    
    commit 84158b7f6a0624b81800b4e7c90f7fb7fdecf66c upstream.
    
    When I rewrote the VMA dumping logic for coredumps, I changed it to
    recognize ELF library mappings based on the file being executable instead
    of the mapping having an ELF header. But turns out, distros ship many ELF
    libraries as non-executable, so the heuristic goes wrong...
    
    Restore the old behavior where FILTER(ELF_HEADERS) dumps the first page of
    any offset-0 readable mapping that starts with the ELF magic.
    
    This fix is technically layer-breaking a bit, because it checks for
    something ELF-specific in fs/coredump.c; but since we probably want to
    share this between standard ELF and FDPIC ELF anyway, I guess it's fine?
    And this also keeps the change small for backporting.
    
    Cc: stable@vger.kernel.org
    Fixes: 429a22e776a2 ("coredump: rework elf/elf_fdpic vma_dump_size() into common helper")
    Reported-by: Bill Messmer <wmessmer@microsoft.com>
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220126025739.2014888-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ad5ccc3da7a85c33664d7e2181d0ac17d622674
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Fri Jan 14 13:24:49 2022 +0200

    ACPI: properties: Consistently return -ENOENT if there are no more references
    
    commit babc92da5928f81af951663fc436997352e02d3a upstream.
    
    __acpi_node_get_property_reference() is documented to return -ENOENT if
    the caller requests a property reference at an index that does not exist,
    not -EINVAL which it actually does.
    
    Fix this by returning -ENOENT consistenly, independently of whether the
    property value is a plain reference or a package.
    
    Fixes: c343bc2ce2c6 ("ACPI: properties: Align return codes of __acpi_node_get_property_reference()")
    Cc: 4.14+ <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef3a87e0c4b0c959346a23cdcdbd174ac4f85414
Author: Nishanth Menon <nm@ti.com>
Date:   Tue Feb 15 14:10:06 2022 -0600

    arm64: dts: ti: k3-j7200: Fix gic-v3 compatible regs
    
    commit 1a307cc299430dd7139d351a3b8941f493dfa885 upstream.
    
    Though GIC ARE option is disabled for no GIC-v2 compatibility,
    Cortex-A72 is free to implement the CPU interface as long as it
    communicates with the GIC using the stream protocol. This requires
    that the SoC integration mark out the PERIPHBASE[1] as reserved area
    within the SoC. See longer discussion in [2] for further information.
    
    Update the GIC register map to indicate offsets from PERIPHBASE based
    on [3]. Without doing this, systems like kvm will not function with
    gic-v2 emulation.
    
    [1] https://developer.arm.com/documentation/100095/0002/system-control/aarch64-register-descriptions/configuration-base-address-register--el1
    [2] https://lore.kernel.org/all/87k0e0tirw.wl-maz@kernel.org/
    [3] https://developer.arm.com/documentation/100095/0002/way1382452674438
    
    Cc: stable@vger.kernel.org
    Fixes: d361ed88455f ("arm64: dts: ti: Add support for J7200 SoC")
    Reported-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220215201008.15235-4-nm@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18864e8b837acd5fd22c272d5d2783e4cdbb5fe2
Author: Nishanth Menon <nm@ti.com>
Date:   Tue Feb 15 14:10:05 2022 -0600

    arm64: dts: ti: k3-j721e: Fix gic-v3 compatible regs
    
    commit a06ed27f3bc63ab9e10007dc0118d910908eb045 upstream.
    
    Though GIC ARE option is disabled for no GIC-v2 compatibility,
    Cortex-A72 is free to implement the CPU interface as long as it
    communicates with the GIC using the stream protocol. This requires
    that the SoC integration mark out the PERIPHBASE[1] as reserved area
    within the SoC. See longer discussion in [2] for further information.
    
    Update the GIC register map to indicate offsets from PERIPHBASE based
    on [3]. Without doing this, systems like kvm will not function with
    gic-v2 emulation.
    
    [1] https://developer.arm.com/documentation/100095/0002/system-control/aarch64-register-descriptions/configuration-base-address-register--el1
    [2] https://lore.kernel.org/all/87k0e0tirw.wl-maz@kernel.org/
    [3] https://developer.arm.com/documentation/100095/0002/way1382452674438
    
    Cc: stable@vger.kernel.org # 5.10+
    Fixes: 2d87061e70de ("arm64: dts: ti: Add Support for J721E SoC")
    Reported-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220215201008.15235-3-nm@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e85fa9f4e9258b60d3215eb4fb757b79dc2fb40e
Author: Nishanth Menon <nm@ti.com>
Date:   Tue Feb 15 14:10:04 2022 -0600

    arm64: dts: ti: k3-am65: Fix gic-v3 compatible regs
    
    commit 8cae268b70f387ff9e697ccd62fb2384079124e7 upstream.
    
    Though GIC ARE option is disabled for no GIC-v2 compatibility,
    Cortex-A53 is free to implement the CPU interface as long as it
    communicates with the GIC using the stream protocol. This requires
    that the SoC integration mark out the PERIPHBASE[1] as reserved area
    within the SoC. See longer discussion in [2] for further information.
    
    Update the GIC register map to indicate offsets from PERIPHBASE based
    on [3]. Without doing this, systems like kvm will not function with
    gic-v2 emulation.
    
    [1] https://developer.arm.com/documentation/ddi0500/e/system-control/aarch64-register-descriptions/configuration-base-address-register--el1
    [2] https://lore.kernel.org/all/87k0e0tirw.wl-maz@kernel.org/
    [3] https://developer.arm.com/documentation/ddi0500/e/generic-interrupt-controller-cpu-interface/gic-programmers-model/memory-map
    
    Cc: stable@vger.kernel.org # 5.10+
    Fixes: ea47eed33a3f ("arm64: dts: ti: Add Support for AM654 SoC")
    Reported-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220215201008.15235-2-nm@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ce550a01b838a5e3d8efceb7aa79ec4c8a3fd29
Author: David Engraf <david.engraf@sysgo.com>
Date:   Fri Feb 25 11:40:08 2022 +0100

    arm64: signal: nofpsimd: Do not allocate fp/simd context when not available
    
    commit 0a32c88ddb9af30e8a16d41d7b9b824c27d29459 upstream.
    
    Commit 6d502b6ba1b2 ("arm64: signal: nofpsimd: Handle fp/simd context for
    signal frames") introduced saving the fp/simd context for signal handling
    only when support is available. But setup_sigframe_layout() always
    reserves memory for fp/simd context. The additional memory is not touched
    because preserve_fpsimd_context() is not called and thus the magic is
    invalid.
    
    This may lead to an error when parse_user_sigframe() checks the fp/simd
    area and does not find a valid magic number.
    
    Signed-off-by: David Engraf <david.engraf@sysgo.com>
    Reviwed-by: Mark Brown <broonie@kernel.org>
    Fixes: 6d502b6ba1b267b3 ("arm64: signal: nofpsimd: Handle fp/simd context for signal frames")
    Cc: <stable@vger.kernel.org> # 5.6.x
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Link: https://lore.kernel.org/r/20220225104008.820289-1-david.engraf@sysgo.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 210e7b43d4dad04ddc7782444bc5457089a85bce
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Feb 3 16:54:22 2021 +0800

    udp: call udp_encap_enable for v6 sockets when enabling encap
    
    commit a4a600dd301ccde6ea239804ec1f19364a39d643 upstream.
    
    When enabling encap for a ipv6 socket without udp_encap_needed_key
    increased, UDP GRO won't work for v4 mapped v6 address packets as
    sk will be NULL in udp4_gro_receive().
    
    This patch is to enable it by increasing udp_encap_needed_key for
    v6 sockets in udp_tunnel_encap_enable(), and correspondingly
    decrease udp_encap_needed_key in udpv6_destroy_sock().
    
    v1->v2:
      - add udp_encap_disable() and export it.
    v2->v3:
      - add the change for rxrpc and bareudp into one patch, as Alex
        suggested.
    v3->v4:
      - move rxrpc part to another patch.
    
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Tested-by: Antonio Quartulli <antonio@openvpn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1a58498ef91f5713b8a0c41a8e09d5a640d8b7f
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Aug 2 13:46:19 2021 +0200

    powerpc/kvm: Fix kvm_use_magic_page
    
    commit 0c8eb2884a42d992c7726539328b7d3568f22143 upstream.
    
    When switching from __get_user to fault_in_pages_readable, commit
    9f9eae5ce717 broke kvm_use_magic_page: like __get_user,
    fault_in_pages_readable returns 0 on success.
    
    Fixes: 9f9eae5ce717 ("powerpc/kvm: Prefer fault_in_pages_readable function")
    Cc: stable@vger.kernel.org # v4.18+
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d72866a7f5326160d2a9d945a33eb6ef1883e25d
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Mar 16 17:42:56 2022 +0100

    can: isotp: sanitize CAN ID checks in isotp_bind()
    
    commit 3ea566422cbde9610c2734980d1286ab681bb40e upstream.
    
    Syzbot created an environment that lead to a state machine status that
    can not be reached with a compliant CAN ID address configuration.
    The provided address information consisted of CAN ID 0x6000001 and 0xC28001
    which both boil down to 11 bit CAN IDs 0x001 in sending and receiving.
    
    Sanitize the SFF/EFF CAN ID values before performing the address checks.
    
    Fixes: e057dd3fc20f ("can: add ISO 15765-2:2016 transport protocol")
    Link: https://lore.kernel.org/all/20220316164258.54155-1-socketcan@hartkopp.net
    Reported-by: syzbot+2339c27f5c66c652843e@syzkaller.appspotmail.com
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fde8c5cad0881fb899a104a187c80fb8cfc8af97
Author: Lars Ellenberg <lars.ellenberg@linbit.com>
Date:   Wed Mar 30 20:55:51 2022 +0200

    drbd: fix potential silent data corruption
    
    commit f4329d1f848ac35757d9cc5487669d19dfc5979c upstream.
    
    Scenario:
    ---------
    
    bio chain generated by blk_queue_split().
    Some split bio fails and propagates its error status to the "parent" bio.
    But then the (last part of the) parent bio itself completes without error.
    
    We would clobber the already recorded error status with BLK_STS_OK,
    causing silent data corruption.
    
    Reproducer:
    -----------
    
    How to trigger this in the real world within seconds:
    
    DRBD on top of degraded parity raid,
    small stripe_cache_size, large read_ahead setting.
    Drop page cache (sysctl vm.drop_caches=1, fadvise "DONTNEED",
    umount and mount again, "reboot").
    
    Cause significant read ahead.
    
    Large read ahead request is split by blk_queue_split().
    Parts of the read ahead that are already in the stripe cache,
    or find an available stripe cache to use, can be serviced.
    Parts of the read ahead that would need "too much work",
    would need to wait for a "stripe_head" to become available,
    are rejected immediately.
    
    For larger read ahead requests that are split in many pieces, it is very
    likely that some "splits" will be serviced, but then the stripe cache is
    exhausted/busy, and the remaining ones will be rejected.
    
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Christoph Böhmwalder <christoph.boehmwalder@linbit.com>
    Cc: <stable@vger.kernel.org> # 4.13.x
    Link: https://lore.kernel.org/r/20220330185551.3553196-1-christoph.boehmwalder@linbit.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b101e74f9a72d106e87ed2a43c5f47f6e15c4a54
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sat Mar 26 10:24:56 2022 -0400

    dm integrity: set journal entry unused when shrinking device
    
    commit cc09e8a9dec4f0e8299e80a7a2a8e6f54164a10b upstream.
    
    Commit f6f72f32c22c ("dm integrity: don't replay journal data past the
    end of the device") skips journal replay if the target sector points
    beyond the end of the device. Unfortunatelly, it doesn't set the
    journal entry unused, which resulted in this BUG being triggered:
    BUG_ON(!journal_entry_is_unused(je))
    
    Fix this by calling journal_entry_set_unused() for this case.
    
    Fixes: f6f72f32c22c ("dm integrity: don't replay journal data past the end of the device")
    Cc: stable@vger.kernel.org # v5.7+
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Tested-by: Milan Broz <gmazyland@gmail.com>
    [snitzer: revised header]
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5d5804acc16fce9726fbbd006660d8642e2c459
Author: Kuan-Ying Lee <Kuan-Ying.Lee@mediatek.com>
Date:   Fri Apr 1 11:28:54 2022 -0700

    mm/kmemleak: reset tag when compare object pointer
    
    commit bfc8089f00fa526dea983844c880fa8106c33ac4 upstream.
    
    When we use HW-tag based kasan and enable vmalloc support, we hit the
    following bug.  It is due to comparison between tagged object and
    non-tagged pointer.
    
    We need to reset the kasan tag when we need to compare tagged object and
    non-tagged pointer.
    
      kmemleak: [name:kmemleak&]Scan area larger than object 0xffffffe77076f440
      CPU: 4 PID: 1 Comm: init Tainted: G S      W         5.15.25-android13-0-g5cacf919c2bc #1
      Hardware name: MT6983(ENG) (DT)
      Call trace:
       add_scan_area+0xc4/0x244
       kmemleak_scan_area+0x40/0x9c
       layout_and_allocate+0x1e8/0x288
       load_module+0x2c8/0xf00
       __se_sys_finit_module+0x190/0x1d0
       __arm64_sys_finit_module+0x20/0x30
       invoke_syscall+0x60/0x170
       el0_svc_common+0xc8/0x114
       do_el0_svc+0x28/0xa0
       el0_svc+0x60/0xf8
       el0t_64_sync_handler+0x88/0xec
       el0t_64_sync+0x1b4/0x1b8
      kmemleak: [name:kmemleak&]Object 0xf5ffffe77076b000 (size 32768):
      kmemleak: [name:kmemleak&]  comm "init", pid 1, jiffies 4294894197
      kmemleak: [name:kmemleak&]  min_count = 0
      kmemleak: [name:kmemleak&]  count = 0
      kmemleak: [name:kmemleak&]  flags = 0x1
      kmemleak: [name:kmemleak&]  checksum = 0
      kmemleak: [name:kmemleak&]  backtrace:
           module_alloc+0x9c/0x120
           move_module+0x34/0x19c
           layout_and_allocate+0x1c4/0x288
           load_module+0x2c8/0xf00
           __se_sys_finit_module+0x190/0x1d0
           __arm64_sys_finit_module+0x20/0x30
           invoke_syscall+0x60/0x170
           el0_svc_common+0xc8/0x114
           do_el0_svc+0x28/0xa0
           el0_svc+0x60/0xf8
           el0t_64_sync_handler+0x88/0xec
           el0t_64_sync+0x1b4/0x1b8
    
    Link: https://lkml.kernel.org/r/20220318034051.30687-1-Kuan-Ying.Lee@mediatek.com
    Signed-off-by: Kuan-Ying Lee <Kuan-Ying.Lee@mediatek.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Matthias Brugger <matthias.bgg@gmail.com>
    Cc: Chinwen Chang <chinwen.chang@mediatek.com>
    Cc: Nicholas Tang <nicholas.tang@mediatek.com>
    Cc: Yee Lee <yee.lee@mediatek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc2f58b8e47cc01cb75e13e29930e4e547d6bc5c
Author: Rik van Riel <riel@surriel.com>
Date:   Fri Apr 1 11:28:42 2022 -0700

    mm,hwpoison: unmap poisoned page before invalidation
    
    commit 3149c79f3cb0e2e3bafb7cfadacec090cbd250d3 upstream.
    
    In some cases it appears the invalidation of a hwpoisoned page fails
    because the page is still mapped in another process.  This can cause a
    program to be continuously restarted and die when it page faults on the
    page that was not invalidated.  Avoid that problem by unmapping the
    hwpoisoned page when we find it.
    
    Another issue is that sometimes we end up oopsing in finish_fault, if
    the code tries to do something with the now-NULL vmf->page.  I did not
    hit this error when submitting the previous patch because there are
    several opportunities for alloc_set_pte to bail out before accessing
    vmf->page, and that apparently happened on those systems, and most of
    the time on other systems, too.
    
    However, across several million systems that error does occur a handful
    of times a day.  It can be avoided by returning VM_FAULT_NOPAGE which
    will cause do_read_fault to return before calling finish_fault.
    
    Link: https://lkml.kernel.org/r/20220325161428.5068d97e@imladris.surriel.com
    Fixes: e53ac7374e64 ("mm: invalidate hwpoison page cache page in fault path")
    Signed-off-by: Rik van Riel <riel@surriel.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Tested-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 608c501d70bf94edc2730e0fc8507461d845bb89
Author: Charan Teja Kalla <quic_charante@quicinc.com>
Date:   Fri Apr 1 11:28:12 2022 -0700

    Revert "mm: madvise: skip unmapped vma holes passed to process_madvise"
    
    commit e6b0a7b357659c332231621e4315658d062c23ee upstream.
    
    This reverts commit 08095d6310a7 ("mm: madvise: skip unmapped vma holes
    passed to process_madvise") as process_madvise() fails to return the
    exact processed bytes in other cases too.
    
    As an example: if process_madvise() hits mlocked pages after processing
    some initial bytes passed in [start, end), it just returns EINVAL
    although some bytes are processed.  Thus making an exception only for
    ENOMEM is partially fixing the problem of returning the proper advised
    bytes.
    
    Thus revert this patch and return proper bytes advised.
    
    Link: https://lkml.kernel.org/r/e73da1304a88b6a8a11907045117cccf4c2b8374.1648046642.git.quic_charante@quicinc.com
    Fixes: 08095d6310a7ce ("mm: madvise: skip unmapped vma holes passed to process_madvise")
    Signed-off-by: Charan Teja Kalla <quic_charante@quicinc.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Suren Baghdasaryan <surenb@google.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b354e30326026dd2314b70ed829a83c1046e776
Author: Charan Teja Kalla <quic_charante@quicinc.com>
Date:   Tue Mar 22 14:46:44 2022 -0700

    mm: madvise: return correct bytes advised with process_madvise
    
    commit 5bd009c7c9a9e888077c07535dc0c70aeab242c3 upstream.
    
    Patch series "mm: madvise: return correct bytes processed with
    process_madvise", v2.  With the process_madvise(), always choose to return
    non zero processed bytes over an error.  This can help the user to know on
    which VMA, passed in the 'struct iovec' vector list, is failed to advise
    thus can take the decission of retrying/skipping on that VMA.
    
    This patch (of 2):
    
    The process_madvise() system call returns error even after processing some
    VMA's passed in the 'struct iovec' vector list which leaves the user
    confused to know where to restart the advise next.  It is also against
    this syscall man page[1] documentation where it mentions that "return
    value may be less than the total number of requested bytes, if an error
    occurred after some iovec elements were already processed.".
    
    Consider a user passed 10 VMA's in the 'struct iovec' vector list of which
    9 are processed but one.  Then it just returns the error caused on that
    failed VMA despite the first 9 VMA's processed, leaving the user confused
    about on which VMA it is failed.  Returning the number of bytes processed
    here can help the user to know which VMA it is failed on and thus can
    retry/skip the advise on that VMA.
    
    [1]https://man7.org/linux/man-pages/man2/process_madvise.2.html.
    
    Link: https://lkml.kernel.org/r/cover.1647008754.git.quic_charante@quicinc.com
    Link: https://lkml.kernel.org/r/125b61a0edcee5c2db8658aed9d06a43a19ccafc.1647008754.git.quic_charante@quicinc.com
    Fixes: ecb8ac8b1f14("mm/madvise: introduce process_madvise() syscall: an external memory hinting API")
    Signed-off-by: Charan Teja Kalla <quic_charante@quicinc.com>
    Cc: Suren Baghdasaryan <surenb@google.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 928c06c114082513f69302654af883affc4bba5a
Author: Charan Teja Kalla <quic_charante@quicinc.com>
Date:   Tue Mar 22 14:46:48 2022 -0700

    mm: madvise: skip unmapped vma holes passed to process_madvise
    
    commit 08095d6310a7ce43256b4251577bc66a25c6e1a6 upstream.
    
    The process_madvise() system call is expected to skip holes in vma passed
    through 'struct iovec' vector list.  But do_madvise, which
    process_madvise() calls for each vma, returns ENOMEM in case of unmapped
    holes, despite the VMA is processed.
    
    Thus process_madvise() should treat ENOMEM as expected and consider the
    VMA passed to as processed and continue processing other vma's in the
    vector list.  Returning -ENOMEM to user, despite the VMA is processed,
    will be unable to figure out where to start the next madvise.
    
    Link: https://lkml.kernel.org/r/4f091776142f2ebf7b94018146de72318474e686.1647008754.git.quic_charante@quicinc.com
    Fixes: ecb8ac8b1f14("mm/madvise: introduce process_madvise() syscall: an external memory hinting API")
    Signed-off-by: Charan Teja Kalla <quic_charante@quicinc.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Suren Baghdasaryan <surenb@google.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51f7557c3cb905b4de13558ab65b9762485819c4
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Mar 30 14:13:33 2022 +0800

    ALSA: hda/realtek: Fix audio regression on Mi Notebook Pro 2020
    
    commit f30741cded62f87bb4b1cc58bc627f076abcaba8 upstream.
    
    Commit 5aec98913095 ("ALSA: hda/realtek - ALC236 headset MIC recording
    issue") is to solve recording issue met on AL236, by matching codec
    variant ALC269_TYPE_ALC257 and ALC269_TYPE_ALC256.
    
    This match can be too broad and Mi Notebook Pro 2020 is broken by the
    patch.
    
    Instead, use codec ID to be narrow down the scope, in order to make
    ALC256 unaffected.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=215484
    Fixes: 5aec98913095 ("ALSA: hda/realtek - ALC236 headset MIC recording issue")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20220330061335.1015533-1-kai.heng.feng@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9017201e8d8c6d1472273361389ed431188584a0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 30 14:09:03 2022 +0200

    ALSA: pcm: Fix potential AB/BA lock with buffer_mutex and mmap_lock
    
    commit bc55cfd5718c7c23e5524582e9fa70b4d10f2433 upstream.
    
    syzbot caught a potential deadlock between the PCM
    runtime->buffer_mutex and the mm->mmap_lock.  It was brought by the
    recent fix to cover the racy read/write and other ioctls, and in that
    commit, I overlooked a (hopefully only) corner case that may take the
    revert lock, namely, the OSS mmap.  The OSS mmap operation
    exceptionally allows to re-configure the parameters inside the OSS
    mmap syscall, where mm->mmap_mutex is already held.  Meanwhile, the
    copy_from/to_user calls at read/write operations also take the
    mm->mmap_lock internally, hence it may lead to a AB/BA deadlock.
    
    A similar problem was already seen in the past and we fixed it with a
    refcount (in commit b248371628aa).  The former fix covered only the
    call paths with OSS read/write and OSS ioctls, while we need to cover
    the concurrent access via both ALSA and OSS APIs now.
    
    This patch addresses the problem above by replacing the buffer_mutex
    lock in the read/write operations with a refcount similar as we've
    used for OSS.  The new field, runtime->buffer_accessing, keeps the
    number of concurrent read/write operations.  Unlike the former
    buffer_mutex protection, this protects only around the
    copy_from/to_user() calls; the other codes are basically protected by
    the PCM stream lock.  The refcount can be a negative, meaning blocked
    by the ioctls.  If a negative value is seen, the read/write aborts
    with -EBUSY.  In the ioctl side, OTOH, they check this refcount, too,
    and set to a negative value for blocking unless it's already being
    accessed.
    
    Reported-by: syzbot+6e5c88838328e99c7e1c@syzkaller.appspotmail.com
    Fixes: dca947d4d26d ("ALSA: pcm: Fix races among concurrent read/write and buffer changes")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/000000000000381a0d05db622a81@google.com
    Link: https://lore.kernel.org/r/20220330120903.4738-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b7a03d8b5f885ee037b26eb068008daaa15bfd9
Author: Mohan Kumar <mkumard@nvidia.com>
Date:   Tue Mar 29 21:29:40 2022 +0530

    ALSA: hda: Avoid unsol event during RPM suspending
    
    commit 6ddc2f749621d5d45ca03edc9f0616bcda136d29 upstream.
    
    There is a corner case with unsol event handling during codec runtime
    suspending state. When the codec runtime suspend call initiated, the
    codec->in_pm atomic variable would be 0, currently the codec runtime
    suspend function calls snd_hdac_enter_pm() which will just increments
    the codec->in_pm atomic variable. Consider unsol event happened just
    after this step and before snd_hdac_leave_pm() in the codec runtime
    suspend function. The snd_hdac_power_up_pm() in the unsol event
    flow in hdmi_present_sense_via_verbs() function would just increment
    the codec->in_pm atomic variable without calling pm_runtime_get_sync
    function.
    
    As codec runtime suspend flow is already in progress and in parallel
    unsol event is also accessing the codec verbs, as soon as codec
    suspend flow completes and clocks are  switched off before completing
    the unsol event handling as both functions doesn't wait for each other.
    This will result in below errors
    
    [  589.428020] tegra-hda 3510000.hda: azx_get_response timeout, switching
    to polling mode: last cmd=0x505f2f57
    [  589.428344] tegra-hda 3510000.hda: spurious response 0x80000074:0x5,
    last cmd=0x505f2f57
    [  589.428547] tegra-hda 3510000.hda: spurious response 0x80000065:0x5,
    last cmd=0x505f2f57
    
    To avoid this, the unsol event flow should not perform any codec verb
    related operations during RPM_SUSPENDING state.
    
    Signed-off-by: Mohan Kumar <mkumard@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220329155940.26331-1-mkumard@nvidia.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a55e2d74232f63e411d979d0141009ba03e16d97
Author: Xiaomeng Tong <xiam0nd.tong@gmail.com>
Date:   Sun Mar 27 14:08:22 2022 +0800

    ALSA: cs4236: fix an incorrect NULL check on list iterator
    
    commit 0112f822f8a6d8039c94e0bc9b264d7ffc5d4704 upstream.
    
    The bug is here:
            err = snd_card_cs423x_pnp(dev, card->private_data, pdev, cdev);
    
    The list iterator value 'cdev' will *always* be set and non-NULL
    by list_for_each_entry(), so it is incorrect to assume that the
    iterator value will be NULL if the list is empty or no element
    is found.
    
    To fix the bug, use a new variable 'iter' as the list iterator,
    while use the original variable 'cdev' as a dedicated pointer
    to point to the found element. And snd_card_cs423x_pnp() itself
    has NULL check for cdev.
    
    Cc: stable@vger.kernel.org
    Fixes: c2b73d1458014 ("ALSA: cs4236: cs4232 and cs4236 driver merge to solve PnP BIOS detection")
    Signed-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Link: https://lore.kernel.org/r/20220327060822.4735-1-xiam0nd.tong@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edefc4b2a8e8310eee8e2b1714709ad5b2a93928
Author: Paulo Alcantara <pc@cjr.nz>
Date:   Tue Mar 29 16:20:06 2022 -0300

    cifs: fix NULL ptr dereference in smb2_ioctl_query_info()
    
    commit d6f5e358452479fa8a773b5c6ccc9e4ec5a20880 upstream.
    
    When calling smb2_ioctl_query_info() with invalid
    smb_query_info::flags, a NULL ptr dereference is triggered when trying
    to kfree() uninitialised rqst[n].rq_iov array.
    
    This also fixes leaked paths that are created in SMB2_open_init()
    which required SMB2_open_free() to properly free them.
    
    Here is a small C reproducer that triggers it
    
            #include <stdio.h>
            #include <stdlib.h>
            #include <stdint.h>
            #include <unistd.h>
            #include <fcntl.h>
            #include <sys/ioctl.h>
    
            #define die(s) perror(s), exit(1)
            #define QUERY_INFO 0xc018cf07
    
            int main(int argc, char *argv[])
            {
                    int fd;
    
                    if (argc < 2)
                            exit(1);
                    fd = open(argv[1], O_RDONLY);
                    if (fd == -1)
                            die("open");
                    if (ioctl(fd, QUERY_INFO, (uint32_t[]) { 0, 0, 0, 4, 0, 0}) == -1)
                            die("ioctl");
                    close(fd);
                    return 0;
            }
    
            mount.cifs //srv/share /mnt -o ...
            gcc repro.c && ./a.out /mnt/f0
    
            [ 1832.124468] CIFS: VFS: \\w22-dc.zelda.test\test Invalid passthru query flags: 0x4
            [ 1832.125043] general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI
            [ 1832.125764] KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
            [ 1832.126241] CPU: 3 PID: 1133 Comm: a.out Not tainted 5.17.0-rc8 #2
            [ 1832.126630] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.15.0-0-g2dd4b9b-rebuilt.opensuse.org 04/01/2014
            [ 1832.127322] RIP: 0010:smb2_ioctl_query_info+0x7a3/0xe30 [cifs]
            [ 1832.127749] Code: 00 00 00 fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 6c 05 00 00 48 b8 00 00 00 00 00 fc ff df 4d 8b 74 24 28 4c 89 f2 48 c1 ea 03 <80> 3c 02 00 0f 85 cb 04 00 00 49 8b 3e e8 bb fc fa ff 48 89 da 48
            [ 1832.128911] RSP: 0018:ffffc90000957b08 EFLAGS: 00010256
            [ 1832.129243] RAX: dffffc0000000000 RBX: ffff888117e9b850 RCX: ffffffffa020580d
            [ 1832.129691] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffffa043a2c0
            [ 1832.130137] RBP: ffff888117e9b878 R08: 0000000000000001 R09: 0000000000000003
            [ 1832.130585] R10: fffffbfff4087458 R11: 0000000000000001 R12: ffff888117e9b800
            [ 1832.131037] R13: 00000000ffffffea R14: 0000000000000000 R15: ffff888117e9b8a8
            [ 1832.131485] FS:  00007fcee9900740(0000) GS:ffff888151a00000(0000) knlGS:0000000000000000
            [ 1832.131993] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
            [ 1832.132354] CR2: 00007fcee9a1ef5e CR3: 0000000114cd2000 CR4: 0000000000350ee0
            [ 1832.132801] Call Trace:
            [ 1832.132962]  <TASK>
            [ 1832.133104]  ? smb2_query_reparse_tag+0x890/0x890 [cifs]
            [ 1832.133489]  ? cifs_mapchar+0x460/0x460 [cifs]
            [ 1832.133822]  ? rcu_read_lock_sched_held+0x3f/0x70
            [ 1832.134125]  ? cifs_strndup_to_utf16+0x15b/0x250 [cifs]
            [ 1832.134502]  ? lock_downgrade+0x6f0/0x6f0
            [ 1832.134760]  ? cifs_convert_path_to_utf16+0x198/0x220 [cifs]
            [ 1832.135170]  ? smb2_check_message+0x1080/0x1080 [cifs]
            [ 1832.135545]  cifs_ioctl+0x1577/0x3320 [cifs]
            [ 1832.135864]  ? lock_downgrade+0x6f0/0x6f0
            [ 1832.136125]  ? cifs_readdir+0x2e60/0x2e60 [cifs]
            [ 1832.136468]  ? rcu_read_lock_sched_held+0x3f/0x70
            [ 1832.136769]  ? __rseq_handle_notify_resume+0x80b/0xbe0
            [ 1832.137096]  ? __up_read+0x192/0x710
            [ 1832.137327]  ? __ia32_sys_rseq+0xf0/0xf0
            [ 1832.137578]  ? __x64_sys_openat+0x11f/0x1d0
            [ 1832.137850]  __x64_sys_ioctl+0x127/0x190
            [ 1832.138103]  do_syscall_64+0x3b/0x90
            [ 1832.138378]  entry_SYSCALL_64_after_hwframe+0x44/0xae
            [ 1832.138702] RIP: 0033:0x7fcee9a253df
            [ 1832.138937] Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 10 00 00 00 48 89 44 24 08 48 8d 44 24 20 48 89 44 24 10 b8 10 00 00 00 0f 05 <41> 89 c0 3d 00 f0 ff ff 77 1f 48 8b 44 24 18 64 48 2b 04 25 28 00
            [ 1832.140107] RSP: 002b:00007ffeba94a8a0 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
            [ 1832.140606] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fcee9a253df
            [ 1832.141058] RDX: 00007ffeba94a910 RSI: 00000000c018cf07 RDI: 0000000000000003
            [ 1832.141503] RBP: 00007ffeba94a930 R08: 00007fcee9b24db0 R09: 00007fcee9b45c4e
            [ 1832.141948] R10: 00007fcee9918d40 R11: 0000000000000246 R12: 00007ffeba94aa48
            [ 1832.142396] R13: 0000000000401176 R14: 0000000000403df8 R15: 00007fcee9b78000
            [ 1832.142851]  </TASK>
            [ 1832.142994] Modules linked in: cifs cifs_arc4 cifs_md4 bpf_preload [last unloaded: cifs]
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9963ccea6087268e1275b992dca5d0dd4b938765
Author: Paulo Alcantara <pc@cjr.nz>
Date:   Tue Mar 29 16:20:05 2022 -0300

    cifs: prevent bad output lengths in smb2_ioctl_query_info()
    
    commit b92e358757b91c2827af112cae9af513f26a3f34 upstream.
    
    When calling smb2_ioctl_query_info() with
    smb_query_info::flags=PASSTHRU_FSCTL and
    smb_query_info::output_buffer_length=0, the following would return
    0x10
    
            buffer = memdup_user(arg + sizeof(struct smb_query_info),
                                 qi.output_buffer_length);
            if (IS_ERR(buffer)) {
                    kfree(vars);
                    return PTR_ERR(buffer);
            }
    
    rather than a valid pointer thus making IS_ERR() check fail.  This
    would then cause a NULL ptr deference in @buffer when accessing it
    later in smb2_ioctl_query_ioctl().  While at it, prevent having a
    @buffer smaller than 8 bytes to correctly handle SMB2_SET_INFO
    FileEndOfFileInformation requests when
    smb_query_info::flags=PASSTHRU_SET_INFO.
    
    Here is a small C reproducer which triggers a NULL ptr in @buffer when
    passing an invalid smb_query_info::flags
    
            #include <stdio.h>
            #include <stdlib.h>
            #include <stdint.h>
            #include <unistd.h>
            #include <fcntl.h>
            #include <sys/ioctl.h>
    
            #define die(s) perror(s), exit(1)
            #define QUERY_INFO 0xc018cf07
    
            int main(int argc, char *argv[])
            {
                    int fd;
    
                    if (argc < 2)
                            exit(1);
                    fd = open(argv[1], O_RDONLY);
                    if (fd == -1)
                            die("open");
                    if (ioctl(fd, QUERY_INFO, (uint32_t[]) { 0, 0, 0, 4, 0, 0}) == -1)
                            die("ioctl");
                    close(fd);
                    return 0;
            }
    
            mount.cifs //srv/share /mnt -o ...
            gcc repro.c && ./a.out /mnt/f0
    
            [  114.138620] general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI
            [  114.139310] KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
            [  114.139775] CPU: 2 PID: 995 Comm: a.out Not tainted 5.17.0-rc8 #1
            [  114.140148] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.15.0-0-g2dd4b9b-rebuilt.opensuse.org 04/01/2014
            [  114.140818] RIP: 0010:smb2_ioctl_query_info+0x206/0x410 [cifs]
            [  114.141221] Code: 00 00 00 00 fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 c8 01 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 7b 28 4c 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 9c 01 00 00 49 8b 3f e8 58 02 fb ff 48 8b 14 24
            [  114.142348] RSP: 0018:ffffc90000b47b00 EFLAGS: 00010256
            [  114.142692] RAX: dffffc0000000000 RBX: ffff888115503200 RCX: ffffffffa020580d
            [  114.143119] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffffa043a380
            [  114.143544] RBP: ffff888115503278 R08: 0000000000000001 R09: 0000000000000003
            [  114.143983] R10: fffffbfff4087470 R11: 0000000000000001 R12: ffff888115503288
            [  114.144424] R13: 00000000ffffffea R14: ffff888115503228 R15: 0000000000000000
            [  114.144852] FS:  00007f7aeabdf740(0000) GS:ffff888151600000(0000) knlGS:0000000000000000
            [  114.145338] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
            [  114.145692] CR2: 00007f7aeacfdf5e CR3: 000000012000e000 CR4: 0000000000350ee0
            [  114.146131] Call Trace:
            [  114.146291]  <TASK>
            [  114.146432]  ? smb2_query_reparse_tag+0x890/0x890 [cifs]
            [  114.146800]  ? cifs_mapchar+0x460/0x460 [cifs]
            [  114.147121]  ? rcu_read_lock_sched_held+0x3f/0x70
            [  114.147412]  ? cifs_strndup_to_utf16+0x15b/0x250 [cifs]
            [  114.147775]  ? dentry_path_raw+0xa6/0xf0
            [  114.148024]  ? cifs_convert_path_to_utf16+0x198/0x220 [cifs]
            [  114.148413]  ? smb2_check_message+0x1080/0x1080 [cifs]
            [  114.148766]  ? rcu_read_lock_sched_held+0x3f/0x70
            [  114.149065]  cifs_ioctl+0x1577/0x3320 [cifs]
            [  114.149371]  ? lock_downgrade+0x6f0/0x6f0
            [  114.149631]  ? cifs_readdir+0x2e60/0x2e60 [cifs]
            [  114.149956]  ? rcu_read_lock_sched_held+0x3f/0x70
            [  114.150250]  ? __rseq_handle_notify_resume+0x80b/0xbe0
            [  114.150562]  ? __up_read+0x192/0x710
            [  114.150791]  ? __ia32_sys_rseq+0xf0/0xf0
            [  114.151025]  ? __x64_sys_openat+0x11f/0x1d0
            [  114.151296]  __x64_sys_ioctl+0x127/0x190
            [  114.151549]  do_syscall_64+0x3b/0x90
            [  114.151768]  entry_SYSCALL_64_after_hwframe+0x44/0xae
            [  114.152079] RIP: 0033:0x7f7aead043df
            [  114.152306] Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24 10 00 00 00 48 89 44 24 08 48 8d 44 24 20 48 89 44 24 10 b8 10 00 00 00 0f 05 <41> 89 c0 3d 00 f0 ff ff 77 1f 48 8b 44 24 18 64 48 2b 04 25 28 00
            [  114.153431] RSP: 002b:00007ffc2e0c1f80 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
            [  114.153890] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f7aead043df
            [  114.154315] RDX: 00007ffc2e0c1ff0 RSI: 00000000c018cf07 RDI: 0000000000000003
            [  114.154747] RBP: 00007ffc2e0c2010 R08: 00007f7aeae03db0 R09: 00007f7aeae24c4e
            [  114.155192] R10: 00007f7aeabf7d40 R11: 0000000000000246 R12: 00007ffc2e0c2128
            [  114.155642] R13: 0000000000401176 R14: 0000000000403df8 R15: 00007f7aeae57000
            [  114.156071]  </TASK>
            [  114.156218] Modules linked in: cifs cifs_arc4 cifs_md4 bpf_preload
            [  114.156608] ---[ end trace 0000000000000000 ]---
            [  114.156898] RIP: 0010:smb2_ioctl_query_info+0x206/0x410 [cifs]
            [  114.157792] Code: 00 00 00 00 fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 c8 01 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 7b 28 4c 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 9c 01 00 00 49 8b 3f e8 58 02 fb ff 48 8b 14 24
            [  114.159293] RSP: 0018:ffffc90000b47b00 EFLAGS: 00010256
            [  114.159641] RAX: dffffc0000000000 RBX: ffff888115503200 RCX: ffffffffa020580d
            [  114.160093] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffffa043a380
            [  114.160699] RBP: ffff888115503278 R08: 0000000000000001 R09: 0000000000000003
            [  114.161196] R10: fffffbfff4087470 R11: 0000000000000001 R12: ffff888115503288
            [  114.155642] R13: 0000000000401176 R14: 0000000000403df8 R15: 00007f7aeae57000
            [  114.156071]  </TASK>
            [  114.156218] Modules linked in: cifs cifs_arc4 cifs_md4 bpf_preload
            [  114.156608] ---[ end trace 0000000000000000 ]---
            [  114.156898] RIP: 0010:smb2_ioctl_query_info+0x206/0x410 [cifs]
            [  114.157792] Code: 00 00 00 00 fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 c8 01 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 7b 28 4c 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 9c 01 00 00 49 8b 3f e8 58 02 fb ff 48 8b 14 24
            [  114.159293] RSP: 0018:ffffc90000b47b00 EFLAGS: 00010256
            [  114.159641] RAX: dffffc0000000000 RBX: ffff888115503200 RCX: ffffffffa020580d
            [  114.160093] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffffa043a380
            [  114.160699] RBP: ffff888115503278 R08: 0000000000000001 R09: 0000000000000003
            [  114.161196] R10: fffffbfff4087470 R11: 0000000000000001 R12: ffff888115503288
            [  114.161823] R13: 00000000ffffffea R14: ffff888115503228 R15: 0000000000000000
            [  114.162274] FS:  00007f7aeabdf740(0000) GS:ffff888151600000(0000) knlGS:0000000000000000
            [  114.162853] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
            [  114.163218] CR2: 00007f7aeacfdf5e CR3: 000000012000e000 CR4: 0000000000350ee0
            [  114.163691] Kernel panic - not syncing: Fatal exception
            [  114.164087] Kernel Offset: disabled
            [  114.164316] ---[ end Kernel panic - not syncing: Fatal exception ]---
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b75198eddab164931f5540fc60cee9694e615b17
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Thu Mar 31 21:15:36 2022 -0700

    Revert "Input: clear BTN_RIGHT/MIDDLE on buttonpads"
    
    commit 8b188fba75195745026e11d408e4a7e94e01d701 upstream.
    
    This reverts commit 37ef4c19b4c659926ce65a7ac709ceaefb211c40.
    
    The touchpad present in the Dell Precision 7550 and 7750 laptops
    reports a HID_DG_BUTTONTYPE of type MT_BUTTONTYPE_CLICKPAD. However,
    the device is not a clickpad, it is a touchpad with physical buttons.
    
    In order to fix this issue, a quirk for the device was introduced in
    libinput [1] [2] to disable the INPUT_PROP_BUTTONPAD property:
    
            [Precision 7x50 Touchpad]
            MatchBus=i2c
            MatchUdevType=touchpad
            MatchDMIModalias=dmi:*svnDellInc.:pnPrecision7?50*
            AttrInputPropDisable=INPUT_PROP_BUTTONPAD
    
    However, because of the change introduced in 37ef4c19b4 ("Input: clear
    BTN_RIGHT/MIDDLE on buttonpads") the BTN_RIGHT key bit is not mapped
    anymore breaking the device right click button and making impossible to
    workaround it in user space.
    
    In order to avoid breakage on other present or future devices, revert
    the patch causing the issue.
    
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Peter Hutterer <peter.hutterer@who-t.net>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220321184404.20025-1-jose.exposito89@gmail.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34bc1f69bf569309e76e5dfd574ee9034ceca147
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Mon Mar 14 10:06:52 2022 +0100

    riscv: Increase stack size under KASAN
    
    commit b81d591386c3a50b96dddcf663628ea0df0bf2b3 upstream.
    
    KASAN requires more stack space because of compiler instrumentation.
    Increase stack size as other arches do.
    
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: syzbot+0600986d88e2d4d7ebb8@syzkaller.appspotmail.com
    Fixes: 8ad8b72721d0 ("riscv: Add KASAN support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24b9b8e95ca1bc87e055cf3ee4f8c502c10ef938
Author: Nikita Shubin <n.shubin@yadro.com>
Date:   Fri Mar 11 09:58:15 2022 +0300

    riscv: Fix fill_callchain return value
    
    commit 2b2b574ac587ec5bd7716a356492a85ab8b0ce9f upstream.
    
    perf_callchain_store return 0 on success, -1 otherwise,
    fix fill_callchain to return correct bool value.
    
    Fixes: dbeb90b0c1eb ("riscv: Add perf callchain support")
    Signed-off-by: Nikita Shubin <n.shubin@yadro.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f8c0bd0a4cb5f8703aad688788cf0ea957844bc
Author: Manish Chopra <manishc@marvell.com>
Date:   Wed Mar 2 02:52:22 2022 -0800

    qed: validate and restrict untrusted VFs vlan promisc mode
    
    commit cbcc44db2cf7b836896733acc0e5ea966136ed22 upstream.
    
    Today when VFs are put in promiscuous mode, they can request PF
    to configure device for them to receive all VLANs traffic regardless
    of what vlan is configured by the PF (via ip link) and PF allows this
    config request regardless of whether VF is trusted or not.
    
    From security POV, when VLAN is configured for VF through PF (via ip link),
    honour such config requests from VF only when they are configured to be
    trusted, otherwise restrict such VFs vlan promisc mode config.
    
    Cc: stable@vger.kernel.org
    Fixes: f990c82c385b ("qed*: Add support for ndo_set_vf_trust")
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3af3d431920ad423503fc32751446b463a4af42
Author: Manish Chopra <manishc@marvell.com>
Date:   Wed Mar 2 02:52:21 2022 -0800

    qed: display VF trust config
    
    commit 4e6e6bec7440b9b76f312f28b1f4e944eebb3abc upstream.
    
    Driver does support SR-IOV VFs trust configuration but
    it does not display it when queried via ip link utility.
    
    Cc: stable@vger.kernel.org
    Fixes: f990c82c385b ("qed*: Add support for ndo_set_vf_trust")
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa28075f06b821a7988053cb9b77edc0c9ea4f0d
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sun Feb 20 12:17:40 2022 +0900

    scsi: libsas: Fix sas_ata_qc_issue() handling of NCQ NON DATA commands
    
    commit 8454563e4c2aafbfb81a383ab423ea8b9b430a25 upstream.
    
    To detect for the DMA_NONE (no data transfer) DMA direction,
    sas_ata_qc_issue() tests if the command protocol is ATA_PROT_NODATA.  This
    test does not include the ATA_CMD_NCQ_NON_DATA command as this command
    protocol is defined as ATA_PROT_NCQ_NODATA (equal to ATA_PROT_FLAG_NCQ) and
    not as ATA_PROT_NODATA.
    
    To include both NCQ and non-NCQ commands when testing for the DMA_NONE DMA
    direction, use "!ata_is_data()".
    
    Link: https://lore.kernel.org/r/20220220031810.738362-2-damien.lemoal@opensource.wdc.com
    Fixes: 176ddd89171d ("scsi: libsas: Reset num_scatter if libata marks qc as NODATA")
    Cc: stable@vger.kernel.org
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bcefc78c87409da495eda4afe12b37ef5aa9ea1
Author: Hugh Dickins <hughd@google.com>
Date:   Tue Mar 22 14:45:59 2022 -0700

    mempolicy: mbind_range() set_policy() after vma_merge()
    
    commit 4e0906008cdb56381638aa17d9c32734eae6d37a upstream.
    
    v2.6.34 commit 9d8cebd4bcd7 ("mm: fix mbind vma merge problem") introduced
    vma_merge() to mbind_range(); but unlike madvise, mlock and mprotect, it
    put a "continue" to next vma where its precedents go to update flags on
    current vma before advancing: that left vma with the wrong setting in the
    infamous vma_merge() case 8.
    
    v3.10 commit 1444f92c8498 ("mm: merging memory blocks resets mempolicy")
    tried to fix that in vma_adjust(), without fully understanding the issue.
    
    v3.11 commit 3964acd0dbec ("mm: mempolicy: fix mbind_range() &&
    vma_adjust() interaction") reverted that, and went about the fix in the
    right way, but chose to optimize out an unnecessary mpol_dup() with a
    prior mpol_equal() test.  But on tmpfs, that also pessimized out the vital
    call to its ->set_policy(), leaving the new mbind unenforced.
    
    The user visible effect was that the pages got allocated on the local
    node (happened to be 0), after the mbind() caller had specifically
    asked for them to be allocated on node 1.  There was not any page
    migration involved in the case reported: the pages simply got allocated
    on the wrong node.
    
    Just delete that optimization now (though it could be made conditional on
    vma not having a set_policy).  Also remove the "next" variable: it turned
    out to be blameless, but also pointless.
    
    Link: https://lkml.kernel.org/r/319e4db9-64ae-4bca-92f0-ade85d342ff@google.com
    Fixes: 3964acd0dbec ("mm: mempolicy: fix mbind_range() && vma_adjust() interaction")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Reviewed-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa37c1714367e530f592d451607433ab58d56643
Author: Rik van Riel <riel@surriel.com>
Date:   Tue Mar 22 14:44:09 2022 -0700

    mm: invalidate hwpoison page cache page in fault path
    
    commit e53ac7374e64dede04d745ff0e70ff5048378d1f upstream.
    
    Sometimes the page offlining code can leave behind a hwpoisoned clean
    page cache page.  This can lead to programs being killed over and over
    and over again as they fault in the hwpoisoned page, get killed, and
    then get re-spawned by whatever wanted to run them.
    
    This is particularly embarrassing when the page was offlined due to
    having too many corrected memory errors.  Now we are killing tasks due
    to them trying to access memory that probably isn't even corrupted.
    
    This problem can be avoided by invalidating the page from the page fault
    handler, which already has a branch for dealing with these kinds of
    pages.  With this patch we simply pretend the page fault was successful
    if the page was invalidated, return to userspace, incur another page
    fault, read in the file from disk (to a new memory page), and then
    everything works again.
    
    Link: https://lkml.kernel.org/r/20220212213740.423efcea@imladris.surriel.com
    Signed-off-by: Rik van Riel <riel@surriel.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Acked-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7188e7c96f39ae40b8f8d6a807d3f338fb1927ac
Author: Alistair Popple <apopple@nvidia.com>
Date:   Tue Mar 22 14:43:26 2022 -0700

    mm/pages_alloc.c: don't create ZONE_MOVABLE beyond the end of a node
    
    commit ddbc84f3f595cf1fc8234a191193b5d20ad43938 upstream.
    
    ZONE_MOVABLE uses the remaining memory in each node.  Its starting pfn
    is also aligned to MAX_ORDER_NR_PAGES.  It is possible for the remaining
    memory in a node to be less than MAX_ORDER_NR_PAGES, meaning there is
    not enough room for ZONE_MOVABLE on that node.
    
    Unfortunately this condition is not checked for.  This leads to
    zone_movable_pfn[] getting set to a pfn greater than the last pfn in a
    node.
    
    calculate_node_totalpages() then sets zone->present_pages to be greater
    than zone->spanned_pages which is invalid, as spanned_pages represents
    the maximum number of pages in a zone assuming no holes.
    
    Subsequently it is possible free_area_init_core() will observe a zone of
    size zero with present pages.  In this case it will skip setting up the
    zone, including the initialisation of free_lists[].
    
    However populated_zone() checks zone->present_pages to see if a zone has
    memory available.  This is used by iterators such as
    walk_zones_in_node().  pagetypeinfo_showfree() uses this to walk the
    free_list of each zone in each node, which are assumed to be initialised
    due to the zone not being empty.
    
    As free_area_init_core() never initialised the free_lists[] this results
    in the following kernel crash when trying to read /proc/pagetypeinfo:
    
      BUG: kernel NULL pointer dereference, address: 0000000000000000
      #PF: supervisor read access in kernel mode
      #PF: error_code(0x0000) - not-present page
      PGD 0 P4D 0
      Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC NOPTI
      CPU: 0 PID: 456 Comm: cat Not tainted 5.16.0 #461
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014
      RIP: 0010:pagetypeinfo_show+0x163/0x460
      Code: 9e 82 e8 80 57 0e 00 49 8b 06 b9 01 00 00 00 4c 39 f0 75 16 e9 65 02 00 00 48 83 c1 01 48 81 f9 a0 86 01 00 0f 84 48 02 00 00 <48> 8b 00 4c 39 f0 75 e7 48 c7 c2 80 a2 e2 82 48 c7 c6 79 ef e3 82
      RSP: 0018:ffffc90001c4bd10 EFLAGS: 00010003
      RAX: 0000000000000000 RBX: ffff88801105f638 RCX: 0000000000000001
      RDX: 0000000000000001 RSI: 000000000000068b RDI: ffff8880163dc68b
      RBP: ffffc90001c4bd90 R08: 0000000000000001 R09: ffff8880163dc67e
      R10: 656c6261766f6d6e R11: 6c6261766f6d6e55 R12: ffff88807ffb4a00
      R13: ffff88807ffb49f8 R14: ffff88807ffb4580 R15: ffff88807ffb3000
      FS:  00007f9c83eff5c0(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000000 CR3: 0000000013c8e000 CR4: 0000000000350ef0
      Call Trace:
       seq_read_iter+0x128/0x460
       proc_reg_read_iter+0x51/0x80
       new_sync_read+0x113/0x1a0
       vfs_read+0x136/0x1d0
       ksys_read+0x70/0xf0
       __x64_sys_read+0x1a/0x20
       do_syscall_64+0x3b/0xc0
       entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fix this by checking that the aligned zone_movable_pfn[] does not exceed
    the end of the node, and if it does skip creating a movable zone on this
    node.
    
    Link: https://lkml.kernel.org/r/20220215025831.2113067-1-apopple@nvidia.com
    Fixes: 2a1e274acf0b ("Create the ZONE_MOVABLE zone")
    Signed-off-by: Alistair Popple <apopple@nvidia.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51dbb5e36d59f62e34d462b801c1068248149cfe
Author: Baokun Li <libaokun1@huawei.com>
Date:   Fri Jan 14 18:28:54 2022 +0800

    jffs2: fix memory leak in jffs2_scan_medium
    
    commit 9cdd3128874f5fe759e2c4e1360ab7fb96a8d1df upstream.
    
    If an error is returned in jffs2_scan_eraseblock() and some memory
    has been added to the jffs2_summary *s, we can observe the following
    kmemleak report:
    
    --------------------------------------------
    unreferenced object 0xffff88812b889c40 (size 64):
      comm "mount", pid 692, jiffies 4294838325 (age 34.288s)
      hex dump (first 32 bytes):
        40 48 b5 14 81 88 ff ff 01 e0 31 00 00 00 50 00  @H........1...P.
        00 00 01 00 00 00 01 00 00 00 02 00 00 00 09 08  ................
      backtrace:
        [<ffffffffae93a3a3>] __kmalloc+0x613/0x910
        [<ffffffffaf423b9c>] jffs2_sum_add_dirent_mem+0x5c/0xa0
        [<ffffffffb0f3afa8>] jffs2_scan_medium.cold+0x36e5/0x4794
        [<ffffffffb0f3dbe1>] jffs2_do_mount_fs.cold+0xa7/0x2267
        [<ffffffffaf40acf3>] jffs2_do_fill_super+0x383/0xc30
        [<ffffffffaf40c00a>] jffs2_fill_super+0x2ea/0x4c0
        [<ffffffffb0315d64>] mtd_get_sb+0x254/0x400
        [<ffffffffb0315f5f>] mtd_get_sb_by_nr+0x4f/0xd0
        [<ffffffffb0316478>] get_tree_mtd+0x498/0x840
        [<ffffffffaf40bd15>] jffs2_get_tree+0x25/0x30
        [<ffffffffae9f358d>] vfs_get_tree+0x8d/0x2e0
        [<ffffffffaea7a98f>] path_mount+0x50f/0x1e50
        [<ffffffffaea7c3d7>] do_mount+0x107/0x130
        [<ffffffffaea7c5c5>] __se_sys_mount+0x1c5/0x2f0
        [<ffffffffaea7c917>] __x64_sys_mount+0xc7/0x160
        [<ffffffffb10142f5>] do_syscall_64+0x45/0x70
    unreferenced object 0xffff888114b54840 (size 32):
      comm "mount", pid 692, jiffies 4294838325 (age 34.288s)
      hex dump (first 32 bytes):
        c0 75 b5 14 81 88 ff ff 02 e0 02 00 00 00 02 00  .u..............
        00 00 84 00 00 00 44 00 00 00 6b 6b 6b 6b 6b a5  ......D...kkkkk.
      backtrace:
        [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffaf423b04>] jffs2_sum_add_inode_mem+0x54/0x90
        [<ffffffffb0f3bd44>] jffs2_scan_medium.cold+0x4481/0x4794
        [...]
    unreferenced object 0xffff888114b57280 (size 32):
      comm "mount", pid 692, jiffies 4294838393 (age 34.357s)
      hex dump (first 32 bytes):
        10 d5 6c 11 81 88 ff ff 08 e0 05 00 00 00 01 00  ..l.............
        00 00 38 02 00 00 28 00 00 00 6b 6b 6b 6b 6b a5  ..8...(...kkkkk.
      backtrace:
        [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffaf423c34>] jffs2_sum_add_xattr_mem+0x54/0x90
        [<ffffffffb0f3a24f>] jffs2_scan_medium.cold+0x298c/0x4794
        [...]
    unreferenced object 0xffff8881116cd510 (size 16):
      comm "mount", pid 692, jiffies 4294838395 (age 34.355s)
      hex dump (first 16 bytes):
        00 00 00 00 00 00 00 00 09 e0 60 02 00 00 6b a5  ..........`...k.
      backtrace:
        [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffaf423cc4>] jffs2_sum_add_xref_mem+0x54/0x90
        [<ffffffffb0f3b2e3>] jffs2_scan_medium.cold+0x3a20/0x4794
        [...]
    --------------------------------------------
    
    Therefore, we should call jffs2_sum_reset_collected(s) on exit to
    release the memory added in s. In addition, a new tag "out_buf" is
    added to prevent the NULL pointer reference caused by s being NULL.
    (thanks to Zhang Yi for this analysis)
    
    Fixes: e631ddba5887 ("[JFFS2] Add erase block summary support (mount time improvement)")
    Cc: stable@vger.kernel.org
    Co-developed-with: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 607d3aab7349f18e0d9dba4100d09d16fe27caca
Author: Baokun Li <libaokun1@huawei.com>
Date:   Fri Jan 14 18:28:53 2022 +0800

    jffs2: fix memory leak in jffs2_do_mount_fs
    
    commit d051cef784de4d54835f6b6836d98a8f6935772c upstream.
    
    If jffs2_build_filesystem() in jffs2_do_mount_fs() returns an error,
    we can observe the following kmemleak report:
    
    --------------------------------------------
    unreferenced object 0xffff88811b25a640 (size 64):
      comm "mount", pid 691, jiffies 4294957728 (age 71.952s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffffa493be24>] kmem_cache_alloc_trace+0x584/0x880
        [<ffffffffa5423a06>] jffs2_sum_init+0x86/0x130
        [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798/0xac0
        [<ffffffffa540acf3>] jffs2_do_fill_super+0x383/0xc30
        [<ffffffffa540c00a>] jffs2_fill_super+0x2ea/0x4c0
        [...]
    unreferenced object 0xffff88812c760000 (size 65536):
      comm "mount", pid 691, jiffies 4294957728 (age 71.952s)
      hex dump (first 32 bytes):
        bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................
        bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................
      backtrace:
        [<ffffffffa493a449>] __kmalloc+0x6b9/0x910
        [<ffffffffa5423a57>] jffs2_sum_init+0xd7/0x130
        [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798/0xac0
        [<ffffffffa540acf3>] jffs2_do_fill_super+0x383/0xc30
        [<ffffffffa540c00a>] jffs2_fill_super+0x2ea/0x4c0
        [...]
    --------------------------------------------
    
    This is because the resources allocated in jffs2_sum_init() are not
    released. Call jffs2_sum_exit() to release these resources to solve
    the problem.
    
    Fixes: e631ddba5887 ("[JFFS2] Add erase block summary support (mount time improvement)")
    Cc: stable@vger.kernel.org
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bb7428dd73991bf4b3a7a61b493ca50046c2b13
Author: Baokun Li <libaokun1@huawei.com>
Date:   Tue Dec 28 20:54:30 2021 +0800

    jffs2: fix use-after-free in jffs2_clear_xattr_subsystem
    
    commit 4c7c44ee1650677fbe89d86edbad9497b7679b5c upstream.
    
    When we mount a jffs2 image, assume that the first few blocks of
    the image are normal and contain at least one xattr-related inode,
    but the next block is abnormal. As a result, an error is returned
    in jffs2_scan_eraseblock(). jffs2_clear_xattr_subsystem() is then
    called in jffs2_build_filesystem() and then again in
    jffs2_do_fill_super().
    
    Finally we can observe the following report:
     ==================================================================
     BUG: KASAN: use-after-free in jffs2_clear_xattr_subsystem+0x95/0x6ac
     Read of size 8 at addr ffff8881243384e0 by task mount/719
    
     Call Trace:
      dump_stack+0x115/0x16b
      jffs2_clear_xattr_subsystem+0x95/0x6ac
      jffs2_do_fill_super+0x84f/0xc30
      jffs2_fill_super+0x2ea/0x4c0
      mtd_get_sb+0x254/0x400
      mtd_get_sb_by_nr+0x4f/0xd0
      get_tree_mtd+0x498/0x840
      jffs2_get_tree+0x25/0x30
      vfs_get_tree+0x8d/0x2e0
      path_mount+0x50f/0x1e50
      do_mount+0x107/0x130
      __se_sys_mount+0x1c5/0x2f0
      __x64_sys_mount+0xc7/0x160
      do_syscall_64+0x45/0x70
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
     Allocated by task 719:
      kasan_save_stack+0x23/0x60
      __kasan_kmalloc.constprop.0+0x10b/0x120
      kasan_slab_alloc+0x12/0x20
      kmem_cache_alloc+0x1c0/0x870
      jffs2_alloc_xattr_ref+0x2f/0xa0
      jffs2_scan_medium.cold+0x3713/0x4794
      jffs2_do_mount_fs.cold+0xa7/0x2253
      jffs2_do_fill_super+0x383/0xc30
      jffs2_fill_super+0x2ea/0x4c0
     [...]
    
     Freed by task 719:
      kmem_cache_free+0xcc/0x7b0
      jffs2_free_xattr_ref+0x78/0x98
      jffs2_clear_xattr_subsystem+0xa1/0x6ac
      jffs2_do_mount_fs.cold+0x5e6/0x2253
      jffs2_do_fill_super+0x383/0xc30
      jffs2_fill_super+0x2ea/0x4c0
     [...]
    
     The buggy address belongs to the object at ffff8881243384b8
      which belongs to the cache jffs2_xattr_ref of size 48
     The buggy address is located 40 bytes inside of
      48-byte region [ffff8881243384b8, ffff8881243384e8)
     [...]
     ==================================================================
    
    The triggering of the BUG is shown in the following stack:
    -----------------------------------------------------------
    jffs2_fill_super
      jffs2_do_fill_super
        jffs2_do_mount_fs
          jffs2_build_filesystem
            jffs2_scan_medium
              jffs2_scan_eraseblock        <--- ERROR
            jffs2_clear_xattr_subsystem    <--- free
        jffs2_clear_xattr_subsystem        <--- free again
    -----------------------------------------------------------
    
    An error is returned in jffs2_do_mount_fs(). If the error is returned
    by jffs2_sum_init(), the jffs2_clear_xattr_subsystem() does not need to
    be executed. If the error is returned by jffs2_build_filesystem(), the
    jffs2_clear_xattr_subsystem() also does not need to be executed again.
    So move jffs2_clear_xattr_subsystem() from 'out_inohash' to 'out_root'
    to fix this UAF problem.
    
    Fixes: aa98d7cf59b5 ("[JFFS2][XATTR] XATTR support on JFFS2 (version. 5)")
    Cc: stable@vger.kernel.org
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b417f9c50586588754b2b0453a1f99520cf7c0e8
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Mon Feb 28 16:36:39 2022 +0800

    can: ems_usb: ems_usb_start_xmit(): fix double dev_kfree_skb() in error path
    
    commit c70222752228a62135cee3409dccefd494a24646 upstream.
    
    There is no need to call dev_kfree_skb() when usb_submit_urb() fails
    beacause can_put_echo_skb() deletes the original skb and
    can_free_echo_skb() deletes the cloned skb.
    
    Link: https://lore.kernel.org/all/20220228083639.38183-1-hbh25y@gmail.com
    Fixes: 702171adeed3 ("ems_usb: Added support for EMS CPC-USB/ARM7 CAN/USB interface")
    Cc: stable@vger.kernel.org
    Cc: Sebastian Haas <haas@ems-wuensche.com>
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a21ee89bc22c2768aa6ccbf6fd85ccbab430f04
Author: Sean Nyekjaer <sean@geanix.com>
Date:   Tue Feb 8 09:52:13 2022 +0100

    mtd: rawnand: protect access to rawnand devices while in suspend
    
    commit 8cba323437a49a45756d661f500b324fc2d486fe upstream.
    
    Prevent rawnand access while in a suspended state.
    
    Commit 013e6292aaf5 ("mtd: rawnand: Simplify the locking") allows the
    rawnand layer to return errors rather than waiting in a blocking wait.
    
    Tested on a iMX6ULL.
    
    Fixes: 013e6292aaf5 ("mtd: rawnand: Simplify the locking")
    Signed-off-by: Sean Nyekjaer <sean@geanix.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@collabora.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220208085213.1838273-1-sean@geanix.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 145a63201d0000ab6ad951bcbfb8db550e74f4b2
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Jan 27 10:18:04 2022 +0100

    spi: mxic: Fix the transmit path
    
    commit 5fd6739e0df7e320bcac103dfb95fe75941fea17 upstream.
    
    By working with external hardware ECC engines, we figured out that
    Under certain circumstances, it is needed for the SPI controller to
    check INT_TX_EMPTY and INT_RX_NOT_EMPTY in both receive and transmit
    path (not only in the receive path). The delay penalty being
    negligible, move this code in the common path.
    
    Fixes: b942d80b0a39 ("spi: Add MXIC controller driver")
    Cc: stable@vger.kernel.org
    Suggested-by: Mason Yang <masonccyang@mxic.com.tw>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Reviewed-by: Zhengxun Li <zhengxunli@mxic.com.tw>
    Reviewed-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20220127091808.1043392-10-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be22ebe79e64c3a8eb76f68743d97771f244cb18
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Jan 11 21:13:59 2022 +0100

    pinctrl: samsung: drop pin banks references on error paths
    
    commit 50ebd19e3585b9792e994cfa8cbee8947fe06371 upstream.
    
    The driver iterates over its devicetree children with
    for_each_child_of_node() and stores for later found node pointer.  This
    has to be put in error paths to avoid leak during re-probing.
    
    Fixes: ab663789d697 ("pinctrl: samsung: Match pin banks with their device nodes")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Sam Protsenko <semen.protsenko@linaro.org>
    Reviewed-by: Chanho Park <chanho61.park@samsung.com>
    Link: https://lore.kernel.org/r/20220111201426.326777-2-krzysztof.kozlowski@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b97b305656a7013690e7b6e310f0e827e0bbff90
Author: Alistair Delva <adelva@google.com>
Date:   Wed Jan 19 23:21:39 2022 +0000

    remoteproc: Fix count check in rproc_coredump_write()
    
    commit f89672cc3681952f2d06314981a6b45f8b0045d1 upstream.
    
    Check count for 0, to avoid a potential underflow. Make the check the
    same as the one in rproc_recovery_write().
    
    Fixes: 3afdc59e4390 ("remoteproc: Add coredump debugfs entry")
    Signed-off-by: Alistair Delva <adelva@google.com>
    Cc: Rishabh Bhatnagar <rishabhb@codeaurora.org>
    Cc: stable@vger.kernel.org
    Cc: Ohad Ben-Cohen <ohad@wizery.com>
    Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Sibi Sankar <sibis@codeaurora.org>
    Cc: linux-remoteproc@vger.kernel.org
    Cc: kernel-team@android.com
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220119232139.1125908-1-adelva@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 784630df174f373538c44268f2e3a743bd8d5868
Author: Chao Yu <chao@kernel.org>
Date:   Mon Mar 21 23:22:11 2022 +0800

    f2fs: fix to do sanity check on .cp_pack_total_block_count
    
    commit 5b5b4f85b01604389f7a0f11ef180a725bf0e2d4 upstream.
    
    As bughunter reported in bugzilla:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=215709
    
    f2fs may hang when mounting a fuzzed image, the dmesg shows as below:
    
    __filemap_get_folio+0x3a9/0x590
    pagecache_get_page+0x18/0x60
    __get_meta_page+0x95/0x460 [f2fs]
    get_checkpoint_version+0x2a/0x1e0 [f2fs]
    validate_checkpoint+0x8e/0x2a0 [f2fs]
    f2fs_get_valid_checkpoint+0xd0/0x620 [f2fs]
    f2fs_fill_super+0xc01/0x1d40 [f2fs]
    mount_bdev+0x18a/0x1c0
    f2fs_mount+0x15/0x20 [f2fs]
    legacy_get_tree+0x28/0x50
    vfs_get_tree+0x27/0xc0
    path_mount+0x480/0xaa0
    do_mount+0x7c/0xa0
    __x64_sys_mount+0x8b/0xe0
    do_syscall_64+0x38/0xc0
    entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    The root cause is cp_pack_total_block_count field in checkpoint was fuzzed
    to one, as calcuated, two cp pack block locates in the same block address,
    so then read latter cp pack block, it will block on the page lock due to
    the lock has already held when reading previous cp pack block, fix it by
    adding sanity check for cp_pack_total_block_count.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chao Yu <chao.yu@oppo.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e58ee6bd939b773675240f5d0f5b88a367c037c4
Author: Juhyung Park <qkrwngud825@gmail.com>
Date:   Tue Feb 15 17:27:21 2022 +0900

    f2fs: quota: fix loop condition at f2fs_quota_sync()
    
    commit 680af5b824a52faa819167628665804a14f0e0df upstream.
    
    cnt should be passed to sb_has_quota_active() instead of type to check
    active quota properly.
    
    Moreover, when the type is -1, the compiler with enough inline knowledge
    can discard sb_has_quota_active() check altogether, causing a NULL pointer
    dereference at the following inode_lock(dqopt->files[cnt]):
    
    [    2.796010] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0
    [    2.796024] Mem abort info:
    [    2.796025]   ESR = 0x96000005
    [    2.796028]   EC = 0x25: DABT (current EL), IL = 32 bits
    [    2.796029]   SET = 0, FnV = 0
    [    2.796031]   EA = 0, S1PTW = 0
    [    2.796032] Data abort info:
    [    2.796034]   ISV = 0, ISS = 0x00000005
    [    2.796035]   CM = 0, WnR = 0
    [    2.796046] user pgtable: 4k pages, 39-bit VAs, pgdp=00000003370d1000
    [    2.796048] [00000000000000a0] pgd=0000000000000000, pud=0000000000000000
    [    2.796051] Internal error: Oops: 96000005 [#1] PREEMPT SMP
    [    2.796056] CPU: 7 PID: 640 Comm: f2fs_ckpt-259:7 Tainted: G S                5.4.179-arter97-r8-64666-g2f16e087f9d8 #1
    [    2.796057] Hardware name: Qualcomm Technologies, Inc. Lahaina MTP lemonadep (DT)
    [    2.796059] pstate: 80c00005 (Nzcv daif +PAN +UAO)
    [    2.796065] pc : down_write+0x28/0x70
    [    2.796070] lr : f2fs_quota_sync+0x100/0x294
    [    2.796071] sp : ffffffa3f48ffc30
    [    2.796073] x29: ffffffa3f48ffc30 x28: 0000000000000000
    [    2.796075] x27: ffffffa3f6d718b8 x26: ffffffa415fe9d80
    [    2.796077] x25: ffffffa3f7290048 x24: 0000000000000001
    [    2.796078] x23: 0000000000000000 x22: ffffffa3f7290000
    [    2.796080] x21: ffffffa3f72904a0 x20: ffffffa3f7290110
    [    2.796081] x19: ffffffa3f77a9800 x18: ffffffc020aae038
    [    2.796083] x17: ffffffa40e38e040 x16: ffffffa40e38e6d0
    [    2.796085] x15: ffffffa40e38e6cc x14: ffffffa40e38e6d0
    [    2.796086] x13: 00000000000004f6 x12: 00162c44ff493000
    [    2.796088] x11: 0000000000000400 x10: ffffffa40e38c948
    [    2.796090] x9 : 0000000000000000 x8 : 00000000000000a0
    [    2.796091] x7 : 0000000000000000 x6 : 0000d1060f00002a
    [    2.796093] x5 : ffffffa3f48ff718 x4 : 000000000000000d
    [    2.796094] x3 : 00000000060c0000 x2 : 0000000000000001
    [    2.796096] x1 : 0000000000000000 x0 : 00000000000000a0
    [    2.796098] Call trace:
    [    2.796100]  down_write+0x28/0x70
    [    2.796102]  f2fs_quota_sync+0x100/0x294
    [    2.796104]  block_operations+0x120/0x204
    [    2.796106]  f2fs_write_checkpoint+0x11c/0x520
    [    2.796107]  __checkpoint_and_complete_reqs+0x7c/0xd34
    [    2.796109]  issue_checkpoint_thread+0x6c/0xb8
    [    2.796112]  kthread+0x138/0x414
    [    2.796114]  ret_from_fork+0x10/0x18
    [    2.796117] Code: aa0803e0 aa1f03e1 52800022 aa0103e9 (c8e97d02)
    [    2.796120] ---[ end trace 96e942e8eb6a0b53 ]---
    [    2.800116] Kernel panic - not syncing: Fatal exception
    [    2.800120] SMP: stopping secondary CPUs
    
    Fixes: 9de71ede81e6 ("f2fs: quota: fix potential deadlock")
    Cc: <stable@vger.kernel.org> # v5.15+
    Signed-off-by: Juhyung Park <qkrwngud825@gmail.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec67040703c8423473c419c2b5caa362f53efed6
Author: Chao Yu <chao@kernel.org>
Date:   Fri Feb 4 11:21:14 2022 +0800

    f2fs: fix to unlock page correctly in error path of is_alive()
    
    commit 6d18762ed5cd549fde74fd0e05d4d87bac5a3beb upstream.
    
    As Pavel Machek reported in below link [1]:
    
    After commit 77900c45ee5c ("f2fs: fix to do sanity check in is_alive()"),
    node page should be unlock via calling f2fs_put_page() in the error path
    of is_alive(), otherwise, f2fs may hang when it tries to lock the node
    page, fix it.
    
    [1] https://lore.kernel.org/stable/20220124203637.GA19321@duo.ucw.cz/
    
    Fixes: 77900c45ee5c ("f2fs: fix to do sanity check in is_alive()")
    Cc: <stable@vger.kernel.org>
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7af164fa2f1abc577d357d22d83a2f3490875d7e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 15 18:34:06 2022 +0300

    NFSD: prevent integer overflow on 32 bit systems
    
    commit 23a9dbbe0faf124fc4c139615633b9d12a3a89ef upstream.
    
    On a 32 bit system, the "len * sizeof(*p)" operation can have an
    integer overflow.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65e21cc042f4c1518c8c55283f53bc725b78419d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 15 13:30:09 2022 +0300

    NFSD: prevent underflow in nfssvc_decode_writeargs()
    
    commit 184416d4b98509fb4c3d8fc3d6dc1437896cc159 upstream.
    
    Smatch complains:
    
            fs/nfsd/nfsxdr.c:341 nfssvc_decode_writeargs()
            warn: no lower bound on 'args->len'
    
    Change the type to unsigned to prevent this issue.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7b430104a14a05c74297e794a0fe237f822ebb1
Author: NeilBrown <neilb@suse.de>
Date:   Tue Mar 8 13:42:17 2022 +1100

    SUNRPC: avoid race between mod_timer() and del_timer_sync()
    
    commit 3848e96edf4788f772d83990022fa7023a233d83 upstream.
    
    xprt_destory() claims XPRT_LOCKED and then calls del_timer_sync().
    Both xprt_unlock_connect() and xprt_release() call
     ->release_xprt()
    which drops XPRT_LOCKED and *then* xprt_schedule_autodisconnect()
    which calls mod_timer().
    
    This may result in mod_timer() being called *after* del_timer_sync().
    When this happens, the timer may fire long after the xprt has been freed,
    and run_timer_softirq() will probably crash.
    
    The pairing of ->release_xprt() and xprt_schedule_autodisconnect() is
    always called under ->transport_lock.  So if we take ->transport_lock to
    call del_timer_sync(), we can be sure that mod_timer() will run first
    (if it runs at all).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f51ab2f60a44c42b29010b17f98d1f902de40a5c
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Tue Feb 8 21:09:47 2022 -0800

    HID: intel-ish-hid: Use dma_alloc_coherent for firmware update
    
    commit f97ec5d75e9261a5da78dc28a8955b7cc0c4468b upstream.
    
    Allocating memory with kmalloc and GPF_DMA32 is not allowed, the
    allocator will ignore the attribute.
    
    Instead, use dma_alloc_coherent() API as we allocate a small amount of
    memory to transfer firmware fragment to the ISH.
    
    On Arcada chromebook, after the patch the warning:
    "Unexpected gfp: 0x4 (GFP_DMA32). Fixing up to gfp: 0xcc0 (GFP_KERNEL).  Fix your code!"
    is gone. The ISH firmware is loaded properly and we can interact with
    the ISH:
    > ectool  --name cros_ish version
    ...
    Build info:    arcada_ish_v2.0.3661+3c1a1c1ae0 2022-02-08 05:37:47 @localhost
    Tool version:  v2.0.12300-900b03ec7f 2022-02-08 10:01:48 @localhost
    
    Fixes: commit 91b228107da3 ("HID: intel-ish-hid: ISH firmware loader client driver")
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1df8e60f25a9990988c4ae1dc0f4cd553329419
Author: Ang Tien Sung <tien.sung.ang@intel.com>
Date:   Wed Feb 23 08:41:46 2022 -0600

    firmware: stratix10-svc: add missing callback parameter on RSU
    
    commit b850b7a8b369322adf699ef48ceff4d902525c8c upstream.
    
    Fix a bug whereby, the return response of parameter a1 from an
    SMC call is not properly set to the callback data during an
    INTEL_SIP_SMC_RSU_ERROR command.
    
    Link: https://lore.kernel.org/lkml/20220216081513.28319-1-tien.sung.ang@intel.com
    Fixes: 6b50d882d38d ("firmware: add remote status update client support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ang Tien Sung <tien.sung.ang@intel.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Link: https://lore.kernel.org/r/20220223144146.399263-1-dinguyen@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e94f5fbe7ab304b604df119e6355109304500da6
Author: Bagas Sanjaya <bagasdotme@gmail.com>
Date:   Mon Mar 14 18:33:29 2022 +0700

    Documentation: update stable tree link
    
    commit 555d44932c67e617d89bc13c81c7efac5b51fcfa upstream.
    
    The link to stable tree is redirected to
    https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git. Update
    accordingly.
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: stable@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Link: https://lore.kernel.org/r/20220314113329.485372-6-bagasdotme@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4bab992ee258654c63005a8385e256f09c651ca
Author: Bagas Sanjaya <bagasdotme@gmail.com>
Date:   Mon Mar 14 18:33:28 2022 +0700

    Documentation: add link to stable release candidate tree
    
    commit 587d39b260c4d090166314d64be70b1f6a26b0b5 upstream.
    
    There is also stable release candidate tree. Mention it, however with a
    warning that the tree is for testing purposes.
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: stable@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Link: https://lore.kernel.org/r/20220314113329.485372-5-bagasdotme@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10ee5662d5a65bf3883eefe59b053eb4c115bc87
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jan 13 12:04:54 2022 -0800

    KEYS: fix length validation in keyctl_pkey_params_get_2()
    
    commit c51abd96837f600d8fd940b6ab8e2da578575504 upstream.
    
    In many cases, keyctl_pkey_params_get_2() is validating the user buffer
    lengths against the wrong algorithm properties.  Fix it to check against
    the correct properties.
    
    Probably this wasn't noticed before because for all asymmetric keys of
    the "public_key" subtype, max_data_size == max_sig_size == max_enc_size
    == max_dec_size.  However, this isn't necessarily true for the
    "asym_tpm" subtype (it should be, but it's not strictly validated).  Of
    course, future key types could have different values as well.
    
    Fixes: 00d60fd3b932 ("KEYS: Provide keyctls to drive the new key type ops for asymmetric keys [ver #2]")
    Cc: <stable@vger.kernel.org> # v4.20+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a41a3033a9344d7683340e3d83f5435ffb06501
Author: Jann Horn <jannh@google.com>
Date:   Sat Mar 19 02:08:37 2022 +0100

    ptrace: Check PTRACE_O_SUSPEND_SECCOMP permission on PTRACE_SEIZE
    
    commit ee1fee900537b5d9560e9f937402de5ddc8412f3 upstream.
    
    Setting PTRACE_O_SUSPEND_SECCOMP is supposed to be a highly privileged
    operation because it allows the tracee to completely bypass all seccomp
    filters on kernels with CONFIG_CHECKPOINT_RESTORE=y. It is only supposed to
    be settable by a process with global CAP_SYS_ADMIN, and only if that
    process is not subject to any seccomp filters at all.
    
    However, while these permission checks were done on the PTRACE_SETOPTIONS
    path, they were missing on the PTRACE_SEIZE path, which also sets
    user-specified ptrace flags.
    
    Move the permissions checks out into a helper function and let both
    ptrace_attach() and ptrace_setoptions() call it.
    
    Cc: stable@kernel.org
    Fixes: 13c4a90119d2 ("seccomp: add ptrace options for suspend/resume")
    Signed-off-by: Jann Horn <jannh@google.com>
    Link: https://lkml.kernel.org/r/20220319010838.1386861-1-jannh@google.com
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2775d8e3643628f2f1575cfbb40fa4caf538d740
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Wed Mar 9 15:55:18 2022 +0900

    clk: uniphier: Fix fixed-rate initialization
    
    commit ca85a66710a8a1f6b0719397225c3e9ee0abb692 upstream.
    
    Fixed-rate clocks in UniPhier don't have any parent clocks, however,
    initial data "init.flags" isn't initialized, so it might be determined
    that there is a parent clock for fixed-rate clock.
    
    This sets init.flags to zero as initialization.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 734d82f4a678 ("clk: uniphier: add core support code for UniPhier clock driver")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Link: https://lore.kernel.org/r/1646808918-30899-1-git-send-email-hayashi.kunihiko@socionext.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25cd5872d9a76da68c60cd8018cbb0f1bf439711
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 2 12:33:45 2022 +0100

    greybus: svc: fix an error handling bug in gb_svc_hello()
    
    commit 5f8583a3b7552092582a92e7bbd2153319929ad7 upstream.
    
    Cleanup if gb_svc_queue_deferred_request() fails.
    
    Link: https://lore.kernel.org/r/20220202072016.GA6748@kili
    Fixes: ee2f2074fdb2 ("greybus: svc: reconfig APBridgeA-Switch link to handle required load")
    Cc: stable@vger.kernel.org      # 4.9
    [johan: fix commit summary prefix and rename label ]
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20220202113347.1288-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f0cd81174579c4ca1f02d9f90bae88b916810e0
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:06 2022 -0500

    iio: inkern: make a best effort on offset calculation
    
    commit ca85123354e1a65a22170286387b4791997fe864 upstream.
    
    iio_convert_raw_to_processed_unlocked() assumes the offset is an
    integer. Make a best effort to get a valid offset value for fractional
    cases without breaking implicit truncations.
    
    Fixes: 48e44ce0f881 ("iio:inkern: Add function to read the processed value")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-4-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19e533452fbebfd053556732073cf94b7ac59127
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:05 2022 -0500

    iio: inkern: apply consumer scale when no channel scale is available
    
    commit 14b457fdde38de594a4bc4bd9075019319d978da upstream.
    
    When a consumer calls iio_read_channel_processed() and no channel scale
    is available, it's assumed that the scale is one and the raw value is
    returned as expected.
    
    On the other hand, if the consumer calls iio_convert_raw_to_processed()
    the scaling factor requested by the consumer is not applied.
    
    This for example causes the consumer to process mV when expecting uV.
    Make sure to always apply the scaling factor requested by the consumer.
    
    Fixes: adc8ec5ff183 ("iio: inkern: pass through raw values if no scaling")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-3-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e10dbe7f6ac123935d1aa4563430f107fa288e53
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:04 2022 -0500

    iio: inkern: apply consumer scale on IIO_VAL_INT cases
    
    commit 1bca97ff95c732a516ebb68da72814194980e0a5 upstream.
    
    When a consumer calls iio_read_channel_processed() and the channel has
    an integer scale, the scale channel scale is applied and the processed
    value is returned as expected.
    
    On the other hand, if the consumer calls iio_convert_raw_to_processed()
    the scaling factor requested by the consumer is not applied.
    
    This for example causes the consumer to process mV when expecting uV.
    Make sure to always apply the scaling factor requested by the consumer.
    
    Fixes: 48e44ce0f881 ("iio:inkern: Add function to read the processed value")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-2-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f4fffc2ab26b4c8ac9c7e9e72dc203ed1081f64
Author: Liam Beguin <liambeguin@gmail.com>
Date:   Sat Jan 8 15:53:07 2022 -0500

    iio: afe: rescale: use s64 for temporary scale calculations
    
    commit 51593106b608ae4247cc8da928813347da16d025 upstream.
    
    All four scaling coefficients can take signed values.
    Make tmp a signed 64-bit integer and switch to div_s64() to preserve
    signs during 64-bit divisions.
    
    Fixes: 8b74816b5a9a ("iio: afe: rescale: new driver")
    Signed-off-by: Liam Beguin <liambeguin@gmail.com>
    Reviewed-by: Peter Rosin <peda@axentia.se>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220108205319.2046348-5-liambeguin@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cd1b02655c748b9b2c769c18f04338beefdfcc1
Author: James Clark <james.clark@arm.com>
Date:   Thu Jan 20 11:30:47 2022 +0000

    coresight: Fix TRCCONFIGR.QE sysfs interface
    
    commit ea75a342aed5ed72c87f38fbe0df2f5df7eae374 upstream.
    
    It's impossible to program a valid value for TRCCONFIGR.QE
    when TRCIDR0.QSUPP==0b10. In that case the following is true:
    
      Q element support is implemented, and only supports Q elements without
      instruction counts. TRCCONFIGR.QE can only take the values 0b00 or 0b11.
    
    Currently the low bit of QSUPP is checked to see if the low bit of QE can
    be written to, but as you can see when QSUPP==0b10 the low bit is cleared
    making it impossible to ever write the only valid value of 0b11 to QE.
    0b10 would be written instead, which is a reserved QE value even for all
    values of QSUPP.
    
    The fix is to allow writing the low bit of QE for any non zero value of
    QSUPP.
    
    This change also ensures that the low bit is always set, even when the
    user attempts to only set the high bit.
    
    Signed-off-by: James Clark <james.clark@arm.com>
    Reviewed-by: Mike Leach <mike.leach@linaro.org>
    Fixes: d8c66962084f ("coresight-etm4x: Controls pertaining to the reset, mode, pe and events")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220120113047.2839622-2-james.clark@arm.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b478cb67b8c56f20e48e225e0485ceee94da97f
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Mar 8 11:59:26 2022 +0200

    mei: avoid iterator usage outside of list_for_each_entry
    
    commit c10187b1c5ebb8681ca467ab7b0ded5ea415d258 upstream.
    
    Usage of the iterator outside of the list_for_each_entry
    is considered harmful. https://lkml.org/lkml/2022/2/17/1032
    
    Do not reference the loop variable outside of the loop,
    by rearranging the orders of execution.
    Instead of performing search loop and checking outside the loop
    if the end of the list was hit and no matching element was found,
    the execution is performed inside the loop upon a successful match
    followed by a goto statement to the next step,
    therefore no condition has to be performed after the loop has ended.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20220308095926.300412-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec8975417d714e8a6abab334645a7370887eca09
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Mar 1 09:11:15 2022 +0200

    mei: me: add Alder Lake N device id.
    
    commit 7bbbd0845818cffa9fa8ccfe52fa1cad58e7e4f2 upstream.
    
    Add Alder Lake N device ID.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20220301071115.96145-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a0c61dd071d7affdbfcf0d87dc5cb10b1d0980c
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Thu Mar 3 13:08:57 2022 +0200

    xhci: fix uninitialized string returned by xhci_decode_ctrl_ctx()
    
    commit 05519b8589a679edb8fa781259893d20bece04ad upstream.
    
    xhci_decode_ctrl_ctx() returns the untouched buffer as-is if both "drop"
    and "add" parameters are zero.
    
    Fix the function to return an empty string in that case.
    
    It was not immediately clear from the possible call chains whether this
    issue is currently actually triggerable or not.
    
    Note that before commit 4843b4b5ec64 ("xhci: fix even more unsafe memory
    usage in xhci tracing") the result effect in the failure case was different
    as a static buffer was used here, but the code still worked incorrectly.
    
    Fixes: 90d6d5731da7 ("xhci: Add tracing for input control context")
    Cc: stable@vger.kernel.org
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    commit 4843b4b5ec64 ("xhci: fix even more unsafe memory usage in xhci tracing")
    Link: https://lore.kernel.org/r/20220303110903.1662404-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 811f4035194912ac2cb89965dd0851125634b3c8
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu Mar 3 13:08:55 2022 +0200

    xhci: make xhci_handshake timeout for xhci_reset() adjustable
    
    commit 14073ce951b5919da450022c050772902f24f054 upstream.
    
    xhci_reset() timeout was increased from 250ms to 10 seconds in order to
    give Renesas 720201 xHC enough time to get ready in probe.
    
    xhci_reset() is called with interrupts disabled in other places, and
    waiting for 10 seconds there is not acceptable.
    
    Add a timeout parameter to xhci_reset(), and adjust it back to 250ms
    when called from xhci_stop() or xhci_shutdown() where interrupts are
    disabled, and successful reset isn't that critical.
    This solves issues when deactivating host mode on platforms like SM8450.
    
    For now don't change the timeout if xHC is reset in xhci_resume().
    No issues are reported for it, and we need the reset to succeed.
    Locking around that reset needs to be revisited later.
    
    Additionally change the signed integer timeout parameter in
    xhci_handshake() to a u64 to match the timeout value we pass to
    readl_poll_timeout_atomic()
    
    Fixes: 22ceac191211 ("xhci: Increase reset timeout for Renesas 720201 host.")
    Cc: stable@vger.kernel.org
    Reported-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Reported-by: Pavan Kondeti <quic_pkondeti@quicinc.com>
    Tested-by: Pavan Kondeti <quic_pkondeti@quicinc.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220303110903.1662404-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a820d1ca1233a709e41541ce7fb04928e75e700
Author: Henry Lin <henryl@nvidia.com>
Date:   Thu Mar 3 13:08:58 2022 +0200

    xhci: fix runtime PM imbalance in USB2 resume
    
    commit 70c05e4cf63054cd755ca66c1819327b22cb085f upstream.
    
    A race between system resume and device-initiated resume may result in
    runtime PM imbalance on USB2 root hub. If a device-initiated resume
    starts and system resume xhci_bus_resume() directs U0 before hub driver
    sees the resuming device in RESUME state, device-initiated resume will
    not be finished in xhci_handle_usb2_port_link_resume(). In this case,
    usb_hcd_end_port_resume() call is missing.
    
    This changes calls usb_hcd_end_port_resume() if resuming device reaches
    U0 to keep runtime PM balance.
    
    Fixes: a231ec41e6f6 ("xhci: refactor U0 link state handling in get_port_status")
    Cc: stable@vger.kernel.org
    Signed-off-by: Henry Lin <henryl@nvidia.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220303110903.1662404-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c41387f96a223726ca00b011ed3c1e9a645f7ac5
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Thu Mar 3 13:08:56 2022 +0200

    xhci: fix garbage USBSTS being logged in some cases
    
    commit 3105bc977d7cbf2edc35e24cc7e009686f6e4a56 upstream.
    
    xhci_decode_usbsts() is expected to return a zero-terminated string by
    its only caller, xhci_stop_endpoint_command_watchdog(), which directly
    logs the return value:
    
      xhci_warn(xhci, "USBSTS:%s\n", xhci_decode_usbsts(str, usbsts));
    
    However, if no recognized bits are set in usbsts, the function will
    return without having called any sprintf() and therefore return an
    untouched non-zero-terminated caller-provided buffer, causing garbage
    to be output to log.
    
    Fix that by always including the raw value in the output.
    
    Note that before commit 4843b4b5ec64 ("xhci: fix even more unsafe memory
    usage in xhci tracing") the result effect in the failure case was different
    as a static buffer was used here, but the code still worked incorrectly.
    
    Fixes: 9c1aa36efdae ("xhci: Show host status when watchdog triggers and host is assumed dead.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220303110903.1662404-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e0f089f70db06f2d1d3e5b973de83e71c4038da
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Mar 17 16:39:10 2022 -0400

    USB: usb-storage: Fix use of bitfields for hardware data in ene_ub6250.c
    
    commit 1892bf90677abcad7f06e897e308f5c3e3618dd4 upstream.
    
    The kernel test robot found a problem with the ene_ub6250 subdriver in
    usb-storage: It uses structures containing bitfields to represent
    hardware bits in its SD_STATUS, MS_STATUS, and SM_STATUS bytes.  This
    is not safe; it presumes a particular bit ordering and it assumes the
    compiler will not insert padding, neither of which is guaranteed.
    
    This patch fixes the problem by changing the structures to simple u8
    values, with the bitfields replaced by bitmask constants.
    
    CC: <stable@vger.kernel.org>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/YjOcbuU106UpJ/V8@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39a70732eb52c95c28e8424d0240ea104a9c8890
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Tue Oct 26 22:40:15 2021 +0800

    virtio-blk: Use blk_validate_block_size() to validate block size
    
    commit 57a13a5b8157d9a8606490aaa1b805bafe6c37e1 upstream.
    
    The block layer can't support a block size larger than
    page size yet. And a block size that's too small or
    not a power of two won't work either. If a misconfigured
    device presents an invalid block size in configuration space,
    it will result in the kernel crash something like below:
    
    [  506.154324] BUG: kernel NULL pointer dereference, address: 0000000000000008
    [  506.160416] RIP: 0010:create_empty_buffers+0x24/0x100
    [  506.174302] Call Trace:
    [  506.174651]  create_page_buffers+0x4d/0x60
    [  506.175207]  block_read_full_page+0x50/0x380
    [  506.175798]  ? __mod_lruvec_page_state+0x60/0xa0
    [  506.176412]  ? __add_to_page_cache_locked+0x1b2/0x390
    [  506.177085]  ? blkdev_direct_IO+0x4a0/0x4a0
    [  506.177644]  ? scan_shadow_nodes+0x30/0x30
    [  506.178206]  ? lru_cache_add+0x42/0x60
    [  506.178716]  do_read_cache_page+0x695/0x740
    [  506.179278]  ? read_part_sector+0xe0/0xe0
    [  506.179821]  read_part_sector+0x36/0xe0
    [  506.180337]  adfspart_check_ICS+0x32/0x320
    [  506.180890]  ? snprintf+0x45/0x70
    [  506.181350]  ? read_part_sector+0xe0/0xe0
    [  506.181906]  bdev_disk_changed+0x229/0x5c0
    [  506.182483]  blkdev_get_whole+0x6d/0x90
    [  506.183013]  blkdev_get_by_dev+0x122/0x2d0
    [  506.183562]  device_add_disk+0x39e/0x3c0
    [  506.184472]  virtblk_probe+0x3f8/0x79b [virtio_blk]
    [  506.185461]  virtio_dev_probe+0x15e/0x1d0 [virtio]
    
    So let's use a block layer helper to validate the block size.
    
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/r/20211026144015.188-5-xieyongji@bytedance.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 290e05f346d1829e849662c97e42d5ad984f5258
Author: Lino Sanfilippo <LinoSanfilippo@gmx.de>
Date:   Wed Mar 2 10:43:53 2022 +0100

    tpm: fix reference counting for struct tpm_chip
    
    commit 7e0438f83dc769465ee663bb5dcf8cc154940712 upstream.
    
    The following sequence of operations results in a refcount warning:
    
    1. Open device /dev/tpmrm.
    2. Remove module tpm_tis_spi.
    3. Write a TPM command to the file descriptor opened at step 1.
    
    ------------[ cut here ]------------
    WARNING: CPU: 3 PID: 1161 at lib/refcount.c:25 kobject_get+0xa0/0xa4
    refcount_t: addition on 0; use-after-free.
    Modules linked in: tpm_tis_spi tpm_tis_core tpm mdio_bcm_unimac brcmfmac
    sha256_generic libsha256 sha256_arm hci_uart btbcm bluetooth cfg80211 vc4
    brcmutil ecdh_generic ecc snd_soc_core crc32_arm_ce libaes
    raspberrypi_hwmon ac97_bus snd_pcm_dmaengine bcm2711_thermal snd_pcm
    snd_timer genet snd phy_generic soundcore [last unloaded: spi_bcm2835]
    CPU: 3 PID: 1161 Comm: hold_open Not tainted 5.10.0ls-main-dirty #2
    Hardware name: BCM2711
    [<c0410c3c>] (unwind_backtrace) from [<c040b580>] (show_stack+0x10/0x14)
    [<c040b580>] (show_stack) from [<c1092174>] (dump_stack+0xc4/0xd8)
    [<c1092174>] (dump_stack) from [<c0445a30>] (__warn+0x104/0x108)
    [<c0445a30>] (__warn) from [<c0445aa8>] (warn_slowpath_fmt+0x74/0xb8)
    [<c0445aa8>] (warn_slowpath_fmt) from [<c08435d0>] (kobject_get+0xa0/0xa4)
    [<c08435d0>] (kobject_get) from [<bf0a715c>] (tpm_try_get_ops+0x14/0x54 [tpm])
    [<bf0a715c>] (tpm_try_get_ops [tpm]) from [<bf0a7d6c>] (tpm_common_write+0x38/0x60 [tpm])
    [<bf0a7d6c>] (tpm_common_write [tpm]) from [<c05a7ac0>] (vfs_write+0xc4/0x3c0)
    [<c05a7ac0>] (vfs_write) from [<c05a7ee4>] (ksys_write+0x58/0xcc)
    [<c05a7ee4>] (ksys_write) from [<c04001a0>] (ret_fast_syscall+0x0/0x4c)
    Exception stack(0xc226bfa8 to 0xc226bff0)
    bfa0:                   00000000 000105b4 00000003 beafe664 00000014 00000000
    bfc0: 00000000 000105b4 000103f8 00000004 00000000 00000000 b6f9c000 beafe684
    bfe0: 0000006c beafe648 0001056c b6eb6944
    ---[ end trace d4b8409def9b8b1f ]---
    
    The reason for this warning is the attempt to get the chip->dev reference
    in tpm_common_write() although the reference counter is already zero.
    
    Since commit 8979b02aaf1d ("tpm: Fix reference count to main device") the
    extra reference used to prevent a premature zero counter is never taken,
    because the required TPM_CHIP_FLAG_TPM2 flag is never set.
    
    Fix this by moving the TPM 2 character device handling from
    tpm_chip_alloc() to tpm_add_char_device() which is called at a later point
    in time when the flag has been set in case of TPM2.
    
    Commit fdc915f7f719 ("tpm: expose spaces via a device link /dev/tpmrm<n>")
    already introduced function tpm_devs_release() to release the extra
    reference but did not implement the required put on chip->devs that results
    in the call of this function.
    
    Fix this by putting chip->devs in tpm_chip_unregister().
    
    Finally move the new implementation for the TPM 2 handling into a new
    function to avoid multiple checks for the TPM_CHIP_FLAG_TPM2 flag in the
    good case and error cases.
    
    Cc: stable@vger.kernel.org
    Fixes: fdc915f7f719 ("tpm: expose spaces via a device link /dev/tpmrm<n>")
    Fixes: 8979b02aaf1d ("tpm: Fix reference count to main device")
    Co-developed-by: Jason Gunthorpe <jgg@ziepe.ca>
    Signed-off-by: Jason Gunthorpe <jgg@ziepe.ca>
    Signed-off-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Tested-by: Stefan Berger <stefanb@linux.ibm.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcd3c31dd1608b9977860562a8847b57b0596b4b
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Mar 3 14:40:08 2022 +0000

    iommu/iova: Improve 32-bit free space estimate
    
    commit 5b61343b50590fb04a3f6be2cdc4868091757262 upstream.
    
    For various reasons based on the allocator behaviour and typical
    use-cases at the time, when the max32_alloc_size optimisation was
    introduced it seemed reasonable to couple the reset of the tracked
    size to the update of cached32_node upon freeing a relevant IOVA.
    However, since subsequent optimisations focused on helping genuine
    32-bit devices make best use of even more limited address spaces, it
    is now a lot more likely for cached32_node to be anywhere in a "full"
    32-bit address space, and as such more likely for space to become
    available from IOVAs below that node being freed.
    
    At this point, the short-cut in __cached_rbnode_delete_update() really
    doesn't hold up any more, and we need to fix the logic to reliably
    provide the expected behaviour. We still want cached32_node to only move
    upwards, but we should reset the allocation size if *any* 32-bit space
    has become available.
    
    Reported-by: Yunfei Wang <yf.wang@mediatek.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed-by: Miles Chen <miles.chen@mediatek.com>
    Link: https://lore.kernel.org/r/033815732d83ca73b13c11485ac39336f15c3b40.1646318408.git.robin.murphy@arm.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Cc: Miles Chen <miles.chen@mediatek.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68c80088f52bfae7fc16ce0ed25ce969ddfb2ded
Author: Waiman Long <longman@redhat.com>
Date:   Sun Jan 2 21:35:58 2022 -0500

    locking/lockdep: Avoid potential access of invalid memory in lock_class
    
    commit 61cc4534b6550997c97a03759ab46b29d44c0017 upstream.
    
    It was found that reading /proc/lockdep after a lockdep splat may
    potentially cause an access to freed memory if lockdep_unregister_key()
    is called after the splat but before access to /proc/lockdep [1]. This
    is due to the fact that graph_lock() call in lockdep_unregister_key()
    fails after the clearing of debug_locks by the splat process.
    
    After lockdep_unregister_key() is called, the lock_name may be freed
    but the corresponding lock_class structure still have a reference to
    it. That invalid memory pointer will then be accessed when /proc/lockdep
    is read by a user and a use-after-free (UAF) error will be reported if
    KASAN is enabled.
    
    To fix this problem, lockdep_unregister_key() is now modified to always
    search for a matching key irrespective of the debug_locks state and
    zap the corresponding lock class if a matching one is found.
    
    [1] https://lore.kernel.org/lkml/77f05c15-81b6-bddd-9650-80d5f23fe330@i-love.sakura.ne.jp/
    
    Fixes: 8b39adbee805 ("locking/lockdep: Make lockdep_unregister_key() honor 'debug_locks' again")
    Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Cc: Cheng-Jui Wang <cheng-jui.wang@mediatek.com>
    Link: https://lkml.kernel.org/r/20220103023558.1377055-1-longman@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f19d8dfad67b641af274a9a317a12f31c430e254
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Fri Mar 11 13:17:16 2022 +0200

    net: dsa: microchip: add spi_device_id tables
    
    [ Upstream commit e981bc74aefc6a177b50c16cfa7023599799cf74 ]
    
    Add spi_device_id tables to avoid logs like "SPI driver ksz9477-switch
    has no spi_device_id".
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d3f4ad43054619379ccc697cfcbdb2c266800d8
Author: Haimin Zhang <tcs_kernel@tencent.com>
Date:   Tue Mar 8 11:20:28 2022 +0800

    af_key: add __GFP_ZERO flag for compose_sadb_supported in function pfkey_register
    
    [ Upstream commit 9a564bccb78a76740ea9d75a259942df8143d02c ]
    
    Add __GFP_ZERO flag for compose_sadb_supported in function pfkey_register
    to initialize the buffer of supp_skb to fix a kernel-info-leak issue.
    1) Function pfkey_register calls compose_sadb_supported to request
    a sk_buff. 2) compose_sadb_supported calls alloc_sbk to allocate
    a sk_buff, but it doesn't zero it. 3) If auth_len is greater 0, then
    compose_sadb_supported treats the memory as a struct sadb_supported and
    begins to initialize. But it just initializes the field sadb_supported_len
    and field sadb_supported_exttype without field sadb_supported_reserved.
    
    Reported-by: TCS Robot <tcs_robot@tencent.com>
    Signed-off-by: Haimin Zhang <tcs_kernel@tencent.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef1a6ab36dc3644073736ca5df9f6742a1aa9a64
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Fri Mar 4 13:17:33 2022 -0800

    Input: zinitix - do not report shadow fingers
    
    [ Upstream commit e941dc13fd3717122207d74539ab95da07ef797f ]
    
    I observed the following problem with the BT404 touch pad
    running the Phosh UI:
    
    When e.g. typing on the virtual keyboard pressing "g" would
    produce "ggg".
    
    After some analysis it turns out the firmware reports that three
    fingers hit that coordinate at the same time, finger 0, 2 and
    4 (of the five available 0,1,2,3,4).
    
    DOWN
      Zinitix-TS 3-0020: finger 0 down (246, 395)
      Zinitix-TS 3-0020: finger 1 up (0, 0)
      Zinitix-TS 3-0020: finger 2 down (246, 395)
      Zinitix-TS 3-0020: finger 3 up (0, 0)
      Zinitix-TS 3-0020: finger 4 down (246, 395)
    UP
      Zinitix-TS 3-0020: finger 0 up (246, 395)
      Zinitix-TS 3-0020: finger 2 up (246, 395)
      Zinitix-TS 3-0020: finger 4 up (246, 395)
    
    This is one touch and release: i.e. this is all reported on
    touch (down) and release.
    
    There is a field in the struct touch_event called finger_cnt
    which is actually a bitmask of the fingers active in the
    event.
    
    Rename this field finger_mask as this matches the use contents
    better, then use for_each_set_bit() to iterate over just the
    fingers that are actally active.
    
    Factor out a finger reporting function zinitix_report_fingers()
    to handle all fingers.
    
    Also be more careful in reporting finger down/up: we were
    reporting every event with input_mt_report_slot_state(..., true);
    but this should only be reported on finger down or move,
    not on finger up, so also add code to check p->sub_status
    to see what is happening and report correctly.
    
    After this my Zinitix BT404 touchscreen report fingers
    flawlessly.
    
    The vendor drive I have notably does not use the "finger_cnt"
    and contains obviously incorrect code like this:
    
      if (touch_dev->touch_info.finger_cnt > MAX_SUPPORTED_FINGER_NUM)
          touch_dev->touch_info.finger_cnt = MAX_SUPPORTED_FINGER_NUM;
    
    As MAX_SUPPORTED_FINGER_NUM is an ordinal and the field is
    a bitmask this seems quite confused.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20220228233017.2270599-1-linus.walleij@linaro.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21680aabc4d3b789e0379c17561d27f9bc8f6d31
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Wed Mar 16 17:53:17 2022 +0000

    spi: Fix erroneous sgs value with min_t()
    
    [ Upstream commit ebc4cb43ea5ada3db46c80156fca58a54b9bbca8 ]
    
    While computing sgs in spi_map_buf(), the data type
    used in min_t() for max_seg_size is 'unsigned int' where
    as that of ctlr->max_dma_len is 'size_t'.
    
    min_t(unsigned int,x,y) gives wrong results if one of x/y is
    'size_t'
    
    Consider the below examples on a 64-bit machine (ie size_t is
    64-bits, and unsigned int is 32-bit).
        case 1) min_t(unsigned int, 5, 0x100000001);
        case 2) min_t(size_t, 5, 0x100000001);
    
    Case 1 returns '1', where as case 2 returns '5'. As you can see
    the result from case 1 is wrong.
    
    This patch fixes the above issue by using the data type of the
    parameters that are used in min_t with maximum data length.
    
    Fixes: commit 1a4e53d2fc4f68aa ("spi: Fix invalid sgs value")
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Suggested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Link: https://lore.kernel.org/r/20220316175317.465-1-biju.das.jz@bp.renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fb7af1b5a8350ad1052051f8c9fe88a22f3064e
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Tue Mar 15 17:52:05 2022 +0100

    Revert "gpio: Revert regression in sysfs-gpio (gpiolib.c)"
    
    [ Upstream commit 56e337f2cf1326323844927a04e9dbce9a244835 ]
    
    This reverts commit fc328a7d1fcce263db0b046917a66f3aa6e68719.
    
    This commit - while attempting to fix a regression - has caused a number
    of other problems. As the fallout from it is more significant than the
    initial problem itself, revert it for now before we find a correct
    solution.
    
    Link: https://lore.kernel.org/all/20220314192522.GA3031157@roeck-us.net/
    Link: https://lore.kernel.org/stable/20220314155509.552218-1-michael@walle.cc/
    Link: https://lore.kernel.org/all/20211217153555.9413-1-marcelo.jimenez@gmail.com/
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Reported-and-bisected-by: Guenter Roeck <linux@roeck-us.net>
    Reported-by: Michael Walle <michael@walle.cc>
    Cc: Thorsten Leemhuis <linux@leemhuis.info>
    Cc: Marcelo Roberto Jimenez <marcelo.jimenez@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18a4417a192f6d2527792d71963a06d36f6dd1b5
Author: Minghao Chi (CGEL ZTE) <chi.minghao@zte.com.cn>
Date:   Tue Mar 8 06:43:09 2022 +0000

    net:mcf8390: Use platform_get_irq() to get the interrupt
    
    [ Upstream commit 2a760554dcba450d3ad61b32375b50ed6d59a87c ]
    
    It is not recommened to use platform_get_resource(pdev, IORESOURCE_IRQ)
    for requesting IRQ's resources any more, as they can be not ready yet in
    case of DT-booting.
    
    platform_get_irq() instead is a recommended way for getting IRQ even if
    it was not retrieved earlier.
    
    It also makes code simpler because we're getting "int" value right away
    and no conversion from resource to int is required.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Minghao Chi (CGEL ZTE) <chi.minghao@zte.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 102d7f6c2eff2e7a3e1f9271a61d0c006dce1291
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Mon Mar 7 18:48:43 2022 +0000

    spi: Fix invalid sgs value
    
    [ Upstream commit 1a4e53d2fc4f68aa654ad96d13ad042e1a8e8a7d ]
    
    max_seg_size is unsigned int and it can have a value up to 2^32
    (for eg:-RZ_DMAC driver sets dma_set_max_seg_size as U32_MAX)
    When this value is used in min_t() as an integer type, it becomes
    -1 and the value of sgs becomes 0.
    
    Fix this issue by replacing the 'int' data type with 'unsigned int'
    in min_t().
    
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20220307184843.9994-1-biju.das.jz@bp.renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4f4ce3deedb52cd01942a684b0aa30d3b78e890
Author: Marcelo Roberto Jimenez <marcelo.jimenez@gmail.com>
Date:   Mon Mar 7 10:57:24 2022 +0100

    gpio: Revert regression in sysfs-gpio (gpiolib.c)
    
    [ Upstream commit fc328a7d1fcce263db0b046917a66f3aa6e68719 ]
    
    Some GPIO lines have stopped working after the patch
    commit 2ab73c6d8323f ("gpio: Support GPIO controllers without pin-ranges")
    
    And this has supposedly been fixed in the following patches
    commit 89ad556b7f96a ("gpio: Avoid using pin ranges with !PINCTRL")
    commit 6dbbf84603961 ("gpiolib: Don't free if pin ranges are not defined")
    
    But an erratic behavior where some GPIO lines work while others do not work
    has been introduced.
    
    This patch reverts those changes so that the sysfs-gpio interface works
    properly again.
    
    Signed-off-by: Marcelo Roberto Jimenez <marcelo.jimenez@gmail.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc9a35627c3dd1d7dcccf1285d8dae531eff4189
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Mar 5 14:55:04 2022 +0000

    ethernet: sun: Free the coherent when failing in probing
    
    [ Upstream commit bb77bd31c281f70ec77c9c4f584950a779e05cf8 ]
    
    When the driver fails to register net device, it should free the DMA
    region first, and then do other cleanup.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c8447192532f6daf9c553af9a14431d2016e62c
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Tue Jan 18 16:06:31 2022 +0100

    tools/virtio: fix virtio_test execution
    
    [ Upstream commit 32f1b53fe8f03d962423ba81f8e92af5839814da ]
    
    virtio_test hangs on __vring_new_virtqueue() because `vqs_list_lock`
    is not initialized.
    
    Let's initialize it in vdev_info_init().
    
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Link: https://lore.kernel.org/r/20220118150631.167015-1-sgarzare@redhat.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d98dc2369b1d93e24a7f12e2ebf0754a8255cdd
Author: Si-Wei Liu <si-wei.liu@oracle.com>
Date:   Fri Jan 14 19:28:00 2022 -0500

    vdpa/mlx5: should verify CTRL_VQ feature exists for MQ
    
    [ Upstream commit 30c22f3816ffef8aa21a000e93c4ee1402a6ea65 ]
    
    Per VIRTIO v1.1 specification, section 5.1.3.1 Feature bit requirements:
    "VIRTIO_NET_F_MQ Requires VIRTIO_NET_F_CTRL_VQ".
    
    There's assumption in the mlx5_vdpa multiqueue code that MQ must come
    together with CTRL_VQ. However, there's nowhere in the upper layer to
    guarantee this assumption would hold. Were there an untrusted driver
    sending down MQ without CTRL_VQ, it would compromise various spots for
    e.g. is_index_valid() and is_ctrl_vq_idx(). Although this doesn't end
    up with immediate panic or security loophole as of today's code, the
    chance for this to be taken advantage of due to future code change is
    not zero.
    
    Harden the crispy assumption by failing the set_driver_features() call
    when seeing (MQ && !CTRL_VQ). For that end, verify_min_features() is
    renamed to verify_driver_features() to reflect the fact that it now does
    more than just validate the minimum features. verify_driver_features()
    is now used to accommodate various checks against the driver features
    for set_driver_features().
    
    Signed-off-by: Si-Wei Liu <si-wei.liu@oracle.com>
    Link: https://lore.kernel.org/r/1642206481-30721-3-git-send-email-si-wei.liu@oracle.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Eli Cohen <elic@nvidia.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c97ffb4184f0521dfaba8be14dd76795d69e604a
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Oct 5 03:04:10 2021 -0400

    virtio_console: break out of buf poll on remove
    
    [ Upstream commit 0e7174b9d5877130fec41fb4a16e0c2ee4958d44 ]
    
    A common pattern for device reset is currently:
    vdev->config->reset(vdev);
    .. cleanup ..
    
    reset prevents new interrupts from arriving and waits for interrupt
    handlers to finish.
    
    However if - as is common - the handler queues a work request which is
    flushed during the cleanup stage, we have code adding buffers / trying
    to get buffers while device is reset. Not good.
    
    This was reproduced by running
            modprobe virtio_console
            modprobe -r virtio_console
    in a loop.
    
    Fix this up by calling virtio_break_device + flush before reset.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1786239
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c00d38337ec2cc26ff0e40ac7f2cb0d1318da7f
Author: Daniel Palmer <daniel@0x0f.com>
Date:   Tue Mar 1 19:43:49 2022 +0900

    ARM: mstar: Select HAVE_ARM_ARCH_TIMER
    
    [ Upstream commit ea49432d184a6a09f84461604b7711a4e9f5ec9c ]
    
    The mstar SoCs have an arch timer but HAVE_ARM_ARCH_TIMER wasn't
    selected. If MSC313E_TIMER isn't selected then the kernel gets
    stuck at boot because there are no timers available.
    
    Signed-off-by: Daniel Palmer <daniel@0x0f.com>
    Link: https://lore.kernel.org/r/20220301104349.3040422-1-daniel@0x0f.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7e75e5ed4179758b121a3b95f7d8addf70d0d36
Author: Lina Wang <lina.wang@mediatek.com>
Date:   Sat Feb 26 15:48:01 2022 +0800

    xfrm: fix tunnel model fragmentation behavior
    
    [ Upstream commit 4ff2980b6bd2aa6b4ded3ce3b7c0ccfab29980af ]
    
    in tunnel mode, if outer interface(ipv4) is less, it is easily to let
    inner IPV6 mtu be less than 1280. If so, a Packet Too Big ICMPV6 message
    is received. When send again, packets are fragmentized with 1280, they
    are still rejected with ICMPV6(Packet Too Big) by xfrmi_xmit2().
    
    According to RFC4213 Section3.2.2:
    if (IPv4 path MTU - 20) is less than 1280
            if packet is larger than 1280 bytes
                    Send ICMPv6 "packet too big" with MTU=1280
                    Drop packet
            else
                    Encapsulate but do not set the Don't Fragment
                    flag in the IPv4 header.  The resulting IPv4
                    packet might be fragmented by the IPv4 layer
                    on the encapsulator or by some router along
                    the IPv4 path.
            endif
    else
            if packet is larger than (IPv4 path MTU - 20)
                    Send ICMPv6 "packet too big" with
                    MTU = (IPv4 path MTU - 20).
                    Drop packet.
            else
                    Encapsulate and set the Don't Fragment flag
                    in the IPv4 header.
            endif
    endif
    Packets should be fragmentized with ipv4 outer interface, so change it.
    
    After it is fragemtized with ipv4, there will be double fragmenation.
    No.48 & No.51 are ipv6 fragment packets, No.48 is double fragmentized,
    then tunneled with IPv4(No.49& No.50), which obey spec. And received peer
    cannot decrypt it rightly.
    
    48              2002::10        2002::11 1296(length) IPv6 fragment (off=0 more=y ident=0xa20da5bc nxt=50)
    49   0x0000 (0) 2002::10        2002::11 1304         IPv6 fragment (off=0 more=y ident=0x7448042c nxt=44)
    50   0x0000 (0) 2002::10        2002::11 200          ESP (SPI=0x00035000)
    51              2002::10        2002::11 180          Echo (ping) request
    52   0x56dc     2002::10        2002::11 248          IPv6 fragment (off=1232 more=n ident=0xa20da5bc nxt=50)
    
    xfrm6_noneed_fragment has fixed above issues. Finally, it acted like below:
    1   0x6206 192.168.1.138   192.168.1.1 1316 Fragmented IP protocol (proto=Encap Security Payload 50, off=0, ID=6206) [Reassembled in #2]
    2   0x6206 2002::10        2002::11    88   IPv6 fragment (off=0 more=y ident=0x1f440778 nxt=50)
    3   0x0000 2002::10        2002::11    248  ICMPv6    Echo (ping) request
    
    Signed-off-by: Lina Wang <lina.wang@mediatek.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e05ae08ea82f2d84114a777541a67b7e39661846
Author: Lucas Zampieri <lzampier@redhat.com>
Date:   Wed Jan 26 11:44:00 2022 -0300

    HID: logitech-dj: add new lightspeed receiver id
    
    [ Upstream commit 25666e8ccd952627899b09b68f7c9b68cfeaf028 ]
    
    As of logitech lightspeed receiver fw version 04.02.B0009,
    HIDPP_PARAM_DEVICE_INFO is being reported as 0x11.
    
    With patch "HID: logitech-dj: add support for the new lightspeed receiver
    iteration", the mouse starts to error out with:
      logitech-djreceiver: unusable device of type UNKNOWN (0x011) connected on
      slot 1
    and becomes unusable.
    
    This has been noticed on a Logitech G Pro X Superlight fw MPM 25.01.B0018.
    
    Signed-off-by: Lucas Zampieri <lzampier@redhat.com>
    Acked-by: Nestor Lopez Casado <nlopezcasad@logitech.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff919a7ad90c361634f0bc5c58120252d87b887a
Author: Yajun Deng <yajun.deng@linux.dev>
Date:   Thu Aug 5 19:54:34 2021 +0800

    netdevice: add the case if dev is NULL
    
    commit b37a466837393af72fe8bcb8f1436410f3f173f3 upstream.
    
    Add the case if dev is NULL in dev_{put, hold}, so the caller doesn't
    need to care whether dev is NULL or not.
    
    Signed-off-by: Yajun Deng <yajun.deng@linux.dev>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Pavel Machek <pavel@denx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4dc584a2d4c8d74b054f09d67e0a076767bdee5
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Nov 25 18:33:16 2021 -0800

    hv: utils: add PTP_1588_CLOCK to Kconfig to fix build
    
    commit 1dc2f2b81a6a9895da59f3915760f6c0c3074492 upstream.
    
    The hyperv utilities use PTP clock interfaces and should depend a
    a kconfig symbol such that they will be built as a loadable module or
    builtin so that linker errors do not happen.
    
    Prevents these build errors:
    
    ld: drivers/hv/hv_util.o: in function `hv_timesync_deinit':
    hv_util.c:(.text+0x37d): undefined reference to `ptp_clock_unregister'
    ld: drivers/hv/hv_util.o: in function `hv_timesync_init':
    hv_util.c:(.text+0x738): undefined reference to `ptp_clock_register'
    
    Fixes: 3716a49a81ba ("hv_utils: implement Hyper-V PTP source")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: "K. Y. Srinivasan" <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Wei Liu <wei.liu@kernel.org>
    Cc: Dexuan Cui <decui@microsoft.com>
    Cc: linux-hyperv@vger.kernel.org
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Link: https://lore.kernel.org/r/20211126023316.25184-1-rdunlap@infradead.org
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Cc: Petr Štetiar <ynezz@true.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d136a2574a45b078338e83ef1b13a339de31fc5a
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Feb 28 09:49:19 2022 +0100

    USB: serial: simple: add Nokia phone driver
    
    commit c4b9c570965f75d0d55e639747f1e5ccdad2fae0 upstream.
    
    Add a new "simple" driver for certain Nokia phones, including Nokia 130
    (RM-1035) which exposes two serial ports in "charging only" mode:
    
    Bus 001 Device 009: ID 0421:069a Nokia Mobile Phones 130 [RM-1035] (Charging only)
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               2.00
      bDeviceClass            0
      bDeviceSubClass         0
      bDeviceProtocol         0
      bMaxPacketSize0         8
      idVendor           0x0421 Nokia Mobile Phones
      idProduct          0x069a 130 [RM-1035] (Charging only)
      bcdDevice            1.00
      iManufacturer           1 Nokia
      iProduct                2 Nokia 130 (RM-1035)
      iSerial                 0
      bNumConfigurations      1
      Configuration Descriptor:
        bLength                 9
        bDescriptorType         2
        wTotalLength       0x0037
        bNumInterfaces          2
        bConfigurationValue     1
        iConfiguration          0
        bmAttributes         0x80
          (Bus Powered)
        MaxPower              500mA
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        0
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass    255 Vendor Specific Subclass
          bInterfaceProtocol    255 Vendor Specific Protocol
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x81  EP 1 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x01  EP 1 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        1
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass    255 Vendor Specific Subclass
          bInterfaceProtocol    255 Vendor Specific Protocol
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x82  EP 2 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x02  EP 2 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
    Device Status:     0x0000
      (Bus Powered)
    
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220228084919.10656-1-johan@kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38e3d48ffebfa5d046374ab22d2d86e50a0502e0
Author: Eddie James <eajames@linux.ibm.com>
Date:   Tue Mar 1 16:44:46 2022 -0600

    USB: serial: pl2303: add IBM device IDs
    
    commit e1d15646565b284e9ef2433234d6cfdaf66695f1 upstream.
    
    IBM manufactures a PL2303 device for UPS communications. Add the vendor
    and product IDs so that the PL2303 driver binds to the device.
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Link: https://lore.kernel.org/r/20220301224446.21236-1-eajames@linux.ibm.com
    Cc: stable@vger.kernel.org
    [ johan: amend the SoB chain ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4d975e7921079f877f828099bb8260af335508f
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Fri Feb 11 02:12:52 2022 +0100

    swiotlb: fix info leak with DMA_FROM_DEVICE
    
    commit ddbd89deb7d32b1fbb879f48d68fda1a8ac58e8e upstream.
    
    The problem I'm addressing was discovered by the LTP test covering
    cve-2018-1000204.
    
    A short description of what happens follows:
    1) The test case issues a command code 00 (TEST UNIT READY) via the SG_IO
       interface with: dxfer_len == 524288, dxdfer_dir == SG_DXFER_FROM_DEV
       and a corresponding dxferp. The peculiar thing about this is that TUR
       is not reading from the device.
    2) In sg_start_req() the invocation of blk_rq_map_user() effectively
       bounces the user-space buffer. As if the device was to transfer into
       it. Since commit a45b599ad808 ("scsi: sg: allocate with __GFP_ZERO in
       sg_build_indirect()") we make sure this first bounce buffer is
       allocated with GFP_ZERO.
    3) For the rest of the story we keep ignoring that we have a TUR, so the
       device won't touch the buffer we prepare as if the we had a
       DMA_FROM_DEVICE type of situation. My setup uses a virtio-scsi device
       and the  buffer allocated by SG is mapped by the function
       virtqueue_add_split() which uses DMA_FROM_DEVICE for the "in" sgs (here
       scatter-gather and not scsi generics). This mapping involves bouncing
       via the swiotlb (we need swiotlb to do virtio in protected guest like
       s390 Secure Execution, or AMD SEV).
    4) When the SCSI TUR is done, we first copy back the content of the second
       (that is swiotlb) bounce buffer (which most likely contains some
       previous IO data), to the first bounce buffer, which contains all
       zeros.  Then we copy back the content of the first bounce buffer to
       the user-space buffer.
    5) The test case detects that the buffer, which it zero-initialized,
      ain't all zeros and fails.
    
    One can argue that this is an swiotlb problem, because without swiotlb
    we leak all zeros, and the swiotlb should be transparent in a sense that
    it does not affect the outcome (if all other participants are well
    behaved).
    
    Copying the content of the original buffer into the swiotlb buffer is
    the only way I can think of to make swiotlb transparent in such
    scenarios. So let's do just that if in doubt, but allow the driver
    to tell us that the whole mapped buffer is going to be overwritten,
    in which case we can preserve the old behavior and avoid the performance
    impact of the extra bounce.
    
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
