commit 74ded189e5e4df83aaa1478f7a021f904105c8dc
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Aug 21 15:16:27 2022 +0200

    Linux 5.10.137
    
    Link: https://lore.kernel.org/r/20220819153829.135562864@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Rudi Heitbaum <rudi@heitbaum.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/20220820182952.751374248@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb4e220e1b2bbe6b983ebe78fed5eae6ce31c1c2
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Aug 19 20:01:10 2022 +0800

    btrfs: raid56: don't trust any cached sector in __raid56_parity_recover()
    
    commit f6065f8edeb25f4a9dfe0b446030ad995a84a088 upstream.
    
    [BUG]
    There is a small workload which will always fail with recent kernel:
    (A simplified version from btrfs/125 test case)
    
      mkfs.btrfs -f -m raid5 -d raid5 -b 1G $dev1 $dev2 $dev3
      mount $dev1 $mnt
      xfs_io -f -c "pwrite -S 0xee 0 1M" $mnt/file1
      sync
      umount $mnt
      btrfs dev scan -u $dev3
      mount -o degraded $dev1 $mnt
      xfs_io -f -c "pwrite -S 0xff 0 128M" $mnt/file2
      umount $mnt
      btrfs dev scan
      mount $dev1 $mnt
      btrfs balance start --full-balance $mnt
      umount $mnt
    
    The failure is always failed to read some tree blocks:
    
      BTRFS info (device dm-4): relocating block group 217710592 flags data|raid5
      BTRFS error (device dm-4): parent transid verify failed on 38993920 wanted 9 found 7
      BTRFS error (device dm-4): parent transid verify failed on 38993920 wanted 9 found 7
      ...
    
    [CAUSE]
    With the recently added debug output, we can see all RAID56 operations
    related to full stripe 38928384:
    
      56.1183: raid56_read_partial: full_stripe=38928384 devid=2 type=DATA1 offset=0 opf=0x0 physical=9502720 len=65536
      56.1185: raid56_read_partial: full_stripe=38928384 devid=3 type=DATA2 offset=16384 opf=0x0 physical=9519104 len=16384
      56.1185: raid56_read_partial: full_stripe=38928384 devid=3 type=DATA2 offset=49152 opf=0x0 physical=9551872 len=16384
      56.1187: raid56_write_stripe: full_stripe=38928384 devid=3 type=DATA2 offset=0 opf=0x1 physical=9502720 len=16384
      56.1188: raid56_write_stripe: full_stripe=38928384 devid=3 type=DATA2 offset=32768 opf=0x1 physical=9535488 len=16384
      56.1188: raid56_write_stripe: full_stripe=38928384 devid=1 type=PQ1 offset=0 opf=0x1 physical=30474240 len=16384
      56.1189: raid56_write_stripe: full_stripe=38928384 devid=1 type=PQ1 offset=32768 opf=0x1 physical=30507008 len=16384
      56.1218: raid56_write_stripe: full_stripe=38928384 devid=3 type=DATA2 offset=49152 opf=0x1 physical=9551872 len=16384
      56.1219: raid56_write_stripe: full_stripe=38928384 devid=1 type=PQ1 offset=49152 opf=0x1 physical=30523392 len=16384
      56.2721: raid56_parity_recover: full stripe=38928384 eb=39010304 mirror=2
      56.2723: raid56_parity_recover: full stripe=38928384 eb=39010304 mirror=2
      56.2724: raid56_parity_recover: full stripe=38928384 eb=39010304 mirror=2
    
    Before we enter raid56_parity_recover(), we have triggered some metadata
    write for the full stripe 38928384, this leads to us to read all the
    sectors from disk.
    
    Furthermore, btrfs raid56 write will cache its calculated P/Q sectors to
    avoid unnecessary read.
    
    This means, for that full stripe, after any partial write, we will have
    stale data, along with P/Q calculated using that stale data.
    
    Thankfully due to patch "btrfs: only write the sectors in the vertical stripe
    which has data stripes" we haven't submitted all the corrupted P/Q to disk.
    
    When we really need to recover certain range, aka in
    raid56_parity_recover(), we will use the cached rbio, along with its
    cached sectors (the full stripe is all cached).
    
    This explains why we have no event raid56_scrub_read_recover()
    triggered.
    
    Since we have the cached P/Q which is calculated using the stale data,
    the recovered one will just be stale.
    
    In our particular test case, it will always return the same incorrect
    metadata, thus causing the same error message "parent transid verify
    failed on 39010304 wanted 9 found 7" again and again.
    
    [BTRFS DESTRUCTIVE RMW PROBLEM]
    
    Test case btrfs/125 (and above workload) always has its trouble with
    the destructive read-modify-write (RMW) cycle:
    
            0       32K     64K
    Data1:  | Good  | Good  |
    Data2:  | Bad   | Bad   |
    Parity: | Good  | Good  |
    
    In above case, if we trigger any write into Data1, we will use the bad
    data in Data2 to re-generate parity, killing the only chance to recovery
    Data2, thus Data2 is lost forever.
    
    This destructive RMW cycle is not specific to btrfs RAID56, but there
    are some btrfs specific behaviors making the case even worse:
    
    - Btrfs will cache sectors for unrelated vertical stripes.
    
      In above example, if we're only writing into 0~32K range, btrfs will
      still read data range (32K ~ 64K) of Data1, and (64K~128K) of Data2.
      This behavior is to cache sectors for later update.
    
      Incidentally commit d4e28d9b5f04 ("btrfs: raid56: make steal_rbio()
      subpage compatible") has a bug which makes RAID56 to never trust the
      cached sectors, thus slightly improve the situation for recovery.
    
      Unfortunately, follow up fix "btrfs: update stripe_sectors::uptodate in
      steal_rbio" will revert the behavior back to the old one.
    
    - Btrfs raid56 partial write will update all P/Q sectors and cache them
    
      This means, even if data at (64K ~ 96K) of Data2 is free space, and
      only (96K ~ 128K) of Data2 is really stale data.
      And we write into that (96K ~ 128K), we will update all the parity
      sectors for the full stripe.
    
      This unnecessary behavior will completely kill the chance of recovery.
    
      Thankfully, an unrelated optimization "btrfs: only write the sectors
      in the vertical stripe which has data stripes" will prevent
      submitting the write bio for untouched vertical sectors.
    
      That optimization will keep the on-disk P/Q untouched for a chance for
      later recovery.
    
    [FIX]
    Although we have no good way to completely fix the destructive RMW
    (unless we go full scrub for each partial write), we can still limit the
    damage.
    
    With patch "btrfs: only write the sectors in the vertical stripe which
    has data stripes" now we won't really submit the P/Q of unrelated
    vertical stripes, so the on-disk P/Q should still be fine.
    
    Now we really need to do is just drop all the cached sectors when doing
    recovery.
    
    By this, we have a chance to read the original P/Q from disk, and have a
    chance to recover the stale data, while still keep the cache to speed up
    regular write path.
    
    In fact, just dropping all the cache for recovery path is good enough to
    allow the test case btrfs/125 along with the small script to pass
    reliably.
    
    The lack of metadata write after the degraded mount, and forced metadata
    COW is saving us this time.
    
    So this patch will fix the behavior by not trust any cache in
    __raid56_parity_recover(), to solve the problem while still keep the
    cache useful.
    
    But please note that this test pass DOES NOT mean we have solved the
    destructive RMW problem, we just do better damage control a little
    better.
    
    Related patches:
    
    - btrfs: only write the sectors in the vertical stripe
    - d4e28d9b5f04 ("btrfs: raid56: make steal_rbio() subpage compatible")
    - btrfs: update stripe_sectors::uptodate in steal_rbio
    
    Acked-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e1a039f44b7efcef6a4df13c9f105c8daa41be2
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Aug 19 20:01:09 2022 +0800

    btrfs: only write the sectors in the vertical stripe which has data stripes
    
    commit bd8f7e627703ca5707833d623efcd43f104c7b3f upstream.
    
    If we have only 8K partial write at the beginning of a full RAID56
    stripe, we will write the following contents:
    
                        0  8K           32K             64K
    Disk 1  (data):     |XX|            |               |
    Disk 2  (data):     |               |               |
    Disk 3  (parity):   |XXXXXXXXXXXXXXX|XXXXXXXXXXXXXXX|
    
    |X| means the sector will be written back to disk.
    
    Note that, although we won't write any sectors from disk 2, but we will
    write the full 64KiB of parity to disk.
    
    This behavior is fine for now, but not for the future (especially for
    RAID56J, as we waste quite some space to journal the unused parity
    stripes).
    
    So here we will also utilize the btrfs_raid_bio::dbitmap, anytime we
    queue a higher level bio into an rbio, we will update rbio::dbitmap to
    indicate which vertical stripes we need to writeback.
    
    And at finish_rmw(), we also check dbitmap to see if we need to write
    any sector in the vertical stripe.
    
    So after the patch, above example will only lead to the following
    writeback pattern:
    
                        0  8K           32K             64K
    Disk 1  (data):     |XX|            |               |
    Disk 2  (data):     |               |               |
    Disk 3  (parity):   |XX|            |               |
    
    Acked-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f317cd888059c59e2fa924bf4b0957cfa53f78e
Author: Tadeusz Struk <tadeusz.struk@linaro.org>
Date:   Thu Feb 3 08:18:46 2022 -0800

    sched/fair: Fix fault in reweight_entity
    
    commit 13765de8148f71fa795e0a6607de37c49ea5915a upstream.
    
    Syzbot found a GPF in reweight_entity. This has been bisected to
    commit 4ef0c5c6b5ba ("kernel/sched: Fix sched_fork() access an invalid
    sched_task_group")
    
    There is a race between sched_post_fork() and setpriority(PRIO_PGRP)
    within a thread group that causes a null-ptr-deref in
    reweight_entity() in CFS. The scenario is that the main process spawns
    number of new threads, which then call setpriority(PRIO_PGRP, 0, -20),
    wait, and exit.  For each of the new threads the copy_process() gets
    invoked, which adds the new task_struct and calls sched_post_fork()
    for it.
    
    In the above scenario there is a possibility that
    setpriority(PRIO_PGRP) and set_one_prio() will be called for a thread
    in the group that is just being created by copy_process(), and for
    which the sched_post_fork() has not been executed yet. This will
    trigger a null pointer dereference in reweight_entity(), as it will
    try to access the run queue pointer, which hasn't been set.
    
    Before the mentioned change the cfs_rq pointer for the task  has been
    set in sched_fork(), which is called much earlier in copy_process(),
    before the new task is added to the thread_group.  Now it is done in
    the sched_post_fork(), which is called after that.  To fix the issue
    the remove the update_load param from the update_load param() function
    and call reweight_task() only if the task flag doesn't have the
    TASK_NEW flag set.
    
    Fixes: 4ef0c5c6b5ba ("kernel/sched: Fix sched_fork() access an invalid sched_task_group")
    Reported-by: syzbot+af7a719bc92395ee41b3@syzkaller.appspotmail.com
    Signed-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20220203161846.1160750-1-tadeusz.struk@linaro.org
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa318d35bedce767d88648ca3016779f93f1bde5
Author: Jamal Hadi Salim <jhs@mojatatu.com>
Date:   Sun Aug 14 11:27:58 2022 +0000

    net_sched: cls_route: disallow handle of 0
    
    commit 02799571714dc5dd6948824b9d080b44a295f695 upstream.
    
    Follows up on:
    https://lore.kernel.org/all/20220809170518.164662-1-cascardo@canonical.com/
    
    handle of 0 implies from/to of universe realm which is not very
    sensible.
    
    Lets see what this patch will do:
    $sudo tc qdisc add dev $DEV root handle 1:0 prio
    
    //lets manufacture a way to insert handle of 0
    $sudo tc filter add dev $DEV parent 1:0 protocol ip prio 100 \
    route to 0 from 0 classid 1:10 action ok
    
    //gets rejected...
    Error: handle of 0 is not valid.
    We have an error talking to the kernel, -1
    
    //lets create a legit entry..
    sudo tc filter add dev $DEV parent 1:0 protocol ip prio 100 route from 10 \
    classid 1:10 action ok
    
    //what did the kernel insert?
    $sudo tc filter ls dev $DEV parent 1:0
    filter protocol ip pref 100 route chain 0
    filter protocol ip pref 100 route chain 0 fh 0x000a8000 flowid 1:10 from 10
            action order 1: gact action pass
             random type none pass val 0
             index 1 ref 1 bind 1
    
    //Lets try to replace that legit entry with a handle of 0
    $ sudo tc filter replace dev $DEV parent 1:0 protocol ip prio 100 \
    handle 0x000a8000 route to 0 from 0 classid 1:10 action drop
    
    Error: Replacing with handle of 0 is invalid.
    We have an error talking to the kernel, -1
    
    And last, lets run Cascardo's POC:
    $ ./poc
    0
    0
    -22
    -22
    -22
    
    Signed-off-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a2a00b60458214017a5eb8fb78fce723b5e2faf
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Sun Jul 10 09:14:02 2022 -0500

    net/9p: Initialize the iounit field during fid creation
    
    commit aa7aeee169480e98cf41d83c01290a37e569be6d upstream.
    
    Ensure that the fid's iounit field is set to zero when a new fid is
    created. Certain 9P operations, such as OPEN and CREATE, allow the
    server to reply with an iounit size which the client code assigns to the
    p9_fid struct shortly after the fid is created by p9_fid_create(). On
    the other hand, an XATTRWALK operation doesn't allow for the server to
    specify an iounit value. The iounit field of the newly allocated p9_fid
    struct remained uninitialized in that case. Depending on allocation
    patterns, the iounit value could have been something reasonable that was
    carried over from previously freed fids or, in the worst case, could
    have been arbitrary values from non-fid related usages of the memory
    location.
    
    The bug was detected in the Windows Subsystem for Linux 2 (WSL2) kernel
    after the uninitialized iounit field resulted in the typical sequence of
    two getxattr(2) syscalls, one to get the size of an xattr and another
    after allocating a sufficiently sized buffer to fit the xattr value, to
    hit an unexpected ERANGE error in the second call to getxattr(2). An
    uninitialized iounit field would sometimes force rsize to be smaller
    than the xattr value size in p9_client_read_once() and the 9P server in
    WSL refused to chunk up the READ on the attr_fid and, instead, returned
    ERANGE to the client. The virtfs server in QEMU seems happy to chunk up
    the READ and this problem goes undetected there.
    
    Link: https://lkml.kernel.org/r/20220710141402.803295-1-tyhicks@linux.microsoft.com
    Fixes: ebf46264a004 ("fs/9p: Add support user. xattr")
    Cc: stable@vger.kernel.org
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Reviewed-by: Christian Schoenebeck <linux_oss@crudebyte.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    [tyhicks: Adjusted context due to:
     - Lack of fid refcounting introduced in v5.11 commit 6636b6dcc3db ("9p:
       add refcount to p9_fid struct")
     - Difference in how buffer sizes are specified v5.16 commit
       6e195b0f7c8e ("9p: fix a bunch of checkpatch warnings")]
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 578c349570d2a912401963783b36e0ec7a25c053
Author: Jens Wiklander <jens.wiklander@linaro.org>
Date:   Thu Aug 18 13:08:59 2022 +0200

    tee: add overflow check in register_shm_helper()
    
    commit 573ae4f13f630d6660008f1974c0a8a29c30e18a upstream.
    
    With special lengths supplied by user space, register_shm_helper() has
    an integer overflow when calculating the number of pages covered by a
    supplied user space memory region.
    
    This causes internal_get_user_pages_fast() a helper function of
    pin_user_pages_fast() to do a NULL pointer dereference:
    
      Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010
      Modules linked in:
      CPU: 1 PID: 173 Comm: optee_example_a Not tainted 5.19.0 #11
      Hardware name: QEMU QEMU Virtual Machine, BIOS 0.0.0 02/06/2015
      pc : internal_get_user_pages_fast+0x474/0xa80
      Call trace:
       internal_get_user_pages_fast+0x474/0xa80
       pin_user_pages_fast+0x24/0x4c
       register_shm_helper+0x194/0x330
       tee_shm_register_user_buf+0x78/0x120
       tee_ioctl+0xd0/0x11a0
       __arm64_sys_ioctl+0xa8/0xec
       invoke_syscall+0x48/0x114
    
    Fix this by adding an an explicit call to access_ok() in
    tee_shm_register_user_buf() to catch an invalid user space address
    early.
    
    Fixes: 033ddf12bcf5 ("tee: add register user memory")
    Cc: stable@vger.kernel.org
    Reported-by: Nimish Mishra <neelam.nimish@gmail.com>
    Reported-by: Anirban Chakraborty <ch.anirban00727@gmail.com>
    Reported-by: Debdeep Mukhopadhyay <debdeep.mukhopadhyay@gmail.com>
    Suggested-by: Jerome Forissier <jerome.forissier@linaro.org>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98b20e1612e69bf91185cf722a96293a136fe894
Author: Aaron Lewis <aaronlewis@google.com>
Date:   Tue May 17 05:12:36 2022 +0000

    kvm: x86/pmu: Fix the compare function used by the pmu event filter
    
    commit 4ac19ead0dfbabd8e0bfc731f507cfb0b95d6c99 upstream.
    
    When returning from the compare function the u64 is truncated to an
    int.  This results in a loss of the high nybble[1] in the event select
    and its sign if that nybble is in use.  Switch from using a result that
    can end up being truncated to a result that can only be: 1, 0, -1.
    
    [1] bits 35:32 in the event select register and bits 11:8 in the event
        select.
    
    Fixes: 7ff775aca48ad ("KVM: x86/pmu: Use binary search to check filtered events")
    Signed-off-by: Aaron Lewis <aaronlewis@google.com>
    Reviewed-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220517051238.2566934-1-aaronlewis@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 705dfc4575d6fae17c60a222cb5f78d8de43be38
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Oct 8 18:36:40 2021 +0200

    mtd: rawnand: arasan: Prevent an unsupported configuration
    
    commit fc9e18f9e987ad46722dad53adab1c12148c213c upstream.
    
    Under the following conditions:
    * after rounding up by 4 the number of bytes to transfer (this is
      related to the controller's internal constraints),
    * if this (rounded) amount of data is situated beyond the end of the
      device,
    * and only in NV-DDR mode,
    the Arasan NAND controller timeouts.
    
    This currently can happen in a particular helper used when picking
    software ECC algorithms. Let's prevent this situation by refusing to use
    the NV-DDR interface with software engines.
    
    Fixes: 4edde6031458 ("mtd: rawnand: arasan: Support NV-DDR interface")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211008163640.1753821-1-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c898e917d8bb317addcafa4511bde51af8e3976e
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Mon Aug 1 13:52:07 2022 -0700

    Bluetooth: L2CAP: Fix l2cap_global_chan_by_psm regression
    
    commit 332f1795ca202489c665a75e62e18ff6284de077 upstream.
    
    The patch d0be8347c623: "Bluetooth: L2CAP: Fix use-after-free caused
    by l2cap_chan_put" from Jul 21, 2022, leads to the following Smatch
    static checker warning:
    
            net/bluetooth/l2cap_core.c:1977 l2cap_global_chan_by_psm()
            error: we previously assumed 'c' could be null (see line 1996)
    
    Fixes: d0be8347c623 ("Bluetooth: L2CAP: Fix use-after-free caused by l2cap_chan_put")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e81046da1d9b2ffe8bb26a70871bebc281bcd06a
Author: Jose Alonso <joalonsof@gmail.com>
Date:   Mon Aug 8 08:35:04 2022 -0300

    Revert "net: usb: ax88179_178a needs FLAG_SEND_ZLP"
    
    commit 6fd2c17fb6e02a8c0ab51df1cfec82ce96b8e83d upstream.
    
    This reverts commit 36a15e1cb134c0395261ba1940762703f778438c.
    
    The usage of FLAG_SEND_ZLP causes problems to other firmware/hardware
    versions that have no issues.
    
    The FLAG_SEND_ZLP is not safe to use in this context.
    See:
    https://patchwork.ozlabs.org/project/netdev/patch/1270599787.8900.8.camel@Linuxdev4-laptop/#118378
    The original problem needs another way to solve.
    
    Fixes: 36a15e1cb134 ("net: usb: ax88179_178a needs FLAG_SEND_ZLP")
    Cc: stable@vger.kernel.org
    Reported-by: Ronald Wahl <ronald.wahl@raritan.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216327
    Link: https://bugs.archlinux.org/task/75491
    Signed-off-by: Jose Alonso <joalonsof@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a60996dc027a026baca91a5bbf948bd3fb30ecd1
Author: Tom Rix <trix@redhat.com>
Date:   Wed Jun 29 16:01:01 2022 -0400

    drm/vc4: change vc4_dma_range_matches from a global to static
    
    commit 63569d90863ff26c8b10c8971d1271c17a45224b upstream.
    
    sparse reports
    drivers/gpu/drm/vc4/vc4_drv.c:270:27: warning: symbol 'vc4_dma_range_matches' was not declared. Should it be static?
    
    vc4_dma_range_matches is only used in vc4_drv.c, so it's storage class specifier
    should be static.
    
    Fixes: da8e393e23ef ("drm/vc4: drv: Adopt the dma configuration from the HVS or V3D component")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220629200101.498138-1-trix@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3422e24af9ba79eb4ba70646dfd3c1621ea92558
Author: Marek Vasut <marex@denx.de>
Date:   Thu Apr 28 23:31:32 2022 +0200

    drm/bridge: tc358767: Fix (e)DP bridge endpoint parsing in dedicated function
    
    commit 9030a9e571b3ba250d3d450a98310e3c74ecaff4 upstream.
    
    Per toshiba,tc358767.yaml DT binding document, port@2 the output (e)DP
    port is optional. In case this port is not described in DT, the bridge
    driver operates in DPI-to-DP mode. The drm_of_find_panel_or_bridge()
    call in tc_probe_edp_bridge_endpoint() returns -ENODEV in case port@2
    is not present in DT and this specific return value is incorrectly
    propagated outside of tc_probe_edp_bridge_endpoint() function. All
    other error values must be propagated and are propagated correctly.
    
    Return 0 in case the port@2 is missing instead, that reinstates the
    original behavior before the commit this patch fixes.
    
    Fixes: 8478095a8c4b ("drm/bridge: tc358767: Move (e)DP bridge endpoint parsing into dedicated function")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Jonas Karlman <jonas@kwiboo.se>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Lucas Stach <l.stach@pengutronix.de>
    Cc: Marek Vasut <marex@denx.de>
    Cc: Maxime Ripard <maxime@cerno.tech>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Robert Foss <robert.foss@linaro.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220428213132.447890-1-marex@denx.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2223b35c57523580317cf85254a9ae9819ecc7b1
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Jun 27 16:35:59 2022 +0200

    Revert "mwifiex: fix sleep in atomic context bugs caused by dev_coredumpv"
    
    commit 5f8954e099b8ae96e7de1bb95950e00c85bedd40 upstream.
    
    This reverts commit a52ed4866d2b90dd5e4ae9dabd453f3ed8fa3cbc as it
    causes build problems in linux-next.  It needs to be reintroduced in a
    way that can allow the api to evolve and not require a "flag day" to
    catch all users.
    
    Link: https://lore.kernel.org/r/20220623160723.7a44b573@canb.auug.org.au
    Cc: Duoming Zhou <duoming@zju.edu.cn>
    Cc: Brian Norris <briannorris@chromium.org>
    Cc: Johannes Berg <johannes@sipsolutions.net>
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8338305317dfc03622b1fedf9b23182b8c993a27
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jun 14 10:17:33 2022 -0700

    tcp: fix over estimation in sk_forced_mem_schedule()
    
    commit c4ee118561a0f74442439b7b5b486db1ac1ddfeb upstream.
    
    sk_forced_mem_schedule() has a bug similar to ones fixed
    in commit 7c80b038d23e ("net: fix sk_wmem_schedule() and
    sk_rmem_schedule() errors")
    
    While this bug has little chance to trigger in old kernels,
    we need to fix it before the following patch.
    
    Fixes: d83769a580f1 ("tcp: fix possible deadlock in tcp_send_fin()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Reviewed-by: Wei Wang <weiwan@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c35c01a7cb3002b86f7c245b9e5e3e76a331d738
Author: Ahmed Zaki <anzaki@gmail.com>
Date:   Sat Oct 2 08:53:29 2021 -0600

    mac80211: fix a memory leak where sta_info is not freed
    
    commit 8f9dcc29566626f683843ccac6113a12208315ca upstream.
    
    The following is from a system that went OOM due to a memory leak:
    
    wlan0: Allocated STA 74:83:c2:64:0b:87
    wlan0: Allocated STA 74:83:c2:64:0b:87
    wlan0: IBSS finish 74:83:c2:64:0b:87 (---from ieee80211_ibss_add_sta)
    wlan0: Adding new IBSS station 74:83:c2:64:0b:87
    wlan0: moving STA 74:83:c2:64:0b:87 to state 2
    wlan0: moving STA 74:83:c2:64:0b:87 to state 3
    wlan0: Inserted STA 74:83:c2:64:0b:87
    wlan0: IBSS finish 74:83:c2:64:0b:87 (---from ieee80211_ibss_work)
    wlan0: Adding new IBSS station 74:83:c2:64:0b:87
    wlan0: moving STA 74:83:c2:64:0b:87 to state 2
    wlan0: moving STA 74:83:c2:64:0b:87 to state 3
    .
    .
    wlan0: expiring inactive not authorized STA 74:83:c2:64:0b:87
    wlan0: moving STA 74:83:c2:64:0b:87 to state 2
    wlan0: moving STA 74:83:c2:64:0b:87 to state 1
    wlan0: Removed STA 74:83:c2:64:0b:87
    wlan0: Destroyed STA 74:83:c2:64:0b:87
    
    The ieee80211_ibss_finish_sta() is called twice on the same STA from 2
    different locations. On the second attempt, the allocated STA is not
    destroyed creating a kernel memory leak.
    
    This is happening because sta_info_insert_finish() does not call
    sta_info_free() the second time when the STA already exists (returns
    -EEXIST). Note that the caller sta_info_insert_rcu() assumes STA is
    destroyed upon errors.
    
    Same fix is applied to -ENOMEM.
    
    Signed-off-by: Ahmed Zaki <anzaki@gmail.com>
    Link: https://lore.kernel.org/r/20211002145329.3125293-1-anzaki@gmail.com
    [change the error path label to use the existing code]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Viacheslav Sablin <sablin@ispras.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac7de8c2ba1292856fdd4a4c0764669b9607cf0a
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Aug 10 23:24:39 2022 +0300

    KVM: x86: Avoid theoretical NULL pointer dereference in kvm_irq_delivery_to_apic_fast()
    
    commit 00b5f37189d24ac3ed46cb7f11742094778c46ce upstream
    
    When kvm_irq_delivery_to_apic_fast() is called with APIC_DEST_SELF
    shorthand, 'src' must not be NULL. Crash the VM with KVM_BUG_ON()
    instead of crashing the host.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20220325132140.25650-3-vkuznets@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c85e207c1b58249ea521670df577324ad69442c
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Aug 10 23:24:38 2022 +0300

    KVM: x86: Check lapic_in_kernel() before attempting to set a SynIC irq
    
    commit 7ec37d1cbe17d8189d9562178d8b29167fe1c31a upstream
    
    When KVM_CAP_HYPERV_SYNIC{,2} is activated, KVM already checks for
    irqchip_in_kernel() so normally SynIC irqs should never be set. It is,
    however,  possible for a misbehaving VMM to write to SYNIC/STIMER MSRs
    causing erroneous behavior.
    
    The immediate issue being fixed is that kvm_irq_delivery_to_apic()
    (kvm_irq_delivery_to_apic_fast()) crashes when called with
    'irq.shorthand = APIC_DEST_SELF' and 'src == NULL'.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20220325132140.25650-2-vkuznets@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4c94205ba79216ea80663801202f9dbbb3af89d
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Aug 10 23:24:37 2022 +0300

    KVM: Add infrastructure and macro to mark VM as bugged
    
    commit 0b8f11737cffc1a406d1134b58687abc29d76b52 upstream
    
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <3a0998645c328bf0895f1290e61821b70f048549.1625186503.git.isaku.yamahata@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [SG: Adjusted context for kernel version 5.10]
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7018f03d97daf344e49b16200caf4363a1407cab
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Aug 9 14:05:18 2022 -0300

    net_sched: cls_route: remove from list when handle is 0
    
    commit 9ad36309e2719a884f946678e0296be10f0bb4c1 upstream.
    
    When a route filter is replaced and the old filter has a 0 handle, the old
    one won't be removed from the hashtable, while it will still be freed.
    
    The test was there since before commit 1109c00547fc ("net: sched: RCU
    cls_route"), when a new filter was not allocated when there was an old one.
    The old filter was reused and the reinserting would only be necessary if an
    old filter was replaced. That was still wrong for the same case where the
    old handle was 0.
    
    Remove the old filter from the list independently from its handle value.
    
    This fixes CVE-2022-2588, also reported as ZDI-CAN-17440.
    
    Reported-by: Zhenpeng Lin <zplin@u.northwestern.edu>
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Reviewed-by: Kamal Mostafa <kamal@canonical.com>
    Cc: <stable@vger.kernel.org>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Link: https://lore.kernel.org/r/20220809170518.164662-1-cascardo@canonical.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49dba30638e091120256a9e89125340795f034dc
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jul 24 14:31:35 2022 -0400

    dm raid: fix address sanitizer warning in raid_status
    
    commit 1fbeea217d8f297fe0e0956a1516d14ba97d0396 upstream.
    
    There is this warning when using a kernel with the address sanitizer
    and running this testsuite:
    https://gitlab.com/cki-project/kernel-tests/-/tree/main/storage/swraid/scsi_raid
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in raid_status+0x1747/0x2820 [dm_raid]
    Read of size 4 at addr ffff888079d2c7e8 by task lvcreate/13319
    CPU: 0 PID: 13319 Comm: lvcreate Not tainted 5.18.0-0.rc3.<snip> #1
    Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011
    Call Trace:
     <TASK>
     dump_stack_lvl+0x6a/0x9c
     print_address_description.constprop.0+0x1f/0x1e0
     print_report.cold+0x55/0x244
     kasan_report+0xc9/0x100
     raid_status+0x1747/0x2820 [dm_raid]
     dm_ima_measure_on_table_load+0x4b8/0xca0 [dm_mod]
     table_load+0x35c/0x630 [dm_mod]
     ctl_ioctl+0x411/0x630 [dm_mod]
     dm_ctl_ioctl+0xa/0x10 [dm_mod]
     __x64_sys_ioctl+0x12a/0x1a0
     do_syscall_64+0x5b/0x80
    
    The warning is caused by reading conf->max_nr_stripes in raid_status. The
    code in raid_status reads mddev->private, casts it to struct r5conf and
    reads the entry max_nr_stripes.
    
    However, if we have different raid type than 4/5/6, mddev->private
    doesn't point to struct r5conf; it may point to struct r0conf, struct
    r1conf, struct r10conf or struct mpconf. If we cast a pointer to one
    of these structs to struct r5conf, we will be reading invalid memory
    and KASAN warns about it.
    
    Fix this bug by reading struct r5conf only if raid type is 4, 5 or 6.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2d47bef93fb74aa97d90f9a40ca657b8f376083
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jul 24 14:33:52 2022 -0400

    dm raid: fix address sanitizer warning in raid_resume
    
    commit 7dad24db59d2d2803576f2e3645728866a056dab upstream.
    
    There is a KASAN warning in raid_resume when running the lvm test
    lvconvert-raid.sh. The reason for the warning is that mddev->raid_disks
    is greater than rs->raid_disks, so the loop touches one entry beyond
    the allocated length.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0b495aa2692d50f72b9d18ea3897581b0bacc46
Author: Baokun Li <libaokun1@huawei.com>
Date:   Thu Jun 16 10:13:58 2022 +0800

    ext4: correct the misjudgment in ext4_iget_extra_inode
    
    commit fd7e672ea98b95b9d4c9dae316639f03c16a749d upstream.
    
    Use the EXT4_INODE_HAS_XATTR_SPACE macro to more accurately
    determine whether the inode have xattr space.
    
    Cc: stable@kernel.org
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Reviewed-by: Ritesh Harjani (IBM) <ritesh.list@gmail.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220616021358.2504451-5-libaokun1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 603fb7bd744ae2710568cf18816d5b494277afaf
Author: Baokun Li <libaokun1@huawei.com>
Date:   Thu Jun 16 10:13:57 2022 +0800

    ext4: correct max_inline_xattr_value_size computing
    
    commit c9fd167d57133c5b748d16913c4eabc55e531c73 upstream.
    
    If the ext4 inode does not have xattr space, 0 is returned in the
    get_max_inline_xattr_value_size function. Otherwise, the function returns
    a negative value when the inode does not contain EXT4_STATE_XATTR.
    
    Cc: stable@kernel.org
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Reviewed-by: Ritesh Harjani (IBM) <ritesh.list@gmail.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220616021358.2504451-4-libaokun1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8c747496f23e2cf152899e35de2f25ce647d72b
Author: Eric Whitney <enwlinux@gmail.com>
Date:   Wed Jun 15 12:05:30 2022 -0400

    ext4: fix extent status tree race in writeback error recovery path
    
    commit 7f0d8e1d607c1a4fa9a27362a108921d82230874 upstream.
    
    A race can occur in the unlikely event ext4 is unable to allocate a
    physical cluster for a delayed allocation in a bigalloc file system
    during writeback.  Failure to allocate a cluster forces error recovery
    that includes a call to mpage_release_unused_pages().  That function
    removes any corresponding delayed allocated blocks from the extent
    status tree.  If a new delayed write is in progress on the same cluster
    simultaneously, resulting in the addition of an new extent containing
    one or more blocks in that cluster to the extent status tree, delayed
    block accounting can be thrown off if that delayed write then encounters
    a similar cluster allocation failure during future writeback.
    
    Write lock the i_data_sem in mpage_release_unused_pages() to fix this
    problem.  Ext4's block/cluster accounting code for bigalloc relies on
    i_data_sem for mutual exclusion, as is found in the delayed write path,
    and the locking in mpage_release_unused_pages() is missing.
    
    Cc: stable@kernel.org
    Reported-by: Ye Bin <yebin10@huawei.com>
    Signed-off-by: Eric Whitney <enwlinux@gmail.com>
    Link: https://lore.kernel.org/r/20220615160530.1928801-1-enwlinux@gmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac8cc061145a54ff8d4e0f17f19f0200aabc21ff
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Jun 29 00:00:25 2022 -0400

    ext4: update s_overhead_clusters in the superblock during an on-line resize
    
    commit de394a86658ffe4e89e5328fd4993abfe41b7435 upstream.
    
    When doing an online resize, the on-disk superblock on-disk wasn't
    updated.  This means that when the file system is unmounted and
    remounted, and the on-disk overhead value is non-zero, this would
    result in the results of statfs(2) to be incorrect.
    
    This was partially fixed by Commits 10b01ee92df5 ("ext4: fix overhead
    calculation to account for the reserved gdt blocks"), 85d825dbf489
    ("ext4: force overhead calculation if the s_overhead_cluster makes no
    sense"), and eb7054212eac ("ext4: update the cached overhead value in
    the superblock").
    
    However, since it was too expensive to forcibly recalculate the
    overhead for bigalloc file systems at every mount, this didn't fix the
    problem for bigalloc file systems.  This commit should address the
    problem when resizing file systems with the bigalloc feature enabled.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Link: https://lore.kernel.org/r/20220629040026.112371-1-tytso@mit.edu
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb8592efcf8ef2f62947745d3182ea05b5256a15
Author: Baokun Li <libaokun1@huawei.com>
Date:   Thu Jun 16 10:13:56 2022 +0800

    ext4: fix use-after-free in ext4_xattr_set_entry
    
    commit 67d7d8ad99beccd9fe92d585b87f1760dc9018e3 upstream.
    
    Hulk Robot reported a issue:
    ==================================================================
    BUG: KASAN: use-after-free in ext4_xattr_set_entry+0x18ab/0x3500
    Write of size 4105 at addr ffff8881675ef5f4 by task syz-executor.0/7092
    
    CPU: 1 PID: 7092 Comm: syz-executor.0 Not tainted 4.19.90-dirty #17
    Call Trace:
    [...]
     memcpy+0x34/0x50 mm/kasan/kasan.c:303
     ext4_xattr_set_entry+0x18ab/0x3500 fs/ext4/xattr.c:1747
     ext4_xattr_ibody_inline_set+0x86/0x2a0 fs/ext4/xattr.c:2205
     ext4_xattr_set_handle+0x940/0x1300 fs/ext4/xattr.c:2386
     ext4_xattr_set+0x1da/0x300 fs/ext4/xattr.c:2498
     __vfs_setxattr+0x112/0x170 fs/xattr.c:149
     __vfs_setxattr_noperm+0x11b/0x2a0 fs/xattr.c:180
     __vfs_setxattr_locked+0x17b/0x250 fs/xattr.c:238
     vfs_setxattr+0xed/0x270 fs/xattr.c:255
     setxattr+0x235/0x330 fs/xattr.c:520
     path_setxattr+0x176/0x190 fs/xattr.c:539
     __do_sys_lsetxattr fs/xattr.c:561 [inline]
     __se_sys_lsetxattr fs/xattr.c:557 [inline]
     __x64_sys_lsetxattr+0xc2/0x160 fs/xattr.c:557
     do_syscall_64+0xdf/0x530 arch/x86/entry/common.c:298
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x459fe9
    RSP: 002b:00007fa5e54b4c08 EFLAGS: 00000246 ORIG_RAX: 00000000000000bd
    RAX: ffffffffffffffda RBX: 000000000051bf60 RCX: 0000000000459fe9
    RDX: 00000000200003c0 RSI: 0000000020000180 RDI: 0000000020000140
    RBP: 000000000051bf60 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000001009 R11: 0000000000000246 R12: 0000000000000000
    R13: 00007ffc73c93fc0 R14: 000000000051bf60 R15: 00007fa5e54b4d80
    [...]
    ==================================================================
    
    Above issue may happen as follows:
    -------------------------------------
    ext4_xattr_set
      ext4_xattr_set_handle
        ext4_xattr_ibody_find
          >> s->end < s->base
          >> no EXT4_STATE_XATTR
          >> xattr_check_inode is not executed
        ext4_xattr_ibody_set
          ext4_xattr_set_entry
           >> size_t min_offs = s->end - s->base
           >> UAF in memcpy
    
    we can easily reproduce this problem with the following commands:
        mkfs.ext4 -F /dev/sda
        mount -o debug_want_extra_isize=128 /dev/sda /mnt
        touch /mnt/file
        setfattr -n user.cat -v `seq -s z 4096|tr -d '[:digit:]'` /mnt/file
    
    In ext4_xattr_ibody_find, we have the following assignment logic:
      header = IHDR(inode, raw_inode)
             = raw_inode + EXT4_GOOD_OLD_INODE_SIZE + i_extra_isize
      is->s.base = IFIRST(header)
                 = header + sizeof(struct ext4_xattr_ibody_header)
      is->s.end = raw_inode + s_inode_size
    
    In ext4_xattr_set_entry
      min_offs = s->end - s->base
               = s_inode_size - EXT4_GOOD_OLD_INODE_SIZE - i_extra_isize -
                 sizeof(struct ext4_xattr_ibody_header)
      last = s->first
      free = min_offs - ((void *)last - s->base) - sizeof(__u32)
           = s_inode_size - EXT4_GOOD_OLD_INODE_SIZE - i_extra_isize -
             sizeof(struct ext4_xattr_ibody_header) - sizeof(__u32)
    
    In the calculation formula, all values except s_inode_size and
    i_extra_size are fixed values. When i_extra_size is the maximum value
    s_inode_size - EXT4_GOOD_OLD_INODE_SIZE, min_offs is -4 and free is -8.
    The value overflows. As a result, the preceding issue is triggered when
    memcpy is executed.
    
    Therefore, when finding xattr or setting xattr, check whether
    there is space for storing xattr in the inode to resolve this issue.
    
    Cc: stable@kernel.org
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Reviewed-by: Ritesh Harjani (IBM) <ritesh.list@gmail.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220616021358.2504451-3-libaokun1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69d1a36eb4b2337a42c376357bcaeae1f3ffd5ed
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Mon Jul 4 16:27:21 2022 +0200

    ext4: make sure ext4_append() always allocates new block
    
    commit b8a04fe77ef1360fbf73c80fddbdfeaa9407ed1b upstream.
    
    ext4_append() must always allocate a new block, otherwise we run the
    risk of overwriting existing directory block corrupting the directory
    tree in the process resulting in all manner of problems later on.
    
    Add a sanity check to see if the logical block is already allocated and
    error out if it is.
    
    Cc: stable@kernel.org
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Link: https://lore.kernel.org/r/20220704142721.157985-2-lczerner@redhat.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1682c7171a6c0ff576fe8116b8cba5b8f538b94
Author: Ye Bin <yebin10@huawei.com>
Date:   Fri Jun 17 09:39:35 2022 +0800

    ext4: fix warning in ext4_iomap_begin as race between bmap and write
    
    commit 51ae846cff568c8c29921b1b28eb2dfbcd4ac12d upstream.
    
    We got issue as follows:
    ------------[ cut here ]------------
    WARNING: CPU: 3 PID: 9310 at fs/ext4/inode.c:3441 ext4_iomap_begin+0x182/0x5d0
    RIP: 0010:ext4_iomap_begin+0x182/0x5d0
    RSP: 0018:ffff88812460fa08 EFLAGS: 00010293
    RAX: ffff88811f168000 RBX: 0000000000000000 RCX: ffffffff97793c12
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000003
    RBP: ffff88812c669160 R08: ffff88811f168000 R09: ffffed10258cd20f
    R10: ffff88812c669077 R11: ffffed10258cd20e R12: 0000000000000001
    R13: 00000000000000a4 R14: 000000000000000c R15: ffff88812c6691ee
    FS:  00007fd0d6ff3740(0000) GS:ffff8883af180000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fd0d6dda290 CR3: 0000000104a62000 CR4: 00000000000006e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     iomap_apply+0x119/0x570
     iomap_bmap+0x124/0x150
     ext4_bmap+0x14f/0x250
     bmap+0x55/0x80
     do_vfs_ioctl+0x952/0xbd0
     __x64_sys_ioctl+0xc6/0x170
     do_syscall_64+0x33/0x40
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Above issue may happen as follows:
              bmap                    write
    bmap
      ext4_bmap
        iomap_bmap
          ext4_iomap_begin
                                ext4_file_write_iter
                                  ext4_buffered_write_iter
                                    generic_perform_write
                                      ext4_da_write_begin
                                        ext4_da_write_inline_data_begin
                                          ext4_prepare_inline_data
                                            ext4_create_inline_data
                                              ext4_set_inode_flag(inode,
                                                    EXT4_INODE_INLINE_DATA);
          if (WARN_ON_ONCE(ext4_has_inline_data(inode))) ->trigger bug_on
    
    To solved above issue hold inode lock in ext4_bamp.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Link: https://lore.kernel.org/r/20220617013935.397596-1-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2da44a2927a71bff2bc66cefa8cfbd2ace702536
Author: Baokun Li <libaokun1@huawei.com>
Date:   Thu Jun 16 10:13:55 2022 +0800

    ext4: add EXT4_INODE_HAS_XATTR_SPACE macro in xattr.h
    
    commit 179b14152dcb6a24c3415200603aebca70ff13af upstream.
    
    When adding an xattr to an inode, we must ensure that the inode_size is
    not less than EXT4_GOOD_OLD_INODE_SIZE + extra_isize + pad. Otherwise,
    the end position may be greater than the start position, resulting in UAF.
    
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Ritesh Harjani (IBM) <ritesh.list@gmail.com>
    Link: https://lore.kernel.org/r/20220616021358.2504451-2-libaokun1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1571c4613059fce2a02508bb8206af75e24c0d58
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Mon Jul 4 16:27:20 2022 +0200

    ext4: check if directory block is within i_size
    
    commit 65f8ea4cd57dbd46ea13b41dc8bac03176b04233 upstream.
    
    Currently ext4 directory handling code implicitly assumes that the
    directory blocks are always within the i_size. In fact ext4_append()
    will attempt to allocate next directory block based solely on i_size and
    the i_size is then appropriately increased after a successful
    allocation.
    
    However, for this to work it requires i_size to be correct. If, for any
    reason, the directory inode i_size is corrupted in a way that the
    directory tree refers to a valid directory block past i_size, we could
    end up corrupting parts of the directory tree structure by overwriting
    already used directory blocks when modifying the directory.
    
    Fix it by catching the corruption early in __ext4_read_dirblock().
    
    Addresses Red-Hat-Bugzilla: #2070205
    CVE: CVE-2022-1184
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Link: https://lore.kernel.org/r/20220704142721.157985-1-lczerner@redhat.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e99da0f92142f13bfec27f96eff78d24b2c8b7d5
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Sun Jul 31 01:59:28 2022 -0400

    tracing: Use a struct alignof to determine trace event field alignment
    
    commit 4c3d2f9388d36eb28640a220a6f908328442d873 upstream.
    
    alignof() gives an alignment of types as they would be as standalone
    variables. But alignment in structures might be different, and when
    building the fields of events, the alignment must be the actual
    alignment otherwise the field offsets may not match what they actually
    are.
    
    This caused trace-cmd to crash, as libtraceevent did not check if the
    field offset was bigger than the event. The write_msr and read_msr
    events on 32 bit had their fields incorrect, because it had a u64 field
    between two ints. alignof(u64) would give 8, but the u64 field was at a
    4 byte alignment.
    
    Define a macro as:
    
       ALIGN_STRUCTFIELD(type) ((int)(offsetof(struct {char a; type b;}, b)))
    
    which gives the actual alignment of types in a structure.
    
    Link: https://lkml.kernel.org/r/20220731015928.7ab3a154@rorschach.local.home
    
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: stable@vger.kernel.org
    Fixes: 04ae87a52074e ("ftrace: Rework event_create_dir()")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35508b60b54a7ed8733e9d9a53875d311f34c9bc
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Mon Jul 11 09:17:38 2022 +0800

    tpm: eventlog: Fix section mismatch for DEBUG_SECTION_MISMATCH
    
    commit bed4593645366ad7362a3aa7bc0d100d8d8236a8 upstream.
    
    If DEBUG_SECTION_MISMATCH enabled, __calc_tpm2_event_size() will not be
    inlined, this cause section mismatch like this:
    
    WARNING: modpost: vmlinux.o(.text.unlikely+0xe30c): Section mismatch in reference from the variable L0 to the function .init.text:early_ioremap()
    The function L0() references
    the function __init early_memremap().
    This is often because L0 lacks a __init
    annotation or the annotation of early_ioremap is wrong.
    
    Fix it by using __always_inline instead of inline for the called-once
    function __calc_tpm2_event_size().
    
    Fixes: 44038bc514a2 ("tpm: Abstract crypto agile event size calculations")
    Cc: stable@vger.kernel.org # v5.3
    Reported-by: WANG Xuerui <git@xen0n.name>
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e48eaf75d18e70fed6c0f35388b484bcae1e31e
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Tue Jun 28 11:37:20 2022 +0800

    KEYS: asymmetric: enforce SM2 signature use pkey algo
    
    commit 0815291a8fd66cdcf7db1445d4d99b0d16065829 upstream.
    
    The signature verification of SM2 needs to add the Za value and
    recalculate sig->digest, which requires the detection of the pkey_algo
    in public_key_verify_signature(). As Eric Biggers said, the pkey_algo
    field in sig is attacker-controlled and should be use pkey->pkey_algo
    instead of sig->pkey_algo, and secondly, if sig->pkey_algo is NULL, it
    will also cause signature verification failure.
    
    The software_key_determine_akcipher() already forces the algorithms
    are matched, so the SM3 algorithm is enforced in the SM2 signature,
    although this has been checked, we still avoid using any algorithm
    information in the signature as input.
    
    Fixes: 215525639631 ("X.509: support OSCCA SM2-with-SM3 certificate verification")
    Reported-by: Eric Biggers <ebiggers@google.com>
    Cc: stable@vger.kernel.org # v5.10+
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 135d9e0710992db7ffa43bd248600f5a2bc7db3c
Author: SeongJae Park <sj@kernel.org>
Date:   Fri Jul 15 22:51:08 2022 +0000

    xen-blkfront: Apply 'feature_persistent' parameter when connect
    
    commit 402c43ea6b34a1b371ffeed9adf907402569eaf5 upstream.
    
    In some use cases[1], the backend is created while the frontend doesn't
    support the persistent grants feature, but later the frontend can be
    changed to support the feature and reconnect.  In the past, 'blkback'
    enabled the persistent grants feature since it unconditionally checked
    if frontend supports the persistent grants feature for every connect
    ('connect_ring()') and decided whether it should use persistent grans or
    not.
    
    However, commit aac8a70db24b ("xen-blkback: add a parameter for
    disabling of persistent grants") has mistakenly changed the behavior.
    It made the frontend feature support check to not be repeated once it
    shown the 'feature_persistent' as 'false', or the frontend doesn't
    support persistent grants.
    
    Similar behavioral change has made on 'blkfront' by commit 74a852479c68
    ("xen-blkfront: add a parameter for disabling of persistent grants").
    This commit changes the behavior of the parameter to make effect for
    every connect, so that the previous behavior of 'blkfront' can be
    restored.
    
    [1] https://lore.kernel.org/xen-devel/CAJwUmVB6H3iTs-C+U=v-pwJB7-_ZRHPxHzKRJZ22xEPW7z8a=g@mail.gmail.com/
    
    Fixes: 74a852479c68 ("xen-blkfront: add a parameter for disabling of persistent grants")
    Cc: <stable@vger.kernel.org> # 5.10.x
    Signed-off-by: SeongJae Park <sj@kernel.org>
    Reviewed-by: Maximilian Heyne <mheyne@amazon.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20220715225108.193398-4-sj@kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4fb08e5a4b46666ba4ad4a9025957973ccb721a
Author: Maximilian Heyne <mheyne@amazon.de>
Date:   Fri Jul 15 22:51:07 2022 +0000

    xen-blkback: Apply 'feature_persistent' parameter when connect
    
    commit e94c6101e151b019b8babc518ac2a6ada644a5a1 upstream.
    
    In some use cases[1], the backend is created while the frontend doesn't
    support the persistent grants feature, but later the frontend can be
    changed to support the feature and reconnect.  In the past, 'blkback'
    enabled the persistent grants feature since it unconditionally checked
    if frontend supports the persistent grants feature for every connect
    ('connect_ring()') and decided whether it should use persistent grans or
    not.
    
    However, commit aac8a70db24b ("xen-blkback: add a parameter for
    disabling of persistent grants") has mistakenly changed the behavior.
    It made the frontend feature support check to not be repeated once it
    shown the 'feature_persistent' as 'false', or the frontend doesn't
    support persistent grants.
    
    This commit changes the behavior of the parameter to make effect for
    every connect, so that the previous workflow can work again as expected.
    
    [1] https://lore.kernel.org/xen-devel/CAJwUmVB6H3iTs-C+U=v-pwJB7-_ZRHPxHzKRJZ22xEPW7z8a=g@mail.gmail.com/
    
    Reported-by: Andrii Chepurnyi <andrii.chepurnyi82@gmail.com>
    Fixes: aac8a70db24b ("xen-blkback: add a parameter for disabling of persistent grants")
    Cc: <stable@vger.kernel.org> # 5.10.x
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Signed-off-by: SeongJae Park <sj@kernel.org>
    Reviewed-by: Maximilian Heyne <mheyne@amazon.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20220715225108.193398-3-sj@kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e840884527667685f6ade040b1b79006157df07
Author: SeongJae Park <sj@kernel.org>
Date:   Fri Jul 15 22:51:06 2022 +0000

    xen-blkback: fix persistent grants negotiation
    
    commit fc9be616bb8f3ed9cf560308f86904f5c06be205 upstream.
    
    Persistent grants feature can be used only when both backend and the
    frontend supports the feature.  The feature was always supported by
    'blkback', but commit aac8a70db24b ("xen-blkback: add a parameter for
    disabling of persistent grants") has introduced a parameter for
    disabling it runtime.
    
    To avoid the parameter be updated while being used by 'blkback', the
    commit caches the parameter into 'vbd->feature_gnt_persistent' in
    'xen_vbd_create()', and then check if the guest also supports the
    feature and finally updates the field in 'connect_ring()'.
    
    However, 'connect_ring()' could be called before 'xen_vbd_create()', so
    later execution of 'xen_vbd_create()' can wrongly overwrite 'true' to
    'vbd->feature_gnt_persistent'.  As a result, 'blkback' could try to use
    'persistent grants' feature even if the guest doesn't support the
    feature.
    
    This commit fixes the issue by moving the parameter value caching to
    'xen_blkif_alloc()', which allocates the 'blkif'.  Because the struct
    embeds 'vbd' object, which will be used by 'connect_ring()' later, this
    should be called before 'connect_ring()' and therefore this should be
    the right and safe place to do the caching.
    
    Fixes: aac8a70db24b ("xen-blkback: add a parameter for disabling of persistent grants")
    Cc: <stable@vger.kernel.org> # 5.10.x
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Signed-off-by: SeongJae Park <sj@kernel.org>
    Reviewed-by: Maximilian Heyne <mheyne@amazon.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20220715225108.193398-2-sj@kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b788508a09901b1324ae3afe8aa0897e380422af
Author: Like Xu <likexu@tencent.com>
Date:   Mon May 9 18:22:02 2022 +0800

    KVM: x86/pmu: Ignore pmu->global_ctrl check if vPMU doesn't support global_ctrl
    
    [ Upstream commit 98defd2e17803263f49548fea930cfc974d505aa ]
    
    MSR_CORE_PERF_GLOBAL_CTRL is introduced as part of Architecture PMU V2,
    as indicated by Intel SDM 19.2.2 and the intel_is_valid_msr() function.
    
    So in the absence of global_ctrl support, all PMCs are enabled as AMD does.
    
    Signed-off-by: Like Xu <likexu@tencent.com>
    Message-Id: <20220509102204.62389-1-likexu@tencent.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b4addec2f2d68ed774b4b7b6264419b15aee3b0
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Jul 22 22:44:06 2022 +0000

    KVM: VMX: Mark all PERF_GLOBAL_(OVF)_CTRL bits reserved if there's no vPMU
    
    [ Upstream commit 93255bf92939d948bc86d81c6bb70bb0fecc5db1 ]
    
    Mark all MSR_CORE_PERF_GLOBAL_CTRL and MSR_CORE_PERF_GLOBAL_OVF_CTRL bits
    as reserved if there is no guest vPMU.  The nVMX VM-Entry consistency
    checks do not check for a valid vPMU prior to consuming the masks via
    kvm_valid_perf_global_ctrl(), i.e. may incorrectly allow a non-zero mask
    to be loaded via VM-Enter or VM-Exit (well, attempted to be loaded, the
    actual MSR load will be rejected by intel_is_valid_msr()).
    
    Fixes: f5132b01386b ("KVM: Expose a version 2 architectural PMU to a guests")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220722224409.1336532-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46ec3d8e909429f18b3f859de356e6e182637cbc
Author: Like Xu <like.xu@linux.intel.com>
Date:   Mon Apr 11 18:19:34 2022 +0800

    KVM: x86/pmu: Introduce the ctrl_mask value for fixed counter
    
    [ Upstream commit 2c985527dd8d283e786ad7a67e532ef7f6f00fac ]
    
    The mask value of fixed counter control register should be dynamic
    adjusted with the number of fixed counters. This patch introduces a
    variable that includes the reserved bits of fixed counter control
    registers. This is a generic code refactoring.
    
    Co-developed-by: Luwei Kang <luwei.kang@intel.com>
    Signed-off-by: Luwei Kang <luwei.kang@intel.com>
    Signed-off-by: Like Xu <like.xu@linux.intel.com>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Message-Id: <20220411101946.20262-6-likexu@tencent.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ba1feb14363fd311f2cc912b58e5bb0b2b73662
Author: Jim Mattson <jmattson@google.com>
Date:   Mon Mar 7 17:24:52 2022 -0800

    KVM: x86/pmu: Use different raw event masks for AMD and Intel
    
    [ Upstream commit 95b065bf5c431c06c68056a03a5853b660640ecc ]
    
    The third nybble of AMD's event select overlaps with Intel's IN_TX and
    IN_TXCP bits. Therefore, we can't use AMD64_RAW_EVENT_MASK on Intel
    platforms that support TSX.
    
    Declare a raw_event_mask in the kvm_pmu structure, initialize it in
    the vendor-specific pmu_refresh() functions, and use that mask for
    PERF_TYPE_RAW configurations in reprogram_gp_counter().
    
    Fixes: 710c47651431 ("KVM: x86/pmu: Use AMD64_RAW_EVENT_MASK for PERF_TYPE_RAW")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Message-Id: <20220308012452.3468611-1-jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bbfc055d3a788c3b7278a41b2f7cd9f804502da
Author: Jim Mattson <jmattson@google.com>
Date:   Fri Jan 14 21:24:26 2022 -0800

    KVM: x86/pmu: Use binary search to check filtered events
    
    [ Upstream commit 7ff775aca48adc854436b92c060e5eebfffb6a4a ]
    
    The PMU event filter may contain up to 300 events. Replace the linear
    search in reprogram_gp_counter() with a binary search.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <20220115052431.447232-2-jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 441726394efacea93235ed7685aebcabd1eb6561
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Feb 2 09:32:35 2021 -0500

    KVM: x86/pmu: preserve IA32_PERF_CAPABILITIES across CPUID refresh
    
    [ Upstream commit a755753903a40d982f6dd23d65eb96b248a2577a ]
    
    Once MSR_IA32_PERF_CAPABILITIES is changed via vmx_set_msr(), the
    value should not be changed by cpuid(). To ensure that the new value
    is kept, the default initialization path is moved to intel_pmu_init().
    The effective value of the MSR will be 0 if PDCM is clear, however.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7d0b21c6b406e441fffbe4239c36ce83447fc52
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jun 7 21:35:52 2022 +0000

    KVM: nVMX: Inject #UD if VMXON is attempted with incompatible CR0/CR4
    
    [ Upstream commit c7d855c2aff2d511fd60ee2e356134c4fb394799 ]
    
    Inject a #UD if L1 attempts VMXON with a CR0 or CR4 that is disallowed
    per the associated nested VMX MSRs' fixed0/1 settings.  KVM cannot rely
    on hardware to perform the checks, even for the few checks that have
    higher priority than VM-Exit, as (a) KVM may have forced CR0/CR4 bits in
    hardware while running the guest, (b) there may incompatible CR0/CR4 bits
    that have lower priority than VM-Exit, e.g. CR0.NE, and (c) userspace may
    have further restricted the allowed CR0/CR4 values by manipulating the
    guest's nested VMX MSRs.
    
    Note, despite a very strong desire to throw shade at Jim, commit
    70f3aac964ae ("kvm: nVMX: Remove superfluous VMX instruction fault checks")
    is not to blame for the buggy behavior (though the comment...).  That
    commit only removed the CR0.PE, EFLAGS.VM, and COMPATIBILITY mode checks
    (though it did erroneously drop the CPL check, but that has already been
    remedied).  KVM may force CR0.PE=1, but will do so only when also
    forcing EFLAGS.VM=1 to emulate Real Mode, i.e. hardware will still #UD.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216033
    Fixes: ec378aeef9df ("KVM: nVMX: Implement VMXON and VMXOFF")
    Reported-by: Eric Li <ercli@ucdavis.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220607213604.3346000-4-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c72a9b1d0dadfd85d19eaea81f61f7b286c57a31
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Oct 6 18:44:15 2020 -0700

    KVM: x86: Move vendor CR4 validity check to dedicated kvm_x86_ops hook
    
    [ Upstream commit c2fe3cd4604ac87c587db05d41843d667dc43815 ]
    
    Split out VMX's checks on CR4.VMXE to a dedicated hook, .is_valid_cr4(),
    and invoke the new hook from kvm_valid_cr4().  This fixes an issue where
    KVM_SET_SREGS would return success while failing to actually set CR4.
    
    Fixing the issue by explicitly checking kvm_x86_ops.set_cr4()'s return
    in __set_sregs() is not a viable option as KVM has already stuffed a
    variety of vCPU state.
    
    Note, kvm_valid_cr4() and is_valid_cr4() have different return types and
    inverted semantics.  This will be remedied in a future patch.
    
    Fixes: 5e1746d6205d ("KVM: nVMX: Allow setting the VMXE bit in CR4")
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20201007014417.29276-5-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f04a04d06509fbba0a4069dba5d71010139d921
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Oct 6 18:44:14 2020 -0700

    KVM: SVM: Drop VMXE check from svm_set_cr4()
    
    [ Upstream commit 311a06593b9a3944a63ed176b95cb8d857f7c83b ]
    
    Drop svm_set_cr4()'s explicit check CR4.VMXE now that common x86 handles
    the check by incorporating VMXE into the CR4 reserved bits, via
    kvm_cpu_caps.  SVM obviously does not set X86_FEATURE_VMX.
    
    No functional change intended.
    
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20201007014417.29276-4-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da7f731f2ed5b4a082567967ce74be274aab2daf
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Oct 6 18:44:13 2020 -0700

    KVM: VMX: Drop explicit 'nested' check from vmx_set_cr4()
    
    [ Upstream commit a447e38a7fadb2e554c3942dda183e55cccd5df0 ]
    
    Drop vmx_set_cr4()'s explicit check on the 'nested' module param now
    that common x86 handles the check by incorporating VMXE into the CR4
    reserved bits, via kvm_cpu_caps.  X86_FEATURE_VMX is set in kvm_cpu_caps
    (by vmx_set_cpu_caps()), if and only if 'nested' is true.
    
    No functional change intended.
    
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20201007014417.29276-3-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b8b376903b32d3d854f39eeebe018169c920cb6
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Oct 6 18:44:12 2020 -0700

    KVM: VMX: Drop guest CPUID check for VMXE in vmx_set_cr4()
    
    [ Upstream commit d3a9e4146a6f79f19430bca3f2a4d6ebaaffe36b ]
    
    Drop vmx_set_cr4()'s somewhat hidden guest_cpuid_has() check on VMXE now
    that common x86 handles the check by incorporating VMXE into the CR4
    reserved bits, i.e. in cr4_guest_rsvd_bits.  This fixes a bug where KVM
    incorrectly rejects KVM_SET_SREGS with CR4.VMXE=1 if it's executed
    before KVM_SET_CPUID{,2}.
    
    Fixes: 5e1746d6205d ("KVM: nVMX: Allow setting the VMXE bit in CR4")
    Reported-by: Stas Sergeev <stsp@users.sourceforge.net>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20201007014417.29276-2-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f3c8352cc22aebb52197cc7d71161a8f6ba7f2b
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jul 21 19:41:10 2022 +0200

    ACPI: CPPC: Do not prevent CPPC from working in the future
    
    [ Upstream commit 4f4179fcf420873002035cf1941d844c9e0e7cb3 ]
    
    There is a problem with the current revision checks in
    is_cppc_supported() that they essentially prevent the CPPC support
    from working if a new _CPC package format revision being a proper
    superset of the v3 and only causing _CPC to return a package with more
    entries (while retaining the types and meaning of the entries defined by
    the v3) is introduced in the future and used by the platform firmware.
    
    In that case, as long as the number of entries in the _CPC return
    package is at least CPPC_V3_NUM_ENT, it should be perfectly fine to
    use the v3 support code and disregard the additional package entries
    added by the new package format revision.
    
    For this reason, drop is_cppc_supported() altogether, put the revision
    checks directly into acpi_cppc_processor_probe() so they are easier to
    follow and rework them to take the case mentioned above into account.
    
    Fixes: 4773e77cdc9b ("ACPI / CPPC: Add support for CPPC v3")
    Cc: 4.18+ <stable@vger.kernel.org> # 4.18+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40d28ae57672188e4aa37de109d763d34e48e2eb
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Jun 13 18:31:17 2022 -0400

    btrfs: reset block group chunk force if we have to wait
    
    [ Upstream commit 1314ca78b2c35d3e7d0f097268a2ee6dc0d369ef ]
    
    If you try to force a chunk allocation, but you race with another chunk
    allocation, you will end up waiting on the chunk allocation that just
    occurred and then allocate another chunk.  If you have many threads all
    doing this at once you can way over-allocate chunks.
    
    Fix this by resetting force to NO_FORCE, that way if we think we need to
    allocate we can, otherwise we don't force another chunk allocation if
    one is already happening.
    
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    CC: stable@vger.kernel.org # 5.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2f1507303166c139d6b4362c5d88c50b84b4c4d
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Jun 7 19:48:24 2022 +0800

    btrfs: reject log replay if there is unsupported RO compat flag
    
    [ Upstream commit dc4d31684974d140250f3ee612c3f0cab13b3146 ]
    
    [BUG]
    If we have a btrfs image with dirty log, along with an unsupported RO
    compatible flag:
    
    log_root                30474240
    ...
    compat_flags            0x0
    compat_ro_flags         0x40000003
                            ( FREE_SPACE_TREE |
                              FREE_SPACE_TREE_VALID |
                              unknown flag: 0x40000000 )
    
    Then even if we can only mount it RO, we will still cause metadata
    update for log replay:
    
      BTRFS info (device dm-1): flagging fs with big metadata feature
      BTRFS info (device dm-1): using free space tree
      BTRFS info (device dm-1): has skinny extents
      BTRFS info (device dm-1): start tree-log replay
    
    This is definitely against RO compact flag requirement.
    
    [CAUSE]
    RO compact flag only forces us to do RO mount, but we will still do log
    replay for plain RO mount.
    
    Thus this will result us to do log replay and update metadata.
    
    This can be very problematic for new RO compat flag, for example older
    kernel can not understand v2 cache, and if we allow metadata update on
    RO mount and invalidate/corrupt v2 cache.
    
    [FIX]
    Just reject the mount unless rescue=nologreplay is provided:
    
      BTRFS error (device dm-1): cannot replay dirty log with unsupport optional features (0x40000000), try rescue=nologreplay instead
    
    We don't want to set rescue=nologreply directly, as this would make the
    end user to read the old data, and cause confusion.
    
    Since the such case is really rare, we're mostly fine to just reject the
    mount with an error message, which also includes the proper workaround.
    
    CC: stable@vger.kernel.org #4.9+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b58294ce1a8ac8e234abd991255b1d1905520aed
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Dec 2 20:58:06 2020 +0100

    um: Allow PM with suspend-to-idle
    
    [ Upstream commit 92dcd3d31843fbe1a95d880dc912e1f6beac6632 ]
    
    In order to be able to experiment with suspend in UML, add the
    minimal work to be able to suspend (s2idle) an instance of UML,
    and be able to wake it back up from that state with the USR1
    signal sent to the main UML process.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-By: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6cf21d8d5209be883c835ebc883b5566483bfca
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jul 17 23:53:34 2022 +0200

    timekeeping: contribute wall clock to rng on time change
    
    [ Upstream commit b8ac29b40183a6038919768b5d189c9bd91ce9b4 ]
    
    The rng's random_init() function contributes the real time to the rng at
    boot time, so that events can at least start in relation to something
    particular in the real world. But this clock might not yet be set that
    point in boot, so nothing is contributed. In addition, the relation
    between minor clock changes from, say, NTP, and the cycle counter is
    potentially useful entropic data.
    
    This commit addresses this by mixing in a time stamp on calls to
    settimeofday and adjtimex. No entropy is credited in doing so, so it
    doesn't make initialization faster, but it is still useful input to
    have.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e2cf705155a1514be3c96ea664a9cd356998ee7
Author: Luo Meng <luomeng12@huawei.com>
Date:   Thu Jul 14 19:28:25 2022 +0800

    dm thin: fix use-after-free crash in dm_sm_register_threshold_callback
    
    [ Upstream commit 3534e5a5ed2997ca1b00f44a0378a075bd05e8a3 ]
    
    Fault inject on pool metadata device reports:
      BUG: KASAN: use-after-free in dm_pool_register_metadata_threshold+0x40/0x80
      Read of size 8 at addr ffff8881b9d50068 by task dmsetup/950
    
      CPU: 7 PID: 950 Comm: dmsetup Tainted: G        W         5.19.0-rc6 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33 04/01/2014
      Call Trace:
       <TASK>
       dump_stack_lvl+0x34/0x44
       print_address_description.constprop.0.cold+0xeb/0x3f4
       kasan_report.cold+0xe6/0x147
       dm_pool_register_metadata_threshold+0x40/0x80
       pool_ctr+0xa0a/0x1150
       dm_table_add_target+0x2c8/0x640
       table_load+0x1fd/0x430
       ctl_ioctl+0x2c4/0x5a0
       dm_ctl_ioctl+0xa/0x10
       __x64_sys_ioctl+0xb3/0xd0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    This can be easily reproduced using:
      echo offline > /sys/block/sda/device/state
      dd if=/dev/zero of=/dev/mapper/thin bs=4k count=10
      dmsetup load pool --table "0 20971520 thin-pool /dev/sda /dev/sdb 128 0 0"
    
    If a metadata commit fails, the transaction will be aborted and the
    metadata space maps will be destroyed. If a DM table reload then
    happens for this failed thin-pool, a use-after-free will occur in
    dm_sm_register_threshold_callback (called from
    dm_pool_register_metadata_threshold).
    
    Fix this by in dm_pool_register_metadata_threshold() by returning the
    -EINVAL error if the thin-pool is in fail mode. Also fail pool_ctr()
    with a new error message: "Error registering metadata threshold".
    
    Fixes: ac8c3f3df65e4 ("dm thin: generate event when metadata threshold passed")
    Cc: stable@vger.kernel.org
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Luo Meng <luomeng12@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 539c20ad260ef0f8cd3188e1950b018fff9a631b
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Thu Jul 14 21:40:27 2022 +0800

    kexec, KEYS, s390: Make use of built-in and secondary keyring for signature verification
    
    [ Upstream commit 0828c4a39be57768b8788e8cbd0d84683ea757e5 ]
    
    commit e23a8020ce4e ("s390/kexec_file: Signature verification prototype")
    adds support for KEXEC_SIG verification with keys from platform keyring
    but the built-in keys and secondary keyring are not used.
    
    Add support for the built-in keys and secondary keyring as x86 does.
    
    Fixes: e23a8020ce4e ("s390/kexec_file: Signature verification prototype")
    Cc: stable@vger.kernel.org
    Cc: Philipp Rudo <prudo@linux.ibm.com>
    Cc: kexec@lists.infradead.org
    Cc: keyrings@vger.kernel.org
    Cc: linux-security-module@vger.kernel.org
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Reviewed-by: "Lee, Chun-Yi" <jlee@suse.com>
    Acked-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Coiby Xu <coxu@redhat.com>
    Acked-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 782e73acdba824721bebb8d68bc32234543a4204
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jul 13 07:09:04 2022 -0400

    dm writecache: set a default MAX_WRITEBACK_JOBS
    
    [ Upstream commit ca7dc242e358e46d963b32f9d9dd829785a9e957 ]
    
    dm-writecache has the capability to limit the number of writeback jobs
    in progress. However, this feature was off by default. As such there
    were some out-of-memory crashes observed when lowering the low
    watermark while the cache is full.
    
    This commit enables writeback limit by default. It is set to 256MiB or
    1/16 of total system memory, whichever is smaller.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e41b3b883179e534549c2f6aca3902168aab5162
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Mon Apr 18 16:27:22 2022 +0100

    serial: 8250: Fold EndRun device support into OxSemi Tornado code
    
    [ Upstream commit 1f32c65bad24b9787d3e52843de375430e3df822 ]
    
    The EndRun PTP/1588 dual serial port device is based on the Oxford
    Semiconductor OXPCIe952 UART device with the PCI vendor:device ID set
    for EndRun Technologies and uses the same sequence to determine the
    number of ports available.  Despite that we have duplicate code
    specific to the EndRun device.
    
    Remove redundant code then and factor out OxSemi Tornado device
    detection.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2204181516220.9383@angie.orcam.me.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 194dc559e6b27ba52dd73eaa18e09526a567bd82
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Oct 22 16:51:47 2021 +0300

    serial: 8250_pci: Replace dev_*() by pci_*() macros
    
    [ Upstream commit 1177384179416c7136e1348f07609e0da1ae6b91 ]
    
    PCI subsystem provides convenient shortcut macros for message printing.
    Use those macros instead of dev_*().
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Jiri Slaby <jslaby@kernel.org>
    Link: https://lore.kernel.org/r/20211022135147.70965-3-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 297e2fd08a58d4fe79ec1632ee2404b1a1484c5a
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Oct 22 16:51:45 2021 +0300

    serial: 8250_pci: Refactor the loop in pci_ite887x_init()
    
    [ Upstream commit 35b4f17231923e2f64521bdf7a2793ce2c3c74a6 ]
    
    The loop can be refactored by using ARRAY_SIZE() instead of NULL terminator.
    This reduces code base and makes it easier to read and understand.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Jiri Slaby <jslaby@kernel.org>
    Link: https://lore.kernel.org/r/20211022135147.70965-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3110e5a49b871a64ad75742ef87196b93b9ecfd3
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Thu Jun 10 20:39:03 2021 +0200

    serial: 8250: Correct the clock for OxSemi PCIe devices
    
    [ Upstream commit 6cbe45d8ac9316ceedd0749759bd54caf03f7012 ]
    
    Oxford Semiconductor PCIe (Tornado) serial port devices are driven by a
    fixed 62.5MHz clock input derived from the 100MHz PCI Express clock.
    
    In the enhanced (650) mode, which we select in `autoconfig_has_efr' by
    setting the ECB bit in the EFR register, and in the absence of clock
    reconfiguration, which we currently don't do, the clock rate is divided
    only by the oversampling rate of 16 as it is supplied to the baud rate
    generator, yielding the baud base of 3906250.  This comes from the reset
    values of the TCR and MCR[7] registers which are both zero[1][2][3][4],
    choosing the oversampling rate of 16 and the normal (divide by 1) baud
    rate generator prescaler respectively.  This is the rate that is divided
    by the value held in the divisor latch to determine the baud rate used.
    
    Replace the incorrect baud base of 4000000 with the right value of
    3906250 then.
    
    References:
    
    [1] "OXPCIe200 PCI Express Multi-Port Bridge", Oxford Semiconductor,
        Inc., DS-0045, 10 Nov 2008, Section "Reset Configuration", p. 72
    
    [2] "OXPCIe952 PCI Express Bridge to Dual Serial & Parallel Port",
        Oxford Semiconductor, Inc., DS-0046, Mar 06 08, Section "Reset
        Configuration", p. 27
    
    [3] "OXPCIe954 PCI Express Bridge to Quad Serial Port", Oxford
        Semiconductor, Inc., DS-0047, Feb 08, Section "Reset Configuration",
        p. 28
    
    [4] "OXPCIe958 PCI Express Bridge to Octal Serial Port", Oxford
        Semiconductor, Inc., DS-0048, Feb 08, Section "Reset Configuration",
        p. 28
    
    Fixes: 7106b4e333bae ("8250: Oxford Semiconductor Devices")
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2106100203510.5469@angie.orcam.me.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e9baedb32372aed9b55b3b8a046824df3b0664f
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Thu Jun 10 20:38:59 2021 +0200

    serial: 8250: Dissociate 4MHz Titan ports from Oxford ports
    
    [ Upstream commit f771a34b141124a68265f91acae34cdb08aeb9e0 ]
    
    Oxford Semiconductor PCIe (Tornado) serial port devices have their baud
    base set incorrectly, however their `pciserial_board' entries have been
    reused for Titan serial port devices.  Define own entries for the latter
    devices then, carrying over the settings, so that Oxford entries can be
    fixed.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2106100142310.5469@angie.orcam.me.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85d6306a87c5875011f8c711cee0306064ca19be
Author: Mohamed Khalfella <mkhalfella@purestorage.com>
Date:   Mon May 9 18:14:41 2022 +0000

    PCI/AER: Iterate over error counters instead of error strings
    
    [ Upstream commit 5e6ae050955b566484f3cc6a66e3925eae87a0ed ]
    
    Previously we iterated over AER stat *names*, e.g.,
    aer_correctable_error_string[32], but the actual stat *counters* may not be
    that large, e.g., pdev->aer_stats->dev_cor_errs[16], which means that we
    printed junk in the sysfs stats files.
    
    Iterate over the stat counter arrays instead of the names to avoid this
    junk.
    
    Also, added a build time check to make sure all
    counters have entries in strings array.
    
    Fixes: 0678e3109a3c ("PCI/AER: Simplify __aer_print_error()")
    Link: https://lore.kernel.org/r/20220509181441.31884-1-mkhalfella@purestorage.com
    Reported-by: Meeta Saggi <msaggi@purestorage.com>
    Signed-off-by: Mohamed Khalfella <mkhalfella@purestorage.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Meeta Saggi <msaggi@purestorage.com>
    Reviewed-by: Eric Badger <ebadger@purestorage.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d83d886e69bd4c28058314a4ef8c0e2838325335
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Wed Dec 2 11:26:29 2020 -0600

    PCI/ERR: Recover from RCEC AER errors
    
    [ Upstream commit a175102b0a82fc57853a9e611c42d1d6172e5180 ]
    
    A Root Complex Event Collector (RCEC) collects and signals AER errors that
    were detected by Root Complex Integrated Endpoints (RCiEPs), but it may
    also signal errors it detects itself.  This is analogous to errors detected
    and signaled by a Root Port.
    
    Update the AER service driver to claim RCECs in addition to Root Ports.
    Add support for handling RCEC-detected AER errors.  This does not
    include handling RCiEP-detected errors that are signaled by the RCEC.
    
    Note that we expect these errors only from the native AER and APEI paths,
    not from DPC or EDR.
    
    [bhelgaas: split from combined RCEC/RCiEP patch, commit log]
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb6990fd372991a946b96ac8996e9ebb76db4e2a
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Fri Nov 20 16:10:30 2020 -0800

    PCI/ERR: Add pci_walk_bridge() to pcie_do_recovery()
    
    [ Upstream commit 05e9ae19ab83881a0f33025bd1288e41e552a34b ]
    
    Consolidate subordinate bus checks with pci_walk_bus() into
    pci_walk_bridge() for walking below potentially AER affected bridges.
    
    Link: https://lore.kernel.org/r/20201121001036.8560-10-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7730ba6151b7c4aecd433ef9d3144693f1b68b8c
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Fri Nov 20 16:10:29 2020 -0800

    PCI/ERR: Avoid negated conditional for clarity
    
    [ Upstream commit 3d7d8fc78f4b504819882278fcfe10784eb985fa ]
    
    Reverse the sense of the Root Port/Downstream Port conditional for clarity.
    No functional change intended.
    
    Link: https://lore.kernel.org/r/20201121001036.8560-9-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 078d79fad52174a91c4053d93ad3d9a78b946f6a
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Fri Nov 20 16:10:28 2020 -0800

    PCI/ERR: Use "bridge" for clarity in pcie_do_recovery()
    
    [ Upstream commit 0791721d800790e6e533bd8467df67f0dc4f2fec ]
    
    pcie_do_recovery() may be called with "dev" being either a bridge (Root
    Port or Switch Downstream Port) or an Endpoint.  The bulk of the function
    deals with the bridge, so if we start with an Endpoint, we reset "dev" to
    be the bridge leading to it.
    
    For clarity, replace "dev" in the body of the function with "bridge".  No
    functional change intended.
    
    Link: https://lore.kernel.org/r/20201121001036.8560-8-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e3458b995aa57c947a2a4be2d844f3807a6d1e7
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Fri Nov 20 16:10:27 2020 -0800

    PCI/ERR: Simplify by computing pci_pcie_type() once
    
    [ Upstream commit 480ef7cb9fcebda7b28cbed4f6cdcf0a02f4a6ca ]
    
    Instead of calling pci_pcie_type(dev) twice, call it once and save the
    result.  No functional change intended.
    
    Link: https://lore.kernel.org/r/20201121001036.8560-7-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f236fa38508b5153505543fb80c096184df9abfc
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Fri Nov 20 16:10:26 2020 -0800

    PCI/ERR: Simplify by using pci_upstream_bridge()
    
    [ Upstream commit 5d69dcc9f839bd2d5cac7a098712f52149e1673f ]
    
    Use pci_upstream_bridge() in place of dev->bus->self.  No functional change
    intended.
    
    Link: https://lore.kernel.org/r/20201121001036.8560-6-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de4534ac28c434e03b0c556f0f5167edf7f5ea99
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Fri Nov 20 16:10:25 2020 -0800

    PCI/ERR: Rename reset_link() to reset_subordinates()
    
    [ Upstream commit 8f1bbfbc3596d401b60d1562b27ec28c2724f60d ]
    
    reset_link() appears to be misnamed.  The point is to reset any devices
    below a given bridge, so rename it to reset_subordinates() to make it clear
    that we are passing a bridge with the intent to reset the devices below it.
    
    Link: https://lore.kernel.org/r/20201121001036.8560-5-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78d431e8a56ca71f58db176635ca85f5271cadd3
Author: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
Date:   Fri Nov 20 16:10:23 2020 -0800

    PCI/ERR: Bind RCEC devices to the Root Port driver
    
    [ Upstream commit c9d659b60770db94b898f94947192a94bbf95c5c ]
    
    If a Root Complex Integrated Endpoint (RCiEP) is implemented, it may signal
    errors through a Root Complex Event Collector (RCEC).  Each RCiEP must be
    associated with no more than one RCEC.
    
    For an RCEC (which is technically not a Bridge), error messages "received"
    from associated RCiEPs must be enabled for "transmission" in order to cause
    a System Error via the Root Control register or (when the Advanced Error
    Reporting Capability is present) reporting via the Root Error Command
    register and logging in the Root Error Status register and Error Source
    Identification register.
    
    Given the commonality with Root Ports and the need to also support AER and
    PME services for RCECs, extend the Root Port driver to support RCEC devices
    by adding the RCEC Class ID to the driver structure.
    
    Co-developed-by: Sean V Kelley <sean.v.kelley@intel.com>
    Link: https://lore.kernel.org/r/20201121001036.8560-3-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dce8d7427c6a8c61e5686931bd580645156a3de8
Author: Sean V Kelley <sean.v.kelley@intel.com>
Date:   Fri Nov 20 16:10:22 2020 -0800

    PCI/AER: Write AER Capability only when we control it
    
    [ Upstream commit 50cc18fcd3053fb46a09db5a39e6516e9560f765 ]
    
    If an OS has not been granted AER control via _OSC, it should not make
    changes to PCI_ERR_ROOT_COMMAND and PCI_ERR_ROOT_STATUS related registers.
    Per section 4.5.1 of the System Firmware Intermediary (SFI) _OSC and DPC
    Updates ECN [1], this bit also covers these aspects of the PCI Express
    Advanced Error Reporting. Based on the above and earlier discussion [2],
    make the following changes:
    
    Add a check for the native case (i.e., AER control via _OSC)
    
    Note that the previous "clear, reset, enable" order suggests that the reset
    might cause errors that we should ignore. After this commit, those errors
    (if any) will remain logged in the PCI_ERR_ROOT_STATUS register.
    
    [1] System Firmware Intermediary (SFI) _OSC and DPC Updates ECN, Feb 24,
        2020, affecting PCI Firmware Specification, Rev. 3.2
        https://members.pcisig.com/wg/PCI-SIG/document/14076
    [2] https://lore.kernel.org/linux-pci/20201020162820.GA370938@bjorn-Precision-5520/
    
    Link: https://lore.kernel.org/r/20201121001036.8560-2-sean.v.kelley@intel.com
    Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
    Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5659efdadf04b56707d58c1b758df16d2e0eff2c
Author: Alexander Lobakin <alexandr.lobakin@intel.com>
Date:   Tue Jul 12 17:38:36 2022 +0200

    iommu/vt-d: avoid invalid memory access via node_online(NUMA_NO_NODE)
    
    [ Upstream commit b0b0b77ea611e3088e9523e60860f4f41b62b235 ]
    
    KASAN reports:
    
    [ 4.668325][ T0] BUG: KASAN: wild-memory-access in dmar_parse_one_rhsa (arch/x86/include/asm/bitops.h:214 arch/x86/include/asm/bitops.h:226 include/asm-generic/bitops/instrumented-non-atomic.h:142 include/linux/nodemask.h:415 drivers/iommu/intel/dmar.c:497)
    [    4.676149][    T0] Read of size 8 at addr 1fffffff85115558 by task swapper/0/0
    [    4.683454][    T0]
    [    4.685638][    T0] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.19.0-rc3-00004-g0e862838f290 #1
    [    4.694331][    T0] Hardware name: Supermicro SYS-5018D-FN4T/X10SDV-8C-TLN4F, BIOS 1.1 03/02/2016
    [    4.703196][    T0] Call Trace:
    [    4.706334][    T0]  <TASK>
    [ 4.709133][ T0] ? dmar_parse_one_rhsa (arch/x86/include/asm/bitops.h:214 arch/x86/include/asm/bitops.h:226 include/asm-generic/bitops/instrumented-non-atomic.h:142 include/linux/nodemask.h:415 drivers/iommu/intel/dmar.c:497)
    
    after converting the type of the first argument (@nr, bit number)
    of arch_test_bit() from `long` to `unsigned long`[0].
    
    Under certain conditions (for example, when ACPI NUMA is disabled
    via command line), pxm_to_node() can return %NUMA_NO_NODE (-1).
    It is valid 'magic' number of NUMA node, but not valid bit number
    to use in bitops.
    node_online() eventually descends to test_bit() without checking
    for the input, assuming it's on caller side (which might be good
    for perf-critical tasks). There, -1 becomes %ULONG_MAX which leads
    to an insane array index when calculating bit position in memory.
    
    For now, add an explicit check for @node being not %NUMA_NO_NODE
    before calling test_bit(). The actual logics didn't change here
    at all.
    
    [0] https://github.com/norov/linux/commit/0e862838f290147ea9c16db852d8d494b552d38d
    
    Fixes: ee34b32d8c29 ("dmar: support for parsing Remapping Hardware Static Affinity structure")
    Cc: stable@vger.kernel.org # 2.6.33+
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Signed-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Yury Norov <yury.norov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7ccee2f09b06303fb39f8cb19a2c21d388dc4e6
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu May 12 22:27:14 2022 +0000

    KVM: x86: Signal #GP, not -EPERM, on bad WRMSR(MCi_CTL/STATUS)
    
    [ Upstream commit 2368048bf5c2ec4b604ac3431564071e89a0bc71 ]
    
    Return '1', not '-1', when handling an illegal WRMSR to a MCi_CTL or
    MCi_STATUS MSR.  The behavior of "all zeros' or "all ones" for CTL MSRs
    is architectural, as is the "only zeros" behavior for STATUS MSRs.  I.e.
    the intent is to inject a #GP, not exit to userspace due to an unhandled
    emulation case.  Returning '-1' gets interpreted as -EPERM up the stack
    and effecitvely kills the guest.
    
    Fixes: 890ca9aefa78 ("KVM: Add MCE support")
    Fixes: 9ffd986c6e4e ("KVM: X86: #GP when guest attempts to write MCi_STATUS register w/o 0")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Link: https://lore.kernel.org/r/20220512222716.4112548-2-seanjc@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5385a590df78d7649876a2087646090e867e6eb
Author: Lev Kujawski <lkujaw@member.fsf.org>
Date:   Sat May 21 08:15:11 2022 +0000

    KVM: set_msr_mce: Permit guests to ignore single-bit ECC errors
    
    [ Upstream commit 0471a7bd1bca2a47a5f378f2222c5cf39ce94152 ]
    
    Certain guest operating systems (e.g., UNIXWARE) clear bit 0 of
    MC1_CTL to ignore single-bit ECC data errors.  Single-bit ECC data
    errors are always correctable and thus are safe to ignore because they
    are informational in nature rather than signaling a loss of data
    integrity.
    
    Prior to this patch, these guests would crash upon writing MC1_CTL,
    with resultant error messages like the following:
    
    error: kvm run failed Operation not permitted
    EAX=fffffffe EBX=fffffffe ECX=00000404 EDX=ffffffff
    ESI=ffffffff EDI=00000001 EBP=fffdaba4 ESP=fffdab20
    EIP=c01333a5 EFL=00000246 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
    ES =0108 00000000 ffffffff 00c09300 DPL=0 DS   [-WA]
    CS =0100 00000000 ffffffff 00c09b00 DPL=0 CS32 [-RA]
    SS =0108 00000000 ffffffff 00c09300 DPL=0 DS   [-WA]
    DS =0108 00000000 ffffffff 00c09300 DPL=0 DS   [-WA]
    FS =0000 00000000 ffffffff 00c00000
    GS =0000 00000000 ffffffff 00c00000
    LDT=0118 c1026390 00000047 00008200 DPL=0 LDT
    TR =0110 ffff5af0 00000067 00008b00 DPL=0 TSS32-busy
    GDT=     ffff5020 000002cf
    IDT=     ffff52f0 000007ff
    CR0=8001003b CR2=00000000 CR3=0100a000 CR4=00000230
    DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000
    DR6=ffff0ff0 DR7=00000400
    EFER=0000000000000000
    Code=08 89 01 89 51 04 c3 8b 4c 24 08 8b 01 8b 51 04 8b 4c 24 04 <0f>
    30 c3 f7 05 a4 6d ff ff 10 00 00 00 74 03 0f 31 c3 33 c0 33 d2 c3 8d
    74 26 00 0f 31 c3
    
    Signed-off-by: Lev Kujawski <lkujaw@member.fsf.org>
    Message-Id: <20220521081511.187388-1-lkujaw@member.fsf.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a84dae3a7ec89a6c7894233ffe65de2e01772fe
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Tue Jul 5 11:26:37 2022 +0300

    intel_th: pci: Add Raptor Lake-S CPU support
    
    [ Upstream commit ff46a601afc5a66a81c3945b83d0a2caeb88e8bc ]
    
    Add support for the Trace Hub in Raptor Lake-S CPU.
    
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20220705082637.59979-7-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 581f7eb8ae3d87b4ca5a500da4327a32eb5c2777
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Tue Jul 5 11:26:36 2022 +0300

    intel_th: pci: Add Raptor Lake-S PCH support
    
    [ Upstream commit 23e2de5826e2fc4dd43e08bab3a2ea1a5338b063 ]
    
    Add support for the Trace Hub in Raptor Lake-S PCH.
    
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20220705082637.59979-6-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36f5ddde6776d03281d595075f97683e58f70cc6
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Tue Jul 5 11:26:35 2022 +0300

    intel_th: pci: Add Meteor Lake-P support
    
    [ Upstream commit 802a9a0b1d91274ef10d9fe429b4cc1e8c200aef ]
    
    Add support for the Trace Hub in Meteor Lake-P.
    
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20220705082637.59979-5-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08272646cd7c310642c39b7f54348fddd7987643
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Fri Jul 1 17:03:10 2022 +0100

    firmware: arm_scpi: Ensure scpi_info is not assigned if the probe fails
    
    [ Upstream commit 689640efc0a2c4e07e6f88affe6d42cd40cc3f85 ]
    
    When scpi probe fails, at any point, we need to ensure that the scpi_info
    is not set and will remain NULL until the probe succeeds. If it is not
    taken care, then it could result use-after-free as the value is exported
    via get_scpi_ops() and could refer to a memory allocated via devm_kzalloc()
    but freed when the probe fails.
    
    Link: https://lore.kernel.org/r/20220701160310.148344-1-sudeep.holla@arm.com
    Cc: stable@vger.kernel.org # 4.19+
    Reported-by: huhai <huhai@kylinos.cn>
    Reviewed-by: Jackie Liu <liuyun01@kylinos.cn>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc945ca49613a9d3429c05024e3d591e6f8166ba
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu May 12 10:42:04 2022 +0200

    usbnet: smsc95xx: Avoid link settings race on interrupt reception
    
    [ Upstream commit 8960f878e39fadc03d74292a6731f1e914cf2019 ]
    
    When a PHY interrupt is signaled, the SMSC LAN95xx driver updates the
    MAC full duplex mode and PHY flow control registers based on cached data
    in struct phy_device:
    
      smsc95xx_status()                 # raises EVENT_LINK_RESET
        usbnet_deferred_kevent()
          smsc95xx_link_reset()         # uses cached data in phydev
    
    Simultaneously, phylib polls link status once per second and updates
    that cached data:
    
      phy_state_machine()
        phy_check_link_status()
          phy_read_status()
            lan87xx_read_status()
              genphy_read_status()      # updates cached data in phydev
    
    If smsc95xx_link_reset() wins the race against genphy_read_status(),
    the registers may be updated based on stale data.
    
    E.g. if the link was previously down, phydev->duplex is set to
    DUPLEX_UNKNOWN and that's what smsc95xx_link_reset() will use, even
    though genphy_read_status() may update it to DUPLEX_FULL afterwards.
    
    PHY interrupts are currently only enabled on suspend to trigger wakeup,
    so the impact of the race is limited, but we're about to enable them
    perpetually.
    
    Avoid the race by delaying execution of smsc95xx_link_reset() until
    phy_state_machine() has done its job and calls back via
    smsc95xx_handle_link_change().
    
    Signaling EVENT_LINK_RESET on wakeup is not necessary because phylib
    picks up link status changes through polling.  So drop the declaration
    of a ->link_reset() callback.
    
    Note that the semicolon on a line by itself added in smsc95xx_status()
    is a placeholder for a function call which will be added in a subsequent
    commit.  That function call will actually handle the INT_ENP_PHY_INT_
    interrupt.
    
    Tested-by: Oleksij Rempel <o.rempel@pengutronix.de> # LAN9514/9512/9500
    Tested-by: Ferry Toth <fntoth@gmail.com> # LAN9514
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9733561e9662d053622f426494ee6b0a11c004c
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu May 12 10:42:02 2022 +0200

    usbnet: smsc95xx: Don't clear read-only PHY interrupt
    
    [ Upstream commit 3108871f19221372b251f7da1ac38736928b5b3a ]
    
    Upon receiving data from the Interrupt Endpoint, the SMSC LAN95xx driver
    attempts to clear the signaled interrupts by writing "all ones" to the
    Interrupt Status Register.
    
    However the driver only ever enables a single type of interrupt, namely
    the PHY Interrupt.  And according to page 119 of the LAN950x datasheet,
    its bit in the Interrupt Status Register is read-only.  There's no other
    way to clear it than in a separate PHY register:
    
    https://www.microchip.com/content/dam/mchp/documents/UNG/ProductDocuments/DataSheets/LAN950x-Data-Sheet-DS00001875D.pdf
    
    Consequently, writing "all ones" to the Interrupt Status Register is
    pointless and can be dropped.
    
    Tested-by: Oleksij Rempel <o.rempel@pengutronix.de> # LAN9514/9512/9500
    Tested-by: Ferry Toth <fntoth@gmail.com> # LAN9514
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04c9d23ac352fb006fc013fca1b9690fe817108e
Author: Olga Kitaina <okitain@gmail.com>
Date:   Tue Jun 28 21:18:24 2022 +0530

    mtd: rawnand: arasan: Fix clock rate in NV-DDR
    
    [ Upstream commit e16eceea863b417fd328588b1be1a79de0bc937f ]
    
    According to the Arasan NAND controller spec, the flash clock rate for SDR
    must be <= 100 MHz, while for NV-DDR it must be the same as the rate of the
    CLK line for the mode. The driver previously always set 100 MHz for NV-DDR,
    which would result in incorrect behavior for NV-DDR modes 0-4.
    
    The appropriate clock rate can be calculated from the NV-DDR timing
    parameters as 1/tCK, or for rates measured in picoseconds,
    10^12 / nand_nvddr_timings->tCK_min.
    
    Fixes: 197b88fecc50 ("mtd: rawnand: arasan: Add new Arasan NAND controller")
    CC: stable@vger.kernel.org # 5.8+
    Signed-off-by: Olga Kitaina <okitain@gmail.com>
    Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220628154824.12222-3-amit.kumar-mahapatra@xilinx.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc0e4a10b49d0d9569cc5fb5a4edf53e795994ba
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed May 5 23:37:50 2021 +0200

    mtd: rawnand: arasan: Support NV-DDR interface
    
    [ Upstream commit 4edde60314587382e42141df2f41ca968dc20737 ]
    
    Add support for the NV-DDR interface.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210505213750.257417-23-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87d1266b4cd451bfb3d68d24036a45000afcd5ac
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed May 5 23:37:48 2021 +0200

    mtd: rawnand: arasan: Fix a macro parameter
    
    [ Upstream commit 698ddeb89e01840dec05ffdb538468782e641a56 ]
    
    This macro is not yet being used so the compilers never complained
    about it.
    
    Fix the macro before using it.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210505213750.257417-21-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4f7bcce90023eeca5cbbbd72dafa2e49ed5bf16
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed May 5 23:37:36 2021 +0200

    mtd: rawnand: Add NV-DDR timings
    
    [ Upstream commit 1666b815ad1a5b6373e950da5002ac46521a9b28 ]
    
    Create the relevant ONFI NV-DDR timings structure and fill it with
    default values from the ONFI specification.
    
    Add the relevant structure entries and helpers.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210505213750.257417-9-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72fae7e7f7f5336bac83698eab71edb061c292f0
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed May 5 23:37:30 2021 +0200

    mtd: rawnand: arasan: Check the proposed data interface is supported
    
    [ Upstream commit 4dd7ef970bee8a93e1817ec028a7e26aef046d0d ]
    
    Check the data interface is supported in ->setup_interface() before
    acknowledging the timings.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210505213750.257417-3-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c91e5215a4136c33fde9b9688643dbac72139d9b
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed May 5 23:37:29 2021 +0200

    mtd: rawnand: Add a helper to clarify the interface configuration
    
    [ Upstream commit 961965c45c706175b24227868b1c12d72775e446 ]
    
    Name it nand_interface_is_sdr() which will make even more sense when
    nand_interface_is_nvddr() will be introduced.
    
    Use it when relevant.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210505213750.257417-2-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae1e2bc7bfaa81a877251777b7027534ca9c1a82
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:28 2022 +0200

    drm/vc4: drv: Adopt the dma configuration from the HVS or V3D component
    
    [ Upstream commit da8e393e23efb60eba8959856c7df88f9859f6eb ]
    
    vc4_drv isn't necessarily under the /soc node in DT as it is a
    virtual device, but it is the one that does the allocations.
    The DMA addresses are consumed by primarily the HVS or V3D, and
    those require VideoCore cache alias address mapping, and so will be
    under /soc.
    
    During probe find the a suitable device node for HVS or V3D,
    and adopt the DMA configuration of that node.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-2-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe695a2b469b0e71647b7761ac36289f7cdfc992
Author: Zoltan Tamas Vajda <zoltan.tamas.vajda@gmail.com>
Date:   Thu Jun 3 20:58:14 2021 +0200

    HID: hid-input: add Surface Go battery quirk
    
    [ Upstream commit b5539722eb832441f309642fe5102cc3536f92b8 ]
    
    The Elantech touchscreen/digitizer in the Surface Go mistakenly reports
    having a battery. This results in a low battery message every time you
    try to use the pen.
    
    This patch adds a quirk to ignore the non-existent battery and
    gets rid of the false low battery messages.
    
    Signed-off-by: Zoltan Tamas Vajda <zoltan.tamas.vajda@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 434c4aad53fd7be87f94c0a55cfde31a7f877ea6
Author: Elia Devito <eliadevito@gmail.com>
Date:   Fri Jan 22 22:24:37 2021 +0100

    HID: Ignore battery for Elan touchscreen on HP Spectre X360 15-df0xxx
    
    [ Upstream commit decfe496fe77061dea658a0bfa11afd4f92b540d ]
    
    Battery status is reported for the HP Spectre X360 Convertible 15-df0xxx
    even if it does not have a battery. Prevent it to always report the
    battery as low.
    
    Signed-off-by: Elia Devito <eliadevito@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d05cf10695e9dbea331a0c982a10ccc5835c7d7
Author: Jitao Shi <jitao.shi@mediatek.com>
Date:   Fri May 20 10:00:06 2022 +0800

    drm/mediatek: Keep dsi as LP00 before dcs cmds transfer
    
    [ Upstream commit 39e8d062b03c3dc257d880d82bd55cdd9e185a3b ]
    
    To comply with the panel sequence, hold the mipi signal to LP00 before
    the dcs cmds transmission, and pull the mipi signal high from LP00 to
    LP11 until the start of the dcs cmds transmission.
    
    The normal panel timing is :
    (1) pp1800 DC pull up
    (2) avdd & avee AC pull high
    (3) lcm_reset pull high -> pull low -> pull high
    (4) Pull MIPI signal high (LP11) -> initial code -> send video data
        (HS mode)
    
    The power-off sequence is reversed.
    If dsi is not in cmd mode, then dsi will pull the mipi signal high in
    the mtk_output_dsi_enable function. The delay in lane_ready func is
    the reaction time of dsi_rx after pulling up the mipi signal.
    
    Fixes: 2dd8075d2185 ("drm/mediatek: mtk_dsi: Use the drm_panel_bridge API")
    
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/1653012007-11854-4-git-send-email-xinlei.lee@mediatek.com/
    Cc: <stable@vger.kernel.org> # 5.10.x: 7f6335c6a258: drm/mediatek: Modify dsi funcs to atomic operations
    Cc: <stable@vger.kernel.org> # 5.10.x: cde7e2e35c28: drm/mediatek: Separate poweron/poweroff from enable/disable and define new funcs
    Cc: <stable@vger.kernel.org> # 5.10.x
    Signed-off-by: Jitao Shi <jitao.shi@mediatek.com>
    Signed-off-by: Xinlei Lee <xinlei.lee@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Rex-BC Chen <rex-bc.chen@mediatek.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 311728757821d238ecdb48544ad9884c1451d5ca
Author: Julien STEPHAN <jstephan@baylibre.com>
Date:   Mon Feb 14 10:27:42 2022 +0100

    drm/mediatek: Allow commands to be sent during video mode
    
    [ Upstream commit 81cc7e51c4f1686b71e30046437056ece6b2cb4d ]
    
    Mipi dsi panel drivers can use mipi_dsi_dcs_{set,get}_display_brightness()
    to request backlight changes.
    
    This can be done during panel initialization (dsi is in command mode)
    or afterwards (dsi is in Video Mode).
    
    When the DSI is in Video Mode, all commands are rejected.
    
    Detect current DSI mode in mtk_dsi_host_transfer() and switch modes
    temporarily to allow commands to be sent.
    
    Signed-off-by: Julien STEPHAN <jstephan@baylibre.com>
    Signed-off-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3a85c045aa014004f62057f22e558c29938f766
Author: Chuansheng Liu <chuansheng.liu@intel.com>
Date:   Fri Feb 11 08:29:33 2022 +0800

    drm/i915/dg1: Update DMC_DEBUG3 register
    
    [ Upstream commit b60668cb4c57a7cc451de781ae49f5e9cc375eaf ]
    
    Current DMC_DEBUG3(_MMIO(0x101090)) address is for TGL,
    it is wrong for DG1. Just like commit 5bcc95ca382e
    ("drm/i915/dg1: Update DMC_DEBUG register"), correct
    this issue for DG1 platform to avoid wrong register
    being read.
    
    BSpec: 49788
    
    v2: fix "not wrong" typo. (Jani)
    
    Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Chuansheng Liu <chuansheng.liu@intel.com>
    Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220211002933.84240-1-chuansheng.liu@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd02510fb43168310abfd0b9ccf49993a722fb91
Author: David Collins <quic_collinsd@quicinc.com>
Date:   Mon Jun 27 16:55:12 2022 -0700

    spmi: trace: fix stack-out-of-bound access in SPMI tracing functions
    
    commit 2af28b241eea816e6f7668d1954f15894b45d7e3 upstream.
    
    trace_spmi_write_begin() and trace_spmi_read_end() both call
    memcpy() with a length of "len + 1".  This leads to one extra
    byte being read beyond the end of the specified buffer.  Fix
    this out-of-bound memory access by using a length of "len"
    instead.
    
    Here is a KASAN log showing the issue:
    
    BUG: KASAN: stack-out-of-bounds in trace_event_raw_event_spmi_read_end+0x1d0/0x234
    Read of size 2 at addr ffffffc0265b7540 by task thermal@2.0-ser/1314
    ...
    Call trace:
     dump_backtrace+0x0/0x3e8
     show_stack+0x2c/0x3c
     dump_stack_lvl+0xdc/0x11c
     print_address_description+0x74/0x384
     kasan_report+0x188/0x268
     kasan_check_range+0x270/0x2b0
     memcpy+0x90/0xe8
     trace_event_raw_event_spmi_read_end+0x1d0/0x234
     spmi_read_cmd+0x294/0x3ac
     spmi_ext_register_readl+0x84/0x9c
     regmap_spmi_ext_read+0x144/0x1b0 [regmap_spmi]
     _regmap_raw_read+0x40c/0x754
     regmap_raw_read+0x3a0/0x514
     regmap_bulk_read+0x418/0x494
     adc5_gen3_poll_wait_hs+0xe8/0x1e0 [qcom_spmi_adc5_gen3]
     ...
     __arm64_sys_read+0x4c/0x60
     invoke_syscall+0x80/0x218
     el0_svc_common+0xec/0x1c8
     ...
    
    addr ffffffc0265b7540 is located in stack of task thermal@2.0-ser/1314 at offset 32 in frame:
     adc5_gen3_poll_wait_hs+0x0/0x1e0 [qcom_spmi_adc5_gen3]
    
    this frame has 1 object:
     [32, 33) 'status'
    
    Memory state around the buggy address:
     ffffffc0265b7400: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
     ffffffc0265b7480: 04 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
    >ffffffc0265b7500: 00 00 00 00 f1 f1 f1 f1 01 f3 f3 f3 00 00 00 00
                                               ^
     ffffffc0265b7580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffffffc0265b7600: f1 f1 f1 f1 01 f2 07 f2 f2 f2 01 f3 00 00 00 00
    ==================================================================
    
    Fixes: a9fce374815d ("spmi: add command tracepoints for SPMI")
    Cc: stable@vger.kernel.org
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Acked-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: David Collins <quic_collinsd@quicinc.com>
    Link: https://lore.kernel.org/r/20220627235512.2272783-1-quic_collinsd@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc8c5b3b3eb9235e26bc31ceef617182c0da41e5
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Jul 4 17:26:29 2022 -0400

    __follow_mount_rcu(): verify that mount_lock remains unchanged
    
    commit 20aac6c60981f5bfacd66661d090d907bf1482f0 upstream.
    
    Validate mount_lock seqcount as soon as we cross into mount in RCU
    mode.  Sure, ->mnt_root is pinned and will remain so until we
    do rcu_read_unlock() anyway, and we will eventually fail to unlazy if
    the mount_lock had been touched, but we might run into a hard error
    (e.g. -ENOENT) before trying to unlazy.  And it's possible to end
    up with RCU pathwalk racing with rename() and umount() in a way
    that would fail with -ENOENT while non-RCU pathwalk would've
    succeeded with any timings.
    
    Once upon a time we hadn't needed that, but analysis had been subtle,
    brittle and went out of window as soon as RENAME_EXCHANGE had been
    added.
    
    It's narrow, hard to hit and won't get you anything other than
    stray -ENOENT that could be arranged in much easier way with the
    same priveleges, but it's a bug all the same.
    
    Cc: stable@kernel.org
    X-sky-is-falling: unlikely
    Fixes: da1ce0670c14 "vfs: add cross-rename"
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bda7046d4d59a2224a689ed0129ef152a6761cf6
Author: Xie Shaowen <studentxswpy@163.com>
Date:   Tue Aug 2 15:20:33 2022 +0800

    Input: gscps2 - check return value of ioremap() in gscps2_probe()
    
    commit e61b3125a4f036b3c6b87ffd656fc1ab00440ae9 upstream.
    
    The function ioremap() in gscps2_probe() can fail, so
    its return value should be checked.
    
    Fixes: 4bdc0d676a643 ("remove ioremap_nocache and devm_ioremap_nocache")
    Cc: <stable@vger.kernel.org> # v5.6+
    Reported-by: Hacash Robot <hacashRobot@santino.com>
    Signed-off-by: Xie Shaowen <studentxswpy@163.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 541840859ace9c2ccebc32fa9e376c7bd3def490
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Aug 9 14:07:51 2022 -0300

    posix-cpu-timers: Cleanup CPU timers before freeing them during exec
    
    commit e362359ace6f87c201531872486ff295df306d13 upstream.
    
    Commit 55e8c8eb2c7b ("posix-cpu-timers: Store a reference to a pid not a
    task") started looking up tasks by PID when deleting a CPU timer.
    
    When a non-leader thread calls execve, it will switch PIDs with the leader
    process. Then, as it calls exit_itimers, posix_cpu_timer_del cannot find
    the task because the timer still points out to the old PID.
    
    That means that armed timers won't be disarmed, that is, they won't be
    removed from the timerqueue_list. exit_itimers will still release their
    memory, and when that list is later processed, it leads to a
    use-after-free.
    
    Clean up the timers from the de-threaded task before freeing them. This
    prevents a reported use-after-free.
    
    Fixes: 55e8c8eb2c7b ("posix-cpu-timers: Store a reference to a pid not a task")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220809170751.164716-1-cascardo@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce19182b43a524e604773d75cc5e9f614afe64a1
Author: Alexander Lobakin <alexandr.lobakin@intel.com>
Date:   Fri Jul 15 17:15:36 2022 +0200

    x86/olpc: fix 'logical not is only applied to the left hand side'
    
    commit 3a2ba42cbd0b669ce3837ba400905f93dd06c79f upstream.
    
    The bitops compile-time optimization series revealed one more
    problem in olpc-xo1-sci.c:send_ebook_state(), resulted in GCC
    warnings:
    
    arch/x86/platform/olpc/olpc-xo1-sci.c: In function 'send_ebook_state':
    arch/x86/platform/olpc/olpc-xo1-sci.c:83:63: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
       83 |         if (!!test_bit(SW_TABLET_MODE, ebook_switch_idev->sw) == state)
          |                                                               ^~
    arch/x86/platform/olpc/olpc-xo1-sci.c:83:13: note: add parentheses around left hand side expression to silence this warning
    
    Despite this code working as intended, this redundant double
    negation of boolean value, together with comparing to `char`
    with no explicit conversion to bool, makes compilers think
    the author made some unintentional logical mistakes here.
    Make it the other way around and negate the char instead
    to silence the warnings.
    
    Fixes: d2aa37411b8e ("x86/olpc/xo1/sci: Produce wakeup events for buttons and switches")
    Cc: stable@vger.kernel.org # 3.5+
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-and-tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Signed-off-by: Yury Norov <yury.norov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43e059d01628137ea9b9082483c4917856b336ae
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Tue Jul 26 10:18:51 2022 -0400

    ftrace/x86: Add back ftrace_expected assignment
    
    commit ac6c1b2ca77e722a1e5d651f12f437f2f237e658 upstream.
    
    When a ftrace_bug happens (where ftrace fails to modify a location) it is
    helpful to have what was at that location as well as what was expected to
    be there.
    
    But with the conversion to text_poke() the variable that assigns the
    expected for debugging was dropped. Unfortunately, I noticed this when I
    needed it. Add it back.
    
    Link: https://lkml.kernel.org/r/20220726101851.069d2e70@gandalf.local.home
    
    Cc: "x86@kernel.org" <x86@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Fixes: 768ae4406a5c ("x86/ftrace: Use text_poke()")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd96b61389f8650d880df4b7f8f55f880c19bff9
Author: Kim Phillips <kim.phillips@amd.com>
Date:   Mon Aug 8 09:32:33 2022 -0500

    x86/bugs: Enable STIBP for IBPB mitigated RETBleed
    
    commit e6cfcdda8cbe81eaf821c897369a65fec987b404 upstream.
    
    AMD's "Technical Guidance for Mitigating Branch Type Confusion,
    Rev. 1.0 2022-07-12" whitepaper, under section 6.1.2 "IBPB On
    Privileged Mode Entry / SMT Safety" says:
    
      Similar to the Jmp2Ret mitigation, if the code on the sibling thread
      cannot be trusted, software should set STIBP to 1 or disable SMT to
      ensure SMT safety when using this mitigation.
    
    So, like already being done for retbleed=unret, and now also for
    retbleed=ibpb, force STIBP on machines that have it, and report its SMT
    vulnerability status accordingly.
    
     [ bp: Remove the "we" and remove "[AMD]" applicability parameter which
       doesn't work here. ]
    
    Fixes: 3ebc17006888 ("x86/bugs: Add retbleed=ibpb")
    Signed-off-by: Kim Phillips <kim.phillips@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: stable@vger.kernel.org # 5.10, 5.15, 5.19
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206537
    Link: https://lore.kernel.org/r/20220804192201.439596-1-kim.phillips@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1118020b3b7ab2fbc5806434866867b2ab357f4d
Author: Arun Easi <aeasi@marvell.com>
Date:   Wed Jun 15 22:35:03 2022 -0700

    scsi: qla2xxx: Fix losing FCP-2 targets during port perturbation tests
    
    commit 58d1c124cd79ea686b512043c5bd515590b2ed95 upstream.
    
    When a mix of FCP-2 (tape) and non-FCP-2 targets are present, FCP-2 target
    state was incorrectly transitioned when both of the targets were gone. Fix
    this by ignoring state transition for FCP-2 targets.
    
    Link: https://lore.kernel.org/r/20220616053508.27186-7-njavali@marvell.com
    Fixes: 44c57f205876 ("scsi: qla2xxx: Changes to support FCP2 Target")
    Cc: stable@vger.kernel.org
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 912408ba0bdcefecdca55cae21b8c678b7406722
Author: Arun Easi <aeasi@marvell.com>
Date:   Wed Jun 15 22:35:06 2022 -0700

    scsi: qla2xxx: Fix losing FCP-2 targets on long port disable with I/Os
    
    commit 2416ccd3815ba1613e10a6da0a24ef21acfe5633 upstream.
    
    FCP-2 devices were not coming back online once they were lost, login
    retries exhausted, and then came back up.  Fix this by accepting RSCN when
    the device is not online.
    
    Link: https://lore.kernel.org/r/20220616053508.27186-10-njavali@marvell.com
    Fixes: 44c57f205876 ("scsi: qla2xxx: Changes to support FCP2 Target")
    Cc: stable@vger.kernel.org
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82cb0ebe5bd1063dfef5c7159418e65e65ceddd2
Author: Quinn Tran <qutran@marvell.com>
Date:   Wed Jun 15 22:35:07 2022 -0700

    scsi: qla2xxx: Fix erroneous mailbox timeout after PCI error injection
    
    commit f260694e6463b63ae550aad25ddefe94cb1904da upstream.
    
    Clear wait for mailbox interrupt flag to prevent stale mailbox:
    
    Feb 22 05:22:56 ltcden4-lp7 kernel: qla2xxx [0135:90:00.1]-500a:4: LOOP UP detected (16 Gbps).
    Feb 22 05:22:59 ltcden4-lp7 kernel: qla2xxx [0135:90:00.1]-d04c:4: MBX Command timeout for cmd 69, ...
    
    To fix the issue, driver needs to clear the MBX_INTR_WAIT flag on purging
    the mailbox. When the stale mailbox completion does arrive, it will be
    dropped.
    
    Link: https://lore.kernel.org/r/20220616053508.27186-11-njavali@marvell.com
    Fixes: b6faaaf796d7 ("scsi: qla2xxx: Serialize mailbox request")
    Cc: Naresh Bannoth <nbannoth@in.ibm.com>
    Cc: Kyle Mahlkuch <Kyle.Mahlkuch@ibm.com>
    Cc: stable@vger.kernel.org
    Reported-by: Naresh Bannoth <nbannoth@in.ibm.com>
    Tested-by: Naresh Bannoth <nbannoth@in.ibm.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7941ca578c4d7ca36938210442983c03e6eee5f1
Author: Quinn Tran <qutran@marvell.com>
Date:   Wed Jun 15 22:35:01 2022 -0700

    scsi: qla2xxx: Turn off multi-queue for 8G adapters
    
    commit 5304673bdb1635e27555bd636fd5d6956f1cd552 upstream.
    
    For 8G adapters, multi-queue was enabled accidentally. Make sure
    multi-queue is not enabled.
    
    Link: https://lore.kernel.org/r/20220616053508.27186-5-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ffe5285ea5d907be5f5617abf498c5d8417e107
Author: Arun Easi <aeasi@marvell.com>
Date:   Tue Jul 12 22:20:42 2022 -0700

    scsi: qla2xxx: Fix discovery issues in FC-AL topology
    
    commit 47ccb113cead905bdc236571bf8ac6fed90321b3 upstream.
    
    A direct attach tape device, when gets swapped with another, was not
    discovered. Fix this by looking at loop map and reinitialize link if there
    are devices present.
    
    Link: https://lore.kernel.org/linux-scsi/baef87c3-5dad-3b47-44c1-6914bfc90108@cybernetics.com/
    Link: https://lore.kernel.org/r/20220713052045.10683-8-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reported-by: Tony Battersby <tonyb@cybernetics.com>
    Tested-by: Tony Battersby <tonyb@cybernetics.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8aad5eba7385fa7f386624d2a0ef5f24225980a
Author: Steffen Maier <maier@linux.ibm.com>
Date:   Fri Jul 29 18:25:29 2022 +0200

    scsi: zfcp: Fix missing auto port scan and thus missing target ports
    
    commit 4da8c5f76825269f28d6a89fa752934a4bcb6dfa upstream.
    
    Case (1):
      The only waiter on wka_port->completion_wq is zfcp_fc_wka_port_get()
      trying to open a WKA port. As such it should only be woken up by WKA port
      *open* responses, not by WKA port close responses.
    
    Case (2):
      A close WKA port response coming in just after having sent a new open WKA
      port request and before blocking for the open response with wait_event()
      in zfcp_fc_wka_port_get() erroneously renders the wait_event a NOP
      because the close handler overwrites wka_port->status. Hence the
      wait_event condition is erroneously true and it does not enter blocking
      state.
    
    With non-negligible probability, the following time space sequence happens
    depending on timing without this fix:
    
    user process        ERP thread zfcp work queue tasklet system work queue
    ============        ========== =============== ======= =================
    $ echo 1 > online
    zfcp_ccw_set_online
    zfcp_ccw_activate
    zfcp_erp_adapter_reopen
    msleep scan backoff zfcp_erp_strategy
    |                   ...
    |                   zfcp_erp_action_cleanup
    |                   ...
    |                   queue delayed scan_work
    |                   queue ns_up_work
    |                              ns_up_work:
    |                              zfcp_fc_wka_port_get
    |                               open wka request
    |                                              open response
    |                              GSPN FC-GS
    |                              RSPN FC-GS [NPIV-only]
    |                              zfcp_fc_wka_port_put
    |                               (--wka->refcount==0)
    |                               sched delayed wka->work
    |
    ~~~Case (1)~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    zfcp_erp_wait
    flush scan_work
    |                                                      wka->work:
    |                                                      wka->status=CLOSING
    |                                                      close wka request
    |                              scan_work:
    |                              zfcp_fc_wka_port_get
    |                               (wka->status==CLOSING)
    |                               wka->status=OPENING
    |                               open wka request
    |                               wait_event
    |                               |              close response
    |                               |              wka->status=OFFLINE
    |                               |              wake_up /*WRONG*/
    ~~~Case (2)~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |                                                      wka->work:
    |                                                      wka->status=CLOSING
    |                                                      close wka request
    zfcp_erp_wait
    flush scan_work
    |                              scan_work:
    |                              zfcp_fc_wka_port_get
    |                               (wka->status==CLOSING)
    |                               wka->status=OPENING
    |                               open wka request
    |                                              close response
    |                                              wka->status=OFFLINE
    |                                              wake_up /*WRONG&NOP*/
    |                               wait_event /*NOP*/
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    |                               (wka->status!=ONLINE)
    |                               return -EIO
    |                              return early
                                                   open response
                                                   wka->status=ONLINE
                                                   wake_up /*NOP*/
    
    So we erroneously end up with no automatic port scan. This is a big problem
    when it happens during boot. The timing is influenced by v3.19 commit
    18f87a67e6d6 ("zfcp: auto port scan resiliency").
    
    Fix it by fully mutually excluding zfcp_fc_wka_port_get() and
    zfcp_fc_wka_port_offline(). For that to work, we make the latter block
    until we got the response for a close WKA port. In order not to penalize
    the system workqueue, we move wka_port->work to our own adapter workqueue.
    Note that before v2.6.30 commit 828bc1212a68 ("[SCSI] zfcp: Set WKA-port to
    offline on adapter deactivation"), zfcp did block in
    zfcp_fc_wka_port_offline() as well, but with a different condition.
    
    While at it, make non-functional cleanups to improve code reading in
    zfcp_fc_wka_port_get(). If we cannot send the WKA port open request, don't
    rely on the subsequent wait_event condition to immediately let this case
    pass without blocking. Also don't want to rely on the additional condition
    handling the refcount to be skipped just to finally return with -EIO.
    
    Link: https://lore.kernel.org/r/20220729162529.1620730-1-maier@linux.ibm.com
    Fixes: 5ab944f97e09 ("[SCSI] zfcp: attach and release SAN nameserver port on demand")
    Cc: <stable@vger.kernel.org> #v2.6.28+
    Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e0da18956d38e7106664dc1d06367b22f06edd3
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Thu Aug 4 20:41:25 2022 +0800

    video: fbdev: s3fb: Check the size of screen before memset_io()
    
    [ Upstream commit 6ba592fa014f21f35a8ee8da4ca7b95a018f13e8 ]
    
    In the function s3fb_set_par(), the value of 'screen_size' is
    calculated by the user input. If the user provides the improper value,
    the value of 'screen_size' may larger than 'info->screen_size', which
    may cause the following bug:
    
    [   54.083733] BUG: unable to handle page fault for address: ffffc90003000000
    [   54.083742] #PF: supervisor write access in kernel mode
    [   54.083744] #PF: error_code(0x0002) - not-present page
    [   54.083760] RIP: 0010:memset_orig+0x33/0xb0
    [   54.083782] Call Trace:
    [   54.083788]  s3fb_set_par+0x1ec6/0x4040
    [   54.083806]  fb_set_var+0x604/0xeb0
    [   54.083836]  do_fb_ioctl+0x234/0x670
    
    Fix the this by checking the value of 'screen_size' before memset_io().
    
    Fixes: a268422de8bf ("fbdev driver for S3 Trio/Virge")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09e733d6ac948e6fda4b16252e44ea46f98fc8b4
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Thu Aug 4 20:41:24 2022 +0800

    video: fbdev: arkfb: Check the size of screen before memset_io()
    
    [ Upstream commit 96b550971c65d54d64728d8ba973487878a06454 ]
    
    In the function arkfb_set_par(), the value of 'screen_size' is
    calculated by the user input. If the user provides the improper value,
    the value of 'screen_size' may larger than 'info->screen_size', which
    may cause the following bug:
    
    [  659.399066] BUG: unable to handle page fault for address: ffffc90003000000
    [  659.399077] #PF: supervisor write access in kernel mode
    [  659.399079] #PF: error_code(0x0002) - not-present page
    [  659.399094] RIP: 0010:memset_orig+0x33/0xb0
    [  659.399116] Call Trace:
    [  659.399122]  arkfb_set_par+0x143f/0x24c0
    [  659.399130]  fb_set_var+0x604/0xeb0
    [  659.399161]  do_fb_ioctl+0x234/0x670
    [  659.399189]  fb_ioctl+0xdd/0x130
    
    Fix the this by checking the value of 'screen_size' before memset_io().
    
    Fixes: 681e14730c73 ("arkfb: new framebuffer driver for ARK Logic cards")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd8269e57621e5b38cc0b4bd2fa02e85c9f2a441
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Thu Aug 4 20:41:23 2022 +0800

    video: fbdev: vt8623fb: Check the size of screen before memset_io()
    
    [ Upstream commit ec0754c60217248fa77cc9005d66b2b55200ac06 ]
    
    In the function vt8623fb_set_par(), the value of 'screen_size' is
    calculated by the user input. If the user provides the improper value,
    the value of 'screen_size' may larger than 'info->screen_size', which
    may cause the following bug:
    
    [  583.339036] BUG: unable to handle page fault for address: ffffc90005000000
    [  583.339049] #PF: supervisor write access in kernel mode
    [  583.339052] #PF: error_code(0x0002) - not-present page
    [  583.339074] RIP: 0010:memset_orig+0x33/0xb0
    [  583.339110] Call Trace:
    [  583.339118]  vt8623fb_set_par+0x11cd/0x21e0
    [  583.339146]  fb_set_var+0x604/0xeb0
    [  583.339181]  do_fb_ioctl+0x234/0x670
    [  583.339209]  fb_ioctl+0xdd/0x130
    
    Fix the this by checking the value of 'screen_size' before memset_io().
    
    Fixes: 558b7bd86c32 ("vt8623fb: new framebuffer driver for VIA VT8623")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9943942a501114d5ea1093329e3b04da597b085
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Thu Jul 14 09:49:15 2022 +0200

    x86/entry: Build thunk_$(BITS) only if CONFIG_PREEMPTION=y
    
    [ Upstream commit de979c83574abf6e78f3fa65b716515c91b2613d ]
    
    With CONFIG_PREEMPTION disabled, arch/x86/entry/thunk_$(BITS).o becomes
    an empty object file.
    
    With some old versions of binutils (i.e., 2.35.90.20210113-1ubuntu1) the
    GNU assembler doesn't generate a symbol table for empty object files and
    objtool fails with the following error when a valid symbol table cannot
    be found:
    
      arch/x86/entry/thunk_64.o: warning: objtool: missing symbol table
    
    To prevent this from happening, build thunk_$(BITS).o only if
    CONFIG_PREEMPTION is enabled.
    
    BugLink: https://bugs.launchpad.net/bugs/1911359
    
    Fixes: 320100a5ffe5 ("x86/entry: Remove the TRACE_IRQS cruft")
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/Ys/Ke7EWjcX+ZlXO@arighi-desktop
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6c228b950d0f7304bb54b240662308fceef513c
Author: Tianchen Ding <dtcccc@linux.alibaba.com>
Date:   Thu Jun 9 07:34:11 2022 +0800

    sched: Fix the check of nr_running at queue wakelist
    
    [ Upstream commit 28156108fecb1f808b21d216e8ea8f0d205a530c ]
    
    The commit 2ebb17717550 ("sched/core: Offload wakee task activation if it
    the wakee is descheduling") checked rq->nr_running <= 1 to avoid task
    stacking when WF_ON_CPU.
    
    Per the ordering of writes to p->on_rq and p->on_cpu, observing p->on_cpu
    (WF_ON_CPU) in ttwu_queue_cond() implies !p->on_rq, IOW p has gone through
    the deactivate_task() in __schedule(), thus p has been accounted out of
    rq->nr_running. As such, the task being the only runnable task on the rq
    implies reading rq->nr_running == 0 at that point.
    
    The benchmark result is in [1].
    
    [1] https://lore.kernel.org/all/e34de686-4e85-bde1-9f3c-9bbc86b38627@linux.alibaba.com/
    
    Suggested-by: Valentin Schneider <vschneid@redhat.com>
    Signed-off-by: Tianchen Ding <dtcccc@linux.alibaba.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <vschneid@redhat.com>
    Link: https://lore.kernel.org/r/20220608233412.327341-2-dtcccc@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd1ebcbbf08ea1ee1621d9922750ef90b960f9e1
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Jul 25 10:37:54 2022 -0700

    tools/thermal: Fix possible path truncations
    
    [ Upstream commit 6c58cf40e3a1d2f47c09d3489857e9476316788a ]
    
    A build with -D_FORTIFY_SOURCE=2 enabled will produce the following warnings:
    
    sysfs.c:63:30: warning: '%s' directive output may be truncated writing up to 255 bytes into a region of size between 0 and 255 [-Wformat-truncation=]
      snprintf(filepath, 256, "%s/%s", path, filename);
                                  ^~
    Bump up the buffer to PATH_MAX which is the limit and account for all of
    the possible NUL and separators that could lead to exceeding the
    allocated buffer sizes.
    
    Fixes: 94f69966faf8 ("tools/thermal: Introduce tmon, a tool for thermal subsystem")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0288fa799e273b08839037499d704dc7bdc13e9a
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Aug 3 17:23:12 2022 +0800

    video: fbdev: arkfb: Fix a divide-by-zero bug in ark_set_pixclock()
    
    [ Upstream commit 2f1c4523f7a3aaabe7e53d3ebd378292947e95c8 ]
    
    Since the user can control the arguments of the ioctl() from the user
    space, under special arguments that may result in a divide-by-zero bug
    in:
      drivers/video/fbdev/arkfb.c:784: ark_set_pixclock(info, (hdiv * info->var.pixclock) / hmul);
    with hdiv=1, pixclock=1 and hmul=2 you end up with (1*1)/2 = (int) 0.
    and then in:
      drivers/video/fbdev/arkfb.c:504: rv = dac_set_freq(par->dac, 0, 1000000000 / pixclock);
    we'll get a division-by-zero.
    
    The following log can reveal it:
    
    divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    RIP: 0010:ark_set_pixclock drivers/video/fbdev/arkfb.c:504 [inline]
    RIP: 0010:arkfb_set_par+0x10fc/0x24c0 drivers/video/fbdev/arkfb.c:784
    Call Trace:
     fb_set_var+0x604/0xeb0 drivers/video/fbdev/core/fbmem.c:1034
     do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110
     fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189
    
    Fix this by checking the argument of ark_set_pixclock() first.
    
    Fixes: 681e14730c73 ("arkfb: new framebuffer driver for ARK Logic cards")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94398c1fec345b013d5d9c6ee1ec61c7487ac144
Author: Siddh Raman Pant <code@siddh.me>
Date:   Sun Jul 31 21:39:13 2022 +0530

    x86/numa: Use cpumask_available instead of hardcoded NULL check
    
    [ Upstream commit 625395c4a0f4775e0fe00f616888d2e6c1ba49db ]
    
    GCC-12 started triggering a new warning:
    
      arch/x86/mm/numa.c: In function ‘cpumask_of_node’:
      arch/x86/mm/numa.c:916:39: warning: the comparison will always evaluate as ‘false’ for the address of ‘node_to_cpumask_map’ will never be NULL [-Waddress]
        916 |         if (node_to_cpumask_map[node] == NULL) {
            |                                       ^~
    
    node_to_cpumask_map is of type cpumask_var_t[].
    
    When CONFIG_CPUMASK_OFFSTACK is set, cpumask_var_t is typedef'd to a
    pointer for dynamic allocation, else to an array of one element. The
    "wicked game" can be checked on line 700 of include/linux/cpumask.h.
    
    The original code in debug_cpumask_set_cpu() and cpumask_of_node() were
    probably written by the original authors with CONFIG_CPUMASK_OFFSTACK=y
    (i.e. dynamic allocation) in mind, checking if the cpumask was available
    via a direct NULL check.
    
    When CONFIG_CPUMASK_OFFSTACK is not set, GCC gives the above warning
    while compiling the kernel.
    
    Fix that by using cpumask_available(), which does the NULL check when
    CONFIG_CPUMASK_OFFSTACK is set, otherwise returns true. Use it wherever
    such checks are made.
    
    Conditional definitions of cpumask_available() can be found along with
    the definition of cpumask_var_t. Check the cpumask.h reference mentioned
    above.
    
    Fixes: c032ef60d1aa ("cpumask: convert node_to_cpumask_map[] to cpumask_var_t")
    Fixes: de2d9445f162 ("x86: Unify node_to_cpumask_map handling between 32 and 64bit")
    Signed-off-by: Siddh Raman Pant <code@siddh.me>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20220731160913.632092-1-code@siddh.me
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 336626564b58071b8980a4e6a31a8f5d92705d9b
Author: Waiman Long <longman@redhat.com>
Date:   Tue Aug 2 21:54:51 2022 -0400

    sched, cpuset: Fix dl_cpu_busy() panic due to empty cs->cpus_allowed
    
    [ Upstream commit b6e8d40d43ae4dec00c8fea2593eeea3114b8f44 ]
    
    With cgroup v2, the cpuset's cpus_allowed mask can be empty indicating
    that the cpuset will just use the effective CPUs of its parent. So
    cpuset_can_attach() can call task_can_attach() with an empty mask.
    This can lead to cpumask_any_and() returns nr_cpu_ids causing the call
    to dl_bw_of() to crash due to percpu value access of an out of bound
    CPU value. For example:
    
            [80468.182258] BUG: unable to handle page fault for address: ffffffff8b6648b0
              :
            [80468.191019] RIP: 0010:dl_cpu_busy+0x30/0x2b0
              :
            [80468.207946] Call Trace:
            [80468.208947]  cpuset_can_attach+0xa0/0x140
            [80468.209953]  cgroup_migrate_execute+0x8c/0x490
            [80468.210931]  cgroup_update_dfl_csses+0x254/0x270
            [80468.211898]  cgroup_subtree_control_write+0x322/0x400
            [80468.212854]  kernfs_fop_write_iter+0x11c/0x1b0
            [80468.213777]  new_sync_write+0x11f/0x1b0
            [80468.214689]  vfs_write+0x1eb/0x280
            [80468.215592]  ksys_write+0x5f/0xe0
            [80468.216463]  do_syscall_64+0x5c/0x80
            [80468.224287]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fix that by using effective_cpus instead. For cgroup v1, effective_cpus
    is the same as cpus_allowed. For v2, effective_cpus is the real cpumask
    to be used by tasks within the cpuset anyway.
    
    Also update task_can_attach()'s 2nd argument name to cs_effective_cpus to
    reflect the change. In addition, a check is added to task_can_attach()
    to guard against the possibility that cpumask_any_and() may return a
    value >= nr_cpu_ids.
    
    Fixes: 7f51412a415d ("sched/deadline: Fix bandwidth check/update when migrating tasks between exclusive cpusets")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Juri Lelli <juri.lelli@redhat.com>
    Link: https://lore.kernel.org/r/20220803015451.2219567-1-longman@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0039189a3b15dbf71965261ec05bd9b279ad9498
Author: Dietmar Eggemann <dietmar.eggemann@arm.com>
Date:   Wed Mar 2 19:34:30 2022 +0100

    sched/deadline: Merge dl_task_can_attach() and dl_cpu_busy()
    
    [ Upstream commit 772b6539fdda31462cc08368e78df60b31a58bab ]
    
    Both functions are doing almost the same, that is checking if admission
    control is still respected.
    
    With exclusive cpusets, dl_task_can_attach() checks if the destination
    cpuset (i.e. its root domain) has enough CPU capacity to accommodate the
    task.
    dl_cpu_busy() checks if there is enough CPU capacity in the cpuset in
    case the CPU is hot-plugged out.
    
    dl_task_can_attach() is used to check if a task can be admitted while
    dl_cpu_busy() is used to check if a CPU can be hotplugged out.
    
    Make dl_cpu_busy() able to deal with a task and use it instead of
    dl_task_can_attach() in task_can_attach().
    
    Signed-off-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Juri Lelli <juri.lelli@redhat.com>
    Link: https://lore.kernel.org/r/20220302183433.333029-4-dietmar.eggemann@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e695256d46044933433fa8ed6a908c0b353d6a2a
Author: Josh Poimboeuf <jpoimboe@kernel.org>
Date:   Thu Jul 21 11:01:23 2022 -0700

    scripts/faddr2line: Fix vmlinux detection on arm64
    
    [ Upstream commit b6a5068854cfe372da7dee3224dcf023ed5b00cb ]
    
    Since commit dcea997beed6 ("faddr2line: Fix overlapping text section
    failures, the sequel"), faddr2line is completely broken on arm64.
    
    For some reason, on arm64, the vmlinux ELF object file type is ET_DYN
    rather than ET_EXEC.  Check for both when determining whether the object
    is vmlinux.
    
    Modules and vmlinux.o have type ET_REL on all arches.
    
    Fixes: dcea997beed6 ("faddr2line: Fix overlapping text section failures, the sequel")
    Reported-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Tested-by: John Garry <john.garry@huawei.com>
    Link: https://lore.kernel.org/r/dad1999737471b06d6188ce4cdb11329aa41682c.1658426357.git.jpoimboe@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 232f4aca400a988823e7d574c86d9c5edfc1ed7e
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Tue Aug 2 15:13:22 2022 -0300

    genelf: Use HAVE_LIBCRYPTO_SUPPORT, not the never defined HAVE_LIBCRYPTO
    
    [ Upstream commit 91cea6be90e436c55cde8770a15e4dac9d3032d0 ]
    
    When genelf was introduced it tested for HAVE_LIBCRYPTO not
    HAVE_LIBCRYPTO_SUPPORT, which is the define the feature test for openssl
    defines, fix it.
    
    This also adds disables the deprecation warning, someone has to fix this
    to build with openssl 3.0 before the warning becomes a hard error.
    
    Fixes: 9b07e27f88b9cd78 ("perf inject: Add jitdump mmap injection support")
    Reported-by: 谭梓煊 <tanzixuan.me@gmail.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Andrii Nakryiko <andrii@kernel.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: KP Singh <kpsingh@kernel.org>
    Cc: Martin KaFai Lau <kafai@fb.com>
    Cc: Nick Terrell <terrelln@fb.com>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lore.kernel.org/lkml/YulpPqXSOG0Q4J1o@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cadeb5186e253ba9e44284423621090f1e2420e6
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Aug 2 20:38:32 2022 +1000

    powerpc/pci: Fix PHB numbering when using opal-phbid
    
    [ Upstream commit f4b39e88b42d13366b831270306326b5c20971ca ]
    
    The recent change to the PHB numbering logic has a logic error in the
    handling of "ibm,opal-phbid".
    
    When an "ibm,opal-phbid" property is present, &prop is written to and
    ret is set to zero.
    
    The following call to of_alias_get_id() is skipped because ret == 0.
    
    But then the if (ret >= 0) is true, and the body of that if statement
    sets prop = ret which throws away the value that was just read from
    "ibm,opal-phbid".
    
    Fix the logic by only doing the ret >= 0 check in the of_alias_get_id()
    case.
    
    Fixes: 0fe1e96fef0a ("powerpc/pci: Prefer PCI domain assignment via DT 'linux,pci-domain' and alias")
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220802105723.1055178-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a49b025c36ae749cee7ccc4b7e456e02539cdc3
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Mon Aug 1 11:37:19 2022 +0800

    kprobes: Forbid probing on trampoline and BPF code areas
    
    [ Upstream commit 28f6c37a2910f565b4f5960df52b2eccae28c891 ]
    
    kernel_text_address() treats ftrace_trampoline, kprobe_insn_slot
    and bpf_text_address as valid kprobe addresses - which is not ideal.
    
    These text areas are removable and changeable without any notification
    to kprobes, and probing on them can trigger unexpected behavior:
    
      https://lkml.org/lkml/2022/7/26/1148
    
    Considering that jump_label and static_call text are already
    forbiden to probe, kernel_text_address() should be replaced with
    core_kernel_text() and is_module_text_address() to check other text
    areas which are unsafe to kprobe.
    
    [ mingo: Rewrote the changelog. ]
    
    Fixes: 5b485629ba0d ("kprobes, extable: Identify kprobes trampolines as kernel text area")
    Fixes: 74451e66d516 ("bpf: make jited programs visible in traces")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Link: https://lore.kernel.org/r/20220801033719.228248-1-chenzhongjin@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4296089f61aab3bacec6efbd3e6a13c4f9c08f6d
Author: Ian Rogers <irogers@google.com>
Date:   Sun Jul 31 09:49:23 2022 -0700

    perf symbol: Fail to read phdr workaround
    
    [ Upstream commit 6d518ac7be6223811ab947897273b1bbef846180 ]
    
    The perf jvmti agent doesn't create program headers, in this case
    fallback on section headers as happened previously.
    
    Committer notes:
    
    To test this, from a public post by Ian:
    
    1) download a Java workload dacapo-9.12-MR1-bach.jar from
    https://sourceforge.net/projects/dacapobench/
    
    2) build perf such as "make -C tools/perf O=/tmp/perf NO_LIBBFD=1" it
    should detect Java and create /tmp/perf/libperf-jvmti.so
    
    3) run perf with the jvmti agent:
    
      perf record -k 1 java -agentpath:/tmp/perf/libperf-jvmti.so -jar dacapo-9.12-MR1-bach.jar -n 10 fop
    
    4) run perf inject:
    
      perf inject -i perf.data -o perf-injected.data -j
    
    5) run perf report
    
      perf report -i perf-injected.data | grep org.apache.fop
    
    With this patch reverted I see lots of symbols like:
    
         0.00%  java             jitted-388040-4656.so  [.] org.apache.fop.fo.FObj.bind(org.apache.fop.fo.PropertyList)
    
    With the patch (2d86612aacb7805f ("perf symbol: Correct address for bss
    symbols")) I see lots of:
    
      dso__load_sym_internal: failed to find program header for symbol:
      Lorg/apache/fop/fo/FObj;bind(Lorg/apache/fop/fo/PropertyList;)V
      st_value: 0x40
    
    Fixes: 2d86612aacb7805f ("perf symbol: Correct address for bss symbols")
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Ian Rogers <irogers@google.com>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Leo Yan <leo.yan@linaro.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lore.kernel.org/lkml/20220731164923.691193-1-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00dc7cbbb558955ff410fd392cc9b0366eb06df0
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 10:51:29 2022 +0400

    powerpc/cell/axon_msi: Fix refcount leak in setup_msi_msg_address
    
    [ Upstream commit df5d4b616ee76abc97e5bd348e22659c2b095b1c ]
    
    of_get_next_parent() returns a node pointer with refcount incremented,
    we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() in the error path to avoid refcount leak.
    
    Fixes: ce21b3c9648a ("[CELL] add support for MSI on Axon-based Cell systems")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220605065129.63906-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d1e53f7f181a11a8a343def1e0d0209905b7c64
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 09:32:23 2022 +0400

    powerpc/xive: Fix refcount leak in xive_get_max_prio
    
    [ Upstream commit 255b650cbec6849443ce2e0cdd187fd5e61c218c ]
    
    of_find_node_by_path() returns a node pointer with
    refcount incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: eac1e731b59e ("powerpc/xive: guest exploitation of the XIVE interrupt controller")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220605053225.56125-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85aff6a9b7b7ec4e5c319f7946c9864c8d5e3d4a
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jun 3 16:15:42 2022 +0400

    powerpc/spufs: Fix refcount leak in spufs_init_isolated_loader
    
    [ Upstream commit 6ac059dacffa8ab2f7798f20e4bd3333890c541c ]
    
    of_find_node_by_path() returns remote device nodepointer with
    refcount incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 0afacde3df4c ("[POWERPC] spufs: allow isolated mode apps by starting the SPE loader")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220603121543.22884-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50e7896c8e0abebc552f4395429836b640c7e331
Author: Chao Liu <liuchao@coolpad.com>
Date:   Mon Jul 25 18:16:33 2022 +0800

    f2fs: fix to remove F2FS_COMPR_FL and tag F2FS_NOCOMP_FL at the same time
    
    [ Upstream commit 8ee236dcaa690d09ca612622e8bc8d09c302021d ]
    
    If the inode has the compress flag, it will fail to use
    'chattr -c +m' to remove its compress flag and tag no compress flag.
    However, the same command will be successful when executed again,
    as shown below:
    
      $ touch foo.txt
      $ chattr +c foo.txt
      $ chattr -c +m foo.txt
      chattr: Invalid argument while setting flags on foo.txt
      $ chattr -c +m foo.txt
      $ f2fs_io getflags foo.txt
      get a flag on foo.txt ret=0, flags=nocompression,inline_data
    
    Fix this by removing some checks in f2fs_setflags_common()
    that do not affect the original logic. I go through all the
    possible scenarios, and the results are as follows. Bold is
    the only thing that has changed.
    
    +---------------+-----------+-----------+----------+
    |               |            file flags            |
    + command       +-----------+-----------+----------+
    |               | no flag   | compr     | nocompr  |
    +---------------+-----------+-----------+----------+
    | chattr +c     | compr     | compr     | -EINVAL  |
    | chattr -c     | no flag   | no flag   | nocompr  |
    | chattr +m     | nocompr   | -EINVAL   | nocompr  |
    | chattr -m     | no flag   | compr     | no flag  |
    | chattr +c +m  | -EINVAL   | -EINVAL   | -EINVAL  |
    | chattr +c -m  | compr     | compr     | compr    |
    | chattr -c +m  | nocompr   | *nocompr* | nocompr  |
    | chattr -c -m  | no flag   | no flag   | no flag  |
    +---------------+-----------+-----------+----------+
    
    Link: https://lore.kernel.org/linux-f2fs-devel/20220621064833.1079383-1-chaoliu719@gmail.com/
    Fixes: 4c8ff7095bef ("f2fs: support data compression")
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Chao Liu <liuchao@coolpad.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec769406d06d5006c40554c4640f6e584ab6ae26
Author: Byungki Lee <dominicus79@gmail.com>
Date:   Fri Apr 29 13:29:53 2022 -0700

    f2fs: write checkpoint during FG_GC
    
    [ Upstream commit a9163b947ae8f7af7cb8d63606cd87b9facbfe74 ]
    
    If there's not enough free sections each of which consistis of large segments,
    we can hit no free section for upcoming section allocation. Let's reclaim some
    prefree segments by writing checkpoints.
    
    Signed-off-by: Byungki Lee <dominicus79@gmail.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0311057395b6bc8eed0157dbd75157758f55a04
Author: Chao Yu <chao@kernel.org>
Date:   Sun Mar 20 23:11:18 2022 +0800

    f2fs: don't set GC_FAILURE_PIN for background GC
    
    [ Upstream commit 642c0969916eaa4878cb74f36752108e590b0389 ]
    
    So that it can reduce the possibility that file be unpinned forcely by
    foreground GC due to .i_gc_failures[GC_FAILURE_PIN] exceeds threshold.
    
    Signed-off-by: Chao Yu <chao.yu@oppo.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47a8fe1b154aa6d836582365b1c70684af8597e4
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jul 6 12:21:48 2022 +0200

    powerpc/pci: Prefer PCI domain assignment via DT 'linux,pci-domain' and alias
    
    [ Upstream commit 0fe1e96fef0a5c53b4c0d1500d356f3906000f81 ]
    
    Other Linux architectures use DT property 'linux,pci-domain' for
    specifying fixed PCI domain of PCI controller specified in Device-Tree.
    
    And lot of Freescale powerpc boards have defined numbered pci alias in
    Device-Tree for every PCIe controller which number specify preferred PCI
    domain.
    
    So prefer usage of DT property 'linux,pci-domain' (via function
    of_get_pci_domain_nr()) and DT pci alias (via function
    of_alias_get_id()) on powerpc architecture for assigning PCI domain to
    PCI controller.
    
    Fixes: 63a72284b159 ("powerpc/pci: Assign fixed PHB number based on device-tree properties")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220706102148.5060-2-pali@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ac58a83d8f10baabbb38e4bec3140755ba305d4
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Mon Jul 11 16:19:29 2022 +0200

    powerpc/32: Do not allow selection of e5500 or e6500 CPUs on PPC32
    
    [ Upstream commit 9be013b2a9ecb29b5168e4b9db0e48ed53acf37c ]
    
    Commit 0e00a8c9fd92 ("powerpc: Allow CPU selection also on PPC32")
    enlarged the CPU selection logic to PPC32 by removing depend to
    PPC64, and failed to restrict that depend to E5500_CPU and E6500_CPU.
    Fortunately that got unnoticed because -mcpu=8540 will override the
    -mcpu=e500mc64 or -mpcu=e6500 as they are ealier, but that's
    fragile and may no be right in the future.
    
    Add back the depend PPC64 on E5500_CPU and E6500_CPU.
    
    Fixes: 0e00a8c9fd92 ("powerpc: Allow CPU selection also on PPC32")
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/8abab4888da69ff78b73a56f64d9678a7bf684e9.1657549153.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d2b6adb22c89a1ff9e34a348469cd45c341a174
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Jul 27 12:08:13 2022 +0300

    ASoC: mchp-spdifrx: disable end of block interrupt on failures
    
    [ Upstream commit 768ac4f12ca0fda935f58eb8c5120e9d795bc6e3 ]
    
    Disable end of block interrupt in case of wait for completion timeout
    or errors to undo previously enable operation (done in
    mchp_spdifrx_isr_blockend_en()). Otherwise we can end up with an
    unbalanced reference counter for this interrupt.
    
    Fixes: ef265c55c1ac ("ASoC: mchp-spdifrx: add driver for SPDIF RX")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20220727090814.2446111-2-claudiu.beznea@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca326aff6bf3a2944ac840c1eeb01a42918a0bed
Author: Rustam Subkhankulov <subkhankulov@ispras.ru>
Date:   Mon Jul 18 15:43:43 2022 +0300

    video: fbdev: sis: fix typos in SiS_GetModeID()
    
    [ Upstream commit 3eb8fccc244bfb41a7961969e4db280d44911226 ]
    
    The second operand of a '&&' operator has no impact on expression
    result for cases 400 and 512 in SiS_GetModeID().
    
    Judging by the logic and the names of the variables, in both cases a
    typo was made.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Signed-off-by: Rustam Subkhankulov <subkhankulov@ispras.ru>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da276dc288bf838ea0fd778b5441ec0f601c69f7
Author: Liang He <windhl@126.com>
Date:   Tue Jul 19 16:25:46 2022 +0800

    video: fbdev: amba-clcd: Fix refcount leak bugs
    
    [ Upstream commit 26c2b7d9fac42eb8317f3ceefa4c1a9a9170ca69 ]
    
    In clcdfb_of_init_display(), we should call of_node_put() for the
    references returned by of_graph_get_next_endpoint() and
    of_graph_get_remote_port_parent() which have increased the refcount.
    
    Besides, we should call of_node_put() both in fail path or when
    the references are not used anymore.
    
    Fixes: d10715be03bd ("video: ARM CLCD: Add DT support")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 345208581c4a9a0ce721386d12e8adc997483b90
Author: William Dean <williamsukatube@gmail.com>
Date:   Fri Jul 22 11:09:38 2022 +0800

    watchdog: armada_37xx_wdt: check the return value of devm_ioremap() in armada_37xx_wdt_probe()
    
    [ Upstream commit 2d27e52841092e5831dd41f313028c668d816eb0 ]
    
    The function devm_ioremap() in armada_37xx_wdt_probe() can fail, so
    its return value should be checked.
    
    Fixes: 54e3d9b518c8a ("watchdog: Add support for Armada 37xx CPU watchdog")
    Reported-by: Hacash Robot <hacashRobot@santino.com>
    Signed-off-by: William Dean <williamsukatube@gmail.com>
    Reviewed-by: Marek Beh=C3=BAn <kabel@kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20220722030938.2925156-1-williamsukatube@163.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3e6460619d4c8b1cb94683bf1e8617eaae75ffc
Author: Liang He <windhl@126.com>
Date:   Thu Jul 21 22:43:08 2022 +0800

    ASoC: audio-graph-card: Add of_node_put() in fail path
    
    [ Upstream commit 65fb8e2ef3531a6e950060fca6e551c923fb0f0e ]
    
    In asoc_simple_parse_dai(), we should call of_node_put() for the
    reference returned by of_graph_get_port_parent() in fail path.
    
    Fixes: ae30a694da4c ("ASoC: simple-card-utils: add asoc_simple_card_parse_dai()")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220721144308.1301587-1-windhl@126.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92644d505b4e45cec28a04b0981d98f3ef28a0de
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Mon Jul 18 16:50:12 2022 +0800

    fuse: Remove the control interface for virtio-fs
    
    [ Upstream commit c64797809a64c73497082aa05e401a062ec1af34 ]
    
    The commit 15c8e72e88e0 ("fuse: allow skipping control interface and forced
    unmount") tries to remove the control interface for virtio-fs since it does
    not support aborting requests which are being processed. But it doesn't
    work now.
    
    This patch fixes it by skipping creating the control interface if
    fuse_conn->no_control is set.
    
    Fixes: 15c8e72e88e0 ("fuse: allow skipping control interface and forced unmount")
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60e494b4d5784e83314ac00f72ce8e1e4c9f29f7
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Jul 21 11:02:22 2022 +0200

    ASoC: qcom: q6dsp: Fix an off-by-one in q6adm_alloc_copp()
    
    [ Upstream commit 673f58f62ca6fc98979d1cf3fe89c3ff33f29b2e ]
    
    find_first_zero_bit() returns MAX_COPPS_PER_PORT at max here.
    So 'idx' should be tested with ">=" or the test can't match.
    
    Fixes: 7b20b2be51e1 ("ASoC: qdsp6: q6adm: Add q6adm driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/0fca3271649736053eb9649d87e1ca01b056be40.1658394124.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5682b4f84aabdb520b678c1f06ad985f2d052d0a
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Thu Jul 21 18:29:52 2022 +0800

    ASoC: fsl_easrc: use snd_pcm_format_t type for sample_format
    
    [ Upstream commit de27216cf2d645c2fd14e513707bdcd54e5b1de4 ]
    
    Fix sparse warning:
    sound/soc/fsl/fsl_easrc.c:562:33: sparse: warning: restricted snd_pcm_format_t degrades to integer
    sound/soc/fsl/fsl_easrc.c:563:34: sparse: warning: restricted snd_pcm_format_t degrades to integer
    sound/soc/fsl/fsl_easrc.c:565:38: sparse: warning: restricted snd_pcm_format_t degrades to integer
    sound/soc/fsl/fsl_easrc.c:566:39: sparse: warning: restricted snd_pcm_format_t degrades to integer
    sound/soc/fsl/fsl_easrc.c:608:33: sparse: warning: restricted snd_pcm_format_t degrades to integer
    sound/soc/fsl/fsl_easrc.c:609:34: sparse: warning: restricted snd_pcm_format_t degrades to integer
    sound/soc/fsl/fsl_easrc.c:615:40: sparse: warning: restricted snd_pcm_format_t degrades to integer
    sound/soc/fsl/fsl_easrc.c:616:41: sparse: warning: restricted snd_pcm_format_t degrades to integer
    
    sound/soc/fsl/fsl_easrc.c:1465:51: sparse: warning: incorrect type in assignment (different base types)
    sound/soc/fsl/fsl_easrc.c:1465:51: sparse:    expected unsigned int sample_format
    sound/soc/fsl/fsl_easrc.c:1465:51: sparse:    got restricted snd_pcm_format_t [usertype] format
    sound/soc/fsl/fsl_easrc.c:1467:52: sparse: warning: incorrect type in assignment (different base types)
    sound/soc/fsl/fsl_easrc.c:1467:52: sparse:    expected unsigned int sample_format
    sound/soc/fsl/fsl_easrc.c:1467:52: sparse:    got restricted snd_pcm_format_t [usertype] asrc_format
    sound/soc/fsl/fsl_easrc.c:1470:52: sparse: warning: incorrect type in assignment (different base types)
    sound/soc/fsl/fsl_easrc.c:1470:52: sparse:    expected unsigned int sample_format
    sound/soc/fsl/fsl_easrc.c:1470:52: sparse:    got restricted snd_pcm_format_t [usertype] format
    sound/soc/fsl/fsl_easrc.c:1472:51: sparse: warning: incorrect type in assignment (different base types)
    sound/soc/fsl/fsl_easrc.c:1472:51: sparse:    expected unsigned int sample_format
    sound/soc/fsl/fsl_easrc.c:1472:51: sparse:    got restricted snd_pcm_format_t [usertype] asrc_format
    sound/soc/fsl/fsl_easrc.c:1484:41: sparse: warning: incorrect type in argument 2 (different base types)
    sound/soc/fsl/fsl_easrc.c:1484:41: sparse:    expected restricted snd_pcm_format_t [usertype] *in_raw_format
    sound/soc/fsl/fsl_easrc.c:1484:41: sparse:    got unsigned int *
    sound/soc/fsl/fsl_easrc.c:1485:41: sparse: warning: incorrect type in argument 3 (different base types)
    sound/soc/fsl/fsl_easrc.c:1485:41: sparse:    expected restricted snd_pcm_format_t [usertype] *out_raw_format
    sound/soc/fsl/fsl_easrc.c:1485:41: sparse:    got unsigned int *
    sound/soc/fsl/fsl_easrc.c:1937:60: sparse: warning: incorrect type in argument 3 (different base types)
    sound/soc/fsl/fsl_easrc.c:1937:60: sparse:    expected unsigned int [usertype] *out_value
    sound/soc/fsl/fsl_easrc.c:1937:60: sparse:    got restricted snd_pcm_format_t *
    sound/soc/fsl/fsl_easrc.c:1943:49: sparse: warning: restricted snd_pcm_format_t degrades to integer
    
    Fixes: 955ac624058f ("ASoC: fsl_easrc: Add EASRC ASoC CPU DAI drivers")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1658399393-28777-5-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c2ad32ed91665ca09ddb25d8bda8bbf9963b6f0
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Tue Jul 19 07:16:33 2022 +0200

    s390/zcore: fix race when reading from hardware system area
    
    [ Upstream commit 9ffed254d938c9e99eb7761c7f739294c84e0367 ]
    
    Memory buffer used for reading out data from hardware system
    area is not protected against concurrent access.
    
    Reported-by: Matthew Wilcox <willy@infradead.org>
    Fixes: 411ed3225733 ("[S390] zfcpdump support.")
    Acked-by: Heiko Carstens <hca@linux.ibm.com>
    Tested-by: Alexander Egorenkov <egorenar@linux.ibm.com>
    Link: https://lore.kernel.org/r/e68137f0f9a0d2558f37becc20af18e2939934f6.1658206891.git.agordeev@linux.ibm.com
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae921d176b6f4359ac7462406ea68293c8c1c84e
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Sat Jan 29 08:38:56 2022 +0100

    s390/dump: fix old lowcore virtual vs physical address confusion
    
    [ Upstream commit dc306186a130c6d9feb0aabc1c71b8ed1674a3bf ]
    
    Virtual addresses of vmcore_info and os_info members are
    wrongly passed to copy_oldmem_kernel(), while the function
    expects physical address of the source. Instead, __pa()
    macro should have been applied.
    
    Yet, use of __pa() macro could be somehow confusing, since
    copy_oldmem_kernel() may treat the source as an offset, not
    as a direct physical address (that depens from the oldmem
    availability and location).
    
    Fix the virtual vs physical address confusion and make the
    way the old lowcore is read consistent across all sources.
    
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b002a71d45bd323101a49f0cade978f1f65849c0
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jul 11 12:31:44 2022 +0300

    perf tools: Fix dso_id inode generation comparison
    
    [ Upstream commit 68566a7cf56bf3148797c218ed45a9de078ef47c ]
    
    Synthesized MMAP events have zero ino_generation, so do not compare
    them to DSOs with a real ino_generation otherwise we end up with a DSO
    without a build id.
    
    Fixes: 0e3149f86b99ddab ("perf dso: Move dso_id from 'struct map' to 'struct dso'")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: kvm@vger.kernel.org
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20220711093218.10967-2-adrian.hunter@intel.com
    [ Added clarification to the comment from Ian + more detailed explanation from Adrian ]
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ada6b4a800768a1f28594fb030927259f0c1d4e
Author: Liang He <windhl@126.com>
Date:   Tue Jul 19 20:49:55 2022 +0800

    iommu/arm-smmu: qcom_iommu: Add of_node_put() when breaking out of loop
    
    [ Upstream commit a91eb6803c1c715738682fece095145cbd68fe0b ]
    
    In qcom_iommu_has_secure_context(), we should call of_node_put()
    for the reference 'child' when breaking out of for_each_child_of_node()
    which will automatically increase and decrease the refcount.
    
    Fixes: d051f28c8807 ("iommu/qcom: Initialize secure page table")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220719124955.1242171-1-windhl@126.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afdbadbf18c19779d7bc5df70d872924f9bbd76b
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jun 1 08:32:22 2022 +0400

    mfd: max77620: Fix refcount leak in max77620_initialise_fps
    
    [ Upstream commit 1520669c8255bd637c6b248b2be910e2688d38dd ]
    
    of_get_child_by_name() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 327156c59360 ("mfd: max77620: Add core driver for MAX77620/MAX20024")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20220601043222.64441-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52ae9c15997228622a5732783ce4090a2ea30f8c
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon May 30 21:24:28 2022 +0200

    mfd: t7l66xb: Drop platform disable callback
    
    [ Upstream commit 128ac294e1b437cb8a7f2ff8ede1cde9082bddbe ]
    
    None of the in-tree instantiations of struct t7l66xb_platform_data
    provides a disable callback. So better don't dereference this function
    pointer unconditionally. As there is no user, drop it completely instead
    of calling it conditional.
    
    This is a preparation for making platform remove callbacks return void.
    
    Fixes: 1f192015ca5b ("mfd: driver for the T7L66XB TMIO SoC")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20220530192430.2108217-3-u.kleine-koenig@pengutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a0e3350c29ee3e80b38bbf93dfad0754ae14706
Author: Sibi Sankar <quic_sibis@quicinc.com>
Date:   Tue Jul 5 17:38:19 2022 +0530

    remoteproc: sysmon: Wait for SSCTL service to come up
    
    [ Upstream commit 47c04e00eff86a81cd357c3feed04c86089bcb85 ]
    
    The SSCTL service comes up after a finite time when the remote Q6 comes
    out of reset. Any graceful shutdowns requested during this period will
    be a NOP and abrupt tearing down of the glink channel might lead to pending
    transactions on the remote Q6 side and will ultimately lead to a fatal
    error. Fix this by waiting for the SSCTL service when a graceful shutdown
    is requested.
    
    Fixes: 1fb82ee806d1 ("remoteproc: qcom: Introduce sysmon")
    Reviewed-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Sibi Sankar <quic_sibis@quicinc.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/1657022900-2049-7-git-send-email-quic_sibis@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3487aa558a664cb062a5b4cda0e9a31eb0451820
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed Jun 22 14:46:31 2022 +0900

    lib/smp_processor_id: fix imbalanced instrumentation_end() call
    
    [ Upstream commit bd27acaac24e4b252ee28dddcabaee80456d0faf ]
    
    Currently instrumentation_end() won't be called if printk_ratelimit()
    returned false.
    
    Link: https://lkml.kernel.org/r/a636d8e0-ad32-5888-acac-671f7f553bb3@I-love.SAKURA.ne.jp
    Fixes: 126f21f0e8d46e2c ("lib/smp_processor_id: Move it into noinstr section")
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexandre Chartre <alexandre.chartre@oracle.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 483ad8a16fde9ac866b79f045740d2cbe0076114
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jun 24 08:30:04 2022 +0300

    kfifo: fix kfifo_to_user() return type
    
    [ Upstream commit 045ed31e23aea840648c290dbde04797064960db ]
    
    The kfifo_to_user() macro is supposed to return zero for success or
    negative error codes.  Unfortunately, there is a signedness bug so it
    returns unsigned int.  This only affects callers which try to save the
    result in ssize_t and as far as I can see the only place which does that
    is line6_hwdep_read().
    
    TL;DR: s/_uint/_int/.
    
    Link: https://lkml.kernel.org/r/YrVL3OJVLlNhIMFs@kili
    Fixes: 144ecf310eb5 ("kfifo: fix kfifo_alloc() to return a signed int value")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Stefani Seibold <stefani@seibold.net>
    Cc: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9715809b9eeb85b3f9b083857a2f29a9e2351125
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed May 11 16:07:37 2022 +0400

    rpmsg: qcom_smd: Fix refcount leak in qcom_smd_parse_edge
    
    [ Upstream commit 65382585f067d4256ba087934f30f85c9b6984de ]
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when done.
    
    Fixes: 53e2822e56c7 ("rpmsg: Introduce Qualcomm SMD backend")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220511120737.57374-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ce20194b4a68fda406011c3e6c674d076b46a5e
Author: Sam Protsenko <semen.protsenko@linaro.org>
Date:   Thu Jul 14 19:55:46 2022 +0300

    iommu/exynos: Handle failed IOMMU device registration properly
    
    [ Upstream commit fce398d2d02c0a9a2bedf7c7201b123e153e8963 ]
    
    If iommu_device_register() fails in exynos_sysmmu_probe(), the previous
    calls have to be cleaned up. In this case, the iommu_device_sysfs_add()
    should be cleaned up, by calling its remove counterpart call.
    
    Fixes: d2c302b6e8b1 ("iommu/exynos: Make use of iommu_device_register interface")
    Signed-off-by: Sam Protsenko <semen.protsenko@linaro.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Acked-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/r/20220714165550.8884-3-semen.protsenko@linaro.org
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fd063a6085abb0b4aa8682beed8158c3952d713
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Thu Jul 7 13:32:23 2022 +0200

    tty: n_gsm: fix missing corner cases in gsmld_poll()
    
    [ Upstream commit 7e5b4322cde067e1d0f1bf8f490e93f664a7c843 ]
    
    gsmld_poll() currently fails to handle the following corner cases correctly:
    - remote party closed the associated tty
    
    Add the missing checks and map those to EPOLLHUP.
    Reorder the checks to group them by their reaction.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220707113223.3685-4-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01c8094bed8e05a9e70e6df81c3f0db732d23308
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Thu Jul 7 13:32:21 2022 +0200

    tty: n_gsm: fix DM command
    
    [ Upstream commit 18a948c7d90995d127785e308fa7b701df4c499f ]
    
    n_gsm is based on the 3GPP 07.010 and its newer version is the 3GPP 27.010.
    See https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=1516
    The changes from 07.010 to 27.010 are non-functional. Therefore, I refer to
    the newer 27.010 here. Chapter 5.3.3 defines the DM response. There exists
    no DM command. However, the current implementation incorrectly sends DM as
    command in case of unexpected UIH frames in gsm_queue().
    Correct this behavior by always sending DM as response.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220707113223.3685-2-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6737d4f5f513003c762d0cc8238ab766179883d0
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Thu Jul 7 13:32:20 2022 +0200

    tty: n_gsm: fix wrong T1 retry count handling
    
    [ Upstream commit f30e10caa80aa1f35508bc17fc302dbbde9a833c ]
    
    n_gsm is based on the 3GPP 07.010 and its newer version is the 3GPP 27.010.
    See https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=1516
    The changes from 07.010 to 27.010 are non-functional. Therefore, I refer to
    the newer 27.010 here. Chapter 5.7.3 states that the valid range for the
    maximum number of retransmissions (N2) is from 0 to 255 (both including).
    gsm_dlci_t1() handles this number incorrectly by performing N2 - 1
    retransmission attempts. Setting N2 to zero results in more than 255
    retransmission attempts.
    Fix gsm_dlci_t1() to comply with 3GPP 27.010.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220707113223.3685-1-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b16d653bc7bbd3dbbdaeda4e032e01ed9d8b252c
Author: Eric Farman <farman@linux.ibm.com>
Date:   Thu Jul 7 15:57:29 2022 +0200

    vfio/ccw: Do not change FSM state in subchannel event
    
    [ Upstream commit cffcc109fd682075dee79bade3d60a07152a8fd1 ]
    
    The routine vfio_ccw_sch_event() is tasked with handling subchannel events,
    specifically machine checks, on behalf of vfio-ccw. It correctly calls
    cio_update_schib(), and if that fails (meaning the subchannel is gone)
    it makes an FSM event call to mark the subchannel Not Operational.
    
    If that worked, however, then it decides that if the FSM state was already
    Not Operational (implying the subchannel just came back), then it should
    simply change the FSM to partially- or fully-open.
    
    Remove this trickery, since a subchannel returning will require more
    probing than simply "oh all is well again" to ensure it works correctly.
    
    Fixes: bbe37e4cb8970 ("vfio: ccw: introduce a finite state machine")
    Signed-off-by: Eric Farman <farman@linux.ibm.com>
    Reviewed-by: Matthew Rosato <mjrosato@linux.ibm.com>
    Link: https://lore.kernel.org/r/20220707135737.720765-4-farman@linux.ibm.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db574d3bb6e5a26a55e174ff45ca84ddc7928eb4
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Mar 30 09:53:07 2021 -0600

    vfio/mdev: Make to_mdev_device() into a static inline
    
    [ Upstream commit 66873b5fa738ca02b5c075ca4a410b13d88e6e9a ]
    
    The macro wrongly uses 'dev' as both the macro argument and the member
    name, which means it fails compilation if any caller uses a word other
    than 'dev' as the single argument. Fix this defect by making it into
    proper static inline, which is more clear and typesafe anyhow.
    
    Fixes: 99e3123e3d72 ("vfio-mdev: Make mdev_device private and abstract interfaces")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <11-v3-225de1400dfc+4e074-vfio1_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2fbf4acd28069d4922c33e4b5b0d58fc38073f8
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Mar 30 09:53:05 2021 -0600

    vfio: Split creation of a vfio_device into init and register ops
    
    [ Upstream commit 0bfc6a4ea63c2adac71a824397ef48f28dbc5e47 ]
    
    This makes the struct vfio_device part of the public interface so it
    can be used with container_of and so forth, as is typical for a Linux
    subystem.
    
    This is the first step to bring some type-safety to the vfio interface by
    allowing the replacement of 'void *' and 'struct device *' inputs with a
    simple and clear 'struct vfio_device *'
    
    For now the self-allocating vfio_add_group_dev() interface is kept so each
    user can be updated as a separate patch.
    
    The expected usage pattern is
    
      driver core probe() function:
         my_device = kzalloc(sizeof(*mydevice));
         vfio_init_group_dev(&my_device->vdev, dev, ops, mydevice);
         /* other driver specific prep */
         vfio_register_group_dev(&my_device->vdev);
         dev_set_drvdata(dev, my_device);
    
      driver core remove() function:
         my_device = dev_get_drvdata(dev);
         vfio_unregister_group_dev(&my_device->vdev);
         /* other driver specific tear down */
         kfree(my_device);
    
    Allowing the driver to be able to use the drvdata and vfio_device to go
    to/from its own data.
    
    The pattern also makes it clear that vfio_register_group_dev() must be
    last in the sequence, as once it is called the core code can immediately
    start calling ops. The init/register gap is provided to allow for the
    driver to do setup before ops can be called and thus avoid races.
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Liu Yi L <yi.l.liu@intel.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <3-v3-225de1400dfc+4e074-vfio1_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f54fa910e6cb5b771a1c86716c85af730acae4ac
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Mar 30 09:53:05 2021 -0600

    vfio: Simplify the lifetime logic for vfio_device
    
    [ Upstream commit 5e42c999445bd0ae86e35affeb3e7c473d74a893 ]
    
    The vfio_device is using a 'sleep until all refs go to zero' pattern for
    its lifetime, but it is indirectly coded by repeatedly scanning the group
    list waiting for the device to be removed on its own.
    
    Switch this around to be a direct representation, use a refcount to count
    the number of places that are blocking destruction and sleep directly on a
    completion until that counter goes to zero. kfree the device after other
    accesses have been excluded in vfio_del_group_dev(). This is a fairly
    common Linux idiom.
    
    Due to this we can now remove kref_put_mutex(), which is very rarely used
    in the kernel. Here it is being used to prevent a zero ref device from
    being seen in the group list. Instead allow the zero ref device to
    continue to exist in the device_list and use refcount_inc_not_zero() to
    exclude it once refs go to zero.
    
    This patch is organized so the next patch will be able to alter the API to
    allow drivers to provide the kfree.
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <2-v3-225de1400dfc+4e074-vfio1_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0abdb80e812a639d85b3130132956761e09bca17
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Mar 30 09:53:05 2021 -0600

    vfio: Remove extra put/gets around vfio_device->group
    
    [ Upstream commit e572bfb2b6a83b05acd30c03010e661b1967960f ]
    
    The vfio_device->group value has a get obtained during
    vfio_add_group_dev() which gets moved from the stack to vfio_device->group
    in vfio_group_create_device().
    
    The reference remains until we reach the end of vfio_del_group_dev() when
    it is put back.
    
    Thus anything that already has a kref on the vfio_device is guaranteed a
    valid group pointer. Remove all the extra reference traffic.
    
    It is tricky to see, but the get at the start of vfio_del_group_dev() is
    actually pairing with the put hidden inside vfio_device_put() a few lines
    below.
    
    A later patch merges vfio_group_create_device() into vfio_add_group_dev()
    which makes the ownership and error flow on the create side easier to
    follow.
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <1-v3-225de1400dfc+4e074-vfio1_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb83b12320ea2c69afd738b4fedc65e54dcdedaa
Author: Sireesh Kodali <sireeshkodali1@gmail.com>
Date:   Thu May 26 19:47:39 2022 +0530

    remoteproc: qcom: wcnss: Fix handling of IRQs
    
    [ Upstream commit bed0adac1ded4cb486ba19a3a7e730fbd9a1c9c6 ]
    
    The wcnss_get_irq function is expected to return a value > 0 in the
    event that an IRQ is succssfully obtained, but it instead returns 0.
    This causes the stop and ready IRQs to never actually be used despite
    being defined in the device-tree. This patch fixes that.
    
    Fixes: aed361adca9f ("remoteproc: qcom: Introduce WCNSS peripheral image loader")
    Signed-off-by: Sireesh Kodali <sireeshkodali1@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220526141740.15834-2-sireeshkodali1@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f735069cdc16fe132b7ffebed0f05e4db9a57c2
Author: Liang He <windhl@126.com>
Date:   Sat Jul 2 10:01:09 2022 +0800

    ASoC: qcom: Fix missing of_node_put() in asoc_qcom_lpass_cpu_platform_probe()
    
    [ Upstream commit f507c0c67dac57d2bcd5dcae4b6139b0305d8957 ]
    
    We should call of_node_put() for the reference 'dsp_of_node' returned by
    of_parse_phandle() which will increase the refcount.
    
    Fixes: 9bae4880acee ("ASoC: qcom: move ipq806x specific bits out of lpass driver.")
    Co-authored-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220702020109.263980-1-windhl@126.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 273d412177216c7712fb08f2b914ef7f4d8a9ed7
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Fri Jul 1 08:16:52 2022 +0200

    tty: n_gsm: fix race condition in gsmld_write()
    
    [ Upstream commit 32dd59f96924f45e33bc79854f7a00679c0fa28e ]
    
    The function may be used by the user directly and also by the n_gsm
    internal functions. They can lead into a race condition which results in
    interleaved frames if both are writing at the same time. The receiving side
    is not able to decode those interleaved frames correctly.
    
    Add a lock around the low side tty write to avoid race conditions and frame
    interleaving between user originated writes and n_gsm writes.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220701061652.39604-9-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2466486cae0a7cc8093f35c063d886eb9433a71c
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Fri Jul 1 08:16:50 2022 +0200

    tty: n_gsm: fix packet re-transmission without open control channel
    
    [ Upstream commit 4fae831b3a71fc5a44cc5c7d0b8c1267ee7659f5 ]
    
    In the current implementation control packets are re-transmitted even if
    the control channel closed down during T2. This is wrong.
    Check whether the control channel is open before re-transmitting any
    packets. Note that control channel open/close is handled by T1 and not T2
    and remains unaffected by this.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220701061652.39604-7-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34c9fe392d269c67b0b635e0785c3469ff7cdcea
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Fri Jul 1 08:16:48 2022 +0200

    tty: n_gsm: fix non flow control frames during mux flow off
    
    [ Upstream commit bec0224816d19abe4fe503586d16d51890540615 ]
    
    n_gsm is based on the 3GPP 07.010 and its newer version is the 3GPP 27.010.
    See https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=1516
    The changes from 07.010 to 27.010 are non-functional. Therefore, I refer to
    the newer 27.010 here. Chapter 5.4.6.3.6 states that FCoff stops the
    transmission on all channels except the control channel. This is already
    implemented in gsm_data_kick(). However, chapter 5.4.8.1 explains that this
    shall result in the same behavior as software flow control on the ldisc in
    advanced option mode. That means only flow control frames shall be sent
    during flow off. The current implementation does not consider this case.
    
    Change gsm_data_kick() to send only flow control frames if constipated to
    abide the standard. gsm_read_ea_val() and gsm_is_flow_ctrl_msg() are
    introduced as helper functions for this.
    It is planned to use gsm_read_ea_val() in later code cleanups for other
    functions, too.
    
    Fixes: c01af4fec2c8 ("n_gsm : Flow control handling in Mux driver")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220701061652.39604-5-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 006e9d5a98776233c92858df8f9bf8c69a81e6eb
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Fri Jul 1 08:16:46 2022 +0200

    tty: n_gsm: fix wrong queuing behavior in gsm_dlci_data_output()
    
    [ Upstream commit 556fc8ac06513cced381588d6d58c184d95cc4fe ]
    
    1) The function drains the fifo for the given user tty/DLCI without
    considering 'TX_THRESH_HI' and different to gsm_dlci_data_output_framed(),
    which moves only one packet from the user side to the internal transmission
    queue. We can only handle one packet at a time here if we want to allow
    DLCI priority handling in gsm_dlci_data_sweep() to avoid link starvation.
    2) Furthermore, the additional header octet from convergence layer type 2
    is not counted against MTU. It is part of the UI/UIH frame message which
    needs to be limited to MTU. Hence, it is wrong not to consider this octet.
    3) Finally, the waiting user tty is not informed about freed space in its
    send queue.
    
    Take at most one packet worth of data out of the DLCI fifo to fix 1).
    Limit the max user data size per packet to MTU - 1 in case of convergence
    layer type 2 to leave space for the control signal octet which is added in
    the later part of the function. This fixes 2).
    Add tty_port_tty_wakeup() to wake up the user tty if new write space has
    been made available to fix 3).
    
    Fixes: 268e526b935e ("tty/n_gsm: avoid fifo overflow in gsm_dlci_data_output")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220701061652.39604-3-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c45b5d24fe06e3c43794309559635909b3e0bdf6
Author: Daniel Starke <daniel.starke@siemens.com>
Date:   Fri Jul 1 08:16:44 2022 +0200

    tty: n_gsm: fix user open not possible at responder until initiator open
    
    [ Upstream commit ac77f0077c3265197d378158c85a55eee6d21508 ]
    
    After setting up the control channel on both sides the responder side may
    want to open a virtual tty to listen on until the initiator starts an
    application on a user channel. The current implementation allows the
    open() but no other operation, like termios. These fail with EINVAL.
    The responder sided application has no means to detect an open by the
    initiator sided application this way. And the initiator sided applications
    usually expect the responder sided application to listen on the user
    channel upon open.
    Set the user channel into half-open state on responder side once a user
    application opens the virtual tty to allow IO operations on it.
    Furthermore, keep the user channel constipated until the initiator side
    opens it to give the responder sided application the chance to detect the
    new connection and to avoid data loss if the responder sided application
    starts sending before the user channel is open.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220701061652.39604-1-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e38020f17009c53b0f28347ec06102929b8962c
Author: Zhenguo Zhao <Zhenguo.Zhao1@unisoc.com>
Date:   Fri Aug 20 20:17:50 2021 +0800

    tty: n_gsm: Delete gsmtty open SABM frame when config requester
    
    [ Upstream commit cbff2b32516881bef30bbebf413d1b49495bab1d ]
    
    When n_gsm config "initiator=0",as requester ,it doesn't need to
    send SABM frame data during gsmtty open.
    
    Example,when gsmtty open,it will send SABM frame.for initiator,it
    maybe not want to receive the frame.
    
    [   88.410426] c1 gsmld_output: 00000000: f9 07 3f 01 de f9
    [   88.420839] c1 --> 1) R: SABM(F)
    
    Signed-off-by: Zhenguo Zhao <Zhenguo.Zhao1@unisoc.com>
    Link: https://lore.kernel.org/r/1629461872-26965-6-git-send-email-zhenguo6858@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d94a552183c0fde0c65ebdf5ed74bd9fb1dc55c4
Author: Tom Rix <trix@redhat.com>
Date:   Wed Jun 29 14:53:45 2022 -0400

    ASoC: samsung: change gpiod_speaker_power and rx1950_audio from global to static variables
    
    [ Upstream commit d2294461b90e0c5b3bbfaaf2c8baff4fd3e2bb13 ]
    
    sparse reports
    sound/soc/samsung/rx1950_uda1380.c:131:18: warning: symbol 'gpiod_speaker_power' was not declared. Should it be static?
    sound/soc/samsung/rx1950_uda1380.c:231:24: warning: symbol 'rx1950_audio' was not declared. Should it be static?
    
    Both gpiod_speaker_power and rx1950_audio are only used in rx1950_uda1380.c,
    so their storage class specifiers should be static.
    
    Fixes: 83d74e354200 ("ASoC: samsung: rx1950: turn into platform driver")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220629185345.910406-1-trix@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 875b2bf469d094754ac2ba9af91dcd529eb12bf6
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Sun May 22 19:52:56 2022 +0530

    powerpc/perf: Optimize clearing the pending PMI and remove WARN_ON for PMI check in power_pmu_disable
    
    [ Upstream commit 890005a7d98f7452cfe86dcfb2aeeb7df01132ce ]
    
    commit 2c9ac51b850d ("powerpc/perf: Fix PMU callbacks to clear
    pending PMI before resetting an overflown PMC") added a new
    function "pmi_irq_pending" in hw_irq.h. This function is to check
    if there is a PMI marked as pending in Paca (PACA_IRQ_PMI).This is
    used in power_pmu_disable in a WARN_ON. The intention here is to
    provide a warning if there is PMI pending, but no counter is found
    overflown.
    
    During some of the perf runs, below warning is hit:
    
    WARNING: CPU: 36 PID: 0 at arch/powerpc/perf/core-book3s.c:1332 power_pmu_disable+0x25c/0x2c0
     Modules linked in:
     -----
    
     NIP [c000000000141c3c] power_pmu_disable+0x25c/0x2c0
     LR [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0
     Call Trace:
     [c000000baffcfb90] [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0 (unreliable)
     [c000000baffcfc10] [c0000000003e2f8c] perf_pmu_disable+0x4c/0x60
     [c000000baffcfc30] [c0000000003e3344] group_sched_out.part.124+0x44/0x100
     [c000000baffcfc80] [c0000000003e353c] __perf_event_disable+0x13c/0x240
     [c000000baffcfcd0] [c0000000003dd334] event_function+0xc4/0x140
     [c000000baffcfd20] [c0000000003d855c] remote_function+0x7c/0xa0
     [c000000baffcfd50] [c00000000026c394] flush_smp_call_function_queue+0xd4/0x300
     [c000000baffcfde0] [c000000000065b24] smp_ipi_demux_relaxed+0xa4/0x100
     [c000000baffcfe20] [c0000000000cb2b0] xive_muxed_ipi_action+0x20/0x40
     [c000000baffcfe40] [c000000000207c3c] __handle_irq_event_percpu+0x8c/0x250
     [c000000baffcfee0] [c000000000207e2c] handle_irq_event_percpu+0x2c/0xa0
     [c000000baffcff10] [c000000000210a04] handle_percpu_irq+0x84/0xc0
     [c000000baffcff40] [c000000000205f14] generic_handle_irq+0x54/0x80
     [c000000baffcff60] [c000000000015740] __do_irq+0x90/0x1d0
     [c000000baffcff90] [c000000000016990] __do_IRQ+0xc0/0x140
     [c0000009732f3940] [c000000bafceaca8] 0xc000000bafceaca8
     [c0000009732f39d0] [c000000000016b78] do_IRQ+0x168/0x1c0
     [c0000009732f3a00] [c0000000000090c8] hardware_interrupt_common_virt+0x218/0x220
    
    This means that there is no PMC overflown among the active events
    in the PMU, but there is a PMU pending in Paca. The function
    "any_pmc_overflown" checks the PMCs on active events in
    cpuhw->n_events. Code snippet:
    
    <<>>
    if (any_pmc_overflown(cpuhw))
            clear_pmi_irq_pending();
     else
            WARN_ON(pmi_irq_pending());
    <<>>
    
    Here the PMC overflown is not from active event. Example: When we do
    perf record, default cycles and instructions will be running on PMC6
    and PMC5 respectively. It could happen that overflowed event is currently
    not active and pending PMI is for the inactive event. Debug logs from
    trace_printk:
    
    <<>>
    any_pmc_overflown: idx is 5: pmc value is 0xd9a
    power_pmu_disable: PMC1: 0x0, PMC2: 0x0, PMC3: 0x0, PMC4: 0x0, PMC5: 0xd9a, PMC6: 0x80002011
    <<>>
    
    Here active PMC (from idx) is PMC5 , but overflown PMC is PMC6(0x80002011).
    When we handle PMI interrupt for such cases, if the PMC overflown is
    from inactive event, it will be ignored. Reference commit:
    commit bc09c219b2e6 ("powerpc/perf: Fix finding overflowed PMC in interrupt")
    
    Patch addresses two changes:
    1) Fix 1 : Removal of warning ( WARN_ON(pmi_irq_pending()); )
       We were printing warning if no PMC is found overflown among active PMU
       events, but PMI pending in PACA. But this could happen in cases where
       PMC overflown is not in active PMC. An inactive event could have caused
       the overflow. Hence the warning is not needed. To know pending PMI is
       from an inactive event, we need to loop through all PMC's which will
       cause more SPR reads via mfspr and increase in context switch. Also in
       existing function: perf_event_interrupt, already we ignore PMI's
       overflown when it is from an inactive PMC.
    
    2) Fix 2: optimization in clearing pending PMI.
       Currently we check for any active PMC overflown before clearing PMI
       pending in Paca. This is causing additional SPR read also. From point 1,
       we know that if PMI pending in Paca from inactive cases, that is going
       to be ignored during replay. Hence if there is pending PMI in Paca, just
       clear it irrespective of PMC overflown or not.
    
    In summary, remove the any_pmc_overflown check entirely in
    power_pmu_disable. ie If there is a pending PMI in Paca, clear it, since
    we are in pmu_disable. There could be cases where PMI is pending because
    of inactive PMC ( which later when replayed also will get ignored ), so
    WARN_ON could give false warning. Hence removing it.
    
    Fixes: 2c9ac51b850d ("powerpc/perf: Fix PMU callbacks to clear pending PMI before resetting an overflown PMC")
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220522142256.24699-1-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba889da9a0e141ee2d6ec71029a6c8778001c1c7
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Mon Jun 27 16:19:00 2022 +0200

    ASoC: samsung: h1940_uda1380: include proepr GPIO consumer header
    
    [ Upstream commit bd10b0dafdcf0ec1677cad70101e1f97b9e28f2e ]
    
    h1940_uda1380 uses gpiod*/GPIOD* so it should include GPIO consumer
    header.
    
    Fixes: 9666e27f90b9 ("ASoC: samsung: h1940: turn into platform driver")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220627141900.470469-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4046f3ef3bb678c05bcce12da717770a9ddfbf3c
Author: Chen Zhongjin <chenzhongjin@huawei.com>
Date:   Tue May 31 09:28:54 2022 +0800

    profiling: fix shift too large makes kernel panic
    
    [ Upstream commit 0fe6ee8f123a4dfb529a5aff07536bb481f34043 ]
    
    2d186afd04d6 ("profiling: fix shift-out-of-bounds bugs") limits shift
    value by [0, BITS_PER_LONG -1], which means [0, 63].
    
    However, syzbot found that the max shift value should be the bit number of
    (_etext - _stext).  If shift is outside of this, the "buffer_bytes" will
    be zero and will cause kzalloc(0).  Then the kernel panics due to
    dereferencing the returned pointer 16.
    
    This can be easily reproduced by passing a large number like 60 to enable
    profiling and then run readprofile.
    
    LOGS:
     BUG: kernel NULL pointer dereference, address: 0000000000000010
     #PF: supervisor write access in kernel mode
     #PF: error_code(0x0002) - not-present page
     PGD 6148067 P4D 6148067 PUD 6142067 PMD 0
     PREEMPT SMP
     CPU: 4 PID: 184 Comm: readprofile Not tainted 5.18.0+ #162
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014
     RIP: 0010:read_profile+0x104/0x220
     RSP: 0018:ffffc900006fbe80 EFLAGS: 00000202
     RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
     RDX: ffff888006150000 RSI: 0000000000000001 RDI: ffffffff82aba4a0
     RBP: 000000000188bb60 R08: 0000000000000010 R09: ffff888006151000
     R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff82aba4a0
     R13: 0000000000000000 R14: ffffc900006fbf08 R15: 0000000000020c30
     FS:  000000000188a8c0(0000) GS:ffff88803ed00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000010 CR3: 0000000006144000 CR4: 00000000000006e0
     Call Trace:
      <TASK>
      proc_reg_read+0x56/0x70
      vfs_read+0x9a/0x1b0
      ksys_read+0xa1/0xe0
      ? fpregs_assert_state_consistent+0x1e/0x40
      do_syscall_64+0x3a/0x80
      entry_SYSCALL_64_after_hwframe+0x46/0xb0
     RIP: 0033:0x4d4b4e
     RSP: 002b:00007ffebb668d58 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
     RAX: ffffffffffffffda RBX: 000000000188a8a0 RCX: 00000000004d4b4e
     RDX: 0000000000000400 RSI: 000000000188bb60 RDI: 0000000000000003
     RBP: 0000000000000003 R08: 000000000000006e R09: 0000000000000000
     R10: 0000000000000041 R11: 0000000000000246 R12: 000000000188bb60
     R13: 0000000000000400 R14: 0000000000000000 R15: 000000000188bb60
      </TASK>
     Modules linked in:
     CR2: 0000000000000010
    Killed
     ---[ end trace 0000000000000000 ]---
    
    Check prof_len in profile_init() to prevent it be zero.
    
    Link: https://lkml.kernel.org/r/20220531012854.229439-1-chenzhongjin@huawei.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Chen Zhongjin <chenzhongjin@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bf64b9cc640b5bb2b4c13176d59b28b8b987dae
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Thu Jun 2 16:32:33 2022 -0400

    selftests/livepatch: better synchronize test_klp_callbacks_busy
    
    [ Upstream commit 55eb9a6c8bf3e2099863118ef53e02d9f44f85a8 ]
    
    The test_klp_callbacks_busy module conditionally blocks a future
    livepatch transition by busy waiting inside its workqueue function,
    busymod_work_func().  After scheduling this work, a test livepatch is
    loaded, introducing the transition under test.
    
    Both events are marked in the kernel log for later verification, but
    there is no synchronization to ensure that busymod_work_func() logs its
    function entry message before subsequent selftest commands log their own
    messages.  This can lead to a rare test failure due to unexpected
    ordering like:
    
    #  --- expected
    #  +++ result
    #  @@ -1,7 +1,7 @@
    #   % modprobe test_klp_callbacks_busy block_transition=Y
    #   test_klp_callbacks_busy: test_klp_callbacks_busy_init
    #  -test_klp_callbacks_busy: busymod_work_func enter
    #   % modprobe test_klp_callbacks_demo
    #  +test_klp_callbacks_busy: busymod_work_func enter
    #   livepatch: enabling patch 'test_klp_callbacks_demo'
    #   livepatch: 'test_klp_callbacks_demo': initializing patching transition
    #   test_klp_callbacks_demo: pre_patch_callback: vmlinux
    
    Force the module init function to wait until busymod_work_func() has
    started (and logged its message), before exiting to the next selftest
    steps.
    
    Fixes: 547840bd5ae5 ("selftests/livepatch: simplify test-klp-callbacks busy target tests")
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20220602203233.979681-1-joe.lawrence@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75358732af9b26acfe3e609943290bcba13330fc
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 12:33:34 2022 +0400

    remoteproc: k3-r5: Fix refcount leak in k3_r5_cluster_of_init
    
    [ Upstream commit fa220c05d282e7479abe08b54e3bdffd06c25e97 ]
    
    Every iteration of for_each_available_child_of_node() decrements
    the reference count of the previous node.
    When breaking early from a for_each_available_child_of_node() loop,
    we need to explicitly call of_node_put() on the child node.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 6dedbd1d5443 ("remoteproc: k3-r5: Add a remoteproc driver for R5F subsystem")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Acked-by: Suman Anna <s-anna@ti.com>
    Link: https://lore.kernel.org/r/20220605083334.23942-1-linmq006@gmail.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2aa8737d49a9a0c149fcc5b6c0d7de435fc3ae52
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Wed May 25 11:12:01 2022 +0200

    rpmsg: mtk_rpmsg: Fix circular locking dependency
    
    [ Upstream commit 353d9214682e65c55cdffad8c82139a3321c5f13 ]
    
    During execution of the worker that's used to register rpmsg devices
    we are safely locking the channels mutex but, when creating a new
    endpoint for such devices, we are registering a IPI on the SCP, which
    then makes the SCP to trigger an interrupt, lock its own mutex and in
    turn register more subdevices.
    This creates a circular locking dependency situation, as the mtk_rpmsg
    channels_lock will then depend on the SCP IPI lock.
    
    [   15.447736] ======================================================
    [   15.460158] WARNING: possible circular locking dependency detected
    [   15.460161] 5.17.0-next-20220324+ #399 Not tainted
    [   15.460165] ------------------------------------------------------
    [   15.460166] kworker/0:3/155 is trying to acquire lock:
    [   15.460170] ffff5b4d0eaf1308 (&scp->ipi_desc[i].lock){+.+.}-{4:4}, at: scp_ipi_lock+0x34/0x50 [mtk_scp_ipi]
    [   15.504958]
    []                but task is already holding lock:
    [   15.504960] ffff5b4d0e8f1918 (&mtk_subdev->channels_lock){+.+.}-{4:4}, at: mtk_register_device_work_function+0x50/0x1cc [mtk_rpmsg]
    [   15.504978]
    []                which lock already depends on the new lock.
    
    [   15.504980]
    []                the existing dependency chain (in reverse order) is:
    [   15.504982]
    []               -> #1 (&mtk_subdev->channels_lock){+.+.}-{4:4}:
    [   15.504990]        lock_acquire+0x68/0x84
    [   15.504999]        __mutex_lock+0xa4/0x3e0
    [   15.505007]        mutex_lock_nested+0x40/0x70
    [   15.505012]        mtk_rpmsg_ns_cb+0xe4/0x134 [mtk_rpmsg]
    [   15.641684]        mtk_rpmsg_ipi_handler+0x38/0x64 [mtk_rpmsg]
    [   15.641693]        scp_ipi_handler+0xbc/0x180 [mtk_scp]
    [   15.663905]        mt8192_scp_irq_handler+0x44/0xa4 [mtk_scp]
    [   15.663915]        scp_irq_handler+0x6c/0xa0 [mtk_scp]
    [   15.685779]        irq_thread_fn+0x34/0xa0
    [   15.685785]        irq_thread+0x18c/0x240
    [   15.685789]        kthread+0x104/0x110
    [   15.709579]        ret_from_fork+0x10/0x20
    [   15.709586]
    []               -> #0 (&scp->ipi_desc[i].lock){+.+.}-{4:4}:
    [   15.731271]        __lock_acquire+0x11e4/0x1910
    [   15.740367]        lock_acquire.part.0+0xd8/0x220
    [   15.749813]        lock_acquire+0x68/0x84
    [   15.757861]        __mutex_lock+0xa4/0x3e0
    [   15.766084]        mutex_lock_nested+0x40/0x70
    [   15.775006]        scp_ipi_lock+0x34/0x50 [mtk_scp_ipi]
    [   15.785503]        scp_ipi_register+0x40/0xa4 [mtk_scp_ipi]
    [   15.796697]        scp_register_ipi+0x1c/0x30 [mtk_scp]
    [   15.807194]        mtk_rpmsg_create_ept+0xa0/0x108 [mtk_rpmsg]
    [   15.818912]        rpmsg_create_ept+0x44/0x60
    [   15.827660]        cros_ec_rpmsg_probe+0x15c/0x1f0
    [   15.837282]        rpmsg_dev_probe+0x128/0x1d0
    [   15.846203]        really_probe.part.0+0xa4/0x2a0
    [   15.855649]        __driver_probe_device+0xa0/0x150
    [   15.865443]        driver_probe_device+0x48/0x150
    [   15.877157]        __device_attach_driver+0xc0/0x12c
    [   15.889359]        bus_for_each_drv+0x80/0xe0
    [   15.900330]        __device_attach+0xe4/0x190
    [   15.911303]        device_initial_probe+0x1c/0x2c
    [   15.922969]        bus_probe_device+0xa8/0xb0
    [   15.933927]        device_add+0x3a8/0x8a0
    [   15.944193]        device_register+0x28/0x40
    [   15.954970]        rpmsg_register_device+0x5c/0xa0
    [   15.966782]        mtk_register_device_work_function+0x148/0x1cc [mtk_rpmsg]
    [   15.983146]        process_one_work+0x294/0x664
    [   15.994458]        worker_thread+0x7c/0x45c
    [   16.005069]        kthread+0x104/0x110
    [   16.014789]        ret_from_fork+0x10/0x20
    [   16.025201]
    []               other info that might help us debug this:
    
    [   16.047769]  Possible unsafe locking scenario:
    
    [   16.063942]        CPU0                    CPU1
    [   16.075166]        ----                    ----
    [   16.086376]   lock(&mtk_subdev->channels_lock);
    [   16.097592]                                lock(&scp->ipi_desc[i].lock);
    [   16.113188]                                lock(&mtk_subdev->channels_lock);
    [   16.129482]   lock(&scp->ipi_desc[i].lock);
    [   16.140020]
    []                *** DEADLOCK ***
    
    [   16.158282] 4 locks held by kworker/0:3/155:
    [   16.168978]  #0: ffff5b4d00008748 ((wq_completion)events){+.+.}-{0:0}, at: process_one_work+0x1fc/0x664
    [   16.190017]  #1: ffff80000953bdc8 ((work_completion)(&mtk_subdev->register_work)){+.+.}-{0:0}, at: process_one_work+0x1fc/0x664
    [   16.215269]  #2: ffff5b4d0e8f1918 (&mtk_subdev->channels_lock){+.+.}-{4:4}, at: mtk_register_device_work_function+0x50/0x1cc [mtk_rpmsg]
    [   16.242131]  #3: ffff5b4d05964190 (&dev->mutex){....}-{4:4}, at: __device_attach+0x44/0x190
    
    To solve this, simply unlock the channels_lock mutex before calling
    mtk_rpmsg_register_device() and relock it right after, as safety is
    still ensured by the locking mechanism that happens right after
    through SCP.
    
    Fixes: 7017996951fd ("rpmsg: add rpmsg support for mt8183 SCP.")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20220525091201.14210-1-angelogioacchino.delregno@collabora.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d5fc40382c5b5590647807a30642dbe1ddb3d2c
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Jun 9 12:19:01 2022 +0100

    ASoC: codecs: wcd9335: move gains from SX_TLV to S8_TLV
    
    [ Upstream commit 2fbe0953732e06b471cdedbf6f615b84235580d8 ]
    
    move all the digital gains form using SX_TLV to S8_TLV, these gains are
    actually 8 bit gains with 7th signed bit and ranges from -84dB to +40dB
    
    rest of the Qualcomm wcd codecs uses these properly.
    
    Fixes: 8c4f021d806a ("ASoC: wcd9335: add basic controls")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20220609111901.318047-3-srinivas.kandagatla@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4181b214184b981e44b8df54a5d537117736e9e2
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Jun 9 12:19:00 2022 +0100

    ASoC: codecs: msm8916-wcd-digital: move gains from SX_TLV to S8_TLV
    
    [ Upstream commit 5babb012c847beb6c8c7108fd78f650b7a2c6054 ]
    
    move all the digital gains form using SX_TLV to S8_TLV, these gains are
    actually 8 bit gains with 7th signed bit and ranges from -84dB to +40dB
    
    rest of the Qualcomm wcd codecs uses these properly.
    
    Fixes: ef8a4757a6db ("ASoC: msm8916-wcd-digital: Add sidetone support")
    Fixes: 150db8c5afa1 ("ASoC: codecs: Add msm8916-wcd digital codec")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20220609111901.318047-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b171ac88cb7d9dbbf72d9595030cfc45e907023
Author: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Date:   Wed Jun 8 12:54:31 2022 +0300

    serial: 8250_dw: Store LSR into lsr_saved_flags in dw8250_tx_wait_empty()
    
    [ Upstream commit af14f3007e2dca0d112f10f6717ba43093f74e81 ]
    
    Make sure LSR flags are preserved in dw8250_tx_wait_empty(). This
    function is called from a low-level out function and therefore cannot
    call serial_lsr_in() as it would lead to infinite recursion.
    
    It is borderline if the flags need to be saved here at all since this
    code relates to writing LCR register which usually implies no important
    characters should be arriving.
    
    Fixes: 914eaf935ec7 ("serial: 8250_dw: Allow TX FIFO to drain before writing to UART_LCR")
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
    Link: https://lore.kernel.org/r/20220608095431.18376-7-ilpo.jarvinen@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d98dd16d3dfd0eece2034e44b40b48b22968cb5e
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Mon Apr 18 16:27:27 2022 +0100

    serial: 8250: Export ICR access helpers for internal use
    
    [ Upstream commit cb5a40e3143bc64437858b337273fd63cc42e9c2 ]
    
    Make ICR access helpers available outside 8250_port.c, however retain
    them as ordinary static functions so as not to regress code generation.
    
    This is because `serial_icr_write' is currently automatically inlined by
    GCC, however `serial_icr_read' is not.  Making them both static inline
    would grow code produced, e.g.:
    
    $ i386-linux-gnu-size --format=gnu 8250_port-{old,new}.o
          text       data        bss      total filename
         15065       3378          0      18443 8250_port-old.o
         15289       3378          0      18667 8250_port-new.o
    
    and:
    
    $ riscv64-linux-gnu-size --format=gnu 8250_port-{old,new}.o
          text       data        bss      total filename
         16980       5306          0      22286 8250_port-old.o
         17124       5306          0      22430 8250_port-new.o
    
    while making them external would needlessly add a new module interface
    and lose the benefit from `serial_icr_write' getting inlined outside
    8250_port.o.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2204181517500.9383@angie.orcam.me.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 403d46971936f9f704b91cecffe66e44aa39e915
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jun 3 16:42:41 2022 +0400

    ASoC: mediatek: mt8173-rt5650: Fix refcount leak in mt8173_rt5650_dev_probe
    
    [ Upstream commit efe2178d1a32492f99e7f1f2568eea5c88a85729 ]
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Fix refcount leak in some error paths.
    
    Fixes: 0f83f9296d5c ("ASoC: mediatek: Add machine driver for ALC5650 codec")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220603124243.31358-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 132b2757c52f7e55eae6ab6240ecd354725b5571
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue May 31 17:47:12 2022 +0800

    ASoC: codecs: da7210: add check for i2c_add_driver
    
    [ Upstream commit 82fa8f581a954ddeec1602bed9f8b4a09d100e6e ]
    
    As i2c_add_driver could return error if fails, it should be
    better to check the return value.
    However, if the CONFIG_I2C and CONFIG_SPI_MASTER are both true,
    the return value of i2c_add_driver will be covered by
    spi_register_driver.
    Therefore, it is necessary to add check and return error if fails.
    
    Fixes: aa0e25caafb7 ("ASoC: da7210: Add support for spi regmap")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220531094712.2376759-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0381a9f3e595988e83bac4c4dd1e45ed2b3c744
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jun 3 12:34:15 2022 +0400

    ASoC: mt6797-mt6351: Fix refcount leak in mt6797_mt6351_dev_probe
    
    [ Upstream commit 7472eb8d7dd12b6b9b1a4f4527719cc9c7f5965f ]
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: f0ab0bf250da ("ASoC: add mt6797-mt6351 driver and config option")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220603083417.9011-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa1214ece37944e4dbbb5cfb1d02bf37e4d89b02
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jun 2 07:41:42 2022 +0400

    ASoC: mediatek: mt8173: Fix refcount leak in mt8173_rt5650_rt5676_dev_probe
    
    [ Upstream commit ae4f11c1ed2d67192fdf3d89db719ee439827c11 ]
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Fix missing of_node_put() in error paths.
    
    Fixes: 94319ba10eca ("ASoC: mediatek: Use platform_of_node for machine drivers")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220602034144.60159-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec0c272b18684e2fbef084b7ac6710f018a50265
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jun 3 17:06:39 2022 +0400

    ASoC: samsung: Fix error handling in aries_audio_probe
    
    [ Upstream commit 3e2649c5e8643bea0867bb1dd970fedadb0eb7f3 ]
    
    of_get_child_by_name() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    This function is missing of_node_put(cpu) in the error path.
    Fix this by goto out label. of_node_put() will check NULL pointer.
    
    Fixes: 7a3a7671fa6c ("ASoC: samsung: Add driver for Aries boards")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220603130640.37624-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bae95c5aee1f67da6608ceaebfb744d900e5ffbf
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jun 3 17:10:43 2022 +0400

    ASoC: cros_ec_codec: Fix refcount leak in cros_ec_codec_platform_probe
    
    [ Upstream commit 0a034d93ee929a9ea89f3fa5f1d8492435b9ee6e ]
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: b6bc07d4360d ("ASoC: cros_ec_codec: support WoV")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Link: https://lore.kernel.org/r/20220603131043.38907-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2a4e46f52584e43cd0d9866752b51f588cc1173
Author: Tang Bin <tangbin@cmss.chinamobile.com>
Date:   Tue May 24 20:31:51 2022 +0800

    opp: Fix error check in dev_pm_opp_attach_genpd()
    
    [ Upstream commit 4ea9496cbc959eb5c78f3e379199aca9ef4e386b ]
    
    dev_pm_domain_attach_by_name() may return NULL in some cases,
    so IS_ERR() doesn't meet the requirements. Thus fix it.
    
    Fixes: 6319aee10e53 ("opp: Attach genpds to devices from within OPP core")
    Signed-off-by: Tang Bin <tangbin@cmss.chinamobile.com>
    [ Viresh: Replace ENODATA with ENODEV ]
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b973703229a1bc1b1f5174609bc6be73b80d2ae
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Aug 3 09:24:22 2022 -0700

    usb: cdns3: Don't use priv_dev uninitialized in cdns3_gadget_ep_enable()
    
    [ Upstream commit 78acd4ca433425e6dd4032cfc2156c60e34931f2 ]
    
    Clang warns:
    
      drivers/usb/cdns3/cdns3-gadget.c:2290:11: error: variable 'priv_dev' is uninitialized when used here [-Werror,-Wuninitialized]
                      dev_dbg(priv_dev->dev, "usbss: invalid parameters\n");
                              ^~~~~~~~
      include/linux/dev_printk.h:155:18: note: expanded from macro 'dev_dbg'
              dynamic_dev_dbg(dev, dev_fmt(fmt), ##__VA_ARGS__)
                              ^~~
      include/linux/dynamic_debug.h:167:7: note: expanded from macro 'dynamic_dev_dbg'
                              dev, fmt, ##__VA_ARGS__)
                              ^~~
      include/linux/dynamic_debug.h:152:56: note: expanded from macro '_dynamic_func_call'
              __dynamic_func_call(__UNIQUE_ID(ddebug), fmt, func, ##__VA_ARGS__)
                                                                  ^~~~~~~~~~~
      include/linux/dynamic_debug.h:134:15: note: expanded from macro '__dynamic_func_call'
                      func(&id, ##__VA_ARGS__);               \
                                  ^~~~~~~~~~~
      drivers/usb/cdns3/cdns3-gadget.c:2278:31: note: initialize the variable 'priv_dev' to silence this warning
              struct cdns3_device *priv_dev;
                                          ^
                                          = NULL
      1 error generated.
    
    The priv_dev assignment was moved below the if statement to avoid
    potentially dereferencing ep before it was checked but priv_dev is used
    in the dev_dbg() call.
    
    To fix this, move the priv_dev and comp_desc assignments back to their
    original spot and hoist the ep check above those assignments with a call
    to pr_debug() instead of dev_dbg().
    
    Fixes: c3ffc9c4ca44 ("usb: cdns3: change place of 'priv_ep' assignment in cdns3_gadget_ep_dequeue(), cdns3_gadget_ep_enable()")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1680
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7161d0da975adc234161cd0641d0e484f5ce375
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Fri Jul 15 20:51:52 2022 +0800

    jbd2: fix assertion 'jh->b_frozen_data == NULL' failure when journal aborted
    
    [ Upstream commit 4a734f0869f970b8a9b65062ea40b09a5da9dba8 ]
    
    Following process will fail assertion 'jh->b_frozen_data == NULL' in
    jbd2_journal_dirty_metadata():
    
                       jbd2_journal_commit_transaction
    unlink(dir/a)
     jh->b_transaction = trans1
     jh->b_jlist = BJ_Metadata
                        journal->j_running_transaction = NULL
                        trans1->t_state = T_COMMIT
    unlink(dir/b)
     handle->h_trans = trans2
     do_get_write_access
      jh->b_modified = 0
      jh->b_frozen_data = frozen_buffer
      jh->b_next_transaction = trans2
     jbd2_journal_dirty_metadata
      is_handle_aborted
       is_journal_aborted // return false
    
               --> jbd2 abort <--
    
                         while (commit_transaction->t_buffers)
                          if (is_journal_aborted)
                           jbd2_journal_refile_buffer
                            __jbd2_journal_refile_buffer
                             WRITE_ONCE(jh->b_transaction,
                                                    jh->b_next_transaction)
                             WRITE_ONCE(jh->b_next_transaction, NULL)
                             __jbd2_journal_file_buffer(jh, BJ_Reserved)
            J_ASSERT_JH(jh, jh->b_frozen_data == NULL) // assertion failure !
    
    The reproducer (See detail in [Link]) reports:
     ------------[ cut here ]------------
     kernel BUG at fs/jbd2/transaction.c:1629!
     invalid opcode: 0000 [#1] PREEMPT SMP
     CPU: 2 PID: 584 Comm: unlink Tainted: G        W
     5.19.0-rc6-00115-g4a57a8400075-dirty #697
     RIP: 0010:jbd2_journal_dirty_metadata+0x3c5/0x470
     RSP: 0018:ffffc90000be7ce0 EFLAGS: 00010202
     Call Trace:
      <TASK>
      __ext4_handle_dirty_metadata+0xa0/0x290
      ext4_handle_dirty_dirblock+0x10c/0x1d0
      ext4_delete_entry+0x104/0x200
      __ext4_unlink+0x22b/0x360
      ext4_unlink+0x275/0x390
      vfs_unlink+0x20b/0x4c0
      do_unlinkat+0x42f/0x4c0
      __x64_sys_unlink+0x37/0x50
      do_syscall_64+0x35/0x80
    
    After journal aborting, __jbd2_journal_refile_buffer() is executed with
    holding @jh->b_state_lock, we can fix it by moving 'is_handle_aborted()'
    into the area protected by @jh->b_state_lock.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216251
    Fixes: 470decc613ab20 ("[PATCH] jbd2: initial copy of files from jbd")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Link: https://lore.kernel.org/r/20220715125152.4022726-1-chengzhihao1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6d7f224730e35b5245ae9e38ae8c40e621efa9e
Author: Li Lingfeng <lilingfeng3@huawei.com>
Date:   Fri Jun 17 14:25:15 2022 +0800

    ext4: recover csum seed of tmp_inode after migrating to extents
    
    [ Upstream commit 07ea7a617d6b278fb7acedb5cbe1a81ce2de7d0c ]
    
    When migrating to extents, the checksum seed of temporary inode
    need to be replaced by inode's, otherwise the inode checksums
    will be incorrect when swapping the inodes data.
    
    However, the temporary inode can not match it's checksum to
    itself since it has lost it's own checksum seed.
    
    mkfs.ext4 -F /dev/sdc
    mount /dev/sdc /mnt/sdc
    xfs_io -fc "pwrite 4k 4k" -c "fsync" /mnt/sdc/testfile
    chattr -e /mnt/sdc/testfile
    chattr +e /mnt/sdc/testfile
    umount /dev/sdc
    fsck -fn /dev/sdc
    
    ========
    ...
    Pass 1: Checking inodes, blocks, and sizes
    Inode 13 passes checks, but checksum does not match inode.  Fix? no
    ...
    ========
    
    The fix is simple, save the checksum seed of temporary inode, and
    recover it after migrating to extents.
    
    Fixes: e81c9302a6c3 ("ext4: set csum seed in tmp inode while migrating to extents")
    Signed-off-by: Li Lingfeng <lilingfeng3@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220617062515.2113438-1-lilingfeng3@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 914bf4aa2d5bfc4a83866410dcd661a0fe955cb2
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Sat Jun 11 21:04:26 2022 +0800

    jbd2: fix outstanding credits assert in jbd2_journal_commit_transaction()
    
    [ Upstream commit a89573ce4ad32f19f43ec669771726817e185be0 ]
    
    We catch an assert problem in jbd2_journal_commit_transaction() when
    doing fsstress and request falut injection tests. The problem is
    happened in a race condition between jbd2_journal_commit_transaction()
    and ext4_end_io_end(). Firstly, ext4_writepages() writeback dirty pages
    and start reserved handle, and then the journal was aborted due to some
    previous metadata IO error, jbd2_journal_abort() start to commit current
    running transaction, the committing procedure could be raced by
    ext4_end_io_end() and lead to subtract j_reserved_credits twice from
    commit_transaction->t_outstanding_credits, finally the
    t_outstanding_credits is mistakenly smaller than t_nr_buffers and
    trigger assert.
    
    kjournald2           kworker
    
    jbd2_journal_commit_transaction()
     write_unlock(&journal->j_state_lock);
     atomic_sub(j_reserved_credits, t_outstanding_credits); //sub once
    
                         jbd2_journal_start_reserved()
                          start_this_handle()  //detect aborted journal
                          jbd2_journal_free_reserved()  //get running transaction
                           read_lock(&journal->j_state_lock)
                            __jbd2_journal_unreserve_handle()
                           atomic_sub(j_reserved_credits, t_outstanding_credits);
                           //sub again
                           read_unlock(&journal->j_state_lock);
    
     journal->j_running_transaction = NULL;
     J_ASSERT(t_nr_buffers <= t_outstanding_credits) //bomb!!!
    
    Fix this issue by using journal->j_state_lock to protect the subtraction
    in jbd2_journal_commit_transaction().
    
    Fixes: 96f1e0974575 ("jbd2: avoid long hold times of j_state_lock while committing a transaction")
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220611130426.2013258-1-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 706960d328f5bdb1a9cde0b17a98ab84a59eed8e
Author: Bean Huo <beanhuo@micron.com>
Date:   Fri Jul 15 23:27:21 2022 +0200

    nvme: use command_id instead of req->tag in trace_nvme_complete_rq()
    
    [ Upstream commit 679c54f2de672b7d79d02f8c4ad483ff6dd8ce2e ]
    
    Use command_id instead of req->tag in trace_nvme_complete_rq(),
    because of commit e7006de6c238 ("nvme: code command_id with a genctr
    for use authentication after release"), cmd->common.command_id is set to
    ((genctl & 0xf)< 12 | req->tag), no longer req->tag, which makes cid in
    trace_nvme_complete_rq and trace_nvme_setup_cmd are not the same.
    
    Fixes: e7006de6c238 ("nvme: code command_id with a genctr for use authentication after release")
    Signed-off-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a4b46784a7b27b5ceb28bc816ea188d6d035dfa
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jul 15 11:12:14 2022 +0300

    null_blk: fix ida error handling in null_add_dev()
    
    [ Upstream commit ee452a8d984f94fa8e894f003a52e776e4572881 ]
    
    There needs to be some error checking if ida_simple_get() fails.
    Also call ida_free() if there are errors later.
    
    Fixes: 94bc02e30fb8 ("nullb: use ida to manage index")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/YtEhXsr6vJeoiYhd@kili
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ef491b26c720a87fcfbd78b7dc8eb83d9753fe6
Author: Zhu Yanjun <yanjun.zhu@linux.dev>
Date:   Sun Jul 31 02:36:21 2022 -0400

    RDMA/rxe: Fix error unwind in rxe_create_qp()
    
    [ Upstream commit fd5382c5805c4bcb50fd25b7246247d3f7114733 ]
    
    In the function rxe_create_qp(), rxe_qp_from_init() is called to
    initialize qp, internally things like the spin locks are not setup until
    rxe_qp_init_req().
    
    If an error occures before this point then the unwind will call
    rxe_cleanup() and eventually to rxe_qp_do_cleanup()/rxe_cleanup_task()
    which will oops when trying to access the uninitialized spinlock.
    
    Move the spinlock initializations earlier before any failures.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20220731063621.298405-1-yanjun.zhu@linux.dev
    Reported-by: syzbot+833061116fa28df97f3b@syzkaller.appspotmail.com
    Signed-off-by: Zhu Yanjun <yanjun.zhu@linux.dev>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53da1f0fa0e2e197df1a95729a15b27f7b2b911c
Author: Maor Gottlieb <maorg@nvidia.com>
Date:   Sun Jul 31 11:29:08 2022 +0300

    RDMA/mlx5: Add missing check for return value in get namespace flow
    
    [ Upstream commit c9776457bd5eaad4ce4ecb17af8d8f3cc6957c0b ]
    
    Add missing check for return value when calling to
    mlx5_ib_ft_type_to_namespace, even though it can't really fail in this
    specific call.
    
    Fixes: 52438be44112 ("RDMA/mlx5: Allow inserting a steering rule to the FDB")
    Link: https://lore.kernel.org/r/7b9ceda217d9368a51dc47a46b769bad4af9ac92.1659256069.git.leonro@nvidia.com
    Reviewed-by: Itay Aveksis <itayav@nvidia.com>
    Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0ba87f3e7b4bc5a4b8c3f132a9c63d594c4af21
Author: Andrei Vagin <avagin@google.com>
Date:   Fri Jul 22 16:02:40 2022 -0700

    selftests: kvm: set rax before vmcall
    
    [ Upstream commit 281106f938d3daaea6f8b6723a8217a2a1ef6936 ]
    
    kvm_hypercall has to place the hypercall number in rax.
    
    Trace events show that kvm_pv_test doesn't work properly:
         kvm_pv_test-53132: kvm_hypercall: nr 0x0 a0 0x0 a1 0x0 a2 0x0 a3 0x0
         kvm_pv_test-53132: kvm_hypercall: nr 0x0 a0 0x0 a1 0x0 a2 0x0 a3 0x0
         kvm_pv_test-53132: kvm_hypercall: nr 0x0 a0 0x0 a1 0x0 a2 0x0 a3 0x0
    
    With this change, it starts working as expected:
         kvm_pv_test-54285: kvm_hypercall: nr 0x5 a0 0x0 a1 0x0 a2 0x0 a3 0x0
         kvm_pv_test-54285: kvm_hypercall: nr 0xa a0 0x0 a1 0x0 a2 0x0 a3 0x0
         kvm_pv_test-54285: kvm_hypercall: nr 0xb a0 0x0 a1 0x0 a2 0x0 a3 0x0
    
    Signed-off-by: Andrei Vagin <avagin@google.com>
    Message-Id: <20220722230241.1944655-5-avagin@google.com>
    Fixes: ac4a4d6de22e ("selftests: kvm: test enforcement of paravirtual cpuid features")
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ffa6cecb53d46af8f869cc7a5a376341ebef79f
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Sat Jun 18 16:20:27 2022 +0800

    mm/mmap.c: fix missing call to vm_unacct_memory in mmap_region
    
    [ Upstream commit 7f82f922319ede486540e8746769865b9508d2c2 ]
    
    Since the beginning, charged is set to 0 to avoid calling vm_unacct_memory
    twice because vm_unacct_memory will be called by above unmap_region.  But
    since commit 4f74d2c8e827 ("vm: remove 'nr_accounted' calculations from
    the unmap_vmas() interfaces"), unmap_region doesn't call vm_unacct_memory
    anymore.  So charged shouldn't be set to 0 now otherwise the calling to
    paired vm_unacct_memory will be missed and leads to imbalanced account.
    
    Link: https://lkml.kernel.org/r/20220618082027.43391-1-linmiaohe@huawei.com
    Fixes: 4f74d2c8e827 ("vm: remove 'nr_accounted' calculations from the unmap_vmas() interfaces")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de95b52d9aabc979166aba81ccbe623aaf9c16a1
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jul 27 12:34:15 2022 -0700

    RDMA/srpt: Fix a use-after-free
    
    [ Upstream commit b5605148e6ce36bb21020d49010b617693933128 ]
    
    Change the LIO port members inside struct srpt_port from regular members
    into pointers. Allocate the LIO port data structures from inside
    srpt_make_tport() and free these from inside srpt_make_tport(). Keep
    struct srpt_device as long as either an RDMA port or a LIO target port is
    associated with it. This patch decouples the lifetime of struct srpt_port
    (controlled by the RDMA core) and struct srpt_port_id (controlled by LIO).
    This patch fixes the following KASAN complaint:
    
      BUG: KASAN: use-after-free in srpt_enable_tpg+0x31/0x70 [ib_srpt]
      Read of size 8 at addr ffff888141cc34b8 by task check/5093
    
      Call Trace:
       <TASK>
       show_stack+0x4e/0x53
       dump_stack_lvl+0x51/0x66
       print_address_description.constprop.0.cold+0xea/0x41e
       print_report.cold+0x90/0x205
       kasan_report+0xb9/0xf0
       __asan_load8+0x69/0x90
       srpt_enable_tpg+0x31/0x70 [ib_srpt]
       target_fabric_tpg_base_enable_store+0xe2/0x140 [target_core_mod]
       configfs_write_iter+0x18b/0x210
       new_sync_write+0x1f2/0x2f0
       vfs_write+0x3e3/0x540
       ksys_write+0xbb/0x140
       __x64_sys_write+0x42/0x50
       do_syscall_64+0x34/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
       </TASK>
    
    Link: https://lore.kernel.org/r/20220727193415.1583860-4-bvanassche@acm.org
    Reported-by: Li Zhijian <lizhijian@fujitsu.com>
    Tested-by: Li Zhijian <lizhijian@fujitsu.com>
    Fixes: a42d985bd5b2 ("ib_srpt: Initial SRP Target merge for v3.3-rc1")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d14a44cf2919920c61496ff252240fbfc5551faf
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jul 27 12:34:14 2022 -0700

    RDMA/srpt: Introduce a reference count in struct srpt_device
    
    [ Upstream commit aa7dfbb41b5a60ab90e244d6f586b8cb5c791c3e ]
    
    This will be used to keep struct srpt_device around as long as either the
    RDMA port exists or a LIO target port is associated with the struct
    srpt_device.
    
    Link: https://lore.kernel.org/r/20220727193415.1583860-3-bvanassche@acm.org
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 204a8486d77510144a7743c4f09ac8c2c66b809e
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jul 27 12:34:13 2022 -0700

    RDMA/srpt: Duplicate port name members
    
    [ Upstream commit b03b1ae2a3125d4475452e4f19f5d3a6e910ff6e ]
    
    Prepare for decoupling the lifetimes of struct srpt_port and struct
    srpt_port_id by duplicating the port name into struct srpt_port.
    
    Link: https://lore.kernel.org/r/20220727193415.1583860-2-bvanassche@acm.org
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ba56d9bd0d08a03cc6168298fcd04098202a87f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 20 21:23:38 2022 +0300

    platform/olpc: Fix uninitialized data in debugfs write
    
    [ Upstream commit 40ec787e1adf302c11668d4cc69838f4d584187d ]
    
    The call to:
    
            size = simple_write_to_buffer(cmdbuf, sizeof(cmdbuf), ppos, buf, size);
    
    will succeed if at least one byte is written to the "cmdbuf" buffer.
    The "*ppos" value controls which byte is written.  Another problem is
    that this code does not check for errors so it's possible for the entire
    buffer to be uninitialized.
    
    Inintialize the struct to zero to prevent reading uninitialized stack
    data.
    
    Debugfs is normally only writable by root so the impact of this bug is
    very minimal.
    
    Fixes: 6cca83d498bd ("Platform: OLPC: move debugfs support from x86 EC driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/YthIKn+TfZSZMEcM@kili
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7af83bb516d7aa4f96835288e4aeda21d7aa2a17
Author: Andrey Strachuk <strochuk@ispras.ru>
Date:   Mon Jul 18 19:00:52 2022 +0300

    usb: cdns3: change place of 'priv_ep' assignment in cdns3_gadget_ep_dequeue(), cdns3_gadget_ep_enable()
    
    [ Upstream commit c3ffc9c4ca44bfe9562166793d133e1fb0630ea6 ]
    
    If 'ep' is NULL, result of ep_to_cdns3_ep(ep) is invalid pointer
    and its dereference with priv_ep->cdns3_dev may cause panic.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 7733f6c32e36 ("usb: cdns3: Add Cadence USB3 DRD Driver")
    Acked-by: Peter Chen <peter.chen@kernel.org>
    Signed-off-by: Andrey Strachuk <strochuk@ispras.ru>
    Link: https://lore.kernel.org/r/20220718160052.4188-1-strochuk@ispras.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a916e8036079eec97762589ac2ab8b95dca50ea8
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jul 25 10:44:57 2022 +0200

    USB: serial: fix tty-port initialized comments
    
    [ Upstream commit 688ee1d1785c1359f9040f615dd8e6054962bce2 ]
    
    Fix up the tty-port initialized comments which got truncated and
    obfuscated when replacing the old ASYNCB_INITIALIZED flag.
    
    Fixes: d41861ca19c9 ("tty: Replace ASYNC_INITIALIZED bit and update atomically")
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1124a2f478f4c5a5b8852129b764fa580248376
Author: Vidya Sagar <vidyas@nvidia.com>
Date:   Thu Jul 21 19:50:50 2022 +0530

    PCI: tegra194: Fix link up retry sequence
    
    [ Upstream commit e05fd6ae77c3e2cc0dba283005d24b6d56d2b1fa ]
    
    Add the missing DLF capability offset while clearing DL_FEATURE_EXCHANGE_EN
    bit during link up retry.
    
    Link: https://lore.kernel.org/r/20220721142052.25971-15-vidyas@nvidia.com
    Fixes: 56e15a238d92 ("PCI: tegra: Add Tegra194 PCIe support")
    Signed-off-by: Vidya Sagar <vidyas@nvidia.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88a694d9c8700549dadad803b04fa798b576ff23
Author: Vidya Sagar <vidyas@nvidia.com>
Date:   Thu Jul 21 19:50:46 2022 +0530

    PCI: tegra194: Fix Root Port interrupt handling
    
    [ Upstream commit 6646e99bcec627e866bc84365af37942c72b4b76 ]
    
    As part of Root Port interrupt handling, level-0 register is read first and
    based on the bits set in that, corresponding level-1 registers are read for
    further interrupt processing. Since both these values are currently read
    into the same 'val' variable, checking level-0 bits the second time around
    is happening on the 'val' variable value of level-1 register contents
    instead of freshly reading the level-0 value again.
    
    Fix by using different variables to store level-0 and level-1 registers
    contents.
    
    Link: https://lore.kernel.org/r/20220721142052.25971-11-vidyas@nvidia.com
    Fixes: 56e15a238d92 ("PCI: tegra: Add Tegra194 PCIe support")
    Signed-off-by: Vidya Sagar <vidyas@nvidia.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2d132ca7fab905bfaa39f03551f02651c6b87da
Author: Artem Borisov <dedsa2002@gmail.com>
Date:   Tue Jul 19 17:53:24 2022 +0300

    HID: alps: Declare U1_UNICORN_LEGACY support
    
    [ Upstream commit 1117d182c5d72abd7eb8b7d5e7b8c3373181c3ab ]
    
    U1_UNICORN_LEGACY id was added to the driver, but was not declared
    in the device id table, making it impossible to use.
    
    Fixes: 640e403 ("HID: alps: Add AUI1657 device ID")
    Signed-off-by: Artem Borisov <dedsa2002@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74e57439e21f33ad0110624115a6624f5b716cf9
Author: Liang He <windhl@126.com>
Date:   Tue Jul 19 17:52:16 2022 +0800

    mmc: cavium-thunderx: Add of_node_put() when breaking out of loop
    
    [ Upstream commit 7ee480795e41db314f2c445c65ed854a5d6e8e32 ]
    
    In thunder_mmc_probe(), we should call of_node_put() when breaking
    out of for_each_child_of_node() which has increased and decreased
    the refcount during each iteration.
    
    Fixes: 166bac38c3c5 ("mmc: cavium: Add MMC PCI driver for ThunderX SOCs")
    Signed-off-by: Liang He <windhl@126.com>
    Acked-by: Robert Richter <rric@kernel.org>
    Link: https://lore.kernel.org/r/20220719095216.1241601-2-windhl@126.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bed7b98117551f59ab89b1426885063ee1ce133
Author: Liang He <windhl@126.com>
Date:   Tue Jul 19 17:52:15 2022 +0800

    mmc: cavium-octeon: Add of_node_put() when breaking out of loop
    
    [ Upstream commit 19bbb49acf8d7a03cb83e05624363741a4c3ec6f ]
    
    In octeon_mmc_probe(), we should call of_node_put() when breaking
    out of for_each_child_of_node() which has increased and decreased
    the refcount during each iteration.
    
    Fixes: 01d95843335c ("mmc: cavium: Add MMC support for Octeon SOCs.")
    Signed-off-by: Liang He <windhl@126.com>
    Acked-by: Robert Richter <rric@kernel.org>
    Link: https://lore.kernel.org/r/20220719095216.1241601-1-windhl@126.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66c8e816f2f2ca4a61b406503bd10bad1b35f72f
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Mon Jun 20 09:28:24 2022 -0700

    HID: mcp2221: prevent a buffer overflow in mcp_smbus_write()
    
    [ Upstream commit 62ac2473553a00229e67bdf3cb023b62cf7f5a9a ]
    
    Smatch Warning:
    drivers/hid/hid-mcp2221.c:388 mcp_smbus_write() error: __memcpy()
    '&mcp->txbuf[5]' too small (59 vs 255)
    drivers/hid/hid-mcp2221.c:388 mcp_smbus_write() error: __memcpy() 'buf'
    too small (34 vs 255)
    
    The 'len' variable can take a value between 0-255 as it can come from
    data->block[0] and it is user data. So add an bound check to prevent a
    buffer overflow in memcpy().
    
    Fixes: 67a95c21463d ("HID: mcp2221: add usb to i2c-smbus host bridge")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26975d8ea96b478897f8cb91a9bc2395d7f3393c
Author: Liang He <windhl@126.com>
Date:   Mon Jul 11 20:52:38 2022 +0800

    gpio: gpiolib-of: Fix refcount bugs in of_mm_gpiochip_add_data()
    
    [ Upstream commit 5d07a692f9562f9c06e62cce369e9dd108173a0f ]
    
    We should use of_node_get() when a new reference of device_node
    is created. It is noted that the old reference stored in
    'mm_gc->gc.of_node' should also be decreased.
    
    This patch is based on the fact that there is a call site in function
    'qe_add_gpiochips()' of src file 'drivers\soc\fsl\qe\gpio.c'. In this
    function, of_mm_gpiochip_add_data() is contained in an iteration of
    for_each_compatible_node() which will automatically increase and
    decrease the refcount. So we need additional of_node_get() for the
    reference escape in of_mm_gpiochip_add_data().
    
    Fixes: a19e3da5bc5f ("of/gpio: Kill of_gpio_chip and add members directly to gpio_chip")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a85c7dd1edadcdeca24e603a6618153a3bcc81ca
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Mon Jul 11 15:07:18 2022 +0800

    RDMA/hfi1: fix potential memory leak in setup_base_ctxt()
    
    [ Upstream commit aa2a1df3a2c85f855af7d54466ac10bd48645d63 ]
    
    setup_base_ctxt() allocates a memory chunk for uctxt->groups with
    hfi1_alloc_ctxt_rcv_groups(). When init_user_ctxt() fails, uctxt->groups
    is not released, which will lead to a memory leak.
    
    We should release the uctxt->groups with hfi1_free_ctxt_rcv_groups()
    when init_user_ctxt() fails.
    
    Fixes: e87473bc1b6c ("IB/hfi1: Only set fd pointer when base context is completely initialized")
    Link: https://lore.kernel.org/r/20220711070718.2318320-1-niejianglei2021@163.com
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Acked-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ade92ddaf2347fb34298c02080caaa3cdd7c27b
Author: Cheng Xu <chengyou@linux.alibaba.com>
Date:   Thu Jul 14 09:30:47 2022 +0800

    RDMA/siw: Fix duplicated reported IW_CM_EVENT_CONNECT_REPLY event
    
    [ Upstream commit 3056fc6c32e613b760422b94c7617ac9a24a4721 ]
    
    If siw_recv_mpa_rr returns -EAGAIN, it means that the MPA reply hasn't
    been received completely, and should not report IW_CM_EVENT_CONNECT_REPLY
    in this case. This may trigger a call trace in iw_cm. A simple way to
    trigger this:
     server: ib_send_lat
     client: ib_send_lat -R <server_ip>
    
    The call trace looks like this:
    
     kernel BUG at drivers/infiniband/core/iwcm.c:894!
     invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
     <...>
     Workqueue: iw_cm_wq cm_work_handler [iw_cm]
     Call Trace:
      <TASK>
      cm_work_handler+0x1dd/0x370 [iw_cm]
      process_one_work+0x1e2/0x3b0
      worker_thread+0x49/0x2e0
      ? rescuer_thread+0x370/0x370
      kthread+0xe5/0x110
      ? kthread_complete_and_exit+0x20/0x20
      ret_from_fork+0x1f/0x30
      </TASK>
    
    Fixes: 6c52fdc244b5 ("rdma/siw: connection management")
    Link: https://lore.kernel.org/r/dae34b5fd5c2ea2bd9744812c1d2653a34a94c67.1657706960.git.chengyou@linux.alibaba.com
    Signed-off-by: Cheng Xu <chengyou@linux.alibaba.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ecc91cf9645b09a6c93c1a0926bb8d00fcc43fe
Author: Haoyue Xu <xuhaoyue1@hisilicon.com>
Date:   Thu Jul 14 21:43:51 2022 +0800

    RDMA/hns: Fix incorrect clearing of interrupt status register
    
    [ Upstream commit ecb4db5c3590aa956b4b2c352081a5b632d1f9f9 ]
    
    The driver will clear all the interrupts in the same area
    when the driver handles the interrupt of type AEQ overflow.
    It should only set the interrupt status bit of type AEQ overflow.
    
    Fixes: a5073d6054f7 ("RDMA/hns: Add eq support of hip08")
    Link: https://lore.kernel.org/r/20220714134353.16700-4-liangwenpeng@huawei.com
    Signed-off-by: Haoyue Xu <xuhaoyue1@hisilicon.com>
    Signed-off-by: Wenpeng Liang <liangwenpeng@huawei.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79ce50dddaf28b5c57911ecc80a2be17a0b17f83
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Thu Jul 14 14:15:05 2022 +0800

    RDMA/qedr: Fix potential memory leak in __qedr_alloc_mr()
    
    [ Upstream commit b3236a64ddd125a455ef5b5316c1b9051b732974 ]
    
    __qedr_alloc_mr() allocates a memory chunk for "mr->info.pbl_table" with
    init_mr_info(). When rdma_alloc_tid() and rdma_register_tid() fail, "mr"
    is released while "mr->info.pbl_table" is not released, which will lead
    to a memory leak.
    
    We should release the "mr->info.pbl_table" with qedr_free_pbl() when error
    occurs to fix the memory leak.
    
    Fixes: e0290cce6ac0 ("qedr: Add support for memory registeration verbs")
    Link: https://lore.kernel.org/r/20220714061505.2342759-1-niejianglei2021@163.com
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Acked-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aaa1a81506570ea24b63e36faf637d76a298be2e
Author: Prabhakar Kushwaha <pkushwaha@marvell.com>
Date:   Thu Jul 29 18:17:32 2021 +0300

    RDMA/qedr: Improve error logs for rdma_alloc_tid error return
    
    [ Upstream commit 0050a57638ca4d681ff92bee55246bf64a6afe54 ]
    
    Use -EINVAL return type to identify whether error is returned because of
    "Out of MR resources" or any other error types.
    
    Link: https://lore.kernel.org/r/20210729151732.30995-2-pkushwaha@marvell.com
    Signed-off-by: Shai Malin <smalin@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: Prabhakar Kushwaha <pkushwaha@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84f83a26194aef0ae7ed0e784f9ae15c3a915fae
Author: Jack Wang <jinpu.wang@ionos.com>
Date:   Tue Jul 12 12:31:09 2022 +0200

    RDMA/rtrs-srv: Fix modinfo output for stringify
    
    [ Upstream commit ed6e53820ee4f68ed927de17e5675ff2a07a47e2 ]
    
    stringify works with define, not enum.
    
    Fixes: 91fddedd439c ("RDMA/rtrs: private headers with rtrs protocol structs and helpers")
    Cc: jinpu.wang@ionos.com
    Link: https://lore.kernel.org/r/20220712103113.617754-2-haris.iqbal@ionos.com
    Signed-off-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Md Haris Iqbal <haris.iqbal@ionos.com>
    Reviewed-by: Aleksei Marov <aleksei.marov@ionos.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50a249ad1db7330d1ee2d728091f8046835f541d
Author: Jack Wang <jinpu.wang@ionos.com>
Date:   Mon May 31 14:28:35 2021 +0200

    RDMA/rtrs: Avoid Wtautological-constant-out-of-range-compare
    
    [ Upstream commit 0e8558476faf02ec51256cad9c487c93c346198c ]
    
    drivers/infiniband/ulp/rtrs/rtrs-clt.c:1786:19: warning: result of comparison of
    constant 'MAX_SESS_QUEUE_DEPTH' (65536) with expression of type 'u16'
    (aka 'unsigned short') is always false [-Wtautological-constant-out-of-range-compare]
    
    To fix it, limit MAX_SESS_QUEUE_DEPTH to u16 max, which is 65535, and
    drop the check in rtrs-clt, as it's the type u16 max.
    
    Link: https://lore.kernel.org/r/20210531122835.58329-1-jinpu.wang@ionos.com
    Signed-off-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b3dcfbece1c2a7dcf69616db7bdab77d0132354
Author: Gioh Kim <gi-oh.kim@cloud.ionos.com>
Date:   Fri May 28 13:30:04 2021 +0200

    RDMA/rtrs: Define MIN_CHUNK_SIZE
    
    [ Upstream commit 3f3d0eabc14b6ea1fcbe85a60ee9d44e2b930b8a ]
    
    Define MIN_CHUNK_SIZE to replace the hard-coding number.
    We need 4k for metadata, so MIN_CHUNK_SIZE should be at least 8k.
    
    Link: https://lore.kernel.org/r/20210528113018.52290-7-jinpu.wang@ionos.com
    Signed-off-by: Gioh Kim <gi-oh.kim@ionos.com>
    Signed-off-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 993cd16211806666a649bbad2e507413a4f80864
Author: Christopher Obbard <chris.obbard@collabora.com>
Date:   Thu Jun 23 09:58:42 2022 +0100

    um: random: Don't initialise hwrng struct with zero
    
    [ Upstream commit 9e70cbd11b03889c92462cf52edb2bd023c798fa ]
    
    Initialising the hwrng struct with zeros causes a
    compile-time sparse warning:
    
     $ ARCH=um make -j10 W=1 C=1 CF='-fdiagnostic-prefix -D__CHECK_ENDIAN__'
     ...
     CHECK   arch/um/drivers/random.c
     arch/um/drivers/random.c:31:31: sparse: warning: Using plain integer as NULL pointer
    
    Fix the warning by not initialising the hwrng struct
    with zeros as it is initialised anyway during module
    init.
    
    Fixes: 72d3e093afae ("um: random: Register random as hwrng-core device")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6a7f80e6267170c68763454a169e80b36976624
Author: Peng Fan <peng.fan@nxp.com>
Date:   Sun Jul 3 17:11:26 2022 +0800

    interconnect: imx: fix max_node_id
    
    [ Upstream commit bd734481e172b4827af09c9ab06c51d2ab7201e6 ]
    
    max_node_id not equal to the ARRAY_SIZE of node array, need increase 1,
    otherwise xlate will fail for the last entry. And rename max_node_id
    to num_nodes to reflect the reality.
    
    Fixes: f0d8048525d7d ("interconnect: Add imx core driver")
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Link: https://lore.kernel.org/r/20220703091132.1412063-5-peng.fan@oss.nxp.com
    Signed-off-by: Georgi Djakov <djakov@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bcc37dc246332e42cc2c42bf5e45311711eb20e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jul 8 16:46:38 2022 +0300

    eeprom: idt_89hpesx: uninitialized data in idt_dbgfs_csr_write()
    
    [ Upstream commit 71d46f1ff2212ced4852c7e77c5176382a1bdcec ]
    
    The simple_write_to_buffer() function will return positive/success if it
    is able to write a single byte anywhere within the buffer.  However that
    potentially leaves a lot of the buffer uninitialized.
    
    In this code it's better to return 0 if the offset is non-zero.  This
    code is not written to support partial writes.  And then return -EFAULT
    if the buffer is not completely initialized.
    
    Fixes: cfad6425382e ("eeprom: Add IDT 89HPESx EEPROM/CSR driver")
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/Ysg1Pu/nzSMe3r1q@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ab5662cc3cecb20b0f61389ba2f606ae4f5a3ad
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Wed Jul 13 15:13:36 2022 +0200

    usb: dwc3: qcom: fix missing optional irq warnings
    
    [ Upstream commit 69bb3520db7cecbccc9e497fc568fa5465c9d43f ]
    
    Not all platforms have all of the four currently supported wakeup
    interrupts so use the optional irq helpers when looking up interrupts to
    avoid printing error messages when an optional interrupt is not found:
    
            dwc3-qcom a6f8800.usb: error -ENXIO: IRQ hs_phy_irq not found
    
    Fixes: a4333c3a6ba9 ("usb: dwc3: Add Qualcomm DWC3 glue driver")
    Reviewed-by: Andrew Halaney <ahalaney@redhat.com>
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Link: https://lore.kernel.org/r/20220713131340.29401-4-johan+linaro@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d376ca67168316d5e004268600b8c978e1b87cff
Author: Rohith Kollalsi <quic_rkollals@quicinc.com>
Date:   Thu Jul 14 10:26:25 2022 +0530

    usb: dwc3: core: Do not perform GCTL_CORE_SOFTRESET during bootup
    
    [ Upstream commit 07903626d98853e605fe63e5ce149f1b7314bbea ]
    
    According to the programming guide, it is recommended to
    perform a GCTL_CORE_SOFTRESET only when switching the mode
    from device to host or host to device. However, it is found
    that during bootup when __dwc3_set_mode() is called for the
    first time, GCTL_CORESOFTRESET is done with suspendable bit(BIT 17)
    of DWC3_GUSB3PIPECTL set. This some times leads to issues
    like controller going into bad state and controller registers
    reading value zero. Until GCTL_CORESOFTRESET is done and
    run/stop bit is set core initialization is not complete.
    Setting suspendable bit of DWC3_GUSB3PIPECTL and then
    performing GCTL_CORESOFTRESET is therefore not recommended.
    Avoid this by only performing the reset if current_dr_role is set,
    that is, when doing subsequent role switching.
    
    Fixes: f88359e1588b ("usb: dwc3: core: Do core softreset when switch mode")
    Signed-off-by: Rohith Kollalsi <quic_rkollals@quicinc.com>
    Link: https://lore.kernel.org/r/20220714045625.20377-1-quic_rkollals@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 251572a26dea26f9c70ae2bd144734825c29ba22
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Wed Jun 15 17:24:32 2022 -0700

    usb: dwc3: core: Deprecate GCTL.CORESOFTRESET
    
    [ Upstream commit afbd04e66e5d16ca3c7ea2e3c56eca25558eacf3 ]
    
    Synopsys IP DWC_usb32 and DWC_usb31 version 1.90a and above deprecated
    GCTL.CORESOFTRESET. The DRD mode switching flow is updated to remove the
    GCTL soft reset. Add version checks to prevent using deprecated setting
    in mode switching flow.
    
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/9df529fde6e55f5508321b6bc26e92848044ef2b.1655338967.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6db5780c2bf6e23be7b315809ef349b4b4f2213
Author: Liang He <windhl@126.com>
Date:   Wed Jul 13 20:05:28 2022 +0800

    usb: aspeed-vhub: Fix refcount leak bug in ast_vhub_init_desc()
    
    [ Upstream commit 220fafb4ed04187e9c17be4152da5a7f2ffbdd8c ]
    
    We should call of_node_put() for the reference returned by
    of_get_child_by_name() which has increased the refcount.
    
    Fixes: 30d2617fd7ed ("usb: gadget: aspeed: allow to set usb strings in device tree")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220713120528.368168-1-windhl@126.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c818fa991c51e9c896137d9cd83d4b5973d878fb
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Jul 8 18:36:01 2022 -0700

    usb: gadget: udc: amd5536 depends on HAS_DMA
    
    [ Upstream commit 8097cf2fb3b2205257f1c76f4808e3398d66b6d9 ]
    
    USB_AMD5536UDC should depend on HAS_DMA since it selects USB_SNP_CORE,
    which depends on HAS_DMA and since 'select' does not follow any
    dependency chains.
    
    Fixes this kconfig warning:
    
    WARNING: unmet direct dependencies detected for USB_SNP_CORE
      Depends on [n]: USB_SUPPORT [=y] && USB_GADGET [=y] && (USB_AMD5536UDC [=y] || USB_SNP_UDC_PLAT [=n]) && HAS_DMA [=n]
      Selected by [y]:
      - USB_AMD5536UDC [=y] && USB_SUPPORT [=y] && USB_GADGET [=y] && USB_PCI [=y]
    
    Fixes: 97b3ffa233b9 ("usb: gadget: udc: amd5536: split core and PCI layer")
    Cc: Raviteja Garimella <raviteja.garimella@broadcom.com>
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: linux-usb@vger.kernel.org
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20220709013601.7536-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6d344eeef7ae6be1e018b82439f1504775cc177
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Jul 7 10:32:29 2022 +0800

    xtensa: iss: fix handling error cases in iss_net_configure()
    
    [ Upstream commit 628ccfc8f5f79dd548319408fcc53949fe97b258 ]
    
    The 'pdev' and 'netdev' need to be released in error cases of
    iss_net_configure().
    
    Change the return type of iss_net_configure() to void, because it's
    not used.
    
    Fixes: 7282bee78798 ("[PATCH] xtensa: Architecture support for Tensilica Xtensa Part 8")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb4c1555f93f11fd6188c62fdd2c0d22e09a3ff5
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Thu Jul 7 00:23:16 2022 -0700

    xtensa: iss/network: provide release() callback
    
    [ Upstream commit 8864fb8359682912ee99235db7db916733a1fd7b ]
    
    Provide release() callback for the platform device embedded into struct
    iss_net_private and registered in the iss_net_configure so that
    platform_device_unregister could be called for it.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fe0b06c166cdbec3bae72f38ff509c2187a5e63
Author: Mahesh Rajashekhara <Mahesh.Rajashekhara@microchip.com>
Date:   Fri Jul 8 13:47:36 2022 -0500

    scsi: smartpqi: Fix DMA direction for RAID requests
    
    [ Upstream commit 69695aeaa6621bc49cdd7a8e5a8d1042461e496e ]
    
    Correct a SOP READ and WRITE DMA flags for some requests.
    
    This update corrects DMA direction issues with SCSI commands removed from
    the controller's internal lookup table.
    
    Currently, SCSI READ BLOCK LIMITS (0x5) was removed from the controller
    lookup table and exposed a DMA direction flag issue.
    
    SCSI READ BLOCK LIMITS was recently removed from our controller lookup
    table so the controller uses the respective IU flag field to set the DMA
    data direction. Since the DMA direction is incorrect the FW never completes
    the request causing a hang.
    
    Some SCSI commands which use SCSI READ BLOCK LIMITS
    
          * sg_map
          * mt -f /dev/stX status
    
    After updating controller firmware, users may notice their tape units
    failing. This patch resolves the issue.
    
    Also, the AIO path DMA direction is correct.
    
    The DMA direction flag is a day-one bug with no reported BZ.
    
    Fixes: 6c223761eb54 ("smartpqi: initial commit of Microsemi smartpqi driver")
    Link: https://lore.kernel.org/r/165730605618.177165.9054223644512926624.stgit@brunhilda
    Reviewed-by: Scott Benesh <scott.benesh@microchip.com>
    Reviewed-by: Scott Teel <scott.teel@microchip.com>
    Reviewed-by: Mike McGowen <mike.mcgowen@microchip.com>
    Reviewed-by: Kevin Barnett <kevin.barnett@microchip.com>
    Signed-off-by: Mahesh Rajashekhara <Mahesh.Rajashekhara@microchip.com>
    Signed-off-by: Don Brace <don.brace@microchip.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7542130af1b7bcba9f1c2f772d42d3fd6158ac58
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Sat Jul 9 00:27:43 2022 +0200

    PCI: qcom: Set up rev 2.1.0 PARF_PHY before enabling clocks
    
    [ Upstream commit 38f897ae3d44900f627cad708a15db498ce2ca31 ]
    
    We currently enable clocks BEFORE we write to PARF_PHY_CTRL reg to enable
    clocks and resets. This causes the driver to never set to a ready state
    with the error 'Phy link never came up'.
    
    This is caused by the PHY clock getting enabled before setting the required
    bits in the PARF regs.
    
    A workaround for this was set but with this new discovery we can drop
    the workaround and use a proper solution to the problem by just enabling
    the clock only AFTER the PARF_PHY_CTRL bit is set.
    
    This correctly sets up the PCIe link and makes it usable even when a
    bootloader leaves the PCIe link in an undefined state.
    
    Fixes: 82a823833f4e ("PCI: qcom: Add Qualcomm PCIe controller driver")
    Link: https://lore.kernel.org/r/20220708222743.27019-1-ansuelsmth@gmail.com
    Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee70aa214a2d9fa74539b52f6c326ba2f7c0fb11
Author: Stefan Roese <sr@denx.de>
Date:   Tue Jan 25 08:18:19 2022 +0100

    PCI/portdrv: Don't disable AER reporting in get_port_device_capability()
    
    [ Upstream commit 8795e182b02dc87e343c79e73af6b8b7f9c5e635 ]
    
    AER reporting is currently disabled in the DevCtl registers of all non Root
    Port PCIe devices on systems using pcie_ports_native || host->native_aer,
    disabling AER completely in such systems. This is because 2bd50dd800b5
    ("PCI: PCIe: Disable PCIe port services during port initialization"), added
    a call to pci_disable_pcie_error_reporting() *after* the AER setup was
    completed for the PCIe device tree.
    
    Here a longer analysis about the current status of AER enabling /
    disabling upon bootup provided by Bjorn:
    
      pcie_portdrv_probe
        pcie_port_device_register
          get_port_device_capability
            pci_disable_pcie_error_reporting
              clear CERE NFERE FERE URRE               # <-- disable for RP USP DSP
          pcie_device_init
            device_register                            # new AER service device
              aer_probe
                aer_enable_rootport                    # RP only
                  set_downstream_devices_error_reporting
                    set_device_error_reporting         # self (RP)
                      if (RP || USP || DSP)
                        pci_enable_pcie_error_reporting
                          set CERE NFERE FERE URRE     # <-- enable for RP
                    pci_walk_bus
                      set_device_error_reporting
                        if (RP || USP || DSP)
                          pci_enable_pcie_error_reporting
                            set CERE NFERE FERE URRE   # <-- enable for USP DSP
    
    In a typical Root Port -> Endpoint hierarchy, the above:
      - Disables Error Reporting for the Root Port,
      - Enables Error Reporting for the Root Port,
      - Does NOT enable Error Reporting for the Endpoint because it is not a
        Root Port or Switch Port.
    
    In a deeper Root Port -> Upstream Switch Port -> Downstream Switch
    Port -> Endpoint hierarchy:
      - Disables Error Reporting for the Root Port,
      - Enables Error Reporting for the Root Port,
      - Enables Error Reporting for both Switch Ports,
      - Does NOT enable Error Reporting for the Endpoint because it is not a
        Root Port or Switch Port,
      - Disables Error Reporting for the Switch Ports when pcie_portdrv_probe()
        claims them.  AER does not re-enable it because these are not Root
        Ports.
    
    Remove this call to pci_disable_pcie_error_reporting() from
    get_port_device_capability(), leaving the already enabled AER configuration
    intact. With this change, AER is enabled in the Root Port and the PCIe
    switch upstream and downstream ports. Only the PCIe Endpoints don't have
    AER enabled yet. A follow-up patch will take care of this Endpoint
    enabling.
    
    Fixes: 2bd50dd800b5 ("PCI: PCIe: Disable PCIe port services during port initialization")
    Link: https://lore.kernel.org/r/20220125071820.2247260-3-sr@denx.de
    Signed-off-by: Stefan Roese <sr@denx.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
    Cc: Michal Simek <michal.simek@xilinx.com>
    Cc: Yao Hongbo <yaohongbo@linux.alibaba.com>
    Cc: Naveen Naidu <naveennaidu479@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d216035d173214cd33712d67d89220ef2283ebf
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Tue Jun 28 15:56:02 2022 +0200

    KVM: s390: pv: leak the topmost page table when destroy fails
    
    [ Upstream commit faa2f72cb3569256480c5540d242c84e99965160 ]
    
    Each secure guest must have a unique ASCE (address space control
    element); we must avoid that new guests use the same page for their
    ASCE, to avoid errors.
    
    Since the ASCE mostly consists of the address of the topmost page table
    (plus some flags), we must not return that memory to the pool unless
    the ASCE is no longer in use.
    
    Only a successful Destroy Secure Configuration UVC will make the ASCE
    reusable again.
    
    If the Destroy Configuration UVC fails, the ASCE cannot be reused for a
    secure guest (either for the ASCE or for other memory areas). To avoid
    a collision, it must not be used again. This is a permanent error and
    the page becomes in practice unusable, so we set it aside and leak it.
    On failure we already leak other memory that belongs to the ultravisor
    (i.e. the variable and base storage for a guest) and not leaking the
    topmost page table was an oversight.
    
    This error (and thus the leakage) should not happen unless the hardware
    is broken or KVM has some unknown serious bug.
    
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Fixes: 29b40f105ec8d55 ("KVM: s390: protvirt: Add initial vm and cpu lifecycle handling")
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Link: https://lore.kernel.org/r/20220628135619.32410-2-imbrenda@linux.ibm.com
    Message-Id: <20220628135619.32410-2-imbrenda@linux.ibm.com>
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59fd7c0b41e0fd9290e52d6baa7eea0fdca3a003
Author: Christian Loehle <CLoehle@hyperstone.com>
Date:   Fri Jul 1 12:43:09 2022 +0000

    mmc: block: Add single read for 4k sector cards
    
    [ Upstream commit b3fa3e6dccc465969721b8bd2824213bd235efeb ]
    
    Cards with 4k native sector size may only be read 4k-aligned,
    accommodate for this in the single read recovery and use it.
    
    Fixes: 81196976ed946 (mmc: block: Add blk-mq support)
    Signed-off-by: Christian Loehle <cloehle@hyperstone.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Link: https://lore.kernel.org/r/cf4f316274c5474586d0d99b17db4a4c@hyperstone.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2985acdaf27da191a1ca2e42a605ca9baeb9fd20
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Thu Jun 30 12:09:26 2022 +0300

    mmc: sdhci-of-at91: fix set_uhs_signaling rewriting of MC1R
    
    [ Upstream commit 5987e6ded29d52e42fc7b06aa575c60a25eee38e ]
    
    In set_uhs_signaling, the DDR bit is being set by fully writing the MC1R
    register.
    This can lead to accidental erase of certain bits in this register.
    Avoid this by doing a read-modify-write operation.
    
    Fixes: d0918764c17b ("mmc: sdhci-of-at91: fix MMC_DDR_52 timing selection")
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Tested-by: Karl Olsen <karl@micro-technic.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20220630090926.15061-1-eugen.hristev@microchip.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9260a154b3b5e387dbceec7c0ac441470646bc6f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jun 25 14:55:56 2022 +0200

    memstick/ms_block: Fix a memory leak
    
    [ Upstream commit 54eb7a55be6779c4d0c25eaf5056498a28595049 ]
    
    'erased_blocks_bitmap' is never freed. As it is allocated at the same time
    as 'used_blocks_bitmap', it is likely that it should be freed also at the
    same time.
    
    Add the corresponding bitmap_free() in msb_data_clear().
    
    Fixes: 0ab30494bc4f ("memstick: add support for legacy memorysticks")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/b3b78926569445962ea5c3b6e9102418a9effb88.1656155715.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae2369ac42478037f0477938eccde014408cf0c6
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jun 25 14:55:25 2022 +0200

    memstick/ms_block: Fix some incorrect memory allocation
    
    [ Upstream commit 2e531bc3e0d86362fcd8a577b3278d9ef3cc2ba0 ]
    
    Some functions of the bitmap API take advantage of the fact that a bitmap
    is an array of long.
    
    So, to make sure this assertion is correct, allocate bitmaps with
    bitmap_zalloc() instead of kzalloc()+hand-computed number of bytes.
    
    While at it, also use bitmap_free() instead of kfree() to keep the
    semantic.
    
    Fixes: 0ab30494bc4f ("memstick: add support for legacy memorysticks")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/dbf633c48c24ae6d95f852557e8d8b3bbdef65fe.1656155715.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b305475df756256a186623f0991d05a816de881a
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon May 23 18:42:54 2022 +0400

    mmc: sdhci-of-esdhc: Fix refcount leak in esdhc_signal_voltage_switch
    
    [ Upstream commit b5899a3e2f783a27b268e38d37f9b24c71bddf45 ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    of_node_put() checks null pointer.
    
    Fixes: ea35645a3c66 ("mmc: sdhci-of-esdhc: add support for signal voltage switch")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220523144255.10310-1-linmq006@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 028c8632a2dcdc78b0489c19b0ecea3bb26bd4e2
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Sun Jul 10 18:30:02 2022 +0800

    staging: rtl8192u: Fix sleep in atomic context bug in dm_fsync_timer_callback
    
    [ Upstream commit 6a0c054930d554ad8f8044ef1fc856d9da391c81 ]
    
    There are sleep in atomic context bugs when dm_fsync_timer_callback is
    executing. The root cause is that the memory allocation functions with
    GFP_KERNEL or GFP_NOIO parameters are called in dm_fsync_timer_callback
    which is a timer handler. The call paths that could trigger bugs are
    shown below:
    
        (interrupt context)
    dm_fsync_timer_callback
      write_nic_byte
        kzalloc(sizeof(data), GFP_KERNEL); //may sleep
        usb_control_msg
          kmalloc(.., GFP_NOIO); //may sleep
      write_nic_dword
        kzalloc(sizeof(data), GFP_KERNEL); //may sleep
        usb_control_msg
          kmalloc(.., GFP_NOIO); //may sleep
    
    This patch uses delayed work to replace timer and moves the operations
    that may sleep into the delayed work in order to mitigate bugs.
    
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Link: https://lore.kernel.org/r/20220710103002.63283-1-duoming@zju.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ae2881c1d1fa0e33f4763b7c786f8ef05a9c828
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Tue Jul 5 11:26:34 2022 +0300

    intel_th: msu: Fix vmalloced buffers
    
    [ Upstream commit ac12ad3ccf6d386e64a9d6a890595a2509d24edd ]
    
    After commit f5ff79fddf0e ("dma-mapping: remove CONFIG_DMA_REMAP") there's
    a chance of DMA buffer getting allocated via vmalloc(), which messes up
    the mmapping code:
    
    > RIP: msc_mmap_fault [intel_th_msu]
    > Call Trace:
    >  <TASK>
    >  __do_fault
    >  do_fault
    ...
    
    Fix this by accounting for vmalloc possibility.
    
    Fixes: ba39bd830605 ("intel_th: msu: Switch over to scatterlist")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20220705082637.59979-4-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81222cfda686f962a1fca8f635c0bdf452dbc57b
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Jul 5 11:26:33 2022 +0300

    intel_th: msu-sink: Potential dereference of null pointer
    
    [ Upstream commit 82f76a4a720791d889de775b5f7541d601efc8bd ]
    
    The return value of dma_alloc_coherent() needs to be checked.
    To avoid use of null pointer in sg_set_buf() in case of the failure of
    alloc.
    
    Fixes: f220df66f676 ("intel_th: msu-sink: An example msu buffer "sink"")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20220705082637.59979-3-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8f3b78b1f8e959d06801ae82149f140a75724e8
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Jul 5 11:26:32 2022 +0300

    intel_th: Fix a resource leak in an error handling path
    
    [ Upstream commit 086c28ab7c5699256aced0049aae9c42f1410313 ]
    
    If an error occurs after calling 'pci_alloc_irq_vectors()',
    'pci_free_irq_vectors()' must be called as already done in the remove
    function.
    
    Fixes: 7b7036d47c35 ("intel_th: pci: Use MSI interrupt signalling")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20220705082637.59979-2-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab3b82435f14518522544b24675e180d898d1d82
Author: Shunsuke Mie <mie@igel.co.jp>
Date:   Wed Jun 22 13:09:24 2022 +0900

    PCI: endpoint: Don't stop controller when unbinding endpoint function
    
    [ Upstream commit 1bc2b7bfba6e2f64edf5e246f3af2967261f6c3d ]
    
    Unbinding an endpoint function from the endpoint controller shouldn't stop
    the controller.  This is especially a problem for multi-function endpoints
    where other endpoints may still be active.
    
    Don't stop the controller when unbinding one of its endpoints.  Normally
    the controller is stopped via configfs.
    
    Fixes: 349e7a85b25f ("PCI: endpoint: functions: Add an EP function to test PCI")
    Link: https://lore.kernel.org/r/20220622040924.113279-1-mie@igel.co.jp
    Signed-off-by: Shunsuke Mie <mie@igel.co.jp>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9b4992f897be9b0b9e3a3b956cab6b75ccc3f11
Author: Viacheslav Mitrofanov <v.v.mitrofanov@yadro.com>
Date:   Fri Jul 1 11:29:42 2022 +0300

    dmaengine: sf-pdma: Add multithread support for a DMA channel
    
    [ Upstream commit b2cc5c465c2cb8ab697c3fd6583c614e3f6cfbcc ]
    
    When we get a DMA channel and try to use it in multiple threads it
    will cause oops and hanging the system.
    
    % echo 64 > /sys/module/dmatest/parameters/threads_per_chan
    % echo 10000 > /sys/module/dmatest/parameters/iterations
    % echo 1 > /sys/module/dmatest/parameters/run
    [   89.480664] Unable to handle kernel NULL pointer dereference at virtual
                   address 00000000000000a0
    [   89.488725] Oops [#1]
    [   89.494708] CPU: 2 PID: 1008 Comm: dma0chan0-copy0 Not tainted
                   5.17.0-rc5
    [   89.509385] epc : vchan_find_desc+0x32/0x46
    [   89.513553]  ra : sf_pdma_tx_status+0xca/0xd6
    
    This happens because of data race. Each thread rewrite channels's
    descriptor as soon as device_prep_dma_memcpy() is called. It leads to the
    situation when the driver thinks that it uses right descriptor that
    actually is freed or substituted for other one.
    
    With current fixes a descriptor changes its value only when it has
    been used. A new descriptor is acquired from vc->desc_issued queue that
    is already filled with descriptors that are ready to be sent. Threads
    have no direct access to DMA channel descriptor. Now it is just possible
    to queue a descriptor for further processing.
    
    Fixes: 6973886ad58e ("dmaengine: sf-pdma: add platform DMA support for HiFive Unleashed A00")
    Signed-off-by: Viacheslav Mitrofanov <v.v.mitrofanov@yadro.com>
    Link: https://lore.kernel.org/r/20220701082942.12835-1-v.v.mitrofanov@yadro.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37e1d474a3fb75eda4f0634e3b63c3b1d8b8a17e
Author: Austin Kim <austin.kim@lge.com>
Date:   Fri Jun 11 07:53:36 2021 +0100

    dmaengine: sf-pdma: apply proper spinlock flags in sf_pdma_prep_dma_memcpy()
    
    [ Upstream commit 94b4cd7c5fc0dd6858a046b00ca729fb0512b9ba ]
    
    The second parameter of spinlock_irq[save/restore] function is flags,
    which is the last input parameter of sf_pdma_prep_dma_memcpy().
    
    So declare local variable 'iflags' to be used as the second parameter of
    spinlock_irq[save/restore] function.
    
    Signed-off-by: Austin Kim <austin.kim@lge.com>
    Link: https://lore.kernel.org/r/20210611065336.GA1121@raspberrypi
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38715a0ccb55aef1017bbd038f8f420616c9a555
Author: Quentin Perret <qperret@google.com>
Date:   Tue Jul 5 14:23:10 2022 +0000

    KVM: arm64: Don't return from void function
    
    [ Upstream commit 1c3ace2b8b3995d3213c5e2d2aca01a0577a3b0f ]
    
    Although harmless, the return statement in kvm_unexpected_el2_exception
    is rather confusing as the function itself has a void return type. The
    C standard is also pretty clear that "A return statement with an
    expression shall not appear in a function whose return type is void".
    Given that this return statement does not seem to add any actual value,
    let's not pointlessly violate the standard.
    
    Build-tested with GCC 10 and CLANG 13 for good measure, the disassembled
    code is identical with or without the return statement.
    
    Fixes: e9ee186bb735 ("KVM: arm64: Add kvm_extable for vaxorcism code")
    Signed-off-by: Quentin Perret <qperret@google.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220705142310.3847918-1-qperret@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbd7b564f9307b7973d5d5fdadc4b42e0d16d7b0
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Jun 10 09:51:05 2022 +0800

    soundwire: bus_type: fix remove and shutdown support
    
    [ Upstream commit df6407782964dc7e35ad84230abb38f46314b245 ]
    
    The bus sdw_drv_remove() and sdw_drv_shutdown() helpers are used
    conditionally, if the driver provides these routines.
    
    These helpers already test if the driver provides a .remove or
    .shutdown callback, so there's no harm in invoking the
    sdw_drv_remove() and sdw_drv_shutdown() unconditionally.
    
    In addition, the current code is imbalanced with
    dev_pm_domain_attach() called from sdw_drv_probe(), but
    dev_pm_domain_detach() called from sdw_drv_remove() only if the driver
    provides a .remove callback.
    
    Fixes: 9251345dca24b ("soundwire: Add SoundWire bus type")
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Rander Wang <rander.wang@intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20220610015105.25987-1-yung-chuan.liao@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed457b0029ab27f30591022a582226ebccc39b81
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Jun 24 17:34:16 2022 +0300

    PCI: dwc: Always enable CDM check if "snps,enable-cdm-check" exists
    
    [ Upstream commit ec7b952f453ce7eabe7e1bea584626934d44f668 ]
    
    If the "snps,enable-cdm-check" property exists, we should enable the CDM
    check.  But previously dw_pcie_setup() could exit before doing so if the
    "num-lanes" property was absent or invalid.
    
    Move the CDM enable earlier so we do it regardless of whether "num-lanes"
    is present.
    
    [bhelgaas: commit log]
    Fixes: 07f123def73e ("PCI: dwc: Add support to enable CDM register check")
    Link: https://lore.kernel.org/r/20220624143428.8334-7-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Vidya Sagar <vidyas@nvidia.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7599a5974d4c64eaae8009c3f2e47b9e3223e07
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Jun 24 17:34:15 2022 +0300

    PCI: dwc: Deallocate EPC memory on dw_pcie_ep_init() errors
    
    [ Upstream commit 8161e9626b50892eaedbd8070ecb1586ecedb109 ]
    
    If dw_pcie_ep_init() fails to perform any action after the EPC memory is
    initialized and the MSI memory region is allocated, the latter parts won't
    be undone thus causing a memory leak.  Add a cleanup-on-error path to fix
    these leaks.
    
    [bhelgaas: commit log]
    Fixes: 2fd0c9d966cc ("PCI: designware-ep: Pre-allocate memory for MSI in dw_pcie_ep_init")
    Link: https://lore.kernel.org/r/20220624143428.8334-6-Sergey.Semin@baikalelectronics.ru
    Tested-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80d9f6541ee2562b62196edf27307b7dcd5d7315
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Jun 24 17:34:12 2022 +0300

    PCI: dwc: Add unroll iATU space support to dw_pcie_disable_atu()
    
    [ Upstream commit d1cf738f2b65a5640234e1da90a68d3523fbed83 ]
    
    dw_pcie_disable_atu() was introduced by f8aed6ec624f ("PCI: dwc:
    designware: Add EP mode support") and supported only the viewport version
    of the iATU CSRs.
    
    DW PCIe IP cores v4.80a and newer also support unrolled iATU/eDMA space.
    Callers of dw_pcie_disable_atu(), including pci_epc_ops.clear_bar(),
    pci_epc_ops.unmap_addr(), and dw_pcie_setup_rc(), don't work correctly when
    it is enabled.
    
    Add dw_pcie_disable_atu() support for controllers with unrolled iATU CSRs
    enabled.
    
    [bhelgaas: commit log]
    Fixes: f8aed6ec624f ("PCI: dwc: designware: Add EP mode support")
    Link: https://lore.kernel.org/r/20220624143428.8334-3-Sergey.Semin@baikalelectronics.ru
    Tested-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2293b23d274b2cadafc882016aef636674c81dab
Author: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
Date:   Fri May 20 00:41:32 2022 +0300

    clk: qcom: camcc-sdm845: Fix topology around titan_top power domain
    
    [ Upstream commit 103dd2338bbff567bce7acd00fc5a09c806b38ec ]
    
    On SDM845 two found VFE GDSC power domains shall not be operated, if
    titan top is turned off, thus the former power domains will be set as
    subdomains by a GDSC registration routine.
    
    Fixes: 78412c262004 ("clk: qcom: Add camera clock controller driver for SDM845")
    Signed-off-by: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220519214133.1728979-2-vladimir.zapolskiy@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b28ebe7d2f10e5ca574be3d4188a744674e8e0d5
Author: Robert Marko <robimarko@gmail.com>
Date:   Sun May 15 23:00:43 2022 +0200

    clk: qcom: ipq8074: set BRANCH_HALT_DELAY flag for UBI clocks
    
    [ Upstream commit 2bd357e698207e2e65db03007e4be65bf9d6a7b3 ]
    
    Currently, attempting to enable the UBI clocks will cause the stuck at
    off warning to be printed and clk_enable will fail.
    
    [   14.936694] gcc_ubi1_ahb_clk status stuck at 'off'
    
    Downstream 5.4 QCA kernel has fixed this by seting the BRANCH_HALT_DELAY
    flag on UBI clocks, so lets do the same.
    
    Fixes: 5736294aef83 ("clk: qcom: ipq8074: add NSS clocks")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220515210048.483898-6-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b83af7b4ec1d1c54de7d7115c9e0b4c3d60fdc47
Author: Robert Marko <robimarko@gmail.com>
Date:   Sun May 15 23:00:40 2022 +0200

    clk: qcom: ipq8074: fix NSS port frequency tables
    
    [ Upstream commit 0e9e61a2815b5cd34f1b495b2d72e8127ce9b794 ]
    
    NSS port 5 and 6 frequency tables are currently broken and are causing a
    wide ranges of issue like 1G not working at all on port 6 or port 5 being
    clocked with 312 instead of 125 MHz as UNIPHY1 gets selected.
    
    So, update the frequency tables with the ones from the downstream QCA 5.4
    based kernel which has already fixed this.
    
    Fixes: 7117a51ed303 ("clk: qcom: ipq8074: add NSS ethernet port clocks")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220515210048.483898-3-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58023f5291b4fc145e42971c300f560adc224635
Author: Robert Marko <robimarko@gmail.com>
Date:   Sun May 15 23:00:39 2022 +0200

    clk: qcom: ipq8074: SW workaround for UBI32 PLL lock
    
    [ Upstream commit 3401ea2856ef84f39b75f0dc5ebcaeda81cb90ec ]
    
    UBI32 Huayra PLL fails to lock in 5 us in some SoC silicon and thus it
    will cause the wait_for_pll() to timeout and thus return the error
    indicating that the PLL failed to lock.
    
    This is bug in Huayra PLL HW for which SW workaround
    is to set bit 26 of TEST_CTL register.
    
    This is ported from the QCA 5.4 based downstream kernel.
    
    Fixes: b8e7e519625f ("clk: qcom: ipq8074: add remaining PLL’s")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220515210048.483898-2-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2330494f0f8f168ae5bd17df01cb61363593c46
Author: Robert Marko <robimarko@gmail.com>
Date:   Sun May 15 23:00:38 2022 +0200

    clk: qcom: ipq8074: fix NSS core PLL-s
    
    [ Upstream commit ca41ec1b30434636c56c5600b24a8d964d359d9c ]
    
    Like in IPQ6018 the NSS related Alpha PLL-s require initial configuration
    to work.
    
    So, obtain the regmap that is required for the Alpha PLL configuration
    and thus utilize the qcom_cc_really_probe() as we already have the regmap.
    Then utilize the Alpha PLL configs from the downstream QCA 5.4 based
    kernel to configure them.
    
    This fixes the UBI32 and NSS crypto PLL-s failing to get enabled by the
    kernel.
    
    Fixes: b8e7e519625f ("clk: qcom: ipq8074: add remaining PLL’s")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220515210048.483898-1-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b840c2926de2fbfcfef72c4373ef9d8057867349
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Thu Jun 30 15:46:45 2022 +0300

    usb: host: xhci: use snprintf() in xhci_decode_trb()
    
    [ Upstream commit 1ce69c35b86038dd11d3a6115a04501c5b89a940 ]
    
    Commit cbf286e8ef83 ("xhci: fix unsafe memory usage in xhci tracing")
    apparently missed one sprintf() call in xhci_decode_trb() -- replace
    it with the snprintf() call as well...
    
    Found by Linux Verification Center (linuxtesting.org) with the SVACE static
    analysis tool.
    
    Fixes: cbf286e8ef83 ("xhci: fix unsafe memory usage in xhci tracing")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220630124645.1805902-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42f1827096631356669181ef8636bd7bb9686130
Author: Christian Marangi <ansuelsmth@gmail.com>
Date:   Sat Apr 30 07:44:57 2022 +0200

    clk: qcom: clk-krait: unlock spin after mux completion
    
    [ Upstream commit df83d2c9e72910416f650ade1e07cc314ff02731 ]
    
    Unlock spinlock after the mux switch is completed to prevent any corner
    case of mux request while the switch still needs to be done.
    
    Fixes: 4d7dc77babfe ("clk: qcom: Add support for Krait clocks")
    Signed-off-by: Ansuel Smith <ansuelsmth@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220430054458.31321-3-ansuelsmth@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a93f33aeef4e6a94ae9c9d3f5b2f9085ad0572ec
Author: Zhang Wensheng <zhangwensheng5@huawei.com>
Date:   Wed Jun 22 15:43:27 2022 +0800

    driver core: fix potential deadlock in __driver_attach
    
    [ Upstream commit 70fe758352cafdee72a7b13bf9db065f9613ced8 ]
    
    In __driver_attach function, There are also AA deadlock problem,
    like the commit b232b02bf3c2 ("driver core: fix deadlock in
    __device_attach").
    
    stack like commit b232b02bf3c2 ("driver core: fix deadlock in
    __device_attach").
    list below:
        In __driver_attach function, The lock holding logic is as follows:
        ...
        __driver_attach
        if (driver_allows_async_probing(drv))
          device_lock(dev)      // get lock dev
            async_schedule_dev(__driver_attach_async_helper, dev); // func
              async_schedule_node
                async_schedule_node_domain(func)
                  entry = kzalloc(sizeof(struct async_entry), GFP_ATOMIC);
                  /* when fail or work limit, sync to execute func, but
                     __driver_attach_async_helper will get lock dev as
                     will, which will lead to A-A deadlock.  */
                  if (!entry || atomic_read(&entry_count) > MAX_WORK) {
                    func;
                  else
                    queue_work_node(node, system_unbound_wq, &entry->work)
          device_unlock(dev)
    
        As above show, when it is allowed to do async probes, because of
        out of memory or work limit, async work is not be allowed, to do
        sync execute instead. it will lead to A-A deadlock because of
        __driver_attach_async_helper getting lock dev.
    
    Reproduce:
    and it can be reproduce by make the condition
    (if (!entry || atomic_read(&entry_count) > MAX_WORK)) untenable, like
    below:
    
    [  370.785650] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables
    this message.
    [  370.787154] task:swapper/0       state:D stack:    0 pid:    1 ppid:
    0 flags:0x00004000
    [  370.788865] Call Trace:
    [  370.789374]  <TASK>
    [  370.789841]  __schedule+0x482/0x1050
    [  370.790613]  schedule+0x92/0x1a0
    [  370.791290]  schedule_preempt_disabled+0x2c/0x50
    [  370.792256]  __mutex_lock.isra.0+0x757/0xec0
    [  370.793158]  __mutex_lock_slowpath+0x1f/0x30
    [  370.794079]  mutex_lock+0x50/0x60
    [  370.794795]  __device_driver_lock+0x2f/0x70
    [  370.795677]  ? driver_probe_device+0xd0/0xd0
    [  370.796576]  __driver_attach_async_helper+0x1d/0xd0
    [  370.797318]  ? driver_probe_device+0xd0/0xd0
    [  370.797957]  async_schedule_node_domain+0xa5/0xc0
    [  370.798652]  async_schedule_node+0x19/0x30
    [  370.799243]  __driver_attach+0x246/0x290
    [  370.799828]  ? driver_allows_async_probing+0xa0/0xa0
    [  370.800548]  bus_for_each_dev+0x9d/0x130
    [  370.801132]  driver_attach+0x22/0x30
    [  370.801666]  bus_add_driver+0x290/0x340
    [  370.802246]  driver_register+0x88/0x140
    [  370.802817]  ? virtio_scsi_init+0x116/0x116
    [  370.803425]  scsi_register_driver+0x1a/0x30
    [  370.804057]  init_sd+0x184/0x226
    [  370.804533]  do_one_initcall+0x71/0x3a0
    [  370.805107]  kernel_init_freeable+0x39a/0x43a
    [  370.805759]  ? rest_init+0x150/0x150
    [  370.806283]  kernel_init+0x26/0x230
    [  370.806799]  ret_from_fork+0x1f/0x30
    
    To fix the deadlock, move the async_schedule_dev outside device_lock,
    as we can see, in async_schedule_node_domain, the parameter of
    queue_work_node is system_unbound_wq, so it can accept concurrent
    operations. which will also not change the code logic, and will
    not lead to deadlock.
    
    Fixes: ef0ff68351be ("driver core: Probe devices asynchronously instead of the driver")
    Signed-off-by: Zhang Wensheng <zhangwensheng5@huawei.com>
    Link: https://lore.kernel.org/r/20220622074327.497102-1-zhangwensheng5@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2593f971f0436a67d1c377a42e33526335cd9c16
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Jun 15 07:33:44 2022 +0200

    misc: rtsx: Fix an error handling path in rtsx_pci_probe()
    
    [ Upstream commit 44fd1917314e9d4f53dd95dd65df1c152f503d3a ]
    
    If an error occurs after a successful idr_alloc() call, the corresponding
    resource must be released with idr_remove() as already done in the .remove
    function.
    
    Update the error handling path to add the missing idr_remove() call.
    
    Fixes: ada8a8a13b13 ("mfd: Add realtek pcie card reader driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/e8dc41716cbf52fb37a12e70d8972848e69df6d6.1655271216.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 267c5f17a001ab52a16a1c83d3f88bdbd2dc86c3
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Tue May 24 10:21:57 2022 -0500

    dmaengine: dw-edma: Fix eDMA Rd/Wr-channels and DMA-direction semantics
    
    [ Upstream commit c1e33979171da63cf47e56243ccb8ba82363c7d3 ]
    
    In accordance with [1, 2] the DW eDMA controller has been created to be
    part of the DW PCIe Root Port and DW PCIe End-point controllers and to
    offload the transferring of large blocks of data between application and
    remote PCIe domains leaving the system CPU free for other tasks. In the
    first case (eDMA being part of DW PCIe Root Port) the eDMA controller is
    always accessible via the CPU DBI interface and never over the PCIe wire.
    
    The latter case is more complex. Depending on the DW PCIe End-Point IP-core
    synthesize parameters it's possible to have the eDMA registers accessible
    not only from the application CPU side, but also via mapping the eDMA CSRs
    over a dedicated endpoint BAR. So based on the specifics denoted above the
    eDMA driver is supposed to support two types of the DMA controller setups:
    
      1) eDMA embedded into the DW PCIe Root Port/End-point and accessible over
         the local CPU from the application side.
    
      2) eDMA embedded into the DW PCIe End-point and accessible via the PCIe
         wire with MWr/MRd TLPs generated by the CPU PCIe host controller.
    
    Since the CPU memory resides different sides in these cases the semantics
    of the MEM_TO_DEV and DEV_TO_MEM operations is flipped with respect to the
    Tx and Rx DMA channels. So MEM_TO_DEV/DEV_TO_MEM corresponds to the Tx/Rx
    channels in setup 1) and to the Rx/Tx channels in case of setup 2).
    
    The DW eDMA driver has supported the case 2) since e63d79d1ffcd
    ("dmaengine: Add Synopsys eDMA IP core driver") in the framework of the
    drivers/dma/dw-edma/dw-edma-pcie.c driver.
    
    The case 1) support was added later by bd96f1b2f43a ("dmaengine: dw-edma:
    support local dma device transfer semantics").  Afterwards the driver was
    supposed to cover the both possible eDMA setups, but the latter commit
    turned out to be not fully correct.
    
    The problem was that the commit together with the new functionality support
    also changed the channel direction semantics so the eDMA Read-channel
    (corresponding to the DMA_DEV_TO_MEM direction for case 1) now uses the
    sgl/cyclic base addresses as the Source addresses of the DMA transfers and
    dma_slave_config.dst_addr as the Destination address of the DMA transfers.
    
    Similarly the eDMA Write-channel (corresponding to the DMA_MEM_TO_DEV
    direction for case 1) now uses dma_slave_config.src_addr as a source
    address of the DMA transfers and sgl/cyclic base address as the Destination
    address of the DMA transfers. This contradicts the logic of the
    DMA-interface, which implies that DEV side is supposed to belong to the
    PCIe device memory and MEM - to the CPU/Application memory. Indeed it seems
    irrational to have the SG-list defined in the PCIe bus space, while
    expecting a contiguous buffer allocated in the CPU memory. Moreover the
    passed SG-list and cyclic DMA buffers are supposed to be mapped in a way so
    to be seen by the DW eDMA Application (CPU) interface.
    
    So in order to have the correct DW eDMA interface we need to invert the
    eDMA Rd/Wr-channels and DMA-slave directions semantics by selecting the
    src/dst addresses based on the DMA transfer direction instead of using the
    channel direction capability.
    
    [1] DesignWare Cores PCI Express Controller Databook - DWC PCIe Root Port,
        v.5.40a, March 2019, p.1092
    [2] DesignWare Cores PCI Express Controller Databook - DWC PCIe Endpoint,
        v.5.40a, March 2019, p.1189
    
    Co-developed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Fixes: bd96f1b2f43a ("dmaengine: dw-edma: support local dma device transfer semantics")
    Link: https://lore.kernel.org/r/20220524152159.2370739-7-Frank.Li@nxp.com
    Tested-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Signed-off-by: Frank Li <Frank.Li@nxp.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-By: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 956b79c2066551845d7124b01c5845d02ccf47a1
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Tue Jun 7 11:26:26 2022 +0800

    mwifiex: fix sleep in atomic context bugs caused by dev_coredumpv
    
    [ Upstream commit a52ed4866d2b90dd5e4ae9dabd453f3ed8fa3cbc ]
    
    There are sleep in atomic context bugs when uploading device dump
    data in mwifiex. The root cause is that dev_coredumpv could not
    be used in atomic contexts, because it calls dev_set_name which
    include operations that may sleep. The call tree shows execution
    paths that could lead to bugs:
    
       (Interrupt context)
    fw_dump_timer_fn
      mwifiex_upload_device_dump
        dev_coredumpv(..., GFP_KERNEL)
          dev_coredumpm()
            kzalloc(sizeof(*devcd), gfp); //may sleep
            dev_set_name
              kobject_set_name_vargs
                kvasprintf_const(GFP_KERNEL, ...); //may sleep
                kstrdup(s, GFP_KERNEL); //may sleep
    
    The corresponding fail log is shown below:
    
    [  135.275938] usb 1-1: == mwifiex dump information to /sys/class/devcoredump start
    [  135.281029] BUG: sleeping function called from invalid context at include/linux/sched/mm.h:265
    ...
    [  135.293613] Call Trace:
    [  135.293613]  <IRQ>
    [  135.293613]  dump_stack_lvl+0x57/0x7d
    [  135.293613]  __might_resched.cold+0x138/0x173
    [  135.293613]  ? dev_coredumpm+0xca/0x2e0
    [  135.293613]  kmem_cache_alloc_trace+0x189/0x1f0
    [  135.293613]  ? devcd_match_failing+0x30/0x30
    [  135.293613]  dev_coredumpm+0xca/0x2e0
    [  135.293613]  ? devcd_freev+0x10/0x10
    [  135.293613]  dev_coredumpv+0x1c/0x20
    [  135.293613]  ? devcd_match_failing+0x30/0x30
    [  135.293613]  mwifiex_upload_device_dump+0x65/0xb0
    [  135.293613]  ? mwifiex_dnld_fw+0x1b0/0x1b0
    [  135.293613]  call_timer_fn+0x122/0x3d0
    [  135.293613]  ? msleep_interruptible+0xb0/0xb0
    [  135.293613]  ? lock_downgrade+0x3c0/0x3c0
    [  135.293613]  ? __next_timer_interrupt+0x13c/0x160
    [  135.293613]  ? lockdep_hardirqs_on_prepare+0xe/0x220
    [  135.293613]  ? mwifiex_dnld_fw+0x1b0/0x1b0
    [  135.293613]  __run_timers.part.0+0x3f8/0x540
    [  135.293613]  ? call_timer_fn+0x3d0/0x3d0
    [  135.293613]  ? arch_restore_msi_irqs+0x10/0x10
    [  135.293613]  ? lapic_next_event+0x31/0x40
    [  135.293613]  run_timer_softirq+0x4f/0xb0
    [  135.293613]  __do_softirq+0x1c2/0x651
    ...
    [  135.293613] RIP: 0010:default_idle+0xb/0x10
    [  135.293613] RSP: 0018:ffff888006317e68 EFLAGS: 00000246
    [  135.293613] RAX: ffffffff82ad8d10 RBX: ffff888006301cc0 RCX: ffffffff82ac90e1
    [  135.293613] RDX: ffffed100d9ff1b4 RSI: ffffffff831ad140 RDI: ffffffff82ad8f20
    [  135.293613] RBP: 0000000000000003 R08: 0000000000000000 R09: ffff88806cff8d9b
    [  135.293613] R10: ffffed100d9ff1b3 R11: 0000000000000001 R12: ffffffff84593410
    [  135.293613] R13: 0000000000000000 R14: 0000000000000000 R15: 1ffff11000c62fd2
    ...
    [  135.389205] usb 1-1: == mwifiex dump information to /sys/class/devcoredump end
    
    This patch uses delayed work to replace timer and moves the operations
    that may sleep into a delayed work in order to mitigate bugs, it was
    tested on Marvell 88W8801 chip whose port is usb and the firmware is
    usb8801_uapsta.bin. The following is the result after using delayed
    work to replace timer.
    
    [  134.936453] usb 1-1: == mwifiex dump information to /sys/class/devcoredump start
    [  135.043344] usb 1-1: == mwifiex dump information to /sys/class/devcoredump end
    
    As we can see, there is no bug now.
    
    Fixes: f5ecd02a8b20 ("mwifiex: device dump support for usb interface")
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Link: https://lore.kernel.org/r/b63b77fc84ed3e8a6bef02378e17c7c71a0bc3be.1654569290.git.duoming@zju.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 803526555b2ac9ddcb7a0c56f457651b6fee9601
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Wed Nov 3 21:58:27 2021 +0100

    mwifiex: Ignore BTCOEX events from the 88W8897 firmware
    
    [ Upstream commit 84d94e16efa268e4f2887d858cd67ee37b870f25 ]
    
    The firmware of the 88W8897 PCIe+USB card sends those events very
    unreliably, sometimes bluetooth together with 2.4ghz-wifi is used and no
    COEX event comes in, and sometimes bluetooth is disabled but the
    coexistance mode doesn't get disabled.
    
    This means we sometimes end up capping the rx/tx window size while
    bluetooth is not enabled anymore, artifically limiting wifi speeds even
    though bluetooth is not being used.
    
    Since we can't fix the firmware, let's just ignore those events on the
    88W8897 device. From some Wireshark capture sessions it seems that the
    Windows driver also doesn't change the rx/tx window sizes when bluetooth
    gets enabled or disabled, so this is fairly consistent with the Windows
    driver.
    
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211103205827.14559-1-verdre@v0yd.nl
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dceedbb5aba0bb7ecc2fca4390be5795840ea1b4
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Apr 29 01:04:09 2022 +0000

    KVM: Don't set Accessed/Dirty bits for ZERO_PAGE
    
    [ Upstream commit a1040b0d42acf69bb4f6dbdc54c2dcd78eea1de5 ]
    
    Don't set Accessed/Dirty bits for a struct page with PG_reserved set,
    i.e. don't set A/D bits for the ZERO_PAGE.  The ZERO_PAGE (or pages
    depending on the architecture) should obviously never be written, and
    similarly there's no point in marking it accessed as the page will never
    be swapped out or reclaimed.  The comment in page-flags.h is quite clear
    that PG_reserved pages should be managed only by their owner, and
    strictly following that mandate also simplifies KVM's logic.
    
    Fixes: 7df003c85218 ("KVM: fix overflow of zero page refcount with ksm running")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220429010416.2788472-4-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02d203f488214c54496a8443b2473e07458581ef
Author: Rex-BC Chen <rex-bc.chen@mediatek.com>
Date:   Mon May 23 17:33:29 2022 +0800

    clk: mediatek: reset: Fix written reset bit offset
    
    [ Upstream commit edabcf71d100fd433a0fc2d0c97057c446c33b2a ]
    
    Original assert/deassert bit is BIT(0), but it's more resonable to modify
    them to BIT(id % 32) which is based on id.
    
    This patch will not influence any previous driver because the reset is
    only used for thermal. The id (MT8183_INFRACFG_AO_THERM_SW_RST) is 0.
    
    Fixes: 64ebb57a3df6 ("clk: reset: Modify reset-controller driver")
    Signed-off-by: Rex-BC Chen <rex-bc.chen@mediatek.com>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Tested-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Link: https://lore.kernel.org/r/20220523093346.28493-3-rex-bc.chen@mediatek.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f51a09f3d7b3d8d0763361fd2f58611ab22390f
Author: Jagath Jog J <jagathjog1996@gmail.com>
Date:   Thu May 5 19:00:13 2022 +0530

    iio: accel: bma400: Reordering of header files
    
    [ Upstream commit 1bd2dc6ea863690aee5c45ebf09c9194c7a42c0d ]
    
    Reordering of header files and removing the iio/sysfs.h since
    custom attributes are not being used in the driver.
    
    Signed-off-by: Jagath Jog J <jagathjog1996@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220505133021.22362-3-jagathjog1996@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab831a12c8a7295799d09bedde4b3a576673441a
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Tue Jun 14 00:57:26 2022 -0700

    platform/chrome: cros_ec: Always expose last resume result
    
    [ Upstream commit 74bb746407bf0d7c7d126c7731dbcd66d467619b ]
    
    The last resume result exposing logic in cros_ec_sleep_event()
    incorrectly requires S0ix support, which doesn't work on ARM based
    systems where S0ix doesn't exist. That's because cros_ec_sleep_event()
    only reports the last resume result when the EC indicates the last sleep
    event was an S0ix resume. On ARM systems, the last sleep event is always
    S3 resume, but the EC can still detect sleep hang events in case some
    other part of the AP is blocking sleep.
    
    Always expose the last resume result if the EC supports it so that this
    works on all devices regardless of S0ix support. This fixes sleep hang
    detection on ARM based chromebooks like Trogdor.
    
    Cc: Rajat Jain <rajatja@chromium.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Cc: Hsin-Yi Wang <hsinyi@chromium.org>
    Cc: Tzung-Bi Shih <tzungbi@kernel.org>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Reviewed-by: Evan Green <evgreen@chromium.org>
    Fixes: 7235560ac77a ("platform/chrome: Add support for v1 of host sleep event")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Tzung-Bi Shih <tzungbi@kernel.org>
    Link: https://lore.kernel.org/r/20220614075726.2729987-1-swboyd@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 366d0123c38792906a223400e05cac70ac1982fb
Author: Jagath Jog J <jagathjog1996@gmail.com>
Date:   Thu May 5 19:00:12 2022 +0530

    iio: accel: bma400: Fix the scale min and max macro values
    
    [ Upstream commit 747c7cf1592e226d40543231b26502b332d0ea2f ]
    
    Changing the scale macro values to match the bma400 sensitivity
    for 1 LSB of all the available ranges.
    
    Fixes: 465c811f1f20 ("iio: accel: Add driver for the BMA400")
    Signed-off-by: Jagath Jog J <jagathjog1996@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20220505133021.22362-2-jagathjog1996@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit edfa0851d8c91424e2e686456f144ba9d36c4503
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Jun 6 17:23:45 2022 +0200

    netfilter: xtables: Bring SPDX identifier back
    
    [ Upstream commit 20646f5b1e798bcc20044ae90ac3702f177bf254 ]
    
    Commit e2be04c7f995 ("License cleanup: add SPDX license identifier to
    uapi header files with a license") added the correct SPDX identifier to
    include/uapi/linux/netfilter/xt_IDLETIMER.h.
    
    A subsequent commit removed it for no reason and reintroduced the UAPI
    license incorrectness as the file is now missing the UAPI exception
    again.
    
    Add it back and remove the GPLv2 boilerplate while at it.
    
    Fixes: 68983a354a65 ("netfilter: xtables: Add snapshot of hardidletimer target")
    Cc: Manoj Basapathi <manojbm@codeaurora.org>
    Cc: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Cc: Pablo Neira Ayuso <pablo@netfilter.org>
    Cc: netfilter-devel@vger.kernel.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9feb3ecd07097c907f458e73e2c411e0bbe2d076
Author: Tang Bin <tangbin@cmss.chinamobile.com>
Date:   Tue May 24 20:14:04 2022 +0800

    usb: xhci: tegra: Fix error check
    
    [ Upstream commit 18fc7c435be3f17ea26a21b2e2312fcb9088e01f ]
    
    In the function tegra_xusb_powerdomain_init(),
    dev_pm_domain_attach_by_name() may return NULL in some cases,
    so IS_ERR() doesn't meet the requirements. Thus fix it.
    
    Fixes: 6494a9ad86de ("usb: xhci: tegra: Add genpd support")
    Signed-off-by: Tang Bin <tangbin@cmss.chinamobile.com>
    Link: https://lore.kernel.org/r/20220524121404.18376-1-tangbin@cmss.chinamobile.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb5e59f00f7d3cb92ada5854b2d34122c441268e
Author: Tang Bin <tangbin@cmss.chinamobile.com>
Date:   Wed May 25 21:53:32 2022 +0800

    usb: gadget: tegra-xudc: Fix error check in tegra_xudc_powerdomain_init()
    
    [ Upstream commit f08aa7c80dac27ee00fa6827f447597d2fba5465 ]
    
    dev_pm_domain_attach_by_name() may return NULL in some cases,
    so IS_ERR() doesn't meet the requirements. Thus fix it.
    
    Fixes: 49db427232fe ("usb: gadget: Add UDC driver for tegra XUSB device mode controller")
    Signed-off-by: Tang Bin <tangbin@cmss.chinamobile.com>
    Link: https://lore.kernel.org/r/20220525135332.23144-1-tangbin@cmss.chinamobile.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d35903e9650f4fa79426ce390db8678dbf5ac432
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jun 3 18:12:30 2022 +0400

    usb: ohci-nxp: Fix refcount leak in ohci_hcd_nxp_probe
    
    [ Upstream commit 302970b4cad3ebfda2c05ce06c322ccdc447d17e ]
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 73108aa90cbf ("USB: ohci-nxp: Use isp1301 driver")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220603141231.979-1-linmq006@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 585d22a5624ef2b540c337665c72fea8cd33db50
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jun 2 15:08:49 2022 +0400

    usb: host: Fix refcount leak in ehci_hcd_ppc_of_probe
    
    [ Upstream commit b5c5b13cb45e2c88181308186b0001992cb41954 ]
    
    of_find_compatible_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 796bcae7361c ("USB: powerpc: Workaround for the PPC440EPX USBH_23 errata [take 3]")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220602110849.58549-1-linmq006@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 474f12deaa19a1358e2f81190fc38063adbfdd20
Author: Marco Pagani <marpagan@redhat.com>
Date:   Thu Jun 9 16:05:19 2022 +0200

    fpga: altera-pr-ip: fix unsigned comparison with less than zero
    
    [ Upstream commit 2df84a757d87fd62869fc401119d429735377ec5 ]
    
    Fix the "comparison with less than zero" warning reported by
    cppcheck for the unsigned (size_t) parameter count of the
    alt_pr_fpga_write() function.
    
    Fixes: d201cc17a8a3 ("fpga pr ip: Core driver support for Altera Partial Reconfiguration IP")
    Reviewed-by: Tom Rix <trix@redhat.com>
    Acked-by: Xu Yilun <yilun.xu@intel.com>
    Signed-off-by: Marco Pagani <marpagan@redhat.com>
    Link: https://lore.kernel.org/r/20220609140520.42662-1-marpagan@redhat.com
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 175428c86fb832cf0c8ce181d22c53eed3589d24
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Jun 7 17:24:55 2022 +0200

    mtd: st_spi_fsm: Add a clk_disable_unprepare() in .probe()'s error path
    
    [ Upstream commit 28607b426c3d050714f250d0faeb99d2e9106e90 ]
    
    For all but one error path clk_disable_unprepare() is already there. Add
    it to the one location where it's missing.
    
    Fixes: 481815a6193b ("mtd: st_spi_fsm: Handle clk_prepare_enable/clk_disable_unprepare.")
    Fixes: 69d5af8d016c ("mtd: st_spi_fsm: Obtain and use EMI clock")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220607152458.232847-2-u.kleine-koenig@pengutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55d0f7da66dec93c4d53d0886a1555618079a900
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu May 26 15:06:49 2022 +0400

    mtd: partitions: Fix refcount leak in parse_redboot_of
    
    [ Upstream commit 9f7e62815cf3cbbcb1b8cb21649fb4dfdb3aa016 ]
    
    of_get_child_by_name() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 237960880960 ("mtd: partitions: redboot: seek fis-index-block in the right node")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220526110652.64849-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4e150d295ba5234f5e4b3731ddbcb1651b7547f
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Tue May 24 12:48:41 2022 +0800

    mtd: sm_ftl: Fix deadlock caused by cancel_work_sync in sm_release
    
    [ Upstream commit a61528d997619a518ee8c51cf0ef0513021afaff ]
    
    There is a deadlock between sm_release and sm_cache_flush_work
    which is a work item. The cancel_work_sync in sm_release will
    not return until sm_cache_flush_work is finished. If we hold
    mutex_lock and use cancel_work_sync to wait the work item to
    finish, the work item also requires mutex_lock. As a result,
    the sm_release will be blocked forever. The race condition is
    shown below:
    
        (Thread 1)             |   (Thread 2)
    sm_release                 |
      mutex_lock(&ftl->mutex)  | sm_cache_flush_work
                               |   mutex_lock(&ftl->mutex)
      cancel_work_sync         |   ...
    
    This patch moves del_timer_sync and cancel_work_sync out of
    mutex_lock in order to mitigate deadlock.
    
    Fixes: 7d17c02a01a1 ("mtd: Add new SmartMedia/xD FTL")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220524044841.10517-1-duoming@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebda3d6b004bb6127a66a616524a2de152302ca7
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Wed Jun 8 05:26:09 2022 -0700

    HID: cp2112: prevent a buffer overflow in cp2112_xfer()
    
    [ Upstream commit 381583845d19cb4bd21c8193449385f3fefa9caf ]
    
    Smatch warnings:
    drivers/hid/hid-cp2112.c:793 cp2112_xfer() error: __memcpy()
    'data->block[1]' too small (33 vs 255)
    drivers/hid/hid-cp2112.c:793 cp2112_xfer() error: __memcpy() 'buf' too
    small (64 vs 255)
    
    The 'read_length' variable is provided by 'data->block[0]' which comes
    from user and it(read_length) can take a value between 0-255. Add an
    upper bound to 'read_length' variable to prevent a buffer overflow in
    memcpy().
    
    Fixes: 542134c0375b ("HID: cp2112: Fix I2C_BLOCK_DATA transactions")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdf92a0aee97b6e8c92db99ae4cdf250dffe6692
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jun 2 07:19:08 2022 +0400

    PCI: tegra194: Fix PM error handling in tegra_pcie_config_ep()
    
    [ Upstream commit e8fbd344a5ea62663554b8546b6bf9f88b93785a ]
    
    pm_runtime_enable() will increase power disable depth.  If
    dw_pcie_ep_init() fails, we should use pm_runtime_disable() to balance it
    with pm_runtime_enable().
    
    Add missing pm_runtime_disable() for tegra_pcie_config_ep().
    
    Fixes: c57247f940e8 ("PCI: tegra: Add support for PCIe endpoint mode in Tegra194")
    Link: https://lore.kernel.org/r/20220602031910.55859-1-linmq006@gmail.com
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Vidya Sagar <vidyas@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0e82f95fded729dc63336819cd0ba43d250612f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri May 20 18:41:40 2022 +0200

    mtd: rawnand: meson: Fix a potential double free issue
    
    [ Upstream commit ec0da06337751b18f6dee06b6526e0f0d6e80369 ]
    
    When meson_nfc_nand_chip_cleanup() is called, it will call:
            meson_nfc_free_buffer(&meson_chip->nand);
            nand_cleanup(&meson_chip->nand);
    
    nand_cleanup() in turn will call nand_detach() which calls the
    .detach_chip() which is here meson_nand_detach_chip().
    
    meson_nand_detach_chip() already calls meson_nfc_free_buffer(), so we
    could double free some memory.
    
    Fix it by removing the unneeded explicit call to meson_nfc_free_buffer().
    
    Fixes: 8fae856c5350 ("mtd: rawnand: meson: add support for Amlogic NAND flash controller")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Liang Yang <liang.yang@amlogic.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/ec15c358b8063f7c50ff4cd628cf0d2e14e43f49.1653064877.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 941ef6997f9db704fe4fd62fc01e420fdd5048b2
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon May 23 18:32:55 2022 +0400

    mtd: maps: Fix refcount leak in ap_flash_init
    
    [ Upstream commit 77087a04c8fd554134bddcb8a9ff87b21f357926 ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: b0afd44bc192 ("mtd: physmap_of: add a hook for Versatile write protection")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220523143255.4376-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52ae2b14f76ef2d490337ddc0037bc37125be7b8
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon May 23 18:02:05 2022 +0400

    mtd: maps: Fix refcount leak in of_flash_probe_versatile
    
    [ Upstream commit 33ec82a6d2b119938f26e5c8040ed5d92378eb54 ]
    
    of_find_matching_node_and_match() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: b0afd44bc192 ("mtd: physmap_of: add a hook for Versatile write protection")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220523140205.48625-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6471c83894c1a183b3b97a345e8d989388a4f405
Author: Ralph Siemsen <ralph.siemsen@linaro.org>
Date:   Wed May 18 14:25:27 2022 -0400

    clk: renesas: r9a06g032: Fix UART clkgrp bitsel
    
    [ Upstream commit 2dee50ab9e72a3cae75b65e5934c8dd3e9bf01bc ]
    
    There are two UART clock groups, each having a mux to select its
    upstream clock source. The register/bit definitions for accessing these
    two muxes appear to have been reversed since introduction. Correct them
    so as to match the hardware manual.
    
    Fixes: 4c3d88526eba ("clk: renesas: Renesas R9A06G032 clock driver")
    
    Signed-off-by: Ralph Siemsen <ralph.siemsen@linaro.org>
    Reviewed-by: Phil Edworthy <phil.edworthy@renesas.com>
    Link: https://lore.kernel.org/r/20220518182527.1693156-1-ralph.siemsen@linaro.org
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38c9cc68e36f2cb82d4129e1e00692b76355bef6
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Tue Aug 2 14:56:12 2022 +0200

    wireguard: allowedips: don't corrupt stack when detecting overflow
    
    [ Upstream commit c31b14d86dfe7174361e8c6e5df6c2c3a4d5918c ]
    
    In case push_rcu() and related functions are buggy, there's a
    WARN_ON(len >= 128), which the selftest tries to hit by being tricky. In
    case it is hit, we shouldn't corrupt the kernel's stack, though;
    otherwise it may be hard to even receive the report that it's buggy. So
    conditionalize the stack write based on that WARN_ON()'s return value.
    
    Note that this never *actually* happens anyway. The WARN_ON() in the
    first place is bounded by IS_ENABLED(DEBUG), and isn't expected to ever
    actually hit. This is just a debugging sanity check.
    
    Additionally, hoist the constant 128 into a named enum,
    MAX_ALLOWEDIPS_BITS, so that it's clear why this value is chosen.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Link: https://lore.kernel.org/all/CAHk-=wjJZGA6w_DxA+k7Ejbqsq+uGK==koPai3sqdsfJqemvag@mail.gmail.com/
    Fixes: e7096c131e51 ("net: WireGuard secure network tunnel")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17541a4aab811593cddcd055cd9052a1bd2b206a
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Tue Aug 2 14:56:10 2022 +0200

    wireguard: ratelimiter: use hrtimer in selftest
    
    [ Upstream commit 151c8e499f4705010780189377f85b57400ccbf5 ]
    
    Using msleep() is problematic because it's compared against
    ratelimiter.c's ktime_get_coarse_boottime_ns(), which means on systems
    with slow jiffies (such as UML's forced HZ=100), the result is
    inaccurate. So switch to using schedule_hrtimeout().
    
    However, hrtimer gives us access only to the traditional posix timers,
    and none of the _COARSE variants. So now, rather than being too
    imprecise like jiffies, it's too precise.
    
    One solution would be to give it a large "range" value, but this will
    still fire early on a loaded system. A better solution is to align the
    timeout to the actual coarse timer, and then round up to the nearest
    tick, plus change.
    
    So add the timeout to the current coarse time, and then
    schedule_hrtimer() until the absolute computed time.
    
    This should hopefully reduce flakes in CI as well. Note that we keep the
    retry loop in case the entire function is running behind, because the
    test could still be scheduled out, by either the kernel or by the
    hypervisor's kernel, in which case restarting the test and hoping to not
    be scheduled out still helps.
    
    Fixes: e7096c131e51 ("net: WireGuard secure network tunnel")
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa8f5593367a4cb982500cb73c87c4615443a903
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Fri Jul 29 19:00:27 2022 +0800

    dccp: put dccp_qpolicy_full() and dccp_qpolicy_push() in the same lock
    
    [ Upstream commit a41b17ff9dacd22f5f118ee53d82da0f3e52d5e3 ]
    
    In the case of sk->dccps_qpolicy == DCCPQ_POLICY_PRIO, dccp_qpolicy_full
    will drop a skb when qpolicy is full. And the lock in dccp_sendmsg is
    released before sock_alloc_send_skb and then relocked after
    sock_alloc_send_skb. The following conditions may lead dccp_qpolicy_push
    to add skb to an already full sk_write_queue:
    
    thread1--->lock
    thread1--->dccp_qpolicy_full: queue is full. drop a skb
    thread1--->unlock
    thread2--->lock
    thread2--->dccp_qpolicy_full: queue is not full. no need to drop.
    thread2--->unlock
    thread1--->lock
    thread1--->dccp_qpolicy_push: add a skb. queue is full.
    thread1--->unlock
    thread2--->lock
    thread2--->dccp_qpolicy_push: add a skb!
    thread2--->unlock
    
    Fix this by moving dccp_qpolicy_full.
    
    Fixes: b1308dc015eb ("[DCCP]: Set TX Queue Length Bounds via Sysctl")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Link: https://lore.kernel.org/r/20220729110027.40569-1-hbh25y@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b69f34daccc416779bbbca3f87f6b24ebf0275a
Author: Jian Shen <shenjian15@huawei.com>
Date:   Fri Jul 29 18:17:55 2022 +0800

    net: ionic: fix error check for vlan flags in ionic_set_nic_features()
    
    [ Upstream commit a86e86db5e6d72c82724a63ca1c5293409a21518 ]
    
    The prototype of input features of ionic_set_nic_features() is
    netdev_features_t, but the vlan_flags is using the private
    definition of ionic drivers. It should use the variable
    ctx.cmd.lif_setattr.features, rather than features to check
    the vlan flags. So fixes it.
    
    Fixes: beead698b173 ("ionic: Add the basic NDO callbacks for netdev support")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Acked-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a070a4417660f0a2d01ee85a9914b342b0a7af8
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Jul 29 09:12:32 2022 +0000

    net: rose: fix netdev reference changes
    
    [ Upstream commit 931027820e4dafabc78aff82af59f8c1c4bd3128 ]
    
    Bernard reported that trying to unload rose module would lead
    to infamous messages:
    
    unregistered_netdevice: waiting for rose0 to become free. Usage count = xx
    
    This patch solves the issue, by making sure each socket referring to
    a netdevice holds a reference count on it, and properly releases it
    in rose_release().
    
    rose_dev_first() is also fixed to take a device reference
    before leaving the rcu_read_locked section.
    
    Following patch will add ref_tracker annotations to ease
    future bug hunting.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Bernard Pidoux <f6bvp@free.fr>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Tested-by: Bernard Pidoux <f6bvp@free.fr>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 397e52dec16839b1296a350d8a34f898f284e061
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Tue Jul 26 14:36:05 2022 -0700

    netdevsim: Avoid allocation warnings triggered from user space
    
    [ Upstream commit d0b80a9edb1a029ff913e81b47540e57ad034329 ]
    
    We need to suppress warnings from sily map sizes. Also switch
    from GFP_USER to GFP_KERNEL_ACCOUNT, I'm pretty sure I misunderstood
    the flags when writing this code.
    
    Fixes: 395cacb5f1a0 ("netdevsim: bpf: support fake map offload")
    Reported-by: syzbot+ad24705d3fd6463b18c6@syzkaller.appspotmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20220726213605.154204-1-kuba@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 692751f260996d6f48a7359e4dd2557e02192789
Author: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>
Date:   Mon Jun 13 18:41:23 2022 -0400

    iavf: Fix max_rate limiting
    
    [ Upstream commit ec60d54cb9a3d43a02c5612a03093c18233e6601 ]
    
    Fix max_rate option in TC, check for proper quanta boundaries.
    Check for minimum value provided and if it fits expected 50Mbps
    quanta.
    
    Without this patch, iavf could send settings for max_rate limiting
    that would be accepted from by PF even the max_rate option is less
    than expected 50Mbps quanta. It results in no rate limiting
    on traffic as rate limiting will be floored to 0.
    
    Example:
    tc qdisc add dev $vf root mqprio num_tc 3 map 0 2 1 queues \
    2@0 2@2 2@4 hw 1 mode channel shaper bw_rlimit \
    max_rate 50Mbps 500Mbps 500Mbps
    
    Should limit TC0 to circa 50 Mbps
    
    tc qdisc add dev $vf root mqprio num_tc 3 map 0 2 1 queues \
    2@0 2@2 2@4 hw 1 mode channel shaper bw_rlimit \
    max_rate 0Mbps 100Kbit 500Mbps
    
    Should return error
    
    Fixes: d5b33d024496 ("i40evf: add ndo_setup_tc callback to i40evf")
    Signed-off-by: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>
    Signed-off-by: Jun Zhang <xuejun.zhang@intel.com>
    Tested-by: Bharathi Sreenivas <bharathi.sreenivas@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0d67ef5b43aedbb558b9def2da5b4fffeb19966
Author: Mike Manning <mvrmanning@gmail.com>
Date:   Mon Jul 25 19:14:42 2022 +0100

    net: allow unbound socket for packets in VRF when tcp_l3mdev_accept set
    
    [ Upstream commit 944fd1aeacb627fa617f85f8e5a34f7ae8ea4d8e ]
    
    The commit 3c82a21f4320 ("net: allow binding socket in a VRF when
    there's an unbound socket") changed the inet socket lookup to avoid
    packets in a VRF from matching an unbound socket. This is to ensure the
    necessary isolation between the default and other VRFs for routing and
    forwarding. VRF-unaware processes running in the default VRF cannot
    access another VRF and have to be run with 'ip vrf exec <vrf>'. This is
    to be expected with tcp_l3mdev_accept disabled, but could be reallowed
    when this sysctl option is enabled. So instead of directly checking dif
    and sdif in inet[6]_match, here call inet_sk_bound_dev_eq(). This
    allows a match on unbound socket for non-zero sdif i.e. for packets in
    a VRF, if tcp_l3mdev_accept is enabled.
    
    Fixes: 3c82a21f4320 ("net: allow binding socket in a VRF when there's an unbound socket")
    Signed-off-by: Mike Manning <mvrmanning@gmail.com>
    Link: https://lore.kernel.org/netdev/a54c149aed38fded2d3b5fdb1a6c89e36a083b74.camel@lasnet.de/
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d9c81833dec46ccb52a1d0db970fefb7c4fa071
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Wed Jul 13 13:51:59 2022 -0700

    tcp: Fix data-races around sysctl_tcp_l3mdev_accept.
    
    [ Upstream commit 08a75f10679470552a3a443f9aefd1399604d31d ]
    
    While reading sysctl_tcp_l3mdev_accept, it can be changed concurrently.
    Thus, we need to add READ_ONCE() to its readers.
    
    Fixes: 6dd9a14e92e5 ("net: Allow accepted sockets to be bound to l3mdev domain")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0de9b3f81e01a3804e14f7e9d30c66841bc31439
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri May 13 11:55:49 2022 -0700

    ipv6: add READ_ONCE(sk->sk_bound_dev_if) in INET6_MATCH()
    
    [ Upstream commit 5d368f03280d3678433a7f119efe15dfbbb87bc8 ]
    
    INET6_MATCH() runs without holding a lock on the socket.
    
    We probably need to annotate most reads.
    
    This patch makes INET6_MATCH() an inline function
    to ease our changes.
    
    v2: inline function only defined if IS_ENABLED(CONFIG_IPV6)
        Change the name to inet6_match(), this is no longer a macro.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7325b27d8697a64858f673bbaba0741cff740cc
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri May 13 11:55:43 2022 -0700

    tcp: sk->sk_bound_dev_if once in inet_request_bound_dev_if()
    
    [ Upstream commit fdb5fd7f736ec7ae9fb36d2842ea6d9ebc4e7269 ]
    
    inet_request_bound_dev_if() reads sk->sk_bound_dev_if twice
    while listener socket is not locked.
    
    Another cpu could change this field under us.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7884d95000a01624f6b4010d8eea36d39076f8b
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu May 12 09:56:01 2022 -0700

    inet: add READ_ONCE(sk->sk_bound_dev_if) in INET_MATCH()
    
    [ Upstream commit 4915d50e300e96929d2462041d6f6c6f061167fd ]
    
    INET_MATCH() runs without holding a lock on the socket.
    
    We probably need to annotate most reads.
    
    This patch makes INET_MATCH() an inline function
    to ease our changes.
    
    v2:
    
    We remove the 32bit version of it, as modern compilers
    should generate the same code really, no need to
    try to be smarter.
    
    Also make 'struct net *net' the first argument.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c206177ca8a953d916c009eacb71ec4b81e58ecb
Author: Kai Ye <yekai13@huawei.com>
Date:   Thu Jul 21 10:18:31 2022 +0800

    crypto: hisilicon/sec - fix auth key size error
    
    [ Upstream commit 45f5d0176d8426cc1ab0bab84fbd8ef5c57526c6 ]
    
    The authentication algorithm supports a maximum of 128-byte keys.
    The allocated key memory is insufficient.
    
    Fixes: 2f072d75d1ab ("crypto: hisilicon - Add aead support on SEC2")
    Signed-off-by: Kai Ye <yekai13@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9524edb1a78218d1887c6160dd708abfba757f10
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Jul 19 09:54:03 2022 +0200

    crypto: inside-secure - Add missing MODULE_DEVICE_TABLE for of
    
    [ Upstream commit fa4d57b85786ec0e16565c75a51c208834b0c24d ]
    
    Without MODULE_DEVICE_TABLE, crypto_safexcel.ko module is not automatically
    loaded on platforms where inside-secure crypto HW is specified in device
    tree (e.g. Armada 3720). So add missing MODULE_DEVICE_TABLE for of.
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb6277507998fd7d36062c5548bf6a9bb5fa356a
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Tue Jul 19 12:23:23 2022 +0800

    crypto: hisilicon/hpre - don't use GFP_KERNEL to alloc mem during softirq
    
    [ Upstream commit 98dfa9343f37bdd4112966292751e3a93aaf2e56 ]
    
    The hpre encryption driver may be used to encrypt and decrypt packets
    during the rx softirq, it is not allowed to use GFP_KERNEL.
    
    Fixes: c8b4b477079d ("crypto: hisilicon - add HiSilicon HPRE accelerator")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6cbd15950cf7a6c60d92029f644301e5e6623a7
Author: Maxim Mikityanskiy <maximmi@nvidia.com>
Date:   Thu May 26 16:48:47 2022 +0300

    net/mlx5e: Fix the value of MLX5E_MAX_RQ_NUM_MTTS
    
    [ Upstream commit 562696c3c62c7c23dd896e9447252ce9268cb812 ]
    
    MLX5E_MAX_RQ_NUM_MTTS should be the maximum value, so that
    MLX5_MTT_OCTW(MLX5E_MAX_RQ_NUM_MTTS) fits into u16. The current value of
    1 << 17 results in MLX5_MTT_OCTW(1 << 17) = 1 << 16, which doesn't fit
    into u16. This commit replaces it with the maximum value that still
    fits u16.
    
    Fixes: 73281b78a37a ("net/mlx5e: Derive Striding RQ size from MTU")
    Signed-off-by: Maxim Mikityanskiy <maximmi@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f7ffdea19f2fe38179d7ae2c0c6d8182e874308
Author: Gal Pressman <gal@nvidia.com>
Date:   Wed Jul 13 13:57:03 2022 +0300

    net/mlx5e: Remove WARN_ON when trying to offload an unsupported TLS cipher/version
    
    [ Upstream commit 115d9f95ea7ab780ef315dc356bebba2e07cb731 ]
    
    The driver reports whether TX/RX TLS device offloads are supported, but
    not which ciphers/versions, these should be handled by returning
    -EOPNOTSUPP when .tls_dev_add() is called.
    
    Remove the WARN_ON kernel trace when the driver gets a request to
    offload a cipher/version that is not supported as it is expected.
    
    Fixes: d2ead1f360e8 ("net/mlx5e: Add kTLS TX HW offload support")
    Signed-off-by: Gal Pressman <gal@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Reviewed-by: Maxim Mikityanskiy <maximmi@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 420cf3b781b2033e830c7fce47cae5462a28ea42
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Mon Jul 18 18:56:49 2022 +0200

    media: cedrus: hevc: Add check for invalid timestamp
    
    [ Upstream commit 143201a6435bf65f0115435e9dc6d95c66b908e9 ]
    
    Not all DPB entries will be used most of the time. Unused entries will
    thus have invalid timestamps. They will produce negative buffer index
    which is not specifically handled. This works just by chance in current
    code. It will even produce bogus pointer, but since it's not used, it
    won't do any harm.
    
    Let's fix that brittle design by skipping writing DPB entry altogether
    if timestamp is invalid.
    
    Fixes: 86caab29da78 ("media: cedrus: Add HEVC/H.265 decoding support")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97e5d3e46a3a2100253a9717a4df98d68aeb10b8
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Mon Jun 20 17:23:50 2022 +0800

    wifi: libertas: Fix possible refcount leak in if_usb_probe()
    
    [ Upstream commit 6fd57e1d120bf13d4dc6c200a7cf914e6347a316 ]
    
    usb_get_dev will be called before lbs_get_firmware_async which means that
    usb_put_dev need to be called when lbs_get_firmware_async fails.
    
    Fixes: ce84bb69f50e ("libertas USB: convert to asynchronous firmware loading")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220620092350.39960-1-hbh25y@gmail.com
    Link: https://lore.kernel.org/r/20220622113402.16969-1-colin.i.king@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38d71acc15a2e72806b516380af0adb3830d4639
Author: Jose Ignacio Tornos Martinez <jtornosm@redhat.com>
Date:   Tue Jul 19 17:35:42 2022 +0200

    wifi: iwlwifi: mvm: fix double list_add at iwl_mvm_mac_wake_tx_queue
    
    [ Upstream commit 14a3aacf517a9de725dd3219dbbcf741e31763c4 ]
    
    After successfull station association, if station queues are disabled for
    some reason, the related lists are not emptied. So if some new element is
    added to the list in iwl_mvm_mac_wake_tx_queue, it can match with the old
    one and produce a BUG like this:
    
    [   46.535263] list_add corruption. prev->next should be next (ffff94c1c318a360), but was 0000000000000000. (prev=ffff94c1d02d3388).
    [   46.535283] ------------[ cut here ]------------
    [   46.535284] kernel BUG at lib/list_debug.c:26!
    [   46.535290] invalid opcode: 0000 [#1] PREEMPT SMP PTI
    [   46.585304] CPU: 0 PID: 623 Comm: wpa_supplicant Not tainted 5.19.0-rc3+ #1
    [   46.592380] Hardware name: Dell Inc. Inspiron 660s/0478VN       , BIOS A07 08/24/2012
    [   46.600336] RIP: 0010:__list_add_valid.cold+0x3d/0x3f
    [   46.605475] Code: f2 4c 89 c1 48 89 fe 48 c7 c7 c8 40 67 93 e8 20 cc fd ff 0f 0b 48 89 d1 4c 89 c6 4c 89 ca 48 c7 c7 70 40 67 93 e8 09 cc fd ff <0f> 0b 48 89 fe 48 c7 c7 00 41 67 93 e8 f8 cb fd ff 0f 0b 48 89 d1
    [   46.624469] RSP: 0018:ffffb20800ab76d8 EFLAGS: 00010286
    [   46.629854] RAX: 0000000000000075 RBX: ffff94c1c318a0e0 RCX: 0000000000000000
    [   46.637105] RDX: 0000000000000201 RSI: ffffffff9365e100 RDI: 00000000ffffffff
    [   46.644356] RBP: ffff94c1c5f43370 R08: 0000000000000075 R09: 3064316334396666
    [   46.651607] R10: 3364323064316334 R11: 39666666663d7665 R12: ffff94c1c5f43388
    [   46.658857] R13: ffff94c1d02d3388 R14: ffff94c1c318a360 R15: ffff94c1cf2289c0
    [   46.666108] FS:  00007f65634ff7c0(0000) GS:ffff94c1da200000(0000) knlGS:0000000000000000
    [   46.674331] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   46.680170] CR2: 00007f7dfe984460 CR3: 000000010e894003 CR4: 00000000000606f0
    [   46.687422] Call Trace:
    [   46.689906]  <TASK>
    [   46.691950]  iwl_mvm_mac_wake_tx_queue+0xec/0x15c [iwlmvm]
    [   46.697601]  ieee80211_queue_skb+0x4b3/0x720 [mac80211]
    [   46.702973]  ? sta_info_get+0x46/0x60 [mac80211]
    [   46.707703]  ieee80211_tx+0xad/0x110 [mac80211]
    [   46.712355]  __ieee80211_tx_skb_tid_band+0x71/0x90 [mac80211]
    ...
    
    In order to avoid this problem, we must also remove the related lists when
    station queues are disabled.
    
    Fixes: cfbc6c4c5b91c ("iwlwifi: mvm: support mac80211 TXQs model")
    Reported-by: Takayuki Nagata <tnagata@redhat.com>
    Reported-by: Petr Stourac <pstourac@redhat.com>
    Tested-by: Petr Stourac <pstourac@redhat.com>
    Signed-off-by: Jose Ignacio Tornos Martinez <jtornosm@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220719153542.81466-1-jtornosm@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c5fee83bdbeffe8d607d1ab125122a75f40bd1a
Author: Ammar Faizi <ammarfaizi2@gnuweeb.org>
Date:   Mon Jul 25 20:49:11 2022 +0300

    wifi: wil6210: debugfs: fix uninitialized variable use in `wil_write_file_wmi()`
    
    [ Upstream commit d578e0af3a003736f6c440188b156483d451b329 ]
    
    Commit 7a4836560a61 changes simple_write_to_buffer() with memdup_user()
    but it forgets to change the value to be returned that came from
    simple_write_to_buffer() call. It results in the following warning:
    
      warning: variable 'rc' is uninitialized when used here [-Wuninitialized]
               return rc;
                      ^~
    
    Remove rc variable and just return the passed in length if the
    memdup_user() succeeds.
    
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 7a4836560a6198d245d5732e26f94898b12eb760 ("wifi: wil6210: debugfs: fix info leak in wil_write_file_wmi()")
    Fixes: ff974e4083341383d3dd4079e52ed30f57f376f0 ("wil6210: debugfs interface to send raw WMI command")
    Signed-off-by: Ammar Faizi <ammarfaizi2@gnuweeb.org>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220724202452.61846-1-ammar.faizi@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c040a02e4c2172a9f482ea8509a5222bb4ecadf4
Author: Liang He <windhl@126.com>
Date:   Fri Jul 22 09:24:01 2022 +0800

    i2c: mux-gpmux: Add of_node_put() when breaking out of loop
    
    [ Upstream commit 6435319c34704994e19b0767f6a4e6f37439867b ]
    
    In i2c_mux_probe(), we should call of_node_put() when breaking out
    of for_each_child_of_node() which will automatically increase and
    decrease the refcount.
    
    Fixes: ac8498f0ce53 ("i2c: i2c-mux-gpmux: new driver")
    Signed-off-by: Liang He <windhl@126.com>
    Acked-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 353d55ff1bfc90cf1f36de89e8655182d9ae06c8
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Jul 17 16:52:44 2022 +0200

    i2c: cadence: Support PEC for SMBus block read
    
    [ Upstream commit 9fdf6d97f03035ad5298e2d1635036c74c2090ed ]
    
    SMBus packet error checking (PEC) is implemented by appending one
    additional byte of checksum data at the end of the message. This provides
    additional protection and allows to detect data corruption on the I2C bus.
    
    SMBus block reads support variable length reads. The first byte in the read
    message is the number of available data bytes.
    
    The combination of PEC and block read is currently not supported by the
    Cadence I2C driver.
     * When PEC is enabled the maximum transfer length for block reads
       increases from 33 to 34 bytes.
     * The I2C core smbus emulation layer relies on the driver updating the
       `i2c_msg` `len` field with the number of received bytes. The updated
       length is used when checking the PEC.
    
    Add support to the Cadence I2C driver for handling SMBus block reads with
    PEC. To determine the maximum transfer length uses the initial `len` value
    of the `i2c_msg`. When PEC is enabled this will be 2, when it is disabled
    it will be 1.
    
    Once a read transfer is done also increment the `len` field by the amount
    of received data bytes.
    
    This change has been tested with a UCM90320 PMBus power monitor, which
    requires block reads to access certain data fields, but also has PEC
    enabled by default.
    
    Fixes: df8eb5691c48 ("i2c: Add driver for Cadence I2C controller")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Tested-by: Shubhrajyoti Datta <Shubhrajyoti.datta@amd.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c5dbac1ce7f82db4472b47e73654a8856fb707a
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Jun 3 09:24:36 2022 +0800

    Bluetooth: hci_intel: Add check for platform_driver_register
    
    [ Upstream commit ab2d2a982ff721f4b029282d9a40602ea46a745e ]
    
    As platform_driver_register() could fail, it should be better
    to deal with the return value in order to maintain the code
    consisitency.
    
    Fixes: 1ab1f239bf17 ("Bluetooth: hci_intel: Add support for platform driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7a7488cb15a8ff3af6185907a44ac7c8d8c50c1
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Fri Jul 22 01:00:32 2022 +0900

    can: pch_can: pch_can_error(): initialize errc before using it
    
    [ Upstream commit 9950f11211331180269867aef848c7cf56861742 ]
    
    After commit 3a5c7e4611dd, the variable errc is accessed before being
    initialized, c.f. below W=2 warning:
    
    | In function 'pch_can_error',
    |     inlined from 'pch_can_poll' at drivers/net/can/pch_can.c:739:4:
    | drivers/net/can/pch_can.c:501:29: warning: 'errc' may be used uninitialized [-Wmaybe-uninitialized]
    |   501 |                 cf->data[6] = errc & PCH_TEC;
    |       |                             ^
    | drivers/net/can/pch_can.c: In function 'pch_can_poll':
    | drivers/net/can/pch_can.c:484:13: note: 'errc' was declared here
    |   484 |         u32 errc, lec;
    |       |             ^~~~
    
    Moving errc initialization up solves this issue.
    
    Fixes: 3a5c7e4611dd ("can: pch_can: do not report txerr and rxerr during bus-off")
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/all/20220721160032.9348-1-mailhol.vincent@wanadoo.fr
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c036be75774afb0f0c98632d05c318c01da5632
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:48 2022 +0900

    can: error: specify the values of data[5..7] of CAN error frames
    
    [ Upstream commit e70a3263a7eed768d5f947b8f2aff8d2a79c9d97 ]
    
    Currently, data[5..7] of struct can_frame, when used as a CAN error
    frame, are defined as being "controller specific". Device specific
    behaviours are problematic because it prevents someone from writing
    code which is portable between devices.
    
    As a matter of fact, data[5] is never used, data[6] is always used to
    report TX error counter and data[7] is always used to report RX error
    counter. can-utils also relies on this.
    
    This patch updates the comment in the uapi header to specify that
    data[5] is reserved (and thus should not be used) and that data[6..7]
    are used for error counters.
    
    Fixes: 0d66548a10cb ("[CAN]: Add PF_CAN core module")
    Link: https://lore.kernel.org/all/20220719143550.3681-11-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0ef21b73978495e060dc37ca2b134b5036c6d0e
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:47 2022 +0900

    can: usb_8dev: do not report txerr and rxerr during bus-off
    
    [ Upstream commit aebe8a2433cd090ccdc222861f44bddb75eb01de ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: 0024d8ad1639 ("can: usb_8dev: Add support for USB2CAN interface from 8 devices")
    Link: https://lore.kernel.org/all/20220719143550.3681-10-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca1a2c5388345fccee9a2f9d13fdc4aa52b955bb
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:46 2022 +0900

    can: kvaser_usb_leaf: do not report txerr and rxerr during bus-off
    
    [ Upstream commit a57732084e06791d37ea1ea447cca46220737abd ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: 7259124eac7d1 ("can: kvaser_usb: Split driver into kvaser_usb_core.c and kvaser_usb_leaf.c")
    Link: https://lore.kernel.org/all/20220719143550.3681-9-mailhol.vincent@wanadoo.fr
    CC: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e6ceba6be36dad28695790c6bfe334957515d34
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:45 2022 +0900

    can: kvaser_usb_hydra: do not report txerr and rxerr during bus-off
    
    [ Upstream commit 936e90595376e64b6247c72d3ea8b8b164b7ac96 ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: aec5fb2268b7 ("can: kvaser_usb: Add support for Kvaser USB hydra family")
    Link: https://lore.kernel.org/all/20220719143550.3681-8-mailhol.vincent@wanadoo.fr
    CC: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cddef4bbebea18bcbfde1bbe7ea13ddb5c947aad
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:44 2022 +0900

    can: sun4i_can: do not report txerr and rxerr during bus-off
    
    [ Upstream commit 0ac15a8f661b941519379831d09bfb12271b23ee ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: 0738eff14d81 ("can: Allwinner A10/A20 CAN Controller support - Kernel module")
    Link: https://lore.kernel.org/all/20220719143550.3681-7-mailhol.vincent@wanadoo.fr
    CC: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22e382d47de09e865a9214cc5c9f99256e65deaa
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:43 2022 +0900

    can: hi311x: do not report txerr and rxerr during bus-off
    
    [ Upstream commit a22bd630cfff496b270211745536e50e98eb3a45 ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: 57e83fb9b746 ("can: hi311x: Add Holt HI-311x CAN driver")
    Link: https://lore.kernel.org/all/20220719143550.3681-6-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06e355b46c30a81cc58b31ad7e068dd54ef6d402
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:41 2022 +0900

    can: sja1000: do not report txerr and rxerr during bus-off
    
    [ Upstream commit 164d7cb2d5a30f1b3a5ab4fab1a27731fb1494a8 ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: 215db1856e83 ("can: sja1000: Consolidate and unify state change handling")
    Link: https://lore.kernel.org/all/20220719143550.3681-4-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ec509679beb2fd6c6616c6958efb58cece0bcf3
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:40 2022 +0900

    can: rcar_can: do not report txerr and rxerr during bus-off
    
    [ Upstream commit a37b7245e831a641df360ca41db6a71c023d3746 ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: fd1159318e55 ("can: add Renesas R-Car CAN driver")
    Link: https://lore.kernel.org/all/20220719143550.3681-3-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d85a89875e87e6cb783e81bef7d5416b6ee1b4c
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Tue Jul 19 23:35:39 2022 +0900

    can: pch_can: do not report txerr and rxerr during bus-off
    
    [ Upstream commit 3a5c7e4611ddcf0ef37a3a17296b964d986161a6 ]
    
    During bus off, the error count is greater than 255 and can not fit in
    a u8.
    
    Fixes: 0c78ab76a05c ("pch_can: Add setting TEC/REC statistics processing")
    Link: https://lore.kernel.org/all/20220719143550.3681-2-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2b9e664bbfd06fb4b4b2d2a61f578771adc072f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jul 19 12:50:32 2022 +0300

    selftests/bpf: fix a test for snprintf() overflow
    
    [ Upstream commit c5d22f4cfe8dfb93f1db0a1e7e2e7ebc41395d98 ]
    
    The snprintf() function returns the number of bytes which *would*
    have been copied if there were space.  In other words, it can be
    > sizeof(pin_path).
    
    Fixes: c0fa1b6c3efc ("bpf: btf: Add BTF tests")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/r/YtZ+aD/tZMkgOUw+@kili
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a06c98c47e45ab0ee53545b5f16fc20ccb5739c7
Author: Rustam Subkhankulov <subkhankulov@ispras.ru>
Date:   Thu Jul 14 16:48:31 2022 +0300

    wifi: p54: add missing parentheses in p54_flush()
    
    [ Upstream commit bcfd9d7f6840b06d5988c7141127795cf405805e ]
    
    The assignment of the value to the variable total in the loop
    condition must be enclosed in additional parentheses, since otherwise,
    in accordance with the precedence of the operators, the conjunction
    will be performed first, and only then the assignment.
    
    Due to this error, a warning later in the function after the loop may
    not occur in the situation when it should.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Signed-off-by: Rustam Subkhankulov <subkhankulov@ispras.ru>
    Fixes: 0d4171e2153b ("p54: implement flush callback")
    Acked-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220714134831.106004-1-subkhankulov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56924fc19d31d39107c15d7196730779ca9b35b4
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jun 12 23:12:20 2022 +0200

    wifi: p54: Fix an error handling path in p54spi_probe()
    
    [ Upstream commit 83781f0162d080fec7dcb911afd1bc2f5ad04471 ]
    
    If an error occurs after a successful call to p54spi_request_firmware(), it
    must be undone by a corresponding release_firmware() as already done in
    the error handling path of p54spi_request_firmware() and in the .remove()
    function.
    
    Add the missing call in the error handling path and remove it from
    p54spi_request_firmware() now that it is the responsibility of the caller
    to release the firmware
    
    Fixes: cd8d3d321285 ("p54spi: p54spi driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/297d2547ff2ee627731662abceeab9dbdaf23231.1655068321.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05ceda14ef7c73104e709c414c3680d8a59f51d4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jul 15 13:35:18 2022 +0300

    wifi: wil6210: debugfs: fix info leak in wil_write_file_wmi()
    
    [ Upstream commit 7a4836560a6198d245d5732e26f94898b12eb760 ]
    
    The simple_write_to_buffer() function will succeed if even a single
    byte is initialized.  However, we need to initialize the whole buffer
    to prevent information leaks.  Just use memdup_user().
    
    Fixes: ff974e408334 ("wil6210: debugfs interface to send raw WMI command")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/Ysg14NdKAZF/hcNG@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36ba38996001ffc0690c79f74a6daad0ea4dae7e
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Wed Jun 29 15:06:58 2022 +0200

    fs: check FMODE_LSEEK to control internal pipe splicing
    
    [ Upstream commit 97ef77c52b789ec1411d360ed99dca1efe4b2c81 ]
    
    The original direct splicing mechanism from Jens required the input to
    be a regular file because it was avoiding the special socket case. It
    also recognized blkdevs as being close enough to a regular file. But it
    forgot about chardevs, which behave the same way and work fine here.
    
    This is an okayish heuristic, but it doesn't totally work. For example,
    a few chardevs should be spliceable here. And a few regular files
    shouldn't. This patch fixes this by instead checking whether FMODE_LSEEK
    is set, which represents decently enough what we need rewinding for when
    splicing to internal pipes.
    
    Fixes: b92ce5589374 ("[PATCH] splice: add direct fd <-> fd splicing support")
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7430e587643af437058ce0b92545dedf0a07957b
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Thu Jul 14 14:16:37 2022 -0700

    bpf: Fix subprog names in stack traces.
    
    [ Upstream commit 9c7c48d6a1e2eb5192ad5294c1c4dbd42a88e88b ]
    
    The commit 7337224fc150 ("bpf: Improve the info.func_info and info.func_info_rec_size behavior")
    accidently made bpf_prog_ksym_set_name() conservative for bpf subprograms.
    Fixed it so instead of "bpf_prog_tag_F" the stack traces print "bpf_prog_tag_full_subprog_name".
    
    Fixes: 7337224fc150 ("bpf: Improve the info.func_info and info.func_info_rec_size behavior")
    Reported-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20220714211637.17150-1-alexei.starovoitov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 990ca39e78cf4005168d15547a8236b835ed0597
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Wed Jul 13 22:46:17 2022 +0200

    selftests: timers: clocksource-switch: fix passing errors from child
    
    [ Upstream commit 4d8f52ac5fa9eede7b7aa2f2d67c841d9eeb655f ]
    
    The return value from system() is a waitpid-style integer. Do not return
    it directly because with the implicit masking in exit() it will always
    return 0. Access it with appropriate macros to really pass on errors.
    
    Fixes: 7290ce1423c3 ("selftests/timers: Add clocksource-switch test from timetest suite")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Acked-by: John Stultz <jstultz@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee3cc4c7612143bfa731725180c42e58afb70c35
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Wed Jul 13 22:46:13 2022 +0200

    selftests: timers: valid-adjtimex: build fix for newer toolchains
    
    [ Upstream commit 9a162977d20436be5678a8e21a8e58eb4616d86a ]
    
    Toolchains with an include file 'sys/timex.h' based on 3.18 will have a
    'clock_adjtime' definition added, so it can't be static in the code:
    
    valid-adjtimex.c:43:12: error: static declaration of ‘clock_adjtime’ follows non-static declaration
    
    Fixes: e03a58c320e1 ("kselftests: timers: Add adjtimex SETOFFSET validity tests")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Acked-by: John Stultz <jstultz@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f29cf37698db9c85808880108b718bcb45f018b8
Author: Anquan Wu <leiqi96@hotmail.com>
Date:   Tue Jul 12 11:15:40 2022 +0800

    libbpf: Fix the name of a reused map
    
    [ Upstream commit bf3f00378524adae16628cbadbd11ba7211863bb ]
    
    BPF map name is limited to BPF_OBJ_NAME_LEN.
    A map name is defined as being longer than BPF_OBJ_NAME_LEN,
    it will be truncated to BPF_OBJ_NAME_LEN when a userspace program
    calls libbpf to create the map. A pinned map also generates a path
    in the /sys. If the previous program wanted to reuse the map，
    it can not get bpf_map by name, because the name of the map is only
    partially the same as the name which get from pinned path.
    
    The syscall information below show that map name "process_pinned_map"
    is truncated to "process_pinned_".
    
        bpf(BPF_OBJ_GET, {pathname="/sys/fs/bpf/process_pinned_map",
        bpf_fd=0, file_flags=0}, 144) = -1 ENOENT (No such file or directory)
    
        bpf(BPF_MAP_CREATE, {map_type=BPF_MAP_TYPE_HASH, key_size=4,
        value_size=4,max_entries=1024, map_flags=0, inner_map_fd=0,
        map_name="process_pinned_",map_ifindex=0, btf_fd=3, btf_key_type_id=6,
        btf_value_type_id=10,btf_vmlinux_value_type_id=0}, 72) = 4
    
    This patch check that if the name of pinned map are the same as the
    actual name for the first (BPF_OBJ_NAME_LEN - 1),
    bpf map still uses the name which is included in bpf object.
    
    Fixes: 26736eb9a483 ("tools: libbpf: allow map reuse")
    Signed-off-by: Anquan Wu <leiqi96@hotmail.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/OSZP286MB1725CEA1C95C5CB8E7CCC53FB8869@OSZP286MB1725.JPNP286.PROD.OUTLOOK.COM
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 799cfed1b1a84d22581c44954d8ba7df03e8c93b
Author: Yonglong Li <liyonglong@chinatelecom.cn>
Date:   Mon Jul 11 17:47:18 2022 +0800

    tcp: make retransmitted SKB fit into the send window
    
    [ Upstream commit 536a6c8e05f95e3d1118c40ae8b3022ee2d05d52 ]
    
    current code of __tcp_retransmit_skb only check TCP_SKB_CB(skb)->seq
    in send window, and TCP_SKB_CB(skb)->seq_end maybe out of send window.
    If receiver has shrunk his window, and skb is out of new window,  it
    should retransmit a smaller portion of the payload.
    
    test packetdrill script:
        0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
       +0 fcntl(3, F_GETFL) = 0x2 (flags O_RDWR)
       +0 fcntl(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0
    
       +0 connect(3, ..., ...) = -1 EINPROGRESS (Operation now in progress)
       +0 > S 0:0(0)  win 65535 <mss 1460,sackOK,TS val 100 ecr 0,nop,wscale 8>
     +.05 < S. 0:0(0) ack 1 win 6000 <mss 1000,nop,nop,sackOK>
       +0 > . 1:1(0) ack 1
    
       +0 write(3, ..., 10000) = 10000
    
       +0 > . 1:2001(2000) ack 1 win 65535
       +0 > . 2001:4001(2000) ack 1 win 65535
       +0 > . 4001:6001(2000) ack 1 win 65535
    
     +.05 < . 1:1(0) ack 4001 win 1001
    
    and tcpdump show:
    192.168.226.67.55 > 192.0.2.1.8080: Flags [.], seq 1:2001, ack 1, win 65535, length 2000
    192.168.226.67.55 > 192.0.2.1.8080: Flags [.], seq 2001:4001, ack 1, win 65535, length 2000
    192.168.226.67.55 > 192.0.2.1.8080: Flags [P.], seq 4001:5001, ack 1, win 65535, length 1000
    192.168.226.67.55 > 192.0.2.1.8080: Flags [.], seq 5001:6001, ack 1, win 65535, length 1000
    192.0.2.1.8080 > 192.168.226.67.55: Flags [.], ack 4001, win 1001, length 0
    192.168.226.67.55 > 192.0.2.1.8080: Flags [.], seq 5001:6001, ack 1, win 65535, length 1000
    192.168.226.67.55 > 192.0.2.1.8080: Flags [P.], seq 4001:5001, ack 1, win 65535, length 1000
    
    when cient retract window to 1001, send window is [4001,5002],
    but TLP send 5001-6001 packet which is out of send window.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yonglong Li <liyonglong@chinatelecom.cn>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/1657532838-20200-1-git-send-email-liyonglong@chinatelecom.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5713b0be6dd94210413404dd8a71a40bb83654b1
Author: Jian Zhang <zhangjian210@huawei.com>
Date:   Tue Jul 12 13:56:11 2022 +0900

    drm/exynos/exynos7_drm_decon: free resources when clk_set_parent() failed.
    
    [ Upstream commit 48b927770f8ad3f8cf4a024a552abf272af9f592 ]
    
    In exynos7_decon_resume, When it fails, we must use clk_disable_unprepare()
    to free resource that have been used.
    
    Fixes: 6f83d20838c09 ("drm/exynos: use DRM_DEV_ERROR to print out error
    message")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Jian Zhang <zhangjian210@huawei.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9aa4ad5ccabcfc906c77dbc7d0e2b2c28f1357c6
Author: Liang He <windhl@126.com>
Date:   Mon Jul 4 16:34:20 2022 +0800

    mediatek: mt76: mac80211: Fix missing of_node_put() in mt76_led_init()
    
    [ Upstream commit 0a14c1d0113f121151edf34333cdf212dd209190 ]
    
    We should use of_node_put() for the reference 'np' returned by
    of_get_child_by_name() which will increase the refcount.
    
    Fixes: 17f1de56df05 ("mt76: add common code shared between multiple chipsets")
    Signed-off-by: Liang He <windhl@126.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ad958bc488e3ecb0207d31621c00efb86f17482
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue May 17 18:37:07 2022 +0200

    mt76: mt76x02u: fix possible memory leak in __mt76x02u_mcu_send_msg
    
    [ Upstream commit cffd93411575afd987788e2ec3cb8eaff70f0215 ]
    
    Free the skb if mt76u_bulk_msg fails in __mt76x02u_mcu_send_msg routine.
    
    Fixes: 4c89ff2c74e39 ("mt76: split __mt76u_mcu_send_msg and mt76u_mcu_send_msg routines")
    Co-developed-by: Gergo Koteles <soyer@irl.hu>
    Signed-off-by: Gergo Koteles <soyer@irl.hu>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1812f6500ddaf5e707af0ce6fdcd956481e8958
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Thu Jun 23 14:55:46 2022 +0100

    media: platform: mtk-mdp: Fix mdp_ipi_comm structure alignment
    
    [ Upstream commit ab14c99c035da7156a3b66fa171171295bc4b89a ]
    
    The mdp_ipi_comm structure defines a command that is either
    PROCESS (start processing) or DEINIT (destroy instance); we
    are using this one to send PROCESS or DEINIT commands from Linux
    to an MDP instance through a VPU write but, while the first wants
    us to stay 4-bytes aligned, the VPU instead requires an 8-bytes
    data alignment.
    
    Keeping in mind that these commands are executed immediately
    after sending them (hence not chained with others before the
    VPU/MDP "actually" start executing), it is fine to simply add
    a padding of 4 bytes to this structure: this keeps the same
    performance as before, as we're still stack-allocating it,
    while avoiding hackery inside of mtk-vpu to ensure alignment
    bringing a definitely bigger performance impact.
    
    Fixes: c8eb2d7e8202 ("[media] media: Add Mediatek MDP Driver")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Houlong Wei <houlong.wei@mediatek.com>
    Reviewed-by: Irui Wang <irui.wang@mediatek.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1008c6d98b6de0a75b5a1376be6594d613a5e3a5
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Fri Jul 1 09:59:54 2022 +0800

    crypto: hisilicon - Kunpeng916 crypto driver don't sleep when in softirq
    
    [ Upstream commit 68740ab505431f268dc1ee26a54b871e75f0ddaa ]
    
    When kunpeng916 encryption driver is used to deencrypt and decrypt
    packets during the softirq, it is not allowed to use mutex lock.
    
    Fixes: 915e4e8413da ("crypto: hisilicon - SEC security accelerator driver")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16e18a8ac7c9748cf35a8d2f0ba2c6e8850e7568
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Fri Jul 1 09:55:11 2022 +0800

    crypto: hisilicon/sec - don't sleep when in softirq
    
    [ Upstream commit 02884a4f12de11f54d4ca67a07dd1f111d96fdbd ]
    
    When kunpeng920 encryption driver is used to deencrypt and decrypt
    packets during the softirq, it is not allowed to use mutex lock. The
    kernel will report the following error:
    
    BUG: scheduling while atomic: swapper/57/0/0x00000300
    Call trace:
    dump_backtrace+0x0/0x1e4
    show_stack+0x20/0x2c
    dump_stack+0xd8/0x140
    __schedule_bug+0x68/0x80
    __schedule+0x728/0x840
    schedule+0x50/0xe0
    schedule_preempt_disabled+0x18/0x24
    __mutex_lock.constprop.0+0x594/0x5dc
    __mutex_lock_slowpath+0x1c/0x30
    mutex_lock+0x50/0x60
    sec_request_init+0x8c/0x1a0 [hisi_sec2]
    sec_process+0x28/0x1ac [hisi_sec2]
    sec_skcipher_crypto+0xf4/0x1d4 [hisi_sec2]
    sec_skcipher_encrypt+0x1c/0x30 [hisi_sec2]
    crypto_skcipher_encrypt+0x2c/0x40
    crypto_authenc_encrypt+0xc8/0xfc [authenc]
    crypto_aead_encrypt+0x2c/0x40
    echainiv_encrypt+0x144/0x1a0 [echainiv]
    crypto_aead_encrypt+0x2c/0x40
    esp_output_tail+0x348/0x5c0 [esp4]
    esp_output+0x120/0x19c [esp4]
    xfrm_output_one+0x25c/0x4d4
    xfrm_output_resume+0x6c/0x1fc
    xfrm_output+0xac/0x3c0
    xfrm4_output+0x64/0x130
    ip_build_and_send_pkt+0x158/0x20c
    tcp_v4_send_synack+0xdc/0x1f0
    tcp_conn_request+0x7d0/0x994
    tcp_v4_conn_request+0x58/0x6c
    tcp_v6_conn_request+0xf0/0x100
    tcp_rcv_state_process+0x1cc/0xd60
    tcp_v4_do_rcv+0x10c/0x250
    tcp_v4_rcv+0xfc4/0x10a4
    ip_protocol_deliver_rcu+0xf4/0x200
    ip_local_deliver_finish+0x58/0x70
    ip_local_deliver+0x68/0x120
    ip_sublist_rcv_finish+0x70/0x94
    ip_list_rcv_finish.constprop.0+0x17c/0x1d0
    ip_sublist_rcv+0x40/0xb0
    ip_list_rcv+0x140/0x1dc
    __netif_receive_skb_list_core+0x154/0x28c
    __netif_receive_skb_list+0x120/0x1a0
    netif_receive_skb_list_internal+0xe4/0x1f0
    napi_complete_done+0x70/0x1f0
    gro_cell_poll+0x9c/0xb0
    napi_poll+0xcc/0x264
    net_rx_action+0xd4/0x21c
    __do_softirq+0x130/0x358
    irq_exit+0x11c/0x13c
    __handle_domain_irq+0x88/0xf0
    gic_handle_irq+0x78/0x2c0
    el1_irq+0xb8/0x140
    arch_cpu_idle+0x18/0x40
    default_idle_call+0x5c/0x1c0
    cpuidle_idle_call+0x174/0x1b0
    do_idle+0xc8/0x160
    cpu_startup_entry+0x30/0x11c
    secondary_start_kernel+0x158/0x1e4
    softirq: huh, entered softirq 3 NET_RX 0000000093774ee4 with
    preempt_count 00000100, exited with fffffe00?
    
    Fixes: 416d82204df4 ("crypto: hisilicon - add HiSilicon SEC V2 driver")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f697d7952904a71e35e8222cda88d85d057aa7f
Author: Longfang Liu <liulongfang@huawei.com>
Date:   Sat Mar 13 15:28:24 2021 +0800

    crypto: hisilicon/sec - fixes some coding style
    
    [ Upstream commit a44dce504bce620daff97a3e77650b7b579e8753 ]
    
    1.delete the original complex method of obtaining the
    current device and replace it with the initialized
    device pointer.
    2.fixes some coding style
    
    Signed-off-by: Longfang Liu <liulongfang@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf386c955f35a0a01bef482b6035d40ff2f6cc75
Author: Rob Clark <robdclark@chromium.org>
Date:   Thu Jul 7 09:20:37 2022 -0700

    drm/msm/mdp5: Fix global state lock backoff
    
    [ Upstream commit 92ef86ab513593c6329d04146e61f9a670e72fc5 ]
    
    We need to grab the lock after the early return for !hwpipe case.
    Otherwise, we could have hit contention yet still returned 0.
    
    Fixes an issue that the new CONFIG_DRM_DEBUG_MODESET_LOCK stuff flagged
    in CI:
    
       WARNING: CPU: 0 PID: 282 at drivers/gpu/drm/drm_modeset_lock.c:296 drm_modeset_lock+0xf8/0x154
       Modules linked in:
       CPU: 0 PID: 282 Comm: kms_cursor_lega Tainted: G        W         5.19.0-rc2-15930-g875cc8bc536a #1
       Hardware name: Qualcomm Technologies, Inc. DB820c (DT)
       pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
       pc : drm_modeset_lock+0xf8/0x154
       lr : drm_atomic_get_private_obj_state+0x84/0x170
       sp : ffff80000cfab6a0
       x29: ffff80000cfab6a0 x28: 0000000000000000 x27: ffff000083bc4d00
       x26: 0000000000000038 x25: 0000000000000000 x24: ffff80000957ca58
       x23: 0000000000000000 x22: ffff000081ace080 x21: 0000000000000001
       x20: ffff000081acec18 x19: ffff80000cfabb80 x18: 0000000000000038
       x17: 0000000000000000 x16: 0000000000000000 x15: fffffffffffea0d0
       x14: 0000000000000000 x13: 284e4f5f4e524157 x12: 5f534b434f4c5f47
       x11: ffff80000a386aa8 x10: 0000000000000029 x9 : ffff80000cfab610
       x8 : 0000000000000029 x7 : 0000000000000014 x6 : 0000000000000000
       x5 : 0000000000000001 x4 : ffff8000081ad904 x3 : 0000000000000029
       x2 : ffff0000801db4c0 x1 : ffff80000cfabb80 x0 : ffff000081aceb58
       Call trace:
        drm_modeset_lock+0xf8/0x154
        drm_atomic_get_private_obj_state+0x84/0x170
        mdp5_get_global_state+0x54/0x6c
        mdp5_pipe_release+0x2c/0xd4
        mdp5_plane_atomic_check+0x2ec/0x414
        drm_atomic_helper_check_planes+0xd8/0x210
        drm_atomic_helper_check+0x54/0xb0
        ...
       ---[ end trace 0000000000000000 ]---
       drm_modeset_lock attempting to lock a contended lock without backoff:
          drm_modeset_lock+0x148/0x154
          mdp5_get_global_state+0x30/0x6c
          mdp5_pipe_release+0x2c/0xd4
          mdp5_plane_atomic_check+0x290/0x414
          drm_atomic_helper_check_planes+0xd8/0x210
          drm_atomic_helper_check+0x54/0xb0
          drm_atomic_check_only+0x4b0/0x8f4
          drm_atomic_commit+0x68/0xe0
    
    Fixes: d59be579fa93 ("drm/msm/mdp5: Return error code in mdp5_pipe_release when deadlock is detected")
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/492701/
    Link: https://lore.kernel.org/r/20220707162040.1594855-1-robdclark@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e74f3097a9c713ce855cda07713393bcc23a005d
Author: Qiao Ma <mqaio@linux.alibaba.com>
Date:   Tue Jul 5 19:22:23 2022 +0800

    net: hinic: avoid kernel hung in hinic_get_stats64()
    
    [ Upstream commit 98f9fcdee35add80505b6c73f72de5f750d5c03c ]
    
    When using hinic device as a bond slave device, and reading device stats
    of master bond device, the kernel may hung.
    
    The kernel panic calltrace as follows:
    Kernel panic - not syncing: softlockup: hung tasks
    Call trace:
      native_queued_spin_lock_slowpath+0x1ec/0x31c
      dev_get_stats+0x60/0xcc
      dev_seq_printf_stats+0x40/0x120
      dev_seq_show+0x1c/0x40
      seq_read_iter+0x3c8/0x4dc
      seq_read+0xe0/0x130
      proc_reg_read+0xa8/0xe0
      vfs_read+0xb0/0x1d4
      ksys_read+0x70/0xfc
      __arm64_sys_read+0x20/0x30
      el0_svc_common+0x88/0x234
      do_el0_svc+0x2c/0x90
      el0_svc+0x1c/0x30
      el0_sync_handler+0xa8/0xb0
      el0_sync+0x148/0x180
    
    And the calltrace of task that actually caused kernel hungs as follows:
      __switch_to+124
      __schedule+548
      schedule+72
      schedule_timeout+348
      __down_common+188
      __down+24
      down+104
      hinic_get_stats64+44 [hinic]
      dev_get_stats+92
      bond_get_stats+172 [bonding]
      dev_get_stats+92
      dev_seq_printf_stats+60
      dev_seq_show+24
      seq_read_iter+964
      seq_read+220
      proc_reg_read+164
      vfs_read+172
      ksys_read+108
      __arm64_sys_read+28
      el0_svc_common+132
      do_el0_svc+40
      el0_svc+24
      el0_sync_handler+164
      el0_sync+324
    
    When getting device stats from bond, kernel will call bond_get_stats().
    It first holds the spinlock bond->stats_lock, and then call
    hinic_get_stats64() to collect hinic device's stats.
    However, hinic_get_stats64() calls `down(&nic_dev->mgmt_lock)` to
    protect its critical section, which may schedule current task out.
    And if system is under high pressure, the task cannot be woken up
    immediately, which eventually triggers kernel hung panic.
    
    Since previous patch has replaced hinic_dev.tx_stats/rx_stats with local
    variable in hinic_get_stats64(), there is nothing need to be protected
    by lock, so just removing down()/up() is ok.
    
    Fixes: edd384f682cc ("net-next/hinic: Add ethtool and stats")
    Signed-off-by: Qiao Ma <mqaio@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e286a882f227ad2af9779c122823b8e209e989a1
Author: Qiao Ma <mqaio@linux.alibaba.com>
Date:   Tue Jul 5 19:22:22 2022 +0800

    net: hinic: fix bug that ethtool get wrong stats
    
    [ Upstream commit 67dffd3db98570af8ff54c934f7d14664c0d182a ]
    
    Function hinic_get_stats64() will do two operations:
    1. reads stats from every hinic_rxq/txq and accumulates them
    2. calls hinic_rxq/txq_clean_stats() to clean every rxq/txq's stats
    
    For hinic_get_stats64(), it could get right data, because it sums all
    data to nic_dev->rx_stats/tx_stats.
    But it is wrong for get_drv_queue_stats(), this function will read
    hinic_rxq's stats, which have been cleared to zero by hinic_get_stats64().
    
    I have observed hinic's cleanup operation by using such command:
    > watch -n 1 "cat ethtool -S eth4 | tail -40"
    
    Result before:
         ...
         rxq7_pkts: 1
         rxq7_bytes: 90
         rxq7_errors: 0
         rxq7_csum_errors: 0
         rxq7_other_errors: 0
         ...
         rxq9_pkts: 11
         rxq9_bytes: 726
         rxq9_errors: 0
         rxq9_csum_errors: 0
         rxq9_other_errors: 0
         ...
         rxq11_pkts: 0
         rxq11_bytes: 0
         rxq11_errors: 0
         rxq11_csum_errors: 0
         rxq11_other_errors: 0
    
    Result after a few seconds:
         ...
         rxq7_pkts: 0
         rxq7_bytes: 0
         rxq7_errors: 0
         rxq7_csum_errors: 0
         rxq7_other_errors: 0
         ...
         rxq9_pkts: 2
         rxq9_bytes: 132
         rxq9_errors: 0
         rxq9_csum_errors: 0
         rxq9_other_errors: 0
         ...
         rxq11_pkts: 1
         rxq11_bytes: 170
         rxq11_errors: 0
         rxq11_csum_errors: 0
         rxq11_other_errors: 0
    
    To solve this problem, we just keep every queue's total stats in their own
    queue (aka hinic_{rxq|txq}), and simply sum all per-queue stats every time
    calling hinic_get_stats64().
    With that solution, there is no need to clean per-queue stats now,
    and there is no need to maintain global hinic_dev.{tx|rx}_stats, too.
    
    Fixes: edd384f682cc ("net-next/hinic: Add ethtool and stats")
    Signed-off-by: Qiao Ma <mqaio@linux.alibaba.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8369a39b529d35ac83a1b5020e236f66a52398fe
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jun 26 18:27:45 2022 +0200

    hinic: Use the bitmap API when applicable
    
    [ Upstream commit 7c2c57263af41cfd8b5022274e6801542831bb69 ]
    
    'vlan_bitmap' is a bitmap and is used as such. So allocate it with
    devm_bitmap_zalloc() and its explicit bit size (i.e. VLAN_N_VID).
    
    This avoids the need of the VLAN_BITMAP_SIZE macro which:
       - needlessly has a 'nic_dev' parameter
       - should be "long" (and not byte) aligned, so that the bitmap semantic
         is respected
    
    This is in fact not an issue because VLAN_N_VID is 4096 at the time
    being, but devm_bitmap_zalloc() is less verbose and easier to understand.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/6ff7b7d21414240794a77dc2456914412718a145.1656260842.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26a10aef28d9e9bfaf975b390224009af6b10767
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Mon Mar 15 10:13:56 2021 +0100

    lib: bitmap: provide devm_bitmap_alloc() and devm_bitmap_zalloc()
    
    [ Upstream commit e829c2e4744850bab4d8f8ffebd00df10b4c6c2b ]
    
    Provide managed variants of bitmap_alloc() and bitmap_zalloc().
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1238da5f32b72e9c9880e37a4fee38b4c4fc4f73
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Mon Mar 15 10:13:55 2021 +0100

    lib: bitmap: order includes alphabetically
    
    [ Upstream commit c13656b904b6173aad723d9680a81c60de2f5edc ]
    
    For better readability and maintenance: order the includes in bitmap
    source files alphabetically.
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f29d75693dcef2baeb3ea20c71fb6ebec5cc7ad
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Wed May 18 14:58:56 2022 +0800

    drm: bridge: sii8620: fix possible off-by-one
    
    [ Upstream commit 21779cc21c732c5eff8ea1624be6590450baa30f ]
    
    The next call to sii8620_burst_get_tx_buf will result in off-by-one
    When ctx->burst.tx_count + size == ARRAY_SIZE(ctx->burst.tx_buf). The same
    thing happens in sii8620_burst_get_rx_buf.
    
    This patch also change tx_count and tx_buf to rx_count and rx_buf in
    sii8620_burst_get_rx_buf. It is unreasonable to check tx_buf's size and
    use rx_buf.
    
    Fixes: e19e9c692f81 ("drm/bridge/sii8620: add support for burst eMSC transmissions")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Reviewed-by: Andrzej Hajda <andrzej.hajda@intel.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220518065856.18936-1-hbh25y@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bb0be3186b1da884895aa8db84e475613a6b053
Author: Guillaume Ranquet <granquet@baylibre.com>
Date:   Fri Jul 1 11:58:44 2022 +0800

    drm/mediatek: dpi: Only enable dpi after the bridge is enabled
    
    [ Upstream commit aed61ef6beb911cc043af0f2f291167663995065 ]
    
    Enabling the dpi too early causes glitches on screen.
    
    Move the call to mtk_dpi_enable() at the end of the bridge_enable
    callback to ensure everything is setup properly before enabling dpi.
    
    Fixes: 9e629c17aa8d ("drm/mediatek: Add DPI sub driver")
    Signed-off-by: Guillaume Ranquet <granquet@baylibre.com>
    Signed-off-by: Bo-Chen Chen <rex-bc.chen@mediatek.com>
    Tested-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/20220701035845.16458-16-rex-bc.chen@mediatek.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c47d69ed5667e698c87f0b4c867ceac7fc09a5a6
Author: Bo-Chen Chen <rex-bc.chen@mediatek.com>
Date:   Fri Jul 1 11:58:33 2022 +0800

    drm/mediatek: dpi: Remove output format of YUV
    
    [ Upstream commit c9ed0713b3c35fc45677707ba47f432cad95da56 ]
    
    DPI is not support output format as YUV, but there is the setting of
    configuring output YUV. Therefore, remove them in this patch.
    
    Fixes: 9e629c17aa8d ("drm/mediatek: Add DPI sub driver")
    Signed-off-by: Bo-Chen Chen <rex-bc.chen@mediatek.com>
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/20220701035845.16458-5-rex-bc.chen@mediatek.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc85cb33f6aae45872e4689d522089feae13d9ed
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jun 18 19:08:05 2022 +0200

    drm/rockchip: Fix an error handling path rockchip_dp_probe()
    
    [ Upstream commit 5074376822fe99fa4ce344b851c5016d00c0444f ]
    
    Should component_add() fail, we should call analogix_dp_remove() in the
    error handling path, as already done in the remove function.
    
    Fixes: 152cce0006ab ("drm/bridge: analogix_dp: Split bind() into probe() and real bind()")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/b719d9061bb97eb85145fbd3c5e63f4549f2e13e.1655572071.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f416e32eda913bf31d6ae2915584e0d994bece1
Author: Brian Norris <briannorris@chromium.org>
Date:   Fri Jun 17 17:26:52 2022 -0700

    drm/rockchip: vop: Don't crash for invalid duplicate_state()
    
    [ Upstream commit 1449110b0dade8b638d2c17ab7c5b0ff696bfccb ]
    
    It's possible for users to try to duplicate the CRTC state even when the
    state doesn't exist. drm_atomic_helper_crtc_duplicate_state() (and other
    users of __drm_atomic_helper_crtc_duplicate_state()) already guard this
    with a WARN_ON() instead of crashing, so let's do that here too.
    
    Fixes: 4e257d9eee23 ("drm/rockchip: get rid of rockchip_drm_crtc_mode_config")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220617172623.1.I62db228170b1559ada60b8d3e1637e1688424926@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2d2dcab19f6ade212aecbed0d8d50144fc1a6f1
Author: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Date:   Wed Jun 29 16:34:58 2022 +0200

    selftests/xsk: Destroy BPF resources only when ctx refcount drops to 0
    
    [ Upstream commit 39e940d4abfabb08b6937a315546b24d10be67e3 ]
    
    Currently, xsk_socket__delete frees BPF resources regardless of ctx
    refcount. Xdpxceiver has a test to verify whether underlying BPF
    resources would not be wiped out after closing XSK socket that was
    bound to interface with other active sockets. From library's xsk part
    perspective it also means that the internal xsk context is shared and
    its refcount is bumped accordingly.
    
    After a switch to loading XDP prog based on previously opened XSK
    socket, mentioned xdpxceiver test fails with:
    
      not ok 16 [xdpxceiver.c:swap_xsk_resources:1334]: ERROR: 9/"Bad file descriptor
    
    which means that in swap_xsk_resources(), xsk_socket__delete() released
    xskmap which in turn caused a failure of xsk_socket__update_xskmap().
    
    To fix this, when deleting socket, decrement ctx refcount before
    releasing BPF resources and do so only when refcount dropped to 0 which
    means there are no more active sockets for this ctx so BPF resources can
    be freed safely.
    
    Fixes: 2f6324a3937f ("libbpf: Support shared umems between queues and devices")
    Signed-off-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Magnus Karlsson <magnus.karlsson@intel.com>
    Link: https://lore.kernel.org/bpf/20220629143458.934337-5-maciej.fijalkowski@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64b1e3f90491177c81f86bed92f2053f29e41113
Author: Qian Cai <quic_qiancai@quicinc.com>
Date:   Fri Jun 24 07:13:38 2022 -0400

    crypto: arm64/gcm - Select AEAD for GHASH_ARM64_CE
    
    [ Upstream commit fac76f2260893dde5aa05bb693b4c13e8ed0454b ]
    
    Otherwise, we could fail to compile.
    
    ld: arch/arm64/crypto/ghash-ce-glue.o: in function 'ghash_ce_mod_exit':
    ghash-ce-glue.c:(.exit.text+0x24): undefined reference to 'crypto_unregister_aead'
    ld: arch/arm64/crypto/ghash-ce-glue.o: in function 'ghash_ce_mod_init':
    ghash-ce-glue.c:(.init.text+0x34): undefined reference to 'crypto_register_aead'
    
    Fixes: 537c1445ab0b ("crypto: arm64/gcm - implement native driver using v8 Crypto Extensions")
    Signed-off-by: Qian Cai <quic_qiancai@quicinc.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e306d74adcf9c0b95b4ff455834cfd4bd45fc0b
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:59 2022 +0200

    drm/vc4: hdmi: Correct HDMI timing registers for interlaced modes
    
    [ Upstream commit fb10dc451c0f15e3c19798a2f41d357f3f7576f5 ]
    
    For interlaced modes the timings were not being correctly
    programmed into the HDMI block, so correct them.
    
    Fixes: 8323989140f3 ("drm/vc4: hdmi: Support the BCM2711 HDMI controllers")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-33-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36f797a10f30b069231d9d6f62ca87cebf16ef4c
Author: Mateusz Kwiatkowski <kfyatek+publicgit@gmail.com>
Date:   Mon Jun 13 16:47:57 2022 +0200

    drm/vc4: hdmi: Fix timings for interlaced modes
    
    [ Upstream commit 0ee5a40152b15f200ed3a0d51e8aa782ea979c6a ]
    
    Increase the number of post-sync blanking lines on odd fields instead of
    decreasing it on even fields. This makes the total number of lines
    properly match the modelines.
    
    Additionally fix the value of PV_VCONTROL_ODD_DELAY, which did not take
    pixels_per_clock into account, causing some displays to invert the
    fields when driven by bcm2711.
    
    Fixes: 682e62c45406 ("drm/vc4: Fix support for interlaced modes on HDMI.")
    Signed-off-by: Mateusz Kwiatkowski <kfyatek+publicgit@gmail.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-31-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 717325e814d088137db00f0ae8460df94601862d
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Tue Dec 15 16:42:42 2020 +0100

    drm/vc4: hdmi: Limit the BCM2711 to the max without scrambling
    
    [ Upstream commit 24169a2b0533a6c4030c91a7a074039e7c98fde6 ]
    
    Unlike the previous generations, the HSM clock limitation is way above
    what we can reach without scrambling, so let's move the maximum
    frequency we support to the maximum clock frequency without scrambling.
    
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201215154243.540115-9-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c015d12317c503dff7fc8f20a6ae00be255cb1a3
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Tue Dec 15 16:42:38 2020 +0100

    drm/vc4: hdmi: Don't access the connector state in reset if kmalloc fails
    
    [ Upstream commit e55a07751146ef8ebc2c561564437b78f46405d3 ]
    
    drm_atomic_helper_connector_reset uses kmalloc which, from an API
    standpoint, can fail, and thus setting connector->state to NULL.
    However, our reset hook then calls drm_atomic_helper_connector_tv_reset
    that will access connector->state without checking if it's a valid
    pointer or not.
    
    Make sure we don't end up accessing a NULL pointer.
    
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Suggested-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201215154243.540115-5-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba8ffdb450d4371b49e98282b4c4416836addd26
Author: Dom Cobley <popcornmix@gmail.com>
Date:   Mon Jun 13 16:47:47 2022 +0200

    drm/vc4: hdmi: Avoid full hdmi audio fifo writes
    
    [ Upstream commit 1c594eeccf92368177c2e22f1d3ee4933dfb8567 ]
    
    We are getting occasional VC4_HD_MAI_CTL_ERRORF in
    HDMI_MAI_CTL which seem to correspond with audio dropouts.
    
    Reduce the threshold where we deassert DREQ to avoid the fifo
    overfilling
    
    Fixes: bb7d78568814 ("drm/vc4: Add HDMI audio support")
    Signed-off-by: Dom Cobley <popcornmix@gmail.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-21-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b161b270677625eff5fa89ba6d94e28a6ad7a0f5
Author: Dom Cobley <popcornmix@gmail.com>
Date:   Tue May 25 15:23:51 2021 +0200

    drm/vc4: hdmi: Remove firmware logic for MAI threshold setting
    
    [ Upstream commit 8434111ccfec8fc0549ec325a632067232d38e14 ]
    
    This was a workaround for bugs in hardware on earlier Pi models
    and wasn't totally successful.
    
    It makes audio quality worse on a Pi4 at the higher sample rates
    
    Signed-off-by: Dom Cobley <popcornmix@gmail.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210525132354.297468-10-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cefc8e7e0ea4e11f750c4abbb6f5ebc8f85110d5
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:43 2022 +0200

    drm/vc4: dsi: Add correct stop condition to vc4_dsi_encoder_disable iteration
    
    [ Upstream commit 7bcb9c8d0bc9f3cab8ac2634b056c2e6b63945ca ]
    
    vc4_dsi_encoder_disable is partially an open coded version of
    drm_bridge_chain_disable, but it missed a termination condition
    in the loop for ->disable which meant that no post_disable
    calls were made.
    
    Add in the termination clause.
    
    Fixes: 033bfe7538a1 ("drm/vc4: dsi: Fix bridge chain handling")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-17-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acfca24ec0b75c313868886d46dad65fadc49141
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:42 2022 +0200

    drm/vc4: dsi: Fix dsi0 interrupt support
    
    [ Upstream commit bc5b815e06f90cccdb6461aba1e49fdc2f3c8cd1 ]
    
    DSI0 seemingly had very little or no testing as a load of
    the register mappings were incorrect/missing, so host
    transfers always timed out due to enabling/checking incorrect
    bits in the interrupt enable and status registers.
    
    Fixes: 4078f5757144 ("drm/vc4: Add DSI driver")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-16-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97c2fa3a7b9e72c88bcaf4d7740363d12e71e529
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:41 2022 +0200

    drm/vc4: dsi: Register dsi0 as the correct vc4 encoder type
    
    [ Upstream commit 4d9273c978d4c1af15d7874c10c732ec83d444d0 ]
    
    vc4_dsi was registering both dsi0 and dsi1 as VC4_ENCODER_TYPE_DSI1
    which seemed to work OK for a single DSI display, but fails
    if there are two DSI displays connected.
    
    Update to register the correct type.
    
    Fixes: 4078f5757144 ("drm/vc4: Add DSI driver")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-15-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cc1edddcf02f69664887ea7ed4b604481ae300e
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Dec 3 14:25:39 2020 +0100

    drm/vc4: dsi: Introduce a variant structure
    
    [ Upstream commit d1d195ce26a14ec0a87816c09ae514e1c40e97f7 ]
    
    Most of the differences between DSI0 and DSI1 are handled through the
    ID. However, the BCM2711 DSI is going to introduce one more variable to
    the mix and will break some expectations of the earlier, simpler, test.
    
    Let's add a variant structure that will address most of the differences
    between those three controllers.
    
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201203132543.861591-5-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79374da862857adb0c034dd938276eeab77a3f49
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Dec 3 14:25:38 2020 +0100

    drm/vc4: dsi: Use snprintf for the PHY clocks instead of an array
    
    [ Upstream commit dc0bf36401e891c853e0a25baeb4e0b4e6f3626d ]
    
    The DSI clocks setup function has been using an array to store the clock
    name of either the DSI0 or DSI1 blocks, using the port ID to choose the
    proper one.
    
    Let's switch to an snprintf call to do the same thing and simplify the
    array a bit.
    
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201203132543.861591-4-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f98187a7c155d7a92ab576ac5e5d8012f4450f0
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Dec 3 14:25:36 2020 +0100

    drm/vc4: drv: Remove the DSI pointer in vc4_drv
    
    [ Upstream commit 51f4fcd9c4ea867c3b4fe58111f342ad0e80642a ]
    
    That pointer isn't used anywhere, so there's no point in keeping it.
    
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201203132543.861591-2-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed2f42bd8021b1d2432acdb075542a91339aa165
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:40 2022 +0200

    drm/vc4: dsi: Correct pixel order for DSI0
    
    [ Upstream commit edfe84ae0df16be1251b5a8e840d95f1f3827500 ]
    
    For slightly unknown reasons, dsi0 takes a different pixel format
    to dsi1, and that has to be set in the pixel valve.
    
    Amend the setup accordingly.
    
    Fixes: a86773d120d7 ("drm/vc4: Add support for feeding DSI encoders from the pixel valve.")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-14-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddf6af3b0b3f75c79aab784e1c7daa9367f9c939
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:39 2022 +0200

    drm/vc4: dsi: Correct DSI divider calculations
    
    [ Upstream commit 3b45eee87da171caa28f61240ddb5c21170cda53 ]
    
    The divider calculations tried to find the divider just faster than the
    clock requested. However if it required a divider of 7 then the for loop
    aborted without handling the "error" case, and could end up with a clock
    lower than requested.
    
    The integer divider from parent PLL to DSI clock is also capable of
    going up to /255, not just /7 that the driver was trying.  This allows
    for slower link frequencies on the DSI bus where the resolution permits.
    
    Correct the loop so that we always have a clock greater than requested,
    and covering the whole range of dividers.
    
    Fixes: 86c1b9eff3f2 ("drm/vc4: Adjust modes in DSI to work around the integer PLL divider.")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-13-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f517da5234f837197bd9d47e85e73f8ac452574f
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:32 2022 +0200

    drm/vc4: plane: Fix margin calculations for the right/bottom edges
    
    [ Upstream commit b7c3d6821627861f4ea3e1f2b595d0ed9e80aac8 ]
    
    The current plane margin calculation code clips the right and bottom
    edges of the range based using the left and top margins.
    
    This is obviously wrong, so let's fix it.
    
    Fixes: 666e73587f90 ("drm/vc4: Take margin setup into account when updating planes")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-6-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5aec7cb08bb72dd861459c8826373b9d2cf81114
Author: Dom Cobley <popcornmix@gmail.com>
Date:   Mon Jun 13 16:47:31 2022 +0200

    drm/vc4: plane: Remove subpixel positioning check
    
    [ Upstream commit 517db1ab1566dba3093dbdb8de4263ba4aa66416 ]
    
    There is little harm in ignoring fractional coordinates
    (they just get truncated).
    
    Without this:
    modetest -M vc4 -F tiles,gradient -s 32:1920x1080-60 -P89@74:1920x1080*.1.1@XR24
    
    is rejected. We have the same issue in Kodi when trying to
    use zoom options on video.
    
    Note: even if all coordinates are fully integer. e.g.
    src:[0,0,1920,1080] dest:[-10,-10,1940,1100]
    
    it will still get rejected as drm_atomic_helper_check_plane_state
    uses drm_rect_clip_scaled which transforms this to fractional src coords
    
    Fixes: 21af94cf1a4c ("drm/vc4: Add support for scaling of display planes.")
    Signed-off-by: Dom Cobley <popcornmix@gmail.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-5-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 611f86965df013d6021e6cd0d155b1734ad2cf21
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Jun 21 06:30:30 2022 +0100

    media: tw686x: Fix memory leak in tw686x_video_init
    
    [ Upstream commit e0b212ec9d8177d6f7c404315293f6a085d6ee42 ]
    
    video_device_alloc() allocates memory for vdev,
    when video_register_device() fails, it doesn't release the memory and
    leads to memory leak, call video_device_release() to fix this.
    
    Fixes: 704a84ccdbf1 ("[media] media: Support Intersil/Techwell TW686x-based video capture cards")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f7336ce35682f911b67c9162f4b301c9ee99ab1
Author: Ming Qian <ming.qian@nxp.com>
Date:   Wed Jun 15 04:19:20 2022 +0100

    media: v4l2-mem2mem: prevent pollerr when last_buffer_dequeued is set
    
    [ Upstream commit d4de27a9b1eadd33a2e40de87a646d1bf5fef756 ]
    
    If the last buffer was dequeued from the capture queue,
    signal userspace. DQBUF(CAPTURE) will return -EPIPE.
    
    But if output queue is empty and capture queue is empty,
    v4l2_m2m_poll_for_data will return EPOLLERR,
    This is very easy to happen in drain.
    
    When last_buffer_dequeued is set, we shouldn't return EPOLLERR,
    but return EPOLLIN | EPOLLRDNORM.
    
    Fixes: 1698a7f151126 ("media: v4l2-mem2mem: simplify poll logic")
    Signed-off-by: Ming Qian <ming.qian@nxp.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb480bffc1fd439f12635302957ed932bb1a5e9f
Author: Niels Dossche <dossche.niels@gmail.com>
Date:   Tue Jun 14 18:50:02 2022 +0100

    media: hdpvr: fix error value returns in hdpvr_read
    
    [ Upstream commit 359c27c6ddbde404f44a9c0d3ec88ccd1e2042f2 ]
    
    Error return values are supposed to be negative in hdpvr_read. Most
    error returns are currently handled via an unsigned integer "ret". When
    setting a negative error value to "ret", the value actually becomes a
    large positive value, because "ret" is unsigned. Later on, the "ret"
    value is returned. But as ssize_t is a 64-bit signed number, the error
    return value stays a large positive integer instead of a negative
    integer. This can cause an error value to be interpreted as the read
    size, which can cause a buffer overread for applications relying on the
    returned size.
    
    Fixes: 9aba42efe85b ("V4L/DVB (11096): V4L2 Driver for the Hauppauge HD PVR usb capture device")
    Signed-off-by: Niels Dossche <dossche.niels@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f57699a9b66ea11f000f56d1f1179059239b8690
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed May 25 15:54:11 2022 +0400

    drm/mcde: Fix refcount leak in mcde_dsi_bind
    
    [ Upstream commit 3a149169e4a2f9127022fec6ef5d71b4e804b3b9 ]
    
    Every iteration of for_each_available_child_of_node() decrements
    the reference counter of the previous node. There is no decrement
    when break out from the loop and results in refcount leak.
    Add missing of_node_put() to fix this.
    
    Fixes: 5fc537bfd000 ("drm/mcde: Add new driver for ST-Ericsson MCDE")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220525115411.65455-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a43236ebcfba2fb2840e640b844b7fe211727d2
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Jun 2 18:34:01 2022 +0800

    drm: bridge: adv7511: Add check for mipi_dsi_driver_register
    
    [ Upstream commit 831463667b5f4f1e5bce9c3b94e9e794d2bc8923 ]
    
    As mipi_dsi_driver_register could return error if fails,
    it should be better to check the return value and return error
    if fails.
    Moreover, if i2c_add_driver fails,  mipi_dsi_driver_register
    should be reverted.
    
    Fixes: 1e4d58cd7f88 ("drm/bridge: adv7533: Create a MIPI DSI device")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220602103401.2980938-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87af9b0b45666ca3dd6b10c0ece691c740b0f750
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Jun 16 10:26:18 2022 -0500

    crypto: ccp - During shutdown, check SEV data pointer before using
    
    [ Upstream commit 1b05ece0c931536c0a38a9385e243a7962e933f6 ]
    
    On shutdown, each CCP device instance performs shutdown processing.
    However, __sev_platform_shutdown_locked() uses the controlling psp
    structure to obtain the pointer to the sev_device structure. However,
    during driver initialization, it is possible that an error can be received
    from the firmware that results in the sev_data pointer being cleared from
    the controlling psp structure. The __sev_platform_shutdown_locked()
    function does not check for this situation and will segfault.
    
    While not common, this scenario should be accounted for. Add a check for a
    NULL sev_device structure before attempting to use it.
    
    Fixes: 5441a07a127f ("crypto: ccp - shutdown SEV firmware on kexec")
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f8a6e8f14d6b3992cb34c2b2f39d7963eb3dda4
Author: Jian Shen <shenjian15@huawei.com>
Date:   Wed Jun 22 21:50:02 2022 +0800

    test_bpf: fix incorrect netdev features
    
    [ Upstream commit 9676feccacdb0571791c88b23e3b7ac4e7c9c457 ]
    
    The prototype of .features is netdev_features_t, it should use
    NETIF_F_LLTX and NETIF_F_HW_VLAN_STAG_TX, not NETIF_F_LLTX_BIT
    and NETIF_F_HW_VLAN_STAG_TX_BIT.
    
    Fixes: cf204a718357 ("bpf, testing: Introduce 'gso_linear_no_head_frag' skb_segment test")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/r/20220622135002.8263-1-shenjian15@huawei.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45e1dbe5f6e1c21f1389d58a4261cf3e1b740686
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 15 12:02:08 2022 -0400

    drm/radeon: fix incorrrect SPDX-License-Identifiers
    
    [ Upstream commit 1f43b8903f3aae4a26a603c36f6d5dd25d6edb51 ]
    
    radeon is MIT.  This were incorrectly changed in
    commit b24413180f56 ("License cleanup: add SPDX GPL-2.0 license identifier to files with no license")
    and
    commit d198b34f3855 (".gitignore: add SPDX License Identifier")
    and:
    commit ec8f24b7faaf ("treewide: Add SPDX license identifier - Makefile/Kconfig")
    
    Fixes: d198b34f3855 (".gitignore: add SPDX License Identifier")
    Fixes: ec8f24b7faaf ("treewide: Add SPDX license identifier - Makefile/Kconfig")
    Fixes: b24413180f56 ("License cleanup: add SPDX GPL-2.0 license identifier to files with no license")
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/2053
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7d6cac6967534e1298497e853964b3d3f994ce3
Author: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date:   Wed Jun 8 20:16:14 2022 +0300

    wifi: iwlegacy: 4965: fix potential off-by-one overflow in il4965_rs_fill_link_cmd()
    
    [ Upstream commit a8eb8e6f7159c7c20c0ddac428bde3d110890aa7 ]
    
    As a result of the execution of the inner while loop, the value
    of 'idx' can be equal to LINK_QUAL_MAX_RETRY_NUM. However, this
    is not checked after the loop and 'idx' is used to write the
    LINK_QUAL_MAX_RETRY_NUM size array 'lq_cmd->rs_table[idx]' below
    in the outer loop.
    
    The fix is to check the new value of 'idx' inside the nested loop,
    and break both loops if index equals the size. Checking it at the
    start is now pointless, so let's remove it.
    
    Detected using the static analysis tool - Svace.
    
    Fixes: be663ab67077 ("iwlwifi: split the drivers for agn and legacy devices 3945/4965")
    Signed-off-by: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20220608171614.28891-1-aleksei.kodanev@bell-sw.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eccd7c3e2596b574241a7670b5b53f5322f470e5
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Mon Jun 13 21:43:59 2022 +0300

    ath9k: fix use-after-free in ath9k_hif_usb_rx_cb
    
    [ Upstream commit 0ac4827f78c7ffe8eef074bc010e7e34bc22f533 ]
    
    Syzbot reported use-after-free Read in ath9k_hif_usb_rx_cb() [0]. The
    problem was in incorrect htc_handle->drv_priv initialization.
    
    Probable call trace which can trigger use-after-free:
    
    ath9k_htc_probe_device()
      /* htc_handle->drv_priv = priv; */
      ath9k_htc_wait_for_target()      <--- Failed
      ieee80211_free_hw()              <--- priv pointer is freed
    
    <IRQ>
    ...
    ath9k_hif_usb_rx_cb()
      ath9k_hif_usb_rx_stream()
       RX_STAT_INC()                <--- htc_handle->drv_priv access
    
    In order to not add fancy protection for drv_priv we can move
    htc_handle->drv_priv initialization at the end of the
    ath9k_htc_probe_device() and add helper macro to make
    all *_STAT_* macros NULL safe, since syzbot has reported related NULL
    deref in that macros [1]
    
    Link: https://syzkaller.appspot.com/bug?id=6ead44e37afb6866ac0c7dd121b4ce07cb665f60 [0]
    Link: https://syzkaller.appspot.com/bug?id=b8101ffcec107c0567a0cd8acbbacec91e9ee8de [1]
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Reported-and-tested-by: syzbot+03110230a11411024147@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+c6dde1f690b60e0b9fbe@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/d57bbedc857950659bfacac0ab48790c1eda00c8.1655145743.git.paskripkin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 918f42ca1d3fee0303f4dde8b7951e2fcd416ef7
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat May 21 07:24:01 2022 +0100

    media: tw686x: Register the irq at the end of probe
    
    [ Upstream commit fb730334e0f759d00f72168fbc555e5a95e35210 ]
    
    We got the following warning when booting the kernel:
    
    [    3.243674] INFO: trying to register non-static key.
    [    3.243922] The code is fine but needs lockdep annotation, or maybe
    [    3.244230] you didn't initialize this object before use?
    [    3.245642] Call Trace:
    [    3.247836]  lock_acquire+0xff/0x2d0
    [    3.248727]  tw686x_audio_irq+0x1a5/0xcc0 [tw686x]
    [    3.249211]  tw686x_irq+0x1f9/0x480 [tw686x]
    
    The lock 'vc->qlock' will be initialized in tw686x_video_init(), but the
    driver registers the irq before calling the tw686x_video_init(), and we
    got the warning.
    
    Fix this by registering the irq at the end of probe
    
    Fixes: 704a84ccdbf1 ("[media] media: Support Intersil/Techwell TW686x-based video capture cards")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d45eaf41140c7850ee17298b6d6bbf9fdb242509
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Fri Jun 10 21:27:15 2022 +0300

    crypto: sun8i-ss - fix infinite loop in sun8i_ss_setup_ivs()
    
    [ Upstream commit d61a7b3decf7f0cf4121a7204303deefd2c7151b ]
    
    There is no i decrement in while (i >= 0) loop.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: 359e893e8af4 ("crypto: sun8i-ss - rework handling of IV")
    Acked-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81cb31756888bb062e92d2dca21cd629d77a46a9
Author: Xu Wang <vulab@iscas.ac.cn>
Date:   Fri Dec 27 09:34:32 2019 +0000

    i2c: Fix a potential use after free
    
    [ Upstream commit e4c72c06c367758a14f227c847f9d623f1994ecf ]
    
    Free the adap structure only after we are done using it.
    This patch just moves the put_device() down a bit to avoid the
    use after free.
    
    Fixes: 611e12ea0f12 ("i2c: core: manage i2c bus device refcount in i2c_[get|put]_adapter")
    Signed-off-by: Xu Wang <vulab@iscas.ac.cn>
    [wsa: added comment to the code, added Fixes tag]
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0412d8f693e6f00b6cda80cc3ae1fbc7c14d392
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jun 8 23:34:10 2022 -0700

    net: fix sk_wmem_schedule() and sk_rmem_schedule() errors
    
    [ Upstream commit 7c80b038d23e1f4c7fcc311f43f83b8c60e7fb80 ]
    
    If sk->sk_forward_alloc is 150000, and we need to schedule 150001 bytes,
    we want to allocate 1 byte more (rounded up to one page),
    instead of 150001 :/
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e70bb9cdb0e82ab26a24999c0de81a32c400c72
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed May 18 20:33:44 2022 +0300

    crypto: sun8i-ss - fix error codes in allocate_flows()
    
    [ Upstream commit d2765e1b9ac4b2d5a5d5bf17f468c9b3566c3770 ]
    
    These failure paths should return -ENOMEM.  Currently they return
    success.
    
    Fixes: 359e893e8af4 ("crypto: sun8i-ss - rework handling of IV")
    Fixes: 8eec4563f152 ("crypto: sun8i-ss - do not allocate memory when handling hash requests")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8673fbc10ff6db212dc60006270c2d15b066917
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Mon May 2 20:19:19 2022 +0000

    crypto: sun8i-ss - do not allocate memory when handling hash requests
    
    [ Upstream commit 8eec4563f152981a441693fc97c5459843dc5e6e ]
    
    Instead of allocate memory on each requests, it is easier to
    pre-allocate buffers.
    This made error path easier.
    
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 648b1bb29a4631b977454be89ebfea937b91028b
Author: Antonio Borneo <antonio.borneo@foss.st.com>
Date:   Tue Jun 7 23:31:44 2022 +0200

    drm: adv7511: override i2c address of cec before accessing it
    
    [ Upstream commit 9cc4853e4781bf0dd0f35355dc92d97c9da02f5d ]
    
    Commit 680532c50bca ("drm: adv7511: Add support for
    i2c_new_secondary_device") allows a device tree node to override
    the default addresses of the secondary i2c devices. This is useful
    for solving address conflicts on the i2c bus.
    
    In adv7511_init_cec_regmap() the new i2c address of cec device is
    read from device tree and immediately accessed, well before it is
    written in the proper register to override the default address.
    This can cause an i2c error during probe and a consequent probe
    failure.
    
    Once the new i2c address is read from the device tree, override
    the default address before any attempt to access the cec.
    
    Tested with adv7533 and stm32mp157f.
    
    Signed-off-by: Antonio Borneo <antonio.borneo@foss.st.com>
    Fixes: 680532c50bca ("drm: adv7511: Add support for i2c_new_secondary_device")
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220607213144.427177-1-antonio.borneo@foss.st.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 259773fc874258606c0121767a4a27466ff337eb
Author: Xiaomeng Tong <xiam0nd.tong@gmail.com>
Date:   Sun Mar 27 13:09:45 2022 +0800

    virtio-gpu: fix a missing check to avoid NULL dereference
    
    [ Upstream commit bd63f11f4c3c46afec07d821f74736161ff6e526 ]
    
    'cache_ent' could be set NULL inside virtio_gpu_cmd_get_capset()
    and it will lead to a NULL dereference by a lately use of it
    (i.e., ptr = cache_ent->caps_cache). Fix it with a NULL check.
    
    Fixes: 62fb7a5e10962 ("virtio-gpu: add 3d/virgl support")
    Signed-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Reviewed-by: Chia-I Wu <olvaffe@gmail.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20220327050945.1614-1-xiam0nd.tong@gmail.com
    
    [ kraxel: minor codestyle fixup ]
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e28aa4f4674d736a443048ae301ae4683dae9f77
Author: Tali Perry <tali.perry1@gmail.com>
Date:   Wed May 25 11:23:39 2022 +0800

    i2c: npcm: Correct slave role behavior
    
    [ Upstream commit d7aa1b149b8fc04d802879cf4662010aa4a42deb ]
    
    Correct the slave transaction logic to be compatible with the generic
    slave backend driver.
    
    Fixes: 56a1485b102e ("i2c: npcm7xx: Add Nuvoton NPCM I2C controller driver")
    Signed-off-by: Tali Perry <tali.perry1@gmail.com>
    Signed-off-by: Tyrone Ting <kfting@nuvoton.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 385f6ef4de3d441c546dedf1340a34a66e4a40a8
Author: Tali Perry <tali.perry1@gmail.com>
Date:   Wed May 25 11:23:38 2022 +0800

    i2c: npcm: Remove own slave addresses 2:10
    
    [ Upstream commit 47d506d1a28fd10a9fb1f33df5622d88fae72095 ]
    
    NPCM can support up to 10 own slave addresses. In practice, only one
    address is actually being used. In order to access addresses 2 and above,
    need to switch register banks. The switch needs spinlock.
    To avoid using spinlock for this useless feature removed support of SA >=
    2. Also fix returned slave event enum.
    
    Remove some comment since the bank selection is not required. The bank
    selection is not required since the supported slave addresses are reduced.
    
    Fixes: 56a1485b102e ("i2c: npcm7xx: Add Nuvoton NPCM I2C controller driver")
    Signed-off-by: Tali Perry <tali.perry1@gmail.com>
    Signed-off-by: Tyrone Ting <kfting@nuvoton.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ce9cff37181c74ad5c04680d3c4a98d506f9092
Author: Xinlei Lee <xinlei.lee@mediatek.com>
Date:   Fri May 20 10:00:07 2022 +0800

    drm/mediatek: Add pull-down MIPI operation in mtk_dsi_poweroff function
    
    [ Upstream commit fa5d0a0205c34734c5b8daa77e39ac2817f63a10 ]
    
    In the dsi_enable function, mtk_dsi_rxtx_control is to
    pull up the MIPI signal operation. Before dsi_disable,
    MIPI should also be pulled down by writing a register
    instead of disabling dsi.
    
    If disable dsi without pulling the mipi signal low, the value of
    the register will still maintain the setting of the mipi signal being
    pulled high.
    After resume, even if the mipi signal is not pulled high, it will still
    be in the high state.
    
    Fixes: 2e54c14e310f ("drm/mediatek: Add DSI sub driver")
    
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/1653012007-11854-5-git-send-email-xinlei.lee@mediatek.com/
    Signed-off-by: Jitao Shi <jitao.shi@mediatek.com>
    Signed-off-by: Xinlei Lee <xinlei.lee@mediatek.com>
    Reviewed-by: Rex-BC Chen <rex-bc.chen@mediatek.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b54bc0013d7b52b37ac223d01564a17a88cfd730
Author: Jitao Shi <jitao.shi@mediatek.com>
Date:   Fri May 20 10:00:05 2022 +0800

    drm/mediatek: Separate poweron/poweroff from enable/disable and define new funcs
    
    [ Upstream commit cde7e2e35c2866d22a3a012e72a41052dfcc255d ]
    
    In order to match the changes of "Use the drm_panel_bridge API",
    the poweron/poweroff of dsi is extracted from enable/disable and
    defined as new funcs (atomic_pre_enable/atomic_post_disable).
    
    Since dsi_poweron is moved from dsi_enable to pre_enable function, in
    order to avoid poweron failure, the operation of dsi register fails to
    cause bus hang. Therefore, the protection mechanism is added to the
    dsi_enable function.
    
    Fixes: 2dd8075d2185 ("drm/mediatek: mtk_dsi: Use the drm_panel_bridge API")
    
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/1653012007-11854-3-git-send-email-xinlei.lee@mediatek.com/
    Signed-off-by: Jitao Shi <jitao.shi@mediatek.com>
    Signed-off-by: Xinlei Lee <xinlei.lee@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Rex-BC Chen <rex-bc.chen@mediatek.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cb658988511f0eb3bc380f7ca38d31c9836b33b
Author: Xinlei Lee <xinlei.lee@mediatek.com>
Date:   Fri May 20 10:00:04 2022 +0800

    drm/mediatek: Modify dsi funcs to atomic operations
    
    [ Upstream commit 7f6335c6a258edf4d5ff1b904bc033188dc7b48b ]
    
    Because .enable & .disable are deprecated.
    Use .atomic_enable & .atomic_disable instead.
    
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/1653012007-11854-2-git-send-email-xinlei.lee@mediatek.com/
    Signed-off-by: Jitao Shi <jitao.shi@mediatek.com>
    Signed-off-by: Xinlei Lee <xinlei.lee@mediatek.com>
    Reviewed-by: Rex-BC Chen <rex-bc.chen@mediatek.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8508d6d23a247c29792ce2fc0df3f3404d6a6a80
Author: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date:   Mon Jun 6 16:50:54 2022 +0300

    drm/radeon: fix potential buffer overflow in ni_set_mc_special_registers()
    
    [ Upstream commit 136f614931a2bb73616b292cf542da3a18daefd5 ]
    
    The last case label can write two buffers 'mc_reg_address[j]' and
    'mc_data[j]' with 'j' offset equal to SMC_NISLANDS_MC_REGISTER_ARRAY_SIZE
    since there are no checks for this value in both case labels after the
    last 'j++'.
    
    Instead of changing '>' to '>=' there, add the bounds check at the start
    of the second 'case' (the first one already has it).
    
    Also, remove redundant last checks for 'j' index bigger than array size.
    The expression is always false. Moreover, before or after the patch
    'table->last' can be equal to SMC_NISLANDS_MC_REGISTER_ARRAY_SIZE and it
    seems it can be a valid value.
    
    Detected using the static analysis tool - Svace.
    Fixes: 69e0b57a91ad ("drm/radeon/kms: add dpm support for cayman (v5)")
    Signed-off-by: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac225376438c5a3975543c6627f440db7b460286
Author: Manikanta Pubbisetty <quic_mpubbise@quicinc.com>
Date:   Thu Jun 2 17:26:21 2022 +0530

    ath11k: Fix incorrect debug_mask mappings
    
    [ Upstream commit 9331f7d3c54a263bede5055e106e40b28d0bd937 ]
    
    Currently a couple of debug_mask entries are mapped to the same value,
    this could enable unintended driver logging. If enabling DP_TX logs was
    the intention, then this could also enable PCI logs flooding the dmesg
    buffer or vice versa. Fix this by correctly assigning the debug masks.
    
    Found during code review.
    
    Tested-on: WCN6750 hw1.0 AHB WLAN.MSL.1.0.1-00887-QCAMSLSWPLZ-1
    
    Fixes: aa2092a9bab3f ("ath11k: add raw mode and software crypto support")
    Signed-off-by: Manikanta Pubbisetty <quic_mpubbise@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220602115621.15339-1-quic_mpubbise@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 648d3c87141f2be134754fdcd1c7fb4320bc8300
Author: Yunhao Tian <t123yh.xyz@gmail.com>
Date:   Tue May 10 11:02:19 2022 +0800

    drm/mipi-dbi: align max_chunk to 2 in spi_transfer
    
    [ Upstream commit 435c249008cba04ed6a7975e9411f3b934620204 ]
    
    In __spi_validate, there's a validation that no partial transfers
    are accepted (xfer->len % w_size must be zero). When
    max_chunk is not a multiple of bpw (e.g. max_chunk = 65535,
    bpw = 16), the transfer will be rejected.
    
    This patch aligns max_chunk to 2 bytes (the maximum value of bpw is 16),
    so that no partial transfer will occur.
    
    Fixes: d23d4d4dac01 ("drm/tinydrm: Move tinydrm_spi_transfer()")
    
    Signed-off-by: Yunhao Tian <t123yh.xyz@gmail.com>
    Signed-off-by: Noralf Trønnes <noralf@tronnes.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220510030219.2486687-1-t123yh.xyz@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2c45f8c3d18269e641f0c7da2dde47ef8414034
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Sun May 22 15:33:16 2022 +0300

    ath11k: fix netdev open race
    
    [ Upstream commit d4ba1ff87b17e81686ada8f429300876f55f95ad ]
    
    Make sure to allocate resources needed before registering the device.
    
    This specifically avoids having a racing open() trigger a BUG_ON() in
    mod_timer() when ath11k_mac_op_start() is called before the
    mon_reap_timer as been set up.
    
    I did not see this issue with next-20220310, but I hit it on every probe
    with next-20220511. Perhaps some timing changed in between.
    
    Here's the backtrace:
    
    [   51.346947] kernel BUG at kernel/time/timer.c:990!
    [   51.346958] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    ...
    [   51.578225] Call trace:
    [   51.583293]  __mod_timer+0x298/0x390
    [   51.589518]  mod_timer+0x14/0x20
    [   51.595368]  ath11k_mac_op_start+0x41c/0x4a0 [ath11k]
    [   51.603165]  drv_start+0x38/0x60 [mac80211]
    [   51.610110]  ieee80211_do_open+0x29c/0x7d0 [mac80211]
    [   51.617945]  ieee80211_open+0x60/0xb0 [mac80211]
    [   51.625311]  __dev_open+0x100/0x1c0
    [   51.631420]  __dev_change_flags+0x194/0x210
    [   51.638214]  dev_change_flags+0x24/0x70
    [   51.644646]  do_setlink+0x228/0xdb0
    [   51.650723]  __rtnl_newlink+0x460/0x830
    [   51.657162]  rtnl_newlink+0x4c/0x80
    [   51.663229]  rtnetlink_rcv_msg+0x124/0x390
    [   51.669917]  netlink_rcv_skb+0x58/0x130
    [   51.676314]  rtnetlink_rcv+0x18/0x30
    [   51.682460]  netlink_unicast+0x250/0x310
    [   51.688960]  netlink_sendmsg+0x19c/0x3e0
    [   51.695458]  ____sys_sendmsg+0x220/0x290
    [   51.701938]  ___sys_sendmsg+0x7c/0xc0
    [   51.708148]  __sys_sendmsg+0x68/0xd0
    [   51.714254]  __arm64_sys_sendmsg+0x28/0x40
    [   51.720900]  invoke_syscall+0x48/0x120
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3
    
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    Fixes: 840c36fa727a ("ath11k: dp: stop rx pktlog before suspend")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220517103436.15867-1-johan+linaro@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58fd794675f0802ac4d8bdb09afc8b73862da829
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 17 14:48:44 2022 +0300

    wifi: rtlwifi: fix error codes in rtl_debugfs_set_write_h2c()
    
    [ Upstream commit b88d28146c30a8e14f0f012d56ebf19b68a348f4 ]
    
    If the copy_from_user() fails or the user gives invalid date then the
    correct thing to do is to return a negative error code.  (Currently it
    returns success).
    
    I made a copy additional related cleanups:
    1) There is no need to check "buffer" for NULL.  That's handled by
    copy_from_user().
    2) The "h2c_len" variable cannot be negative because it is unsigned
    and because sscanf() does not return negative error codes.
    
    Fixes: 610247f46feb ("rtlwifi: Improve debugging by using debugfs")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/YoOLnDkHgVltyXK7@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71426d31d0eebb3d14315f03fb631a007ce06509
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Fri May 20 11:16:02 2022 +0200

    drm/st7735r: Fix module autoloading for Okaya RH128128T
    
    [ Upstream commit 9ad6f181ad9a19a26bda73a7b199df44ccfcdaba ]
    
    The SPI core always reports a "MODALIAS=spi:<foo>", even if the device was
    registered via OF. This means that the st7735r.ko module won't autoload if
    a DT has a node with a compatible "okaya,rh128128t" string.
    
    In that case, kmod expects a "MODALIAS=of:N*T*Cokaya,rh128128t" uevent but
    instead will get a "MODALIAS=spi:rh128128t", which is not present in the
    list of aliases:
    
      $ modinfo drivers/gpu/drm/tiny/st7735r.ko | grep alias
      alias:          of:N*T*Cokaya,rh128128tC*
      alias:          of:N*T*Cokaya,rh128128t
      alias:          of:N*T*Cjianda,jd-t18003-t01C*
      alias:          of:N*T*Cjianda,jd-t18003-t01
      alias:          spi:jd-t18003-t01
    
    To workaround this issue, add in the SPI table an entry for that device.
    
    Fixes: d1d511d516f7 ("drm: tiny: st7735r: Add support for Okaya RH128128T")
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: David Lechner <david@lechnology.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220520091602.179078-1-javierm@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd98ccda50a4912bd3808e48a0335cb48ed42f29
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed May 18 10:27:26 2022 +0300

    ath10k: do not enforce interrupt trigger type
    
    [ Upstream commit 1ee6c5abebd3cacf2ac4378d0ed4f57fd4850421 ]
    
    Interrupt line can be configured on different hardware in different way,
    even inverted.  Therefore driver should not enforce specific trigger
    type - edge rising - but instead rely on Devicetree to configure it.
    
    All Qualcomm DTSI with WCN3990 define the interrupt type as level high,
    so the mismatch between DTSI and driver causes rebind issues:
    
      $ echo 18800000.wifi > /sys/bus/platform/drivers/ath10k_snoc/unbind
      $ echo 18800000.wifi > /sys/bus/platform/drivers/ath10k_snoc/bind
      [   44.763114] irq: type mismatch, failed to map hwirq-446 for interrupt-controller@17a00000!
      [   44.763130] ath10k_snoc 18800000.wifi: error -ENXIO: IRQ index 0 not found
      [   44.763140] ath10k_snoc 18800000.wifi: failed to initialize resource: -6
    
    Tested-on: WCN3990 hw1.0 SNOC WLAN.HL.3.2.0.c8-00009-QCAHLSWSC8180XMTPLZ-1
    Tested-on: WCN3990 hw1.0 SNOC WLAN.HL.2.0-01387-QCAHLSWMTPLZ-1
    
    Fixes: c963a683e701 ("ath10k: add resource init and deinit for WCN3990")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Tested-by: Steev Klimaszewski <steev@kali.org>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220513151516.357549-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcc05372a2c226ad61472b7a72c72aeba9584980
Author: Marek Vasut <marex@denx.de>
Date:   Fri May 20 14:15:43 2022 +0200

    drm/bridge: tc358767: Make sure Refclk clock are enabled
    
    [ Upstream commit 0b4c48f3e315d172e4cc06e10f2c8ba180788baf ]
    
    The Refclk may be supplied by SoC clock output instead of crystal
    oscillator, make sure the clock are enabled before any other action
    is performed with the bridge chip, otherwise it may either fail to
    operate at all, or miss reset GPIO toggle.
    
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Fixes: 7caff0fc4296e ("drm/bridge: tc358767: Add DPI to eDP bridge driver")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Jonas Karlman <jonas@kwiboo.se>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Lucas Stach <l.stach@pengutronix.de>
    Cc: Marek Vasut <marex@denx.de>
    Cc: Maxime Ripard <maxime@cerno.tech>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Robert Foss <robert.foss@linaro.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Reviewed-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220520121543.11550-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c038b9b7338924e5eb8d4b34d1a76691529feef8
Author: Marek Vasut <marex@denx.de>
Date:   Tue Mar 29 10:50:10 2022 +0200

    drm/bridge: tc358767: Move (e)DP bridge endpoint parsing into dedicated function
    
    [ Upstream commit 8478095a8c4bcea3c83b0767d6c9127434160761 ]
    
    The TC358767/TC358867/TC9595 are all capable of operating in multiple
    modes, DPI-to-(e)DP, DSI-to-(e)DP, DSI-to-DPI. Only the first mode is
    currently supported. In order to support the rest of the modes without
    making the tc_probe() overly long, split the bridge endpoint parsing
    into dedicated function, where the necessary logic to detect the bridge
    mode based on which endpoints are connected, can be implemented.
    
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Lucas Stach <l.stach@pengutronix.de> # In both DPI to eDP and DSI to DPI mode.
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Jonas Karlman <jonas@kwiboo.se>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Maxime Ripard <maxime@cerno.tech>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220329085015.39159-7-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f312bc33caa06e330ee4a3a33d91e9737b35a1bd
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Sun Dec 29 08:06:07 2019 +0000

    pwm: lpc18xx-sct: Convert to devm_platform_ioremap_resource()
    
    [ Upstream commit 74ec20a4e6a064ac2cdfb577c115cb948b307f0f ]
    
    Use devm_platform_ioremap_resource() to simplify code.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Reviewed-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aaac1d9243ba46e52964f106e645f414668417a
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Jul 21 12:31:29 2022 +0200

    pwm: sifive: Shut down hardware only after pwmchip_remove() completed
    
    [ Upstream commit 2375e964d541bb09158cd2dff67b5d74e8de61cd ]
    
    The PWMs are expected to be functional until pwmchip_remove() is called.
    So disable the clks only afterwards.
    
    Fixes: 9e37a53eb051 ("pwm: sifive: Add a driver for SiFive SoC PWM")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9073dbec88799f6fb14c2dc593d0e80fe19715a9
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Jul 21 12:31:28 2022 +0200

    pwm: sifive: Ensure the clk is enabled exactly once per running PWM
    
    [ Upstream commit ace41d7564e655c39f709a78c035188a460c7cbd ]
    
    .apply() assumes the clk to be for a given PWM iff the PWM is enabled.
    So make sure this is the case when .probe() completes. And in .remove()
    disable the according number of times.
    
    This fixes a clk enable/disable imbalance, if some PWMs are already running
    at probe time.
    
    Fixes: 9e37a53eb051 (pwm: sifive: Add a driver for SiFive SoC PWM)
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47902de24a46f53a34f53a13af352b149455d347
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Jul 21 12:31:23 2022 +0200

    pwm: sifive: Simplify offset calculation for PWMCMP registers
    
    [ Upstream commit 20550a61880fc55e68a0d290ad195b74729c0e7b ]
    
    Instead of explicitly using PWM_SIFIVE_PWMCMP0 + pwm->hwpwm *
    PWM_SIFIVE_SIZE_PWMCMP for each access to one of the PWMCMP registers,
    introduce a macro that takes the hwpwm id as parameter.
    
    For the register definition using a plain 4 instead of the cpp constant
    PWM_SIFIVE_SIZE_PWMCMP is easier to read, so define the offset macro
    without the constant. The latter can then be dropped as there are no
    users left.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d7f7ffbcdb9c043409cee13664d13a07c70bbc4
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:28:33 2021 +0200

    pwm: sifive: Don't check the return code of pwmchip_remove()
    
    [ Upstream commit ceb2c2842f3664dcc4e6d8cb317e1e83bb81b1e5 ]
    
    pwmchip_remove() returns always 0. Don't use the value to make it
    possible to eventually change the function to return void. Also the
    driver core ignores the return value of pwm_sifive_remove().
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7e2d64d673abdecae8b8f3f44ef37820e7e8f6c
Author: Mike Snitzer <snitzer@kernel.org>
Date:   Fri Jul 22 15:31:23 2022 -0400

    dm: return early from dm_pr_call() if DM device is suspended
    
    [ Upstream commit e120a5f1e78fab6223544e425015f393d90d6f0d ]
    
    Otherwise PR ops may be issued while the broader DM device is being
    reconfigured, etc.
    
    Fixes: 9c72bad1f31a ("dm: call PR reserve/unreserve on each underlying device")
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3f5cc0cc0dea3a2de913bdffcb49144fa726cd3
Author: Markus Mayer <mmayer@broadcom.com>
Date:   Sun Jul 17 20:10:39 2022 -0700

    thermal/tools/tmon: Include pthread and time headers in tmon.h
    
    [ Upstream commit 0cf51bfe999524377fbb71becb583b4ca6d07cfc ]
    
    Include sys/time.h and pthread.h in tmon.h, so that types
    "pthread_mutex_t" and "struct timeval tv" are known when tmon.h
    references them.
    
    Without these headers, compiling tmon against musl-libc will fail with
    these errors:
    
    In file included from sysfs.c:31:0:
    tmon.h:47:8: error: unknown type name 'pthread_mutex_t'
     extern pthread_mutex_t input_lock;
            ^~~~~~~~~~~~~~~
    make[3]: *** [<builtin>: sysfs.o] Error 1
    make[3]: *** Waiting for unfinished jobs....
    In file included from tui.c:31:0:
    tmon.h:54:17: error: field 'tv' has incomplete type
      struct timeval tv;
                     ^~
    make[3]: *** [<builtin>: tui.o] Error 1
    make[2]: *** [Makefile:83: tmon] Error 2
    
    Signed-off-by: Markus Mayer <mmayer@broadcom.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Sumeet Pawnikar <sumeet.r.pawnikar@intel.com>
    Acked-by: Alejandro González <alejandro.gonzalez.correo@gmail.com>
    Tested-by: Alejandro González <alejandro.gonzalez.correo@gmail.com>
    Fixes: 94f69966faf8 ("tools/thermal: Introduce tmon, a tool for thermal  subsystem")
    Link: https://lore.kernel.org/r/20220718031040.44714-1-f.fainelli@gmail.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7aa3a2559915cb24589109b7349bb03cd23640c7
Author: YiFei Zhu <zhuyifei@google.com>
Date:   Thu May 26 22:34:07 2022 +0000

    selftests/seccomp: Fix compile warning when CC=clang
    
    [ Upstream commit 3ce4b78f73e8e00fb86bad67ee7f6fe12019707e ]
    
    clang has -Wconstant-conversion by default, and the constant 0xAAAAAAAAA
    (9 As) being converted to an int, which is generally 32 bits, results
    in the compile warning:
    
      clang -Wl,-no-as-needed -Wall -isystem ../../../../usr/include/  -lpthread  seccomp_bpf.c -lcap -o seccomp_bpf
      seccomp_bpf.c:812:67: warning: implicit conversion from 'long' to 'int' changes value from 45812984490 to -1431655766 [-Wconstant-conversion]
              int kill = kill_how == KILL_PROCESS ? SECCOMP_RET_KILL_PROCESS : 0xAAAAAAAAA;
                  ~~~~                                                         ^~~~~~~~~~~
      1 warning generated.
    
    -1431655766 is the expected truncation, 0xAAAAAAAA (8 As), so use
    this directly in the code to avoid the warning.
    
    Fixes: 3932fcecd962 ("selftests/seccomp: Add test for unknown SECCOMP_RET kill behavior")
    Signed-off-by: YiFei Zhu <zhuyifei@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220526223407.1686936-1-zhuyifei@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e06a31e61f96af5473190bd96bf89390125958d2
Author: Nicolas Saenz Julienne <nsaenzju@redhat.com>
Date:   Tue Jun 28 11:22:59 2022 +0200

    nohz/full, sched/rt: Fix missed tick-reenabling bug in dequeue_task_rt()
    
    [ Upstream commit 5c66d1b9b30f737fcef85a0b75bfe0590e16b62a ]
    
    dequeue_task_rt() only decrements 'rt_rq->rt_nr_running' after having
    called sched_update_tick_dependency() preventing it from re-enabling the
    tick on systems that no longer have pending SCHED_RT tasks but have
    multiple runnable SCHED_OTHER tasks:
    
      dequeue_task_rt()
        dequeue_rt_entity()
          dequeue_rt_stack()
            dequeue_top_rt_rq()
              sub_nr_running()      // decrements rq->nr_running
                sched_update_tick_dependency()
                  sched_can_stop_tick()     // checks rq->rt.rt_nr_running,
                  ...
            __dequeue_rt_entity()
              dec_rt_tasks()        // decrements rq->rt.rt_nr_running
              ...
    
    Every other scheduler class performs the operation in the opposite
    order, and sched_update_tick_dependency() expects the values to be
    updated as such. So avoid the misbehaviour by inverting the order in
    which the above operations are performed in the RT scheduler.
    
    Fixes: 76d92ac305f2 ("sched: Migrate sched to use new tick dependency mask model")
    Signed-off-by: Nicolas Saenz Julienne <nsaenzju@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <vschneid@redhat.com>
    Reviewed-by: Phil Auld <pauld@redhat.com>
    Link: https://lore.kernel.org/r/20220628092259.330171-1-nsaenzju@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 298417471e82344b5ed37dfcb2b0d1890e9a1f57
Author: Anshuman Khandual <anshuman.khandual@arm.com>
Date:   Thu Jul 14 11:43:02 2022 +0530

    drivers/perf: arm_spe: Fix consistency of SYS_PMSCR_EL1.CX
    
    [ Upstream commit 92f2b8bafa3d6e89c750e9d301a8b7ab76aaa8b6 ]
    
    The arm_spe_pmu driver will enable SYS_PMSCR_EL1.CX in order to add CONTEXT
    packets into the traces, if the owner of the perf event runs with required
    capabilities i.e CAP_PERFMON or CAP_SYS_ADMIN via perfmon_capable() helper.
    
    The value of this bit is computed in the arm_spe_event_to_pmscr() function
    but the check for capabilities happens in the pmu event init callback i.e
    arm_spe_pmu_event_init(). This suggests that the value of the CX bit should
    remain consistent for the duration of the perf session.
    
    However, the function arm_spe_event_to_pmscr() may be called later during
    the event start callback i.e arm_spe_pmu_start() when the "current" process
    is not the owner of the perf session, hence the CX bit setting is currently
    not consistent.
    
    One way to fix this, is by caching the required value of the CX bit during
    the initialization of the PMU event, so that it remains consistent for the
    duration of the session. It uses currently unused 'event->hw.flags' element
    to cache perfmon_capable() value, which can be referred during event start
    callback to compute SYS_PMSCR_EL1.CX. This ensures consistent availability
    of context packets in the trace as per event owner capabilities.
    
    Drop BIT(SYS_PMSCR_EL1_CX_SHIFT) check in arm_spe_pmu_event_init(), because
    now CX bit cannot be set in arm_spe_event_to_pmscr() with perfmon_capable()
    disabled.
    
    Cc: Will Deacon <will@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Fixes: d5d9696b0380 ("drivers/perf: Add support for ARMv8.2 Statistical Profiling Extension")
    Reported-by: German Gomez <german.gomez@arm.com>
    Signed-off-by: Anshuman Khandual <anshuman.khandual@arm.com>
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Link: https://lore.kernel.org/r/20220714061302.2715102-1-anshuman.khandual@arm.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1891d3df719ca372da2375a3933d3dce9ef80fc
Author: Sumit Garg <sumit.garg@linaro.org>
Date:   Mon Jul 11 14:00:38 2022 +0530

    arm64: dts: qcom: qcs404: Fix incorrect USB2 PHYs assignment
    
    [ Upstream commit 58577966a42fc0b660b5e2c7c9e5a2241363ea83 ]
    
    Currently the DT for QCS404 SoC has setup for 2 USB2 PHYs with one each
    assigned to USB3 controller and USB2 controller. This assignment is
    incorrect which only works by luck: as when each USB HCI comes up it
    configures the *other* controllers PHY which is enough to make them
    happy. If, for any reason, we were to disable one of the controllers then
    both would stop working.
    
    This was a difficult inconsistency to be caught which was found while
    trying to enable USB support in u-boot. So with all the required drivers
    ported to u-boot, I couldn't get the same USB storage device enumerated
    in u-boot which was being enumerated fine by the kernel.
    
    The root cause of the problem came out to be that I wasn't enabling USB2
    PHY: "usb2_phy_prim" in u-boot. Then I realised that via simply disabling
    the same USB2 PHY currently assigned to USB2 host controller in the
    kernel disabled enumeration for USB3 host controller as well.
    
    So fix this inconsistency by correctly assigning USB2 PHYs.
    
    Fixes: 9375e7d719b3 ("arm64: dts: qcom: qcs404: Add USB devices and PHYs")
    Signed-off-by: Sumit Garg <sumit.garg@linaro.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220711083038.1518529-1-sumit.garg@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7753a260e536dc7918d18cf1da7bcfecff319a5
Author: Konrad Dybcio <konrad.dybcio@somainline.org>
Date:   Thu Jul 7 23:21:58 2022 +0200

    soc: qcom: Make QCOM_RPMPD depend on PM
    
    [ Upstream commit a6232f2aa99ce470799992e99e0012945bb5308f ]
    
    QCOM_RPMPD requires PM_GENERIC_DOMAINS/_OF, which in turns requires
    CONFIG_PM. I forgot about the latter in my earlier patch (it's still
    in -next as of the time of committing, hence no Fixes: tag). Fix it.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220707212158.32684-1-konrad.dybcio@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 332e555dca074c4eb2084898021c3676423814c3
Author: Liang He <windhl@126.com>
Date:   Fri Jul 15 19:10:27 2022 +0800

    regulator: of: Fix refcount leak bug in of_get_regulation_constraints()
    
    [ Upstream commit 66efb665cd5ad69b27dca8571bf89fc6b9c628a4 ]
    
    We should call the of_node_put() for the reference returned by
    of_get_child_by_name() which has increased the refcount.
    
    Fixes: 40e20d68bb3f ("regulator: of: Add support for parsing regulator_state for suspend state")
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220715111027.391032-1-windhl@126.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ed71e6bcedbbf40e19c2c808df9d2e5891a7314
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Jul 14 11:06:36 2022 -0700

    blktrace: Trace remapped requests correctly
    
    [ Upstream commit 22c80aac882f712897b88b7ea8f5a74ea19019df ]
    
    Trace the remapped operation and its flags instead of only the data
    direction of remapped operations. This issue was detected by analyzing
    the warnings reported by sparse related to the new blk_opf_t type.
    
    Reviewed-by: Jun'ichi Nomura <junichi.nomura@nec.com>
    Cc: Mike Snitzer <snitzer@kernel.org>
    Cc: Mike Christie <michael.christie@oracle.com>
    Cc: Li Zefan <lizf@cn.fujitsu.com>
    Cc: Chaitanya Kulkarni <kch@nvidia.com>
    Fixes: 1b9a9ab78b0a ("blktrace: use op accessors")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Link: https://lore.kernel.org/r/20220714180729.1065367-11-bvanassche@acm.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cb3032406423b25aa984854b4d78e0100d292dd
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Dec 3 17:21:39 2020 +0100

    block: remove the request_queue to argument request based tracepoints
    
    [ Upstream commit a54895fa057c67700270777f7661d8d3c7fda88a ]
    
    The request_queue can trivially be derived from the request.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d125b13a668216e163b5f180a38157fa04ac3b89
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Jul 12 23:46:24 2022 +0200

    hwmon: (drivetemp) Add module alias
    
    [ Upstream commit 5918036cfa8ded7aa8094db70295011ce2275447 ]
    
    Adding a MODULE_ALIAS() to drivetemp will make the driver easier
    for modprobe to autoprobe.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20220712214624.1845158-1-linus.walleij@linaro.org
    Fixes: 5b46903d8bf3 ("hwmon: Driver for disk and solid state drives with temperature sensors")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed6ae2381150bd8235e5f8460913ea6152bde2e1
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Jul 11 17:08:08 2022 +0800

    blk-mq: don't create hctx debugfs dir until q->debugfs_dir is created
    
    [ Upstream commit f3ec5d11554778c24ac8915e847223ed71d104fc ]
    
    blk_mq_debugfs_register_hctx() can be called by blk_mq_update_nr_hw_queues
    when gendisk isn't added yet, such as nvme tcp.
    
    Fixes the warning of 'debugfs: Directory 'hctx0' with parent '/' already present!'
    which can be observed reliably when running blktests nvme/005.
    
    Fixes: 6cfc0081b046 ("blk-mq: no need to check return value of debugfs_create functions")
    Reported-by: Yi Zhang <yi.zhang@redhat.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Tested-by: Yi Zhang <yi.zhang@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20220711090808.259682-1-ming.lei@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ca556256fb438bb754936e9ec210dc1b26b622f
Author: Gao Xiang <xiang@kernel.org>
Date:   Fri Jul 8 18:10:01 2022 +0800

    erofs: avoid consecutive detection for Highmem memory
    
    [ Upstream commit 448b5a1548d87c246c3d0c3df8480d3c6eb6c11a ]
    
    Currently, vmap()s are avoided if physical addresses are
    consecutive for decompressed buffers.
    
    I observed that is very common for 4KiB pclusters since the
    numbers of decompressed pages are almost 2 or 3.
    
    However, such detection doesn't work for Highmem pages on
    32-bit machines, let's fix it now.
    
    Reported-by: Liu Jinbao <liujinbao1@xiaomi.com>
    Fixes: 7fc45dbc938a ("staging: erofs: introduce generic decompression backend")
    Link: https://lore.kernel.org/r/20220708101001.21242-1-hsiangkao@linux.alibaba.com
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dee22b4576dde8de322a4f7fa6107a3fa139acf
Author: Tamás Szűcs <tszucs@protonmail.ch>
Date:   Sun Jun 12 14:59:45 2022 +0000

    arm64: tegra: Fix SDMMC1 CD on P2888
    
    [ Upstream commit b415bb7c976f1d595ed752001c0938f702645dab ]
    
    Hook SDMMC1 CD up with CVM GPIO02 (SOC_GPIO11) used for card detection on J4
    (uSD socket) on the carrier.
    
    Fixes: ef633bfc21e9 ("arm64: tegra: Enable card detect for SD card on P2888")
    Signed-off-by: Tamás Szűcs <tszucs@protonmail.ch>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1e2386909169276bd45cdc714f6d7ff943fe345
Author: Nick Hainke <vincent@systemli.org>
Date:   Thu Jun 30 13:16:57 2022 +0200

    arm64: dts: mt7622: fix BPI-R64 WPS button
    
    [ Upstream commit c98e6e683632386a3bd284acda4342e68aec4c41 ]
    
    The bananapi R64 (BPI-R64) experiences wrong WPS button signals.
    In OpenWrt pushing the WPS button while powering on the device will set
    it to recovery mode. Currently, this also happens without any user
    interaction. In particular, the wrong signals appear while booting the
    device or restarting it, e.g. after doing a system upgrade. If the
    device is in recovery mode the user needs to manually power cycle or
    restart it.
    
    The official BPI-R64 sources set the WPS button to GPIO_ACTIVE_LOW in
    the device tree. This setting seems to suppress the unwanted WPS button
    press signals. So this commit changes the button from GPIO_ACTIVE_HIGH to
    GPIO_ACTIVE_LOW.
    
    The official BPI-R64 sources can be found on
    https://github.com/BPI-SINOVOIP/BPI-R64-openwrt
    
    Fixes: 0b6286dd96c0 ("arm64: dts: mt7622: add bananapi BPI-R64 board")
    
    Suggested-by: INAGAKI Hiroshi <musashino.open@gmail.com>
    Signed-off-by: Nick Hainke <vincent@systemli.org>
    Link: https://lore.kernel.org/r/20220630111746.4098-1-vincent@systemli.org
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7eafa9a1aa527fd0217dd8bd19816aa4b12a286b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Jul 1 17:43:52 2022 +0800

    bus: hisi_lpc: fix missing platform_device_put() in hisi_lpc_acpi_probe()
    
    [ Upstream commit 54872fea6a5ac967ec2272aea525d1438ac6735a ]
    
    In error case in hisi_lpc_acpi_probe() after calling platform_device_add(),
    hisi_lpc_acpi_remove() can't release the failed 'pdev', so it will be leak,
    call platform_device_put() to fix this problem.
    I'v constructed this error case and tested this patch on D05 board.
    
    Fixes: 99c0228d6ff1 ("HISI LPC: Re-Add ACPI child enumeration support")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fcf4401d5390304bb84520939436d0e9ef1fa2b
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Jun 8 13:27:02 2022 +0200

    ARM: dts: qcom: pm8841: add required thermal-sensor-cells
    
    [ Upstream commit e2759fa0676c9a32bbddb9aff955b54bb35066ad ]
    
    The PM8841 temperature sensor has to define thermal-sensor-cells.
    
    Fixes: dab8134ca072 ("ARM: dts: qcom: Add PM8841 functions device nodes")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220608112702.80873-2-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97713ed9b6cc4abaa2dcc8357113c56520dc6d7f
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jun 6 10:42:52 2022 +0400

    soc: qcom: aoss: Fix refcount leak in qmp_cooling_devices_register
    
    [ Upstream commit e6e0951414a314e7db3e9e24fd924b3e15515288 ]
    
    Every iteration of for_each_available_child_of_node() decrements
    the reference count of the previous node.
    When breaking early from a for_each_available_child_of_node() loop,
    we need to explicitly call of_node_put() on the child node.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 05589b30b21a ("soc: qcom: Extend AOSS QMP driver to support resources that are used to wake up the SoC.")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220606064252.42595-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07aea6819d569d1e172227486655e4fb5bd4cdb9
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jun 2 08:24:30 2022 +0400

    soc: qcom: ocmem: Fix refcount leak in of_get_ocmem
    
    [ Upstream commit 92a563fcf14b3093226fb36f12e9b5cf630c5a5d ]
    
    of_parse_phandle() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    of_node_put() will check NULL pointer.
    
    Fixes: 88c1e9404f1d ("soc: qcom: add OCMEM driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Brian Masney <masneyb@onstation.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220602042430.1114-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71042279b161ba329d730e5fe517adbc106c031b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Jun 24 16:05:26 2022 -0700

    ACPI: APEI: Fix _EINJ vs EFI_MEMORY_SP
    
    [ Upstream commit b13a3e5fd40b7d1b394c5ecbb5eb301a4c38e7b2 ]
    
    When a platform marks a memory range as "special purpose" it is not
    onlined as System RAM by default. However, it is still suitable for
    error injection. Add IORES_DESC_SOFT_RESERVED to einj_error_inject() as
    a permissible memory type in the sanity checking of the arguments to
    _EINJ.
    
    Fixes: 262b45ae3ab4 ("x86/efi: EFI soft reservation to E820 enumeration")
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Reported-by: Omar Avelar <omar.avelar@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f29b045da228e96c0768c461b724c434e8f2f4a
Author: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
Date:   Thu Jun 23 11:46:12 2022 +0200

    regulator: qcom_smd: Fix pm8916_pldo range
    
    [ Upstream commit e8977917e116d1571dacb8e9864474551c1c12bd ]
    
    The PM8916 device specification [1] documents a programmable range of
    1.75V to 3.337V with 12.5mV steps for the PMOS LDOs in PM8916. This
    range is also used when controlling the regulator directly using the
    qcom_spmi-regulator driver ("ult_pldo" there).
    
    However, for some reason the qcom_smd-regulator driver allows a much
    larger range for the same hardware component. This could be simply a
    typo, since the start of the range is essentially just missing a '1'.
    
    In practice this does not cause any major problems, since the driver
    just sends the actual voltage to the RPM firmware instead of making use
    of the incorrect voltage selector. Still, having the wrong range there
    is confusing and prevents the regulator core from validating requests
    correctly.
    
    [1]: https://developer.qualcomm.com/download/sd410/pm8916pm8916-1-power-management-ic-device-specification.pdf
    
    Fixes: 57d6567680ed ("regulator: qcom-smd: Add PM8916 support")
    Signed-off-by: Stephan Gerhold <stephan.gerhold@kernkonzept.com>
    Link: https://lore.kernel.org/r/20220623094614.1410180-2-stephan.gerhold@kernkonzept.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22e6d8bcde8e66b64f46bf9bd2d3d0f88d40c39f
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Sun Jun 5 12:28:07 2022 +0400

    cpufreq: zynq: Fix refcount leak in zynq_get_revision
    
    [ Upstream commit d1ff2559cef0f6f8d97fba6337b28adb10689e16 ]
    
    of_find_compatible_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 00f7dc636366 ("ARM: zynq: Add support for SOC_BUS")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220605082807.21526-1-linmq006@gmail.com
    Signed-off-by: Michal Simek <michal.simek@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d294d60dc68550fee0fbbe8a638d798dcd40b2c5
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu May 26 11:37:24 2022 +0400

    ARM: OMAP2+: Fix refcount leak in omap3xxx_prm_late_init
    
    [ Upstream commit 942228fbf5d4901112178b93d41225be7c0dd9de ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 1e037794f7f0 ("ARM: OMAP3+: PRM: register interrupt information from DT")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Message-Id: <20220526073724.21169-1-linmq006@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14bac0c7035bf920e190a63c7e1b113c72eadbf4
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Jun 1 08:48:58 2022 +0400

    ARM: OMAP2+: Fix refcount leak in omapdss_init_of
    
    [ Upstream commit 9705db1eff38d6b9114121f9e253746199b759c9 ]
    
    omapdss_find_dss_of_node() calls of_find_compatible_node() to get device
    node. of_find_compatible_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when done.
    Add missing of_node_put() in later error path and normal path.
    
    Fixes: e0c827aca0730 ("drm/omap: Populate DSS children in omapdss driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Message-Id: <20220601044858.3352-1-linmq006@gmail.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdcb1fdbdc15634f12d4e9218e6d884fd1809872
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sat May 7 21:49:12 2022 +0200

    ARM: dts: qcom: mdm9615: add missing PMIC GPIO reg
    
    [ Upstream commit dc590cdc31f636ea15658f1206c3e380a53fb78e ]
    
    'reg' property is required in SSBI children:
      qcom-mdm9615-wp8548-mangoh-green.dtb: gpio@150: 'reg' is a required property
    
    Fixes: 2c5e596524e7 ("ARM: dts: Add MDM9615 dtsi")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220507194913.261121-11-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c32d5491c841a34adccb351155a08b412ecb7d69
Author: Keith Busch <kbusch@kernel.org>
Date:   Fri Jun 10 12:58:20 2022 -0700

    block: fix infinite loop for invalid zone append
    
    [ Upstream commit b82d9fa257cb3725c49d94d2aeafc4677c34448a ]
    
    Returning 0 early from __bio_iov_append_get_pages() for the
    max_append_sectors warning just creates an infinite loop since 0 means
    success, and the bio will never fill from the unadvancing iov_iter. We
    could turn the return into an error value, but it will already be turned
    into an error value later on, so just remove the warning. Clearly no one
    ever hit it anyway.
    
    Fixes: 0512a75b98f84 ("block: Introduce REQ_OP_ZONE_APPEND")
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Link: https://lore.kernel.org/r/20220610195830.3574005-2-kbusch@fb.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d9a1a96eb0a314561418e867999f8c3df1c6442
Author: Michael Walle <michael@walle.cc>
Date:   Mon Apr 4 11:56:03 2022 +0200

    soc: fsl: guts: machine variable might be unset
    
    [ Upstream commit ab3f045774f704c4e7b6a878102f4e9d4ae7bc74 ]
    
    If both the model and the compatible properties are missing, then
    machine will not be set. Initialize it with NULL.
    
    Fixes: 34c1c21e94ac ("soc: fsl: fix section mismatch build warnings")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cea8391778a4729174311320415df4ac8a808b0
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Jun 17 15:26:06 2022 +0200

    locking/lockdep: Fix lockdep_init_map_*() confusion
    
    [ Upstream commit eae6d58d67d9739be5f7ae2dbead1d0ef6528243 ]
    
    Commit dfd5e3f5fe27 ("locking/lockdep: Mark local_lock_t") added yet
    another lockdep_init_map_*() variant, but forgot to update all the
    existing users of the most complicated version.
    
    This could lead to a loss of lock_type and hence an incorrect report.
    Given the relative rarity of both local_lock and these annotations,
    this is unlikely to happen in practise, still, best fix things.
    
    Fixes: dfd5e3f5fe27 ("locking/lockdep: Mark local_lock_t")
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/YqyEDtoan20K0CVD@worktop.programming.kicks-ass.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87e415aec4e63577f7e8e3bd39f93285ec8d3a41
Author: Alexandru Elisei <alexandru.elisei@arm.com>
Date:   Fri Jun 17 12:13:32 2022 +0100

    arm64: cpufeature: Allow different PMU versions in ID_DFR0_EL1
    
    [ Upstream commit 506506cad3947b942425b119ffa2b06715d5d804 ]
    
    Commit b20d1ba3cf4b ("arm64: cpufeature: allow for version discrepancy in
    PMU implementations") made it possible to run Linux on a machine with PMUs
    with different versions without tainting the kernel. The patch relaxed the
    restriction only for the ID_AA64DFR0_EL1.PMUVer field, and missed doing the
    same for ID_DFR0_EL1.PerfMon , which also reports the PMU version, but for
    the AArch32 state.
    
    For example, with Linux running on two clusters with different PMU
    versions, the kernel is tainted when bringing up secondaries with the
    following message:
    
    [    0.097027] smp: Bringing up secondary CPUs ...
    [..]
    [    0.142805] Detected PIPT I-cache on CPU4
    [    0.142805] CPU features: SANITY CHECK: Unexpected variation in SYS_ID_DFR0_EL1. Boot CPU: 0x00000004011088, CPU4: 0x00000005011088
    [    0.143555] CPU features: Unsupported CPU feature variation detected.
    [    0.143702] GICv3: CPU4: found redistributor 10000 region 0:0x000000002f180000
    [    0.143702] GICv3: CPU4: using allocated LPI pending table @0x00000008800d0000
    [    0.144888] CPU4: Booted secondary processor 0x0000010000 [0x410fd0f0]
    
    The boot CPU implements FEAT_PMUv3p1 (ID_DFR0_EL1.PerfMon, bits 27:24, is
    0b0100), but CPU4, part of the other cluster, implements FEAT_PMUv3p4
    (ID_DFR0_EL1.PerfMon = 0b0101).
    
    Treat the PerfMon field as FTR_NONSTRICT and FTR_EXACT to pass the sanity
    check and to match how PMUVer is treated for the 64bit ID register.
    
    Fixes: b20d1ba3cf4b ("arm64: cpufeature: allow for version discrepancy in PMU implementations")
    Signed-off-by: Alexandru Elisei <alexandru.elisei@arm.com>
    Link: https://lore.kernel.org/r/20220617111332.203061-1-alexandru.elisei@arm.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30119131e3acb0680f469fbfd91a34c001cac181
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Jul 7 18:07:44 2021 -0700

    hexagon: select ARCH_WANT_LD_ORPHAN_WARN
    
    [ Upstream commit 113616ec5b64b23a1c9b663adafadabdfbec0f51 ]
    
    Now that we handle all of the sections in a Hexagon defconfig, select
    ARCH_WANT_LD_ORPHAN_WARN so that unhandled sections are warned about by
    default.
    
    Link: https://lkml.kernel.org/r/20210521011239.1332345-4-nathan@kernel.org
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Acked-by: Brian Cain <bcain@codeaurora.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Oliver Glitta <glittao@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d744229cdbe5367fde3d83d706c508c0dc4cd9b
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sun May 29 12:49:26 2022 +0200

    ARM: dts: ast2600-evb: fix board compatible
    
    [ Upstream commit aa5e06208500a0db41473caebdee5a2e81d5a277 ]
    
    The AST2600 EVB board should have dedicated compatible.
    
    Fixes: 2ca5646b5c2f ("ARM: dts: aspeed: Add AST2600 and EVB")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220529104928.79636-5-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75a24da2b9fee66b0c9c05ffac52418618219f2f
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sun May 29 12:49:25 2022 +0200

    ARM: dts: ast2500-evb: fix board compatible
    
    [ Upstream commit 30b276fca5c0644f3cb17bceb1bd6a626c670184 ]
    
    The AST2500 EVB board should have dedicated compatible.
    
    Fixes: 02440622656d ("arm/dst: Add Aspeed ast2500 device tree")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20220529104928.79636-4-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c07688d3e89e71cb39cef8dbaddbe6492c217ef
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jun 20 16:07:23 2022 +0200

    x86/pmem: Fix platform-device leak in error path
    
    [ Upstream commit 229e73d46994f15314f58b2d39bf952111d89193 ]
    
    Make sure to free the platform device in the unlikely event that
    registration fails.
    
    Fixes: 7a67832c7e44 ("libnvdimm, e820: make CONFIG_X86_PMEM_LEGACY a tristate option")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/r/20220620140723.9810-1-johan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a28f363d3904713a0dd0e101c16bc656504d58f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jun 15 16:04:26 2022 +0200

    arm64: dts: renesas: Fix thermal-sensors on single-zone sensors
    
    [ Upstream commit 62e8a53431145e06e503b71625a34eaa87b72b2c ]
    
    "make dtbs_check":
    
        arch/arm64/boot/dts/renesas/r8a774c0-cat874.dtb: thermal-zones: cpu-thermal:thermal-sensors: [[74], [0]] is too long
        arch/arm64/boot/dts/renesas/r8a774c0-ek874.dtb: thermal-zones: cpu-thermal:thermal-sensors: [[79], [0]] is too long
        arch/arm64/boot/dts/renesas/r8a774c0-ek874-idk-2121wr.dtb: thermal-zones: cpu-thermal:thermal-sensors: [[82], [0]] is too long
        arch/arm64/boot/dts/renesas/r8a774c0-ek874-mipi-2.1.dtb: thermal-zones: cpu-thermal:thermal-sensors: [[87], [0]] is too long
        arch/arm64/boot/dts/renesas/r8a77990-ebisu.dtb: thermal-zones: cpu-thermal:thermal-sensors: [[105], [0]] is too long
                From schema: Documentation/devicetree/bindings/thermal/thermal-zones.yaml
    
    Indeed, the thermal sensors on R-Car E3 and RZ/G2E support only a single
    zone, hence #thermal-sensor-cells = <0>.
    
    Fix this by dropping the bogus zero cell from the thermal sensor
    specifiers.
    
    Fixes: 8fa7d18f9ee2dc20 ("arm64: dts: renesas: r8a77990: Create thermal zone to support IPA")
    Fixes: 8438bfda9d768157 ("arm64: dts: renesas: r8a774c0: Create thermal zone to support IPA")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/28b812fdd1fc3698311fac984ab8b91d3d655c1c.1655301684.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80c469e63bfa9a5a8114952bffc6a7d241e7497e
Author: Liang He <windhl@126.com>
Date:   Thu Jun 16 22:49:15 2022 +0800

    soc: amlogic: Fix refcount leak in meson-secure-pwrc.c
    
    [ Upstream commit d18529a4c12f66d83daac78045ea54063bd43257 ]
    
    In meson_secure_pwrc_probe(), there is a refcount leak in one fail
    path.
    
    Signed-off-by: Liang He <windhl@126.com>
    Acked-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Fixes: b3dde5013e13 ("soc: amlogic: Add support for Secure power domains controller")
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20220616144915.3988071-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cd8ba0c0b06228c828b833e7f4490a4fb8a1ac8
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jun 8 15:51:35 2022 +0200

    soc: renesas: r8a779a0-sysc: Fix A2DP1 and A2CV[2357] PDR values
    
    [ Upstream commit bccceabb92ce8eb78bbf2de08308e2cc2761a2e5 ]
    
    The PDR values for the A2DP1 and A2CV[2357] power areas on R-Car V3U are
    incorrect (copied-and-pasted from A2DP0 and A2CV[0146]).
    Fix them.
    
    Reported-by: Renesas Vietnam via Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Fixes: 1b4298f000064cc2 ("soc: renesas: r8a779a0-sysc: Add r8a779a0 support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/87bc2e70ba4082970cf8c65871beae4be3503189.1654696188.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6771609e1933c5d2e5c272f0c9f07b18052a9c3d
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Nov 9 18:00:06 2020 -0800

    Input: atmel_mxt_ts - fix up inverted RESET handler
    
    [ Upstream commit feedaacdadfc332e1a6e436f3adfbc67e244db47 ]
    
    This driver uses GPIO descriptors to drive the touchscreen RESET line. In
    the existing device trees this has in conflict with intution been flagged
    as GPIO_ACTIVE_HIGH and the driver then applies the reverse action by
    driving the line low (setting to 0) to enter reset state and driving the
    line high (setting to 1) to get out of reset state.
    
    The correct way to handle active low GPIO lines is to provide the
    GPIO_ACTIVE_LOW in the device tree (thus properly describing the hardware)
    and letting the GPIO framework invert the assertion (driving high) to a
    low level and vice versa.
    
    This is considered a bug since the device trees are incorrectly
    mis-specifying the line as active high.
    
    Fix the driver and all device trees specifying a reset line.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Philippe Schenker <philippe.schenker@toradex.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201104153032.1387747-1-linus.walleij@linaro.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11903c5457fddf719217711e720aad4386905bc3
Author: Marcel Ziswiler <marcel.ziswiler@toradex.com>
Date:   Mon May 16 15:47:23 2022 +0200

    ARM: dts: imx7d-colibri-emmc: add cpu1 supply
    
    [ Upstream commit ba28db60d34271e8a3cf4d7158d71607e8b1e57f ]
    
    Each cpu-core is supposed to list its supply separately, add supply for
    cpu1.
    
    Fixes: 2d7401f8632f ("ARM: dts: imx7d: Add cpu1 supply")
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8b1f0d74ff2d404a8f512c03369a994d1dbe698
Author: Guilherme G. Piccoli <gpiccoli@igalia.com>
Date:   Tue Jun 7 19:24:58 2022 -0300

    ACPI: processor/idle: Annotate more functions to live in cpuidle section
    
    [ Upstream commit 409dfdcaffb266acfc1f33529a26b1443c9332d4 ]
    
    Commit 6727ad9e206c ("nmi_backtrace: generate one-line reports for idle cpus")
    introduced a new text section called cpuidle; with that, we have a mechanism
    to add idling functions in such section and skip them from nmi_backtrace
    output, since they're useless and potentially flooding for such report.
    
    Happens that inlining might cause some real idle functions to end-up
    outside of such section; this is currently the case of ACPI processor_idle
    driver; the functions acpi_idle_enter_* do inline acpi_idle_do_entry(),
    hence they stay out of the cpuidle section.
    Fix that by marking such functions to also live in the cpuidle section.
    
    Fixes: 6727ad9e206c ("nmi_backtrace: generate one-line reports for idle cpus")
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91e7f04f53e680bc72f0a9a5c682ab652100b9c8
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu May 26 12:13:25 2022 +0400

    ARM: bcm: Fix refcount leak in bcm_kona_smc_init
    
    [ Upstream commit cb23389a2458c2e4bfd6c86a513cbbe1c4d35e76 ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: b8eb35fd594a ("ARM: bcm281xx: Add L2 cache enable code")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6a6cc6d577a9c7b4a935af1b51ab82c565bc650
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed May 11 12:14:06 2022 +0200

    arm64: dts: renesas: beacon: Fix regulator node names
    
    [ Upstream commit 7512af9f78dedea7e04225f665dad6750df7d095 ]
    
    Currently there are two nodes named "regulator_camera".  This causes the
    former to be overwritten by the latter.
    
    Fix this by renaming them to unique names, using the preferred hyphen
    instead of an underscore.
    
    While at it, update the name of the audio regulator (which was added in
    the same commit) to use a hyphen.
    
    Fixes: a1d8a344f1ca0709 ("arm64: dts: renesas: Introduce r8a774a1-beacon-rzg2m-kit")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/a9ac82bdf108162487289d091c53a9b3de393f13.1652263918.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2691b8780f88e1b8b3578a5bc78a0011741bbd74
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue May 24 10:57:29 2022 +0400

    meson-mx-socinfo: Fix refcount leak in meson_mx_socinfo_init
    
    [ Upstream commit a2106f38077e78afcb4bf98fdda3e162118cfb3d ]
    
    of_find_matching_node() returns a node pointer with refcount
    incremented, we should use of_node_put() on it when not need anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 5e68c0fc8df8 ("soc: amlogic: Add Meson6/Meson8/Meson8b/Meson8m2 SoC Information driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20220524065729.33689-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccf56ea52b3ebd550cc5a1c477424049b7a597e7
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Tue Jul 26 23:51:48 2022 +0100

    ARM: findbit: fix overflowing offset
    
    [ Upstream commit ec85bd369fd2bfaed6f45dd678706429d4f75b48 ]
    
    When offset is larger than the size of the bit array, we should not
    attempt to access the array as we can perform an access beyond the
    end of the array. Fix this by changing the pre-condition.
    
    Using "cmp r2, r1; bhs ..." covers us for the size == 0 case, since
    this will always take the branch when r1 is zero, irrespective of
    the value of r2. This means we can fix this bug without adding any
    additional code!
    
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71fc6e0dcacaa109c78640d3cdf355c68727d010
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Thu Jul 21 15:34:49 2022 +0100

    spi: spi-rspi: Fix PIO fallback on RZ platforms
    
    [ Upstream commit b620aa3a7be346f04ae7789b165937615c6ee8d3 ]
    
    RSPI IP on RZ/{A, G2L} SoC's has the same signal for both interrupt
    and DMA transfer request. Setting DMARS register for DMA transfer
    makes the signal to work as a DMA transfer request signal and
    subsequent interrupt requests to the interrupt controller
    are masked.
    
    PIO fallback does not work as interrupt signal is disabled.
    
    This patch fixes this issue by re-enabling the interrupts by
    calling dmaengine_synchronize().
    
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20220721143449.879257-1-biju.das.jz@bp.renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4234c5f34e71ca389f146de06f52b641fb2f7697
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Jul 18 23:44:18 2022 +1000

    powerpc/64s: Disable stack variable initialisation for prom_init
    
    [ Upstream commit be640317a1d0b9cf42fedb2debc2887a7cfa38de ]
    
    With GCC 12 allmodconfig prom_init fails to build:
    
      Error: External symbol 'memset' referenced from prom_init.c
      make[2]: *** [arch/powerpc/kernel/Makefile:204: arch/powerpc/kernel/prom_init_check] Error 1
    
    The allmodconfig build enables KASAN, so all calls to memset in
    prom_init should be converted to __memset by the #ifdefs in
    asm/string.h, because prom_init must use the non-KASAN instrumented
    versions.
    
    The build failure happens because there's a call to memset that hasn't
    been caught by the pre-processor and converted to __memset. Typically
    that's because it's a memset generated by the compiler itself, and that
    is the case here.
    
    With GCC 12, allmodconfig enables CONFIG_INIT_STACK_ALL_PATTERN, which
    causes the compiler to emit memset calls to initialise on-stack
    variables with a pattern.
    
    Because prom_init is non-user-facing boot-time only code, as a
    workaround just disable stack variable initialisation to unbreak the
    build.
    
    Reported-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220718134418.354114-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adbfdaacde18faf6cd4e490764045375266b3fbd
Author: Xiu Jianfeng <xiujianfeng@huawei.com>
Date:   Tue Jun 14 10:14:49 2022 +0800

    selinux: Add boundary check in put_entry()
    
    [ Upstream commit 15ec76fb29be31df2bccb30fc09875274cba2776 ]
    
    Just like next_entry(), boundary check is necessary to prevent memory
    out-of-bound access.
    
    Signed-off-by: Xiu Jianfeng <xiujianfeng@huawei.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 003a456ae6f70bb97e436e02fc5105be577c1570
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Jul 15 14:49:58 2022 +0900

    PM: hibernate: defer device probing when resuming from hibernation
    
    [ Upstream commit 8386c414e27caba8501119948e9551e52b527f59 ]
    
    syzbot is reporting hung task at misc_open() [1], for there is a race
    window of AB-BA deadlock which involves probe_count variable. Currently
    wait_for_device_probe() from snapshot_open() from misc_open() can sleep
    forever with misc_mtx held if probe_count cannot become 0.
    
    When a device is probed by hub_event() work function, probe_count is
    incremented before the probe function starts, and probe_count is
    decremented after the probe function completed.
    
    There are three cases that can prevent probe_count from dropping to 0.
    
      (a) A device being probed stopped responding (i.e. broken/malicious
          hardware).
    
      (b) A process emulating a USB device using /dev/raw-gadget interface
          stopped responding for some reason.
    
      (c) New device probe requests keeps coming in before existing device
          probe requests complete.
    
    The phenomenon syzbot is reporting is (b). A process which is holding
    system_transition_mutex and misc_mtx is waiting for probe_count to become
    0 inside wait_for_device_probe(), but the probe function which is called
     from hub_event() work function is waiting for the processes which are
    blocked at mutex_lock(&misc_mtx) to respond via /dev/raw-gadget interface.
    
    This patch mitigates (b) by deferring wait_for_device_probe() from
    snapshot_open() to snapshot_write() and snapshot_ioctl(). Please note that
    the possibility of (b) remains as long as any thread which is emulating a
    USB device via /dev/raw-gadget interface can be blocked by uninterruptible
    blocking operations (e.g. mutex_lock()).
    
    Please also note that (a) and (c) are not addressed. Regarding (c), we
    should change the code to wait for only one device which contains the
    image for resuming from hibernation. I don't know how to address (a), for
    use of timeout for wait_for_device_probe() might result in loss of user
    data in the image. Maybe we should require the userland to wait for the
    image device before opening /dev/snapshot interface.
    
    Link: https://syzkaller.appspot.com/bug?extid=358c9ab4c93da7b7238c [1]
    Reported-by: syzbot <syzbot+358c9ab4c93da7b7238c@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Tested-by: syzbot <syzbot+358c9ab4c93da7b7238c@syzkaller.appspotmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70bccff899cfe29e1f17dda0c0dbeb843f7d26ac
Author: Lv Ruyi <lv.ruyi@zte.com.cn>
Date:   Tue Apr 19 01:36:48 2022 +0000

    firmware: tegra: Fix error check return value of debugfs_create_file()
    
    [ Upstream commit afcdb8e55c91c6ff0700ab272fd0f74e899ab884 ]
    
    If an error occurs, debugfs_create_file() will return ERR_PTR(-ERROR),
    so use IS_ERR() to check it.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Lv Ruyi <lv.ruyi@zte.com.cn>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2e53a1b0746f4693afa7f88a5ba2e62380334c3
Author: Liang He <windhl@126.com>
Date:   Fri Jul 1 20:18:04 2022 +0800

    ARM: shmobile: rcar-gen2: Increase refcount for new reference
    
    [ Upstream commit 75a185fb92e58ccd3670258d8d3b826bd2fa6d29 ]
    
    In rcar_gen2_regulator_quirk(), for_each_matching_node_and_match() will
    automatically increase and decrease the refcount.  However, we should
    call of_node_get() for the new reference created in 'quirk->np'.
    Besides, we also should call of_node_put() before the 'quirk' being
    freed.
    
    Signed-off-by: Liang He <windhl@126.com>
    Link: https://lore.kernel.org/r/20220701121804.234223-1-windhl@126.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f48cec57367ad7d6eae93ab03b2052b615de2f17
Author: Samuel Holland <samuel@sholland.org>
Date:   Sat Jul 2 08:28:15 2022 -0500

    arm64: dts: allwinner: a64: orangepi-win: Fix LED node name
    
    [ Upstream commit b8eb2df19fbf97aa1e950cf491232c2e3bef8357 ]
    
    "status" does not match any pattern in the gpio-leds binding. Rename the
    node to the preferred pattern. This fixes a `make dtbs_check` error.
    
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220702132816.46456-1-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcdc1e13e0db3f5df7b6b198032172d5dd0a1e71
Author: Robert Marko <robimarko@gmail.com>
Date:   Tue Jun 21 14:06:42 2022 +0200

    arm64: dts: qcom: ipq8074: fix NAND node name
    
    [ Upstream commit b39961659ffc3c3a9e3d0d43b0476547b5f35d49 ]
    
    Per schema it should be nand-controller@79b0000 instead of nand@79b0000.
    Fix it to match nand-controller.yaml requirements.
    
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220621120642.518575-1-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 931d0a574caffeea977ed71c7520a39412ff5db6
Author: huhai <huhai@kylinos.cn>
Date:   Thu Jun 23 21:21:27 2022 +0800

    ACPI: LPSS: Fix missing check in register_device_clock()
    
    [ Upstream commit b4f1f61ed5928b1128e60e38d0dffa16966f06dc ]
    
    register_device_clock() misses a check for platform_device_register_simple().
    Add a check to fix it.
    
    Signed-off-by: huhai <huhai@kylinos.cn>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d257d9b0a44c980bbeae9aef26d0b749852178a1
Author: Manyi Li <limanyi@uniontech.com>
Date:   Wed Jun 22 15:42:48 2022 +0800

    ACPI: PM: save NVS memory for Lenovo G40-45
    
    [ Upstream commit 4b7ef7b05afcde44142225c184bf43a0cd9e2178 ]
    
    [821d6f0359b0614792ab8e2fb93b503e25a65079] is to make machines
    produced from 2012 to now not saving NVS region to accelerate S3.
    
    But, Lenovo G40-45, a platform released in 2015, still needs NVS memory
    saving during S3. A quirk is introduced for this platform.
    
    Signed-off-by: Manyi Li <limanyi@uniontech.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85bc8689a7024f5329abafbf60c2eeb9e808526c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jun 20 11:25:44 2022 +0200

    ACPI: EC: Drop the EC_FLAGS_IGNORE_DSDT_GPE quirk
    
    [ Upstream commit f7090e0ef360d674f08a22fab90e4e209fb1f658 ]
    
    It seems that these quirks are no longer necessary since
    commit 69b957c26b32 ("ACPI: EC: Fix possible issues related to EC
    initialization order"), which has fixed this in a generic manner.
    
    There are 3 commits adding DMI entries with this quirk (adding multiple
    DMI entries per commit). 2/3 commits are from before the generic fix.
    
    Which leaves commit 6306f0431914 ("ACPI: EC: Make more Asus laptops
    use ECDT _GPE"), which was committed way after the generic fix.
    But this was just due to slow upstreaming of it. This commit stems
    from Endless from 15 Aug 2017 (committed upstream 20 May 2021):
    https://github.com/endlessm/linux/pull/288
    
    The current code should work fine without this:
    
     1. The EC_FLAGS_IGNORE_DSDT_GPE flag is only checked in ec_parse_device(),
        like this:
    
            if (boot_ec && boot_ec_is_ecdt && EC_FLAGS_IGNORE_DSDT_GPE) {
                    ec->gpe = boot_ec->gpe;
            } else {
                    /* parse GPE */
            }
    
     2. ec_parse_device() is only called from acpi_ec_add() and
        acpi_ec_dsdt_probe()
    
     3. acpi_ec_dsdt_probe() starts with:
    
            if (boot_ec)
                    return;
    
        so it only calls ec_parse_device() when boot_ec == NULL, meaning that
        the quirk never triggers for this call. So only the call in
        acpi_ec_add() matters.
    
     4. acpi_ec_add() does the following after the ec_parse_device() call:
    
            if (boot_ec && ec->command_addr == boot_ec->command_addr &&
                ec->data_addr == boot_ec->data_addr &&
                !EC_FLAGS_TRUST_DSDT_GPE) {
                    /*
                     * Trust PNP0C09 namespace location rather than
                     * ECDT ID. But trust ECDT GPE rather than _GPE
                     * because of ASUS quirks, so do not change
                     * boot_ec->gpe to ec->gpe.
                     */
                    boot_ec->handle = ec->handle;
                    acpi_handle_debug(ec->handle, "duplicated.\n");
                    acpi_ec_free(ec);
                    ec = boot_ec;
            }
    
    The quirk only matters if boot_ec != NULL and EC_FLAGS_TRUST_DSDT_GPE
    is never set at the same time as EC_FLAGS_IGNORE_DSDT_GPE.
    
    That means that if the addresses match we always enter this if block and
    then only the ec->handle part of the data stored in ec by ec_parse_device()
    is used and the rest is thrown away, after which ec is made to point
    to boot_ec, at which point ec->gpe == boot_ec->gpe, so the same result
    as with the quirk set, independent of the value of the quirk.
    
    Also note the comment in this block which indicates that the gpe result
    from ec_parse_device() is deliberately not taken to deal with buggy
    Asus laptops and all DMI quirks setting EC_FLAGS_IGNORE_DSDT_GPE are for
    Asus laptops.
    
    Based on the above I believe that unless on some quirked laptops
    the ECDT and DSDT EC addresses do not match we can drop the quirk.
    
    I've checked dmesg output to ensure the ECDT and DSDT EC addresses match
    for quirked models using https://linux-hardware.org hw-probe reports.
    
    I've been able to confirm that the addresses match for the following
    models this way: GL702VMK, X505BA, X505BP, X550VXK, X580VD.
    Whereas for the following models I could find any dmesg output:
    FX502VD, FX502VE, X542BA, X542BP.
    
    Note the models without dmesg all were submitted in patches with a batch
    of models and other models from the same batch checkout ok.
    
    This, combined with that all the code adding the quirks was written before
    the generic fix makes me believe that it is safe to remove this quirk now.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Daniel Drake <drake@endlessos.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit def469523dfb7163c64dd8439bb9e470cf7b232d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jun 20 11:25:43 2022 +0200

    ACPI: EC: Remove duplicate ThinkPad X1 Carbon 6th entry from DMI quirks
    
    [ Upstream commit 0dd6db359e5f206cbf1dd1fd40dd211588cd2725 ]
    
    Somehow the "ThinkPad X1 Carbon 6th" entry ended up twice in the
    struct dmi_system_id acpi_ec_no_wakeup[] array. Remove one of
    the entries.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88d556029a78999b098d26a330bb6a7de166f426
Author: Liang He <windhl@126.com>
Date:   Fri Jun 17 22:58:03 2022 +0800

    ARM: OMAP2+: display: Fix refcount leak bug
    
    [ Upstream commit 50b87a32a79bca6e275918a711fb8cc55e16d739 ]
    
    In omapdss_init_fbdev(), of_find_node_by_name() will return a node
    pointer with refcount incremented. We should use of_node_put() when
    it is not used anymore.
    
    Signed-off-by: Liang He <windhl@126.com>
    Message-Id: <20220617145803.4050918-1-windhl@126.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43157bc5f9dcc368cdac74f09338cf3e0d279951
Author: Guo Mengqi <guomengqi3@huawei.com>
Date:   Fri Jun 24 08:56:14 2022 +0800

    spi: synquacer: Add missing clk_disable_unprepare()
    
    [ Upstream commit 917e43de2a56d9b82576f1cc94748261f1988458 ]
    
    Add missing clk_disable_unprepare() in synquacer_spi_resume().
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Guo Mengqi <guomengqi3@huawei.com>
    Link: https://lore.kernel.org/r/20220624005614.49434-1-guomengqi3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 607570808af245bcbad73899a8d707908dd0c046
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Sat Jun 18 00:00:29 2022 +0200

    ARM: dts: BCM5301X: Add DT for Meraki MR26
    
    [ Upstream commit 935327a73553001f8d81375c76985d05f604507f ]
    
    Meraki MR26 is an EOL wireless access point featuring a
    PoE ethernet port and two dual-band 3x3 MIMO 802.11n
    radios and 1x1 dual-band WIFI dedicated to scanning.
    
    Thank you Amir for the unit and PSU.
    
    Hardware info:
    SOC   : Broadcom BCM53015A1KFEBG (dual-core Cortex-A9 CPU at 800 MHz)
    RAM   : SK Hynix Inc. H5TQ1G63EFR, 1 GBit DDR3 SDRAM = 128 MiB
    NAND  : Spansion S34ML01G100TF100, 1 GBit SLC NAND Flash = 128 MiB
    ETH   : 1 GBit Ethernet Port - PoE (TPS23754 PoE Interface)
    WIFI0 : Broadcom BCM43431KMLG, BCM43431 802.11 abgn (3x3:3)
    WIFI1 : Broadcom BCM43431KMLG, BCM43431 802.11 abgn (3x3:3)
    WIFI2 : Broadcom BCM43428 "Air Marshal" 802.11 abgn (1x1:1)
    BUTTON: One reset key behind a small hole next to the Ethernet Port
    LEDS  : One amber (fault), one white (indicator) LED, separate RGB-LED
    MISC  : Atmel AT24C64 8KiB EEPROM i2c
          : Ti INA219 26V, 12-bit, i2c output current/voltage/power monitor
    
    SERIAL:
          WARNING: The serial port needs a TTL/RS-232 3V3 level converter!
          The Serial setting is 115200-8-N-1. The board has a populated
          right angle 1x4 0.1" pinheader.
          The pinout is: VCC (next to J3, has the pin 1 indicator), RX, TX, GND.
    
    Odd stuff:
    
    - uboot does not support lzma compression, but gzip'd uImage/DTB work.
    - uboot claims to support FIT, but fails to pass the DTB to the kernel.
      Appending the dtb after the kernel image works.
    - RGB-controller is supported through an external userspace program.
    - The ubi partition contains a "board-config" volume. It stores the
      MAC Address (0x66 in binary) and Serial No. (0x7c alpha-numerical).
    - SoC's temperature sensor always reports that it is on fire.
      This causes the system to immediately shutdown! Looking at reported
      "418 degree Celsius" suggests that this sensor is not working.
    
    WIFI:
    b43 is able to initialize all three WIFIs @ 802.11bg.
    | b43-phy0: Broadcom 43431 WLAN found (core revision 29)
    | bcma-pci-bridge 0000:01:00.0: bus1: Switched to core: 0x812
    | b43-phy0: Found PHY: Analog 9, Type 7 (HT), Revision 1
    | b43-phy0: Found Radio: Manuf 0x17F, ID 0x2059, Revision 0, Version 1
    | b43-phy0 warning: 5 GHz band is unsupported on this PHY
    | b43-phy1: Broadcom 43431 WLAN found (core revision 29)
    | bcma-pci-bridge 0001:01:00.0: bus2: Switched to core: 0x812
    | b43-phy1: Found PHY: Analog 9, Type 7 (HT), Revision 1
    | b43-phy1: Found Radio: Manuf 0x17F, ID 0x2059, Revision 0, Version 1
    | b43-phy1 warning: 5 GHz band is unsupported on this PHY
    | b43-phy2: Broadcom 43228 WLAN found (core revision 30)
    | bcma-pci-bridge 0002:01:00.0: bus3: Switched to core: 0x812
    | b43-phy2: Found PHY: Analog 9, Type 4 (N), Revision 16
    | b43-phy2: Found Radio: Manuf 0x17F, ID 0x2057, Revision 9, Version 1
    | Broadcom 43xx driver loaded [ Features: NL ]
    
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9213e5a397bab061c21695040367bbf3a10a258a
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jun 13 14:33:57 2022 +0200

    ARM: dts: imx6ul: fix qspi node compatible
    
    [ Upstream commit 0c6cf86e1ab433b2d421880fdd9c6e954f404948 ]
    
    imx6ul is not compatible to imx6sx, both have different erratas.
    Fixes the dt_binding_check warning:
    spi@21e0000: compatible: 'oneOf' conditional failed, one must be fixed:
    ['fsl,imx6ul-qspi', 'fsl,imx6sx-qspi'] is too long
    Additional items are not allowed ('fsl,imx6sx-qspi' was unexpected)
    'fsl,imx6ul-qspi' is not one of ['fsl,ls1043a-qspi']
    'fsl,imx6ul-qspi' is not one of ['fsl,imx8mq-qspi']
    'fsl,ls1021a-qspi' was expected
    'fsl,imx7d-qspi' was expected
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 976db15fee3a1713de181158d0368bbc3026178d
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jun 13 14:33:56 2022 +0200

    ARM: dts: imx6ul: fix lcdif node compatible
    
    [ Upstream commit 1a884d17ca324531634cce82e9f64c0302bdf7de ]
    
    In yaml binding "fsl,imx6ul-lcdif" is listed as compatible to imx6sx-lcdif,
    but not imx28-lcdif. Change the list accordingly. Fixes the
    dt_binding_check warning:
    lcdif@21c8000: compatible: 'oneOf' conditional failed, one must be fixed:
    ['fsl,imx6ul-lcdif', 'fsl,imx28-lcdif'] is too long
    Additional items are not allowed ('fsl,imx28-lcdif' was unexpected)
    'fsl,imx6ul-lcdif' is not one of ['fsl,imx23-lcdif', 'fsl,imx28-lcdif',
    'fsl,imx6sx-lcdif']
    'fsl,imx6sx-lcdif' was expected
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6045ac40e323237974ad3536360af237df51ac18
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jun 13 14:33:55 2022 +0200

    ARM: dts: imx6ul: fix csi node compatible
    
    [ Upstream commit e0aca931a2c7c29c88ebf37f9c3cd045e083483d ]
    
    "fsl,imx6ul-csi" was never listed as compatible to "fsl,imx7-csi", neither
    in yaml bindings, nor previous txt binding. Remove the imx7 part. Fixes
    the dt schema check warning:
    csi@21c4000: compatible: 'oneOf' conditional failed, one must be fixed:
    ['fsl,imx6ul-csi', 'fsl,imx7-csi'] is too long
    Additional items are not allowed ('fsl,imx7-csi' was unexpected)
    'fsl,imx8mm-csi' was expected
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7ce841f48dfeba63695e73a094376c2bb1ac8d8
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jun 13 14:33:53 2022 +0200

    ARM: dts: imx6ul: fix keypad compatible
    
    [ Upstream commit 7d15e0c9a515494af2e3199741cdac7002928a0e ]
    
    According to binding, the compatible shall only contain imx6ul and imx21
    compatibles. Fixes the dt_binding_check warning:
    keypad@20b8000: compatible: 'oneOf' conditional failed, one must be fixed:
    ['fsl,imx6ul-kpp', 'fsl,imx6q-kpp', 'fsl,imx21-kpp'] is too long
    Additional items are not allowed ('fsl,imx6q-kpp', 'fsl,imx21-kpp' were
    unexpected)
    Additional items are not allowed ('fsl,imx21-kpp' was unexpected)
    'fsl,imx21-kpp' was expected
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15af2deb19e430ace4d3bcea8cc6c469d1e1e002
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jun 13 14:33:52 2022 +0200

    ARM: dts: imx6ul: change operating-points to uint32-matrix
    
    [ Upstream commit edb67843983bbdf61b4c8c3c50618003d38bb4ae ]
    
    operating-points is a uint32-matrix as per opp-v1.yaml. Change it
    accordingly. While at it, change fsl,soc-operating-points as well,
    although there is no bindings file (yet). But they should have the same
    format. Fixes the dt_binding_check warning:
    cpu@0: operating-points:0: [696000, 1275000, 528000, 1175000, 396000,
    1025000, 198000, 950000] is too long
    cpu@0: operating-points:0: Additional items are not allowed (528000,
    1175000, 396000, 1025000, 198000, 950000 were unexpected)
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 278aa4c73dadc2737718f828746eb3fa3524bb5f
Author: Alexander Stein <alexander.stein@ew.tq-group.com>
Date:   Mon Jun 13 14:33:51 2022 +0200

    ARM: dts: imx6ul: add missing properties for sram
    
    [ Upstream commit 5655699cf5cff9f4c4ee703792156bdd05d1addf ]
    
    All 3 properties are required by sram.yaml. Fixes the dtbs_check
    warning:
    sram@900000: '#address-cells' is a required property
    sram@900000: '#size-cells' is a required property
    sram@900000: 'ranges' is a required property
    
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 695a3c2a8273a0bc77a531dd8711a847adff2f35
Author: Juri Lelli <juri.lelli@redhat.com>
Date:   Mon Jun 27 11:50:51 2022 +0200

    wait: Fix __wait_event_hrtimeout for RT/DL tasks
    
    [ Upstream commit cceeeb6a6d02e7b9a74ddd27a3225013b34174aa ]
    
    Changes to hrtimer mode (potentially made by __hrtimer_init_sleeper on
    PREEMPT_RT) are not visible to hrtimer_start_range_ns, thus not
    accounted for by hrtimer_start_expires call paths. In particular,
    __wait_event_hrtimeout suffers from this problem as we have, for
    example:
    
    fs/aio.c::read_events
      wait_event_interruptible_hrtimeout
        __wait_event_hrtimeout
          hrtimer_init_sleeper_on_stack <- this might "mode |= HRTIMER_MODE_HARD"
                                           on RT if task runs at RT/DL priority
            hrtimer_start_range_ns
              WARN_ON_ONCE(!(mode & HRTIMER_MODE_HARD) ^ !timer->is_hard)
              fires since the latter doesn't see the change of mode done by
              init_sleeper
    
    Fix it by making __wait_event_hrtimeout call hrtimer_sleeper_start_expires,
    which is aware of the special RT/DL case, instead of hrtimer_start_range_ns.
    
    Reported-by: Bruno Goncalves <bgoncalv@redhat.com>
    Signed-off-by: Juri Lelli <juri.lelli@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Daniel Bristot de Oliveira <bristot@kernel.org>
    Reviewed-by: Valentin Schneider <vschneid@redhat.com>
    Link: https://lore.kernel.org/r/20220627095051.42470-1-juri.lelli@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b8c55900d46369b7d280b669aad83dfa9e0ae7a
Author: William Dean <williamsukatube@163.com>
Date:   Sat Jul 23 18:01:28 2022 +0800

    irqchip/mips-gic: Check the return value of ioremap() in gic_of_init()
    
    [ Upstream commit 71349cc85e5930dce78ed87084dee098eba24b59 ]
    
    The function ioremap() in gic_of_init() can fail, so
    its return value should be checked.
    
    Reported-by: Hacash Robot <hacashRobot@santino.com>
    Signed-off-by: William Dean <williamsukatube@163.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220723100128.2964304-1-williamsukatube@163.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dfb4a99b1c8aef00bda42a8a9b88fe96b4fcc60
Author: Samuel Holland <samuel@sholland.org>
Date:   Fri Jul 1 15:00:50 2022 -0500

    genirq: GENERIC_IRQ_IPI depends on SMP
    
    [ Upstream commit 0f5209fee90b4544c58b4278d944425292789967 ]
    
    The generic IPI code depends on the IRQ affinity mask being allocated
    and initialized. This will not be the case if SMP is disabled. Fix up
    the remaining driver that selected GENERIC_IRQ_IPI in a non-SMP config.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220701200056.46555-3-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f460141f29f01c805fc574da5025482a07e2cc03
Author: Samuel Holland <samuel@sholland.org>
Date:   Fri Jul 1 15:00:49 2022 -0500

    irqchip/mips-gic: Only register IPI domain when SMP is enabled
    
    [ Upstream commit 8190cc572981f2f13b6ffc26c7cfa7899e5d3ccc ]
    
    The MIPS GIC irqchip driver may be selected in a uniprocessor
    configuration, but it unconditionally registers an IPI domain.
    
    Limit the part of the driver dealing with IPIs to only be compiled when
    GENERIC_IRQ_IPI is enabled, which corresponds to an SMP configuration.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220701200056.46555-2-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4aba3247af12ddb4cec8c0272bb76ff129f89e74
Author: Antonio Borneo <antonio.borneo@foss.st.com>
Date:   Thu May 12 18:05:44 2022 +0200

    genirq: Don't return error on missing optional irq_request_resources()
    
    [ Upstream commit 95001b756467ecc9f5973eb5e74e97699d9bbdf1 ]
    
    Function irq_chip::irq_request_resources() is reported as optional
    in the declaration of struct irq_chip.
    If the parent irq_chip does not implement it, we should ignore it
    and return.
    
    Don't return error if the functions is missing.
    
    Signed-off-by: Antonio Borneo <antonio.borneo@foss.st.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20220512160544.13561-1-antonio.borneo@foss.st.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d08bb199a406424a8ed0009efdf41710e6d849ee
Author: Jan Kara <jack@suse.cz>
Date:   Tue Jul 26 13:13:50 2022 +0200

    ext2: Add more validity checks for inode counts
    
    [ Upstream commit fa78f336937240d1bc598db817d638086060e7e9 ]
    
    Add checks verifying number of inodes stored in the superblock matches
    the number computed from number of inodes per group. Also verify we have
    at least one block worth of inodes per group. This prevents crashes on
    corrupted filesystems.
    
    Reported-by: syzbot+d273f7d7f58afd93be48@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 353b4673d01c512303c45cf2346f630cda73b5c9
Author: haibinzhang (张海斌) <haibinzhang@tencent.com>
Date:   Sat Jul 2 05:43:19 2022 +0000

    arm64: fix oops in concurrently setting insn_emulation sysctls
    
    [ Upstream commit af483947d472eccb79e42059276c4deed76f99a6 ]
    
    emulation_proc_handler() changes table->data for proc_dointvec_minmax
    and can generate the following Oops if called concurrently with itself:
    
     | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010
     | Internal error: Oops: 96000006 [#1] SMP
     | Call trace:
     | update_insn_emulation_mode+0xc0/0x148
     | emulation_proc_handler+0x64/0xb8
     | proc_sys_call_handler+0x9c/0xf8
     | proc_sys_write+0x18/0x20
     | __vfs_write+0x20/0x48
     | vfs_write+0xe4/0x1d0
     | ksys_write+0x70/0xf8
     | __arm64_sys_write+0x20/0x28
     | el0_svc_common.constprop.0+0x7c/0x1c0
     | el0_svc_handler+0x2c/0xa0
     | el0_svc+0x8/0x200
    
    To fix this issue, keep the table->data as &insn->current_mode and
    use container_of() to retrieve the insn pointer. Another mutex is
    used to protect against the current_mode update but not for retrieving
    insn_emulation as table->data is no longer changing.
    
    Co-developed-by: hewenliang <hewenliang4@huawei.com>
    Signed-off-by: hewenliang <hewenliang4@huawei.com>
    Signed-off-by: Haibin Zhang <haibinzhang@tencent.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Link: https://lore.kernel.org/r/20220128090324.2727688-1-hewenliang4@huawei.com
    Link: https://lore.kernel.org/r/9A004C03-250B-46C5-BF39-782D7551B00E@tencent.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 913f1732377c22e7001b886a638d7b295782acd6
Author: Francis Laniel <flaniel@linux.microsoft.com>
Date:   Wed Jun 8 17:24:46 2022 +0100

    arm64: Do not forget syscall when starting a new thread.
    
    [ Upstream commit de6921856f99c11d3986c6702d851e1328d4f7f6 ]
    
    Enable tracing of the execve*() system calls with the
    syscalls:sys_exit_execve tracepoint by removing the call to
    forget_syscall() when starting a new thread and preserving the value of
    regs->syscallno across exec.
    
    Signed-off-by: Francis Laniel <flaniel@linux.microsoft.com>
    Link: https://lore.kernel.org/r/20220608162447.666494-2-flaniel@linux.microsoft.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb086aea39106d9096a8062c15a394526979292a
Author: Wyes Karny <wyes.karny@amd.com>
Date:   Mon Jun 6 23:33:34 2022 +0530

    x86: Handle idle=nomwait cmdline properly for x86_idle
    
    [ Upstream commit 8bcedb4ce04750e1ccc9a6b6433387f6a9166a56 ]
    
    When kernel is booted with idle=nomwait do not use MWAIT as the
    default idle state.
    
    If the user boots the kernel with idle=nomwait, it is a clear
    direction to not use mwait as the default idle state.
    However, the current code does not take this into consideration
    while selecting the default idle state on x86.
    
    Fix it by checking for the idle=nomwait boot option in
    prefer_mwait_c1_over_halt().
    
    Also update the documentation around idle=nomwait appropriately.
    
    [ dhansen: tweak commit message ]
    
    Signed-off-by: Wyes Karny <wyes.karny@amd.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Tested-by: Zhang Rui <rui.zhang@intel.com>
    Link: https://lkml.kernel.org/r/fdc2dc2d0a1bc21c2f53d989ea2d2ee3ccbc0dbe.1654538381.git-series.wyes.karny@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48c3900210587c929967f8ffb9a3a51940a94386
Author: Benjamin Segall <bsegall@google.com>
Date:   Wed Jun 15 14:24:23 2022 -0700

    epoll: autoremove wakers even more aggressively
    
    commit a16ceb13961068f7209e34d7984f8e42d2c06159 upstream.
    
    If a process is killed or otherwise exits while having active network
    connections and many threads waiting on epoll_wait, the threads will all
    be woken immediately, but not removed from ep->wq.  Then when network
    traffic scans ep->wq in wake_up, every wakeup attempt will fail, and will
    not remove the entries from the list.
    
    This means that the cost of the wakeup attempt is far higher than usual,
    does not decrease, and this also competes with the dying threads trying to
    actually make progress and remove themselves from the wq.
    
    Handle this by removing visited epoll wq entries unconditionally, rather
    than only when the wakeup succeeds - the structure of ep_poll means that
    the only potential loss is the timed_out->eavail heuristic, which now can
    race and result in a redundant ep_send_events attempt.  (But only when
    incoming data and a timeout actually race, not on every timeout)
    
    Shakeel added:
    
    : We are seeing this issue in production with real workloads and it has
    : caused hard lockups.  Particularly network heavy workloads with a lot
    : of threads in epoll_wait() can easily trigger this issue if they get
    : killed (oom-killed in our case).
    
    Link: https://lkml.kernel.org/r/xm26fsjotqda.fsf@google.com
    Signed-off-by: Ben Segall <bsegall@google.com>
    Tested-by: Shakeel Butt <shakeelb@google.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Roman Penyaev <rpenyaev@suse.de>
    Cc: Jason Baron <jbaron@akamai.com>
    Cc: Khazhismel Kumykov <khazhy@google.com>
    Cc: Heiher <r@hev.cc>
    Cc: <stable@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80977126bc20309f7f7bae6d8621356b393e8b41
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Aug 9 18:34:02 2022 +0200

    netfilter: nf_tables: fix null deref due to zeroed list head
    
    commit 580077855a40741cf511766129702d97ff02f4d9 upstream.
    
    In nf_tables_updtable, if nf_tables_table_enable returns an error,
    nft_trans_destroy is called to free the transaction object.
    
    nft_trans_destroy() calls list_del(), but the transaction was never
    placed on a list -- the list head is all zeroes, this results in
    a null dereference:
    
    BUG: KASAN: null-ptr-deref in nft_trans_destroy+0x26/0x59
    Call Trace:
     nft_trans_destroy+0x26/0x59
     nf_tables_newtable+0x4bc/0x9bc
     [..]
    
    Its sane to assume that nft_trans_destroy() can be called
    on the transaction object returned by nft_trans_alloc(), so
    make sure the list head is initialised.
    
    Fixes: 55dd6f93076b ("netfilter: nf_tables: use new transaction infrastructure to handle table")
    Reported-by: mingi cho <mgcho.minic@gmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cc5c6b7567dd4c25b0e92f6be55ed631a36f4cd
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Aug 9 14:01:48 2022 -0300

    netfilter: nf_tables: do not allow RULE_ID to refer to another chain
    
    commit 36d5b2913219ac853908b0f1c664345e04313856 upstream.
    
    When doing lookups for rules on the same batch by using its ID, a rule from
    a different chain can be used. If a rule is added to a chain but tries to
    be positioned next to a rule from a different chain, it will be linked to
    chain2, but the use counter on chain1 would be the one to be incremented.
    
    When looking for rules by ID, use the chain that was used for the lookup by
    name. The chain used in the context copied to the transaction needs to
    match that same chain. That way, struct nft_rule does not need to get
    enlarged with another member.
    
    Fixes: 1a94e38d254b ("netfilter: nf_tables: add NFTA_RULE_ID attribute")
    Fixes: 75dd48e2e420 ("netfilter: nf_tables: Support RULE_ID reference in new rule")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e7dcb88ec8e85e4a8ad0ea494ea2f90f32d2583
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Aug 9 14:01:47 2022 -0300

    netfilter: nf_tables: do not allow CHAIN_ID to refer to another table
    
    commit 95f466d22364a33d183509629d0879885b4f547e upstream.
    
    When doing lookups for chains on the same batch by using its ID, a chain
    from a different table can be used. If a rule is added to a table but
    refers to a chain in a different table, it will be linked to the chain in
    table2, but would have expressions referring to objects in table1.
    
    Then, when table1 is removed, the rule will not be removed as its linked to
    a chain in table2. When expressions in the rule are processed or removed,
    that will lead to a use-after-free.
    
    When looking for chains by ID, use the table that was used for the lookup
    by name, and only return chains belonging to that same table.
    
    Fixes: 837830a4b439 ("netfilter: nf_tables: add NFTA_RULE_CHAIN_ID attribute")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a4b18b1ff11ba26f9a852019d674fde9d1d1cff
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Aug 9 14:01:46 2022 -0300

    netfilter: nf_tables: do not allow SET_ID to refer to another table
    
    commit 470ee20e069a6d05ae549f7d0ef2bdbcee6a81b2 upstream.
    
    When doing lookups for sets on the same batch by using its ID, a set from a
    different table can be used.
    
    Then, when the table is removed, a reference to the set may be kept after
    the set is freed, leading to a potential use-after-free.
    
    When looking for sets by ID, use the table that was used for the lookup by
    name, and only return sets belonging to that same table.
    
    This fixes CVE-2022-2586, also reported as ZDI-CAN-17470.
    
    Reported-by: Team Orca of Sea Security (@seasecresponse)
    Fixes: 958bee14d071 ("netfilter: nf_tables: use new transaction infrastructure to handle sets")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19bf7199c3a9172a72f0b52efcff7bb0fb9c52f5
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Apr 5 20:33:57 2021 +0900

    lockdep: Allow tuning tracing capacity constants.
    
    commit 5dc33592e95534dc8455ce3e9baaaf3dae0fff82 upstream.
    
    Since syzkaller continues various test cases until the kernel crashes,
    syzkaller tends to examine more locking dependencies than normal systems.
    As a result, syzbot is reporting that the fuzz testing was terminated
    due to hitting upper limits lockdep can track [1] [2] [3]. Since analysis
    via /proc/lockdep* did not show any obvious culprit [4] [5], we have no
    choice but allow tuning tracing capacity constants.
    
    [1] https://syzkaller.appspot.com/bug?id=3d97ba93fb3566000c1c59691ea427370d33ea1b
    [2] https://syzkaller.appspot.com/bug?id=381cb436fe60dc03d7fd2a092b46d7f09542a72a
    [3] https://syzkaller.appspot.com/bug?id=a588183ac34c1437fc0785e8f220e88282e5a29f
    [4] https://lkml.kernel.org/r/4b8f7a57-fa20-47bd-48a0-ae35d860f233@i-love.sakura.ne.jp
    [5] https://lkml.kernel.org/r/1c351187-253b-2d49-acaf-4563c63ae7d2@i-love.sakura.ne.jp
    
    References: https://lkml.kernel.org/r/1595640639-9310-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Acked-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f294829fb47ee508ad21566f8e29db82d41a5a79
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Mon Jul 4 16:18:12 2022 +0200

    usb: dwc3: gadget: fix high speed multiplier setting
    
    commit 8affe37c525d800a2628c4ecfaed13b77dc5634a upstream.
    
    For High-Speed Transfers the prepare_one_trb function is calculating the
    multiplier setting for the trb based on the length parameter of the trb
    currently prepared. This assumption is wrong. For trbs with a sg list,
    the length of the actual request has to be taken instead.
    
    Fixes: 40d829fb2ec6 ("usb: dwc3: gadget: Correct ISOC DATA PIDs for short packets")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Link: https://lore.kernel.org/r/20220704141812.1532306-3-m.grzeschik@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc2a039cdb3d50eaa8ea21a060f4e929ca91cdd7
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Mon Jul 4 16:18:11 2022 +0200

    usb: dwc3: gadget: refactor dwc3_repare_one_trb
    
    commit 23385cec5f354794dadced7f28c31da7ae3eb54c upstream.
    
    The function __dwc3_prepare_one_trb has many parameters. Since it is
    only used in dwc3_prepare_one_trb there is no point in keeping the
    function. We merge both functions and get rid of the big list of
    parameters.
    
    Fixes: 40d829fb2ec6 ("usb: dwc3: gadget: Correct ISOC DATA PIDs for short packets")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Link: https://lore.kernel.org/r/20220704141812.1532306-2-m.grzeschik@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a3a61bd730c9115ae31d33161aeeec273696ece
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Tue Aug 2 22:36:47 2022 +0900

    arm64: dts: uniphier: Fix USB interrupts for PXs3 SoC
    
    commit fe17b91a7777df140d0f1433991da67ba658796c upstream.
    
    An interrupt for USB device are shared with USB host. Set interrupt-names
    property to common "dwc_usb3" instead of "host" and "peripheral".
    
    Cc: stable@vger.kernel.org
    Fixes: d7b9beb830d7 ("arm64: dts: uniphier: Add USB3 controller nodes")
    Reported-by: Ryuta NAKANISHI <nakanishi.ryuta@socionext.com>
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63228d8328322864c85920803c87217483729c5d
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Tue Aug 2 22:36:25 2022 +0900

    ARM: dts: uniphier: Fix USB interrupts for PXs2 SoC
    
    commit 9b0dc7abb5cc43a2dbf90690c3c6011dcadc574d upstream.
    
    An interrupt for USB device are shared with USB host. Set interrupt-names
    property to common "dwc_usb3" instead of "host" and "peripheral".
    
    Cc: stable@vger.kernel.org
    Fixes: 45be1573ad19 ("ARM: dts: uniphier: Add USB3 controller nodes")
    Reported-by: Ryuta NAKANISHI <nakanishi.ryuta@socionext.com>
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d7da7e565c36bd5685b5d5452f4feffc794050a
Author: Weitao Wang <WeitaoWang-oc@zhaoxin.com>
Date:   Tue Jul 26 15:49:18 2022 +0800

    USB: HCD: Fix URB giveback issue in tasklet function
    
    commit 26c6c2f8a907c9e3a2f24990552a4d77235791e6 upstream.
    
    Usb core introduce the mechanism of giveback of URB in tasklet context to
    reduce hardware interrupt handling time. On some test situation(such as
    FIO with 4KB block size), when tasklet callback function called to
    giveback URB, interrupt handler add URB node to the bh->head list also.
    If check bh->head list again after finish all URB giveback of local_list,
    then it may introduce a "dynamic balance" between giveback URB and add URB
    to bh->head list. This tasklet callback function may not exit for a long
    time, which will cause other tasklet function calls to be delayed. Some
    real-time applications(such as KB and Mouse) will see noticeable lag.
    
    In order to prevent the tasklet function from occupying the cpu for a long
    time at a time, new URBS will not be added to the local_list even though
    the bh->head list is not empty. But also need to ensure the left URB
    giveback to be processed in time, so add a member high_prio for structure
    giveback_urb_bh to prioritize tasklet and schelule this tasklet again if
    bh->head list is not empty.
    
    At the same time, we are able to prioritize tasklet through structure
    member high_prio. So, replace the local high_prio_bh variable with this
    structure member in usb_hcd_giveback_urb.
    
    Fixes: 94dfd7edfd5c ("USB: HCD: support giveback of URB in tasklet context")
    Cc: stable <stable@kernel.org>
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Weitao Wang <WeitaoWang-oc@zhaoxin.com>
    Link: https://lore.kernel.org/r/20220726074918.5114-1-WeitaoWang-oc@zhaoxin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37c7fe9b3175f2bc1a4dc220ed50955568721260
Author: Linyu Yuan <quic_linyyuan@quicinc.com>
Date:   Tue Jul 26 14:45:49 2022 +0800

    usb: typec: ucsi: Acknowledge the GET_ERROR_STATUS command completion
    
    commit a7dc438b5e446afcd1b3b6651da28271400722f2 upstream.
    
    We found PPM will not send any notification after it report error status
    and OPM issue GET_ERROR_STATUS command to read the details about error.
    
    According UCSI spec, PPM may clear the Error Status Data after the OPM
    has acknowledged the command completion.
    
    This change add operation to acknowledge the command completion from PPM.
    
    Fixes: bdc62f2bae8f (usb: typec: ucsi: Simplified registration and I/O API)
    Cc: <stable@vger.kernel.org> # 5.10
    Signed-off-by: Jack Pham <quic_jackp@quicinc.com>
    Signed-off-by: Linyu Yuan <quic_linyyuan@quicinc.com>
    Link: https://lore.kernel.org/r/1658817949-4632-1-git-send-email-quic_linyyuan@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 847b9273dd61567fb77617eabc5fa002594db062
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Tue Jun 14 22:40:24 2022 +0100

    coresight: Clear the connection field properly
    
    commit 2af89ebacf299b7fba5f3087d35e8a286ec33706 upstream.
    
    coresight devices track their connections (output connections) and
    hold a reference to the fwnode. When a device goes away, we walk through
    the devices on the coresight bus and make sure that the references
    are dropped. This happens both ways:
     a) For all output connections from the device, drop the reference to
        the target device via coresight_release_platform_data()
    
    b) Iterate over all the devices on the coresight bus and drop the
       reference to fwnode if *this* device is the target of the output
       connection, via coresight_remove_conns()->coresight_remove_match().
    
    However, the coresight_remove_match() doesn't clear the fwnode field,
    after dropping the reference, this causes use-after-free and
    additional refcount drops on the fwnode.
    
    e.g., if we have two devices, A and B, with a connection, A -> B.
    If we remove B first, B would clear the reference on B, from A
    via coresight_remove_match(). But when A is removed, it still has
    a connection with fwnode still pointing to B. Thus it tries to  drops
    the reference in coresight_release_platform_data(), raising the bells
    like :
    
    [   91.990153] ------------[ cut here ]------------
    [   91.990163] refcount_t: addition on 0; use-after-free.
    [   91.990212] WARNING: CPU: 0 PID: 461 at lib/refcount.c:25 refcount_warn_saturate+0xa0/0x144
    [   91.990260] Modules linked in: coresight_funnel coresight_replicator coresight_etm4x(-)
     crct10dif_ce coresight ip_tables x_tables ipv6 [last unloaded: coresight_cpu_debug]
    [   91.990398] CPU: 0 PID: 461 Comm: rmmod Tainted: G        W       T 5.19.0-rc2+ #53
    [   91.990418] Hardware name: ARM LTD ARM Juno Development Platform/ARM Juno Development Platform, BIOS EDK II Feb  1 2019
    [   91.990434] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [   91.990454] pc : refcount_warn_saturate+0xa0/0x144
    [   91.990476] lr : refcount_warn_saturate+0xa0/0x144
    [   91.990496] sp : ffff80000c843640
    [   91.990509] x29: ffff80000c843640 x28: ffff800009957c28 x27: ffff80000c8439a8
    [   91.990560] x26: ffff00097eff1990 x25: ffff8000092b6ad8 x24: ffff00097eff19a8
    [   91.990610] x23: ffff80000c8439a8 x22: 0000000000000000 x21: ffff80000c8439c2
    [   91.990659] x20: 0000000000000000 x19: ffff00097eff1a10 x18: ffff80000ab99c40
    [   91.990708] x17: 0000000000000000 x16: 0000000000000000 x15: ffff80000abf6fa0
    [   91.990756] x14: 000000000000001d x13: 0a2e656572662d72 x12: 657466612d657375
    [   91.990805] x11: 203b30206e6f206e x10: 6f69746964646120 x9 : ffff8000081aba28
    [   91.990854] x8 : 206e6f206e6f6974 x7 : 69646461203a745f x6 : 746e756f63666572
    [   91.990903] x5 : ffff00097648ec58 x4 : 0000000000000000 x3 : 0000000000000027
    [   91.990952] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff00080260ba00
    [   91.991000] Call trace:
    [   91.991012]  refcount_warn_saturate+0xa0/0x144
    [   91.991034]  kobject_get+0xac/0xb0
    [   91.991055]  of_node_get+0x2c/0x40
    [   91.991076]  of_fwnode_get+0x40/0x60
    [   91.991094]  fwnode_handle_get+0x3c/0x60
    [   91.991116]  fwnode_get_nth_parent+0xf4/0x110
    [   91.991137]  fwnode_full_name_string+0x48/0xc0
    [   91.991158]  device_node_string+0x41c/0x530
    [   91.991178]  pointer+0x320/0x3ec
    [   91.991198]  vsnprintf+0x23c/0x750
    [   91.991217]  vprintk_store+0x104/0x4b0
    [   91.991238]  vprintk_emit+0x8c/0x360
    [   91.991257]  vprintk_default+0x44/0x50
    [   91.991276]  vprintk+0xcc/0xf0
    [   91.991295]  _printk+0x68/0x90
    [   91.991315]  of_node_release+0x13c/0x14c
    [   91.991334]  kobject_put+0x98/0x114
    [   91.991354]  of_node_put+0x24/0x34
    [   91.991372]  of_fwnode_put+0x40/0x5c
    [   91.991390]  fwnode_handle_put+0x38/0x50
    [   91.991411]  coresight_release_platform_data+0x74/0xb0 [coresight]
    [   91.991472]  coresight_unregister+0x64/0xcc [coresight]
    [   91.991525]  etm4_remove_dev+0x64/0x78 [coresight_etm4x]
    [   91.991563]  etm4_remove_amba+0x1c/0x2c [coresight_etm4x]
    [   91.991598]  amba_remove+0x3c/0x19c
    
    Reproducible by: (Build all coresight components as modules):
    
      #!/bin/sh
      while true
      do
         for m in tmc stm cpu_debug etm4x replicator funnel
         do
            modprobe coresight_${m}
         done
    
         for m in tmc stm cpu_debug etm4x replicator funnel
         do
            rmmode coresight_${m}
         done
      done
    
    Cc: stable@vger.kernel.org
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Mike Leach <mike.leach@linaro.org>
    Cc: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Fixes: 37ea1ffddffa ("coresight: Use fwnode handle instead of device names")
    Link: https://lore.kernel.org/r/20220614214024.3005275-1-suzuki.poulose@arm.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 807adf6ffa8c3beedcd63b20f5a59c7d061df7d2
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Thu Jul 14 16:41:34 2022 +0800

    MIPS: cpuinfo: Fix a warning for CONFIG_CPUMASK_OFFSTACK
    
    commit e1a534f5d074db45ae5cbac41d8912b98e96a006 upstream.
    
    When CONFIG_CPUMASK_OFFSTACK and CONFIG_DEBUG_PER_CPU_MAPS is selected,
    cpu_max_bits_warn() generates a runtime warning similar as below while
    we show /proc/cpuinfo. Fix this by using nr_cpu_ids (the runtime limit)
    instead of NR_CPUS to iterate CPUs.
    
    [    3.052463] ------------[ cut here ]------------
    [    3.059679] WARNING: CPU: 3 PID: 1 at include/linux/cpumask.h:108 show_cpuinfo+0x5e8/0x5f0
    [    3.070072] Modules linked in: efivarfs autofs4
    [    3.076257] CPU: 0 PID: 1 Comm: systemd Not tainted 5.19-rc5+ #1052
    [    3.084034] Hardware name: Loongson Loongson-3A4000-7A1000-1w-V0.1-CRB/Loongson-LS3A4000-7A1000-1w-EVB-V1.21, BIOS Loongson-UDK2018-V2.0.04082-beta7 04/27
    [    3.099465] Stack : 9000000100157b08 9000000000f18530 9000000000cf846c 9000000100154000
    [    3.109127]         9000000100157a50 0000000000000000 9000000100157a58 9000000000ef7430
    [    3.118774]         90000001001578e8 0000000000000040 0000000000000020 ffffffffffffffff
    [    3.128412]         0000000000aaaaaa 1ab25f00eec96a37 900000010021de80 900000000101c890
    [    3.138056]         0000000000000000 0000000000000000 0000000000000000 0000000000aaaaaa
    [    3.147711]         ffff8000339dc220 0000000000000001 0000000006ab4000 0000000000000000
    [    3.157364]         900000000101c998 0000000000000004 9000000000ef7430 0000000000000000
    [    3.167012]         0000000000000009 000000000000006c 0000000000000000 0000000000000000
    [    3.176641]         9000000000d3de08 9000000001639390 90000000002086d8 00007ffff0080286
    [    3.186260]         00000000000000b0 0000000000000004 0000000000000000 0000000000071c1c
    [    3.195868]         ...
    [    3.199917] Call Trace:
    [    3.203941] [<98000000002086d8>] show_stack+0x38/0x14c
    [    3.210666] [<9800000000cf846c>] dump_stack_lvl+0x60/0x88
    [    3.217625] [<980000000023d268>] __warn+0xd0/0x100
    [    3.223958] [<9800000000cf3c90>] warn_slowpath_fmt+0x7c/0xcc
    [    3.231150] [<9800000000210220>] show_cpuinfo+0x5e8/0x5f0
    [    3.238080] [<98000000004f578c>] seq_read_iter+0x354/0x4b4
    [    3.245098] [<98000000004c2e90>] new_sync_read+0x17c/0x1c4
    [    3.252114] [<98000000004c5174>] vfs_read+0x138/0x1d0
    [    3.258694] [<98000000004c55f8>] ksys_read+0x70/0x100
    [    3.265265] [<9800000000cfde9c>] do_syscall+0x7c/0x94
    [    3.271820] [<9800000000202fe4>] handle_syscall+0xc4/0x160
    [    3.281824] ---[ end trace 8b484262b4b8c24c ]---
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26d767990e160f38e5d9b1dcca79c88940c3804a
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Jul 28 00:32:17 2022 +1000

    powerpc/powernv: Avoid crashing if rng is NULL
    
    commit 90b5d4fe0b3ba7f589c6723c6bfb559d9e83956a upstream.
    
    On a bare-metal Power8 system that doesn't have an "ibm,power-rng", a
    malicious QEMU and guest that ignore the absence of the
    KVM_CAP_PPC_HWRNG flag, and calls H_RANDOM anyway, will dereference a
    NULL pointer.
    
    In practice all Power8 machines have an "ibm,power-rng", but let's not
    rely on that, add a NULL check and early return in
    powernv_get_random_real_mode().
    
    Fixes: e928e9cb3601 ("KVM: PPC: Book3S HV: Add fast real-mode H_RANDOM implementation.")
    Cc: stable@vger.kernel.org # v4.1+
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220727143219.2684192-1-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3db593ab8e42144ba2d9067ad87d04bc7151a937
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Tue Jun 28 16:43:35 2022 +0200

    powerpc/ptdump: Fix display of RW pages on FSL_BOOK3E
    
    commit dd8de84b57b02ba9c1fe530a6d916c0853f136bd upstream.
    
    On FSL_BOOK3E, _PAGE_RW is defined with two bits, one for user and one
    for supervisor. As soon as one of the two bits is set, the page has
    to be display as RW. But the way it is implemented today requires both
    bits to be set in order to display it as RW.
    
    Instead of display RW when _PAGE_RW bits are set and R otherwise,
    reverse the logic and display R when _PAGE_RW bits are all 0 and
    RW otherwise.
    
    This change has no impact on other platforms as _PAGE_RW is a single
    bit on all of them.
    
    Fixes: 8eb07b187000 ("powerpc/mm: Dump linux pagetables")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/0c33b96317811edf691e81698aaee8fa45ec3449.1656427391.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b326b8d6ae4c634f749be7aff23eb96f304ed4f5
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jul 6 12:10:43 2022 +0200

    powerpc/fsl-pci: Fix Class Code of PCIe Root Port
    
    commit 0c551abfa004ce154d487d91777bf221c808a64f upstream.
    
    By default old pre-3.0 Freescale PCIe controllers reports invalid PCI Class
    Code 0x0b20 for PCIe Root Port. It can be seen by lspci -b output on P2020
    board which has this pre-3.0 controller:
    
      $ lspci -bvnn
      00:00.0 Power PC [0b20]: Freescale Semiconductor Inc P2020E [1957:0070] (rev 21)
              !!! Invalid class 0b20 for header type 01
              Capabilities: [4c] Express Root Port (Slot-), MSI 00
    
    Fix this issue by programming correct PCI Class Code 0x0604 for PCIe Root
    Port to the Freescale specific PCIe register 0x474.
    
    With this change lspci -b output is:
    
      $ lspci -bvnn
      00:00.0 PCI bridge [0604]: Freescale Semiconductor Inc P2020E [1957:0070] (rev 21) (prog-if 00 [Normal decode])
              Capabilities: [4c] Express Root Port (Slot-), MSI 00
    
    Without any "Invalid class" error. So class code was properly reflected
    into standard (read-only) PCI register 0x08.
    
    Same fix is already implemented in U-Boot pcie_fsl.c driver in commit:
    http://source.denx.de/u-boot/u-boot/-/commit/d18d06ac35229345a0af80977a408cfbe1d1015b
    
    Fix activated by U-Boot stay active also after booting Linux kernel.
    But boards which use older U-Boot version without that fix are affected and
    still require this fix.
    
    So implement this class code fix also in kernel fsl_pci.c driver.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220706101043.4867-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39c51471efd2291f8ae2c39b05eabf8f4870ae48
Author: Pali Rohár <pali@kernel.org>
Date:   Mon Feb 14 12:41:08 2022 +0100

    PCI: Add defines for normal and subtractive PCI bridges
    
    commit 904b10fb189cc15376e9bfce1ef0282e68b0b004 upstream.
    
    Add these PCI class codes to pci_ids.h:
    
      PCI_CLASS_BRIDGE_PCI_NORMAL
      PCI_CLASS_BRIDGE_PCI_SUBTRACTIVE
    
    Use these defines in all kernel code for describing PCI class codes for
    normal and subtractive PCI bridges.
    
    [bhelgaas: similar change in pci-mvebu.c]
    Link: https://lore.kernel.org/r/20220214114109.26809-1-pali@kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Guenter Roeck <linux@roeck-us.net>a
    Cc: Naresh Kamboju <naresh.kamboju@linaro.org>
    [ gregkh - take only the pci_ids.h portion for stable backports ]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23c2f921f2468e2083c72e2ae4a9ef9778ed6436
Author: Alexander Lobakin <alexandr.lobakin@intel.com>
Date:   Fri Jun 24 14:13:05 2022 +0200

    ia64, processor: fix -Wincompatible-pointer-types in ia64_get_irr()
    
    commit e5a16a5c4602c119262f350274021f90465f479d upstream.
    
    test_bit(), as any other bitmap op, takes `unsigned long *` as a
    second argument (pointer to the actual bitmap), as any bitmap
    itself is an array of unsigned longs. However, the ia64_get_irr()
    code passes a ref to `u64` as a second argument.
    This works with the ia64 bitops implementation due to that they
    have `void *` as the second argument and then cast it later on.
    This works with the bitmap API itself due to that `unsigned long`
    has the same size on ia64 as `u64` (`unsigned long long`), but
    from the compiler PoV those two are different.
    Define @irr as `unsigned long` to fix that. That implies no
    functional changes. Has been hidden for 16 years!
    
    Fixes: a58786917ce2 ("[IA64] avoid broken SAL_CACHE_FLUSH implementations")
    Cc: stable@vger.kernel.org # 2.6.16+
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Yury Norov <yury.norov@gmail.com>
    Signed-off-by: Yury Norov <yury.norov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f36ba13cb5bdb0754b3955cef44ff6d69d34d49
Author: Xiaomeng Tong <xiam0nd.tong@gmail.com>
Date:   Thu Apr 14 05:14:15 2022 +0100

    media: [PATCH] pci: atomisp_cmd: fix three missing checks on list iterator
    
    commit 09b204eb9de9fdf07d028c41c4331b5cfeb70dd7 upstream.
    
    The three bugs are here:
            __func__, s3a_buf->s3a_data->exp_id);
            __func__, md_buf->metadata->exp_id);
            __func__, dis_buf->dis_data->exp_id);
    
    The list iterator 's3a_buf/md_buf/dis_buf' will point to a bogus
    position containing HEAD if the list is empty or no element is found.
    This case must be checked before any use of the iterator, otherwise
    it will lead to a invalid memory access.
    
    To fix this bug, add an check. Use a new variable '*_iter' as the
    list iterator, while use the old variable '*_buf' as a dedicated
    pointer to point to the found element.
    
    Link: https://lore.kernel.org/linux-media/20220414041415.3342-1-xiam0nd.tong@gmail.com
    Cc: stable@vger.kernel.org
    Fixes: ad85094b293e4 ("Revert "media: staging: atomisp: Remove driver"")
    Signed-off-by: Xiaomeng Tong <xiam0nd.tong@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fd4ffa2372a41361d2bdd27ea5730e4e673240c
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Jul 26 04:33:12 2022 -0400

    md-raid10: fix KASAN warning
    
    commit d17f744e883b2f8d13cca252d71cfe8ace346f7d upstream.
    
    There's a KASAN warning in raid10_remove_disk when running the lvm
    test lvconvert-raid-reshape.sh. We fix this warning by verifying that the
    value "number" is valid.
    
    BUG: KASAN: slab-out-of-bounds in raid10_remove_disk+0x61/0x2a0 [raid10]
    Read of size 8 at addr ffff889108f3d300 by task mdX_raid10/124682
    
    CPU: 3 PID: 124682 Comm: mdX_raid10 Not tainted 5.19.0-rc6 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
    Call Trace:
     <TASK>
     dump_stack_lvl+0x34/0x44
     print_report.cold+0x45/0x57a
     ? __lock_text_start+0x18/0x18
     ? raid10_remove_disk+0x61/0x2a0 [raid10]
     kasan_report+0xa8/0xe0
     ? raid10_remove_disk+0x61/0x2a0 [raid10]
     raid10_remove_disk+0x61/0x2a0 [raid10]
    Buffer I/O error on dev dm-76, logical block 15344, async page read
     ? __mutex_unlock_slowpath.constprop.0+0x1e0/0x1e0
     remove_and_add_spares+0x367/0x8a0 [md_mod]
     ? super_written+0x1c0/0x1c0 [md_mod]
     ? mutex_trylock+0xac/0x120
     ? _raw_spin_lock+0x72/0xc0
     ? _raw_spin_lock_bh+0xc0/0xc0
     md_check_recovery+0x848/0x960 [md_mod]
     raid10d+0xcf/0x3360 [raid10]
     ? sched_clock_cpu+0x185/0x1a0
     ? rb_erase+0x4d4/0x620
     ? var_wake_function+0xe0/0xe0
     ? psi_group_change+0x411/0x500
     ? preempt_count_sub+0xf/0xc0
     ? _raw_spin_lock_irqsave+0x78/0xc0
     ? __lock_text_start+0x18/0x18
     ? raid10_sync_request+0x36c0/0x36c0 [raid10]
     ? preempt_count_sub+0xf/0xc0
     ? _raw_spin_unlock_irqrestore+0x19/0x40
     ? del_timer_sync+0xa9/0x100
     ? try_to_del_timer_sync+0xc0/0xc0
     ? _raw_spin_lock_irqsave+0x78/0xc0
     ? __lock_text_start+0x18/0x18
     ? _raw_spin_unlock_irq+0x11/0x24
     ? __list_del_entry_valid+0x68/0xa0
     ? finish_wait+0xa3/0x100
     md_thread+0x161/0x260 [md_mod]
     ? unregister_md_personality+0xa0/0xa0 [md_mod]
     ? _raw_spin_lock_irqsave+0x78/0xc0
     ? prepare_to_wait_event+0x2c0/0x2c0
     ? unregister_md_personality+0xa0/0xa0 [md_mod]
     kthread+0x148/0x180
     ? kthread_complete_and_exit+0x20/0x20
     ret_from_fork+0x1f/0x30
     </TASK>
    
    Allocated by task 124495:
     kasan_save_stack+0x1e/0x40
     __kasan_kmalloc+0x80/0xa0
     setup_conf+0x140/0x5c0 [raid10]
     raid10_run+0x4cd/0x740 [raid10]
     md_run+0x6f9/0x1300 [md_mod]
     raid_ctr+0x2531/0x4ac0 [dm_raid]
     dm_table_add_target+0x2b0/0x620 [dm_mod]
     table_load+0x1c8/0x400 [dm_mod]
     ctl_ioctl+0x29e/0x560 [dm_mod]
     dm_compat_ctl_ioctl+0x7/0x20 [dm_mod]
     __do_compat_sys_ioctl+0xfa/0x160
     do_syscall_64+0x90/0xc0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Last potentially related work creation:
     kasan_save_stack+0x1e/0x40
     __kasan_record_aux_stack+0x9e/0xc0
     kvfree_call_rcu+0x84/0x480
     timerfd_release+0x82/0x140
    L __fput+0xfa/0x400
     task_work_run+0x80/0xc0
     exit_to_user_mode_prepare+0x155/0x160
     syscall_exit_to_user_mode+0x12/0x40
     do_syscall_64+0x42/0xc0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Second to last potentially related work creation:
     kasan_save_stack+0x1e/0x40
     __kasan_record_aux_stack+0x9e/0xc0
     kvfree_call_rcu+0x84/0x480
     timerfd_release+0x82/0x140
     __fput+0xfa/0x400
     task_work_run+0x80/0xc0
     exit_to_user_mode_prepare+0x155/0x160
     syscall_exit_to_user_mode+0x12/0x40
     do_syscall_64+0x42/0xc0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    The buggy address belongs to the object at ffff889108f3d200
     which belongs to the cache kmalloc-256 of size 256
    The buggy address is located 0 bytes to the right of
     256-byte region [ffff889108f3d200, ffff889108f3d300)
    
    The buggy address belongs to the physical page:
    page:000000007ef2a34c refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1108f3c
    head:000000007ef2a34c order:2 compound_mapcount:0 compound_pincount:0
    flags: 0x4000000000010200(slab|head|zone=2)
    raw: 4000000000010200 0000000000000000 dead000000000001 ffff889100042b40
    raw: 0000000000000000 0000000080200020 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff889108f3d200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffff889108f3d280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    >ffff889108f3d300: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                       ^
     ffff889108f3d380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff889108f3d400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0bdaed154e5b9cc4310ddaf5da290483d00e6ba
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jul 24 14:26:12 2022 -0400

    md-raid: destroy the bitmap after destroying the thread
    
    commit e151db8ecfb019b7da31d076130a794574c89f6f upstream.
    
    When we ran the lvm test "shell/integrity-blocksize-3.sh" on a kernel with
    kasan, we got failure in write_page.
    
    The reason for the failure is that md_bitmap_destroy is called before
    destroying the thread and the thread may be waiting in the function
    write_page for the bio to complete. When the thread finishes waiting, it
    executes "if (test_bit(BITMAP_WRITE_ERROR, &bitmap->flags))", which
    triggers the kasan warning.
    
    Note that the commit 48df498daf62 that caused this bug claims that it is
    neede for md-cluster, you should check md-cluster and possibly find
    another bugfix for it.
    
    BUG: KASAN: use-after-free in write_page+0x18d/0x680 [md_mod]
    Read of size 8 at addr ffff889162030c78 by task mdX_raid1/5539
    
    CPU: 10 PID: 5539 Comm: mdX_raid1 Not tainted 5.19.0-rc2 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
    Call Trace:
     <TASK>
     dump_stack_lvl+0x34/0x44
     print_report.cold+0x45/0x57a
     ? __lock_text_start+0x18/0x18
     ? write_page+0x18d/0x680 [md_mod]
     kasan_report+0xa8/0xe0
     ? write_page+0x18d/0x680 [md_mod]
     kasan_check_range+0x13f/0x180
     write_page+0x18d/0x680 [md_mod]
     ? super_sync+0x4d5/0x560 [dm_raid]
     ? md_bitmap_file_kick+0xa0/0xa0 [md_mod]
     ? rs_set_dev_and_array_sectors+0x2e0/0x2e0 [dm_raid]
     ? mutex_trylock+0x120/0x120
     ? preempt_count_add+0x6b/0xc0
     ? preempt_count_sub+0xf/0xc0
     md_update_sb+0x707/0xe40 [md_mod]
     md_reap_sync_thread+0x1b2/0x4a0 [md_mod]
     md_check_recovery+0x533/0x960 [md_mod]
     raid1d+0xc8/0x2a20 [raid1]
     ? var_wake_function+0xe0/0xe0
     ? psi_group_change+0x411/0x500
     ? preempt_count_sub+0xf/0xc0
     ? _raw_spin_lock_irqsave+0x78/0xc0
     ? __lock_text_start+0x18/0x18
     ? raid1_end_read_request+0x2a0/0x2a0 [raid1]
     ? preempt_count_sub+0xf/0xc0
     ? _raw_spin_unlock_irqrestore+0x19/0x40
     ? del_timer_sync+0xa9/0x100
     ? try_to_del_timer_sync+0xc0/0xc0
     ? _raw_spin_lock_irqsave+0x78/0xc0
     ? __lock_text_start+0x18/0x18
     ? __list_del_entry_valid+0x68/0xa0
     ? finish_wait+0xa3/0x100
     md_thread+0x161/0x260 [md_mod]
     ? unregister_md_personality+0xa0/0xa0 [md_mod]
     ? _raw_spin_lock_irqsave+0x78/0xc0
     ? prepare_to_wait_event+0x2c0/0x2c0
     ? unregister_md_personality+0xa0/0xa0 [md_mod]
     kthread+0x148/0x180
     ? kthread_complete_and_exit+0x20/0x20
     ret_from_fork+0x1f/0x30
     </TASK>
    
    Allocated by task 5522:
     kasan_save_stack+0x1e/0x40
     __kasan_kmalloc+0x80/0xa0
     md_bitmap_create+0xa8/0xe80 [md_mod]
     md_run+0x777/0x1300 [md_mod]
     raid_ctr+0x249c/0x4a30 [dm_raid]
     dm_table_add_target+0x2b0/0x620 [dm_mod]
     table_load+0x1c8/0x400 [dm_mod]
     ctl_ioctl+0x29e/0x560 [dm_mod]
     dm_compat_ctl_ioctl+0x7/0x20 [dm_mod]
     __do_compat_sys_ioctl+0xfa/0x160
     do_syscall_64+0x90/0xc0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Freed by task 5680:
     kasan_save_stack+0x1e/0x40
     kasan_set_track+0x21/0x40
     kasan_set_free_info+0x20/0x40
     __kasan_slab_free+0xf7/0x140
     kfree+0x80/0x240
     md_bitmap_free+0x1c3/0x280 [md_mod]
     __md_stop+0x21/0x120 [md_mod]
     md_stop+0x9/0x40 [md_mod]
     raid_dtr+0x1b/0x40 [dm_raid]
     dm_table_destroy+0x98/0x1e0 [dm_mod]
     __dm_destroy+0x199/0x360 [dm_mod]
     dev_remove+0x10c/0x160 [dm_mod]
     ctl_ioctl+0x29e/0x560 [dm_mod]
     dm_compat_ctl_ioctl+0x7/0x20 [dm_mod]
     __do_compat_sys_ioctl+0xfa/0x160
     do_syscall_64+0x90/0xc0
     entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: 48df498daf62 ("md: move bitmap_destroy to the beginning of __md_stop")
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bdda8656a1b74879f6b3889133ccc85decb0b3f
Author: Narendra Hadke <nhadke@marvell.com>
Date:   Tue Jul 26 11:12:21 2022 +0200

    serial: mvebu-uart: uart2 error bits clearing
    
    commit a7209541239e5dd44d981289e5f9059222d40fd1 upstream.
    
    For mvebu uart2, error bits are not cleared on buffer read.
    This causes interrupt loop and system hang.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Yi Guo <yi.guo@cavium.com>
    Reviewed-by: Nadav Haklai <nadavh@marvell.com>
    Signed-off-by: Narendra Hadke <nhadke@marvell.com>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20220726091221.12358-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfe17ae313aad2f8a982105a0dbbdf92821a3305
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jul 21 16:06:18 2022 +0200

    fuse: limit nsec
    
    commit 47912eaa061a6a81e4aa790591a1874c650733c0 upstream.
    
    Limit nanoseconds to 0..999999999.
    
    Fixes: d8a5ba45457e ("[PATCH] FUSE - core")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e63ea5814ba165a6ca0dab366690e6b3fc9ccd12
Author: Bikash Hazarika <bhazarika@marvell.com>
Date:   Tue Jul 12 22:20:38 2022 -0700

    scsi: qla2xxx: Zero undefined mailbox IN registers
    
    commit 6c96a3c7d49593ef15805f5e497601c87695abc9 upstream.
    
    While requesting a new mailbox command, driver does not write any data to
    unused registers.  Initialize the unused register value to zero while
    requesting a new mailbox command to prevent stale entry access by firmware.
    
    Link: https://lore.kernel.org/r/20220713052045.10683-4-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bikash Hazarika <bhazarika@marvell.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f18b5ad2d5503c9c253ce19304f515522b56d4c
Author: Bikash Hazarika <bhazarika@marvell.com>
Date:   Tue Jul 12 22:20:37 2022 -0700

    scsi: qla2xxx: Fix incorrect display of max frame size
    
    commit cf3b4fb655796674e605268bd4bfb47a47c8bce6 upstream.
    
    Replace display field with the correct field.
    
    Link: https://lore.kernel.org/r/20220713052045.10683-3-njavali@marvell.com
    Fixes: 8777e4314d39 ("scsi: qla2xxx: Migrate NVME N2N handling into state machine")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bikash Hazarika <bhazarika@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 408bfa1489a3cfe7150b81ab0b0df99b23dd5411
Author: Tony Battersby <tonyb@cybernetics.com>
Date:   Mon Jul 11 10:51:32 2022 -0400

    scsi: sg: Allow waiting for commands to complete on removed device
    
    commit 3455607fd7be10b449f5135c00dc306b85dc0d21 upstream.
    
    When a SCSI device is removed while in active use, currently sg will
    immediately return -ENODEV on any attempt to wait for active commands that
    were sent before the removal.  This is problematic for commands that use
    SG_FLAG_DIRECT_IO since the data buffer may still be in use by the kernel
    when userspace frees or reuses it after getting ENODEV, leading to
    corrupted userspace memory (in the case of READ-type commands) or corrupted
    data being sent to the device (in the case of WRITE-type commands).  This
    has been seen in practice when logging out of a iscsi_tcp session, where
    the iSCSI driver may still be processing commands after the device has been
    marked for removal.
    
    Change the policy to allow userspace to wait for active sg commands even
    when the device is being removed.  Return -ENODEV only when there are no
    more responses to read.
    
    Link: https://lore.kernel.org/r/5ebea46f-fe83-2d0b-233d-d0dcb362dd0a@cybernetics.com
    Cc: <stable@vger.kernel.org>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Tony Battersby <tonyb@cybernetics.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb1888205c0782f287e5dd4ffff1f665332e868c
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sun Jul 17 08:42:41 2022 +0800

    iio: light: isl29028: Fix the warning in isl29028_remove()
    
    commit 06674fc7c003b9d0aa1d37fef7ab2c24802cc6ad upstream.
    
    The driver use the non-managed form of the register function in
    isl29028_remove(). To keep the release order as mirroring the ordering
    in probe, the driver should use non-managed form in probe, too.
    
    The following log reveals it:
    
    [   32.374955] isl29028 0-0010: remove
    [   32.376861] general protection fault, probably for non-canonical address 0xdffffc0000000006: 0000 [#1] PREEMPT SMP KASAN PTI
    [   32.377676] KASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]
    [   32.379432] RIP: 0010:kernfs_find_and_get_ns+0x28/0xe0
    [   32.385461] Call Trace:
    [   32.385807]  sysfs_unmerge_group+0x59/0x110
    [   32.386110]  dpm_sysfs_remove+0x58/0xc0
    [   32.386391]  device_del+0x296/0xe50
    [   32.386959]  cdev_device_del+0x1d/0xd0
    [   32.387231]  devm_iio_device_unreg+0x27/0xb0
    [   32.387542]  devres_release_group+0x319/0x3d0
    [   32.388162]  i2c_device_remove+0x93/0x1f0
    
    Fixes: 2db5054ac28d ("staging: iio: isl29028: add runtime power management support")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Link: https://lore.kernel.org/r/20220717004241.2281028-1-zheyuma97@gmail.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb7eea3946d390e246fcb2f8e3b6f17bac4e8118
Author: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date:   Tue Jun 28 21:18:23 2022 +0530

    mtd: rawnand: arasan: Update NAND bus clock instead of system clock
    
    commit 7499bfeedb47efc1ee4dc793b92c610d46e6d6a6 upstream.
    
    In current implementation the Arasan NAND driver is updating the
    system clock(i.e., anand->clk) in accordance to the timing modes
    (i.e., SDR or NVDDR). But as per the Arasan NAND controller spec the
    flash clock or the NAND bus clock(i.e., nfc->bus_clk), need to be
    updated instead. This patch keeps the system clock unchanged and updates
    the NAND bus clock as per the timing modes.
    
    Fixes: 197b88fecc50 ("mtd: rawnand: arasan: Add new Arasan NAND controller")
    CC: stable@vger.kernel.org # 5.8+
    Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20220628154824.12222-2-amit.kumar-mahapatra@xilinx.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15d0aeb017856b501870741587d6a75f8b06166a
Author: Leo Li <sunpeng.li@amd.com>
Date:   Tue Jul 12 12:30:29 2022 -0400

    drm/amdgpu: Check BO's requested pinning domains against its preferred_domains
    
    commit f5ba14043621f4afdf3ad5f92ee2d8dbebbe4340 upstream.
    
    When pinning a buffer, we should check to see if there are any
    additional restrictions imposed by bo->preferred_domains. This will
    prevent the BO from being moved to an invalid domain when pinning.
    
    For example, this can happen if the user requests to create a BO in GTT
    domain for display scanout. amdgpu_dm will allow pinning to either VRAM
    or GTT domains, since DCN can scanout from either or. However, in
    amdgpu_bo_pin_restricted(), pinning to VRAM is preferred if there is
    adequate carveout. This can lead to pinning to VRAM despite the user
    requesting GTT placement for the BO.
    
    v2: Allow the kernel to override the domain, which can happen when
        exporting a BO to a V4L camera (for example).
    
    Signed-off-by: Leo Li <sunpeng.li@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55f558442742fb76349b4f1844f386b8f3ecb92c
Author: Lyude Paul <lyude@redhat.com>
Date:   Thu Jul 14 13:42:33 2022 -0400

    drm/nouveau/acpi: Don't print error when we get -EINPROGRESS from pm_runtime
    
    commit 53c26181950ddc3c8ace3c0939c89e9c4d8deeb9 upstream.
    
    Since this isn't actually a failure.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: David Airlie <airlied@linux.ie>
    Fixes: 79e765ad665d ("drm/nouveau/drm/nouveau: Prevent handling ACPI HPD events too early")
    Cc: <stable@vger.kernel.org> # v4.19+
    Link: https://patchwork.freedesktop.org/patch/msgid/20220714174234.949259-2-lyude@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92050011e09d30f0cf884e146b0d12f3b4286798
Author: Lyude Paul <lyude@redhat.com>
Date:   Thu Jul 14 13:42:34 2022 -0400

    drm/nouveau: Don't pm_runtime_put_sync(), only pm_runtime_put_autosuspend()
    
    commit c96cfaf8fc02d4bb70727dfa7ce7841a3cff9be2 upstream.
    
    While trying to fix another issue, it occurred to me that I don't actually
    think there is any situation where we want pm_runtime_put() in nouveau to
    be synchronous. In fact, this kind of just seems like it would cause
    issues where we may unexpectedly block a thread we don't expect to be
    blocked.
    
    So, let's only use pm_runtime_put_autosuspend().
    
    Changes since v1:
    * Use pm_runtime_put_autosuspend(), not pm_runtime_put()
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: David Airlie <airlied@linux.ie>
    Fixes: 3a6536c51d5d ("drm/nouveau: Intercept ACPI_VIDEO_NOTIFY_PROBE")
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: <stable@vger.kernel.org> # v4.10+
    Link: https://patchwork.freedesktop.org/patch/msgid/20220714174234.949259-3-lyude@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca0742a8ed547de5c14100f3ffab8540159be899
Author: Timur Tabi <ttabi@nvidia.com>
Date:   Wed May 11 11:37:16 2022 -0500

    drm/nouveau: fix another off-by-one in nvbios_addr
    
    commit c441d28945fb113220d48d6c86ebc0b090a2b677 upstream.
    
    This check determines whether a given address is part of
    image 0 or image 1.  Image 1 starts at offset image0_size,
    so that address should be included.
    
    Fixes: 4d4e9907ff572 ("drm/nouveau/bios: guard against out-of-bounds accesses to image")
    Cc: <stable@vger.kernel.org> # v4.8+
    Signed-off-by: Timur Tabi <ttabi@nvidia.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220511163716.3520591-1-ttabi@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de63dbc296816aa9baf503dc1166c26c3b120503
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Mon Jun 13 16:47:44 2022 +0200

    drm/vc4: hdmi: Disable audio if dmas property is present but empty
    
    commit db2b927f8668adf3ac765e0921cd2720f5c04172 upstream.
    
    The dmas property is used to hold the dmaengine channel used for audio
    output.
    
    Older device trees were missing that property, so if it's not there we
    disable the audio output entirely.
    
    However, some overlays have set an empty value to that property, mostly
    to workaround the fact that overlays cannot remove a property. Let's add
    a test for that case and if it's empty, let's disable it as well.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>
    Link: https://lore.kernel.org/r/20220613144800.326124-18-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ff71d4f532bbc53d0986b65310ff0e31f3c73b3
Author: Dmitry Osipenko <dmitry.osipenko@collabora.com>
Date:   Thu Jun 30 23:04:04 2022 +0300

    drm/gem: Properly annotate WW context on drm_gem_lock_reservations() error
    
    commit 2939deac1fa220bc82b89235f146df1d9b52e876 upstream.
    
    Use ww_acquire_fini() in the error code paths. Otherwise lockdep
    thinks that lock is held when lock's memory is freed after the
    drm_gem_lock_reservations() error. The ww_acquire_context needs to be
    annotated as "released", which fixes the noisy "WARNING: held lock freed!"
    splat of VirtIO-GPU driver with CONFIG_DEBUG_MUTEXES=y and enabled lockdep.
    
    Cc: stable@vger.kernel.org
    Fixes: 7edc3e3b975b5 ("drm: Add helpers for locking an array of BO reservations.")
    Reviewed-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Dmitry Osipenko <dmitry.osipenko@collabora.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220630200405.1883897-2-dmitry.osipenko@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 043f4642c16824ef0abdf2474328f7aeeb3185e9
Author: Helge Deller <deller@gmx.de>
Date:   Mon Aug 1 17:36:15 2022 +0200

    parisc: io_pgetevents_time64() needs compat syscall in 32-bit compat mode
    
    commit 6431e92fc827bdd2d28f79150d90415ba9ce0d21 upstream.
    
    For all syscalls in 32-bit compat mode on 64-bit kernels the upper
    32-bits of the 64-bit registers are zeroed out, so a negative 32-bit
    signed value will show up as positive 64-bit signed value.
    
    This behaviour breaks the io_pgetevents_time64() syscall which expects
    signed 64-bit values for the "min_nr" and "nr" parameters.
    Fix this by switching to the compat_sys_io_pgetevents_time64() syscall,
    which uses "compat_long_t" types for those parameters.
    
    Cc: <stable@vger.kernel.org> # v5.1+
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc3918d70bbe65c8b92c9dc9d742c4559ccd2dbe
Author: William Dean <williamsukatube@gmail.com>
Date:   Fri Jul 22 10:57:09 2022 +0800

    parisc: Check the return value of ioremap() in lba_driver_probe()
    
    commit cf59f34d7f978d14d6520fd80a78a5ad5cb8abf8 upstream.
    
    The function ioremap() in lba_driver_probe() can fail, so
    its return value should be checked.
    
    Fixes: 4bdc0d676a643 ("remove ioremap_nocache and devm_ioremap_nocache")
    Reported-by: Hacash Robot <hacashRobot@santino.com>
    Signed-off-by: William Dean <williamsukatube@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.6+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0dfba6d3bf2fa78bd7c62cae61496279f62ced2
Author: Helge Deller <deller@gmx.de>
Date:   Mon Jul 18 17:06:47 2022 +0200

    parisc: Fix device names in /proc/iomem
    
    commit cab56b51ec0e69128909cef4650e1907248d821b upstream.
    
    Fix the output of /proc/iomem to show the real hardware device name
    including the pa_pathname, e.g. "Merlin 160 Core Centronics [8:16:0]".
    Up to now only the pa_pathname ("[8:16.0]") was shown.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v4.9+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 542d2e799d53577b961f74914342c9e972c3f1ab
Author: Jiachen Zhang <zhangjiachen.jaycee@bytedance.com>
Date:   Thu Jul 28 19:49:15 2022 +0800

    ovl: drop WARN_ON() dentry is NULL in ovl_encode_fh()
    
    commit dd524b7f317de8d31d638cbfdc7be4cf9b770e42 upstream.
    
    Some code paths cannot guarantee the inode have any dentry alias. So
    WARN_ON() all !dentry may flood the kernel logs.
    
    For example, when an overlayfs inode is watched by inotifywait (1), and
    someone is trying to read the /proc/$(pidof inotifywait)/fdinfo/INOTIFY_FD,
    at that time if the dentry has been reclaimed by kernel (such as
    echo 2 > /proc/sys/vm/drop_caches), there will be a WARN_ON(). The
    printed call stack would be like:
    
        ? show_mark_fhandle+0xf0/0xf0
        show_mark_fhandle+0x4a/0xf0
        ? show_mark_fhandle+0xf0/0xf0
        ? seq_vprintf+0x30/0x50
        ? seq_printf+0x53/0x70
        ? show_mark_fhandle+0xf0/0xf0
        inotify_fdinfo+0x70/0x90
        show_fdinfo.isra.4+0x53/0x70
        seq_show+0x130/0x170
        seq_read+0x153/0x440
        vfs_read+0x94/0x150
        ksys_read+0x5f/0xe0
        do_syscall_64+0x59/0x1e0
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    So let's drop WARN_ON() to avoid kernel log flooding.
    
    Reported-by: Hongbo Yin <yinhongbo@bytedance.com>
    Signed-off-by: Jiachen Zhang <zhangjiachen.jaycee@bytedance.com>
    Signed-off-by: Tianci Zhang <zhangtianci.1997@bytedance.com>
    Fixes: 8ed5eec9d6c4 ("ovl: encode pure upper file handles")
    Cc: <stable@vger.kernel.org> # v4.16
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 135199a2edd459d2b123144efcd7f9bcd95128e4
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu Jun 23 14:50:59 2022 +0200

    usbnet: Fix linkwatch use-after-free on disconnect
    
    commit a69e617e533edddf3fa3123149900f36e0a6dc74 upstream.
    
    usbnet uses the work usbnet_deferred_kevent() to perform tasks which may
    sleep.  On disconnect, completion of the work was originally awaited in
    ->ndo_stop().  But in 2003, that was moved to ->disconnect() by historic
    commit "[PATCH] USB: usbnet, prevent exotic rtnl deadlock":
    
      https://git.kernel.org/tglx/history/c/0f138bbfd83c
    
    The change was made because back then, the kernel's workqueue
    implementation did not allow waiting for a single work.  One had to wait
    for completion of *all* work by calling flush_scheduled_work(), and that
    could deadlock when waiting for usbnet_deferred_kevent() with rtnl_mutex
    held in ->ndo_stop().
    
    The commit solved one problem but created another:  It causes a
    use-after-free in USB Ethernet drivers aqc111.c, asix_devices.c,
    ax88179_178a.c, ch9200.c and smsc75xx.c:
    
    * If the drivers receive a link change interrupt immediately before
      disconnect, they raise EVENT_LINK_RESET in their (non-sleepable)
      ->status() callback and schedule usbnet_deferred_kevent().
    * usbnet_deferred_kevent() invokes the driver's ->link_reset() callback,
      which calls netif_carrier_{on,off}().
    * That in turn schedules the work linkwatch_event().
    
    Because usbnet_deferred_kevent() is awaited after unregister_netdev(),
    netif_carrier_{on,off}() may operate on an unregistered netdev and
    linkwatch_event() may run after free_netdev(), causing a use-after-free.
    
    In 2010, usbnet was changed to only wait for a single instance of
    usbnet_deferred_kevent() instead of *all* work by commit 23f333a2bfaf
    ("drivers/net: don't use flush_scheduled_work()").
    
    Unfortunately the commit neglected to move the wait back to
    ->ndo_stop().  Rectify that omission at long last.
    
    Reported-by: Jann Horn <jannh@google.com>
    Link: https://lore.kernel.org/netdev/CAG48ez0MHBbENX5gCdHAUXZ7h7s20LnepBF-pa5M=7Bi-jZrEA@mail.gmail.com/
    Reported-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/netdev/20220315113841.GA22337@pengutronix.de/
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Link: https://lore.kernel.org/r/d1c87ebe9fc502bffcd1576e238d685ad08321e4.1655987888.git.lukas@wunner.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d65c3fcd6dfaa94e35672bfcbe4ebf0bd5159d2e
Author: Helge Deller <deller@gmx.de>
Date:   Thu Jun 2 22:08:38 2022 +0200

    fbcon: Fix accelerated fbdev scrolling while logo is still shown
    
    commit 3866cba87dcd0162fb41e9b3b653d0af68fad5ec upstream.
    
    There is no need to directly skip over to the SCROLL_REDRAW case while
    the logo is still shown.
    
    When using DRM, this change has no effect because the code will reach
    the SCROLL_REDRAW case immediately anyway.
    
    But if you run an accelerated fbdev driver and have
    FRAMEBUFFER_CONSOLE_LEGACY_ACCELERATION enabled, console scrolling is
    slowed down by factors so that it feels as if you use a 9600 baud
    terminal.
    
    So, drop those unnecessary checks and speed up fbdev console
    acceleration during bootup.
    
    Cc: stable@vger.kernel.org # v5.10+
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/YpkYxk7wsBPx3po+@p100
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16badd9987360218291a7623827ec9576007ab5f
Author: Helge Deller <deller@gmx.de>
Date:   Thu Jun 2 22:06:28 2022 +0200

    fbcon: Fix boundary checks for fbcon=vc:n1-n2 parameters
    
    commit cad564ca557f8d3bb3b1fa965d9a2b3f6490ec69 upstream.
    
    The user may use the fbcon=vc:<n1>-<n2> option to tell fbcon to take
    over the given range (n1...n2) of consoles. The value for n1 and n2
    needs to be a positive number and up to (MAX_NR_CONSOLES - 1).
    The given values were not fully checked against those boundaries yet.
    
    To fix the issue, convert first_fb_vc and last_fb_vc to unsigned
    integers and check them against the upper boundary, and make sure that
    first_fb_vc is smaller than last_fb_vc.
    
    Cc: stable@vger.kernel.org # v4.19+
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/YpkYRMojilrtZIgM@p100
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 826955eebc47826e0591b3c2d33ad80cdb46f686
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Jul 29 17:39:07 2022 +0200

    thermal: sysfs: Fix cooling_device_stats_setup() error code path
    
    commit d5a8aa5d7d80d21ab6b266f1bed4194b61746199 upstream.
    
    If cooling_device_stats_setup() fails to create the stats object, it
    must clear the last slot in cooling_device_attr_groups that was
    initially empty (so as to make it possible to add stats attributes to
    the cooling device attribute groups).
    
    Failing to do so may cause the stats attributes to be created by
    mistake for a device that doesn't have a stats object, because the
    slot in question might be populated previously during the registration
    of another cooling device.
    
    Fixes: 8ea229511e06 ("thermal: Add cooling device's statistics in sysfs")
    Reported-by: Di Shen <di.shen@unisoc.com>
    Tested-by: Di Shen <di.shen@unisoc.com>
    Cc: 4.17+ <stable@vger.kernel.org> # 4.17+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60a8f0e62aeb1a50383ab228f2281047bceadd9a
Author: Yang Xu <xuyang2018.jy@fujitsu.com>
Date:   Thu Jul 14 14:11:26 2022 +0800

    fs: Add missing umask strip in vfs_tmpfile
    
    commit ac6800e279a22b28f4fc21439843025a0d5bf03e upstream.
    
    All creation paths except for O_TMPFILE handle umask in the vfs directly
    if the filesystem doesn't support or enable POSIX ACLs. If the filesystem
    does then umask handling is deferred until posix_acl_create().
    Because, O_TMPFILE misses umask handling in the vfs it will not honor
    umask settings. Fix this by adding the missing umask handling.
    
    Link: https://lore.kernel.org/r/1657779088-2242-2-git-send-email-xuyang2018.jy@fujitsu.com
    Fixes: 60545d0d4610 ("[O_TMPFILE] it's still short a few helpers, but infrastructure should be OK now...")
    Cc: <stable@vger.kernel.org> # 4.19+
    Reported-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Reviewed-and-Tested-by: Jeff Layton <jlayton@kernel.org>
    Acked-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Yang Xu <xuyang2018.jy@fujitsu.com>
    Signed-off-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf65b5bfac3d17af93eb375d25c700706549d73d
Author: David Howells <dhowells@redhat.com>
Date:   Mon Aug 8 09:52:35 2022 +0100

    vfs: Check the truncate maximum size in inode_newsize_ok()
    
    commit e2ebff9c57fe4eb104ce4768f6ebcccf76bef849 upstream.
    
    If something manages to set the maximum file size to MAX_OFFSET+1, this
    can cause the xfs and ext4 filesystems at least to become corrupt.
    
    Ordinarily, the kernel protects against userspace trying this by
    checking the value early in the truncate() and ftruncate() system calls
    calls - but there are at least two places that this check is bypassed:
    
     (1) Cachefiles will round up the EOF of the backing file to DIO block
         size so as to allow DIO on the final block - but this might push
         the offset negative. It then calls notify_change(), but this
         inadvertently bypasses the checking. This can be triggered if
         someone puts an 8EiB-1 file on a server for someone else to try and
         access by, say, nfs.
    
     (2) ksmbd doesn't check the value it is given in set_end_of_file_info()
         and then calls vfs_truncate() directly - which also bypasses the
         check.
    
    In both cases, it is potentially possible for a network filesystem to
    cause a disk filesystem to be corrupted: cachefiles in the client's
    cache filesystem; ksmbd in the server's filesystem.
    
    nfsd is okay as it checks the value, but we can then remove this check
    too.
    
    Fix this by adding a check to inode_newsize_ok(), as called from
    setattr_prepare(), thereby catching the issue as filesystems set up to
    perform the truncate with minimal opportunity for bypassing the new
    check.
    
    Fixes: 1f08c925e7a3 ("cachefiles: Implement backing file wrangling")
    Fixes: f44158485826 ("cifsd: add file operations")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reported-by: Jeff Layton <jlayton@kernel.org>
    Tested-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Namjae Jeon <linkinjeon@kernel.org>
    Cc: stable@kernel.org
    Acked-by: Alexander Viro <viro@zeniv.linux.org.uk>
    cc: Steve French <sfrench@samba.org>
    cc: Hyunchul Lee <hyc.lee@gmail.com>
    cc: Chuck Lever <chuck.lever@oracle.com>
    cc: Dave Wysochanski <dwysocha@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c6c65681f39bf71bc72ed589dec3b8b20e75cac
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Tue Jul 19 14:49:39 2022 +0900

    tty: vt: initialize unicode screen buffer
    
    commit af77c56aa35325daa2bc2bed5c2ebf169be61b86 upstream.
    
    syzbot reports kernel infoleak at vcs_read() [1], for buffer can be read
    immediately after resize operation. Initialize buffer using kzalloc().
    
      ----------
      #include <fcntl.h>
      #include <unistd.h>
      #include <sys/ioctl.h>
      #include <linux/fb.h>
    
      int main(int argc, char *argv[])
      {
        struct fb_var_screeninfo var = { };
        const int fb_fd = open("/dev/fb0", 3);
        ioctl(fb_fd, FBIOGET_VSCREENINFO, &var);
        var.yres = 0x21;
        ioctl(fb_fd, FBIOPUT_VSCREENINFO, &var);
        return read(open("/dev/vcsu", O_RDONLY), &var, sizeof(var)) == -1;
      }
      ----------
    
    Link: https://syzkaller.appspot.com/bug?extid=31a641689d43387f05d3 [1]
    Cc: stable <stable@vger.kernel.org>
    Reported-by: syzbot <syzbot+31a641689d43387f05d3@syzkaller.appspotmail.com>
    Reviewed-by: Jiri Slaby <jirislaby@kernel.org>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Link: https://lore.kernel.org/r/4ef053cf-e796-fb5e-58b7-3ae58242a4ad@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9b244e54111a78d980e709e044ceac7c345b5f1
Author: Bedant Patnaik <bedant.patnaik@gmail.com>
Date:   Tue Aug 9 19:54:55 2022 +0530

    ALSA: hda/realtek: Add a quirk for HP OMEN 15 (8786) mute LED
    
    commit 30267718fe2d4dbea49015b022f6f1fe16ca31ab upstream.
    
    Board ID 8786 seems to be another variant of the Omen 15 that needs
    ALC285_FIXUP_HP_MUTE_LED for working mute LED.
    
    Signed-off-by: Bedant Patnaik <bedant.patnaik@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220809142455.6473-1-bedant.patnaik@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b9ee47c285f1383e4fd03323433f8bf6b484fa9
Author: Meng Tang <tangmeng@uniontech.com>
Date:   Fri Aug 5 15:45:34 2022 +0800

    ALSA: hda/realtek: Add quirk for another Asus K42JZ model
    
    commit f882c4bef9cb914d9f7be171afb10ed26536bfa7 upstream.
    
    There is another Asus K42JZ model with the PCI SSID 1043:1313
    that requires the quirk ALC269VB_FIXUP_ASUS_MIC_NO_PRESENCE.
    Add the corresponding entry to the quirk table.
    
    Signed-off-by: Meng Tang <tangmeng@uniontech.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220805074534.20003-1-tangmeng@uniontech.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c366ccad5bce87d58fafaea5569881d68490a145
Author: Allen Ballway <ballway@chromium.org>
Date:   Wed Aug 10 15:27:22 2022 +0000

    ALSA: hda/cirrus - support for iMac 12,1 model
    
    commit 74bba640d69914cf832b87f6bbb700e5ba430672 upstream.
    
    The 12,1 model requires the same configuration as the 12,2 model
    to enable headphones but has a different codec SSID. Adds
    12,1 SSID for matching quirk.
    
    [ re-sorted in SSID order by tiwai ]
    
    Signed-off-by: Allen Ballway <ballway@chromium.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220810152701.1.I902c2e591bbf8de9acb649d1322fa1f291849266@changeid
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2b72c51c2cf96f050c63e39b3749e7ba8e6653c
Author: Meng Tang <tangmeng@uniontech.com>
Date:   Mon Aug 8 15:34:06 2022 +0800

    ALSA: hda/conexant: Add quirk for LENOVO 20149 Notebook model
    
    commit f83bb2592482fe94c6eea07a8121763c80f36ce5 upstream.
    
    There is another LENOVO 20149 (Type1Sku0) Notebook model with
    CX20590, the device PCI SSID is 17aa:3977, which headphones are
    not responding, that requires the quirk CXT_PINCFG_LENOVO_NOTEBOOK.
    Add the corresponding entry to the quirk table.
    
    Signed-off-by: Meng Tang <tangmeng@uniontech.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220808073406.19460-1-tangmeng@uniontech.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2613baa3ab2153cc45b175c58700d93f72ef36c4
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Wed Jul 7 18:10:15 2021 -0700

    mm/mremap: hold the rmap lock in write mode when moving page table entries.
    
    commit 97113eb39fa7972722ff490b947d8af023e1f6a2 upstream.
    
    To avoid a race between rmap walk and mremap, mremap does
    take_rmap_locks().  The lock was taken to ensure that rmap walk don't miss
    a page table entry due to PTE moves via move_pagetables().  The kernel
    does further optimization of this lock such that if we are going to find
    the newly added vma after the old vma, the rmap lock is not taken.  This
    is because rmap walk would find the vmas in the same order and if we don't
    find the page table attached to older vma we would find it with the new
    vma which we would iterate later.
    
    As explained in commit eb66ae030829 ("mremap: properly flush TLB before
    releasing the page") mremap is special in that it doesn't take ownership
    of the page.  The optimized version for PUD/PMD aligned mremap also
    doesn't hold the ptl lock.  This can result in stale TLB entries as show
    below.
    
    This patch updates the rmap locking requirement in mremap to handle the race condition
    explained below with optimized mremap::
    
    Optmized PMD move
    
        CPU 1                           CPU 2                                   CPU 3
    
        mremap(old_addr, new_addr)      page_shrinker/try_to_unmap_one
    
        mmap_write_lock_killable()
    
                                        addr = old_addr
                                        lock(pte_ptl)
        lock(pmd_ptl)
        pmd = *old_pmd
        pmd_clear(old_pmd)
        flush_tlb_range(old_addr)
    
        *new_pmd = pmd
                                                                                *new_addr = 10; and fills
                                                                                TLB with new addr
                                                                                and old pfn
    
        unlock(pmd_ptl)
                                        ptep_clear_flush()
                                        old pfn is free.
                                                                                Stale TLB entry
    
    Optimized PUD move also suffers from a similar race.  Both the above race
    condition can be fixed if we force mremap path to take rmap lock.
    
    Link: https://lkml.kernel.org/r/20210616045239.370802-7-aneesh.kumar@linux.ibm.com
    Fixes: 2c91bd4a4e2e ("mm: speed up mremap by 20x on large regions")
    Fixes: c49dd3401802 ("mm: speedup mremap on 1GB or larger regions")
    Link: https://lore.kernel.org/linux-mm/CAHk-=wgXVR04eBNtxQfevontWnP6FDm+oj5vauQXP3S-huwbPw@mail.gmail.com
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Acked-by: Hugh Dickins <hughd@google.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: Joel Fernandes <joel@joelfernandes.org>
    Cc: Kalesh Singh <kaleshsingh@google.com>
    Cc: Kirill A. Shutemov <kirill@shutemov.name>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [patch rewritten for backport since the code was refactored since]
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a69f1f84207b1f30820cc1d5b006827c1f61ed6
Author: Dave Chinner <dchinner@redhat.com>
Date:   Wed Aug 10 16:15:52 2022 +0200

    xfs: fix I_DONTCACHE
    
    commit f38a032b165d812b0ba8378a5cd237c0888ff65f upstream.
    
    Yup, the VFS hoist broke it, and nobody noticed. Bulkstat workloads
    make it clear that it doesn't work as it should.
    
    Fixes: dae2f8ed7992 ("fs: Lift XFS_IDONTCACHE to the VFS layer")
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Acked-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e32bb2428104285413aa233b3d4c45a1a9f47ef3
Author: Darrick J. Wong <djwong@kernel.org>
Date:   Wed Aug 10 16:15:51 2022 +0200

    xfs: only set IOMAP_F_SHARED when providing a srcmap to a write
    
    commit 72a048c1056a72e37ea2ee34cc73d8c6d6cb4290 upstream.
    
    While prototyping a free space defragmentation tool, I observed an
    unexpected IO error while running a sequence of commands that can be
    recreated by the following sequence of commands:
    
    $ xfs_io -f -c "pwrite -S 0x58 -b 10m 0 10m" file1
    $ cp --reflink=always file1 file2
    $ punch-alternating -o 1 file2
    $ xfs_io -c "funshare 0 10m" file2
    fallocate: Input/output error
    
    I then scraped this (abbreviated) stack trace from dmesg:
    
    WARNING: CPU: 0 PID: 30788 at fs/iomap/buffered-io.c:577 iomap_write_begin+0x376/0x450
    CPU: 0 PID: 30788 Comm: xfs_io Not tainted 5.14.0-rc6-xfsx #rc6 5ef57b62a900814b3e4d885c755e9014541c8732
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    RIP: 0010:iomap_write_begin+0x376/0x450
    RSP: 0018:ffffc90000c0fc20 EFLAGS: 00010297
    RAX: 0000000000000001 RBX: ffffc90000c0fd10 RCX: 0000000000001000
    RDX: ffffc90000c0fc54 RSI: 000000000000000c RDI: 000000000000000c
    RBP: ffff888005d5dbd8 R08: 0000000000102000 R09: ffffc90000c0fc50
    R10: 0000000000b00000 R11: 0000000000101000 R12: ffffea0000336c40
    R13: 0000000000001000 R14: ffffc90000c0fd10 R15: 0000000000101000
    FS:  00007f4b8f62fe40(0000) GS:ffff88803ec00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000056361c554108 CR3: 000000000524e004 CR4: 00000000001706f0
    Call Trace:
     iomap_unshare_actor+0x95/0x140
     iomap_apply+0xfa/0x300
     iomap_file_unshare+0x44/0x60
     xfs_reflink_unshare+0x50/0x140 [xfs 61947ea9b3a73e79d747dbc1b90205e7987e4195]
     xfs_file_fallocate+0x27c/0x610 [xfs 61947ea9b3a73e79d747dbc1b90205e7987e4195]
     vfs_fallocate+0x133/0x330
     __x64_sys_fallocate+0x3e/0x70
     do_syscall_64+0x35/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f4b8f79140a
    
    Looking at the iomap tracepoints, I saw this:
    
    iomap_iter:           dev 8:64 ino 0x100 pos 0 length 0 flags WRITE|0x80 (0x81) ops xfs_buffered_write_iomap_ops caller iomap_file_unshare
    iomap_iter_dstmap:    dev 8:64 ino 0x100 bdev 8:64 addr -1 offset 0 length 131072 type DELALLOC flags SHARED
    iomap_iter_srcmap:    dev 8:64 ino 0x100 bdev 8:64 addr 147456 offset 0 length 4096 type MAPPED flags
    iomap_iter:           dev 8:64 ino 0x100 pos 0 length 4096 flags WRITE|0x80 (0x81) ops xfs_buffered_write_iomap_ops caller iomap_file_unshare
    iomap_iter_dstmap:    dev 8:64 ino 0x100 bdev 8:64 addr -1 offset 4096 length 4096 type DELALLOC flags SHARED
    console:              WARNING: CPU: 0 PID: 30788 at fs/iomap/buffered-io.c:577 iomap_write_begin+0x376/0x450
    
    The first time funshare calls ->iomap_begin, xfs sees that the first
    block is shared and creates a 128k delalloc reservation in the COW fork.
    The delalloc reservation is returned as dstmap, and the shared block is
    returned as srcmap.  So far so good.
    
    funshare calls ->iomap_begin to try the second block.  This time there's
    no srcmap (punch-alternating punched it out!) but we still have the
    delalloc reservation in the COW fork.  Therefore, we again return the
    reservation as dstmap and the hole as srcmap.  iomap_unshare_iter
    incorrectly tries to unshare the hole, which __iomap_write_begin rejects
    because shared regions must be fully written and therefore cannot
    require zeroing.
    
    Therefore, change the buffered write iomap_begin function not to set
    IOMAP_F_SHARED when there isn't a source mapping to read from for the
    unsharing.
    
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Acked-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5f3e54f811679761c33526e695bd296190faade
Author: Dave Chinner <dchinner@redhat.com>
Date:   Wed Aug 10 16:15:50 2022 +0200

    mm: Add kvrealloc()
    
    commit de2860f4636256836450c6543be744a50118fc66 upstream.
    
    During log recovery of an XFS filesystem with 64kB directory
    buffers, rebuilding a buffer split across two log records results
    in a memory allocation warning from krealloc like this:
    
    xfs filesystem being mounted at /mnt/scratch supports timestamps until 2038 (0x7fffffff)
    XFS (dm-0): Unmounting Filesystem
    XFS (dm-0): Mounting V5 Filesystem
    XFS (dm-0): Starting recovery (logdev: internal)
    ------------[ cut here ]------------
    WARNING: CPU: 5 PID: 3435170 at mm/page_alloc.c:3539 get_page_from_freelist+0xdee/0xe40
    .....
    RIP: 0010:get_page_from_freelist+0xdee/0xe40
    Call Trace:
     ? complete+0x3f/0x50
     __alloc_pages+0x16f/0x300
     alloc_pages+0x87/0x110
     kmalloc_order+0x2c/0x90
     kmalloc_order_trace+0x1d/0x90
     __kmalloc_track_caller+0x215/0x270
     ? xlog_recover_add_to_cont_trans+0x63/0x1f0
     krealloc+0x54/0xb0
     xlog_recover_add_to_cont_trans+0x63/0x1f0
     xlog_recovery_process_trans+0xc1/0xd0
     xlog_recover_process_ophdr+0x86/0x130
     xlog_recover_process_data+0x9f/0x160
     xlog_recover_process+0xa2/0x120
     xlog_do_recovery_pass+0x40b/0x7d0
     ? __irq_work_queue_local+0x4f/0x60
     ? irq_work_queue+0x3a/0x50
     xlog_do_log_recovery+0x70/0x150
     xlog_do_recover+0x38/0x1d0
     xlog_recover+0xd8/0x170
     xfs_log_mount+0x181/0x300
     xfs_mountfs+0x4a1/0x9b0
     xfs_fs_fill_super+0x3c0/0x7b0
     get_tree_bdev+0x171/0x270
     ? suffix_kstrtoint.constprop.0+0xf0/0xf0
     xfs_fs_get_tree+0x15/0x20
     vfs_get_tree+0x24/0xc0
     path_mount+0x2f5/0xaf0
     __x64_sys_mount+0x108/0x140
     do_syscall_64+0x3a/0x70
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Essentially, we are taking a multi-order allocation from kmem_alloc()
    (which has an open coded no fail, no warn loop) and then
    reallocating it out to 64kB using krealloc(__GFP_NOFAIL) and that is
    then triggering the above warning.
    
    This is a regression caused by converting this code from an open
    coded no fail/no warn reallocation loop to using __GFP_NOFAIL.
    
    What we actually need here is kvrealloc(), so that if contiguous
    page allocation fails we fall back to vmalloc() and we don't
    get nasty warnings happening in XFS.
    
    Fixes: 771915c4f688 ("xfs: remove kmem_realloc()")
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Acked-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ff605513f3116b78b8648a60ea97f1836ce1125
Author: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
Date:   Tue Sep 7 01:28:47 2021 +0100

    riscv: set default pm_power_off to NULL
    
    commit f2928e224d85e7cc139009ab17cefdfec2df5d11 upstream.
    
    Set pm_power_off to NULL like on all other architectures, check if it
    is set in machine_halt() and machine_power_off() and fallback to
    default_power_off if no other power driver got registered.
    
    This brings riscv architecture inline with all other architectures,
    and allows to reuse exiting power drivers unmodified.
    
    Kernels without legacy SBI v0.1 extensions (CONFIG_RISCV_SBI_V01 is
    not set), do not set pm_power_off to sbi_shutdown(). There is no
    support for SBI v0.3 system reset extension either. This prevents
    using gpio_poweroff on SiFive HiFive Unmatched.
    
    Tested on SiFive HiFive unmatched, with a dtb specifying gpio-poweroff
    node and kernel complied without CONFIG_RISCV_SBI_V01.
    
    BugLink: https://bugs.launchpad.net/bugs/1942806
    Signed-off-by: Dimitri John Ledkov <dimitri.ledkov@canonical.com>
    Reviewed-by: Anup Patel <anup@brainfault.org>
    Tested-by: Ron Economos <w6rz@comcast.net>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 230e369d49976824e7af70d2ac814f0f4584352b
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Aug 3 22:49:55 2022 +0000

    KVM: x86: Tag kvm_mmu_x86_module_init() with __init
    
    commit 982bae43f11c37b51d2f1961bb25ef7cac3746fa upstream.
    
    Mark kvm_mmu_x86_module_init() with __init, the entire reason it exists
    is to initialize variables when kvm.ko is loaded, i.e. it must never be
    called after module initialization.
    
    Fixes: 1d0e84806047 ("KVM: x86/mmu: Resolve nx_huge_pages when kvm.ko is loaded")
    Cc: stable@vger.kernel.org
    Reviewed-by: Kai Huang <kai.huang@intel.com>
    Tested-by: Michael Roth <michael.roth@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220803224957.1285926-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dd8ba6670f4e38eab2f2985019030cd88cc4174
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Jul 11 23:27:49 2022 +0000

    KVM: x86: Set error code to segment selector on LLDT/LTR non-canonical #GP
    
    commit 2626206963ace9e8bf92b6eea5ff78dd674c555c upstream.
    
    When injecting a #GP on LLDT/LTR due to a non-canonical LDT/TSS base, set
    the error code to the selector.  Intel SDM's says nothing about the #GP,
    but AMD's APM explicitly states that both LLDT and LTR set the error code
    to the selector, not zero.
    
    Note, a non-canonical memory operand on LLDT/LTR does generate a #GP(0),
    but the KVM code in question is specific to the base from the descriptor.
    
    Fixes: e37a75a13cda ("KVM: x86: Emulator ignores LDTR/TR extended base on LLDT/LTR")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20220711232750.1092012-3-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68ba319b88889b76e0afcb83ee3f9a07d2ae5f1b
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Jul 11 23:27:48 2022 +0000

    KVM: x86: Mark TSS busy during LTR emulation _after_ all fault checks
    
    commit ec6e4d863258d4bfb36d48d5e3ef68140234d688 upstream.
    
    Wait to mark the TSS as busy during LTR emulation until after all fault
    checks for the LTR have passed.  Specifically, don't mark the TSS busy if
    the new TSS base is non-canonical.
    
    Opportunistically drop the one-off !seg_desc.PRESENT check for TR as the
    only reason for the early check was to avoid marking a !PRESENT TSS as
    busy, i.e. the common !PRESENT is now done before setting the busy bit.
    
    Fixes: e37a75a13cda ("KVM: x86: Emulator ignores LDTR/TR extended base on LLDT/LTR")
    Reported-by: syzbot+760a73552f47a8cd0fd9@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: Hou Wenlong <houwenlong.hwl@antgroup.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20220711232750.1092012-2-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b670a585498e8225d2040d28af5f8fa8268faf31
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jun 7 21:35:54 2022 +0000

    KVM: nVMX: Let userspace set nVMX MSR to any _host_ supported value
    
    commit f8ae08f9789ad59d318ea75b570caa454aceda81 upstream.
    
    Restrict the nVMX MSRs based on KVM's config, not based on the guest's
    current config.  Using the guest's config to audit the new config
    prevents userspace from restoring the original config (KVM's config) if
    at any point in the past the guest's config was restricted in any way.
    
    Fixes: 62cc6b9dc61e ("KVM: nVMX: support restore of VMX capability MSRs")
    Cc: stable@vger.kernel.org
    Cc: David Matlack <dmatlack@google.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220607213604.3346000-6-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9c55562b3938917ccdc8ad85774ea49da018597
Author: Nico Boehr <nrb@linux.ibm.com>
Date:   Mon Jul 18 15:04:34 2022 +0200

    KVM: s390: pv: don't present the ecall interrupt twice
    
    commit c3f0e5fd2d33d80c5a5a8b5e5d2bab2841709cc8 upstream.
    
    When the SIGP interpretation facility is present and a VCPU sends an
    ecall to another VCPU in enabled wait, the sending VCPU receives a 56
    intercept (partial execution), so KVM can wake up the receiving CPU.
    Note that the SIGP interpretation facility will take care of the
    interrupt delivery and KVM's only job is to wake the receiving VCPU.
    
    For PV, the sending VCPU will receive a 108 intercept (pv notify) and
    should continue like in the non-PV case, i.e. wake the receiving VCPU.
    
    For PV and non-PV guests the interrupt delivery will occur through the
    SIGP interpretation facility on SIE entry when SIE finds the X bit in
    the status field set.
    
    However, in handle_pv_notification(), there was no special handling for
    SIGP, which leads to interrupt injection being requested by KVM for the
    next SIE entry. This results in the interrupt being delivered twice:
    once by the SIGP interpretation facility and once by KVM through the
    IICTL.
    
    Add the necessary special handling in handle_pv_notification(), similar
    to handle_partial_execution(), which simply wakes the receiving VCPU and
    leave interrupt delivery to the SIGP interpretation facility.
    
    In contrast to external calls, emergency calls are not interpreted but
    also cause a 108 intercept, which is why we still need to call
    handle_instruction() for SIGP orders other than ecall.
    
    Since kvm_s390_handle_sigp_pei() is now called for all SIGP orders which
    cause a 108 intercept - even if they are actually handled by
    handle_instruction() - move the tracepoint in kvm_s390_handle_sigp_pei()
    to avoid possibly confusing trace messages.
    
    Signed-off-by: Nico Boehr <nrb@linux.ibm.com>
    Cc: <stable@vger.kernel.org> # 5.7
    Fixes: da24a0cc58ed ("KVM: s390: protvirt: Instruction emulation")
    Reviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@linux.ibm.com>
    Link: https://lore.kernel.org/r/20220718130434.73302-1-nrb@linux.ibm.com
    Message-Id: <20220718130434.73302-1-nrb@linux.ibm.com>
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bb683490278005b4caf61e22b0828a04d282e86
Author: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>
Date:   Mon May 2 00:07:26 2022 +0200

    KVM: SVM: Don't BUG if userspace injects an interrupt with GIF=0
    
    commit f17c31c48e5cde9895a491d91c424eeeada3e134 upstream.
    
    Don't BUG/WARN on interrupt injection due to GIF being cleared,
    since it's trivial for userspace to force the situation via
    KVM_SET_VCPU_EVENTS (even if having at least a WARN there would be correct
    for KVM internally generated injections).
    
      kernel BUG at arch/x86/kvm/svm/svm.c:3386!
      invalid opcode: 0000 [#1] SMP
      CPU: 15 PID: 926 Comm: smm_test Not tainted 5.17.0-rc3+ #264
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
      RIP: 0010:svm_inject_irq+0xab/0xb0 [kvm_amd]
      Code: <0f> 0b 0f 1f 00 0f 1f 44 00 00 80 3d ac b3 01 00 00 55 48 89 f5 53
      RSP: 0018:ffffc90000b37d88 EFLAGS: 00010246
      RAX: 0000000000000000 RBX: ffff88810a234ac0 RCX: 0000000000000006
      RDX: 0000000000000000 RSI: ffffc90000b37df7 RDI: ffff88810a234ac0
      RBP: ffffc90000b37df7 R08: ffff88810a1fa410 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
      R13: ffff888109571000 R14: ffff88810a234ac0 R15: 0000000000000000
      FS:  0000000001821380(0000) GS:ffff88846fdc0000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f74fc550008 CR3: 000000010a6fe000 CR4: 0000000000350ea0
      Call Trace:
       <TASK>
       inject_pending_event+0x2f7/0x4c0 [kvm]
       kvm_arch_vcpu_ioctl_run+0x791/0x17a0 [kvm]
       kvm_vcpu_ioctl+0x26d/0x650 [kvm]
       __x64_sys_ioctl+0x82/0xb0
       do_syscall_64+0x3b/0xc0
       entry_SYSCALL_64_after_hwframe+0x44/0xae
       </TASK>
    
    Fixes: 219b65dcf6c0 ("KVM: SVM: Improve nested interrupt injection")
    Cc: stable@vger.kernel.org
    Co-developed-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>
    Message-Id: <35426af6e123cbe91ec7ce5132ce72521f02b1b5.1651440202.git.maciej.szmigiero@oracle.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 860e3343958a03ba8ad78750bdbe5dd1fe35ce02
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jun 14 21:58:28 2022 +0000

    KVM: nVMX: Snapshot pre-VM-Enter DEBUGCTL for !nested_run_pending case
    
    commit 764643a6be07445308e492a528197044c801b3ba upstream.
    
    If a nested run isn't pending, snapshot vmcs01.GUEST_IA32_DEBUGCTL
    irrespective of whether or not VM_ENTRY_LOAD_DEBUG_CONTROLS is set in
    vmcs12.  When restoring nested state, e.g. after migration, without a
    nested run pending, prepare_vmcs02() will propagate
    nested.vmcs01_debugctl to vmcs02, i.e. will load garbage/zeros into
    vmcs02.GUEST_IA32_DEBUGCTL.
    
    If userspace restores nested state before MSRs, then loading garbage is a
    non-issue as loading DEBUGCTL will also update vmcs02.  But if usersepace
    restores MSRs first, then KVM is responsible for propagating L2's value,
    which is actually thrown into vmcs01, into vmcs02.
    
    Restoring L2 MSRs into vmcs01, i.e. loading all MSRs before nested state
    is all kinds of bizarre and ideally would not be supported.  Sadly, some
    VMMs do exactly that and rely on KVM to make things work.
    
    Note, there's still a lurking SMM bug, as propagating vmcs01's DEBUGCTL
    to vmcs02 across RSM may corrupt L2's DEBUGCTL.  But KVM's entire VMX+SMM
    emulation is flawed as SMI+RSM should not toouch _any_ VMCS when use the
    "default treatment of SMIs", i.e. when not using an SMI Transfer Monitor.
    
    Link: https://lore.kernel.org/all/Yobt1XwOfb5M6Dfa@google.com
    Fixes: 8fcc4b5923af ("kvm: nVMX: Introduce KVM_CAP_NESTED_STATE")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220614215831.3762138-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab4805c2638cc1f30697e7e8405c4355a13999ff
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Jun 14 21:58:27 2022 +0000

    KVM: nVMX: Snapshot pre-VM-Enter BNDCFGS for !nested_run_pending case
    
    commit fa578398a0ba2c079fa1170da21fa5baae0cedb2 upstream.
    
    If a nested run isn't pending, snapshot vmcs01.GUEST_BNDCFGS irrespective
    of whether or not VM_ENTRY_LOAD_BNDCFGS is set in vmcs12.  When restoring
    nested state, e.g. after migration, without a nested run pending,
    prepare_vmcs02() will propagate nested.vmcs01_guest_bndcfgs to vmcs02,
    i.e. will load garbage/zeros into vmcs02.GUEST_BNDCFGS.
    
    If userspace restores nested state before MSRs, then loading garbage is a
    non-issue as loading BNDCFGS will also update vmcs02.  But if usersepace
    restores MSRs first, then KVM is responsible for propagating L2's value,
    which is actually thrown into vmcs01, into vmcs02.
    
    Restoring L2 MSRs into vmcs01, i.e. loading all MSRs before nested state
    is all kinds of bizarre and ideally would not be supported.  Sadly, some
    VMMs do exactly that and rely on KVM to make things work.
    
    Note, there's still a lurking SMM bug, as propagating vmcs01.GUEST_BNDFGS
    to vmcs02 across RSM may corrupt L2's BNDCFGS.  But KVM's entire VMX+SMM
    emulation is flawed as SMI+RSM should not toouch _any_ VMCS when use the
    "default treatment of SMIs", i.e. when not using an SMI Transfer Monitor.
    
    Link: https://lore.kernel.org/all/Yobt1XwOfb5M6Dfa@google.com
    Fixes: 62cf9bd8118c ("KVM: nVMX: Fix emulation of VM_ENTRY_LOAD_BNDCFGS")
    Cc: stable@vger.kernel.org
    Cc: Lei Wang <lei4.wang@intel.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20220614215831.3762138-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40593c5898882716bd0ce6612e6216769e68bfc8
Author: Ping Cheng <pinglinux@gmail.com>
Date:   Fri May 13 14:52:37 2022 -0700

    HID: wacom: Don't register pad_input for touch switch
    
    commit d6b675687a4ab4dba684716d97c8c6f81bf10905 upstream.
    
    Touch switch state is received through WACOM_PAD_FIELD. However, it
    is reported by touch_input. Don't register pad_input if no other pad
    events require the interface.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ping Cheng <ping.cheng@wacom.com>
    Reviewed-by: Jason Gerecke <jason.gerecke@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ba645def77b07c65d5587dd9793fe4b4956b317
Author: Ping Cheng <pinglinux@gmail.com>
Date:   Fri May 13 14:51:56 2022 -0700

    HID: wacom: Only report rotation for art pen
    
    commit 7ccced33a0ba39b0103ae1dfbf7f1dffdc0a1bc2 upstream.
    
    The generic routine, wacom_wac_pen_event, turns rotation value 90
    degree anti-clockwise before posting the events. This non-zero
    event trggers a non-zero ABS_Z event for non art pen tools. However,
    HID_DG_TWIST is only supported by art pen.
    
    [jkosina@suse.cz: fix build: add missing brace]
    Cc: stable@vger.kernel.org
    Signed-off-by: Ping Cheng <ping.cheng@wacom.com>
    Reviewed-by: Jason Gerecke <jason.gerecke@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57f2ee517dec126d091fe11f995ecb75ee39b09d
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Aug 9 14:32:13 2022 -0400

    add barriers to buffer_uptodate and set_buffer_uptodate
    
    commit d4252071b97d2027d246f6a82cbee4d52f618b47 upstream.
    
    Let's have a look at this piece of code in __bread_slow:
    
            get_bh(bh);
            bh->b_end_io = end_buffer_read_sync;
            submit_bh(REQ_OP_READ, 0, bh);
            wait_on_buffer(bh);
            if (buffer_uptodate(bh))
                    return bh;
    
    Neither wait_on_buffer nor buffer_uptodate contain any memory barrier.
    Consequently, if someone calls sb_bread and then reads the buffer data,
    the read of buffer data may be executed before wait_on_buffer(bh) on
    architectures with weak memory ordering and it may return invalid data.
    
    Fix this bug by adding a memory barrier to set_buffer_uptodate and an
    acquire barrier to buffer_uptodate (in a similar way as
    folio_test_uptodate and folio_mark_uptodate).
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dece5ad6e1e7d8c2bacfae606dc6f18a18c51e0
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Jul 13 21:16:45 2022 +0200

    wifi: mac80211_hwsim: use 32-bit skb cookie
    
    commit cc5250cdb43d444061412df7fae72d2b4acbdf97 upstream.
    
    We won't really have enough skbs to need a 64-bit cookie,
    and on 32-bit platforms storing the 64-bit cookie into the
    void *rate_driver_data doesn't work anyway. Switch back to
    using just a 32-bit cookie and uintptr_t for the type to
    avoid compiler warnings about all this.
    
    Fixes: 4ee186fa7e40 ("wifi: mac80211_hwsim: fix race condition in pending packet")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Cc: Jeongik Cha <jeongik@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d400222f49599423862010f0c7f6fee142be72d7
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jul 11 13:14:24 2022 +0200

    wifi: mac80211_hwsim: add back erroneously removed cast
    
    commit 58b6259d820d63c2adf1c7541b54cce5a2ae6073 upstream.
    
    The robots report that we're now casting to a differently
    sized integer, which is correct, and the previous patch
    had erroneously removed it.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 4ee186fa7e40 ("wifi: mac80211_hwsim: fix race condition in pending packet")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Cc: Jeongik Cha <jeongik@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb8fc4277b628ac81db806c130a500dd48a9e524
Author: Jeongik Cha <jeongik@google.com>
Date:   Mon Jul 4 17:43:54 2022 +0900

    wifi: mac80211_hwsim: fix race condition in pending packet
    
    commit 4ee186fa7e40ae06ebbfbad77e249e3746e14114 upstream.
    
    A pending packet uses a cookie as an unique key, but it can be duplicated
    because it didn't use atomic operators.
    
    And also, a pending packet can be null in hwsim_tx_info_frame_received_nl
    due to race condition with mac80211_hwsim_stop.
    
    For this,
     * Use an atomic type and operator for a cookie
     * Add a lock around the loop for pending packets
    
    Signed-off-by: Jeongik Cha <jeongik@google.com>
    Link: https://lore.kernel.org/r/20220704084354.3556326-1-jeongik@google.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a22b1f7daa612eb77251a04a5fa90680745176e
Author: Ivan Hasenkampf <ivan.hasenkampf@gmail.com>
Date:   Wed Aug 3 18:40:01 2022 +0200

    ALSA: hda/realtek: Add quirk for HP Spectre x360 15-eb0xxx
    
    commit 24df5428ef9d1ca1edd54eca7eb667110f2dfae3 upstream.
    
    Fixes speaker output on HP Spectre x360 15-eb0xxx
    
    [ re-sorted in SSID order by tiwai ]
    
    Signed-off-by: Ivan Hasenkampf <ivan.hasenkampf@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220803164001.290394-1-ivan.hasenkampf@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d909d9bdc882f486e35b0bc09e7ec843eb06a7b1
Author: Tim Crawford <tcrawford@system76.com>
Date:   Sat Jul 30 21:22:43 2022 -0600

    ALSA: hda/realtek: Add quirk for Clevo NV45PZ
    
    commit be561ffad708f0cee18aee4231f80ffafaf7a419 upstream.
    
    Fixes headset detection on Clevo NV45PZ.
    
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220731032243.4300-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 348620464a5c127399ac09b266f494f393661952
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Fri Jul 15 09:05:15 2022 +0800

    ALSA: bcd2000: Fix a UAF bug on the error path of probing
    
    commit ffb2759df7efbc00187bfd9d1072434a13a54139 upstream.
    
    When the driver fails in snd_card_register() at probe time, it will free
    the 'bcd2k->midi_out_urb' before killing it, which may cause a UAF bug.
    
    The following log can reveal it:
    
    [   50.727020] BUG: KASAN: use-after-free in bcd2000_input_complete+0x1f1/0x2e0 [snd_bcd2000]
    [   50.727623] Read of size 8 at addr ffff88810fab0e88 by task swapper/4/0
    [   50.729530] Call Trace:
    [   50.732899]  bcd2000_input_complete+0x1f1/0x2e0 [snd_bcd2000]
    
    Fix this by adding usb_kill_urb() before usb_free_urb().
    
    Fixes: b47a22290d58 ("ALSA: MIDI driver for Behringer BCD2000 USB device")
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220715010515.2087925-1-zheyuma97@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 101e0c052d4f16919074d8439fdbc3b09389eb37
Author: Nilesh Javali <njavali@marvell.com>
Date:   Tue Jul 12 22:20:36 2022 -0700

    scsi: Revert "scsi: qla2xxx: Fix disk failure to rediscover"
    
    commit 5bc7b01c513a4a9b4cfe306e8d1720cfcfd3b8a3 upstream.
    
    This fixes the regression of NVMe discovery failure during driver load
    time.
    
    This reverts commit 6a45c8e137d4e2c72eecf1ac7cf64f2fdfcead99.
    
    Link: https://lore.kernel.org/r/20220713052045.10683-2-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14eb40fd79c4c5ad4cc516cfdd3c5d2b5b20a8e2
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed May 18 16:37:56 2022 -0400

    Revert "pNFS: nfs3_set_ds_client should set NFS_CS_NOPING"
    
    commit 9597152d98840c2517230740952df97cfcc07e2f upstream.
    
    This reverts commit c6eb58435b98bd843d3179664a0195ff25adb2c3.
    If a transport is down, then we want to fail over to other transports if
    they are listed in the GETDEVICEINFO reply.
    
    Fixes: c6eb58435b98 ("pNFS: nfs3_set_ds_client should set NFS_CS_NOPING")
    Cc: stable@vger.kernel.org # 5.11.x
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ad6a94c68a18cead34ea5397b925b85ebc408f5
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Wed Aug 10 15:24:41 2022 -0700

    x86: link vdso and boot with -z noexecstack --no-warn-rwx-segments
    
    commit ffcf9c5700e49c0aee42dcba9a12ba21338e8136 upstream.
    
    Users of GNU ld (BFD) from binutils 2.39+ will observe multiple
    instances of a new warning when linking kernels in the form:
    
      ld: warning: arch/x86/boot/pmjump.o: missing .note.GNU-stack section implies executable stack
      ld: NOTE: This behaviour is deprecated and will be removed in a future version of the linker
      ld: warning: arch/x86/boot/compressed/vmlinux has a LOAD segment with RWX permissions
    
    Generally, we would like to avoid the stack being executable.  Because
    there could be a need for the stack to be executable, assembler sources
    have to opt-in to this security feature via explicit creation of the
    .note.GNU-stack feature (which compilers create by default) or command
    line flag --noexecstack.  Or we can simply tell the linker the
    production of such sections is irrelevant and to link the stack as
    --noexecstack.
    
    LLVM's LLD linker defaults to -z noexecstack, so this flag isn't
    strictly necessary when linking with LLD, only BFD, but it doesn't hurt
    to be explicit here for all linkers IMO.  --no-warn-rwx-segments is
    currently BFD specific and only available in the current latest release,
    so it's wrapped in an ld-option check.
    
    While the kernel makes extensive usage of ELF sections, it doesn't use
    permissions from ELF segments.
    
    Link: https://lore.kernel.org/linux-block/3af4127a-f453-4cf7-f133-a181cce06f73@kernel.dk/
    Link: https://sourceware.org/git/?p=binutils-gdb.git;a=commit;h=ba951afb99912da01a6e8434126b8fac7aa75107
    Link: https://github.com/llvm/llvm-project/issues/57009
    Reported-and-tested-by: Jens Axboe <axboe@kernel.dk>
    Suggested-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f4f2c9b98e40c699329680f9ca4f7c3a7f949ea
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Wed Aug 10 15:24:40 2022 -0700

    Makefile: link with -z noexecstack --no-warn-rwx-segments
    
    commit 0d362be5b14200b77ecc2127936a5ff82fbffe41 upstream.
    
    Users of GNU ld (BFD) from binutils 2.39+ will observe multiple
    instances of a new warning when linking kernels in the form:
    
      ld: warning: vmlinux: missing .note.GNU-stack section implies executable stack
      ld: NOTE: This behaviour is deprecated and will be removed in a future version of the linker
      ld: warning: vmlinux has a LOAD segment with RWX permissions
    
    Generally, we would like to avoid the stack being executable.  Because
    there could be a need for the stack to be executable, assembler sources
    have to opt-in to this security feature via explicit creation of the
    .note.GNU-stack feature (which compilers create by default) or command
    line flag --noexecstack.  Or we can simply tell the linker the
    production of such sections is irrelevant and to link the stack as
    --noexecstack.
    
    LLVM's LLD linker defaults to -z noexecstack, so this flag isn't
    strictly necessary when linking with LLD, only BFD, but it doesn't hurt
    to be explicit here for all linkers IMO.  --no-warn-rwx-segments is
    currently BFD specific and only available in the current latest release,
    so it's wrapped in an ld-option check.
    
    While the kernel makes extensive usage of ELF sections, it doesn't use
    permissions from ELF segments.
    
    Link: https://lore.kernel.org/linux-block/3af4127a-f453-4cf7-f133-a181cce06f73@kernel.dk/
    Link: https://sourceware.org/git/?p=binutils-gdb.git;a=commit;h=ba951afb99912da01a6e8434126b8fac7aa75107
    Link: https://github.com/llvm/llvm-project/issues/57009
    Reported-and-tested-by: Jens Axboe <axboe@kernel.dk>
    Suggested-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
