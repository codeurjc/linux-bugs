commit bf7123dd26a00e222221696efb95b14c2875607c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Mar 3 11:45:54 2023 +0100

    Linux 5.15.97
    
    Link: https://lore.kernel.org/r/20230301180652.658125575@linuxfoundation.org
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Ron Economos <re@w6rz.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf7f9cd50013eb187867cd0c599aa184e6f59d54
Author: Bing-Jhong Billy Jheng <billy@starlabs.sg>
Date:   Thu Mar 2 21:00:06 2023 +0800

    io_uring: add missing lock in io_get_file_fixed
    
    io_get_file_fixed will access io_uring's context. Lock it if it is
    invoked unlocked (eg via io-wq) to avoid a race condition with fixed
    files getting unregistered.
    
    No single upstream patch exists for this issue, it was fixed as part
    of the file assignment changes that went into the 5.18 cycle.
    
    Signed-off-by: Jheng, Bing-Jhong Billy <billy@starlabs.sg>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77358093331e9769855140bf94a3f00ecdcf4bb1
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue Jan 31 15:49:04 2023 -0500

    USB: core: Don't hold device lock while reading the "descriptors" sysfs file
    
    commit 45bf39f8df7f05efb83b302c65ae3b9bc92b7065 upstream.
    
    Ever since commit 83e83ecb79a8 ("usb: core: get config and string
    descriptors for unauthorized devices") was merged in 2013, there has
    been no mechanism for reallocating the rawdescriptors buffers in
    struct usb_device after the initial enumeration.  Before that commit,
    the buffers would be deallocated when a device was deauthorized and
    reallocated when it was authorized and enumerated.
    
    This means that the locking in the read_descriptors() routine is not
    needed, since the buffers it reads will never be reallocated while the
    routine is running.  This locking can interfere with user programs
    trying to read a hub's descriptors via sysfs while new child devices
    of the hub are being initialized, since the hub is locked during this
    procedure.
    
    Since the locking in read_descriptors() hasn't been needed for over
    nine years, we can remove it.
    
    Reported-and-tested-by: Troels Liebe Bentsen <troels@connectedcars.dk>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/Y9l+wDTRbuZABzsE@rowland.harvard.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b24c980dc07be4550a9d1450ed7057f882530e5
Author: Prashanth K <quic_prashk@quicinc.com>
Date:   Mon Feb 13 23:00:38 2023 +0530

    usb: gadget: u_serial: Add null pointer check in gserial_resume
    
    commit 5ec63fdbca604568890c577753c6f66c5b3ef0b5 upstream.
    
    Consider a case where gserial_disconnect has already cleared
    gser->ioport. And if a wakeup interrupt triggers afterwards,
    gserial_resume gets called, which will lead to accessing of
    gser->ioport and thus causing null pointer dereference.Add
    a null pointer check to prevent this.
    
    Added a static spinlock to prevent gser->ioport from becoming
    null after the newly added check.
    
    Fixes: aba3a8d01d62 ("usb: gadget: u_serial: add suspend resume callbacks")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Prashanth K <quic_prashk@quicinc.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/1676309438-14922-1-git-send-email-quic_prashk@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d72795ccde20cb17fdb70cc67dde73d8274d981
Author: Florian Zumbiehl <florz@florz.de>
Date:   Mon Feb 6 02:04:28 2023 +0100

    USB: serial: option: add support for VW/Skoda "Carstick LTE"
    
    commit 617c331d91077f896111044628c096802551dc66 upstream.
    
    Add support for VW/Skoda "Carstick LTE"
    
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=1c9e ProdID=7605 Rev=02.00
    S:  Manufacturer=USB Modem
    S:  Product=USB Modem
    C:  #Ifs= 4 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    The stick has AT command interfaces on interfaces 1, 2, and 3, and does PPP
    on interface 3.
    
    Signed-off-by: Florian Zumbiehl <florz@florz.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02190d23b731b55e503ac2657c3eae12593f64e8
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Wed Feb 15 15:27:11 2023 +0200

    usb: dwc3: pci: add support for the Intel Meteor Lake-M
    
    commit 8e5248c3a8778f3e394e9a19195bc7a48f567ca2 upstream.
    
    This patch adds the necessary PCI IDs for Intel Meteor Lake-M
    devices.
    
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230215132711.35668-1-heikki.krogerus@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc09a7d5a6a134e2707001c2497637a635817332
Author: Carlos Llamas <cmllamas@google.com>
Date:   Wed Feb 15 18:38:50 2023 +0000

    scripts/tags.sh: fix incompatibility with PCRE2
    
    commit 6ec363fc6142226b9ab5a6528f65333d729d2b6b upstream.
    
    Starting with release 10.38 PCRE2 drops default support for using \K in
    lookaround patterns as described in [1]. Unfortunately, scripts/tags.sh
    relies on such functionality to collect all_compiled_soures() leading to
    the following error:
    
      $ make COMPILED_SOURCE=1 tags
        GEN     tags
      grep: \K is not allowed in lookarounds (but see PCRE2_EXTRA_ALLOW_LOOKAROUND_BSK)
    
    The usage of \K for this pattern was introduced in commit 4f491bb6ea2a
    ("scripts/tags.sh: collect compiled source precisely") which speeds up
    the generation of tags significantly.
    
    In order to fix this issue without compromising the performance we can
    switch over to an equivalent sed expression. The same matching pattern
    is preserved here except \K is replaced with a backreference \1.
    
    [1] https://www.pcre.org/current/doc/html/pcre2syntax.html#SEC11
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Cc: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Jialu Xu <xujialu@vimux.org>
    Cc: Vipin Sharma <vipinsh@google.com>
    Cc: stable@vger.kernel.org
    Fixes: 4f491bb6ea2a ("scripts/tags.sh: collect compiled source precisely")
    Signed-off-by: Carlos Llamas <cmllamas@google.com>
    Link: https://lore.kernel.org/r/20230215183850.3353198-1-cmllamas@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1aee4ab2c1075f858a338dfda175a3f84eac2987
Author: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
Date:   Tue May 17 02:46:46 2022 +0300

    scripts/tags.sh: Invoke 'realpath' via 'xargs'
    
    commit 7394d2ebb651a9f62e08c6ab864aac015d27c64d upstream.
    
    When COMPILED_SOURCE is set, running
    
      make ARCH=x86_64 COMPILED_SOURCE=1 cscope tags
    
    could throw the following errors:
    
    scripts/tags.sh: line 98: /usr/bin/realpath: Argument list too long
    cscope: no source files found
    scripts/tags.sh: line 98: /usr/bin/realpath: Argument list too long
    ctags: No files specified. Try "ctags --help".
    
    This is most likely to happen when the kernel is configured to build a
    large number of modules, which has the consequence of passing too many
    arguments when calling 'realpath' in 'all_compiled_sources()'.
    
    Let's improve this by invoking 'realpath' through 'xargs', which takes
    care of properly limiting the argument list.
    
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
    Link: https://lore.kernel.org/r/20220516234646.531208-1-cristian.ciocaltea@collabora.com
    Cc: Carlos Llamas <cmllamas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06740b433d9dc76f4cdaf711064961d4810b365a
Author: Thomas Weißschuh <linux@weissschuh.net>
Date:   Mon Feb 20 06:46:12 2023 +0000

    vc_screen: don't clobber return value in vcs_read
    
    commit ae3419fbac845b4d3f3a9fae4cc80c68d82cdf6e upstream.
    
    Commit 226fae124b2d ("vc_screen: move load of struct vc_data pointer in
    vcs_read() to avoid UAF") moved the call to vcs_vc() into the loop.
    
    While doing this it also moved the unconditional assignment of
    
            ret = -ENXIO;
    
    This unconditional assignment was valid outside the loop but within it
    it clobbers the actual value of ret.
    
    To avoid this only assign "ret = -ENXIO" when actually needed.
    
    [ Also, the 'goto unlock_out" needs to be just a "break", so that it
      does the right thing when it exits on later iterations when partial
      success has happened - Linus ]
    
    Reported-by: Storm Dragon <stormdragon2976@gmail.com>
    Link: https://lore.kernel.org/lkml/Y%2FKS6vdql2pIsCiI@hotmail.com/
    Fixes: 226fae124b2d ("vc_screen: move load of struct vc_data pointer in vcs_read() to avoid UAF")
    Signed-off-by: Thomas Weißschuh <linux@weissschuh.net>
    Link: https://lore.kernel.org/lkml/64981d94-d00c-4b31-9063-43ad0a384bde@t-8ch.de/
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7f460696340fe5caba5f21ddb262a44a2388af2
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Thu Feb 9 16:22:02 2023 -0800

    net: Remove WARN_ON_ONCE(sk->sk_forward_alloc) from sk_stream_kill_queues().
    
    commit 62ec33b44e0f7168ff2886520fec6fb62d03b5a3 upstream.
    
    Christoph Paasch reported that commit b5fc29233d28 ("inet6: Remove
    inet6_destroy_sock() in sk->sk_prot->destroy().") started triggering
    WARN_ON_ONCE(sk->sk_forward_alloc) in sk_stream_kill_queues().  [0 - 2]
    Also, we can reproduce it by a program in [3].
    
    In the commit, we delay freeing ipv6_pinfo.pktoptions from sk->destroy()
    to sk->sk_destruct(), so sk->sk_forward_alloc is no longer zero in
    inet_csk_destroy_sock().
    
    The same check has been in inet_sock_destruct() from at least v2.6,
    we can just remove the WARN_ON_ONCE().  However, among the users of
    sk_stream_kill_queues(), only CAIF is not calling inet_sock_destruct().
    Thus, we add the same WARN_ON_ONCE() to caif_sock_destructor().
    
    [0]: https://lore.kernel.org/netdev/39725AB4-88F1-41B3-B07F-949C5CAEFF4F@icloud.com/
    [1]: https://github.com/multipath-tcp/mptcp_net-next/issues/341
    [2]:
    WARNING: CPU: 0 PID: 3232 at net/core/stream.c:212 sk_stream_kill_queues+0x2f9/0x3e0
    Modules linked in:
    CPU: 0 PID: 3232 Comm: syz-executor.0 Not tainted 6.2.0-rc5ab24eb4698afbe147b424149c529e2a43ec24eb5 #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
    RIP: 0010:sk_stream_kill_queues+0x2f9/0x3e0
    Code: 03 0f b6 04 02 84 c0 74 08 3c 03 0f 8e ec 00 00 00 8b ab 08 01 00 00 e9 60 ff ff ff e8 d0 5f b6 fe 0f 0b eb 97 e8 c7 5f b6 fe <0f> 0b eb a0 e8 be 5f b6 fe 0f 0b e9 6a fe ff ff e8 02 07 e3 fe e9
    RSP: 0018:ffff88810570fc68 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: ffff888101f38f40 RSI: ffffffff8285e529 RDI: 0000000000000005
    RBP: 0000000000000ce0 R08: 0000000000000005 R09: 0000000000000000
    R10: 0000000000000ce0 R11: 0000000000000001 R12: ffff8881009e9488
    R13: ffffffff84af2cc0 R14: 0000000000000000 R15: ffff8881009e9458
    FS:  00007f7fdfbd5800(0000) GS:ffff88811b600000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b32923000 CR3: 00000001062fc006 CR4: 0000000000170ef0
    Call Trace:
     <TASK>
     inet_csk_destroy_sock+0x1a1/0x320
     __tcp_close+0xab6/0xe90
     tcp_close+0x30/0xc0
     inet_release+0xe9/0x1f0
     inet6_release+0x4c/0x70
     __sock_release+0xd2/0x280
     sock_close+0x15/0x20
     __fput+0x252/0xa20
     task_work_run+0x169/0x250
     exit_to_user_mode_prepare+0x113/0x120
     syscall_exit_to_user_mode+0x1d/0x40
     do_syscall_64+0x48/0x90
     entry_SYSCALL_64_after_hwframe+0x72/0xdc
    RIP: 0033:0x7f7fdf7ae28d
    Code: c1 20 00 00 75 10 b8 03 00 00 00 0f 05 48 3d 01 f0 ff ff 73 31 c3 48 83 ec 08 e8 ee fb ff ff 48 89 04 24 b8 03 00 00 00 0f 05 <48> 8b 3c 24 48 89 c2 e8 37 fc ff ff 48 89 d0 48 83 c4 08 48 3d 01
    RSP: 002b:00000000007dfbb0 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
    RAX: 0000000000000000 RBX: 0000000000000004 RCX: 00007f7fdf7ae28d
    RDX: 0000000000000000 RSI: ffffffffffffffff RDI: 0000000000000003
    RBP: 0000000000000000 R08: 000000007f338e0f R09: 0000000000000e0f
    R10: 000000007f338e13 R11: 0000000000000293 R12: 00007f7fdefff000
    R13: 00007f7fdefffcd8 R14: 00007f7fdefffce0 R15: 00007f7fdefffcd8
     </TASK>
    
    [3]: https://lore.kernel.org/netdev/20230208004245.83497-1-kuniyu@amazon.com/
    
    Fixes: b5fc29233d28 ("inet6: Remove inet6_destroy_sock() in sk->sk_prot->destroy().")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reported-by: Christoph Paasch <christophpaasch@icloud.com>
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16d319ec18b0c994c12dbdb991f35458788c4285
Author: Martin KaFai Lau <martin.lau@kernel.org>
Date:   Thu Feb 16 16:41:48 2023 -0800

    bpf: bpf_fib_lookup should not return neigh in NUD_FAILED state
    
    commit 1fe4850b34ab512ff911e2c035c75fb6438f7307 upstream.
    
    The bpf_fib_lookup() helper does not only look up the fib (ie. route)
    but it also looks up the neigh. Before returning the neigh, the helper
    does not check for NUD_VALID. When a neigh state (neigh->nud_state)
    is in NUD_FAILED, its dmac (neigh->ha) could be all zeros. The helper
    still returns SUCCESS instead of NO_NEIGH in this case. Because of the
    SUCCESS return value, the bpf prog directly uses the returned dmac
    and ends up filling all zero in the eth header.
    
    This patch checks for NUD_VALID and returns NO_NEIGH if the neigh is
    not valid.
    
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20230217004150.2980689-3-martin.lau@linux.dev
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dd1de27d7717b9e508fe01523a3657fa82bb3ab
Author: Sergio Paracuellos <sergio.paracuellos@gmail.com>
Date:   Tue Oct 19 12:29:14 2021 +0200

    staging: mt7621-dts: change palmbus address to lower case
    
    commit efbc7bd90f60c71b8e786ee767952bc22fc3666d upstream.
    
    Hexadecimal addresses in device tree must be defined using lower case.
    Change missing one in 'gbpc1.dts' file.
    
    Signed-off-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Link: https://lore.kernel.org/r/20211019102915.15409-1-sergio.paracuellos@gmail.com
    Cc: Arınç ÜNAL <arinc.unal@arinc9.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07f0c6f9c35731926a04f0f0753192dbc11cec57
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Wed Feb 8 09:23:40 2023 -0800

    x86/cpu: Add Lunar Lake M
    
    [ Upstream commit f545e8831e70065e127f903fc7aca09aa50422c7 ]
    
    Intel confirmed the existence of this CPU in Q4'2022
    earnings presentation.
    
    Add the CPU model number.
    
    [ dhansen: Merging these as soon as possible makes it easier
               on all the folks developing model-specific features. ]
    
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lore.kernel.org/all/20230208172340.158548-1-tony.luck%40intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1b09162f2688208011eb76ec19fa522ba4fd009
Author: Xin Zhao <xnzhao@google.com>
Date:   Mon Jan 30 21:29:47 2023 +0000

    HID: core: Fix deadloop in hid_apply_multiplier.
    
    [ Upstream commit ea427a222d8bdf2bc1a8a6da3ebe247f7dced70c ]
    
    The initial value of hid->collection[].parent_idx if 0. When
    Report descriptor doesn't contain "HID Collection", the value
    remains as 0.
    
    In the meanwhile, when the Report descriptor fullfill
    all following conditions, it will trigger hid_apply_multiplier
    function call.
    1. Usage page is Generic Desktop Ctrls (0x01)
    2. Usage is RESOLUTION_MULTIPLIER (0x48)
    3. Contain any FEATURE items
    
    The while loop in hid_apply_multiplier will search the top-most
    collection by searching parent_idx == -1. Because all parent_idx
    is 0. The loop will run forever.
    
    There is a Report Descriptor triggerring the deadloop
    0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
    0x09, 0x48,        // Usage (0x48)
    0x95, 0x01,        // Report Count (1)
    0x75, 0x08,        // Report Size (8)
    0xB1, 0x01,        // Feature
    
    Signed-off-by: Xin Zhao <xnzhao@google.com>
    Link: https://lore.kernel.org/r/20230130212947.1315941-1-xnzhao@google.com
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1ee470030752c806e1cc1bfee5158fd799401af
Author: Julian Anastasov <ja@ssi.bg>
Date:   Thu Feb 2 17:25:51 2023 +0200

    neigh: make sure used and confirmed times are valid
    
    [ Upstream commit c1d2ecdf5e38e3489ce8328238b558b3b2866fe1 ]
    
    Entries can linger in cache without timer for days, thanks to
    the gc_thresh1 limit. As result, without traffic, the confirmed
    time can be outdated and to appear to be in the future. Later,
    on traffic, NUD_STALE entries can switch to NUD_DELAY and start
    the timer which can see the invalid confirmed time and wrongly
    switch to NUD_REACHABLE state instead of NUD_PROBE. As result,
    timer is set many days in the future. This is more visible on
    32-bit platforms, with higher HZ value.
    
    Why this is a problem? While we expect unused entries to expire,
    such entries stay in REACHABLE state for too long, locked in
    cache. They are not expired normally, only when cache is full.
    
    Problem and the wrong state change reported by Zhang Changzhong:
    
    172.16.1.18 dev bond0 lladdr 0a:0e:0f:01:12:01 ref 1 used 350521/15994171/350520 probes 4 REACHABLE
    
    350520 seconds have elapsed since this entry was last updated, but it is
    still in the REACHABLE state (base_reachable_time_ms is 30000),
    preventing lladdr from being updated through probe.
    
    Fix it by ensuring timer is started with valid used/confirmed
    times. Considering the valid time range is LONG_MAX jiffies,
    we try not to go too much in the past while we are in
    DELAY/PROBE state. There are also places that need
    used/updated times to be validated while timer is not running.
    
    Reported-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Tested-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2590058fb0589f20820e3246eed0bcb0edff17c3
Author: Dean Luick <dean.luick@cornelisnetworks.com>
Date:   Mon Jan 9 14:04:08 2023 -0500

    IB/hfi1: Assign npages earlier
    
    [ Upstream commit f9c47b2caa7ffc903ec950b454b59c209afe3182 ]
    
    Improve code clarity and enable earlier use of
    tidbuf->npages by moving its assignment to
    structure creation time.
    
    Signed-off-by: Dean Luick <dean.luick@cornelisnetworks.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Link: https://lore.kernel.org/r/167329104884.1472990.4639750192433251493.stgit@awfm-02.cornelisnetworks.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4534ea429ed84bf62fea07725bd4a50ba6e8bcdc
Author: Jack Yu <jack.yu@realtek.com>
Date:   Mon Jan 30 02:43:25 2023 +0000

    ASoC: rt715-sdca: fix clock stop prepare timeout issue
    
    [ Upstream commit 2036890282d56bcbf7f915ba9e04bf77967ab231 ]
    
    Modify clock_stop_timeout value for rt715-sdca according to
    the requirement of internal clock trimming.
    
    Signed-off-by: Jack Yu <jack.yu@realtek.com>
    Link: https://lore.kernel.org/r/574b6586267a458cac78c5ac4d5b10bd@realtek.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e430f058d90cdf12ce67140752155f6b04b9fd6d
Author: David Sterba <dsterba@suse.com>
Date:   Tue Jan 24 20:32:10 2023 +0100

    btrfs: send: limit number of clones and allocated memory size
    
    [ Upstream commit 33e17b3f5ab74af12aca58c515bc8424ff69a343 ]
    
    The arg->clone_sources_count is u64 and can trigger a warning when a
    huge value is passed from user space and a huge array is allocated.
    Limit the allocated memory to 8MiB (can be increased if needed), which
    in turn limits the number of clone sources to 8M / sizeof(struct
    clone_root) = 8M / 40 = 209715.  Real world number of clones is from
    tens to hundreds, so this is future proof.
    
    Reported-by: syzbot+4376a9a073770c173269@syzkaller.appspotmail.com
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d454a7212e17b8cad50030d1679ea2b44b9a6caa
Author: Vishal Verma <vishal.l.verma@intel.com>
Date:   Wed Jan 25 11:34:18 2023 -0700

    ACPI: NFIT: fix a potential deadlock during NFIT teardown
    
    [ Upstream commit fb6df4366f86dd252bfa3049edffa52d17e7b895 ]
    
    Lockdep reports that acpi_nfit_shutdown() may deadlock against an
    opportune acpi_nfit_scrub(). acpi_nfit_scrub () is run from inside a
    'work' and therefore has already acquired workqueue-internal locks. It
    also acquiires acpi_desc->init_mutex. acpi_nfit_shutdown() first
    acquires init_mutex, and was subsequently attempting to cancel any
    pending workqueue items. This reversed locking order causes a potential
    deadlock:
    
        ======================================================
        WARNING: possible circular locking dependency detected
        6.2.0-rc3 #116 Tainted: G           O     N
        ------------------------------------------------------
        libndctl/1958 is trying to acquire lock:
        ffff888129b461c0 ((work_completion)(&(&acpi_desc->dwork)->work)){+.+.}-{0:0}, at: __flush_work+0x43/0x450
    
        but task is already holding lock:
        ffff888129b460e8 (&acpi_desc->init_mutex){+.+.}-{3:3}, at: acpi_nfit_shutdown+0x87/0xd0 [nfit]
    
        which lock already depends on the new lock.
    
        ...
    
        Possible unsafe locking scenario:
    
              CPU0                    CPU1
              ----                    ----
         lock(&acpi_desc->init_mutex);
                                      lock((work_completion)(&(&acpi_desc->dwork)->work));
                                      lock(&acpi_desc->init_mutex);
         lock((work_completion)(&(&acpi_desc->dwork)->work));
    
        *** DEADLOCK ***
    
    Since the workqueue manipulation is protected by its own internal locking,
    the cancellation of pending work doesn't need to be done under
    acpi_desc->init_mutex. Move cancel_delayed_work_sync() outside the
    init_mutex to fix the deadlock. Any work that starts after
    acpi_nfit_shutdown() drops the lock will see ARS_CANCEL, and the
    cancel_delayed_work_sync() will safely flush it out.
    
    Reported-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
    Link: https://lore.kernel.org/r/20230112-acpi_nfit_lockdep-v1-1-660be4dd10be@intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 435e8fabd19ac1edc8cc61e5632ff51a1a5742ae
Author: Takahiro Fujii <fujii@xaxxi.net>
Date:   Fri Jan 20 03:30:02 2023 +0900

    HID: elecom: add support for TrackBall 056E:011C
    
    [ Upstream commit 29f316a1d7e0a570be9a47fa283ece53a67cebb7 ]
    
    Make function buttons on ELECOM M-HT1DRBK trackball mouse work. This model
    has two devices with different device IDs (010D and 011C). Both of
    them misreports the number of buttons as 5 in the report descriptor, even
    though they have 8 buttons. hid-elecom overwrites the report to fix them,
    but supports only on 010D and does not work on 011C. This patch fixes
    011C in the similar way but with specialized position parameters.
    In fact, it is sufficient to rewrite only 17th byte (05 -> 08). However I
    followed the existing way.
    
    Signed-off-by: Takahiro Fujii <fujii@xaxxi.net>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bd2f17543933aec3aff205fd5514fa08990e35d
Author: Johan Jonker <jbx6244@gmail.com>
Date:   Wed Dec 28 21:17:32 2022 +0100

    ARM: dts: rockchip: add power-domains property to dp node on rk3288
    
    [ Upstream commit 80422339a75088322b4d3884bd12fa0fe5d11050 ]
    
    The clocks in the Rockchip rk3288 DisplayPort node are
    included in the power-domain@RK3288_PD_VIO logic, but the
    power-domains property in the dp node is missing, so fix it.
    
    Signed-off-by: Johan Jonker <jbx6244@gmail.com>
    Link: https://lore.kernel.org/r/dab85bfb-9f55-86a1-5cd5-7388c43e0ec5@gmail.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 839a9c0047a1cc8595c59cdbbd0b5e892b709466
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Fri Nov 25 15:41:34 2022 +0100

    arm64: dts: rockchip: drop unused LED mode property from rk3328-roc-cc
    
    [ Upstream commit 1692bffec674551163a7a4be32f59fdde04ecd27 ]
    
    GPIO LEDs do not have a 'mode' property:
    
      rockchip/rk3328-roc-pc.dtb: leds: led-0: Unevaluated properties are not allowed ('mode' was unexpected)
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20221125144135.477144-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 503e3d93cf351254201812c24d18d937fa6900f7
Author: Benedict Wong <benedictwong@google.com>
Date:   Thu Jan 5 21:28:12 2023 +0000

    Fix XFRM-I support for nested ESP tunnels
    
    [ Upstream commit b0355dbbf13c0052931dd14c38c789efed64d3de ]
    
    This change adds support for nested IPsec tunnels by ensuring that
    XFRM-I verifies existing policies before decapsulating a subsequent
    policies. Addtionally, this clears the secpath entries after policies
    are verified, ensuring that previous tunnels with no-longer-valid
    do not pollute subsequent policy checks.
    
    This is necessary especially for nested tunnels, as the IP addresses,
    protocol and ports may all change, thus not matching the previous
    policies. In order to ensure that packets match the relevant inbound
    templates, the xfrm_policy_check should be done before handing off to
    the inner XFRM protocol to decrypt and decapsulate.
    
    Notably, raw ESP/AH packets did not perform policy checks inherently,
    whereas all other encapsulated packets (UDP, TCP encapsulated) do policy
    checks after calling xfrm_input handling in the respective encapsulation
    layer.
    
    Test: Verified with additional Android Kernel Unit tests
    Signed-off-by: Benedict Wong <benedictwong@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 765b3a0e0a8119b04f76541b8b36291b929c1e80
Author: Neel Patel <neel@pensando.io>
Date:   Wed Oct 26 07:37:44 2022 -0700

    ionic: refactor use of ionic_rx_fill()
    
    [ Upstream commit e55f0f5befc26e2ba6bb8c1f945ea8e37ee0e334 ]
    
    The same pre-work code is used before each call to
    ionic_rx_fill(), so bring it in and make it a part of
    the routine.
    
    Signed-off-by: Neel Patel <neel@pensando.io>
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
