commit d86dfc4d95cd218246b10ca7adf22c8626547599
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 5 11:25:02 2023 +0200

    Linux 5.15.106
    
    Link: https://lore.kernel.org/r/20230403140356.079638751@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Chris Paterson (CIP) <chris.paterson2@renesas.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06a948b8347c1bfda77c9a7f8da0bec82a3f7c16
Author: Jan Beulich <jbeulich@suse.com>
Date:   Tue Mar 21 09:03:26 2023 +0100

    x86/PVH: avoid 32-bit build warning when obtaining VGA console info
    
    commit aadbd07ff8a75ed342388846da78dfaddb8b106a upstream.
    
    In the commit referenced below I failed to pay attention to this code
    also being buildable as 32-bit. Adjust the type of "ret" - there's no
    real need for it to be wider than 32 bits.
    
    Fixes: 934ef33ee75c ("x86/PVH: obtain VGA console info in Dom0")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Link: https://lore.kernel.org/r/2d2193ff-670b-0a27-e12d-2c5c4c121c79@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>

commit 3abdf6d71fdbb1396c38c7ac1a901c0da92d189a
Author: Matthieu Baerts <matthieu.baerts@tessares.net>
Date:   Wed Mar 15 21:25:17 2023 +0100

    hsr: ratelimit only when errors are printed
    
    commit 1b0120e4db0bf2838d1ce741195ce4b7cc100b91 upstream.
    
    Recently, when automatically merging -net and net-next in MPTCP devel
    tree, our CI reported [1] a conflict in hsr, the same as the one
    reported by Stephen in netdev [2].
    
    When looking at the conflict, I noticed it is in fact the v1 [3] that
    has been applied in -net and the v2 [4] in net-next. Maybe the v1 was
    applied by accident.
    
    As mentioned by Jakub Kicinski [5], the new condition makes more sense
    before the net_ratelimit(), not to update net_ratelimit's state which is
    unnecessary if we're not going to print either way.
    
    Here, this modification applies the v2 but in -net.
    
    Link: https://github.com/multipath-tcp/mptcp_net-next/actions/runs/4423171069 [1]
    Link: https://lore.kernel.org/netdev/20230315100914.53fc1760@canb.auug.org.au/ [2]
    Link: https://lore.kernel.org/netdev/20230307133229.127442-1-koverskeid@gmail.com/ [3]
    Link: https://lore.kernel.org/netdev/20230309092302.179586-1-koverskeid@gmail.com/ [4]
    Link: https://lore.kernel.org/netdev/20230308232001.2fb62013@kernel.org/ [5]
    Fixes: 28e8cabe80f3 ("net: hsr: Don't log netdev_err message on unknown prp dst node")
    Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Reviewed-by: Steen Hegelund <Steen.Hegelund@microchip.com>
    Link: https://lore.kernel.org/r/20230315-net-20230315-hsr_framereg-ratelimit-v1-1-61d2ef176d11@tessares.net
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcc09ef87e79f6cc69e42a8b5000427049a0e4e2
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Thu Dec 15 10:36:05 2022 -0800

    libbpf: Fix btf_dump's packed struct determination
    
    [ Upstream commit 4fb877aaa179dcdb1676d55216482febaada457e ]
    
    Fix bug in btf_dump's logic of determining if a given struct type is
    packed or not. The notion of "natural alignment" is not needed and is
    even harmful in this case, so drop it altogether. The biggest difference
    in btf_is_struct_packed() compared to its original implementation is
    that we don't really use btf__align_of() to determine overall alignment
    of a struct type (because it could be 1 for both packed and non-packed
    struct, depending on specifci field definitions), and just use field's
    actual alignment to calculate whether any field is requiring packing or
    struct's size overall necessitates packing.
    
    Add two simple test cases that demonstrate the difference this change
    would make.
    
    Fixes: ea2ce1ba99aa ("libbpf: Fix BTF-to-C converter's padding logic")
    Reported-by: Eduard Zingerman <eddyz87@gmail.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Eduard Zingerman <eddyz87@gmail.com>
    Link: https://lore.kernel.org/bpf/20221215183605.4149488-1-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74059587b25d0b9afa0353d90f4361994f162f7c
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Dec 12 13:15:05 2022 -0800

    selftests/bpf: Add few corner cases to test padding handling of btf_dump
    
    [ Upstream commit b148c8b9b926e257a59c8eb2cd6fa3adfd443254 ]
    
    Add few hand-crafted cases and few randomized cases found using script
    from [0] that tests btf_dump's padding logic.
    
      [0] https://lore.kernel.org/bpf/85f83c333f5355c8ac026f835b18d15060725fcb.camel@ericsson.com/
    
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20221212211505.558851-7-andrii@kernel.org
    Stable-dep-of: 4fb877aaa179 ("libbpf: Fix btf_dump's packed struct determination")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c74ae8678dfa82ab26f5ed6222b93e3da87140f6
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Dec 12 13:15:04 2022 -0800

    libbpf: Fix BTF-to-C converter's padding logic
    
    [ Upstream commit ea2ce1ba99aa6a60c8d8a706e3abadf3de372163 ]
    
    Turns out that btf_dump API doesn't handle a bunch of tricky corner
    cases, as reported by Per, and further discovered using his testing
    Python script ([0]).
    
    This patch revamps btf_dump's padding logic significantly, making it
    more correct and also avoiding unnecessary explicit padding, where
    compiler would pad naturally. This overall topic turned out to be very
    tricky and subtle, there are lots of subtle corner cases. The comments
    in the code tries to give some clues, but comments themselves are
    supposed to be paired with good understanding of C alignment and padding
    rules. Plus some experimentation to figure out subtle things like
    whether `long :0;` means that struct is now forced to be long-aligned
    (no, it's not, turns out).
    
    Anyways, Per's script, while not completely correct in some known
    situations, doesn't show any obvious cases where this logic breaks, so
    this is a nice improvement over the previous state of this logic.
    
    Some selftests had to be adjusted to accommodate better use of natural
    alignment rules, eliminating some unnecessary padding, or changing it to
    `type: 0;` alignment markers.
    
    Note also that for when we are in between bitfields, we emit explicit
    bit size, while otherwise we use `: 0`, this feels much more natural in
    practice.
    
    Next patch will add few more test cases, found through randomized Per's
    script.
    
      [0] https://lore.kernel.org/bpf/85f83c333f5355c8ac026f835b18d15060725fcb.camel@ericsson.com/
    
    Reported-by: Per Sundstr√∂m XP <per.xp.sundstrom@ericsson.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20221212211505.558851-6-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17a61d1e9431a42ce5e592fee251cb668f92209d
Author: Eduard Zingerman <eddyz87@gmail.com>
Date:   Sat Oct 1 13:44:25 2022 +0300

    selftests/bpf: Test btf dump for struct with padding only fields
    
    [ Upstream commit d503f1176b14f722a40ea5110312614982f9a80b ]
    
    Structures with zero regular fields but some padding constitute a
    special case in btf_dump.c:btf_dump_emit_struct_def with regards to
    newline before closing '}'.
    
    Signed-off-by: Eduard Zingerman <eddyz87@gmail.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20221001104425.415768-2-eddyz87@gmail.com
    Stable-dep-of: ea2ce1ba99aa ("libbpf: Fix BTF-to-C converter's padding logic")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6777291c7b14a4452ba33c28364eb211a23c7077
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Mon Mar 20 22:49:15 2023 +0900

    zonefs: Fix error message in zonefs_file_dio_append()
    
    commit 88b170088ad2c3e27086fe35769aa49f8a512564 upstream.
    
    Since the expected write location in a sequential file is always at the
    end of the file (append write), when an invalid write append location is
    detected in zonefs_file_dio_append(), print the invalid written location
    instead of the expected write location.
    
    Fixes: a608da3bd730 ("zonefs: Detect append writes at invalid locations")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71ab5c1d506d3637fb5b2c840c4138ac74038047
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Jan 6 01:12:35 2023 +0000

    KVM: x86: Purge "highest ISR" cache when updating APICv state
    
    commit 97a71c444a147ae41c7d0ab5b3d855d7f762f3ed upstream.
    
    Purge the "highest ISR" cache when updating APICv state on a vCPU.  The
    cache must not be used when APICv is active as hardware may emulate EOIs
    (and other operations) without exiting to KVM.
    
    This fixes a bug where KVM will effectively block IRQs in perpetuity due
    to the "highest ISR" never getting reset if APICv is activated on a vCPU
    while an IRQ is in-service.  Hardware emulates the EOI and KVM never gets
    a chance to update its cache.
    
    Fixes: b26a695a1d78 ("kvm: lapic: Introduce APICv update helper function")
    Cc: stable@vger.kernel.org
    Cc: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Cc: Maxim Levitsky <mlevitsk@redhat.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20230106011306.85230-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61e0863dc8dd7c73568397ad920e8ac14b78e466
Author: Sean Christopherson <seanjc@google.com>
Date:   Sat Jan 7 01:10:21 2023 +0000

    KVM: x86: Inject #GP on x2APIC WRMSR that sets reserved bits 63:32
    
    commit ab52be1b310bcb39e6745d34a8f0e8475d67381a upstream.
    
    Reject attempts to set bits 63:32 for 32-bit x2APIC registers, i.e. all
    x2APIC registers except ICR.  Per Intel's SDM:
    
      Non-zero writes (by WRMSR instruction) to reserved bits to these
      registers will raise a general protection fault exception
    
    Opportunistically fix a typo in a nearby comment.
    
    Reported-by: Marc Orr <marcorr@google.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20230107011025.565472-3-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4483dc41d123e17fbfc466be57afa659bdd382f8
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Dec 8 01:52:17 2021 +0000

    KVM: VMX: Move preemption timer <=> hrtimer dance to common x86
    
    commit 98c25ead5eda5e9d41abe57839ad3e8caf19500c upstream.
    
    Handle the switch to/from the hypervisor/software timer when a vCPU is
    blocking in common x86 instead of in VMX.  Even though VMX is the only
    user of a hypervisor timer, the logic and all functions involved are
    generic x86 (unless future CPUs do something completely different and
    implement a hypervisor timer that runs regardless of mode).
    
    Handling the switch in common x86 will allow for the elimination of the
    pre/post_blocks hooks, and also lets KVM switch back to the hypervisor
    timer if and only if it was in use (without additional params).  Add a
    comment explaining why the switch cannot be deferred to kvm_sched_out()
    or kvm_vcpu_block().
    
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Message-Id: <20211208015236.1616697-8-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [ta: Fix conflicts in vmx_pre_block and vmx_post_block as per Paolo's
    suggestion. Add Reported-by and Link tags.]
    Reported-by: syzbot+b6a74be92b5063a0f1ff@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=489beb3d76ef14cc6cd18125782dc6f86051a605
    Tested-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Signed-off-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a58d4e66712be5027957925ec61b60aa900d6e6e
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Thu Mar 23 13:09:16 2023 +0100

    s390/uaccess: add missing earlyclobber annotations to __clear_user()
    
    commit 89aba4c26fae4e459f755a18912845c348ee48f3 upstream.
    
    Add missing earlyclobber annotation to size, to, and tmp2 operands of the
    __clear_user() inline assembly since they are modified or written to before
    the last usage of all input operands. This can lead to incorrect register
    allocation for the inline assembly.
    
    Fixes: 6c2a9e6df604 ("[S390] Use alternative user-copy operations for new hardware.")
    Reported-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://lore.kernel.org/all/20230321122514.1743889-3-mark.rutland@arm.com/
    Cc: stable@vger.kernel.org
    Reviewed-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dfccde646aad7a2658f608df0f691b19805d9d2
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Mar 16 17:45:45 2023 +0000

    KVM: arm64: Disable interrupts while walking userspace PTs
    
    commit e86fc1a3a3e9b4850fe74d738e3cfcf4297d8bba upstream.
    
    We walk the userspace PTs to discover what mapping size was
    used there. However, this can race against the userspace tables
    being freed, and we end-up in the weeds.
    
    Thankfully, the mm code is being generous and will IPI us when
    doing so. So let's implement our part of the bargain and disable
    interrupts around the walk. This ensures that nothing terrible
    happens during that time.
    
    We still need to handle the removal of the page tables before
    the walk. For that, allow get_user_mapping_size() to return an
    error, and make sure this error can be propagated all the way
    to the the exit handler.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230316174546.3777507-2-maz@kernel.org
    Signed-off-by: Oliver Upton <oliver.upton@linux.dev>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25e74e728168e638e5c59820a60139fbc545349f
Author: Fangzhi Zuo <Jerry.Zuo@amd.com>
Date:   Fri Feb 24 13:45:21 2023 -0500

    drm/amd/display: Add DSC Support for Synaptics Cascaded MST Hub
    
    commit f4f3b7dedbe849e780c779ba67365bb1db0d8637 upstream.
    
    Traditional synaptics hub has one MST branch device without virtual dpcd.
    Synaptics cascaded hub has two chained MST branch devices. DSC decoding
    is performed via root MST branch device, instead of the second MST branch
    device.
    
    Reviewed-by: Hersen Wu <hersenxs.wu@amd.com>
    Acked-by: Qingqing Zhuo <qingqing.zhuo@amd.com>
    Signed-off-by: Fangzhi Zuo <Jerry.Zuo@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bfedfdbf92baac2ed632ccf42646d34031e4b32
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Feb 24 18:21:54 2023 +0100

    drm/etnaviv: fix reference leak when mmaping imported buffer
    
    commit 963b2e8c428f79489ceeb058e8314554ec9cbe6f upstream.
    
    drm_gem_prime_mmap() takes a reference on the GEM object, but before that
    drm_gem_mmap_obj() already takes a reference, which will be leaked as only
    one reference is dropped when the mapping is closed. Drop the extra
    reference when dma_buf_mmap() succeeds.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd1f48613e9f1d2ce9ce3f5b003f80c961fee589
Author: Douglas Raillard <douglas.raillard@arm.com>
Date:   Mon Mar 6 12:27:43 2023 +0000

    rcu: Fix rcu_torture_read ftrace event
    
    commit d18a04157fc171fd48075e3dc96471bd3b87f0dd upstream.
    
    Fix the rcutorturename field so that its size is correctly reported in
    the text format embedded in trace.dat files. As it stands, it is
    reported as being of size 1:
    
        field:char rcutorturename[8];   offset:8;       size:1; signed:0;
    
    Signed-off-by: Douglas Raillard <douglas.raillard@arm.com>
    Reviewed-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Cc: stable@vger.kernel.org
    Fixes: 04ae87a52074e ("ftrace: Rework event_create_dir()")
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    [ boqun: Add "Cc" and "Fixes" tags per Steven ]
    Signed-off-by: Boqun Feng <boqun.feng@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9097ba15ea5c469dcf29f00b82b54b1885b5d103
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Thu Mar 16 23:00:21 2023 -0700

    xtensa: fix KASAN report for show_stack
    
    commit 1d3b7a788ca7435156809a6bd5b20c95b2370d45 upstream.
    
    show_stack dumps raw stack contents which may trigger an unnecessary
    KASAN report. Fix it by copying stack contents to a temporary buffer
    with __memcpy and then printing that buffer instead of passing stack
    pointer directly to the print_hex_dump.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8861429f883e074abe5319a367060aef7e5602f8
Author: huangwenhui <huangwenhuia@uniontech.com>
Date:   Tue Mar 28 15:46:44 2023 +0800

    ALSA: hda/realtek: Add quirk for Lenovo ZhaoYang CF4620Z
    
    commit 52aad39385e1bfdb34a1b405f699a8ef302c58b0 upstream.
    
    Fix headset microphone detection on Lenovo ZhaoYang CF4620Z.
    
    [ adjusted to be applicable to the latest tree -- tiwai ]
    
    Signed-off-by: huangwenhui <huangwenhuia@uniontech.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230328074644.30142-1-huangwenhuia@uniontech.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77ab3e5f9873d091ef0256a7961d3e1d84c7a495
Author: Tim Crawford <tcrawford@system76.com>
Date:   Fri Mar 17 08:18:25 2023 -0600

    ALSA: hda/realtek: Add quirks for some Clevo laptops
    
    commit b7a5822810c4398515300d614d988cf638adecad upstream.
    
    Add the audio quirk for some of Clevo's latest RPL laptops:
    
    - NP50RNJS (ALC256)
    - NP70SNE (ALC256)
    - PD50SNE (ALC1220)
    - PE60RNE (ALC1220)
    
    Co-authored-by: Jeremy Soller <jeremy@system76.com>
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230317141825.11807-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f775413ffeff679e5b8068528e20f1be45392e14
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 24 08:50:05 2023 +0100

    ALSA: usb-audio: Fix regression on detection of Roland VS-100
    
    commit fa4e7a6fa12b1132340785e14bd439cbe95b7a5a upstream.
    
    It's been reported that the recent kernel can't probe the PCM devices
    on Roland VS-100 properly, and it turned out to be a regression by the
    recent addition of the bit shift range check for the format bits.
    In the old code, we just did bit-shift and it resulted in zero, which
    is then corrected to the standard PCM format, while the new code
    explicitly returns an error in such a case.
    
    For addressing the regression, relax the check and fallback to the
    standard PCM type (with the info output).
    
    Fixes: 43d5ca88dfcd ("ALSA: usb-audio: Fix potential out-of-bounds shift")
    Cc: <stable@vger.kernel.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217084
    Link: https://lore.kernel.org/r/20230324075005.19403-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b39d42ed67d5764526f29643f225520a0ae5880a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 20 15:09:54 2023 +0100

    ALSA: hda/conexant: Partial revert of a quirk for Lenovo
    
    commit b871cb971c683f7f212e7ca3c9a6709a75785116 upstream.
    
    The recent commit f83bb2592482 ("ALSA: hda/conexant: Add quirk for
    LENOVO 20149 Notebook model") introduced a quirk for the device with
    17aa:3977, but this caused a regression on another model (Lenovo
    Ideadpad U31) with the very same PCI SSID.  And, through skimming over
    the net, it seems that this PCI SSID is used for multiple different
    models, so it's no good idea to apply the quirk with the SSID.
    
    Although we may take a different ID check (e.g. the codec SSID instead
    of the PCI SSID), unfortunately, the original patch author couldn't
    identify the hardware details any longer as the machine was returned,
    and we can't develop the further proper fix.
    
    In this patch, instead, we partially revert the change so that the
    quirk won't be applied as default for addressing the regression.
    Meanwhile, the quirk function itself is kept, and it's now made to be
    applicable via the explicit model=lenovo-20149 option.
    
    Fixes: f83bb2592482 ("ALSA: hda/conexant: Add quirk for LENOVO 20149 Notebook model")
    Reported-by: Jetro Jormalainen <jje-lxkl@jetro.fi>
    Link: https://lore.kernel.org/r/20230308215009.4d3e58a6@mopti
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230320140954.31154-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 305a171cf61754b1c4c09c0b3aebdff5d7ddb45a
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Mar 21 00:17:36 2023 -0400

    NFSv4: Fix hangs when recovering open state after a server reboot
    
    commit 6165a16a5ad9b237bb3131cff4d3c601ccb8f9a3 upstream.
    
    When we're using a cached open stateid or a delegation in order to avoid
    sending a CLAIM_PREVIOUS open RPC call to the server, we don't have a
    new open stateid to present to update_open_stateid().
    Instead rely on nfs4_try_open_cached(), just as if we were doing a
    normal open.
    
    Fixes: d2bfda2e7aa0 ("NFSv4: don't reprocess cached open CLAIM_PREVIOUS")
    Cc: stable@vger.kernel.org
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7624973bc15b76d000e8e6f9b8080fcb76d36595
Author: Jens Axboe <axboe@kernel.dk>
Date:   Sun Mar 26 16:15:57 2023 -0600

    powerpc: Don't try to copy PPR for task with NULL pt_regs
    
    commit fd7276189450110ed835eb0a334e62d2f1c4e3be upstream.
    
    powerpc sets up PF_KTHREAD and PF_IO_WORKER with a NULL pt_regs, which
    from my (arguably very short) checking is not commonly done for other
    archs. This is fine, except when PF_IO_WORKER's have been created and
    the task does something that causes a coredump to be generated. Then we
    get this crash:
    
      Kernel attempted to read user page (160) - exploit attempt? (uid: 1000)
      BUG: Kernel NULL pointer dereference on read at 0x00000160
      Faulting instruction address: 0xc0000000000c3a60
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=32 NUMA pSeries
      Modules linked in: bochs drm_vram_helper drm_kms_helper xts binfmt_misc ecb ctr syscopyarea sysfillrect cbc sysimgblt drm_ttm_helper aes_generic ttm sg libaes evdev joydev virtio_balloon vmx_crypto gf128mul drm dm_mod fuse loop configfs drm_panel_orientation_quirks ip_tables x_tables autofs4 hid_generic usbhid hid xhci_pci xhci_hcd usbcore usb_common sd_mod
      CPU: 1 PID: 1982 Comm: ppc-crash Not tainted 6.3.0-rc2+ #88
      Hardware name: IBM pSeries (emulated by qemu) POWER9 (raw) 0x4e1202 0xf000005 of:SLOF,HEAD hv:linux,kvm pSeries
      NIP:  c0000000000c3a60 LR: c000000000039944 CTR: c0000000000398e0
      REGS: c0000000041833b0 TRAP: 0300   Not tainted  (6.3.0-rc2+)
      MSR:  800000000280b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE>  CR: 88082828  XER: 200400f8
      ...
      NIP memcpy_power7+0x200/0x7d0
      LR  ppr_get+0x64/0xb0
      Call Trace:
        ppr_get+0x40/0xb0 (unreliable)
        __regset_get+0x180/0x1f0
        regset_get_alloc+0x64/0x90
        elf_core_dump+0xb98/0x1b60
        do_coredump+0x1c34/0x24a0
        get_signal+0x71c/0x1410
        do_notify_resume+0x140/0x6f0
        interrupt_exit_user_prepare_main+0x29c/0x320
        interrupt_exit_user_prepare+0x6c/0xa0
        interrupt_return_srr_user+0x8/0x138
    
    Because ppr_get() is trying to copy from a PF_IO_WORKER with a NULL
    pt_regs.
    
    Check for a valid pt_regs in both ppc_get/ppr_set, and return an error
    if not set. The actual error value doesn't seem to be important here, so
    just pick -EINVAL.
    
    Fixes: fa439810cc1b ("powerpc/ptrace: Enable support for NT_PPPC_TAR, NT_PPC_PPR, NT_PPC_DSCR")
    Cc: stable@vger.kernel.org # v4.8+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    [mpe: Trim oops in change log, add Fixes & Cc stable]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://msgid.link/d9f63344-fe7c-56ae-b420-4a1a04a2ae4c@kernel.dk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a9510113f5b63390140b1bf76ddc35939f89fe1
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Fri Feb 24 14:08:28 2023 +0100

    pinctrl: at91-pio4: fix domain name assignment
    
    commit 7bb97e360acdd38b68ad0a1defb89c6e89c85596 upstream.
    
    Since commit d59f6617eef0 ("genirq: Allow fwnode to carry name
    information only") an IRQ domain is always given a name during
    allocation (e.g. used for the debugfs entry).
    
    Drop the no longer valid name assignment, which would lead to an attempt
    to free a string constant when removing the domain on late probe
    failures (e.g. probe deferral).
    
    Fixes: d59f6617eef0 ("genirq: Allow fwnode to carry name information only")
    Cc: stable@vger.kernel.org      # 4.13
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Tested-by: Claudiu Beznea <claudiu.beznea@microchip.com> # on SAMA7G5
    Link: https://lore.kernel.org/r/20230224130828.27985-1-johan+linaro@kernel.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c1bc7b50e02a96c1d15ad016ce1724077976c4d
Author: Kornel Dulƒôba <korneld@chromium.org>
Date:   Mon Mar 20 09:32:59 2023 +0000

    pinctrl: amd: Disable and mask interrupts on resume
    
    commit b26cd9325be4c1fcd331b77f10acb627c560d4d7 upstream.
    
    This fixes a similar problem to the one observed in:
    commit 4e5a04be88fe ("pinctrl: amd: disable and mask interrupts on probe").
    
    On some systems, during suspend/resume cycle firmware leaves
    an interrupt enabled on a pin that is not used by the kernel.
    This confuses the AMD pinctrl driver and causes spurious interrupts.
    
    The driver already has logic to detect if a pin is used by the kernel.
    Leverage it to re-initialize interrupt fields of a pin only if it's not
    used by us.
    
    Cc: stable@vger.kernel.org
    Fixes: dbad75dd1f25 ("pinctrl: add AMD GPIO driver support.")
    Signed-off-by: Kornel Dulƒôba <korneld@chromium.org>
    Link: https://lore.kernel.org/r/20230320093259.845178-1-korneld@chromium.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45ed4e5149e8e671ecff0d8bb8c7bcf57453faab
Author: Josua Mayer <josua@solid-run.com>
Date:   Thu Mar 23 12:25:36 2023 +0200

    net: phy: dp83869: fix default value for tx-/rx-internal-delay
    
    commit 82e2c39f9ef78896e9b634dfd82dc042e6956bb7 upstream.
    
    dp83869 internally uses a look-up table for mapping supported delays in
    nanoseconds to register values.
    When specific delays are defined in device-tree, phy_get_internal_delay
    does the lookup automatically returning an index.
    
    The default case wrongly assigns the nanoseconds value from the lookup
    table, resulting in numeric value 2000 applied to delay configuration
    register, rather than the expected index values 0-7 (7 for 2000).
    Ultimately this issue broke RX for 1Gbps links.
    
    Fix default delay configuration by assigning the intended index value
    directly.
    
    Cc: stable@vger.kernel.org
    Fixes: 736b25afe284 ("net: dp83869: Add RGMII internal delay configuration")
    Co-developed-by: Yazan Shhady <yazan.shhady@solid-run.com>
    Signed-off-by: Yazan Shhady <yazan.shhady@solid-run.com>
    Signed-off-by: Josua Mayer <josua@solid-run.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230323102536.31988-1-josua@solid-run.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f75ef136169af02a958e145d2995679c96be618
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Mar 27 10:36:45 2023 +0200

    xen/netback: don't do grant copy across page boundary
    
    commit 05310f31ca74673a96567fb14637b7d5d6c82ea5 upstream.
    
    Fix xenvif_get_requests() not to do grant copy operations across local
    page boundaries. This requires to double the maximum number of copy
    operations per queue, as each copy could now be split into 2.
    
    Make sure that struct xenvif_tx_cb doesn't grow too large.
    
    Cc: stable@vger.kernel.org
    Fixes: ad7f402ae4f4 ("xen/netback: Ensure protocol headers don't fall in the non-linear area")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Paul Durrant <paul@xen.org>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a581b71cf686b4cd1a85c9c2dfc2fb88382c3b4
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Fri Mar 24 14:01:41 2023 +0100

    can: j1939: prevent deadlock by moving j1939_sk_errqueue()
    
    commit d1366b283d94ac4537a4b3a1e8668da4df7ce7e9 upstream.
    
    This commit addresses a deadlock situation that can occur in certain
    scenarios, such as when running data TP/ETP transfer and subscribing to
    the error queue while receiving a net down event. The deadlock involves
    locks in the following order:
    
    3
      j1939_session_list_lock ->  active_session_list_lock
      j1939_session_activate
      ...
      j1939_sk_queue_activate_next -> sk_session_queue_lock
      ...
      j1939_xtp_rx_eoma_one
    
    2
      j1939_sk_queue_drop_all  ->  sk_session_queue_lock
      ...
      j1939_sk_netdev_event_netdown -> j1939_socks_lock
      j1939_netdev_notify
    
    1
      j1939_sk_errqueue -> j1939_socks_lock
      __j1939_session_cancel -> active_session_list_lock
      j1939_tp_rxtimer
    
           CPU0                    CPU1
           ----                    ----
      lock(&priv->active_session_list_lock);
                                   lock(&jsk->sk_session_queue_lock);
                                   lock(&priv->active_session_list_lock);
      lock(&priv->j1939_socks_lock);
    
    The solution implemented in this commit is to move the
    j1939_sk_errqueue() call out of the active_session_list_lock context,
    thus preventing the deadlock situation.
    
    Reported-by: syzbot+ee1cd780f69483a8616b@syzkaller.appspotmail.com
    Fixes: 5b9272e93f2e ("can: j1939: extend UAPI to notify about RX status")
    Co-developed-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/all/20230324130141.2132787-1-o.rempel@pengutronix.de
    Cc: stable@vger.kernel.org
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3373a681d9ad18d18fb10e4aaa0ea2ea6e3ce5e
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Wed Mar 29 13:16:01 2023 +0900

    zonefs: Always invalidate last cached page on append write
    
    commit c1976bd8f23016d8706973908f2bb0ac0d852a8f upstream.
    
    When a direct append write is executed, the append offset may correspond
    to the last page of a sequential file inode which might have been cached
    already by buffered reads, page faults with mmap-read or non-direct
    readahead. To ensure that the on-disk and cached data is consistant for
    such last cached page, make sure to always invalidate it in
    zonefs_file_dio_append(). If the invalidation fails, return -EBUSY to
    userspace to differentiate from IO errors.
    
    This invalidation will always be a no-op when the FS block size (device
    zone write granularity) is equal to the page size (e.g. 4K).
    
    Reported-by: Hans Holmberg <Hans.Holmberg@wdc.com>
    Fixes: 02ef12a663c7 ("zonefs: use REQ_OP_ZONE_APPEND for sync DIO")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Tested-by: Hans Holmberg <hans.holmberg@wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1310fc7abe640f83ead454257e202658bc43019
Author: Anand Jain <anand.jain@oracle.com>
Date:   Thu Mar 23 15:56:48 2023 +0800

    btrfs: scan device in non-exclusive mode
    
    commit 50d281fc434cb8e2497f5e70a309ccca6b1a09f0 upstream.
    
    This fixes mkfs/mount/check failures due to race with systemd-udevd
    scan.
    
    During the device scan initiated by systemd-udevd, other user space
    EXCL operations such as mkfs, mount, or check may get blocked and result
    in a "Device or resource busy" error. This is because the device
    scan process opens the device with the EXCL flag in the kernel.
    
    Two reports were received:
    
     - btrfs/179 test case, where the fsck command failed with the -EBUSY
       error
    
     - LTP pwritev03 test case, where mkfs.vfs failed with
       the -EBUSY error, when mkfs.vfs tried to overwrite old btrfs filesystem
       on the device.
    
    In both cases, fsck and mkfs (respectively) were racing with a
    systemd-udevd device scan, and systemd-udevd won, resulting in the
    -EBUSY error for fsck and mkfs.
    
    Reproducing the problem has been difficult because there is a very
    small window during which these userspace threads can race to
    acquire the exclusive device open. Even on the system where the problem
    was observed, the problem occurrences were anywhere between 10 to 400
    iterations and chances of reproducing decreases with debug printk()s.
    
    However, an exclusive device open is unnecessary for the scan process,
    as there are no write operations on the device during scan. Furthermore,
    during the mount process, the superblock is re-read in the below
    function call chain:
    
      btrfs_mount_root
       btrfs_open_devices
        open_fs_devices
         btrfs_open_one_device
           btrfs_get_bdev_and_sb
    
    So, to fix this issue, removes the FMODE_EXCL flag from the scan
    operation, and add a comment.
    
    The case where mkfs may still write to the device and a scan is running,
    the btrfs signature is not written at that time so scan will not
    recognize such device.
    
    Reported-by: Sherry Yang <sherry.yang@oracle.com>
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Link: https://lore.kernel.org/oe-lkp/202303170839.fdf23068-oliver.sang@intel.com
    CC: stable@vger.kernel.org # 5.4+
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c976f9233ef926e090db5614a837824a0bcab3fb
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Mar 22 10:33:28 2023 +0000

    btrfs: fix race between quota disable and quota assign ioctls
    
    commit 2f1a6be12ab6c8470d5776e68644726c94257c54 upstream.
    
    The quota assign ioctl can currently run in parallel with a quota disable
    ioctl call. The assign ioctl uses the quota root, while the disable ioctl
    frees that root, and therefore we can have a use-after-free triggered in
    the assign ioctl, leading to a trace like the following when KASAN is
    enabled:
    
      [672.723][T736] BUG: KASAN: slab-use-after-free in btrfs_search_slot+0x2962/0x2db0
      [672.723][T736] Read of size 8 at addr ffff888022ec0208 by task btrfs_search_sl/27736
      [672.724][T736]
      [672.725][T736] CPU: 1 PID: 27736 Comm: btrfs_search_sl Not tainted 6.3.0-rc3 #37
      [672.723][T736] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
      [672.727][T736] Call Trace:
      [672.728][T736]  <TASK>
      [672.728][T736]  dump_stack_lvl+0xd9/0x150
      [672.725][T736]  print_report+0xc1/0x5e0
      [672.720][T736]  ? __virt_addr_valid+0x61/0x2e0
      [672.727][T736]  ? __phys_addr+0xc9/0x150
      [672.725][T736]  ? btrfs_search_slot+0x2962/0x2db0
      [672.722][T736]  kasan_report+0xc0/0xf0
      [672.729][T736]  ? btrfs_search_slot+0x2962/0x2db0
      [672.724][T736]  btrfs_search_slot+0x2962/0x2db0
      [672.723][T736]  ? fs_reclaim_acquire+0xba/0x160
      [672.722][T736]  ? split_leaf+0x13d0/0x13d0
      [672.726][T736]  ? rcu_is_watching+0x12/0xb0
      [672.723][T736]  ? kmem_cache_alloc+0x338/0x3c0
      [672.722][T736]  update_qgroup_status_item+0xf7/0x320
      [672.724][T736]  ? add_qgroup_rb+0x3d0/0x3d0
      [672.739][T736]  ? do_raw_spin_lock+0x12d/0x2b0
      [672.730][T736]  ? spin_bug+0x1d0/0x1d0
      [672.737][T736]  btrfs_run_qgroups+0x5de/0x840
      [672.730][T736]  ? btrfs_qgroup_rescan_worker+0xa70/0xa70
      [672.738][T736]  ? __del_qgroup_relation+0x4ba/0xe00
      [672.738][T736]  btrfs_ioctl+0x3d58/0x5d80
      [672.735][T736]  ? tomoyo_path_number_perm+0x16a/0x550
      [672.737][T736]  ? tomoyo_execute_permission+0x4a0/0x4a0
      [672.731][T736]  ? btrfs_ioctl_get_supported_features+0x50/0x50
      [672.737][T736]  ? __sanitizer_cov_trace_switch+0x54/0x90
      [672.734][T736]  ? do_vfs_ioctl+0x132/0x1660
      [672.730][T736]  ? vfs_fileattr_set+0xc40/0xc40
      [672.730][T736]  ? _raw_spin_unlock_irq+0x2e/0x50
      [672.732][T736]  ? sigprocmask+0xf2/0x340
      [672.737][T736]  ? __fget_files+0x26a/0x480
      [672.732][T736]  ? bpf_lsm_file_ioctl+0x9/0x10
      [672.738][T736]  ? btrfs_ioctl_get_supported_features+0x50/0x50
      [672.736][T736]  __x64_sys_ioctl+0x198/0x210
      [672.736][T736]  do_syscall_64+0x39/0xb0
      [672.731][T736]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
      [672.739][T736] RIP: 0033:0x4556ad
      [672.742][T736]  </TASK>
      [672.743][T736]
      [672.748][T736] Allocated by task 27677:
      [672.743][T736]  kasan_save_stack+0x22/0x40
      [672.741][T736]  kasan_set_track+0x25/0x30
      [672.741][T736]  __kasan_kmalloc+0xa4/0xb0
      [672.749][T736]  btrfs_alloc_root+0x48/0x90
      [672.746][T736]  btrfs_create_tree+0x146/0xa20
      [672.744][T736]  btrfs_quota_enable+0x461/0x1d20
      [672.743][T736]  btrfs_ioctl+0x4a1c/0x5d80
      [672.747][T736]  __x64_sys_ioctl+0x198/0x210
      [672.749][T736]  do_syscall_64+0x39/0xb0
      [672.744][T736]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
      [672.756][T736]
      [672.757][T736] Freed by task 27677:
      [672.759][T736]  kasan_save_stack+0x22/0x40
      [672.759][T736]  kasan_set_track+0x25/0x30
      [672.756][T736]  kasan_save_free_info+0x2e/0x50
      [672.751][T736]  ____kasan_slab_free+0x162/0x1c0
      [672.758][T736]  slab_free_freelist_hook+0x89/0x1c0
      [672.752][T736]  __kmem_cache_free+0xaf/0x2e0
      [672.752][T736]  btrfs_put_root+0x1ff/0x2b0
      [672.759][T736]  btrfs_quota_disable+0x80a/0xbc0
      [672.752][T736]  btrfs_ioctl+0x3e5f/0x5d80
      [672.756][T736]  __x64_sys_ioctl+0x198/0x210
      [672.753][T736]  do_syscall_64+0x39/0xb0
      [672.765][T736]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
      [672.769][T736]
      [672.768][T736] The buggy address belongs to the object at ffff888022ec0000
      [672.768][T736]  which belongs to the cache kmalloc-4k of size 4096
      [672.769][T736] The buggy address is located 520 bytes inside of
      [672.769][T736]  freed 4096-byte region [ffff888022ec0000, ffff888022ec1000)
      [672.760][T736]
      [672.764][T736] The buggy address belongs to the physical page:
      [672.761][T736] page:ffffea00008bb000 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x22ec0
      [672.766][T736] head:ffffea00008bb000 order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0
      [672.779][T736] flags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff)
      [672.770][T736] raw: 00fff00000010200 ffff888012842140 ffffea000054ba00 dead000000000002
      [672.770][T736] raw: 0000000000000000 0000000000040004 00000001ffffffff 0000000000000000
      [672.771][T736] page dumped because: kasan: bad access detected
      [672.778][T736] page_owner tracks the page as allocated
      [672.777][T736] page last allocated via order 3, migratetype Unmovable, gfp_mask 0xd2040(__GFP_IO|__GFP_NOWARN|__GFP_NORETRY|__GFP_COMP|__GFP_NOMEMALLOC), pid 88
      [672.779][T736]  get_page_from_freelist+0x119c/0x2d50
      [672.779][T736]  __alloc_pages+0x1cb/0x4a0
      [672.776][T736]  alloc_pages+0x1aa/0x270
      [672.773][T736]  allocate_slab+0x260/0x390
      [672.771][T736]  ___slab_alloc+0xa9a/0x13e0
      [672.778][T736]  __slab_alloc.constprop.0+0x56/0xb0
      [672.771][T736]  __kmem_cache_alloc_node+0x136/0x320
      [672.789][T736]  __kmalloc+0x4e/0x1a0
      [672.783][T736]  tomoyo_realpath_from_path+0xc3/0x600
      [672.781][T736]  tomoyo_path_perm+0x22f/0x420
      [672.782][T736]  tomoyo_path_unlink+0x92/0xd0
      [672.780][T736]  security_path_unlink+0xdb/0x150
      [672.788][T736]  do_unlinkat+0x377/0x680
      [672.788][T736]  __x64_sys_unlink+0xca/0x110
      [672.789][T736]  do_syscall_64+0x39/0xb0
      [672.783][T736]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
      [672.784][T736] page last free stack trace:
      [672.787][T736]  free_pcp_prepare+0x4e5/0x920
      [672.787][T736]  free_unref_page+0x1d/0x4e0
      [672.784][T736]  __unfreeze_partials+0x17c/0x1a0
      [672.797][T736]  qlist_free_all+0x6a/0x180
      [672.796][T736]  kasan_quarantine_reduce+0x189/0x1d0
      [672.797][T736]  __kasan_slab_alloc+0x64/0x90
      [672.793][T736]  kmem_cache_alloc+0x17c/0x3c0
      [672.799][T736]  getname_flags.part.0+0x50/0x4e0
      [672.799][T736]  getname_flags+0x9e/0xe0
      [672.792][T736]  vfs_fstatat+0x77/0xb0
      [672.791][T736]  __do_sys_newlstat+0x84/0x100
      [672.798][T736]  do_syscall_64+0x39/0xb0
      [672.796][T736]  entry_SYSCALL_64_after_hwframe+0x63/0xcd
      [672.790][T736]
      [672.791][T736] Memory state around the buggy address:
      [672.799][T736]  ffff888022ec0100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      [672.805][T736]  ffff888022ec0180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      [672.802][T736] >ffff888022ec0200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      [672.809][T736]                       ^
      [672.809][T736]  ffff888022ec0280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      [672.809][T736]  ffff888022ec0300: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    
    Fix this by having the qgroup assign ioctl take the qgroup ioctl mutex
    before calling btrfs_run_qgroups(), which is what all qgroup ioctls should
    call.
    
    Reported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    Link: https://lore.kernel.org/linux-btrfs/CAFcO6XN3VD8ogmHwqRk4kbiwtpUSNySu2VAxN8waEPciCHJvMA@mail.gmail.com/
    CC: stable@vger.kernel.org # 5.10+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1484852ca1520f49cb25cb7fc3011ec70af0f98e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Mar 17 03:13:12 2023 -0700

    Input: goodix - add Lenovo Yoga Book X90F to nine_bytes_report DMI table
    
    commit 8a0432bab6ea3203d220785da7ab3c7677f70ecb upstream.
    
    The Android Lenovo Yoga Book X90F / X90L uses the same goodix touchscreen
    with 9 bytes touch reports for its touch keyboard as the already supported
    Windows Lenovo Yoga Book X91F/L, add a DMI match for this to
    the nine_bytes_report DMI table.
    
    When the quirk for the X91F/L was initially added it was written to
    also apply to the X90F/L but this does not work because the Android
    version of the Yoga Book uses completely different DMI strings.
    Also adjust the X91F/L quirk to reflect that it only applies to
    the X91F/L models.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Bastien Nocera <hadess@hadess.net>
    Link: https://lore.kernel.org/r/20230315134442.71787-1-hdegoede@redhat.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b64305185b76f1d5145ce594ff48f3f0e70695bd
Author: David Disseldorp <ddiss@suse.de>
Date:   Wed Mar 29 22:24:06 2023 +0200

    cifs: fix DFS traversal oops without CONFIG_CIFS_DFS_UPCALL
    
    commit 179a88a8558bbf42991d361595281f3e45d7edfc upstream.
    
    When compiled with CONFIG_CIFS_DFS_UPCALL disabled, cifs_dfs_d_automount
    is NULL. cifs.ko logic for mapping CIFS_FATTR_DFS_REFERRAL attributes to
    S_AUTOMOUNT and corresponding dentry flags is retained regardless of
    CONFIG_CIFS_DFS_UPCALL, leading to a NULL pointer dereference in
    VFS follow_automount() when traversing a DFS referral link:
      BUG: kernel NULL pointer dereference, address: 0000000000000000
      ...
      Call Trace:
       <TASK>
       __traverse_mounts+0xb5/0x220
       ? cifs_revalidate_mapping+0x65/0xc0 [cifs]
       step_into+0x195/0x610
       ? lookup_fast+0xe2/0xf0
       path_lookupat+0x64/0x140
       filename_lookup+0xc2/0x140
       ? __create_object+0x299/0x380
       ? kmem_cache_alloc+0x119/0x220
       ? user_path_at_empty+0x31/0x50
       user_path_at_empty+0x31/0x50
       __x64_sys_chdir+0x2a/0xd0
       ? exit_to_user_mode_prepare+0xca/0x100
       do_syscall_64+0x42/0x90
       entry_SYSCALL_64_after_hwframe+0x72/0xdc
    
    This fix adds an inline cifs_dfs_d_automount() {return -EREMOTE} handler
    when CONFIG_CIFS_DFS_UPCALL is disabled. An alternative would be to
    avoid flagging S_AUTOMOUNT, etc. without CONFIG_CIFS_DFS_UPCALL. This
    approach was chosen as it provides more control over the error path.
    
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Cc: stable@vger.kernel.org
    Reviewed-by: Paulo Alcantara (SUSE) <pc@manguebit.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a2e0baf36776d3033482477adeb01d78255d775
Author: Paulo Alcantara <pc@manguebit.com>
Date:   Wed Mar 29 17:14:22 2023 -0300

    cifs: prevent infinite recursion in CIFSGetDFSRefer()
    
    commit 09ba47b44d26b475bbdf9c80db9e0193d2b58956 upstream.
    
    We can't call smb_init() in CIFSGetDFSRefer() as cifs_reconnect_tcon()
    may end up calling CIFSGetDFSRefer() again to get new DFS referrals
    and thus causing an infinite recursion.
    
    Signed-off-by: Paulo Alcantara (SUSE) <pc@manguebit.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Cc: stable@vger.kernel.org # 6.2
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5075c097de14dbce765fe8106886bfa458be77f
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Mar 19 21:36:36 2023 -0700

    Input: focaltech - use explicitly signed char type
    
    commit 8980f190947ba29f23110408e712444884b74251 upstream.
    
    The recent change of -funsigned-char causes additions of negative
    numbers to become additions of large positive numbers, leading to wrong
    calculations of mouse movement. Change these casts to be explicitly
    signed, to take into account negative offsets.
    
    Fixes: 3bc753c06dd0 ("kbuild: treat char as always unsigned")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217211
    Link: https://lore.kernel.org/r/20230318133010.1285202-1-Jason@zx2c4.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf43bc826159bb242dc2fa8fc543c64ed71b842f
Author: msizanoen <msizanoen@qtmlabs.xyz>
Date:   Sun Mar 19 23:02:56 2023 -0700

    Input: alps - fix compatibility with -funsigned-char
    
    commit 754ff5060daf5a1cf4474eff9b4edeb6c17ef7ab upstream.
    
    The AlpsPS/2 code previously relied on the assumption that `char` is a
    signed type, which was true on x86 platforms (the only place where this
    driver is used) before kernel 6.2. However, on 6.2 and later, this
    assumption is broken due to the introduction of -funsigned-char as a new
    global compiler flag.
    
    Fix this by explicitly specifying the signedness of `char` when sign
    extending the values received from the device.
    
    Fixes: f3f33c677699 ("Input: alps - Rushmore and v7 resolution support")
    Signed-off-by: msizanoen <msizanoen@qtmlabs.xyz>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230320045228.182259-1-msizanoen@qtmlabs.xyz
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16c951f3eba40d44cea75e4119de04cf29f9359f
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Wed Mar 29 21:47:20 2023 +0800

    iommu/vt-d: Allow zero SAGAW if second-stage not supported
    
    [ Upstream commit bfd3c6b9fa4a1dc78139dd1621d5bea321ffa69d ]
    
    The VT-d spec states (in section 11.4.2) that hardware implementations
    reporting second-stage translation support (SSTS) field as Clear also
    report the SAGAW field as 0. Fix an inappropriate check in alloc_iommu().
    
    Fixes: 792fb43ce2c9 ("iommu/vt-d: Enable Intel IOMMU scalable mode by default")
    Suggested-by: Raghunathan Srinivasan <raghunathan.srinivasan@intel.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20230318024824.124542-1-baolu.lu@linux.intel.com
    Link: https://lore.kernel.org/r/20230329134721.469447-3-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4fbeaa31362fd209719a0b7ee72f3f6e2e9b57c
Author: Horatiu Vultur <horatiu.vultur@microchip.com>
Date:   Mon Feb 6 21:37:20 2023 +0100

    pinctrl: ocelot: Fix alt mode for ocelot
    
    [ Upstream commit 657fd9da2d4b4aa0a384105b236baa22fa0233bf ]
    
    In case the driver was trying to set an alternate mode for gpio
    0 or 32 then the mode was not set correctly. The reason is that
    there is computation error inside the function ocelot_pinmux_set_mux
    because in this case it was trying to shift to left by -1.
    Fix this by actually shifting the function bits and not the position.
    
    Fixes: 4b36082e2e09 ("pinctrl: ocelot: fix pinmuxing for pins after 31")
    Signed-off-by: Horatiu Vultur <horatiu.vultur@microchip.com>
    Link: https://lore.kernel.org/r/20230206203720.1177718-1-horatiu.vultur@microchip.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76f09582a191dcf11118fd4bdbf50f538c90fa8d
Author: Felix Fietkau <nbd@nbd.name>
Date:   Thu Mar 30 14:08:38 2023 +0200

    net: ethernet: mtk_eth_soc: fix flow block refcounting logic
    
    [ Upstream commit 8c1cb87c2a5c29da416848451a687473f379611c ]
    
    Since we call flow_block_cb_decref on FLOW_BLOCK_UNBIND, we also need to
    call flow_block_cb_incref for a newly allocated cb.
    Also fix the accidentally inverted refcount check on unbind.
    
    Fixes: 502e84e2382d ("net: ethernet: mtk_eth_soc: add flow offloading support")
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20230330120840.52079-1-nbd@nbd.name
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9caf3cbf1224cba45dfc35b75a602a70120bb9ca
Author: Steffen B√§tz <steffen@innosonix.de>
Date:   Wed Mar 29 12:01:40 2023 -0300

    net: dsa: mv88e6xxx: Enable IGMP snooping on user ports only
    
    [ Upstream commit 7bcad0f0e6fbc1d613e49e0ee35c8e5f2e685bb0 ]
    
    Do not set the MV88E6XXX_PORT_CTL0_IGMP_MLD_SNOOP bit on CPU or DSA ports.
    
    This allows the host CPU port to be a regular IGMP listener by sending out
    IGMP Membership Reports, which would otherwise not be forwarded by the
    mv88exxx chip, but directly looped back to the CPU port itself.
    
    Fixes: 54d792f257c6 ("net: dsa: Centralise global and port setup code into mv88e6xxx.")
    Signed-off-by: Steffen B√§tz <steffen@innosonix.de>
    Signed-off-by: Fabio Estevam <festevam@denx.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20230329150140.701559-1-festevam@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c6c0e8510a2a05edf5d337144b6aee301a262db
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Tue Mar 28 18:30:21 2023 -0700

    bnxt_en: Add missing 200G link speed reporting
    
    [ Upstream commit 581bce7bcb7e7f100908728e7b292e266c76895b ]
    
    bnxt_fw_to_ethtool_speed() is missing the case statement for 200G
    link speed reported by firmware.  As a result, ethtool will report
    unknown speed when the firmware reports 200G link speed.
    
    Fixes: 532262ba3b84 ("bnxt_en: ethtool: support PAM4 link speeds up to 200G")
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c519174366a372ee9b669135ba0fe48f5708c5b4
Author: Kalesh AP <kalesh-anakkur.purayil@broadcom.com>
Date:   Tue Mar 28 18:30:20 2023 -0700

    bnxt_en: Fix typo in PCI id to device description string mapping
    
    [ Upstream commit 62aad36ed31abc80f35db11e187e690448a79f7d ]
    
    Fix 57502 and 57508 NPAR description string entries.  The typos
    caused these devices to not match up with lspci output.
    
    Fixes: 49c98421e6ab ("bnxt_en: Add PCI IDs for 57500 series NPAR devices.")
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Kalesh AP <kalesh-anakkur.purayil@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24722a0e09251802729f24adff86bfbef302e37c
Author: Kalesh AP <kalesh-anakkur.purayil@broadcom.com>
Date:   Tue Mar 28 18:30:19 2023 -0700

    bnxt_en: Fix reporting of test result in ethtool selftest
    
    [ Upstream commit 83714dc3db0e4a088673601bc8099b079bc1a077 ]
    
    When the selftest command fails, driver is not reporting the failure
    by updating the "test->flags" when bnxt_close_nic() fails.
    
    Fixes: eb51365846bc ("bnxt_en: Add basic ethtool -t selftest support.")
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Reviewed-by: Somnath Kotur <somnath.kotur@broadcom.com>
    Signed-off-by: Kalesh AP <kalesh-anakkur.purayil@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e3654bf679fad6625f3d9d87dcd3df052538b7d
Author: Radoslaw Tyl <radoslawx.tyl@intel.com>
Date:   Tue Mar 28 10:26:59 2023 -0700

    i40e: fix registers dump after run ethtool adapter self test
    
    [ Upstream commit c5cff16f461a4a434a9915a7be7ac9ced861a8a4 ]
    
    Fix invalid registers dump from ethtool -d ethX after adapter self test
    by ethtool -t ethY. It causes invalid data display.
    
    The problem was caused by overwriting i40e_reg_list[].elements
    which is common for ethtool self test and dump.
    
    Fixes: 22dd9ae8afcc ("i40e: Rework register diagnostic")
    Signed-off-by: Radoslaw Tyl <radoslawx.tyl@intel.com>
    Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
    Tested-by: Arpana Arland <arpanax.arland@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20230328172659.3906413-1-anthony.l.nguyen@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d7b0b22ea2299087539156f8404e85f37426483
Author: Alex Elder <elder@linaro.org>
Date:   Tue Mar 28 11:27:51 2023 -0500

    net: ipa: compute DMA pool size properly
    
    [ Upstream commit 6c75dc94f2b27fff57b305af9236eea181a00b6c ]
    
    In gsi_trans_pool_init_dma(), the total size of a pool of memory
    used for DMA transactions is calculated.  However the calculation is
    done incorrectly.
    
    For 4KB pages, this total size is currently always more than one
    page, and as a result, the calculation produces a positive (though
    incorrect) total size.  The code still works in this case; we just
    end up with fewer DMA pool entries than we intended.
    
    Bjorn Andersson tested booting a kernel with 16KB pages, and hit a
    null pointer derereference in sg_alloc_append_table_from_pages(),
    descending from gsi_trans_pool_init_dma().  The cause of this was
    that a 16KB total size was going to be allocated, and with 16KB
    pages the order of that allocation is 0.  The total_size calculation
    yielded 0, which eventually led to the crash.
    
    Correcting the total_size calculation fixes the problem.
    
    Reported-by: Bjorn Andersson <quic_bjorande@quicinc.com>
    Tested-by: Bjorn Andersson <quic_bjorande@quicinc.com>
    Fixes: 9dd441e4ed57 ("soc: qcom: ipa: GSI transactions")
    Reviewed-by: Mark Bloch <mbloch@nvidia.com>
    Signed-off-by: Alex Elder <elder@linaro.org>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Link: https://lore.kernel.org/r/20230328162751.2861791-1-elder@linaro.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81d2a7e93c8322ca6b858f6736d7fc3d034e6c23
Author: Tasos Sahanidis <tasos@tasossah.com>
Date:   Wed Mar 29 06:28:08 2023 +0300

    ALSA: ymfpci: Fix BUG_ON in probe function
    
    [ Upstream commit 6be2e7522eb529b41c16d459f33bbdbcddbf5c15 ]
    
    The snd_dma_buffer.bytes field now contains the aligned size, which this
    snd_BUG_ON() did not account for, resulting in the following:
    
    [    9.625915] ------------[ cut here ]------------
    [    9.633440] WARNING: CPU: 0 PID: 126 at sound/pci/ymfpci/ymfpci_main.c:2168 snd_ymfpci_create+0x681/0x698 [snd_ymfpci]
    [    9.648926] Modules linked in: snd_ymfpci(+) snd_intel_dspcfg kvm(+) snd_intel_sdw_acpi snd_ac97_codec snd_mpu401_uart snd_opl3_lib irqbypass snd_hda_codec gameport snd_rawmidi crct10dif_pclmul crc32_pclmul cfg80211 snd_hda_core polyval_clmulni polyval_generic gf128mul snd_seq_device ghash_clmulni_intel snd_hwdep ac97_bus sha512_ssse3 rfkill snd_pcm aesni_intel tg3 snd_timer crypto_simd snd mxm_wmi libphy cryptd k10temp fam15h_power pcspkr soundcore sp5100_tco wmi acpi_cpufreq mac_hid dm_multipath sg loop fuse dm_mod bpf_preload ip_tables x_tables ext4 crc32c_generic crc16 mbcache jbd2 sr_mod cdrom ata_generic pata_acpi firewire_ohci crc32c_intel firewire_core xhci_pci crc_itu_t pata_via xhci_pci_renesas floppy
    [    9.711849] CPU: 0 PID: 126 Comm: kworker/0:2 Not tainted 6.1.21-1-lts #1 08d2e5ece03136efa7c6aeea9a9c40916b1bd8da
    [    9.722200] Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M./990FX Extreme4, BIOS P2.70 06/05/2014
    [    9.732204] Workqueue: events work_for_cpu_fn
    [    9.736580] RIP: 0010:snd_ymfpci_create+0x681/0x698 [snd_ymfpci]
    [    9.742594] Code: 8c c0 4c 89 e2 48 89 df 48 c7 c6 92 c6 8c c0 e8 15 d0 e9 ff 48 83 c4 08 44 89 e8 5b 5d 41 5c 41 5d 41 5e 41 5f e9 d3 7a 33 e3 <0f> 0b e9 cb fd ff ff 41 bd fb ff ff ff eb db 41 bd f4 ff ff ff eb
    [    9.761358] RSP: 0018:ffffab64804e7da0 EFLAGS: 00010287
    [    9.766594] RAX: ffff8fa2df06c400 RBX: ffff8fa3073a8000 RCX: ffff8fa303fbc4a8
    [    9.773734] RDX: ffff8fa2df06d000 RSI: 0000000000000010 RDI: 0000000000000020
    [    9.780876] RBP: ffff8fa300b5d0d0 R08: ffff8fa3073a8e50 R09: 00000000df06bf00
    [    9.788018] R10: ffff8fa2df06bf00 R11: 00000000df068200 R12: ffff8fa3073a8918
    [    9.795159] R13: 0000000000000000 R14: 0000000000000080 R15: ffff8fa2df068200
    [    9.802317] FS:  0000000000000000(0000) GS:ffff8fa9fec00000(0000) knlGS:0000000000000000
    [    9.810414] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    9.816158] CR2: 000055febaf66500 CR3: 0000000101a2e000 CR4: 00000000000406f0
    [    9.823301] Call Trace:
    [    9.825747]  <TASK>
    [    9.827889]  snd_card_ymfpci_probe+0x194/0x950 [snd_ymfpci b78a5fe64b5663a6390a909c67808567e3e73615]
    [    9.837030]  ? finish_task_switch.isra.0+0x90/0x2d0
    [    9.841918]  local_pci_probe+0x45/0x80
    [    9.845680]  work_for_cpu_fn+0x1a/0x30
    [    9.849431]  process_one_work+0x1c7/0x380
    [    9.853464]  worker_thread+0x1af/0x390
    [    9.857225]  ? rescuer_thread+0x3b0/0x3b0
    [    9.861254]  kthread+0xde/0x110
    [    9.864414]  ? kthread_complete_and_exit+0x20/0x20
    [    9.869210]  ret_from_fork+0x22/0x30
    [    9.872792]  </TASK>
    [    9.874985] ---[ end trace 0000000000000000 ]---
    
    Fixes: 5c1733e33c88 ("ALSA: memalloc: Align buffer allocations in page size")
    Signed-off-by: Tasos Sahanidis <tasos@tasossah.com>
    Link: https://lore.kernel.org/r/20230329032808.170403-1-tasos@tasossah.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95642872c466030240199ba796a40771c493ed0c
Author: Tasos Sahanidis <tasos@tasossah.com>
Date:   Wed Mar 29 06:24:22 2023 +0300

    ALSA: ymfpci: Create card with device-managed snd_devm_card_new()
    
    [ Upstream commit f33fc1576757741479452255132d6e3aaf558ffe ]
    
    snd_card_ymfpci_remove() was removed in commit c6e6bb5eab74 ("ALSA:
    ymfpci: Allocate resources with device-managed APIs"), but the call to
    snd_card_new() was not replaced with snd_devm_card_new().
    
    Since there was no longer a call to snd_card_free, unloading the module
    would eventually result in Oops:
    
    [697561.532887] BUG: unable to handle page fault for address: ffffffffc0924480
    [697561.532893] #PF: supervisor read access in kernel mode
    [697561.532896] #PF: error_code(0x0000) - not-present page
    [697561.532899] PGD ae1e15067 P4D ae1e15067 PUD ae1e17067 PMD 11a8f5067 PTE 0
    [697561.532905] Oops: 0000 [#1] PREEMPT SMP NOPTI
    [697561.532909] CPU: 21 PID: 5080 Comm: wireplumber Tainted: G        W  OE      6.2.7 #1
    [697561.532914] Hardware name: System manufacturer System Product Name/TUF GAMING X570-PLUS, BIOS 4408 10/28/2022
    [697561.532916] RIP: 0010:try_module_get.part.0+0x1a/0xe0
    [697561.532924] Code: 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 0f 1f 44 00 00 55 48 89 e5 41 55 41 54 49 89 fc bf 01 00 00 00 e8 56 3c f8 ff <41> 83 3c 24 02 0f 84 96 00 00 00 41 8b 84 24 30 03 00 00 85 c0 0f
    [697561.532927] RSP: 0018:ffffbe9b858c3bd8 EFLAGS: 00010246
    [697561.532930] RAX: ffff9815d14f1900 RBX: ffff9815c14e6000 RCX: 0000000000000000
    [697561.532933] RDX: 0000000000000000 RSI: ffffffffc055092c RDI: ffffffffb3778c1a
    [697561.532935] RBP: ffffbe9b858c3be8 R08: 0000000000000040 R09: ffff981a1a741380
    [697561.532937] R10: ffffbe9b858c3c80 R11: 00000009d56533a6 R12: ffffffffc0924480
    [697561.532939] R13: ffff9823439d8500 R14: 0000000000000025 R15: ffff9815cd109f80
    [697561.532942] FS:  00007f13084f1f80(0000) GS:ffff9824aef40000(0000) knlGS:0000000000000000
    [697561.532945] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [697561.532947] CR2: ffffffffc0924480 CR3: 0000000145344000 CR4: 0000000000350ee0
    [697561.532949] Call Trace:
    [697561.532951]  <TASK>
    [697561.532955]  try_module_get+0x13/0x30
    [697561.532960]  snd_ctl_open+0x61/0x1c0 [snd]
    [697561.532976]  snd_open+0xb4/0x1e0 [snd]
    [697561.532989]  chrdev_open+0xc7/0x240
    [697561.532995]  ? fsnotify_perm.part.0+0x6e/0x160
    [697561.533000]  ? __pfx_chrdev_open+0x10/0x10
    [697561.533005]  do_dentry_open+0x169/0x440
    [697561.533009]  vfs_open+0x2d/0x40
    [697561.533012]  path_openat+0xa9d/0x10d0
    [697561.533017]  ? debug_smp_processor_id+0x17/0x20
    [697561.533022]  ? trigger_load_balance+0x65/0x370
    [697561.533026]  do_filp_open+0xb2/0x160
    [697561.533032]  ? _raw_spin_unlock+0x19/0x40
    [697561.533036]  ? alloc_fd+0xa9/0x190
    [697561.533040]  do_sys_openat2+0x9f/0x160
    [697561.533044]  __x64_sys_openat+0x55/0x90
    [697561.533048]  do_syscall_64+0x3b/0x90
    [697561.533052]  entry_SYSCALL_64_after_hwframe+0x72/0xdc
    [697561.533056] RIP: 0033:0x7f1308a40db4
    [697561.533059] Code: 24 20 eb 8f 66 90 44 89 54 24 0c e8 46 68 f8 ff 44 8b 54 24 0c 44 89 e2 48 89 ee 41 89 c0 bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 77 32 44 89 c7 89 44 24 0c e8 78 68 f8 ff 8b 44
    [697561.533062] RSP: 002b:00007ffcce664450 EFLAGS: 00000293 ORIG_RAX: 0000000000000101
    [697561.533066] RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f1308a40db4
    [697561.533068] RDX: 0000000000080000 RSI: 00007ffcce664690 RDI: 00000000ffffff9c
    [697561.533070] RBP: 00007ffcce664690 R08: 0000000000000000 R09: 0000000000000012
    [697561.533072] R10: 0000000000000000 R11: 0000000000000293 R12: 0000000000080000
    [697561.533074] R13: 00007f13054b069b R14: 0000565209f83200 R15: 0000000000000000
    [697561.533078]  </TASK>
    
    Fixes: c6e6bb5eab74 ("ALSA: ymfpci: Allocate resources with device-managed APIs")
    Signed-off-by: Tasos Sahanidis <tasos@tasossah.com>
    Link: https://lore.kernel.org/r/20230329032422.170024-1-tasos@tasossah.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cb4f23e4f7ae5da2852e8a4c13734b8fd30119b
Author: Jakob Koschel <jkl820.git@gmail.com>
Date:   Mon Mar 20 13:48:15 2023 +0100

    ice: fix invalid check for empty list in ice_sched_assoc_vsi_to_agg()
    
    [ Upstream commit e9a1cc2e4c4ee7c7e60fb26345618c2522a2a10f ]
    
    The code implicitly assumes that the list iterator finds a correct
    handle. If 'vsi_handle' is not found the 'old_agg_vsi_info' was
    pointing to an bogus memory location. For safety a separate list
    iterator variable should be used to make the != NULL check on
    'old_agg_vsi_info' correct under any circumstances.
    
    Additionally Linus proposed to avoid any use of the list iterator
    variable after the loop, in the attempt to move the list iterator
    variable declaration into the macro to avoid any potential misuse after
    the loop. Using it in a pointer comparison after the loop is undefined
    behavior and should be omitted if possible [1].
    
    Fixes: 37c592062b16 ("ice: remove the VSI info from previous agg")
    Link: https://lore.kernel.org/all/CAHk-=wgRr_D8CB-D9Kg-c=EHreAsk5SqXPwr9Y7k9sA6cWXJ6w@mail.gmail.com/ [1]
    Signed-off-by: Jakob Koschel <jkl820.git@gmail.com>
    Tested-by: Arpana Arland <arpanax.arland@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 938eba5b434d0927a9abf2d75139175a5df0a7c2
Author: Junfeng Guo <junfeng.guo@intel.com>
Date:   Tue Mar 14 10:03:15 2023 +0800

    ice: add profile conflict check for AVF FDIR
    
    [ Upstream commit 29486b6df3e6a63b57d1ed1dce06051267282ff4 ]
    
    Add profile conflict check while adding some FDIR rules to avoid
    unexpected flow behavior, rules may have conflict including:
            IPv4 <---> {IPv4_UDP, IPv4_TCP, IPv4_SCTP}
            IPv6 <---> {IPv6_UDP, IPv6_TCP, IPv6_SCTP}
    
    For example, when we create an FDIR rule for IPv4, this rule will work
    on packets including IPv4, IPv4_UDP, IPv4_TCP and IPv4_SCTP. But if we
    then create an FDIR rule for IPv4_UDP and then destroy it, the first
    FDIR rule for IPv4 cannot work on pkt IPv4_UDP then.
    
    To prevent this unexpected behavior, we add restriction in software
    when creating FDIR rules by adding necessary profile conflict check.
    
    Fixes: 1f7ea1cd6a37 ("ice: Enable FDIR Configure for AVF")
    Signed-off-by: Junfeng Guo <junfeng.guo@intel.com>
    Tested-by: Rafal Romanowski <rafal.romanowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ea60b230d1993bbae37bbfe0cd1e79fe6f28230
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon Mar 27 10:31:38 2023 +0200

    smsc911x: avoid PHY being resumed when interface is not up
    
    [ Upstream commit f22c993f31fa9615df46e49cd768b713d39a852f ]
    
    SMSC911x doesn't need mdiobus suspend/resume, that's why it sets
    'mac_managed_pm'. However, setting it needs to be moved from init to
    probe, so mdiobus PM functions will really never be called (e.g. when
    the interface is not up yet during suspend/resume).
    
    Fixes: 3ce9f2bef755 ("net: smsc911x: Stop and start PHY during suspend and resume")
    Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230327083138.6044-1-wsa+renesas@sang-engineering.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41f77a6d9841c9020df9b77a05bdfb5016d7010e
Author: Sven Auhagen <sven.auhagen@voleatech.de>
Date:   Sat Mar 25 17:41:05 2023 +0100

    net: mvpp2: parser fix PPPoE
    
    [ Upstream commit 031a416c2170866be5132ae42e14453d669b0cb1 ]
    
    In PPPoE add all IPv4 header option length to the parser
    and adjust the L3 and L4 offset accordingly.
    Currently the L4 match does not work with PPPoE and
    all packets are matched as L3 IP4 OPT.
    
    Fixes: 3f518509dedc ("ethernet: Add new driver for Marvell Armada 375 network unit")
    Signed-off-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec117d22f1432fbde2cbce8d027a1a1c8598f75c
Author: Sven Auhagen <sven.auhagen@voleatech.de>
Date:   Sat Mar 25 17:40:53 2023 +0100

    net: mvpp2: parser fix QinQ
    
    [ Upstream commit a587a84813b90372cb0a7565e201a4075da67919 ]
    
    The mvpp2 parser entry for QinQ has the inner and outer VLAN
    in the wrong order.
    Fix the problem by swapping them.
    
    Fixes: 3f518509dedc ("ethernet: Add new driver for Marvell Armada 375 network unit")
    Signed-off-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Reviewed-by: Marcin Wojtas <mw@semihalf.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18d6e95fbb081ede46ef99a2cc4cb470c12b1f00
Author: Sven Auhagen <sven.auhagen@voleatech.de>
Date:   Sat Mar 25 17:40:29 2023 +0100

    net: mvpp2: classifier flow fix fragmentation flags
    
    [ Upstream commit 9a251cae51d57289908222e6c322ca61fccc25fd ]
    
    Add missing IP Fragmentation Flag.
    
    Fixes: f9358e12a0af ("net: mvpp2: split ingress traffic into multiple flows")
    Signed-off-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Reviewed-by: Marcin Wojtas <mw@semihalf.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa45d3dd74e9d44a43f92b14bb472120b7d577ee
Author: Alyssa Ross <hi@alyssa.is>
Date:   Mon Mar 20 13:54:30 2023 +0100

    loop: LOOP_CONFIGURE: send uevents for partitions
    
    [ Upstream commit bb430b69422640891b0b8db762885730579a4145 ]
    
    LOOP_CONFIGURE is, as far as I understand it, supposed to be a way to
    combine LOOP_SET_FD and LOOP_SET_STATUS64 into a single syscall.  When
    using LOOP_SET_FD+LOOP_SET_STATUS64, a single uevent would be sent for
    each partition found on the loop device after the second ioctl(), but
    when using LOOP_CONFIGURE, no such uevent was being sent.
    
    In the old setup, uevents are disabled for LOOP_SET_FD, but not for
    LOOP_SET_STATUS64.  This makes sense, as it prevents uevents being
    sent for a partially configured device during LOOP_SET_FD - they're
    only sent at the end of LOOP_SET_STATUS64.  But for LOOP_CONFIGURE,
    uevents were disabled for the entire operation, so that final
    notification was never issued.  To fix this, reduce the critical
    section to exclude the loop_reread_partitions() call, which causes
    the uevents to be issued, to after uevents are re-enabled, matching
    the behaviour of the LOOP_SET_FD+LOOP_SET_STATUS64 combination.
    
    I noticed this because Busybox's losetup program recently changed from
    using LOOP_SET_FD+LOOP_SET_STATUS64 to LOOP_CONFIGURE, and this broke
    my setup, for which I want a notification from the kernel any time a
    new partition becomes available.
    
    Signed-off-by: Alyssa Ross <hi@alyssa.is>
    [hch: reduced the critical section]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Fixes: 3448914e8cc5 ("loop: Add LOOP_CONFIGURE ioctl")
    Link: https://lore.kernel.org/r/20230320125430.55367-1-hch@lst.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83ee49ab185d721c839f46fe75b898e88cd230c7
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Mar 30 07:29:14 2022 +0200

    loop: suppress uevents while reconfiguring the device
    
    [ Upstream commit 498ef5c777d9c89693b70cc453b40c392120ea1b ]
    
    Currently, udev change event is generated for a loop device before the
    device is ready for IO. Due to serialization on lo->lo_mutex in
    lo_open() this does not matter because anybody is able to open the
    device and do IO only after the configuration is finished. However this
    synchronization in lo_open() is going away so make sure userspace
    reacting to the change event will see the new device state by generating
    the event only when the device is setup.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20220330052917.2566582-13-hch@lst.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: bb430b694226 ("loop: LOOP_CONFIGURE: send uevents for partitions")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa2bff25e9bb10c935c7ffe3d5f5975bdccb1749
Author: Tony Krowiak <akrowiak@linux.ibm.com>
Date:   Mon Mar 20 11:04:47 2023 -0400

    s390/vfio-ap: fix memory leak in vfio_ap device driver
    
    [ Upstream commit 8f8cf767589f2131ae5d40f3758429095c701c84 ]
    
    The device release callback function invoked to release the matrix device
    uses the dev_get_drvdata(device *dev) function to retrieve the
    pointer to the vfio_matrix_dev object in order to free its storage. The
    problem is, this object is not stored as drvdata with the device; since the
    kfree function will accept a NULL pointer, the memory for the
    vfio_matrix_dev object is never freed.
    
    Since the device being released is contained within the vfio_matrix_dev
    object, the container_of macro will be used to retrieve its pointer.
    
    Fixes: 1fde573413b5 ("s390: vfio-ap: base implementation of VFIO AP device driver")
    Signed-off-by: Tony Krowiak <akrowiak@linux.ibm.com>
    Reviewed-by: Harald Freudenberger <freude@linux.ibm.com>
    Link: https://lore.kernel.org/r/20230320150447.34557-1-akrowiak@linux.ibm.com
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf70e0eab64c625da84d9fdf4e84466b79418920
Author: Ivan Orlov <ivan.orlov0322@gmail.com>
Date:   Tue Mar 14 16:04:45 2023 +0400

    can: bcm: bcm_tx_setup(): fix KMSAN uninit-value in vfs_write
    
    [ Upstream commit 2b4c99f7d9a57ecd644eda9b1fb0a1072414959f ]
    
    Syzkaller reported the following issue:
    
    =====================================================
    BUG: KMSAN: uninit-value in aio_rw_done fs/aio.c:1520 [inline]
    BUG: KMSAN: uninit-value in aio_write+0x899/0x950 fs/aio.c:1600
     aio_rw_done fs/aio.c:1520 [inline]
     aio_write+0x899/0x950 fs/aio.c:1600
     io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
     __do_sys_io_submit fs/aio.c:2078 [inline]
     __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
     __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:766 [inline]
     slab_alloc_node mm/slub.c:3452 [inline]
     __kmem_cache_alloc_node+0x71f/0xce0 mm/slub.c:3491
     __do_kmalloc_node mm/slab_common.c:967 [inline]
     __kmalloc+0x11d/0x3b0 mm/slab_common.c:981
     kmalloc_array include/linux/slab.h:636 [inline]
     bcm_tx_setup+0x80e/0x29d0 net/can/bcm.c:930
     bcm_sendmsg+0x3a2/0xce0 net/can/bcm.c:1351
     sock_sendmsg_nosec net/socket.c:714 [inline]
     sock_sendmsg net/socket.c:734 [inline]
     sock_write_iter+0x495/0x5e0 net/socket.c:1108
     call_write_iter include/linux/fs.h:2189 [inline]
     aio_write+0x63a/0x950 fs/aio.c:1600
     io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
     __do_sys_io_submit fs/aio.c:2078 [inline]
     __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
     __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    CPU: 1 PID: 5034 Comm: syz-executor350 Not tainted 6.2.0-rc6-syzkaller-80422-geda666ff2276 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/12/2023
    =====================================================
    
    We can follow the call chain and find that 'bcm_tx_setup' function
    calls 'memcpy_from_msg' to copy some content to the newly allocated
    frame of 'op->frames'. After that the 'len' field of copied structure
    being compared with some constant value (64 or 8). However, if
    'memcpy_from_msg' returns an error, we will compare some uninitialized
    memory. This triggers 'uninit-value' issue.
    
    This patch will add 'memcpy_from_msg' possible errors processing to
    avoid uninit-value issue.
    
    Tested via syzkaller
    
    Reported-by: syzbot+c9bfd85eca611ebf5db1@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=47f897f8ad958bbde5790ebf389b5e7e0a345089
    Signed-off-by: Ivan Orlov <ivan.orlov0322@gmail.com>
    Fixes: 6f3b911d5f29b ("can: bcm: add support for CAN FD frames")
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Link: https://lore.kernel.org/all/20230314120445.12407-1-ivan.orlov0322@gmail.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 959348f7c300b23579404081af72eebae12809b8
Author: Rajvi Jingar <rajvi.jingar@linux.intel.com>
Date:   Mon Mar 20 14:20:29 2023 -0700

    platform/x86/intel/pmc: Alder Lake PCH slp_s0_residency fix
    
    [ Upstream commit fb5755100a0a5aa5957bdb204fd1e249684557fc ]
    
    For platforms with Alder Lake PCH (Alder Lake S and Raptor Lake S) the
    slp_s0_residency attribute has been reporting the wrong value. Unlike other
    platforms, ADL PCH does not have a counter for the time that the SLP_S0
    signal was asserted. Instead, firmware uses the aggregate of the Low Power
    Mode (LPM) substate counters as the S0ix value.  Since the LPM counters run
    at a different frequency, this lead to misreporting of the S0ix time.
    
    Add a check for Alder Lake PCH and adjust the frequency accordingly when
    display slp_s0_residency.
    
    Fixes: bbab31101f44 ("platform/x86/intel: pmc/core: Add Alderlake support to pmc core driver")
    Signed-off-by: Rajvi Jingar <rajvi.jingar@linux.intel.com>
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Reviewed-by: Rajneesh Bhardwaj <irenic.rajneesh@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20230320212029.3154407-1-david.e.box@linux.intel.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8e7ff3071bf1de3f1e8bf56b4f7cda52554ad40
Author: Imre Deak <imre.deak@intel.com>
Date:   Thu Mar 16 15:17:13 2023 +0200

    drm/i915/tc: Fix the ICL PHY ownership check in TC-cold state
    
    [ Upstream commit 38c583019484f190d5b33f59b8ae810e6b1763c6 ]
    
    The commit renaming icl_tc_phy_is_in_safe_mode() to
    icl_tc_phy_take_ownership() didn't flip the function's return value
    accordingly, fix this up.
    
    This didn't cause an actual problem besides state check errors, since
    the function is only used during HW readout.
    
    Cc: Jos√© Roberto de Souza <jose.souza@intel.com>
    Fixes: f53979d68a77 ("drm/i915/display/tc: Rename safe_mode functions ownership")
    Reviewed-by: Jos√© Roberto de Souza <jose.souza@intel.com>
    Reviewed-by: Ville Syrj√§l√§ <ville.syrjala@linux.intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230316131724.359612-4-imre.deak@intel.com
    (cherry picked from commit f2c7959dda614d9b7c6a41510492de39d31705ec)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61e2e6d444cdc53a308a323d17b32a0a2919d7d4
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sat Mar 25 13:28:15 2023 +0200

    net: stmmac: don't reject VLANs when IFF_PROMISC is set
    
    [ Upstream commit a7602e7332b97cfbec7bacb0f1ade99a575fe104 ]
    
    The blamed commit has introduced the following tests to
    dwmac4_add_hw_vlan_rx_fltr(), called from stmmac_vlan_rx_add_vid():
    
            if (hw->promisc) {
                    netdev_err(dev,
                               "Adding VLAN in promisc mode not supported\n");
                    return -EPERM;
            }
    
    "VLAN promiscuous" mode is keyed in this driver to IFF_PROMISC, and so,
    vlan_vid_add() and vlan_vid_del() calls cannot take place in IFF_PROMISC
    mode. I have the following 2 arguments that this restriction is.... hm,
    how shall I put it nicely... unproductive :)
    
    First, take the case of a Linux bridge. If the kernel is compiled with
    CONFIG_BRIDGE_VLAN_FILTERING=y, then this bridge shall have a VLAN
    database. The bridge shall try to call vlan_add_vid() on its bridge
    ports for each VLAN in the VLAN table. It will do this irrespectively of
    whether that port is *currently* VLAN-aware or not. So it will do this
    even when the bridge was created with vlan_filtering 0.
    But the Linux bridge, in VLAN-unaware mode, configures its ports in
    promiscuous (IFF_PROMISC) mode, so that they accept packets with any
    MAC DA (a switch must do this in order to forward those packets which
    are not directly targeted to its MAC address).
    
    As a result, the stmmac driver does not work as a bridge port, when the
    kernel is compiled with CONFIG_BRIDGE_VLAN_FILTERING=y.
    
    $ ip link add br0 type bridge && ip link set br0 up
    $ ip link set eth0 master br0 && ip link set eth0 up
    [ 2333.943296] br0: port 1(eth0) entered blocking state
    [ 2333.943381] br0: port 1(eth0) entered disabled state
    [ 2333.943782] device eth0 entered promiscuous mode
    [ 2333.944080] 4033c000.ethernet eth0: Adding VLAN in promisc mode not supported
    [ 2333.976509] 4033c000.ethernet eth0: failed to initialize vlan filtering on this port
    RTNETLINK answers: Operation not permitted
    
    Secondly, take the case of stmmac as DSA master. Some switch tagging
    protocols are based on 802.1Q VLANs (tag_sja1105.c), and as such,
    tag_8021q.c uses vlan_vid_add() to work with VLAN-filtering DSA masters.
    But also, when a DSA port becomes promiscuous (for example when it joins
    a bridge), the DSA framework also makes the DSA master promiscuous.
    
    Moreover, for every VLAN that a DSA switch sends to the CPU, DSA also
    programs a VLAN filter on the DSA master, because if the the DSA switch
    uses a tail tag, then the hardware frame parser of the DSA master will
    see VLAN as VLAN, and might filter them out, for being unknown.
    
    Due to the above 2 reasons, my belief is that the stmmac driver does not
    get to choose to not accept vlan_vid_add() calls while IFF_PROMISC is
    enabled, because the 2 are completely independent and there are code
    paths in the network stack which directly lead to this situation
    occurring, without the user's direct input.
    
    In fact, my belief is that "VLAN promiscuous" mode should have never
    been keyed on IFF_PROMISC in the first place, but rather, on the
    NETIF_F_HW_VLAN_CTAG_FILTER feature flag which can be toggled by the
    user through ethtool -k, when present in netdev->hw_features.
    
    In the stmmac driver, NETIF_F_HW_VLAN_CTAG_FILTER is only present in
    "features", making this feature "on [fixed]".
    
    I have this belief because I am unaware of any definition of promiscuity
    which implies having an effect on anything other than MAC DA (therefore
    not VLAN). However, I seem to be rather alone in having this opinion,
    looking back at the disagreements from this discussion:
    https://lore.kernel.org/netdev/20201110153958.ci5ekor3o2ekg3ky@ipetronik.com/
    
    In any case, to remove the vlan_vid_add() dependency on !IFF_PROMISC,
    one would need to remove the check and see what fails. I guess the test
    was there because of the way in which dwmac4_vlan_promisc_enable() is
    implemented.
    
    For context, the dwmac4 supports Perfect Filtering for a limited number
    of VLANs - dwmac4_get_num_vlan(), priv->hw->num_vlan, with a fallback on
    Hash Filtering - priv->dma_cap.vlhash - see stmmac_vlan_update(), also
    visible in cat /sys/kernel/debug/stmmaceth/eth0/dma_cap | grep 'VLAN
    Hash Filtering'.
    
    The perfect filtering is based on MAC_VLAN_Tag_Filter/MAC_VLAN_Tag_Data
    registers, accessed in the driver through dwmac4_write_vlan_filter().
    
    The hash filtering is based on the MAC_VLAN_Hash_Table register, named
    GMAC_VLAN_HASH_TABLE in the driver and accessed by dwmac4_update_vlan_hash().
    The control bit for enabling hash filtering is GMAC_VLAN_VTHM
    (MAC_VLAN_Tag_Ctrl bit VTHM: VLAN Tag Hash Table Match Enable).
    
    Now, the description of dwmac4_vlan_promisc_enable() is that it iterates
    through the driver's cache of perfect filter entries (hw->vlan_filter[i],
    added by dwmac4_add_hw_vlan_rx_fltr()), and evicts them from hardware by
    unsetting their GMAC_VLAN_TAG_DATA_VEN (MAC_VLAN_Tag_Data bit VEN - VLAN
    Tag Enable) bit. Then it unsets the GMAC_VLAN_VTHM bit, which disables
    hash matching.
    
    This leaves the MAC, according to table "VLAN Match Status" from the
    documentation, to always enter these data paths:
    
    VID    |VLAN Perfect Filter |VTHM Bit |VLAN Hash Filter |Final VLAN Match
           |Match Result        |         |Match Result     |Status
    -------|--------------------|---------|-----------------|----------------
    VID!=0 |Fail                |0        |don't care       |Pass
    
    So, dwmac4_vlan_promisc_enable() does its job, but by unsetting
    GMAC_VLAN_VTHM, it conflicts with the other code path which controls
    this bit: dwmac4_update_vlan_hash(), called through stmmac_update_vlan_hash()
    from stmmac_vlan_rx_add_vid() and from stmmac_vlan_rx_kill_vid().
    This is, I guess, why dwmac4_add_hw_vlan_rx_fltr() is not allowed to run
    after dwmac4_vlan_promisc_enable() has unset GMAC_VLAN_VTHM: because if
    it did, then dwmac4_update_vlan_hash() would set GMAC_VLAN_VTHM again,
    breaking the "VLAN promiscuity".
    
    It turns out that dwmac4_vlan_promisc_enable() is way too complicated
    for what needs to be done. The MAC_Packet_Filter register also has the
    VTFE bit (VLAN Tag Filter Enable), which simply controls whether VLAN
    tagged packets which don't match the filtering tables (either perfect or
    hash) are dropped or not. At the moment, this driver unconditionally
    sets GMAC_PACKET_FILTER_VTFE if NETIF_F_HW_VLAN_CTAG_FILTER was detected
    through the priv->dma_cap.vlhash capability bits of the device, in
    stmmac_dvr_probe().
    
    I would suggest deleting the unnecessarily complex logic from
    dwmac4_vlan_promisc_enable(), and simply unsetting GMAC_PACKET_FILTER_VTFE
    when becoming IFF_PROMISC, which has the same effect of allowing packets
    with any VLAN tags, but has the additional benefit of being able to run
    concurrently with stmmac_vlan_rx_add_vid() and stmmac_vlan_rx_kill_vid().
    
    As much as I believe that the VTFE bit should have been exclusively
    controlled by NETIF_F_HW_VLAN_CTAG_FILTER through ethtool, and not by
    IFF_PROMISC, changing that is not a punctual fix to the problem, and it
    would probably break the VFFQ feature added by the later commit
    e0f9956a3862 ("net: stmmac: Add option for VLAN filter fail queue
    enable"). From the commit description, VFFQ needs IFF_PROMISC=on and
    VTFE=off in order to work (and this change respects that). But if VTFE
    was changed to be controlled through ethtool -k, then a user-visible
    change would have been introduced in Intel's scripts (a need to run
    "ethtool -k eth0 rx-vlan-filter off" which did not exist before).
    
    The patch was tested with this set of commands:
    
      ip link set eth0 up
      ip link add link eth0 name eth0.100 type vlan id 100
      ip addr add 192.168.100.2/24 dev eth0.100 && ip link set eth0.100 up
      ip link set eth0 promisc on
      ip link add link eth0 name eth0.101 type vlan id 101
      ip addr add 192.168.101.2/24 dev eth0.101 && ip link set eth0.101 up
      ip link set eth0 promisc off
      ping -c 5 192.168.100.1
      ping -c 5 192.168.101.1
      ip link set eth0 promisc on
      ping -c 5 192.168.100.1
      ping -c 5 192.168.101.1
      ip link del eth0.100
      ip link del eth0.101
      # Wait for VLAN-tagged pings from the other end...
      # Check with "tcpdump -i eth0 -e -n -p" and we should see them
      ip link set eth0 promisc off
      # Wait for VLAN-tagged pings from the other end...
      # Check with "tcpdump -i eth0 -e -n -p" and we shouldn't see them
      # anymore, but remove the "-p" argument from tcpdump and they're there.
    
    Fixes: c89f44ff10fd ("net: stmmac: Add support for VLAN promiscuous mode")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d5cebf57296f0189a61482035ad420384eedead
Author: Faicker Mo <faicker.mo@ucloud.cn>
Date:   Fri Mar 24 17:19:54 2023 +0800

    net/net_failover: fix txq exceeding warning
    
    [ Upstream commit e3cbdcb0fbb61045ef3ce0e072927cc41737f787 ]
    
    The failover txq is inited as 16 queues.
    when a packet is transmitted from the failover device firstly,
    the failover device will select the queue which is returned from
    the primary device if the primary device is UP and running.
    If the primary device txq is bigger than the default 16,
    it can lead to the following warning:
    eth0 selects TX queue 18, but real number of TX queues is 16
    
    The warning backtrace is:
    [   32.146376] CPU: 18 PID: 9134 Comm: chronyd Tainted: G            E      6.2.8-1.el7.centos.x86_64 #1
    [   32.147175] Hardware name: Red Hat KVM, BIOS 1.10.2-3.el7_4.1 04/01/2014
    [   32.147730] Call Trace:
    [   32.147971]  <TASK>
    [   32.148183]  dump_stack_lvl+0x48/0x70
    [   32.148514]  dump_stack+0x10/0x20
    [   32.148820]  netdev_core_pick_tx+0xb1/0xe0
    [   32.149180]  __dev_queue_xmit+0x529/0xcf0
    [   32.149533]  ? __check_object_size.part.0+0x21c/0x2c0
    [   32.149967]  ip_finish_output2+0x278/0x560
    [   32.150327]  __ip_finish_output+0x1fe/0x2f0
    [   32.150690]  ip_finish_output+0x2a/0xd0
    [   32.151032]  ip_output+0x7a/0x110
    [   32.151337]  ? __pfx_ip_finish_output+0x10/0x10
    [   32.151733]  ip_local_out+0x5e/0x70
    [   32.152054]  ip_send_skb+0x19/0x50
    [   32.152366]  udp_send_skb.isra.0+0x163/0x3a0
    [   32.152736]  udp_sendmsg+0xba8/0xec0
    [   32.153060]  ? __folio_memcg_unlock+0x25/0x60
    [   32.153445]  ? __pfx_ip_generic_getfrag+0x10/0x10
    [   32.153854]  ? sock_has_perm+0x85/0xa0
    [   32.154190]  inet_sendmsg+0x6d/0x80
    [   32.154508]  ? inet_sendmsg+0x6d/0x80
    [   32.154838]  sock_sendmsg+0x62/0x70
    [   32.155152]  ____sys_sendmsg+0x134/0x290
    [   32.155499]  ___sys_sendmsg+0x81/0xc0
    [   32.155828]  ? _get_random_bytes.part.0+0x79/0x1a0
    [   32.156240]  ? ip4_datagram_release_cb+0x5f/0x1e0
    [   32.156649]  ? get_random_u16+0x69/0xf0
    [   32.156989]  ? __fget_light+0xcf/0x110
    [   32.157326]  __sys_sendmmsg+0xc4/0x210
    [   32.157657]  ? __sys_connect+0xb7/0xe0
    [   32.157995]  ? __audit_syscall_entry+0xce/0x140
    [   32.158388]  ? syscall_trace_enter.isra.0+0x12c/0x1a0
    [   32.158820]  __x64_sys_sendmmsg+0x24/0x30
    [   32.159171]  do_syscall_64+0x38/0x90
    [   32.159493]  entry_SYSCALL_64_after_hwframe+0x72/0xdc
    
    Fix that by reducing txq number as the non-existent primary-dev does.
    
    Fixes: cfc80d9a1163 ("net: Introduce net_failover driver")
    Signed-off-by: Faicker Mo <faicker.mo@ucloud.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 829a0d013c00e483e7f3b0032631c28b928bb6a5
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Mar 26 10:29:33 2023 +0200

    regulator: Handle deferred clk
    
    [ Upstream commit 02bcba0b9f9da706d5bd1e8cbeb83493863e17b5 ]
    
    devm_clk_get() can return -EPROBE_DEFER. So it is better to return the
    error code from devm_clk_get(), instead of a hard coded -ENOENT.
    
    This gives more opportunities to successfully probe the driver.
    
    Fixes: 8959e5324485 ("regulator: fixed: add possibility to enable by clock")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/18459fae3d017a66313699c7c8456b28158b2dd0.1679819354.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75155f4d8dcd1c1c19edc3e76a8e29ea68b4668f
Author: ChunHao Lin <hau@realtek.com>
Date:   Thu Mar 23 22:33:09 2023 +0800

    r8169: fix RTL8168H and RTL8107E rx crc error
    
    [ Upstream commit 33189f0a94b9639c058781fcf82e4ea3803b1682 ]
    
    When link speed is 10 Mbps and temperature is under -20¬∞C, RTL8168H and
    RTL8107E may have rx crc error. Disable phy 10 Mbps pll off to fix this
    issue.
    
    Fixes: 6e1d0b898818 ("r8169:add support for RTL8168H and RTL8107E")
    Signed-off-by: ChunHao Lin <hau@realtek.com>
    Reviewed-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4597e104a365d8765dcd89578b1126e4ef0b6c41
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Fri Mar 24 09:06:07 2023 +0100

    net: dsa: microchip: ksz8863_smi: fix bulk access
    
    [ Upstream commit 392ff7a84cbca34118ca286dfbfe8aee24605897 ]
    
    Current regmap bulk access is broken, resulting to wrong reads/writes
    if ksz_read64/ksz_write64 functions are used.
    Mostly this issue was visible by using ksz8_fdb_dump(), which returned
    corrupt MAC address.
    
    The reason is that regmap was configured to have max_raw_read/write,
    even if ksz8863_mdio_read/write functions are able to handle unlimited
    read/write accesses. On ksz_read64 function we are using multiple 32bit
    accesses by incrementing each access by 1 instead of 4. Resulting buffer
    had 01234567.12345678 instead of 01234567.89abcdef.
    
    We have multiple ways to fix it:
    - enable 4 byte alignment for 32bit accesses. Since the HW do not have
      this requirement. It will break driver.
    - disable max_raw_* limit.
    
    This patch is removing max_raw_* limit for regmap accesses in ksz8863_smi.
    
    Fixes: 60a364760002 ("net: dsa: microchip: Add Microchip KSZ8863 SMI based driver support")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0de1a26e6595b0e7969c5b35990a77a2d93104f
Author: SongJingyi <u201912584@hust.edu.cn>
Date:   Fri Mar 24 11:14:06 2023 +0800

    ptp_qoriq: fix memory leak in probe()
    
    [ Upstream commit f33642224e38d7e0d59336e10e7b4e370b1c4506 ]
    
    Smatch complains that:
    drivers/ptp/ptp_qoriq.c ptp_qoriq_probe()
    warn: 'base' from ioremap() not released.
    
    Fix this by revising the parameter from 'ptp_qoriq->base' to 'base'.
    This is only a bug if ptp_qoriq_init() returns on the
    first -ENODEV error path.
    For other error paths ptp_qoriq->base and base are the same.
    And this change makes the code more readable.
    
    Fixes: 7f4399ba405b ("ptp_qoriq: fix NULL access if ptp dt node missing")
    Signed-off-by: SongJingyi <u201912584@hust.edu.cn>
    Reviewed-by: Dan Carpenter <error27@gmail.com>
    Reviewed-by: Dongliang Mu <dzm91@hust.edu.cn>
    Link: https://lore.kernel.org/r/20230324031406.1895159-1-u201912584@hust.edu.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d84796008a89576dcb0d44345998465add32fe62
Author: Jerry Snitselaar <jsnitsel@redhat.com>
Date:   Fri Mar 24 12:32:04 2023 -0700

    scsi: mpt3sas: Don't print sense pool info twice
    
    [ Upstream commit d684a7a26f7d2c7122a4581ac966ed64e88fb29c ]
    
    _base_allocate_sense_dma_pool() already prints out the sense pool
    information, so don't print it a second time after calling it in
    _base_allocate_memory_pools(). In addition the version in
    _base_allocate_memory_pools() was using the wrong size value, sz, which was
    last assigned when doing some nvme calculations instead of sense_sz to
    determine the pool size in kilobytes.
    
    Cc: Sathya Prakash <sathya.prakash@broadcom.com>
    Cc: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Cc: Suganath Prabu Subramani <suganath-prabu.subramani@broadcom.com>
    Cc: MPT-FusionLinux.pdl@broadcom.com
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
    Fixes: 970ac2bb70e7 ("scsi: mpt3sas: Force sense buffer allocations to be within same 4 GB region")
    Signed-off-by: Jerry Snitselaar <jsnitsel@redhat.com>
    Link: https://lore.kernel.org/r/20230324193204.567932-1-jsnitsel@redhat.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27b1ae000bf13b932a8468489939cfa9a47a2c3c
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Fri Mar 24 16:01:34 2023 +0100

    scsi: megaraid_sas: Fix crash after a double completion
    
    [ Upstream commit 2309df27111a51734cb9240b4d3c25f2f3c6ab06 ]
    
    When a physical disk is attached directly "without JBOD MAP support" (see
    megasas_get_tm_devhandle()) then there is no real error handling in the
    driver.  Return FAILED instead of SUCCESS.
    
    Fixes: 18365b138508 ("megaraid_sas: Task management support")
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Link: https://lore.kernel.org/r/20230324150134.14696-1-thenzl@redhat.com
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d63a83146d2523c1e23eed6ad6e7d52b42055fc4
Author: √ç√±igo Huguet <ihuguet@redhat.com>
Date:   Thu Mar 23 09:34:17 2023 +0100

    sfc: ef10: don't overwrite offload features at NIC reset
    
    [ Upstream commit ca4a80e4bb7e87daf33b27d2ab9e4f5311018a89 ]
    
    At NIC reset, some offload features related to encapsulated traffic
    might have changed (this mainly happens if the firmware-variant is
    changed with the sfboot userspace tool). Because of this, features are
    checked and set again at reset time.
    
    However, this was not done right, and some features were improperly
    overwritten at NIC reset:
    - Tunneled IPv6 segmentation was always disabled
    - Features disabled with ethtool were reenabled
    - Features that becomes unsupported after the reset were not disabled
    
    Also, checking if the device supports IPV6_CSUM to enable TSO6 is no
    longer necessary because all currently supported devices support it.
    Additionally, move the assignment of some other features to the
    EF10_OFFLOAD_FEATURES macro, like it is done in ef100, leaving the
    selection of features in efx_pci_probe_post_io a bit cleaner.
    
    Fixes: ffffd2454a7a ("sfc: correctly advertise tunneled IPv6 segmentation")
    Fixes: 24b2c3751aa3 ("sfc: advertise encapsulated offloads on EF10")
    Reported-by: Tianhao Zhao <tizhao@redhat.com>
    Suggested-by: Jonathan Cooper <jonathan.s.cooper@amd.com>
    Tested-by: Jonathan Cooper <jonathan.s.cooper@amd.com>
    Signed-off-by: √ç√±igo Huguet <ihuguet@redhat.com>
    Acked-by: Edward Cree <ecree.xilinx@gmail.com>
    Link: https://lore.kernel.org/r/20230323083417.7345-1-ihuguet@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ea88e90dabb68698acb975f546677c356393d70
Author: Siddharth Kawar <Siddharth.Kawar@microsoft.com>
Date:   Mon Mar 20 20:37:40 2023 +0000

    SUNRPC: fix shutdown of NFS TCP client socket
    
    [ Upstream commit 943d045a6d796175e5d08f9973953b1d2c07d797 ]
    
    NFS server Duplicate Request Cache (DRC) algorithms rely on NFS clients
    reconnecting using the same local TCP port. Unique NFS operations are
    identified by the per-TCP connection set of XIDs. This prevents file
    corruption when non-idempotent NFS operations are retried.
    
    Currently, NFS client TCP connections are using different local TCP ports
    when reconnecting to NFS servers.
    
    After an NFS server initiates shutdown of the TCP connection, the NFS
    client's TCP socket is set to NULL after the socket state has reached
    TCP_LAST_ACK(9). When reconnecting, the new socket attempts to reuse
    the same local port but fails with EADDRNOTAVAIL (99). This forces the
    socket to use a different local TCP port to reconnect to the remote NFS
    server.
    
    State Transition and Events:
    TCP_CLOSE_WAIT(8)
    TCP_LAST_ACK(9)
    connect(fail EADDRNOTAVAIL(99))
    TCP_CLOSE(7)
    bind on new port
    connect success
    
    dmesg excerpts showing reconnect switching from TCP local port of 926 to
    763 after commit 7c81e6a9d75b:
    [13354.947854] NFS call  mkdir testW
    ...
    [13405.654781] RPC:       xs_tcp_state_change client 00000000037d0f03...
    [13405.654813] RPC:       state 8 conn 1 dead 0 zapped 1 sk_shutdown 1
    [13405.654826] RPC:       xs_data_ready...
    [13405.654892] RPC:       xs_tcp_state_change client 00000000037d0f03...
    [13405.654895] RPC:       state 9 conn 0 dead 0 zapped 1 sk_shutdown 3
    [13405.654899] RPC:       xs_tcp_state_change client 00000000037d0f03...
    [13405.654900] RPC:       state 9 conn 0 dead 0 zapped 1 sk_shutdown 3
    [13405.654950] RPC:       xs_connect scheduled xprt 00000000037d0f03
    [13405.654975] RPC:       xs_bind 0.0.0.0:926: ok (0)
    [13405.654980] RPC:       worker connecting xprt 00000000037d0f03 via tcp
                              to 10.101.6.228 (port 2049)
    [13405.654991] RPC:       00000000037d0f03 connect status 99 connected 0
                              sock state 7
    [13405.655001] RPC:       xs_tcp_state_change client 00000000037d0f03...
    [13405.655002] RPC:       state 7 conn 0 dead 0 zapped 1 sk_shutdown 3
    [13405.655024] RPC:       xs_connect scheduled xprt 00000000037d0f03
    [13405.655038] RPC:       xs_bind 0.0.0.0:763: ok (0)
    [13405.655041] RPC:       worker connecting xprt 00000000037d0f03 via tcp
                              to 10.101.6.228 (port 2049)
    [13405.655065] RPC:       00000000037d0f03 connect status 115 connected 0
                              sock state 2
    
    State Transition and Events with patch applied:
    TCP_CLOSE_WAIT(8)
    TCP_LAST_ACK(9)
    TCP_CLOSE(7)
    connect(reuse of port succeeds)
    
    dmesg excerpts showing reconnect on same TCP local port of 936 with patch
    applied:
    [  257.139935] NFS: mkdir(0:59/560857152), testQ
    [  257.139937] NFS call  mkdir testQ
    ...
    [  307.822702] RPC:       state 8 conn 1 dead 0 zapped 1 sk_shutdown 1
    [  307.822714] RPC:       xs_data_ready...
    [  307.822817] RPC:       xs_tcp_state_change client 00000000ce702f14...
    [  307.822821] RPC:       state 9 conn 0 dead 0 zapped 1 sk_shutdown 3
    [  307.822825] RPC:       xs_tcp_state_change client 00000000ce702f14...
    [  307.822826] RPC:       state 9 conn 0 dead 0 zapped 1 sk_shutdown 3
    [  307.823606] RPC:       xs_tcp_state_change client 00000000ce702f14...
    [  307.823609] RPC:       state 7 conn 0 dead 0 zapped 1 sk_shutdown 3
    [  307.823629] RPC:       xs_tcp_state_change client 00000000ce702f14...
    [  307.823632] RPC:       state 7 conn 0 dead 0 zapped 1 sk_shutdown 3
    [  307.823676] RPC:       xs_connect scheduled xprt 00000000ce702f14
    [  307.823704] RPC:       xs_bind 0.0.0.0:936: ok (0)
    [  307.823709] RPC:       worker connecting xprt 00000000ce702f14 via tcp
                              to 10.101.1.30 (port 2049)
    [  307.823748] RPC:       00000000ce702f14 connect status 115 connected 0
                              sock state 2
    ...
    [  314.916193] RPC:       state 7 conn 0 dead 0 zapped 1 sk_shutdown 3
    [  314.916251] RPC:       xs_connect scheduled xprt 00000000ce702f14
    [  314.916282] RPC:       xs_bind 0.0.0.0:936: ok (0)
    [  314.916292] RPC:       worker connecting xprt 00000000ce702f14 via tcp
                              to 10.101.1.30 (port 2049)
    [  314.916342] RPC:       00000000ce702f14 connect status 115 connected 0
                              sock state 2
    
    Fixes: 7c81e6a9d75b ("SUNRPC: Tweak TCP socket shutdown in the RPC client")
    Signed-off-by: Siddharth Rajendra Kawar <sikawar@microsoft.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34c554376ec9e2fae3c987b63fbf34f491985a0a
Author: Arseniy Krasnov <avkrasnov@sberdevices.ru>
Date:   Mon Mar 13 10:32:44 2023 +0300

    mtd: rawnand: meson: invalidate cache on polling ECC bit
    
    [ Upstream commit e732e39ed9929c05fd219035bc9653ba4100d4fa ]
    
    'info_buf' memory is cached and driver polls ECC bit in it. This bit
    is set by the NAND controller. If 'usleep_range()' returns before device
    sets this bit, 'info_buf' will be cached and driver won't see update of
    this bit and will loop forever.
    
    Fixes: 8fae856c5350 ("mtd: rawnand: meson: add support for Amlogic NAND flash controller")
    Signed-off-by: Arseniy Krasnov <AVKrasnov@sberdevices.ru>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/d4ef0bd6-816e-f6fa-9385-f05f775f0ae2@sberdevices.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dae47bf0222e1e0eb6684c7e141b7170b0884a4c
Author: Mark Pearson <mpearson-lenovo@squebb.ca>
Date:   Sun Mar 19 20:32:21 2023 -0400

    platform/x86: think-lmi: Add possible_values for ThinkStation
    
    [ Upstream commit 8a02d70679fc1c434401863333c8ea7dbf201494 ]
    
    ThinkStation platforms don't support the API to return possible_values
    but instead embed it in the settings string.
    
    Try and extract this information and set the possible_values attribute
    appropriately.
    
    Fixes: a40cd7ef22fb ("platform/x86: think-lmi: Add WMI interface support on Lenovo platforms")
    Signed-off-by: Mark Pearson <mpearson-lenovo@squebb.ca>
    Link: https://lore.kernel.org/r/20230320003221.561750-4-mpearson-lenovo@squebb.ca
    Reviewed-by: Thomas Wei√üschuh <linux@weissschuh.net>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e91ffea491af357b7ba895e4a0877477a33a7bcd
Author: Mark Pearson <mpearson-lenovo@squebb.ca>
Date:   Sun Mar 19 20:32:20 2023 -0400

    platform/x86: think-lmi: only display possible_values if available
    
    [ Upstream commit cf337f27f3bfc4aeab4954c468239fd6233c7638 ]
    
    Some attributes don't have any values available. In those cases don't
    make the possible_values entry visible.
    
    Fixes: a40cd7ef22fb ("platform/x86: think-lmi: Add WMI interface support on Lenovo platforms")
    Signed-off-by: Mark Pearson <mpearson-lenovo@squebb.ca>
    Link: https://lore.kernel.org/r/20230320003221.561750-3-mpearson-lenovo@squebb.ca
    Reviewed-by: Thomas Wei√üschuh <linux@weissschuh.net>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbfd5f59fa5c3c74ad4891d5e85844bbfb39e3ce
Author: Mark Pearson <mpearson-lenovo@squebb.ca>
Date:   Sun Mar 19 20:32:19 2023 -0400

    platform/x86: think-lmi: use correct possible_values delimiters
    
    [ Upstream commit 45e21289bfc6e257885514790a8a8887da822d40 ]
    
    firmware-attributes class requires that possible values are delimited
    using ';' but the Lenovo firmware uses ',' instead.
    Parse string and replace where appropriate.
    
    Suggested-by: Thomas Wei√üschuh <linux@weissschuh.net>
    Fixes: a40cd7ef22fb ("platform/x86: think-lmi: Add WMI interface support on Lenovo platforms")
    Signed-off-by: Mark Pearson <mpearson-lenovo@squebb.ca>
    Link: https://lore.kernel.org/r/20230320003221.561750-2-mpearson-lenovo@squebb.ca
    Reviewed-by: Thomas Wei√üschuh <linux@weissschuh.net>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c67f08bdc5f772e9948f148258e8af1aa98db32
Author: Mark Pearson <mpearson-lenovo@squebb.ca>
Date:   Sun Mar 19 20:32:18 2023 -0400

    platform/x86: think-lmi: add missing type attribute
    
    [ Upstream commit 583329dcf22e568a328a944f20427ccfc95dce01 ]
    
    This driver was missing the mandatory type attribute...oops.
    
    Add it in along with logic to determine whether the attribute is an
    enumeration type or a string by parsing the possible_values attribute.
    
    Upstream bug https://bugzilla.kernel.org/show_bug.cgi?id=216460
    
    Fixes: a40cd7ef22fb ("platform/x86: think-lmi: Add WMI interface support on Lenovo platforms")
    Signed-off-by: Mark Pearson <mpearson-lenovo@squebb.ca>
    Link: https://lore.kernel.org/r/20230320003221.561750-1-mpearson-lenovo@squebb.ca
    Reviewed-by: Thomas Wei√üschuh <linux@weissschuh.net>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb1baad60e5d62c5fe9af6bad33660ced73f1112
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 20 15:28:38 2023 +0100

    ALSA: usb-audio: Fix recursive locking at XRUN during syncing
    
    [ Upstream commit 8c721c53dda512fdd48eb24d6d99e56deee57898 ]
    
    The recent support of low latency playback in USB-audio driver made
    the snd_usb_queue_pending_output_urbs() function to be called via PCM
    ack ops.  In the new code path, the function is performed already in
    the PCM stream lock.  The problem is that, when an XRUN is detected,
    the function calls snd_pcm_xrun() to notify, but snd_pcm_xrun() is
    supposed to be called only outside the stream lock.  As a result, it
    leads to a deadlock of PCM stream locking.
    
    For avoiding such a recursive locking, this patch adds an additional
    check to the code paths in PCM core that call the ack callback; now it
    checks the error code from the callback, and if it's -EPIPE, the XRUN
    is handled in the PCM core side gracefully.  Along with it, the
    USB-audio driver code is changed to follow that, i.e. -EPIPE is
    returned instead of the explicit snd_pcm_xrun() call when the function
    is performed already in the stream lock.
    
    Fixes: d5f871f89e21 ("ALSA: usb-audio: Improved lowlatency playback support")
    Reported-and-tested-by: John Keeping <john@metanate.com>
    Link: https://lore.kernel.org/r/20230317195128.3911155-1-john@metanate.com
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Reviewed-by; Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20230320142838.494-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65b723644294f1d79770704162c0e8d1f700b6f1
Author: √Ålvaro Fern√°ndez Rojas <noltari@gmail.com>
Date:   Fri Mar 17 11:20:04 2023 +0100

    mips: bmips: BCM6358: disable RAC flush for TP1
    
    [ Upstream commit ab327f8acdf8d06601fbf058859a539a9422afff ]
    
    RAC flush causes kernel panics on BCM6358 with EHCI/OHCI when booting from TP1:
    [    3.881739] usb 1-1: new high-speed USB device number 2 using ehci-platform
    [    3.895011] Reserved instruction in kernel code[#1]:
    [    3.900113] CPU: 0 PID: 1 Comm: init Not tainted 5.10.16 #0
    [    3.905829] $ 0   : 00000000 10008700 00000000 77d94060
    [    3.911238] $ 4   : 7fd1f088 00000000 81431cac 81431ca0
    [    3.916641] $ 8   : 00000000 ffffefff 8075cd34 00000000
    [    3.922043] $12   : 806f8d40 f3e812b7 00000000 000d9aaa
    [    3.927446] $16   : 7fd1f068 7fd1f080 7ff559b8 81428470
    [    3.932848] $20   : 00000000 00000000 55590000 77d70000
    [    3.938251] $24   : 00000018 00000010
    [    3.943655] $28   : 81430000 81431e60 81431f28 800157fc
    [    3.949058] Hi    : 00000000
    [    3.952013] Lo    : 00000000
    [    3.955019] epc   : 80015808 setup_sigcontext+0x54/0x24c
    [    3.960464] ra    : 800157fc setup_sigcontext+0x48/0x24c
    [    3.965913] Status: 10008703 KERNEL EXL IE
    [    3.970216] Cause : 00800028 (ExcCode 0a)
    [    3.974340] PrId  : 0002a010 (Broadcom BMIPS4350)
    [    3.979170] Modules linked in: ohci_platform ohci_hcd fsl_mph_dr_of ehci_platform ehci_fsl ehci_hcd gpio_button_hotplug usbcore nls_base usb_common
    [    3.992907] Process init (pid: 1, threadinfo=(ptrval), task=(ptrval), tls=77e22ec8)
    [    4.000776] Stack : 81431ef4 7fd1f080 81431f28 81428470 7fd1f068 81431edc 7ff559b8 81428470
    [    4.009467]         81431f28 7fd1f080 55590000 77d70000 77d5498c 80015c70 806f0000 8063ae74
    [    4.018149]         08100002 81431f28 0000000a 08100002 81431f28 0000000a 77d6b418 00000003
    [    4.026831]         ffffffff 80016414 80080734 81431ecc 81431ecc 00000001 00000000 04000000
    [    4.035512]         77d54874 00000000 00000000 00000000 00000000 00000012 00000002 00000000
    [    4.044196]         ...
    [    4.046706] Call Trace:
    [    4.049238] [<80015808>] setup_sigcontext+0x54/0x24c
    [    4.054356] [<80015c70>] setup_frame+0xdc/0x124
    [    4.059015] [<80016414>] do_notify_resume+0x1dc/0x288
    [    4.064207] [<80011b50>] work_notifysig+0x10/0x18
    [    4.069036]
    [    4.070538] Code: 8fc300b4  00001025  26240008 <ac820000> ac830004  3c048063  0c0228aa  24846a00  26240010
    [    4.080686]
    [    4.082517] ---[ end trace 22a8edb41f5f983b ]---
    [    4.087374] Kernel panic - not syncing: Fatal exception
    [    4.092753] Rebooting in 1 seconds..
    
    Because the bootloader (CFE) is not initializing the Read-ahead cache properly
    on the second thread (TP1). Since the RAC was not initialized properly, we
    should avoid flushing it at the risk of corrupting the instruction stream as
    seen in the trace above.
    
    Fixes: d59098a0e9cb ("MIPS: bmips: use generic dma noncoherent ops")
    Signed-off-by: √Ålvaro Fern√°ndez Rojas <noltari@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e38b0ab9dba36b68c8d4ae53cb9e45b7e70a199b
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Mon Mar 6 11:18:24 2023 -0800

    ca8210: Fix unsigned mac_len comparison with zero in ca8210_skb_tx()
    
    [ Upstream commit 748b2f5e82d17480404b3e2895388fc2925f7caf ]
    
    mac_len is of type unsigned, which can never be less than zero.
    
            mac_len = ieee802154_hdr_peek_addrs(skb, &header);
            if (mac_len < 0)
                    return mac_len;
    
    Change this to type int as ieee802154_hdr_peek_addrs() can return negative
    integers, this is found by static analysis with smatch.
    
    Fixes: 6c993779ea1d ("ca8210: fix mac_len negative array access")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20230306191824.4115839-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5362344e1c2c5f5ddab75f3f40942ed39e9259fb
Author: Anton Gusev <aagusev@ispras.ru>
Date:   Tue Jan 31 10:58:18 2023 +0300

    tracing: Fix wrong return in kprobe_event_gen_test.c
    
    [ Upstream commit bc4f359b3b607daac0290d0038561237a86b38cb ]
    
    Overwriting the error code with the deletion result may cause the
    function to return 0 despite encountering an error. Commit b111545d26c0
    ("tracing: Remove the useless value assignment in
    test_create_synth_event()") solves a similar issue by
    returning the original error code, so this patch does the same.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Link: https://lore.kernel.org/linux-trace-kernel/20230131075818.5322-1-aagusev@ispras.ru
    
    Signed-off-by: Anton Gusev <aagusev@ispras.ru>
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19c71156fa9278980a2b29780fecd8e7a6a0edec
Author: Antti Laakso <antti.laakso@intel.com>
Date:   Wed Jan 25 15:17:50 2023 +0200

    tools/power turbostat: fix decoding of HWP_STATUS
    
    [ Upstream commit 92c25393586ac799b9b7d9e50434f3c44a7622c4 ]
    
    The "excursion to minimum" information is in bit2
    in HWP_STATUS MSR. Fix the bitmask used for
    decoding the register.
    
    Signed-off-by: Antti Laakso <antti.laakso@intel.com>
    Reviewed-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8580c0a32796c06a3812c460fb882e876c96138
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Thu Dec 15 10:18:16 2022 -0500

    tools/power turbostat: Fix /dev/cpu_dma_latency warnings
    
    [ Upstream commit 40aafc7d58d3544f152a863a0e9863014b6d5d8c ]
    
    When running as non-root the following error is seen in turbostat:
    
    turbostat: fopen /dev/cpu_dma_latency
    : Permission denied
    
    turbostat and the man page have information on how to avoid other
    permission errors, so these can be fixed the same way.
    
    Provide better /dev/cpu_dma_latency warnings that provide instructions on
    how to avoid the error, and update the man page.
    
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Cc: linux-pm@vger.kernel.org
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6494344d7ef79d6ab3120d7bbf5ca09975d68825
Author: Wei Chen <harperchen1110@gmail.com>
Date:   Wed Mar 15 09:22:54 2023 +0000

    fbdev: au1200fb: Fix potential divide by zero
    
    [ Upstream commit 44a3b36b42acfc433aaaf526191dd12fbb919fdb ]
    
    var->pixclock can be assigned to zero by user. Without
    proper check, divide by zero would occur when invoking
    macro PICOS2KHZ in au1200fb_fb_check_var.
    
    Error out if var->pixclock is zero.
    
    Signed-off-by: Wei Chen <harperchen1110@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9c5deee4b66354f6f613606b023dc499d68a55c
Author: Wei Chen <harperchen1110@gmail.com>
Date:   Wed Mar 15 09:05:18 2023 +0000

    fbdev: lxfb: Fix potential divide by zero
    
    [ Upstream commit 61ac4b86a4c047c20d5cb423ddd87496f14d9868 ]
    
    var->pixclock can be assigned to zero by user. Without proper
    check, divide by zero would occur in lx_set_clock.
    
    Error out if var->pixclock is zero.
    
    Signed-off-by: Wei Chen <harperchen1110@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86c8db5d12f422d5e8e4e73b4848ebaf1df0e967
Author: Wei Chen <harperchen1110@gmail.com>
Date:   Wed Mar 15 08:33:47 2023 +0000

    fbdev: intelfb: Fix potential divide by zero
    
    [ Upstream commit d823685486a3446d061fed7c7d2f80af984f119a ]
    
    Variable var->pixclock is controlled by user and can be assigned
    to zero. Without proper check, divide by zero would occur in
    intelfbhw_validate_mode and intelfbhw_mode_to_hw.
    
    Error out if var->pixclock is zero.
    
    Signed-off-by: Wei Chen <harperchen1110@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c22a8d3ae54a52a2a7d1f289dd8bfb52be1fa542
Author: Wei Chen <harperchen1110@gmail.com>
Date:   Wed Mar 15 07:18:31 2023 +0000

    fbdev: nvidia: Fix potential divide by zero
    
    [ Upstream commit 92e2a00f2987483e1f9253625828622edd442e61 ]
    
    variable var->pixclock can be set by user. In case it
    equals to zero, divide by zero would occur in nvidiafb_set_par.
    
    Similar crashes have happened in other fbdev drivers. There
    is no check and modification on var->pixclock along the call
    chain to nvidia_check_var and nvidiafb_set_par. We believe it
    could also be triggered in driver nvidia from user site.
    
    Signed-off-by: Wei Chen <harperchen1110@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9de1325bc2ccc909ba4b732bfdd7fab2e608598f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 14 19:32:38 2023 -0700

    sched_getaffinity: don't assume 'cpumask_size()' is fully initialized
    
    [ Upstream commit 6015b1aca1a233379625385feb01dd014aca60b5 ]
    
    The getaffinity() system call uses 'cpumask_size()' to decide how big
    the CPU mask is - so far so good.  It is indeed the allocation size of a
    cpumask.
    
    But the code also assumes that the whole allocation is initialized
    without actually doing so itself.  That's wrong, because we might have
    fixed-size allocations (making copying and clearing more efficient), but
    not all of it is then necessarily used if 'nr_cpu_ids' is smaller.
    
    Having checked other users of 'cpumask_size()', they all seem to be ok,
    either using it purely for the allocation size, or explicitly zeroing
    the cpumask before using the size in bytes to copy it.
    
    See for example the ublk_ctrl_get_queue_affinity() function that uses
    the proper 'zalloc_cpumask_var()' to make sure that the whole mask is
    cleared, whether the storage is on the stack or if it was an external
    allocation.
    
    Fix this by just zeroing the allocation before using it.  Do the same
    for the compat version of sched_getaffinity(), which had the same logic.
    
    Also, for consistency, make sched_getaffinity() use 'cpumask_bits()' to
    access the bits.  For a cpumask_var_t, it ends up being a pointer to the
    same data either way, but it's just a good idea to treat it like you
    would a 'cpumask_t'.  The compat case already did that.
    
    Reported-by: Ryan Roberts <ryan.roberts@arm.com>
    Link: https://lore.kernel.org/lkml/7d026744-6bd6-6827-0471-b5e8eae0be3f@arm.com/
    Cc: Yury Norov <yury.norov@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9584dcc55495f45c8cdf69656ff2eb921b680be
Author: Wei Chen <harperchen1110@gmail.com>
Date:   Tue Mar 7 13:08:56 2023 +0000

    fbdev: tgafb: Fix potential divide by zero
    
    [ Upstream commit f90bd245de82c095187d8c2cabb8b488a39eaecc ]
    
    fb_set_var would by called when user invokes ioctl with cmd
    FBIOPUT_VSCREENINFO. User-provided data would finally reach
    tgafb_check_var. In case var->pixclock is assigned to zero,
    divide by zero would occur when checking whether reciprocal
    of var->pixclock is too high.
    
    Similar crashes have happened in other fbdev drivers. There
    is no check and modification on var->pixclock along the call
    chain to tgafb_check_var. We believe it could also be triggered
    in driver tgafb from user site.
    
    Signed-off-by: Wei Chen <harperchen1110@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d23f65f08247068576a01e28b297e995b7dc3965
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 13 00:50:28 2023 +0000

    ALSA: hda/ca0132: fixup buffer overrun at tuning_ctl_set()
    
    [ Upstream commit 98e5eb110095ec77cb6d775051d181edbf9cd3cf ]
    
    tuning_ctl_set() might have buffer overrun at (X) if it didn't break
    from loop by matching (A).
    
            static int tuning_ctl_set(...)
            {
                    for (i = 0; i < TUNING_CTLS_COUNT; i++)
    (A)                     if (nid == ca0132_tuning_ctls[i].nid)
                                    break;
    
                    snd_hda_power_up(...);
    (X)             dspio_set_param(..., ca0132_tuning_ctls[i].mid, ...);
                    snd_hda_power_down(...);                ^
    
                    return 1;
            }
    
    We will get below error by cppcheck
    
            sound/pci/hda/patch_ca0132.c:4229:2: note: After for loop, i has value 12
             for (i = 0; i < TUNING_CTLS_COUNT; i++)
             ^
            sound/pci/hda/patch_ca0132.c:4234:43: note: Array index out of bounds
             dspio_set_param(codec, ca0132_tuning_ctls[i].mid, 0x20,
                                                       ^
    This patch cares non match case.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87sfe9eap7.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb1bc1223906802c8ac08da5c417c8037c082260
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 13 00:49:24 2023 +0000

    ALSA: asihpi: check pao in control_message()
    
    [ Upstream commit 9026c0bf233db53b86f74f4c620715e94eb32a09 ]
    
    control_message() might be called with pao = NULL.
    Here indicates control_message() as sample.
    
    (B)     static void control_message(struct hpi_adapter_obj *pao, ...)
            {                                                   ^^^
                    struct hpi_hw_obj *phw = pao->priv;
                    ...                      ^^^
            }
    
    (A)     void _HPI_6205(struct hpi_adapter_obj *pao, ...)
            {                                      ^^^
                    ...
                    case HPI_OBJ_CONTROL:
    (B)                     control_message(pao, phm, phr);
                            break;          ^^^
                    ...
            }
    
            void HPI_6205(...)
            {
                    ...
    (A)             _HPI_6205(NULL, phm, phr);
                    ...       ^^^^
            }
    
    Therefore, We will get too many warning via cppcheck, like below
    
            sound/pci/asihpi/hpi6205.c:238:27: warning: Possible null pointer dereference: pao [nullPointer]
                     struct hpi_hw_obj *phw = pao->priv;
                                              ^
            sound/pci/asihpi/hpi6205.c:433:13: note: Calling function '_HPI_6205', 1st argument 'NULL' value is 0
                      _HPI_6205(NULL, phm, phr);
                                ^
            sound/pci/asihpi/hpi6205.c:401:20: note: Calling function 'control_message', 1st argument 'pao' value is 0
               control_message(pao, phm, phr);
                               ^
    Set phr->error like many functions doing, and don't call _HPI_6205()
    with NULL.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87ttypeaqz.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ec57d1bed386afa74fa69dd85a58173bc02e457
Author: Kristian Overskeid <koverskeid@gmail.com>
Date:   Tue Mar 7 14:32:29 2023 +0100

    net: hsr: Don't log netdev_err message on unknown prp dst node
    
    [ Upstream commit 28e8cabe80f3e6e3c98121576eda898eeb20f1b1 ]
    
    If no frames has been exchanged with a node for HSR_NODE_FORGET_TIME, the
    node will be deleted from the node_db list. If a frame is sent to the node
    after it is deleted, a netdev_err message for each slave interface is
    produced. This should not happen with dan nodes because of supervision
    frames, but can happen often with san nodes, which clutters the kernel
    log. Since the hsr protocol does not support sans, this is only relevant
    for the prp protocol.
    
    Signed-off-by: Kristian Overskeid <koverskeid@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e90e52616f620999c9fe49ac15a1d7498e385f7
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Mar 13 15:45:48 2023 +0100

    x86/PVH: obtain VGA console info in Dom0
    
    [ Upstream commit 934ef33ee75c3846f605f18b65048acd147e3918 ]
    
    A new platform-op was added to Xen to allow obtaining the same VGA
    console information PV Dom0 is handed. Invoke the new function and have
    the output data processed by xen_init_vga().
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    
    Link: https://lore.kernel.org/r/8f315e92-7bda-c124-71cc-478ab9c5e610@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5175ed17a5a8b7165f8e2021822c2124e1d5fd8e
Author: NeilBrown <neilb@suse.de>
Date:   Mon Mar 6 09:36:25 2023 +1100

    md: avoid signed overflow in slot_store()
    
    [ Upstream commit 3bc57292278a0b6ac4656cad94c14f2453344b57 ]
    
    slot_store() uses kstrtouint() to get a slot number, but stores the
    result in an "int" variable (by casting a pointer).
    This can result in a negative slot number if the unsigned int value is
    very large.
    
    A negative number means that the slot is empty, but setting a negative
    slot number this way will not remove the device from the array.  I don't
    think this is a serious problem, but it could cause confusion and it is
    best to fix it.
    
    Reported-by: Dan Carpenter <error27@gmail.com>
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da35a4e6eee5d73886312e85322a6e97df901987
Author: Ravulapati Vishnu Vardhan Rao <quic_visr@quicinc.com>
Date:   Sat Mar 4 13:37:02 2023 +0530

    ASoC: codecs: tx-macro: Fix for KASAN: slab-out-of-bounds
    
    [ Upstream commit e5e7e398f6bb7918dab0612eb6991f7bae95520d ]
    
    When we run syzkaller we get below Out of Bound.
        "KASAN: slab-out-of-bounds Read in regcache_flat_read"
    
        Below is the backtrace of the issue:
    
        dump_backtrace+0x0/0x4c8
        show_stack+0x34/0x44
        dump_stack_lvl+0xd8/0x118
        print_address_description+0x30/0x2d8
        kasan_report+0x158/0x198
        __asan_report_load4_noabort+0x44/0x50
        regcache_flat_read+0x10c/0x110
        regcache_read+0xf4/0x180
        _regmap_read+0xc4/0x278
        _regmap_update_bits+0x130/0x290
        regmap_update_bits_base+0xc0/0x15c
        snd_soc_component_update_bits+0xa8/0x22c
        snd_soc_component_write_field+0x68/0xd4
        tx_macro_digital_mute+0xec/0x140
    
        Actually There is no need to have decimator with 32 bits.
        By limiting the variable with short type u8 issue is resolved.
    
    Signed-off-by: Ravulapati Vishnu Vardhan Rao <quic_visr@quicinc.com>
    Link: https://lore.kernel.org/r/20230304080702.609-1-quic_visr@quicinc.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0725daaa9a879388ed312110f62dbd5ea2d75f8f
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Thu Feb 9 09:09:52 2023 +0800

    xfrm: Zero padding when dumping algos and encap
    
    [ Upstream commit 8222d5910dae08213b6d9d4bc9a7f8502855e624 ]
    
    When copying data to user-space we should ensure that only valid
    data is copied over.  Padding in structures may be filled with
    random (possibly sensitve) data and should never be given directly
    to user-space.
    
    This patch fixes the copying of xfrm algorithms and the encap
    template in xfrm_user so that padding is zeroed.
    
    Reported-by: syzbot+fa5414772d5c445dac3c@syzkaller.appspotmail.com
    Reported-by: Hyunwoo Kim <v4bel@theori.io>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7258c58f6e250801cfa4356d4e5a2eaa35737f2a
Author: Ivan Bornyakov <i.bornyakov@metrotek.ru>
Date:   Mon Mar 6 16:25:26 2023 +0300

    bus: imx-weim: fix branch condition evaluates to a garbage value
    
    [ Upstream commit 1adab2922c58e7ff4fa9f0b43695079402cce876 ]
    
    If bus type is other than imx50_weim_devtype and have no child devices,
    variable 'ret' in function weim_parse_dt() will not be initialized, but
    will be used as branch condition and return value. Fix this by
    initializing 'ret' with 0.
    
    This was discovered with help of clang-analyzer, but the situation is
    quite possible in real life.
    
    Fixes: 52c47b63412b ("bus: imx-weim: improve error handling upon child probe-failure")
    Signed-off-by: Ivan Bornyakov <i.bornyakov@metrotek.ru>
    Cc: stable@vger.kernel.org
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07987422023e11ff0125f2fac98dcca4e4c5ef8b
Author: Namjae Jeon <linkinjeon@kernel.org>
Date:   Tue Mar 21 15:25:34 2023 +0900

    ksmbd: don't terminate inactive sessions after a few seconds
    
    [ Upstream commit be6f42fad5f5fd1fea9d562df82c38ad6ed3bfe9 ]
    
    Steve reported that inactive sessions are terminated after a few
    seconds. ksmbd terminate when receiving -EAGAIN error from
    kernel_recvmsg(). -EAGAIN means there is no data available in timeout.
    So ksmbd should keep connection with unlimited retries instead of
    terminating inactive sessions.
    
    Cc: stable@vger.kernel.org
    Reported-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c873ab68fcb55d3d0579a75b6178c8a5b833dfe
Author: Marco Elver <elver@google.com>
Date:   Thu Mar 16 23:47:05 2023 +0100

    kcsan: avoid passing -g for test
    
    [ Upstream commit 5eb39cde1e2487ba5ec1802dc5e58a77e700d99e ]
    
    Nathan reported that when building with GNU as and a version of clang that
    defaults to DWARF5, the assembler will complain with:
    
      Error: non-constant .uleb128 is not supported
    
    This is because `-g` defaults to the compiler debug info default. If the
    assembler does not support some of the directives used, the above errors
    occur. To fix, remove the explicit passing of `-g`.
    
    All the test wants is that stack traces print valid function names, and
    debug info is not required for that. (I currently cannot recall why I
    added the explicit `-g`.)
    
    Link: https://lkml.kernel.org/r/20230316224705.709984-2-elver@google.com
    Fixes: 1fe84fd4a402 ("kcsan: Add test suite")
    Signed-off-by: Marco Elver <elver@google.com>
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b27e663cf1e5af7001620b0a7d856a5369ebab63
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Mon Nov 28 11:43:58 2022 +0100

    kernel: kcsan: kcsan_test: build without structleak plugin
    
    [ Upstream commit 6fcd4267a840d0536b8e5334ad5f31e4105fce85 ]
    
    Building kcsan_test with structleak plugin enabled makes the stack frame
    size to grow.
    
    kernel/kcsan/kcsan_test.c:704:1: error: the frame size of 3296 bytes is larger than 2048 bytes [-Werror=frame-larger-than=]
    
    Turn off the structleak plugin checks for kcsan_test.
    
    Link: https://lkml.kernel.org/r/20221128104358.2660634-1-anders.roxell@linaro.org
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Marco Elver <elver@google.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: David Gow <davidgow@google.com>
    Cc: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Stable-dep-of: 5eb39cde1e24 ("kcsan: avoid passing -g for test")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1450c82a16bba232dca0ff667b17c0970ddecb85
Author: Wesley Cheng <quic_wcheng@quicinc.com>
Date:   Mon Mar 6 12:05:57 2023 -0800

    usb: dwc3: gadget: Add 1ms delay after end transfer command without IOC
    
    [ Upstream commit d8a2bb4eb75866275b5cf7de2e593ac3449643e2 ]
    
    Previously, there was a 100uS delay inserted after issuing an end transfer
    command for specific controller revisions.  This was due to the fact that
    there was a GUCTL2 bit field which enabled synchronous completion of the
    end transfer command once the CMDACT bit was cleared in the DEPCMD
    register.  Since this bit does not exist for all controller revisions and
    the current implementation heavily relies on utizling the EndTransfer
    command completion interrupt, add the delay back in for uses where the
    interrupt on completion bit is not set, and increase the duration to 1ms
    for the controller to complete the command.
    
    An issue was seen where the USB request buffer was unmapped while the DWC3
    controller was still accessing the TRB.  However, it was confirmed that the
    end transfer command was successfully submitted. (no end transfer timeout)
    In situations, such as dwc3_gadget_soft_disconnect() and
    __dwc3_gadget_ep_disable(), the dwc3_remove_request() is utilized, which
    will issue the end transfer command, and follow up with
    dwc3_gadget_giveback().  At least for the USB ep disable path, it is
    required for any pending and started requests to be completed and returned
    to the function driver in the same context of the disable call.  Without
    the GUCTL2 bit, it is not ensured that the end transfer is completed before
    the buffers are unmapped.
    
    Fixes: cf2f8b63f7f1 ("usb: dwc3: gadget: Remove END_TRANSFER delay")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Wesley Cheng <quic_wcheng@quicinc.com>
    Acked-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/20230306200557.29387-1-quic_wcheng@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1536e51c30ada4b5bfd32f82ab66480ec7e3ed8a
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Sun Mar 6 22:12:51 2022 +0100

    usb: dwc3: gadget: move cmd_endtransfer to extra function
    
    [ Upstream commit e192cc7b52399d1b073f88cd3ba128b74d3a57f1 ]
    
    This patch adds the extra function __dwc3_stop_active_transfer to
    consolidate the same codepath.
    
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Link: https://lore.kernel.org/r/20220306211251.2281335-3-m.grzeschik@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Stable-dep-of: d8a2bb4eb758 ("usb: dwc3: gadget: Add 1ms delay after end transfer command without IOC")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f7fddb5a9b7be8c58136109ef7a2f49522e9918
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Mar 14 16:31:32 2023 -0700

    fsverity: don't drop pagecache at end of FS_IOC_ENABLE_VERITY
    
    [ Upstream commit a075bacde257f755bea0e53400c9f1cdd1b8e8e6 ]
    
    The full pagecache drop at the end of FS_IOC_ENABLE_VERITY is causing
    performance problems and is hindering adoption of fsverity.  It was
    intended to solve a race condition where unverified pages might be left
    in the pagecache.  But actually it doesn't solve it fully.
    
    Since the incomplete solution for this race condition has too much
    performance impact for it to be worth it, let's remove it for now.
    
    Fixes: 3fda4c617e84 ("fs-verity: implement FS_IOC_ENABLE_VERITY ioctl")
    Cc: stable@vger.kernel.org
    Reviewed-by: Victor Hsieh <victorhsieh@google.com>
    Link: https://lore.kernel.org/r/20230314235332.50270-1-ebiggers@kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
