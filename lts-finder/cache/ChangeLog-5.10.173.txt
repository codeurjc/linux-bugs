commit e5f315b55f8e09ac17c968da42f9345f64efcdd2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Mar 11 16:40:21 2023 +0100

    Linux 5.10.173
    
    Link: https://lore.kernel.org/r/20230310133804.978589368@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Link: https://lore.kernel.org/r/20230311091908.975813595@linuxfoundation.org
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ecd5dabddc0b70d82ca45e8c664e31fd04eaa92
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Feb 13 15:09:26 2023 +0800

    usb: gadget: uvc: fix missing mutex_unlock() if kstrtou8() fails
    
    commit 7ebb605d2283fb2647b4fa82030307ce00bee436 upstream.
    
    If kstrtou8() fails, the mutex_unlock() is missed, move kstrtou8()
    before mutex_lock() to fix it up.
    
    Fixes: 0525210c9840 ("usb: gadget: uvc: Allow definition of XUs in configfs")
    Fixes: b3c839bd8a07 ("usb: gadget: uvc: Make bSourceID read/write")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20230213070926.776447-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5bbea50d622b8f49ab8ee3b0eb283107febcf1a
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Dec 13 07:21:15 2021 +0000

    malidp: Fix NULL vs IS_ERR() checking
    
    commit 15342f930ebebcfe36f2415049736a77d7d2e045 upstream.
    
    The get_sg_table() function does not return NULL.
    It returns error pointers.
    
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Liviu Dudau <liviu.dudau@arm.com>
    Link: https://lore.kernel.org/dri-devel/20211213072115.18098-1-linmq006@gmail.com/
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dfc0a52f768d481de6bb672904cd382ead7ca0e
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Fri Oct 28 14:46:55 2022 +0530

    scsi: mpt3sas: Remove usage of dma_get_required_mask() API
    
    commit 06e472acf964649a58b7de35fc9cdc3151acb970 upstream.
    
    Remove the usage of dma_get_required_mask() API.  Directly set the DMA mask
    to 63/64 if the system is a 64bit machine.
    
    Signed-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Link: https://lore.kernel.org/r/20221028091655.17741-2-sreekanth.reddy@broadcom.com
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 747652f9c5037cc27544c1fe44c4125876e4ef34
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Tue Sep 13 17:35:38 2022 +0530

    scsi: mpt3sas: re-do lost mpt3sas DMA mask fix
    
    commit 1a2dcbdde82e3a5f1db9b2f4c48aa1aeba534fb2 upstream.
    
    This is a re-do of commit e0e0747de0ea ("scsi: mpt3sas: Fix return value
    check of dma_get_required_mask()"), which I ended up undoing in a
    mis-merge in commit 62e6e5940c0c ("Merge tag 'scsi-misc' of
    git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi").
    
    The original commit message was
    
      scsi: mpt3sas: Fix return value check of dma_get_required_mask()
    
      Fix the incorrect return value check of dma_get_required_mask().  Due to
      this incorrect check, the driver was always setting the DMA mask to 63 bit.
    
      Link: https://lore.kernel.org/r/20220913120538.18759-2-sreekanth.reddy@broadcom.com
      Fixes: ba27c5cf286d ("scsi: mpt3sas: Don't change the DMA coherent mask after allocations")
      Signed-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
      Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    
    and this fix was lost when I mis-merged the conflict with commit
    9df650963bf6 ("scsi: mpt3sas: Don't change DMA mask while reallocating
    pools").
    
    Reported-by: Juergen Gross <jgross@suse.com>
    Fixes: 62e6e5940c0c ("Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi")
    Link: https://lore.kernel.org/all/CAHk-=wjaK-TxrNaGtFDpL9qNHL1MVkWXO1TT6vObD5tXMSC4Zg@mail.gmail.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2392303df240e7d036df8872ada176734e108036
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Thu Aug 25 13:24:54 2022 +0530

    scsi: mpt3sas: Don't change DMA mask while reallocating pools
    
    commit 9df650963bf6d6c2c3fcd325d8c44ca2b99554fe upstream.
    
    When a pool crosses the 4GB boundary region then before reallocating pools
    change the coherent DMA mask to 32 bits and keep the normal DMA mask set to
    63/64 bits.
    
    Link: https://lore.kernel.org/r/20220825075457.16422-2-sreekanth.reddy@broadcom.com
    Signed-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f73bbfb47ff10d8a6288bd37a833fb987cc5a6f2
Author: Salvatore Bonaccorso <carnil@debian.org>
Date:   Wed Mar 8 17:14:56 2023 +0100

    Revert "scsi: mpt3sas: Fix return value check of dma_get_required_mask()"
    
    This reverts commit e0e0747de0ea3dd87cdbb0393311e17471a9baf1.
    
    As noted in 1a2dcbdde82e ("scsi: mpt3sas: re-do lost mpt3sas DMA mask
    fix") in mainline there was a mis-merge in commit 62e6e5940c0c ("Merge
    tag 'scsi-misc' of
    git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi"). causing that
    the fix needed to be redone later on again. To make series of patches
    apply cleanly to the stable series where e0e0747de0ea ("scsi: mpt3sas:
    Fix return value check of dma_get_required_mask()") was backported,
    revert the aforementioned commit.
    
    No upstream commit exists for this commit.
    
    Link: https://lore.kernel.org/regressions/yq1sfehmjnb.fsf@ca-mkp.ca.oracle.com/
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 331c18e8ac810eec0058834a3a5fd35b54d7a7f9
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Thu Jan 5 15:31:29 2023 +0100

    media: uvcvideo: Fix race condition with usb_kill_urb
    
    commit 619d9b710cf06f7a00a17120ca92333684ac45a8 upstream.
    
    usb_kill_urb warranties that all the handlers are finished when it
    returns, but does not protect against threads that might be handling
    asynchronously the urb.
    
    For UVC, the function uvc_ctrl_status_event_async() takes care of
    control changes asynchronously.
    
    If the code is executed in the following order:
    
    CPU 0                                   CPU 1
    =====                                   =====
    uvc_status_complete()
                                            uvc_status_stop()
    uvc_ctrl_status_event_work()
                                            uvc_status_start() -> FAIL
    
    Then uvc_status_start will keep failing and this error will be shown:
    
    <4>[    5.540139] URB 0000000000000000 submitted while active
    drivers/usb/core/urb.c:378 usb_submit_urb+0x4c3/0x528
    
    Let's improve the current situation, by not re-submiting the urb if
    we are stopping the status event. Also process the queued work
    (if any) during stop.
    
    CPU 0                                   CPU 1
    =====                                   =====
    uvc_status_complete()
                                            uvc_status_stop()
                                            uvc_status_start()
    uvc_ctrl_status_event_work() -> FAIL
    
    Hopefully, with the usb layer protection this should be enough to cover
    all the cases.
    
    Cc: stable@vger.kernel.org
    Fixes: e5225c820c05 ("media: uvcvideo: Send a control event when a Control Change interrupt arrives")
    Reviewed-by: Yunke Cao <yunkec@chromium.org>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d83b69e934db163fa60456dab1f01fd23f579ec
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Dec 23 14:35:20 2020 +0100

    media: uvcvideo: Provide sync and async uvc_ctrl_status_event
    
    commit d9c8763e61295be0a21dc04ad9c379d5d17c3d86 upstream.
    
    Split the functionality of void uvc_ctrl_status_event_work in two, so it
    can be called by functions outside interrupt context and not part of an
    URB.
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5fe3fba1b7bfecb6f17f93a433782b8500fe377
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Thu Mar 2 09:28:16 2023 -0800

    drm/virtio: Fix error code in virtio_gpu_object_shmem_init()
    
    In virtio_gpu_object_shmem_init() we are passing NULL to PTR_ERR, which
    is returning 0/success.
    
    Fix this by storing error value in 'ret' variable before assigning
    shmem->pages to NULL.
    
    Found using static analysis with Smatch.
    
    Fixes: 64b88afbd92f ("drm/virtio: Correct drm_gem_shmem_get_sg_table() error handling")
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Reviewed-by: Dmitry Osipenko <dmitry.osipenko@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a1d0c79eaec745b6e9cafa0a55a2c762e93eeb9
Author: Kuniyuki Iwashima <kuniyu@amazon.com>
Date:   Mon Feb 13 20:45:48 2023 +0000

    tcp: Fix listen() regression in 5.10.163
    
    commit fdaf88531cfd17b2a710cceb3141ef6f9085ff40 upstream.
    
    When we backport dadd0dcaa67d ("net/ulp: prevent ULP without clone op from
    entering the LISTEN status"), we have accidentally backported a part of
    7a7160edf1bf ("net: Return errno in sk->sk_prot->get_port().") and removed
    err = -EADDRINUSE in inet_csk_listen_start().
    
    Thus, listen() no longer returns -EADDRINUSE even if ->get_port() failed
    as reported in [0].
    
    We set -EADDRINUSE to err just before ->get_port() to fix the regression.
    
    [0]: https://lore.kernel.org/stable/EF8A45D0-768A-4CD5-9A8A-0FA6E610ABF7@winter.cafe/
    
    Reported-by: Winter <winter@winter.cafe>
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7474be26b032f682b2166beb4a92c533f4de6a76
Author: Nguyen Dinh Phi <phind.uet@gmail.com>
Date:   Fri Oct 8 03:04:24 2021 +0800

    Bluetooth: hci_sock: purge socket queues in the destruct() callback
    
    commit 709fca500067524381e28a5f481882930eebac88 upstream.
    
    The receive path may take the socket right before hci_sock_release(),
    but it may enqueue the packets to the socket queues after the call to
    skb_queue_purge(), therefore the socket can be destroyed without clear
    its queues completely.
    
    Moving these skb_queue_purge() to the hci_sock_destruct() will fix this
    issue, because nothing is referencing the socket at this point.
    
    Signed-off-by: Nguyen Dinh Phi <phind.uet@gmail.com>
    Reported-by: syzbot+4c4ffd1e1094dae61035@syzkaller.appspotmail.com
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d90967f850b1f2ff600d2dcc4261487ffd23e523
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Dec 14 20:42:57 2022 +0200

    drm/display/dp_mst: Fix down message handling after a packet reception error
    
    commit 1241aedb6b5c7a5a8ad73e5eb3a41cfe18a3e00e upstream.
    
    After an error during receiving a packet for a multi-packet DP MST
    sideband message, the state tracking which packets have been received
    already is not reset. This prevents the reception of subsequent down
    messages (due to the pending message not yet completed with an
    end-of-message-transfer packet).
    
    Fix the above by resetting the reception state after a packet error.
    
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: <stable@vger.kernel.org> # v3.17+
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221214184258.2869417-2-imre.deak@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee4a4282d78d96e07e714c28ca54679713fa2157
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Dec 14 20:42:56 2022 +0200

    drm/display/dp_mst: Fix down/up message handling after sink disconnect
    
    commit 1d082618bbf3b6755b8cc68c0a8122af2842d593 upstream.
    
    If the sink gets disconnected during receiving a multi-packet DP MST AUX
    down-reply/up-request sideband message, the state keeping track of which
    packets have been received already is not reset. This results in a failed
    sanity check for the subsequent message packet received after a sink is
    reconnected (due to the pending message not yet completed with an
    end-of-message-transfer packet), indicated by the
    
    "sideband msg set header failed"
    
    error.
    
    Fix the above by resetting the up/down message reception state after a
    disconnect event.
    
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: <stable@vger.kernel.org> # v3.17+
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221214184258.2869417-1-imre.deak@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 411b8ad505f7686de182749cb293a8e887c2dd49
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 7 13:06:29 2023 -0800

    x86/resctl: fix scheduler confusion with 'current'
    
    commit 7fef099702527c3b2c5234a2ea6a24411485a13a upstream.
    
    The implementation of 'current' on x86 is very intentionally special: it
    is a very common thing to look up, and it uses 'this_cpu_read_stable()'
    to get the current thread pointer efficiently from per-cpu storage.
    
    And the keyword in there is 'stable': the current thread pointer never
    changes as far as a single thread is concerned.  Even if when a thread
    is preempted, or moved to another CPU, or even across an explicit call
    'schedule()' that thread will still have the same value for 'current'.
    
    It is, after all, the kernel base pointer to thread-local storage.
    That's why it's stable to begin with, but it's also why it's important
    enough that we have that special 'this_cpu_read_stable()' access for it.
    
    So this is all done very intentionally to allow the compiler to treat
    'current' as a value that never visibly changes, so that the compiler
    can do CSE and combine multiple different 'current' accesses into one.
    
    However, there is obviously one very special situation when the
    currently running thread does actually change: inside the scheduler
    itself.
    
    So the scheduler code paths are special, and do not have a 'current'
    thread at all.  Instead there are _two_ threads: the previous and the
    next thread - typically called 'prev' and 'next' (or prev_p/next_p)
    internally.
    
    So this is all actually quite straightforward and simple, and not all
    that complicated.
    
    Except for when you then have special code that is run in scheduler
    context, that code then has to be aware that 'current' isn't really a
    valid thing.  Did you mean 'prev'? Did you mean 'next'?
    
    In fact, even if then look at the code, and you use 'current' after the
    new value has been assigned to the percpu variable, we have explicitly
    told the compiler that 'current' is magical and always stable.  So the
    compiler is quite free to use an older (or newer) value of 'current',
    and the actual assignment to the percpu storage is not relevant even if
    it might look that way.
    
    Which is exactly what happened in the resctl code, that blithely used
    'current' in '__resctrl_sched_in()' when it really wanted the new
    process state (as implied by the name: we're scheduling 'into' that new
    resctl state).  And clang would end up just using the old thread pointer
    value at least in some configurations.
    
    This could have happened with gcc too, and purely depends on random
    compiler details.  Clang just seems to have been more aggressive about
    moving the read of the per-cpu current_task pointer around.
    
    The fix is trivial: just make the resctl code adhere to the scheduler
    rules of using the prev/next thread pointer explicitly, instead of using
    'current' in a situation where it just wasn't valid.
    
    That same code is then also used outside of the scheduler context (when
    a thread resctl state is explicitly changed), and then we will just pass
    in 'current' as that pointer, of course.  There is no ambiguity in that
    case.
    
    The fix may be trivial, but noticing and figuring out what went wrong
    was not.  The credit for that goes to Stephane Eranian.
    
    Reported-by: Stephane Eranian <eranian@google.com>
    Link: https://lore.kernel.org/lkml/20230303231133.1486085-1-eranian@google.com/
    Link: https://lore.kernel.org/lkml/alpine.LFD.2.01.0908011214330.3304@localhost.localdomain/
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Tony Luck <tony.luck@intel.com>
    Tested-by: Stephane Eranian <eranian@google.com>
    Tested-by: Babu Moger <babu.moger@amd.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9554af98018cc29aea9a9b277ae10061e7e625f2
Author: Valentin Schneider <vschneid@redhat.com>
Date:   Thu Dec 17 14:31:21 2020 -0800

    x86/resctrl: Apply READ_ONCE/WRITE_ONCE to task_struct.{rmid,closid}
    
    commit 6d3b47ddffed70006cf4ba360eef61e9ce097d8f upstream.
    
    A CPU's current task can have its {closid, rmid} fields read locally
    while they are being concurrently written to from another CPU.
    This can happen anytime __resctrl_sched_in() races with either
    __rdtgroup_move_task() or rdt_move_group_tasks().
    
    Prevent load / store tearing for those accesses by giving them the
    READ_ONCE() / WRITE_ONCE() treatment.
    
    Signed-off-by: Valentin Schneider <valentin.schneider@arm.com>
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/9921fda88ad81afb9885b517fbe864a2bc7c35a9.1608243147.git.reinette.chatre@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7123a4337bf73132bbfb5437e4dc83ba864a9a1e
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Tue Feb 28 16:28:57 2023 -0800

    net: tls: avoid hanging tasks on the tx_lock
    
    commit f3221361dc85d4de22586ce8441ec2c67b454f5d upstream.
    
    syzbot sent a hung task report and Eric explains that adversarial
    receiver may keep RWIN at 0 for a long time, so we are not guaranteed
    to make forward progress. Thread which took tx_lock and went to sleep
    may not release tx_lock for hours. Use interruptible sleep where
    possible and reschedule the work if it can't take the lock.
    
    Testing: existing selftest passes
    
    Reported-by: syzbot+9c0268252b8ef967c62e@syzkaller.appspotmail.com
    Fixes: 79ffe6087e91 ("net/tls: add a TX lock")
    Link: https://lore.kernel.org/all/000000000000e412e905f5b46201@google.com/
    Cc: stable@vger.kernel.org # wait 4 weeks
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20230301002857.2101894-1-kuba@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6549336f574658433e10a34e72f7669cac6afbe
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Fri Dec 2 16:18:12 2022 +0000

    soundwire: cadence: Drain the RX FIFO after an IO timeout
    
    [ Upstream commit 0603a47bd3a8f439d7844b841eee1819353063e0 ]
    
    If wait_for_completion_timeout() times-out in _cdns_xfer_msg() it
    is possible that something could have been written to the RX FIFO.
    In this case, we should drain the RX FIFO so that anything in it
    doesn't carry over and mess up the next transfer.
    
    Obviously, if we got to this state something went wrong, and we
    don't really know the state of everything. The cleanup in this
    situation cannot be bullet-proof but we should attempt to avoid
    breaking future transaction, if only to reduce the amount of
    error noise when debugging the failure from a kernel log.
    
    Note that this patch only implements the draining for blocking
    (non-deferred) transfers. The deferred API doesn't have any proper
    handling of error conditions and would need some re-design before
    implementing cleanup. That is a task for a separate patch...
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20221202161812.4186897-4-rf@opensource.cirrus.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5ca5b71363a0a4902f8968191e8ddf939b5018e
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Fri Dec 2 16:18:11 2022 +0000

    soundwire: cadence: Remove wasted space in response_buf
    
    [ Upstream commit 827c32d0df4bbe0d1c47d79f6a5eabfe9ac75216 ]
    
    The response_buf was declared much larger (128 entries) than the number
    of responses that could ever be written into it. The Cadence IP is
    configurable up to a maximum of 32 entries, and the datasheet says
    that RX_FIFO_AVAIL can be 2 larger than this. So allow up to 34
    responses.
    
    Also add checking in cdns_read_response() to prevent overflowing
    reponse_buf if RX_FIFO_AVAIL contains an unexpectedly large number.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20221202161812.4186897-3-rf@opensource.cirrus.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d2423f15b36a7a11075faa46ce7327c4375fd63
Author: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
Date:   Mon Feb 13 11:57:09 2023 +0800

    phy: rockchip-typec: Fix unsigned comparison with less than zero
    
    [ Upstream commit f765c59c5a72546a2d74a92ae5d0eb0329d8e247 ]
    
    The dp and ufp are defined as bool type, the return value type of
    function extcon_get_state should be int, so the type of dp and ufp
    are modified to int.
    
    ./drivers/phy/rockchip/phy-rockchip-typec.c:827:12-14: WARNING: Unsigned expression compared with zero: dp > 0.
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Link: https://bugzilla.openanolis.cn/show_bug.cgi?id=3962
    Signed-off-by: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20230213035709.99027-1-jiapeng.chong@linux.alibaba.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01923e3196ee60b9357624c120b8426c7261ae15
Author: Mengyuan Lou <mengyuanlou@net-swift.com>
Date:   Tue Feb 7 18:24:19 2023 +0800

    PCI: Add ACS quirk for Wangxun NICs
    
    [ Upstream commit a2b9b123ccac913e9f9b80337d687a2fe786a634 ]
    
    Wangxun has verified there is no peer-to-peer between functions for the
    below selection of SFxxx, RP1000 and RP2000 NICS.  They may be
    multi-function devices, but the hardware does not advertise ACS capability.
    
    Add an ACS quirk for these devices so the functions can be in independent
    IOMMU groups.
    
    Link: https://lore.kernel.org/r/20230207102419.44326-1-mengyuanlou@net-swift.com
    Signed-off-by: Mengyuan Lou <mengyuanlou@net-swift.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit faa050d2ff8820f450b69b84645e74b6934ed5ad
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Sat Feb 11 10:33:21 2023 +0800

    PCI: loongson: Add more devices that need MRRS quirk
    
    [ Upstream commit c768f8c5f40fcdc6f058cc2f02592163d6c6716c ]
    
    Loongson-2K SOC and LS7A2000 chipset add new PCI IDs that need MRRS
    quirk.  Add them.
    
    Link: https://lore.kernel.org/r/20230211023321.3530080-1-chenhuacai@loongson.cn
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd9981a11d74ff2eb253bb5c459876f8bd3c6c36
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Feb 2 16:16:33 2023 +0100

    kernel/fail_function: fix memory leak with using debugfs_lookup()
    
    [ Upstream commit 2bb3669f576559db273efe49e0e69f82450efbca ]
    
    When calling debugfs_lookup() the result must have dput() called on it,
    otherwise the memory will leak over time.  To make things simpler, just
    call debugfs_lookup_and_remove() instead which handles all of the logic
    at once.
    
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20230202151633.2310897-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2301851e7e3f5935f317a840763fb4ccaac55cb
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Tue Jan 31 11:24:04 2023 +0200

    PCI: Take other bus devices into account when distributing resources
    
    [ Upstream commit 9db0b9b6a14249ef65a5f1e5e3b37762af96f425 ]
    
    A PCI bridge may reside on a bus with other devices as well. The resource
    distribution code does not take this into account and therefore it expands
    the bridge resource windows too much, not leaving space for the other
    devices (or functions of a multifunction device).  This leads to an issue
    that Jonathan reported when running QEMU with the following topology (QEMU
    parameters):
    
      -device pcie-root-port,port=0,id=root_port13,chassis=0,slot=2  \
      -device x3130-upstream,id=sw1,bus=root_port13,multifunction=on \
      -device e1000,bus=root_port13,addr=0.1                         \
      -device xio3130-downstream,id=fun1,bus=sw1,chassis=0,slot=3    \
      -device e1000,bus=fun1
    
    The first e1000 NIC here is another function in the switch upstream port.
    This leads to following errors:
    
      pci 0000:00:04.0: bridge window [mem 0x10200000-0x103fffff] to [bus 02-04]
      pci 0000:02:00.0: bridge window [mem 0x10200000-0x103fffff] to [bus 03-04]
      pci 0000:02:00.1: BAR 0: failed to assign [mem size 0x00020000]
      e1000 0000:02:00.1: can't ioremap BAR 0: [??? 0x00000000 flags 0x0]
    
    Fix this by taking into account bridge windows, device BARs and SR-IOV PF
    BARs on the bus (PF BARs include space for VF BARS so only account PF
    BARs), including the ones belonging to bridges themselves if it has any.
    
    Link: https://lore.kernel.org/linux-pci/20221014124553.0000696f@huawei.com/
    Link: https://lore.kernel.org/linux-pci/6053736d-1923-41e7-def9-7585ce1772d9@ixsystems.com/
    Link: https://lore.kernel.org/r/20230131092405.29121-3-mika.westerberg@linux.intel.com
    Reported-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reported-by: Alexander Motin <mav@ixsystems.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdca189e522850ee122a409ed7e693795e31fb58
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Tue Jan 31 11:24:03 2023 +0200

    PCI: Align extra resources for hotplug bridges properly
    
    [ Upstream commit 08f0a15ee8adb4846b08ca5d5c175fbf0f652bc9 ]
    
    After division the extra resource space per hotplug bridge may not be
    aligned according to the window alignment, so align it before passing it
    down for further distribution.
    
    Link: https://lore.kernel.org/r/20230131092405.29121-2-mika.westerberg@linux.intel.com
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 877aacda14698b6217951c30eb4033ce53f50a33
Author: Daniel Scally <dan.scally@ideasonboard.com>
Date:   Mon Feb 6 16:17:52 2023 +0000

    usb: gadget: uvc: Make bSourceID read/write
    
    [ Upstream commit b3c839bd8a07d303bc59a900d55dd35c7826562c ]
    
    At the moment, the UVC function graph is hardcoded IT -> PU -> OT.
    To add XU support we need the ability to insert the XU descriptors
    into the chain. To facilitate that, make the output terminal's
    bSourceID attribute writeable so that we can configure its source.
    
    Signed-off-by: Daniel Scally <dan.scally@ideasonboard.com>
    Link: https://lore.kernel.org/r/20230206161802.892954-2-dan.scally@ideasonboard.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56495e8d3cb4522b8e72347755d5c02e64ac30df
Author: Daniel Scally <dan.scally@ideasonboard.com>
Date:   Thu Feb 2 11:41:37 2023 +0000

    usb: uvc: Enumerate valid values for color matching
    
    [ Upstream commit e16cab9c1596e251761d2bfb5e1467950d616963 ]
    
    The color matching descriptors defined in the UVC Specification
    contain 3 fields with discrete numeric values representing particular
    settings. Enumerate those values so that later code setting them can
    be more readable.
    
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Daniel Scally <dan.scally@ideasonboard.com>
    Link: https://lore.kernel.org/r/20230202114142.300858-2-dan.scally@ideasonboard.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 961f93d63da72f5fcaa6793fb2dcbc995c119a8e
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Feb 4 10:35:46 2023 -0800

    USB: ene_usb6250: Allocate enough memory for full object
    
    [ Upstream commit ce33e64c1788912976b61314b56935abd4bc97ef ]
    
    The allocation of PageBuffer is 512 bytes in size, but the dereferencing
    of struct ms_bootblock_idi (also size 512) happens at a calculated offset
    within the allocation, which means the object could potentially extend
    beyond the end of the allocation. Avoid this case by just allocating
    enough space to catch any accesses beyond the end. Seen with GCC 13:
    
    ../drivers/usb/storage/ene_ub6250.c: In function 'ms_lib_process_bootblock':
    ../drivers/usb/storage/ene_ub6250.c:1050:44: warning: array subscript 'struct ms_bootblock_idi[0]' is partly outside array bounds of 'unsigned char[512]' [-Warray-bounds=]
     1050 |                         if (le16_to_cpu(idi->wIDIgeneralConfiguration) != MS_IDI_GENERAL_CONF)
          |                                            ^~
    ../include/uapi/linux/byteorder/little_endian.h:37:51: note: in definition of macro '__le16_to_cpu'
       37 | #define __le16_to_cpu(x) ((__force __u16)(__le16)(x))
          |                                                   ^
    ../drivers/usb/storage/ene_ub6250.c:1050:29: note: in expansion of macro 'le16_to_cpu'
     1050 |                         if (le16_to_cpu(idi->wIDIgeneralConfiguration) != MS_IDI_GENERAL_CONF)
          |                             ^~~~~~~~~~~
    In file included from ../drivers/usb/storage/ene_ub6250.c:5:
    In function 'kmalloc',
        inlined from 'ms_lib_process_bootblock' at ../drivers/usb/storage/ene_ub6250.c:942:15:
    ../include/linux/slab.h:580:24: note: at offset [256, 512] into object of size 512 allocated by 'kmalloc_trace'
      580 |                 return kmalloc_trace(
          |                        ^~~~~~~~~~~~~~
      581 |                                 kmalloc_caches[kmalloc_type(flags)][index],
          |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      582 |                                 flags, size);
          |                                 ~~~~~~~~~~~~
    
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20230204183546.never.849-kees@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 426cbe9a0a688533eb286e1298bd9e66be7f806f
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Feb 4 10:36:52 2023 -0800

    usb: host: xhci: mvebu: Iterate over array indexes instead of using pointer math
    
    [ Upstream commit 0fbd2cda92cdb00f72080665554a586f88bca821 ]
    
    Walking the dram->cs array was seen as accesses beyond the first array
    item by the compiler. Instead, use the array index directly. This allows
    for run-time bounds checking under CONFIG_UBSAN_BOUNDS as well. Seen
    with GCC 13 with -fstrict-flex-arrays:
    
    In function 'xhci_mvebu_mbus_config',
        inlined from 'xhci_mvebu_mbus_init_quirk' at ../drivers/usb/host/xhci-mvebu.c:66:2:
    ../drivers/usb/host/xhci-mvebu.c:37:28: warning: array subscript 0 is outside array bounds of 'const struct mbus_dram_window[0]' [-Warray-bounds=]
       37 |                 writel(((cs->size - 1) & 0xffff0000) | (cs->mbus_attr << 8) |
          |                          ~~^~~~~~
    
    Cc: Mathias Nyman <mathias.nyman@intel.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20230204183651.never.663-kees@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 654ae539254d10042869fdc77ad04c09e7eff1fd
Author: Huacai Chen <chenhuacai@kernel.org>
Date:   Wed Feb 1 12:30:18 2023 +0800

    PCI: loongson: Prevent LS7A MRRS increases
    
    [ Upstream commit 8b3517f88ff2983f52698893519227c10aac90b2 ]
    
    Except for isochronous-configured devices, software may set
    Max_Read_Request_Size (MRRS) to any value up to 4096.  If a device issues a
    read request with size greater than the completer's Max_Payload_Size (MPS),
    the completer is required to break the response into multiple completions.
    
    Instead of correctly responding with multiple completions to a large read
    request, some LS7A Root Ports respond with a Completer Abort.  To prevent
    this, the MRRS must be limited to an implementation-specific value.
    
    The OS cannot detect that value, so rely on BIOS to configure MRRS before
    booting, and quirk the Root Ports so we never set an MRRS larger than that
    BIOS value for any downstream device.
    
    N.B. Hot-added devices are not configured by BIOS, and they power up with
    MRRS = 512 bytes, so these devices will be limited to 512 bytes.  If the
    LS7A limit is smaller, those hot-added devices may not work correctly, but
    per [1], hotplug is not supported with this chipset revision.
    
    [1] https://lore.kernel.org/r/073638a7-ae68-2847-ac3d-29e5e760d6af@loongson.cn
    
    [bhelgaas: commit log]
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216884
    Link: https://lore.kernel.org/r/20230201043018.778499-3-chenhuacai@loongson.cn
    Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09ca779ac04cd50ee0d27acd6faf7b2224a6b65a
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Thu Jan 26 07:36:09 2023 -0800

    iio: accel: mma9551_core: Prevent uninitialized variable in mma9551_read_config_word()
    
    [ Upstream commit 64a68158738ec8f520347144352f7a09bdb9e169 ]
    
    Smatch Warns:
    drivers/iio/accel/mma9551_core.c:299
            mma9551_read_config_word() error: uninitialized symbol 'v'.
    
    When (offset >= 1 << 12) is true mma9551_transfer() will return -EINVAL
    without 'v' being initialized, so check for the error and return.
    
    Note: No actual bug as caller checks the return value and does not
    use the parameter in the problem case.
    
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Link: https://lore.kernel.org/r/20230126153610.3586243-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3357e90d3c3648807b317b8948bd400cb56fc255
Author: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
Date:   Thu Jan 26 07:21:46 2023 -0800

    iio: accel: mma9551_core: Prevent uninitialized variable in mma9551_read_status_word()
    
    [ Upstream commit e56d2c34ce9dc122b1a618172ec0e05e50adb9e9 ]
    
    Smatch Warns: drivers/iio/accel/mma9551_core.c:357
            mma9551_read_status_word() error: uninitialized symbol 'v'.
    
    When (offset >= 1 << 12) is true mma9551_transfer() will return -EINVAL
    without 'v' being initialized, so check for the error and return.
    
    Note: Not a bug as such because the caller checks return value and
    doesn't not use this parameter in the problem case.
    
    Signed-off-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
    Link: https://lore.kernel.org/r/20230126152147.3585874-1-harshit.m.mogalapalli@oracle.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8db64cea4788d972dcc9e064ad93c935ed67e4a8
Author: Yulong Zhang <yulong.zhang@metoak.net>
Date:   Tue Jan 17 10:51:47 2023 +0800

    tools/iio/iio_utils:fix memory leak
    
    [ Upstream commit f2edf0c819a4823cd6c288801ce737e8d4fcde06 ]
    
    1. fopen sysfs without fclose.
    2. asprintf filename without free.
    3. if asprintf return error,do not need to free the buffer.
    
    Signed-off-by: Yulong Zhang <yulong.zhang@metoak.net>
    Link: https://lore.kernel.org/r/20230117025147.69890-1-yulong.zhang@metoak.net
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 160494b66fe09577f30cf454f785f364c8c70c5d
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Mon Dec 12 23:49:33 2022 +0200

    mei: bus-fixup:upon error print return values of send and receive
    
    [ Upstream commit 4b8659e2c258e4fdac9ccdf06cc20c0677894ef9 ]
    
    For easier debugging, upon error, print also return values
    from __mei_cl_recv() and __mei_cl_send() functions.
    
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20221212214933.275434-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17b96b5c19bec791b433890549e44ca523dc82aa
Author: Isaac True <isaac.true@canonical.com>
Date:   Wed Nov 30 11:55:30 2022 +0100

    serial: sc16is7xx: setup GPIO controller later in probe
    
    [ Upstream commit c8f71b49ee4d28930c4a6798d1969fa91dc4ef3e ]
    
    The GPIO controller component of the sc16is7xx driver is setup too
    early, which can result in a race condition where another device tries
    to utilise the GPIO lines before the sc16is7xx device has finished
    initialising.
    
    This issue manifests itself as an Oops when the GPIO lines are configured:
    
        Unable to handle kernel read from unreadable memory at virtual address
        ...
        pc : sc16is7xx_gpio_direction_output+0x68/0x108 [sc16is7xx]
        lr : sc16is7xx_gpio_direction_output+0x4c/0x108 [sc16is7xx]
        ...
        Call trace:
        sc16is7xx_gpio_direction_output+0x68/0x108 [sc16is7xx]
        gpiod_direction_output_raw_commit+0x64/0x318
        gpiod_direction_output+0xb0/0x170
        create_gpio_led+0xec/0x198
        gpio_led_probe+0x16c/0x4f0
        platform_drv_probe+0x5c/0xb0
        really_probe+0xe8/0x448
        driver_probe_device+0xe8/0x138
        __device_attach_driver+0x94/0x118
        bus_for_each_drv+0x8c/0xe0
        __device_attach+0x100/0x1b8
        device_initial_probe+0x28/0x38
        bus_probe_device+0xa4/0xb0
        deferred_probe_work_func+0x90/0xe0
        process_one_work+0x1c4/0x480
        worker_thread+0x54/0x430
        kthread+0x138/0x150
        ret_from_fork+0x10/0x1c
    
    This patch moves the setup of the GPIO controller functions to later in the
    probe function, ensuring the sc16is7xx device has already finished
    initialising by the time other devices try to make use of the GPIO lines.
    The error handling has also been reordered to reflect the new
    initialisation order.
    
    Co-developed-by: Wen-chien Jesse Sung <jesse.sung@canonical.com>
    Signed-off-by: Wen-chien Jesse Sung <jesse.sung@canonical.com>
    Signed-off-by: Isaac True <isaac.true@canonical.com>
    Link: https://lore.kernel.org/r/20221130105529.698385-1-isaac.true@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cb1f78d886bc3da43c714029ab35027c4e3208d
Author: Sherry Sun <sherry.sun@nxp.com>
Date:   Wed Dec 14 11:11:35 2022 +0800

    tty: serial: fsl_lpuart: disable the CTS when send break signal
    
    [ Upstream commit c4c81db5cf8bc53d6160c3abf26d382c841aa434 ]
    
    LPUART IP has a bug that it treats the CTS as higher priority than the
    break signal, which cause the break signal sending through UARTCTRL_SBK
    may impacted by the CTS input if the HW flow control is enabled.
    
    Add this workaround patch to fix the IP bug, we can disable CTS before
    asserting SBK to avoid any interference from CTS, and re-enable it when
    break off.
    
    Such as for the bluetooth chip power save feature, host can let the BT
    chip get into sleep state by sending a UART break signal, and wake it up
    by turning off the UART break. If the BT chip enters the sleep mode
    successfully, it will pull up the CTS line, if the BT chip is woken up,
    it will pull down the CTS line. If without this workaround patch, the
    UART TX pin cannot send the break signal successfully as it affected by
    the BT CTS pin. After adding this patch, the BT power save feature can
    work well.
    
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Link: https://lore.kernel.org/r/20221214031137.28815-2-sherry.sun@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84ea44dc3e4ecb2632586238014bf6722aa5843b
Author: Sven Schnelle <svens@linux.ibm.com>
Date:   Fri Dec 9 12:27:36 2022 +0100

    tty: fix out-of-bounds access in tty_driver_lookup_tty()
    
    [ Upstream commit db4df8e9d79e7d37732c1a1b560958e8dadfefa1 ]
    
    When specifying an invalid console= device like console=tty3270,
    tty_driver_lookup_tty() returns the tty struct without checking
    whether index is a valid number.
    
    To reproduce:
    
    qemu-system-x86_64 -enable-kvm -nographic -serial mon:stdio \
    -kernel ../linux-build-x86/arch/x86/boot/bzImage \
    -append "console=ttyS0 console=tty3270"
    
    This crashes with:
    
    [    0.770599] BUG: kernel NULL pointer dereference, address: 00000000000000ef
    [    0.771265] #PF: supervisor read access in kernel mode
    [    0.771773] #PF: error_code(0x0000) - not-present page
    [    0.772609] Oops: 0000 [#1] PREEMPT SMP PTI
    [    0.774878] RIP: 0010:tty_open+0x268/0x6f0
    [    0.784013]  chrdev_open+0xbd/0x230
    [    0.784444]  ? cdev_device_add+0x80/0x80
    [    0.784920]  do_dentry_open+0x1e0/0x410
    [    0.785389]  path_openat+0xca9/0x1050
    [    0.785813]  do_filp_open+0xaa/0x150
    [    0.786240]  file_open_name+0x133/0x1b0
    [    0.786746]  filp_open+0x27/0x50
    [    0.787244]  console_on_rootfs+0x14/0x4d
    [    0.787800]  kernel_init_freeable+0x1e4/0x20d
    [    0.788383]  ? rest_init+0xc0/0xc0
    [    0.788881]  kernel_init+0x11/0x120
    [    0.789356]  ret_from_fork+0x22/0x30
    
    Signed-off-by: Sven Schnelle <svens@linux.ibm.com>
    Reviewed-by: Jiri Slaby <jirislaby@kernel.org>
    Link: https://lore.kernel.org/r/20221209112737.3222509-2-svens@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8a5efd5aefcc7de0f06983dd6038e4ce3a57632
Author: Yuan Can <yuancan@huawei.com>
Date:   Thu Jan 19 08:31:19 2023 +0000

    staging: emxx_udc: Add checks for dma_alloc_coherent()
    
    [ Upstream commit f6510a93cfd8c6c79b4dda0f2967cdc6df42eff4 ]
    
    As the dma_alloc_coherent may return NULL, the return value needs to be
    checked to avoid NULL poineter dereference.
    
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Simon Horman <horms@verge.net.au>
    Link: https://lore.kernel.org/r/20230119083119.16956-1-yuancan@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4d96503d67b2c4de9772521cac84e5f25218c7c
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jan 5 22:17:04 2023 -0800

    media: uvcvideo: Silence memcpy() run-time false positive warnings
    
    [ Upstream commit b839212988575c701aab4d3d9ca15e44c87e383c ]
    
    The memcpy() in uvc_video_decode_meta() intentionally copies across the
    length and flags members and into the trailing buf flexible array.
    Split the copy so that the compiler can better reason about (the lack
    of) buffer overflows here. Avoid the run-time false positive warning:
    
      memcpy: detected field-spanning write (size 12) of single field "&meta->length" at drivers/media/usb/uvc/uvc_video.c:1355 (size 1)
    
    Additionally fix a typo in the documentation for struct uvc_meta_buf.
    
    Reported-by: ionut_n2001@yahoo.com
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216810
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78b1fdc47e4e0a1ea1846f9b5913bfec0be00bea
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Jan 4 11:45:23 2023 +0100

    media: uvcvideo: Quirk for autosuspend in Logitech B910 and C910
    
    [ Upstream commit 136effa754b57632f99574fc4a3433e0cfc031d9 ]
    
    Logitech B910 and C910 firmware are unable to recover from a USB
    autosuspend. When it resumes, the device is in a state where it only
    produces invalid frames. Eg:
    
    $ echo 0xFFFF > /sys/module/uvcvideo/parameters/trace # enable verbose log
    $ yavta -c1 -n1 --file='frame#.jpg' --format MJPEG --size=1920x1080 /dev/video1
    [350438.435219] uvcvideo: uvc_v4l2_open
    [350438.529794] uvcvideo: Resuming interface 2
    [350438.529801] uvcvideo: Resuming interface 3
    [350438.529991] uvcvideo: Trying format 0x47504a4d (MJPG): 1920x1080.
    [350438.529996] uvcvideo: Using default frame interval 33333.3 us (30.0 fps).
    [350438.551496] uvcvideo: uvc_v4l2_mmap
    [350438.555890] uvcvideo: Device requested 3060 B/frame bandwidth.
    [350438.555896] uvcvideo: Selecting alternate setting 11 (3060 B/frame bandwidth).
    [350438.556362] uvcvideo: Allocated 5 URB buffers of 32x3060 bytes each.
    [350439.316468] uvcvideo: Marking buffer as bad (error bit set).
    [350439.316475] uvcvideo: Frame complete (EOF found).
    [350439.316477] uvcvideo: EOF in empty payload.
    [350439.316484] uvcvideo: frame 1 stats: 149/261/417 packets, 1/149/417 pts (early initial), 416/417 scr, last pts/stc/sof 2976325734/2978107243/249
    [350439.384510] uvcvideo: Marking buffer as bad (error bit set).
    [350439.384516] uvcvideo: Frame complete (EOF found).
    [350439.384518] uvcvideo: EOF in empty payload.
    [350439.384525] uvcvideo: frame 2 stats: 265/379/533 packets, 1/265/533 pts (early initial), 532/533 scr, last pts/stc/sof 2979524454/2981305193/316
    [350439.448472] uvcvideo: Marking buffer as bad (error bit set).
    [350439.448478] uvcvideo: Frame complete (EOF found).
    [350439.448480] uvcvideo: EOF in empty payload.
    [350439.448487] uvcvideo: frame 3 stats: 265/377/533 packets, 1/265/533 pts (early initial), 532/533 scr, last pts/stc/sof 2982723174/2984503144/382
    ...(loop)...
    
    The devices can leave this invalid state if the alternate setting of
    the streaming interface is toggled.
    
    This patch adds a quirk for this device so it can be autosuspended
    properly.
    
    lsusb -v:
    Bus 001 Device 049: ID 046d:0821 Logitech, Inc. HD Webcam C910
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               2.00
      bDeviceClass          239 Miscellaneous Device
      bDeviceSubClass         2
      bDeviceProtocol         1 Interface Association
      bMaxPacketSize0        64
      idVendor           0x046d Logitech, Inc.
      idProduct          0x0821 HD Webcam C910
      bcdDevice            0.10
      iManufacturer           0
      iProduct                0
      iSerial                 1 390022B0
      bNumConfigurations      1
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23f9bead358de7a25c815e81c62243b48a186fc0
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Oct 25 16:41:01 2022 +0200

    media: uvcvideo: Handle errors from calls to usb_string
    
    [ Upstream commit 4867bb590ae445bcfaa711a86b603c97e94574b3 ]
    
    On a Webcam from Quanta, we see the following error.
    
    usb 3-5: New USB device found, idVendor=0408, idProduct=30d2, bcdDevice= 0.03
    usb 3-5: New USB device strings: Mfr=3, Product=1, SerialNumber=2
    usb 3-5: Product: USB2.0 HD UVC WebCam
    usb 3-5: Manufacturer: Quanta
    usb 3-5: SerialNumber: 0x0001
    ...
    uvcvideo: Found UVC 1.10 device USB2.0 HD UVC WebCam (0408:30d2)
    uvcvideo: Failed to initialize entity for entity 5
    uvcvideo: Failed to register entities (-22).
    
    The Webcam reports an entity of type UVC_VC_EXTENSION_UNIT. It reports a
    string index of '7' associated with that entity. The attempt to read that
    string from the camera fails with error -32 (-EPIPE). usb_string() returns
    that error, but it is ignored. As result, the entity name is empty. This
    later causes v4l2_device_register_subdev() to return -EINVAL, and no
    entities are registered as result.
    
    While this appears to be a firmware problem with the camera, the kernel
    should still handle the situation gracefully. To do that, check the return
    value from usb_string(). If it reports an error, assign the entity's
    default name.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8aa2e1ae6426d7cbddf1735aed1a63ddf0e6909
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Tue Sep 20 16:04:55 2022 +0200

    media: uvcvideo: Handle cameras with invalid descriptors
    
    [ Upstream commit 41ddb251c68ac75c101d3a50a68c4629c9055e4c ]
    
    If the source entity does not contain any pads, do not create a link.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76752888edcc3d01dbdf8886bc65af6767803471
Author: Dean Luick <dean.luick@cornelisnetworks.com>
Date:   Mon Jan 9 14:04:29 2023 -0500

    IB/hfi1: Update RMT size calculation
    
    [ Upstream commit 892ede5a77f337831609fb9c248ac60948061894 ]
    
    Fix possible RMT overflow:  Use the correct netdev size.
    Don't allow adjusted user contexts to go negative.
    
    Fix QOS calculation: Send kernel context count as an argument since
    dd->n_krcv_queues is not yet set up in earliest call.  Do not include
    the control context in the QOS calculation.  Use the same sized
    variable to find the max of krcvq[] entries.
    
    Update the RMT count explanation to make more sense.
    
    Signed-off-by: Dean Luick <dean.luick@cornelisnetworks.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Link: https://lore.kernel.org/r/167329106946.1472990.18385495251650939054.stgit@awfm-02.cornelisnetworks.com
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 754e81ff44061dda68da0fd4ef51bd1aa9fbf2cf
Author: Liang He <windhl@126.com>
Date:   Thu Jan 5 14:10:55 2023 +0800

    mfd: arizona: Use pm_runtime_resume_and_get() to prevent refcnt leak
    
    [ Upstream commit 4414a7ab80cebf715045e3c4d465feefbad21139 ]
    
    In arizona_clk32k_enable(), we should use pm_runtime_resume_and_get()
    as pm_runtime_get_sync() will increase the refcnt even when it
    returns an error.
    
    Signed-off-by: Liang He <windhl@126.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/20230105061055.1509261-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 903b91cea77acc79a6b58553023d6ea4d0aa3dd7
Author: Souradeep Chowdhury <quic_schowdhu@quicinc.com>
Date:   Wed Feb 22 08:27:49 2023 +0900

    bootconfig: Increase max nodes of bootconfig from 1024 to 8192 for DCC support
    
    [ Upstream commit 6c40624930c58529185a257380442547580ed837 ]
    
    The Data Capture and Compare(DCC) is a debugging tool that uses the bootconfig
    for configuring the register values during boot-time. Increase the max nodes
    supported by bootconfig to cater to the requirements of the Data Capture and
    Compare Driver.
    
    Link: https://lore.kernel.org/all/1674536682-18404-1-git-send-email-quic_schowdhu@quicinc.com/
    
    Signed-off-by: Souradeep Chowdhury <quic_schowdhu@quicinc.com>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07fb5653366c86fad87d84bad9d5c3f6fbc1e307
Author: Darrell Kavanagh <darrell.kavanagh@gmail.com>
Date:   Wed Feb 15 11:50:45 2023 +0000

    firmware/efi sysfb_efi: Add quirk for Lenovo IdeaPad Duet 3
    
    [ Upstream commit e1d447157f232c650e6f32c9fb89ff3d0207c69a ]
    
    Another Lenovo convertable which reports a landscape resolution of
    1920x1200 with a pitch of (1920 * 4) bytes, while the actual framebuffer
    has a resolution of 1200x1920 with a pitch of (1200 * 4) bytes.
    
    Signed-off-by: Darrell Kavanagh <darrell.kavanagh@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25c9fba724bdfa66e4f0d19e8b3d331eca798be9
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Jan 13 20:55:01 2023 +0800

    tracing: Add NULL checks for buffer in ring_buffer_free_read_page()
    
    [ Upstream commit 3e4272b9954094907f16861199728f14002fcaf6 ]
    
    In a previous commit 7433632c9ff6, buffer, buffer->buffers and
    buffer->buffers[cpu] in ring_buffer_wake_waiters() can be NULL,
    and thus the related checks are added.
    
    However, in the same call stack, these variables are also used in
    ring_buffer_free_read_page():
    
    tracing_buffers_release()
      ring_buffer_wake_waiters(iter->array_buffer->buffer)
        cpu_buffer = buffer->buffers[cpu] -> Add checks by previous commit
      ring_buffer_free_read_page(iter->array_buffer->buffer)
        cpu_buffer = buffer->buffers[cpu] -> No check
    
    Thus, to avod possible null-pointer derefernces, the related checks
    should be added.
    
    These results are reported by a static tool designed by myself.
    
    Link: https://lkml.kernel.org/r/20230113125501.760324-1-baijiaju1990@gmail.com
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e30b26e746175a775921b948479308644336b796
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Feb 25 21:39:52 2023 -0800

    thermal: intel: BXT_PMIC: select REGMAP instead of depending on it
    
    [ Upstream commit 1467fb960349dfa5e300658f1a409dde2cfb0c51 ]
    
    REGMAP is a hidden (not user visible) symbol. Users cannot set it
    directly thru "make *config", so drivers should select it instead of
    depending on it if they need it.
    
    Consistently using "select" or "depends on" can also help reduce
    Kconfig circular dependency issues.
    
    Therefore, change the use of "depends on REGMAP" to "select REGMAP".
    
    Fixes: b474303ffd57 ("thermal: add Intel BXT WhiskeyCove PMIC thermal driver")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f73134231fa23e0856c15010db5f5c03693c1e92
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Feb 27 13:06:50 2023 +0300

    thermal: intel: quark_dts: fix error pointer dereference
    
    [ Upstream commit f1b930e740811d416de4d2074da48b6633a672c8 ]
    
    If alloc_soc_dts() fails, then we can just return.  Trying to free
    "soc_dts" will lead to an Oops.
    
    Fixes: 8c1876939663 ("thermal: intel Quark SoC X1000 DTS thermal driver")
    Signed-off-by: Dan Carpenter <error27@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01829cb8708912ab0a2ae50b35c04a929045c5bf
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Feb 27 09:58:26 2023 +0100

    ASoC: zl38060 add gpiolib dependency
    
    [ Upstream commit 0de2cc3707b6b6e2ad40bd24ce09a5c1f65d01e1 ]
    
    Without gpiolib, this driver fails to link:
    
    arm-linux-gnueabi-ld: sound/soc/codecs/zl38060.o: in function `chip_gpio_get':
    zl38060.c:(.text+0x30): undefined reference to `gpiochip_get_data'
    arm-linux-gnueabi-ld: sound/soc/codecs/zl38060.o: in function `zl38_spi_probe':
    zl38060.c:(.text+0xa18): undefined reference to `devm_gpiochip_add_data_with_key'
    
    This appears to have been in the driver since the start, but is hard to
    hit in randconfig testing since gpiolib is almost always selected by something
    else.
    
    Fixes: 52e8a94baf90 ("ASoC: Add initial ZL38060 driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20230227085850.2503725-1-arnd@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bc1f260ede1274a59db706768b6292a24d45128
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Feb 2 19:23:32 2022 +0000

    ASoC: zl38060: Remove spurious gpiolib select
    
    [ Upstream commit 8e70aaae32b72d3088d18a3447b67112b3f5979a ]
    
    The usage of GPIOs is optional in the code so don't force on gpiolib when
    building it, avoiding warnings in randconfigs.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20220202192333.3655269-6-broonie@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Stable-dep-of: 0de2cc3707b6 ("ASoC: zl38060 add gpiolib dependency")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8e7c0ec458c677d2c55635c22a7118d5b303abe
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Fri Feb 24 11:45:51 2023 +0100

    ASoC: adau7118: don't disable regulators on device unbind
    
    [ Upstream commit b5bfa7277ee7d944421e0ef193586c6e34d7492c ]
    
    The regulators are supposed to be controlled through the
    set_bias_level() component callback. Moreover, the regulators are not
    enabled during probe and so, this would lead to a regulator unbalanced
    use count.
    
    Fixes: ca514c0f12b02 ("ASOC: Add ADAU7118 8 Channel PDM-to-I2S/TDM Converter driver")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20230224104551.1139981-1-nuno.sa@analog.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c79a924ed6afac1708dfd370ba66bcf6a852ced6
Author: Zhong Jinghua <zhongjinghua@huawei.com>
Date:   Tue Feb 21 17:50:27 2023 +0800

    loop: loop_set_status_from_info() check before assignment
    
    [ Upstream commit 9f6ad5d533d1c71e51bdd06a5712c4fbc8768dfa ]
    
    In loop_set_status_from_info(), lo->lo_offset and lo->lo_sizelimit should
    be checked before reassignment, because if an overflow error occurs, the
    original correct value will be changed to the wrong value, and it will not
    be changed back.
    
    More, the original patch did not solve the problem, the value was set and
    ioctl returned an error, but the subsequent io used the value in the loop
    driver, which still caused an alarm:
    
    loop_handle_cmd
     do_req_filebacked
      loff_t pos = ((loff_t) blk_rq_pos(rq) << 9) + lo->lo_offset;
      lo_rw_aio
       cmd->iocb.ki_pos = pos
    
    Fixes: c490a0b5a4f3 ("loop: Check for overflow while configuring loop")
    Signed-off-by: Zhong Jinghua <zhongjinghua@huawei.com>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Link: https://lore.kernel.org/r/20230221095027.3656193-1-zhongjinghua@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af5f9a47614755023d615f0ba4fd35e9e490f0fc
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 14 14:28:08 2023 +0100

    scsi: ipr: Work around fortify-string warning
    
    [ Upstream commit ee4e7dfe4ffc9ca50c6875757bd119abfe22b5c5 ]
    
    The ipr_log_vpd_compact() function triggers a fortified memcpy() warning
    about a potential string overflow with all versions of clang:
    
    In file included from drivers/scsi/ipr.c:43:
    In file included from include/linux/string.h:254:
    include/linux/fortify-string.h:520:4: error: call to '__write_overflow_field' declared with 'warning' attribute: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror,-Wattribute-warning]
                            __write_overflow_field(p_size_field, size);
                            ^
    include/linux/fortify-string.h:520:4: error: call to '__write_overflow_field' declared with 'warning' attribute: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror,-Wattribute-warning]
    2 errors generated.
    
    I don't see anything actually wrong with the function, but this is the only
    instance I can reproduce of the fortification going wrong in the kernel at
    the moment, so the easiest solution may be to rewrite the function into
    something that does not trigger the warning.
    
    Instead of having a combined buffer for vendor/device/serial strings, use
    three separate local variables and just truncate the whitespace
    individually.
    
    Link: https://lore.kernel.org/r/20230214132831.2118392-1-arnd@kernel.org
    Cc: Kees Cook <keescook@chromium.org>
    Fixes: 8cf093e275d0 ("[SCSI] ipr: Improved dual adapter errors")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Acked-by: Brian King <brking@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 555f315832ecc4ab9ffc94fbaea77ad3b5e98dd5
Author: Samuel Holland <samuel@sholland.org>
Date:   Thu Dec 29 15:53:19 2022 -0600

    rtc: sun6i: Always export the internal oscillator
    
    [ Upstream commit 344f4030f6c50a9db2d03021884c4bf36191b53a ]
    
    On all variants of the hardware, the internal oscillator is one possible
    parent for the AR100 clock. It needs to be exported so we can model that
    relationship correctly in the devicetree.
    
    Fixes: c56afc1844d6 ("rtc: sun6i: Expose internal oscillator through device tree")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20221229215319.14145-1-samuel@sholland.org
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e734e694181b27687ce17da3229aa8edfd21760
Author: George Kennedy <george.kennedy@oracle.com>
Date:   Mon Feb 27 15:21:41 2023 -0500

    vc_screen: modify vcs_size() handling in vcs_read()
    
    [ Upstream commit 46d733d0efc79bc8430d63b57ab88011806d5180 ]
    
    Restore the vcs_size() handling in vcs_read() to what
    it had been in previous version.
    
    Fixes: 226fae124b2d ("vc_screen: move load of struct vc_data pointer in vcs_read() to avoid UAF")
    Suggested-by: Jiri Slaby <jirislaby@kernel.org>
    Signed-off-by: George Kennedy <george.kennedy@oracle.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac73d8f6a64a9be3ab1c9e8d9ed66d81aebc82f5
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Feb 27 08:33:36 2023 +0000

    tcp: tcp_check_req() can be called from process context
    
    [ Upstream commit 580f98cc33a260bb8c6a39ae2921b29586b84fdf ]
    
    This is a follow up of commit 0a375c822497 ("tcp: tcp_rtx_synack()
    can be called from process context").
    
    Frederick Lawler reported another "__this_cpu_add() in preemptible"
    warning caused by the same reason.
    
    In my former patch I took care of tcp_rtx_synack()
    but forgot that tcp_check_req() also contained some SNMP updates.
    
    Note that some parts of tcp_check_req() always run in BH context,
    I added a comment to clarify this.
    
    Fixes: 8336886f786f ("tcp: TCP Fast Open Server - support TFO listeners")
    Link: https://lore.kernel.org/netdev/8cd33923-a21d-397c-e46b-2a068c287b03@cloudflare.com/T/
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Frederick Lawler <fred@cloudflare.com>
    Tested-by: Frederick Lawler <fred@cloudflare.com>
    Link: https://lore.kernel.org/r/20230227083336.4153089-1-edumazet@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d08ed4651a105224b97f53f6a586a3efa175498
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Sat Feb 25 17:22:37 2023 +0100

    ARM: dts: spear320-hmi: correct STMPE GPIO compatible
    
    [ Upstream commit 33a0c1b850c8c85f400531dab3a0b022cdb164b1 ]
    
    The compatible is st,stmpe-gpio.
    
    Fixes: e2eb69183ec4 ("ARM: SPEAr320: DT: Add SPEAr 320 HMI board support")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Link: https://lore.kernel.org/r/20230225162237.40242-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f935409cd82f45205b597cd93efbd7cfb10d54c
Author: Pedro Tammela <pctammela@mojatatu.com>
Date:   Fri Feb 24 12:00:58 2023 -0300

    net/sched: act_sample: fix action bind logic
    
    [ Upstream commit 4a20056a49a1854966562241922f68197f950539 ]
    
    The TC architecture allows filters and actions to be created independently.
    In filters the user can reference action objects using:
    tc action add action sample ... index 1
    tc filter add ... action pedit index 1
    
    In the current code for act_sample this is broken as it checks netlink
    attributes for create/update before actually checking if we are binding to an
    existing action.
    
    tdc results:
    1..29
    ok 1 9784 - Add valid sample action with mandatory arguments
    ok 2 5c91 - Add valid sample action with mandatory arguments and continue control action
    ok 3 334b - Add valid sample action with mandatory arguments and drop control action
    ok 4 da69 - Add valid sample action with mandatory arguments and reclassify control action
    ok 5 13ce - Add valid sample action with mandatory arguments and pipe control action
    ok 6 1886 - Add valid sample action with mandatory arguments and jump control action
    ok 7 7571 - Add sample action with invalid rate
    ok 8 b6d4 - Add sample action with mandatory arguments and invalid control action
    ok 9 a874 - Add invalid sample action without mandatory arguments
    ok 10 ac01 - Add invalid sample action without mandatory argument rate
    ok 11 4203 - Add invalid sample action without mandatory argument group
    ok 12 14a7 - Add invalid sample action without mandatory argument group
    ok 13 8f2e - Add valid sample action with trunc argument
    ok 14 45f8 - Add sample action with maximum rate argument
    ok 15 ad0c - Add sample action with maximum trunc argument
    ok 16 83a9 - Add sample action with maximum group argument
    ok 17 ed27 - Add sample action with invalid rate argument
    ok 18 2eae - Add sample action with invalid group argument
    ok 19 6ff3 - Add sample action with invalid trunc size
    ok 20 2b2a - Add sample action with invalid index
    ok 21 dee2 - Add sample action with maximum allowed index
    ok 22 560e - Add sample action with cookie
    ok 23 704a - Replace existing sample action with new rate argument
    ok 24 60eb - Replace existing sample action with new group argument
    ok 25 2cce - Replace existing sample action with new trunc argument
    ok 26 59d1 - Replace existing sample action with new control argument
    ok 27 0a6e - Replace sample action with invalid goto chain control
    ok 28 3872 - Delete sample action with valid index
    ok 29 a394 - Delete sample action with invalid index
    
    Fixes: 5c5670fae430 ("net/sched: Introduce sample tc action")
    Reviewed-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Pedro Tammela <pctammela@mojatatu.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8978315cb4bf8878c9c8ec05dafd8f7ff539860d
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Sat Feb 25 13:56:14 2023 +0300

    nfc: fix memory leak of se_io context in nfc_genl_se_io
    
    [ Upstream commit 25ff6f8a5a3b8dc48e8abda6f013e8cc4b14ffea ]
    
    The callback context for sending/receiving APDUs to/from the selected
    secure element is allocated inside nfc_genl_se_io and supposed to be
    eventually freed in se_io_cb callback function. However, there are several
    error paths where the bwi_timer is not charged to call se_io_cb later, and
    the cb_context is leaked.
    
    The patch proposes to free the cb_context explicitly on those error paths.
    
    At the moment we can't simply check 'dev->ops->se_io()' return value as it
    may be negative in both cases: when the timer was charged and was not.
    
    Fixes: 5ce3f32b5264 ("NFC: netlink: SE API implementation")
    Reported-by: syzbot+df64c0a2e8d68e78a4fa@syzkaller.appspotmail.com
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8817602cffe0107834865b5d2c2fb7f77132d7dc
Author: Maor Dickman <maord@nvidia.com>
Date:   Wed Feb 8 17:44:06 2023 +0200

    net/mlx5: Geneve, Fix handling of Geneve object id as error code
    
    [ Upstream commit d28a06d7dbedc598a06bd1e53a28125f87ca5d0c ]
    
    On success, mlx5_geneve_tlv_option_create returns non negative
    Geneve object id. In case the object id is positive value the
    caller functions will handle it as an error (non zero) and
    will fail to offload the Geneve rule.
    
    Fix this by changing caller function ,mlx5_geneve_tlv_option_add,
    to return 0 in case valid non negative object id was provided.
    
    Fixes: 0ccc171ea6a2 ("net/mlx5: Geneve, Manage Geneve TLV options")
    Signed-off-by: Maor Dickman <maord@nvidia.com>
    Reviewed-by: Raed Salem <raeds@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ac65fab2b3f121e4d606b3729cf06da0bfc8885
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Wed Jan 4 10:04:24 2023 +0800

    9p/rdma: unmap receive dma buffer in rdma_request()/post_recv()
    
    [ Upstream commit 74a25e6e916cb57dab4267a96fbe8864ed21abdb ]
    
    When down_interruptible() or ib_post_send() failed in rdma_request(),
    receive dma buffer is not unmapped. Add unmap action to error path.
    Also if ib_post_recv() failed in post_recv(), dma buffer is not unmapped.
    Add unmap action to error path.
    
    Link: https://lkml.kernel.org/r/20230104020424.611926-1-shaozhengchao@huawei.com
    Fixes: fc79d4b104f0 ("9p: rdma: RDMA Transport Support for 9P")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Eric Van Hensbergen <ericvh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e0359f151ac151abe3fa71040e450ed69cb824b
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Jan 30 12:30:36 2023 +0100

    9p/xen: fix connection sequence
    
    [ Upstream commit c15fe55d14b3b4ded5af2a3260877460a6ffb8ad ]
    
    Today the connection sequence of the Xen 9pfs frontend doesn't match
    the documented sequence. It can work reliably only for a PV 9pfs device
    having been added at boot time already, as the frontend is not waiting
    for the backend to have set its state to "XenbusStateInitWait" before
    reading the backend properties from Xenstore.
    
    Fix that by following the documented sequence [1] (the documentation
    has a bug, so the reference is for the patch fixing that).
    
    [1]: https://lore.kernel.org/xen-devel/20230130090937.31623-1-jgross@suse.com/T/#u
    
    Link: https://lkml.kernel.org/r/20230130113036.7087-3-jgross@suse.com
    Fixes: 868eb122739a ("xen/9pfs: introduce Xen 9pfs transport driver")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Eric Van Hensbergen <ericvh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c959a53b62a6d5bdcf6f2c4295714f68a2381f6a
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Jan 30 12:30:35 2023 +0100

    9p/xen: fix version parsing
    
    [ Upstream commit f1956f4ec15195ec60976d9b5625326285ab102e ]
    
    When connecting the Xen 9pfs frontend to the backend, the "versions"
    Xenstore entry written by the backend is parsed in a wrong way.
    
    The "versions" entry is defined to contain the versions supported by
    the backend separated by commas (e.g. "1,2"). Today only version "1"
    is defined. Unfortunately the frontend doesn't look for "1" being
    listed in the entry, but it is expecting the entry to have the value
    "1".
    
    This will result in failure as soon as the backend will support e.g.
    versions "1" and "2".
    
    Fix that by scanning the entry correctly.
    
    Link: https://lkml.kernel.org/r/20230130113036.7087-2-jgross@suse.com
    Fixes: 71ebd71921e4 ("xen/9pfs: connect to the backend")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Eric Van Hensbergen <ericvh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82a0c1fe1fe0a0b9957e8f6a0b99884f64ba0ba4
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 23 08:38:45 2023 +0000

    net: fix __dev_kfree_skb_any() vs drop monitor
    
    [ Upstream commit ac3ad19584b26fae9ac86e4faebe790becc74491 ]
    
    dev_kfree_skb() is aliased to consume_skb().
    
    When a driver is dropping a packet by calling dev_kfree_skb_any()
    we should propagate the drop reason instead of pretending
    the packet was consumed.
    
    Note: Now we have enum skb_drop_reason we could remove
    enum skb_free_reason (for linux-6.4)
    
    v2: added an unlikely(), suggested by Yunsheng Lin.
    
    Fixes: e6247027e517 ("net: introduce dev_consume_skb_any()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yunsheng Lin <linyunsheng@huawei.com>
    Reviewed-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ee401f89cdb10f39098c0656d695b2bc4052100
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Feb 22 12:07:21 2023 -0500

    sctp: add a refcnt in sctp_stream_priorities to avoid a nested loop
    
    [ Upstream commit 68ba44639537de6f91fe32783766322d41848127 ]
    
    With this refcnt added in sctp_stream_priorities, we don't need to
    traverse all streams to check if the prio is used by other streams
    when freeing one stream's prio in sctp_sched_prio_free_sid(). This
    can avoid a nested loop (up to 65535 * 65535), which may cause a
    stuck as Ying reported:
    
        watchdog: BUG: soft lockup - CPU#23 stuck for 26s! [ksoftirqd/23:136]
        Call Trace:
         <TASK>
         sctp_sched_prio_free_sid+0xab/0x100 [sctp]
         sctp_stream_free_ext+0x64/0xa0 [sctp]
         sctp_stream_free+0x31/0x50 [sctp]
         sctp_association_free+0xa5/0x200 [sctp]
    
    Note that it doesn't need to use refcount_t type for this counter,
    as its accessing is always protected under the sock lock.
    
    v1->v2:
     - add a check in sctp_sched_prio_set to avoid the possible prio_head
       refcnt overflow.
    
    Fixes: 9ed7bfc79542 ("sctp: fix memory leak in sctp_stream_outq_migrate()")
    Reported-by: Ying Xu <yinxu@redhat.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/825eb0c905cb864991eba335f4a2b780e543f06b.1677085641.git.lucien.xin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da26369377f0b671c14692e2d65ceb38131053e1
Author: Lu Wei <luwei32@huawei.com>
Date:   Wed Feb 22 16:36:28 2023 +0800

    ipv6: Add lwtunnel encap size of all siblings in nexthop calculation
    
    [ Upstream commit 4cc59f386991ec9374cb4bc83dbe1c0b5a95033f ]
    
    In function rt6_nlmsg_size(), the length of nexthop is calculated
    by multipling the nexthop length of fib6_info and the number of
    siblings. However if the fib6_info has no lwtunnel but the siblings
    have lwtunnels, the nexthop length is less than it should be, and
    it will trigger a warning in inet6_rt_notify() as follows:
    
    WARNING: CPU: 0 PID: 6082 at net/ipv6/route.c:6180 inet6_rt_notify+0x120/0x130
    ......
    Call Trace:
     <TASK>
     fib6_add_rt2node+0x685/0xa30
     fib6_add+0x96/0x1b0
     ip6_route_add+0x50/0xd0
     inet6_rtm_newroute+0x97/0xa0
     rtnetlink_rcv_msg+0x156/0x3d0
     netlink_rcv_skb+0x5a/0x110
     netlink_unicast+0x246/0x350
     netlink_sendmsg+0x250/0x4c0
     sock_sendmsg+0x66/0x70
     ___sys_sendmsg+0x7c/0xd0
     __sys_sendmsg+0x5d/0xb0
     do_syscall_64+0x3f/0x90
     entry_SYSCALL_64_after_hwframe+0x72/0xdc
    
    This bug can be reproduced by script:
    
    ip -6 addr add 2002::2/64 dev ens2
    ip -6 route add 100::/64 via 2002::1 dev ens2 metric 100
    
    for i in 10 20 30 40 50 60 70;
    do
            ip link add link ens2 name ipv_$i type ipvlan
            ip -6 addr add 2002::$i/64 dev ipv_$i
            ifconfig ipv_$i up
    done
    
    for i in 10 20 30 40 50 60;
    do
            ip -6 route append 100::/64 encap ip6 dst 2002::$i via 2002::1
    dev ipv_$i metric 100
    done
    
    ip -6 route append 100::/64 via 2002::1 dev ipv_70 metric 100
    
    This patch fixes it by adding nexthop_len of every siblings using
    rt6_nh_nlmsg_size().
    
    Fixes: beb1afac518d ("net: ipv6: Add support to dump multipath routes via RTA_MULTIPATH attribute")
    Signed-off-by: Lu Wei <luwei32@huawei.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20230222083629.335683-2-luwei32@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9060abce3305ab2354c892c09d5689df51486df5
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Feb 17 23:20:06 2023 +0100

    netfilter: ebtables: fix table blob use-after-free
    
    [ Upstream commit e58a171d35e32e6e8c37cfe0e8a94406732a331f ]
    
    We are not allowed to return an error at this point.
    Looking at the code it looks like ret is always 0 at this
    point, but its not.
    
    t = find_table_lock(net, repl->name, &ret, &ebt_mutex);
    
    ... this can return a valid table, with ret != 0.
    
    This bug causes update of table->private with the new
    blob, but then frees the blob right away in the caller.
    
    Syzbot report:
    
    BUG: KASAN: vmalloc-out-of-bounds in __ebt_unregister_table+0xc00/0xcd0 net/bridge/netfilter/ebtables.c:1168
    Read of size 4 at addr ffffc90005425000 by task kworker/u4:4/74
    Workqueue: netns cleanup_net
    Call Trace:
     kasan_report+0xbf/0x1f0 mm/kasan/report.c:517
     __ebt_unregister_table+0xc00/0xcd0 net/bridge/netfilter/ebtables.c:1168
     ebt_unregister_table+0x35/0x40 net/bridge/netfilter/ebtables.c:1372
     ops_exit_list+0xb0/0x170 net/core/net_namespace.c:169
     cleanup_net+0x4ee/0xb10 net/core/net_namespace.c:613
    ...
    
    ip(6)tables appears to be ok (ret should be 0 at this point) but make
    this more obvious.
    
    Fixes: c58dd2dd443c ("netfilter: Can't fail and free after table replacement")
    Reported-by: syzbot+f61594de72d6705aea03@syzkaller.appspotmail.com
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ff0b87df98b93e10ced45773aa7d35377355421
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Fri Feb 10 15:17:30 2023 +0800

    netfilter: ctnetlink: fix possible refcount leak in ctnetlink_create_conntrack()
    
    [ Upstream commit ac4893980bbe79ce383daf9a0885666a30fe4c83 ]
    
    nf_ct_put() needs to be called to put the refcount got by
    nf_conntrack_find_get() to avoid refcount leak when
    nf_conntrack_hash_check_insert() fails.
    
    Fixes: 7d367e06688d ("netfilter: ctnetlink: fix soft lockup when netlink adds new entries (v2)")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f7abdd500269d044388593654a85afc3e174b91
Author: Li Hua <hucool.lihua@huawei.com>
Date:   Wed Nov 16 10:07:06 2022 +0800

    watchdog: pcwd_usb: Fix attempting to access uninitialized memory
    
    [ Upstream commit 7d06c07c67100fd0f8e6b3ab7145ce789f788117 ]
    
    The stack variable msb and lsb may be used uninitialized in function
    usb_pcwd_get_temperature and usb_pcwd_get_timeleft when usb card no response.
    
    The build waring is:
    drivers/watchdog/pcwd_usb.c:336:22: error: ‘lsb’ is used uninitialized in this function [-Werror=uninitialized]
      *temperature = (lsb * 9 / 5) + 32;
                      ~~~~^~~
    drivers/watchdog/pcwd_usb.c:328:21: note: ‘lsb’ was declared here
      unsigned char msb, lsb;
                         ^~~
    cc1: all warnings being treated as errors
    scripts/Makefile.build:250: recipe for target 'drivers/watchdog/pcwd_usb.o' failed
    make[3]: *** [drivers/watchdog/pcwd_usb.o] Error 1
    
    Fixes: b7e04f8c61a4 ("mv watchdog tree under drivers")
    Signed-off-by: Li Hua <hucool.lihua@huawei.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20221116020706.70847-1-hucool.lihua@huawei.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5a21a5501508ae3afa2fe6d5a3e74a37fa48df3
Author: Chen Jun <chenjun102@huawei.com>
Date:   Wed Nov 16 01:27:14 2022 +0000

    watchdog: Fix kmemleak in watchdog_cdev_register
    
    [ Upstream commit 13721a2ac66b246f5802ba1b75ad8637e53eeecc ]
    
    kmemleak reports memory leaks in watchdog_dev_register, as follows:
    unreferenced object 0xffff888116233000 (size 2048):
      comm ""modprobe"", pid 28147, jiffies 4353426116 (age 61.741s)
      hex dump (first 32 bytes):
        80 fa b9 05 81 88 ff ff 08 30 23 16 81 88 ff ff  .........0#.....
        08 30 23 16 81 88 ff ff 00 00 00 00 00 00 00 00  .0#.............
      backtrace:
        [<000000007f001ffd>] __kmem_cache_alloc_node+0x157/0x220
        [<000000006a389304>] kmalloc_trace+0x21/0x110
        [<000000008d640eea>] watchdog_dev_register+0x4e/0x780 [watchdog]
        [<0000000053c9f248>] __watchdog_register_device+0x4f0/0x680 [watchdog]
        [<00000000b2979824>] watchdog_register_device+0xd2/0x110 [watchdog]
        [<000000001f730178>] 0xffffffffc10880ae
        [<000000007a1a8bcc>] do_one_initcall+0xcb/0x4d0
        [<00000000b98be325>] do_init_module+0x1ca/0x5f0
        [<0000000046d08e7c>] load_module+0x6133/0x70f0
        ...
    
    unreferenced object 0xffff888105b9fa80 (size 16):
      comm ""modprobe"", pid 28147, jiffies 4353426116 (age 61.741s)
      hex dump (first 16 bytes):
        77 61 74 63 68 64 6f 67 31 00 b9 05 81 88 ff ff  watchdog1.......
      backtrace:
        [<000000007f001ffd>] __kmem_cache_alloc_node+0x157/0x220
        [<00000000486ab89b>] __kmalloc_node_track_caller+0x44/0x1b0
        [<000000005a39aab0>] kvasprintf+0xb5/0x140
        [<0000000024806f85>] kvasprintf_const+0x55/0x180
        [<000000009276cb7f>] kobject_set_name_vargs+0x56/0x150
        [<00000000a92e820b>] dev_set_name+0xab/0xe0
        [<00000000cec812c6>] watchdog_dev_register+0x285/0x780 [watchdog]
        [<0000000053c9f248>] __watchdog_register_device+0x4f0/0x680 [watchdog]
        [<00000000b2979824>] watchdog_register_device+0xd2/0x110 [watchdog]
        [<000000001f730178>] 0xffffffffc10880ae
        [<000000007a1a8bcc>] do_one_initcall+0xcb/0x4d0
        [<00000000b98be325>] do_init_module+0x1ca/0x5f0
        [<0000000046d08e7c>] load_module+0x6133/0x70f0
        ...
    
    The reason is that put_device is not be called if cdev_device_add fails
    and wdd->id != 0.
    
    watchdog_cdev_register
      wd_data = kzalloc                             [1]
      err = dev_set_name                            [2]
      ..
      err = cdev_device_add
      if (err) {
        if (wdd->id == 0) {  // wdd->id != 0
          ..
        }
        return err;  // [1],[2] would be leaked
    
    To fix it, call put_device in all wdd->id cases.
    
    Fixes: 72139dfa2464 ("watchdog: Fix the race between the release of watchdog_core_data and cdev")
    Signed-off-by: Chen Jun <chenjun102@huawei.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20221116012714.102066-1-chenjun102@huawei.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 273559f58f71512e4be929b78d4e05f60d48a60c
Author: ruanjinjie <ruanjinjie@huawei.com>
Date:   Wed Nov 16 17:49:50 2022 +0800

    watchdog: at91sam9_wdt: use devm_request_irq to avoid missing free_irq() in error path
    
    [ Upstream commit 07bec0e09c1afbab4c5674fd2341f4f52d594f30 ]
    
    free_irq() is missing in case of error in at91_wdt_init(), use
    devm_request_irq to fix that.
    
    Fixes: 5161b31dc39a ("watchdog: at91sam9_wdt: better watchdog support")
    Signed-off-by: ruanjinjie <ruanjinjie@huawei.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20221116094950.3141943-1-ruanjinjie@huawei.com
    [groeck: Adjust multi-line alignment]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cb46fa16b96ff197eb84a33b23a8448fe0c1e8d
Author: Ammar Faizi <ammarfaizi2@gnuweeb.org>
Date:   Sat Dec 24 00:23:38 2022 +0700

    x86: um: vdso: Add '%rcx' and '%r11' to the syscall clobber list
    
    [ Upstream commit 5541992e512de8c9133110809f767bd1b54ee10d ]
    
    The 'syscall' instruction clobbers '%rcx' and '%r11', but they are not
    listed in the inline Assembly that performs the syscall instruction.
    
    No real bug is found. It wasn't buggy by luck because '%rcx' and '%r11'
    are caller-saved registers, and not used in the functions, and the
    functions are never inlined.
    
    Add them to the clobber list for code correctness.
    
    Fixes: f1c2bb8b9964ed31de988910f8b1cfb586d30091 ("um: implement a x86_64 vDSO")
    Signed-off-by: Ammar Faizi <ammarfaizi2@gnuweeb.org>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a18856e074479bd050b01e688c58defadce7ab0
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Mon Jun 13 14:59:04 2022 +0800

    ubi: ubi_wl_put_peb: Fix infinite loop when wear-leveling work failed
    
    [ Upstream commit 4d57a7333e26040f2b583983e1970d9d460e56b0 ]
    
    Following process will trigger an infinite loop in ubi_wl_put_peb():
    
            ubifs_bgt               ubi_bgt
    ubifs_leb_unmap
      ubi_leb_unmap
        ubi_eba_unmap_leb
          ubi_wl_put_peb    wear_leveling_worker
                              e1 = rb_entry(rb_first(&ubi->used)
                              e2 = get_peb_for_wl(ubi)
                              ubi_io_read_vid_hdr  // return err (flash fault)
                              out_error:
                                ubi->move_from = ubi->move_to = NULL
                                wl_entry_destroy(ubi, e1)
                                  ubi->lookuptbl[e->pnum] = NULL
          retry:
            e = ubi->lookuptbl[pnum];       // return NULL
            if (e == ubi->move_from) {      // NULL == NULL gets true
              goto retry;                   // infinite loop !!!
    
    $ top
      PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     COMMAND
      7676 root     20   0       0      0      0 R 100.0  0.0  ubifs_bgt0_0
    
    Fix it by:
     1) Letting ubi_wl_put_peb() returns directly if wearl leveling entry has
        been removed from 'ubi->lookuptbl'.
     2) Using 'ubi->wl_lock' protecting wl entry deletion to preventing an
        use-after-free problem for wl entry in ubi_wl_put_peb().
    
    Fetch a reproducer in [Link].
    
    Fixes: 43f9b25a9cdd7b1 ("UBI: bugfix: protect from volume removal")
    Fixes: ee59ba8b064f692 ("UBI: Fix stale pointers in ubi->lookuptbl")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216111
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d448dd6bcb61a508204b57ea1f454ba9bac2f24
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Sat Jul 30 19:28:37 2022 +0800

    ubi: Fix UAF wear-leveling entry in eraseblk_count_seq_show()
    
    [ Upstream commit a240bc5c43130c6aa50831d7caaa02a1d84e1bce ]
    
    Wear-leveling entry could be freed in error path, which may be accessed
    again in eraseblk_count_seq_show(), for example:
    
    __erase_worker                eraseblk_count_seq_show
                                    wl = ubi->lookuptbl[*block_number]
                                    if (wl)
      wl_entry_destroy
        ubi->lookuptbl[e->pnum] = NULL
        kmem_cache_free(ubi_wl_entry_slab, e)
                                       erase_count = wl->ec  // UAF!
    
    Wear-leveling entry updating/accessing in ubi->lookuptbl should be
    protected by ubi->wl_lock, fix it by adding ubi->wl_lock to serialize
    wl entry accessing between wl_entry_destroy() and
    eraseblk_count_seq_show().
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216305
    Fixes: 7bccd12d27b7e3 ("ubi: Add debugfs file for tracking PEB state")
    Fixes: 801c135ce73d5d ("UBI: Unsorted Block Images")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0aa0253f6c99cf9b4fd2ec4e8591cba8dae4e88f
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Aug 9 15:06:19 2022 +0800

    ubi: fastmap: Fix missed fm_anchor PEB in wear-leveling after disabling fastmap
    
    [ Upstream commit 76f9476ece445a07aeb72df9d896cd563fb5b50f ]
    
    After disabling fastmap(ubi->fm_disabled = 1), fastmap won't be updated,
    fm_anchor PEB is missed being scheduled for erasing. Besides, fm_anchor
    PEB may have smallest erase count, it doesn't participate wear-leveling.
    The difference of erase count between fm_anchor PEB and other PEBs will
    be larger and larger later on.
    
    In which situation fastmap can be disabled? Initially, we have an UBI
    image with fastmap. Then the image will be atttached without module
    parameter 'fm_autoconvert', ubi turns to full scanning mode in one
    random attaching process(eg. bad fastmap caused by powercut), ubi
    fastmap is disabled since then.
    
    Fix it by not getting fm_anchor if fastmap is disabled in
    ubi_refill_pools().
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216341
    Fixes: 4b68bf9a69d22d ("ubi: Select fastmap anchor PEBs considering ...")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f09a84548c379d4257368aa05cb5273c42aa829d
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Wed Jun 1 10:59:59 2022 +0800

    ubifs: ubifs_writepage: Mark page dirty after writing inode failed
    
    [ Upstream commit fb8bc4c74ae4526d9489362ab2793a936d072b84 ]
    
    There are two states for ubifs writing pages:
    1. Dirty, Private
    2. Not Dirty, Not Private
    
    There is a third possibility which maybe related to [1] that page is
    private but not dirty caused by following process:
    
              PA
    lock(page)
    ubifs_write_end
      attach_page_private           // set Private
        __set_page_dirty_nobuffers  // set Dirty
    unlock(page)
    
    write_cache_pages
      lock(page)
      clear_page_dirty_for_io(page) // clear Dirty
      ubifs_writepage
        write_inode
        // fail, goto out, following codes are not executed
        // do_writepage
        //   set_page_writeback     // set Writeback
        //   detach_page_private    // clear Private
        //   end_page_writeback     // clear Writeback
        out:
        unlock(page)                // Private, Not Dirty
    
                                           PB
                                    ksys_fadvise64_64
                                      generic_fadvise
                                         invalidate_inode_page
                                         // page is neither Dirty nor Writeback
                                           invalidate_complete_page
                                           // page_has_private is true
                                             try_to_release_page
                                               ubifs_releasepage
                                                 ubifs_assert(c, 0) !!!
    
    Then we may get following assertion failed:
      UBIFS error (ubi0:0 pid 1492): ubifs_assert_failed [ubifs]:
      UBIFS assert failed: 0, in fs/ubifs/file.c:1499
      UBIFS warning (ubi0:0 pid 1492): ubifs_ro_mode [ubifs]:
      switched to read-only mode, error -22
      CPU: 2 PID: 1492 Comm: aa Not tainted 5.16.0-rc2-00012-g7bb767dee0ba-dirty
      Call Trace:
        dump_stack+0x13/0x1b
        ubifs_ro_mode+0x54/0x60 [ubifs]
        ubifs_assert_failed+0x4b/0x80 [ubifs]
        ubifs_releasepage+0x7e/0x1e0 [ubifs]
        try_to_release_page+0x57/0xe0
        invalidate_inode_page+0xfb/0x130
        invalidate_mapping_pagevec+0x12/0x20
        generic_fadvise+0x303/0x3c0
        vfs_fadvise+0x35/0x40
        ksys_fadvise64_64+0x4c/0xb0
    
    Jump [2] to find a reproducer.
    
    [1] https://linux-mtd.infradead.narkive.com/NQoBeT1u/patch-rfc-ubifs-fix-assert-failed-in-ubifs-set-page-dirty
    [2] https://bugzilla.kernel.org/show_bug.cgi?id=215357
    
    Fixes: 1e51764a3c2ac0 ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d4768523b092bfb9a9bfa6b1d903b968c8008cf
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Fri Nov 18 17:02:36 2022 +0800

    ubifs: dirty_cow_znode: Fix memleak in error handling path
    
    [ Upstream commit 122deabfe1428bffe95e2bf364ff8a5059bdf089 ]
    
    Following process will cause a memleak for copied up znode:
    
    dirty_cow_znode
      zn = copy_znode(c, znode);
      err = insert_old_idx(c, zbr->lnum, zbr->offs);
      if (unlikely(err))
         return ERR_PTR(err);   // No one refers to zn.
    
    Fix it by adding copied znode back to tnc, then it will be freed
    by ubifs_destroy_tnc_subtree() while closing tnc.
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216705
    Fixes: 1e51764a3c2a ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 343d273d5fd06b6c065d4015506ae9ebbf6c64e6
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Fri Nov 18 17:02:35 2022 +0800

    ubifs: Re-statistic cleaned znode count if commit failed
    
    [ Upstream commit 944e096aa24071d3fe22822f6249d3ae309e39ea ]
    
    Dirty znodes will be written on flash in committing process with
    following states:
    
                  process A                 |  znode state
    ------------------------------------------------------
    do_commit                               | DIRTY_ZNODE
      ubifs_tnc_start_commit                | DIRTY_ZNODE
       get_znodes_to_commit                 | DIRTY_ZNODE | COW_ZNODE
        layout_commit                       | DIRTY_ZNODE | COW_ZNODE
         fill_gap                           | 0
      write master                          | 0 or OBSOLETE_ZNODE
    
                  process B                 |  znode state
    ------------------------------------------------------
    do_commit                               | DIRTY_ZNODE[1]
      ubifs_tnc_start_commit                | DIRTY_ZNODE
       get_znodes_to_commit                 | DIRTY_ZNODE | COW_ZNODE
      ubifs_tnc_end_commit                  | DIRTY_ZNODE | COW_ZNODE
       write_index                          | 0
      write master                          | 0 or OBSOLETE_ZNODE[2] or
                                            | DIRTY_ZNODE[3]
    
    [1] znode is dirtied without concurrent committing process
    [2] znode is copied up (re-dirtied by other process) before cleaned
        up in committing process
    [3] znode is re-dirtied after cleaned up in committing process
    
    Currently, the clean znode count is updated in free_obsolete_znodes(),
    which is called only in normal path. If do_commit failed, clean znode
    count won't be updated, which triggers a failure ubifs assertion[4] in
    ubifs_tnc_close():
     ubifs_assert_failed [ubifs]: UBIFS assert failed: freed == n
    
    [4] Commit 380347e9ca7682 ("UBIFS: Add an assertion for clean_zn_cnt").
    
    Fix it by re-statisticing cleaned znode count in tnc_destroy_cnext().
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216704
    Fixes: 1e51764a3c2a ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcbc795abe7897da4b5d2a6ab5010e36774b00c2
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Nov 14 18:26:24 2022 +0800

    ubi: Fix possible null-ptr-deref in ubi_free_volume()
    
    [ Upstream commit c15859bfd326c10230f09cb48a17f8a35f190342 ]
    
    It willl cause null-ptr-deref in the following case:
    
    uif_init()
      ubi_add_volume()
        cdev_add() -> if it fails, call kill_volumes()
        device_register()
    
    kill_volumes() -> if ubi_add_volume() fails call this function
      ubi_free_volume()
        cdev_del()
        device_unregister() -> trying to delete a not added device,
                               it causes null-ptr-deref
    
    So in ubi_free_volume(), it delete devices whether they are added
    or not, it will causes null-ptr-deref.
    
    Handle the error case whlie calling ubi_add_volume() to fix this
    problem. If add volume fails, set the corresponding vol to null,
    so it can not be accessed in kill_volumes() and release the
    resource in ubi_add_volume() error path.
    
    Fixes: 801c135ce73d ("UBI: Unsorted Block Images")
    Suggested-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf50229494f0443b3f08427d7df63e5a7e2a796a
Author: Li Zetao <lizetao1@huawei.com>
Date:   Sat Oct 22 19:52:11 2022 +0800

    ubifs: Fix memory leak in alloc_wbufs()
    
    [ Upstream commit 4a1ff3c5d04b9079b4f768d9a71b51c4af578dd2 ]
    
    kmemleak reported a sequence of memory leaks, and show them as following:
    
      unreferenced object 0xffff8881575f8400 (size 1024):
        comm "mount", pid 19625, jiffies 4297119604 (age 20.383s)
        hex dump (first 32 bytes):
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        backtrace:
          [<ffffffff8176cecd>] __kmalloc+0x4d/0x150
          [<ffffffffa0406b2b>] ubifs_mount+0x307b/0x7170 [ubifs]
          [<ffffffff819fa8fd>] legacy_get_tree+0xed/0x1d0
          [<ffffffff81936f2d>] vfs_get_tree+0x7d/0x230
          [<ffffffff819b2bd4>] path_mount+0xdd4/0x17b0
          [<ffffffff819b37aa>] __x64_sys_mount+0x1fa/0x270
          [<ffffffff83c14295>] do_syscall_64+0x35/0x80
          [<ffffffff83e0006a>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
      unreferenced object 0xffff8881798a6e00 (size 512):
        comm "mount", pid 19677, jiffies 4297121912 (age 37.816s)
        hex dump (first 32 bytes):
          6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
          6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
        backtrace:
          [<ffffffff8176cecd>] __kmalloc+0x4d/0x150
          [<ffffffffa0418342>] ubifs_wbuf_init+0x52/0x480 [ubifs]
          [<ffffffffa0406ca5>] ubifs_mount+0x31f5/0x7170 [ubifs]
          [<ffffffff819fa8fd>] legacy_get_tree+0xed/0x1d0
          [<ffffffff81936f2d>] vfs_get_tree+0x7d/0x230
          [<ffffffff819b2bd4>] path_mount+0xdd4/0x17b0
          [<ffffffff819b37aa>] __x64_sys_mount+0x1fa/0x270
          [<ffffffff83c14295>] do_syscall_64+0x35/0x80
          [<ffffffff83e0006a>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    The problem is that the ubifs_wbuf_init() returns an error in the
    loop which in the alloc_wbufs(), then the wbuf->buf and wbuf->inodes
    that were successfully alloced before are not freed.
    
    Fix it by adding error hanging path in alloc_wbufs() which frees
    the memory alloced before when ubifs_wbuf_init() returns an error.
    
    Fixes: 1e51764a3c2a ("UBIFS: add new flash file system")
    Signed-off-by: Li Zetao <lizetao1@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31d60afe2cc2b712dbefcaab6b7d6a47036f844e
Author: Li Zetao <lizetao1@huawei.com>
Date:   Fri Oct 21 18:21:57 2022 +0800

    ubi: Fix unreferenced object reported by kmemleak in ubi_resize_volume()
    
    [ Upstream commit 1e591ea072df7211f64542a09482b5f81cb3ad27 ]
    
    There is a memory leaks problem reported by kmemleak:
    
    unreferenced object 0xffff888102007a00 (size 128):
      comm "ubirsvol", pid 32090, jiffies 4298464136 (age 2361.231s)
      hex dump (first 32 bytes):
    ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................
    ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................
      backtrace:
    [<ffffffff8176cecd>] __kmalloc+0x4d/0x150
    [<ffffffffa02a9a36>] ubi_eba_create_table+0x76/0x170 [ubi]
    [<ffffffffa029764e>] ubi_resize_volume+0x1be/0xbc0 [ubi]
    [<ffffffffa02a3321>] ubi_cdev_ioctl+0x701/0x1850 [ubi]
    [<ffffffff81975d2d>] __x64_sys_ioctl+0x11d/0x170
    [<ffffffff83c142a5>] do_syscall_64+0x35/0x80
    [<ffffffff83e0006a>] entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    This is due to a mismatch between create and destroy interfaces, and
    in detail that "new_eba_tbl" created by ubi_eba_create_table() but
    destroyed by kfree(), while will causing "new_eba_tbl->entries" not
    freed.
    
    Fix it by replacing kfree(new_eba_tbl) with
    ubi_eba_destroy_table(new_eba_tbl)
    
    Fixes: 799dca34ac54 ("UBI: hide EBA internals")
    Signed-off-by: Li Zetao <lizetao1@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35f8d4064e54c18424db2997059d4c0b1d13d093
Author: Li Zetao <lizetao1@huawei.com>
Date:   Fri Oct 21 18:21:56 2022 +0800

    ubi: Fix use-after-free when volume resizing failed
    
    [ Upstream commit 9af31d6ec1a4be4caab2550096c6bd2ba8fba472 ]
    
    There is an use-after-free problem reported by KASAN:
      ==================================================================
      BUG: KASAN: use-after-free in ubi_eba_copy_table+0x11f/0x1c0 [ubi]
      Read of size 8 at addr ffff888101eec008 by task ubirsvol/4735
    
      CPU: 2 PID: 4735 Comm: ubirsvol
      Not tainted 6.1.0-rc1-00003-g84fa3304a7fc-dirty #14
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
      BIOS 1.14.0-1.fc33 04/01/2014
      Call Trace:
       <TASK>
       dump_stack_lvl+0x34/0x44
       print_report+0x171/0x472
       kasan_report+0xad/0x130
       ubi_eba_copy_table+0x11f/0x1c0 [ubi]
       ubi_resize_volume+0x4f9/0xbc0 [ubi]
       ubi_cdev_ioctl+0x701/0x1850 [ubi]
       __x64_sys_ioctl+0x11d/0x170
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
       </TASK>
    
    When ubi_change_vtbl_record() returns an error in ubi_resize_volume(),
    "new_eba_tbl" will be freed on error handing path, but it is holded
    by "vol->eba_tbl" in ubi_eba_replace_table(). It means that the liftcycle
    of "vol->eba_tbl" and "vol" are different, so when resizing volume in
    next time, it causing an use-after-free fault.
    
    Fix it by not freeing "new_eba_tbl" after it replaced in
    ubi_eba_replace_table(), while will be freed in next volume resizing.
    
    Fixes: 801c135ce73d ("UBI: Unsorted Block Images")
    Signed-off-by: Li Zetao <lizetao1@huawei.com>
    Reviewed-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38fd7acdc1d2c650e8d8ef4343fc306103ca75d9
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Oct 11 11:47:32 2022 +0800

    ubifs: Reserve one leb for each journal head while doing budget
    
    [ Upstream commit e874dcde1cbf82c786c0e7f2899811c02630cc52 ]
    
    UBIFS calculates available space by c->main_bytes - c->lst.total_used
    (which means non-index lebs' free and dirty space is accounted into
    total available), then index lebs and four lebs (one for gc_lnum, one
    for deletions, two for journal heads) are deducted.
    In following situation, ubifs may get -ENOSPC from make_reservation():
     LEB 84: DATAHD   free 122880 used 1920  dirty 2176  dark 6144
     LEB 110:DELETION free 126976 used 0     dirty 0     dark 6144 (empty)
     LEB 201:gc_lnum  free 126976 used 0     dirty 0     dark 6144
     LEB 272:GCHD     free 77824  used 47672 dirty 1480  dark 6144
     LEB 356:BASEHD   free 0      used 39776 dirty 87200 dark 6144
     OTHERS: index lebs, zero-available non-index lebs
    
    UBIFS calculates the available bytes is 6888 (How to calculate it:
    126976 * 5[remain main bytes] - 1920[used] - 47672[used] - 39776[used] -
    126976 * 1[deletions] - 126976 * 1[gc_lnum] - 126976 * 2[journal heads]
    - 6144 * 5[dark] = 6888) after doing budget, however UBIFS cannot use
    BASEHD's dirty space(87200), because UBIFS cannot find next BASEHD to
    reclaim current BASEHD. (c->bi.min_idx_lebs equals to c->lst.idx_lebs,
    the empty leb won't be found by ubifs_find_free_space(), and dirty index
    lebs won't be picked as gced lebs. All non-index lebs has dirty space
    less then c->dead_wm, non-index lebs won't be picked as gced lebs
    either. So new free lebs won't be produced.). See more details in Link.
    
    To fix it, reserve one leb for each journal head while doing budget.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216562
    Fixes: 1e51764a3c2ac0 ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38a097dce1842ffca3ce007496c8e992215a120b
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Oct 11 11:47:31 2022 +0800

    ubifs: do_rename: Fix wrong space budget when target inode's nlink > 1
    
    [ Upstream commit 25fce616a61fc2f1821e4a9ce212d0e064707093 ]
    
    If target inode is a special file (eg. block/char device) with nlink
    count greater than 1, the inode with ui->data will be re-written on
    disk. However, UBIFS losts target inode's data_len while doing space
    budget. Bad space budget may let make_reservation() return with -ENOSPC,
    which could turn ubifs to read-only mode in do_writepage() process.
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216494
    Fixes: 1e51764a3c2ac0 ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 495ea59a24a391bd0401c6442982ee29dca0a7e6
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Oct 11 11:47:30 2022 +0800

    ubifs: Fix wrong dirty space budget for dirty inode
    
    [ Upstream commit b248eaf049d9cdc5eb76b59399e4d3de233f02ac ]
    
    Each dirty inode should reserve 'c->bi.inode_budget' bytes in space
    budget calculation. Currently, space budget for dirty inode reports
    more space than what UBIFS actually needs to write.
    
    Fixes: 1e51764a3c2ac0 ("UBIFS: add new flash file system")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e07ee28c20d1507d9c4b649932561fe583930eb
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Oct 11 11:47:28 2022 +0800

    ubifs: Rectify space budget for ubifs_xrename()
    
    [ Upstream commit 1b2ba09060e41adb356b9ae58ef94a7390928004 ]
    
    There is no space budget for ubifs_xrename(). It may let
    make_reservation() return with -ENOSPC, which could turn
    ubifs to read-only mode in do_writepage() process.
    Fix it by adding space budget for ubifs_xrename().
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216569
    Fixes: 9ec64962afb170 ("ubifs: Implement RENAME_EXCHANGE")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffebd804c7ab22175fa14b74599c00e161dc1bfd
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Oct 11 11:47:27 2022 +0800

    ubifs: Rectify space budget for ubifs_symlink() if symlink is encrypted
    
    [ Upstream commit c2c36cc6ca23e614f9e4238d0ecf48549ee9002a ]
    
    Fix bad space budget when symlink file is encrypted. Bad space budget
    may let make_reservation() return with -ENOSPC, which could turn ubifs
    to read-only mode in do_writepage() process.
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216490
    Fixes: ca7f85be8d6cf9 ("ubifs: Add support for encrypted symlinks")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93e748ba517426912cfec83439fb64e2703083f1
Author: Li Hua <hucool.lihua@huawei.com>
Date:   Mon Nov 21 19:18:47 2022 +0800

    ubifs: Fix build errors as symbol undefined
    
    [ Upstream commit aa6d148e6d6270274e3d5a529b71c54cd329d17f ]
    
    With CONFIG_UBIFS_FS_AUTHENTICATION not set, the compiler can assume that
    ubifs_node_check_hash() is never true and drops the call to ubifs_bad_hash().
    Is CONFIG_CC_OPTIMIZE_FOR_SIZE enabled this optimization does not happen anymore.
    
    So When CONFIG_UBIFS_FS and CONFIG_CC_OPTIMIZE_FOR_SIZE is enabled but
    CONFIG_UBIFS_FS_AUTHENTICATION is not set, the build errors is as followd:
        ERROR: modpost: "ubifs_bad_hash" [fs/ubifs/ubifs.ko] undefined!
    
    Fix it by add no-op ubifs_bad_hash() for the CONFIG_UBIFS_FS_AUTHENTICATION=n case.
    
    Fixes: 16a26b20d2af ("ubifs: authentication: Add hashes to index nodes")
    Signed-off-by: Li Hua <hucool.lihua@huawei.com>
    Reviewed-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 846bfba34175c23b13cc2023c2d67b96e8c14c43
Author: George Kennedy <george.kennedy@oracle.com>
Date:   Tue Nov 15 10:14:44 2022 -0500

    ubi: ensure that VID header offset + VID header size <= alloc, size
    
    [ Upstream commit 1b42b1a36fc946f0d7088425b90d491b4257ca3e ]
    
    Ensure that the VID header offset + VID header size does not exceed
    the allocated area to avoid slab OOB.
    
    BUG: KASAN: slab-out-of-bounds in crc32_body lib/crc32.c:111 [inline]
    BUG: KASAN: slab-out-of-bounds in crc32_le_generic lib/crc32.c:179 [inline]
    BUG: KASAN: slab-out-of-bounds in crc32_le_base+0x58c/0x626 lib/crc32.c:197
    Read of size 4 at addr ffff88802bb36f00 by task syz-executor136/1555
    
    CPU: 2 PID: 1555 Comm: syz-executor136 Tainted: G        W
    6.0.0-1868 #1
    Hardware name: Red Hat KVM, BIOS 1.13.0-2.module+el8.3.0+7860+a7792d29
    04/01/2014
    Call Trace:
      <TASK>
      __dump_stack lib/dump_stack.c:88 [inline]
      dump_stack_lvl+0x85/0xad lib/dump_stack.c:106
      print_address_description mm/kasan/report.c:317 [inline]
      print_report.cold.13+0xb6/0x6bb mm/kasan/report.c:433
      kasan_report+0xa7/0x11b mm/kasan/report.c:495
      crc32_body lib/crc32.c:111 [inline]
      crc32_le_generic lib/crc32.c:179 [inline]
      crc32_le_base+0x58c/0x626 lib/crc32.c:197
      ubi_io_write_vid_hdr+0x1b7/0x472 drivers/mtd/ubi/io.c:1067
      create_vtbl+0x4d5/0x9c4 drivers/mtd/ubi/vtbl.c:317
      create_empty_lvol drivers/mtd/ubi/vtbl.c:500 [inline]
      ubi_read_volume_table+0x67b/0x288a drivers/mtd/ubi/vtbl.c:812
      ubi_attach+0xf34/0x1603 drivers/mtd/ubi/attach.c:1601
      ubi_attach_mtd_dev+0x6f3/0x185e drivers/mtd/ubi/build.c:965
      ctrl_cdev_ioctl+0x2db/0x347 drivers/mtd/ubi/cdev.c:1043
      vfs_ioctl fs/ioctl.c:51 [inline]
      __do_sys_ioctl fs/ioctl.c:870 [inline]
      __se_sys_ioctl fs/ioctl.c:856 [inline]
      __x64_sys_ioctl+0x193/0x213 fs/ioctl.c:856
      do_syscall_x64 arch/x86/entry/common.c:50 [inline]
      do_syscall_64+0x3e/0x86 arch/x86/entry/common.c:80
      entry_SYSCALL_64_after_hwframe+0x63/0x0
    RIP: 0033:0x7f96d5cf753d
    Code:
    RSP: 002b:00007fffd72206f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f96d5cf753d
    RDX: 0000000020000080 RSI: 0000000040186f40 RDI: 0000000000000003
    RBP: 0000000000400cd0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000400be0
    R13: 00007fffd72207e0 R14: 0000000000000000 R15: 0000000000000000
      </TASK>
    
    Allocated by task 1555:
      kasan_save_stack+0x20/0x3d mm/kasan/common.c:38
      kasan_set_track mm/kasan/common.c:45 [inline]
      set_alloc_info mm/kasan/common.c:437 [inline]
      ____kasan_kmalloc mm/kasan/common.c:516 [inline]
      __kasan_kmalloc+0x88/0xa3 mm/kasan/common.c:525
      kasan_kmalloc include/linux/kasan.h:234 [inline]
      __kmalloc+0x138/0x257 mm/slub.c:4429
      kmalloc include/linux/slab.h:605 [inline]
      ubi_alloc_vid_buf drivers/mtd/ubi/ubi.h:1093 [inline]
      create_vtbl+0xcc/0x9c4 drivers/mtd/ubi/vtbl.c:295
      create_empty_lvol drivers/mtd/ubi/vtbl.c:500 [inline]
      ubi_read_volume_table+0x67b/0x288a drivers/mtd/ubi/vtbl.c:812
      ubi_attach+0xf34/0x1603 drivers/mtd/ubi/attach.c:1601
      ubi_attach_mtd_dev+0x6f3/0x185e drivers/mtd/ubi/build.c:965
      ctrl_cdev_ioctl+0x2db/0x347 drivers/mtd/ubi/cdev.c:1043
      vfs_ioctl fs/ioctl.c:51 [inline]
      __do_sys_ioctl fs/ioctl.c:870 [inline]
      __se_sys_ioctl fs/ioctl.c:856 [inline]
      __x64_sys_ioctl+0x193/0x213 fs/ioctl.c:856
      do_syscall_x64 arch/x86/entry/common.c:50 [inline]
      do_syscall_64+0x3e/0x86 arch/x86/entry/common.c:80
      entry_SYSCALL_64_after_hwframe+0x63/0x0
    
    The buggy address belongs to the object at ffff88802bb36e00
      which belongs to the cache kmalloc-256 of size 256
    The buggy address is located 0 bytes to the right of
      256-byte region [ffff88802bb36e00, ffff88802bb36f00)
    
    The buggy address belongs to the physical page:
    page:00000000ea4d1263 refcount:1 mapcount:0 mapping:0000000000000000
    index:0x0 pfn:0x2bb36
    head:00000000ea4d1263 order:1 compound_mapcount:0 compound_pincount:0
    flags: 0xfffffc0010200(slab|head|node=0|zone=1|lastcpupid=0x1fffff)
    raw: 000fffffc0010200 ffffea000066c300 dead000000000003 ffff888100042b40
    raw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
      ffff88802bb36e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffff88802bb36e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    >ffff88802bb36f00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                        ^
      ffff88802bb36f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffff88802bb37000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Fixes: 801c135ce73d ("UBI: Unsorted Block Images")
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: George Kennedy <george.kennedy@oracle.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2b9c4544e3bd60f353732291300097b0e8d8454
Author: Xiang Yang <xiangyang3@huawei.com>
Date:   Tue Nov 15 15:32:25 2022 +0800

    um: vector: Fix memory leak in vector_config
    
    [ Upstream commit 8f88c73afe481f93d40801596927e8c0047b6d96 ]
    
    If the return value of the uml_parse_vector_ifspec function is NULL,
    we should call kfree(params) to prevent memory leak.
    
    Fixes: 49da7e64f33e ("High Performance UML Vector Network Driver")
    Signed-off-by: Xiang Yang <xiangyang3@huawei.com>
    Acked-By: Anton Ivanov <anton.ivanov@kot-begemot.co.uk>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6be349d7388f3af7957dc6c7e241dc92a969fb38
Author: Alexander Potapenko <glider@google.com>
Date:   Mon Nov 21 12:21:32 2022 +0100

    fs: f2fs: initialize fsdata in pagecache_write()
    
    [ Upstream commit b1b9896718bc1a212dc288ad66a5fa2fef11353d ]
    
    When aops->write_begin() does not initialize fsdata, KMSAN may report
    an error passing the latter to aops->write_end().
    
    Fix this by unconditionally initializing fsdata.
    
    Suggested-by: Eric Biggers <ebiggers@kernel.org>
    Fixes: 95ae251fe828 ("f2fs: add fs-verity support")
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33909b1a646d1f31d631ff4a77a7303317e4a82b
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Aug 19 15:33:00 2022 -0700

    f2fs: use memcpy_{to,from}_page() where possible
    
    [ Upstream commit b87846bd61c7c09560617da416208a5454530d57 ]
    
    This is simpler, and as a side effect it replaces several uses of
    kmap_atomic() with its recommended replacement kmap_local_page().
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Fabio M. De Francesco <fmdefrancesco@gmail.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Stable-dep-of: b1b9896718bc ("fs: f2fs: initialize fsdata in pagecache_write()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d4a4a9ee95e054ad2384421f91acd823ceee021
Author: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date:   Wed Nov 23 14:36:52 2022 +0100

    pwm: stm32-lp: fix the check on arr and cmp registers update
    
    [ Upstream commit 3066bc2d58be31275afb51a589668f265e419c37 ]
    
    The ARR (auto reload register) and CMP (compare) registers are
    successively written. The status bits to check the update of these
    registers are polled together with regmap_read_poll_timeout().
    The condition to end the loop may become true, even if one of the
    register isn't correctly updated.
    So ensure both status bits are set before clearing them.
    
    Fixes: e70a540b4e02 ("pwm: Add STM32 LPTimer PWM driver")
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2677c49b766b365578ef7a0641bf0c857545d7b
Author: Emil Renner Berthing <emil.renner.berthing@canonical.com>
Date:   Wed Nov 9 12:37:24 2022 +0100

    pwm: sifive: Always let the first pwm_apply_state succeed
    
    [ Upstream commit 334c7b13d38321e47d1a51dba0bef9f4c403ec75 ]
    
    Commit 2cfe9bbec56ea579135cdd92409fff371841904f added support for the
    RGB and green PWM controlled LEDs on the HiFive Unmatched board
    managed by the leds-pwm-multicolor and leds-pwm drivers respectively.
    All three colours of the RGB LED and the green LED run from different
    lines of the same PWM, but with the same period so this works fine when
    the LED drivers are loaded one after the other.
    
    Unfortunately it does expose a race in the PWM driver when both LED
    drivers are loaded at roughly the same time. Here is an example:
    
      |          Thread A           |          Thread B           |
      |  led_pwm_mc_probe           |  led_pwm_probe              |
      |    devm_fwnode_pwm_get      |                             |
      |      pwm_sifive_request     |                             |
      |        ddata->user_count++  |                             |
      |                             |    devm_fwnode_pwm_get      |
      |                             |      pwm_sifive_request     |
      |                             |        ddata->user_count++  |
      |         ...                 |          ...                |
      |    pwm_state_apply          |    pwm_state_apply          |
      |      pwm_sifive_apply       |      pwm_sifive_apply       |
    
    Now both calls to pwm_sifive_apply will see that ddata->approx_period,
    initially 0, is different from the requested period and the clock needs
    to be updated. But since ddata->user_count >= 2 both calls will fail
    with -EBUSY, which will then cause both LED drivers to fail to probe.
    
    Fix it by letting the first call to pwm_sifive_apply update the clock
    even when ddata->user_count != 1.
    
    Fixes: 9e37a53eb051 ("pwm: sifive: Add a driver for SiFive SoC PWM")
    Signed-off-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b98e7a45e6382b75cacf7932bcdb27482a56e49
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Jul 21 12:31:25 2022 +0200

    pwm: sifive: Reduce time the controller lock is held
    
    [ Upstream commit 0f02f491b786143f08eb19840f1cf4f12aec6dee ]
    
    The lock is only to serialize access and update to user_count and
    approx_period between different PWMs served by the same pwm_chip.
    So the lock needs only to be taken during the check if the (chip global)
    period can and/or needs to be changed.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Emil Renner Berthing <emil.renner.berthing@canonical.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Stable-dep-of: 334c7b13d383 ("pwm: sifive: Always let the first pwm_apply_state succeed")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1368eaea058e451d20ea99ca27e72d9df0d16dd
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Dec 5 12:06:42 2022 +0400

    objtool: Fix memory leak in create_static_call_sections()
    
    [ Upstream commit 3da73f102309fe29150e5c35acd20dd82063ff67 ]
    
    strdup() allocates memory for key_name. We need to release the memory in
    the following error paths. Add free() to avoid memory leak.
    
    Fixes: 1e7e47883830 ("x86/static_call: Add inline static call implementation for x86-64")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20221205080642.558583-1-linmq006@gmail.com
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d03a19ac7e81f80d96c3bfeb719da38257f75e5
Author: Liu Shixin via Jfs-discussion <jfs-discussion@lists.sourceforge.net>
Date:   Thu Nov 3 11:01:59 2022 +0800

    fs/jfs: fix shift exponent db_agl2size negative
    
    [ Upstream commit fad376fce0af58deebc5075b8539dc05bf639af3 ]
    
    As a shift exponent, db_agl2size can not be less than 0. Add the missing
    check to fix the shift-out-of-bounds bug reported by syzkaller:
    
     UBSAN: shift-out-of-bounds in fs/jfs/jfs_dmap.c:2227:15
     shift exponent -744642816 is negative
    
    Reported-by: syzbot+0be96567042453c0c820@syzkaller.appspotmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18c3fa7a7fdbb4d21dafc8a7710ae2c1680930f6
Author: Jamal Hadi Salim <jhs@mojatatu.com>
Date:   Tue Feb 14 08:49:14 2023 -0500

    net/sched: Retire tcindex classifier
    
    commit 8c710f75256bb3cf05ac7b1672c82b92c43f3d28 upstream.
    
    The tcindex classifier has served us well for about a quarter of a century
    but has not been getting much TLC due to lack of known users. Most recently
    it has become easy prey to syzkaller. For this reason, we are retiring it.
    
    Signed-off-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 322df540ba0590103839f94f441818f5696b8b00
Author: Dmitry Goncharov <dgoncharov@users.sf.net>
Date:   Mon Dec 5 16:48:19 2022 -0500

    kbuild: Port silent mode detection to future gnu make.
    
    commit 4bf73588165ba7d32131a043775557a54b6e1db5 upstream.
    
    Port silent mode detection to the future (post make-4.4) versions of gnu make.
    
    Makefile contains the following piece of make code to detect if option -s is
    specified on the command line.
    
    ifneq ($(findstring s,$(filter-out --%,$(MAKEFLAGS))),)
    
    This code is executed by make at parse time and assumes that MAKEFLAGS
    does not contain command line variable definitions.
    Currently if the user defines a=s on the command line, then at build only
    time MAKEFLAGS contains " -- a=s".
    However, starting with commit dc2d963989b96161472b2cd38cef5d1f4851ea34
    MAKEFLAGS contains command line definitions at both parse time and
    build time.
    
    This '-s' detection code then confuses a command line variable
    definition which contains letter 's' with option -s.
    
    $ # old make
    $ make net/wireless/ocb.o a=s
      CALL    scripts/checksyscalls.sh
      DESCEND objtool
    $ # this a new make which defines makeflags at parse time
    $ ~/src/gmake/make/l64/make net/wireless/ocb.o a=s
    $
    
    We can see here that the letter 's' from 'a=s' was confused with -s.
    
    This patch checks for presence of -s using a method recommended by the
    make manual here
    https://www.gnu.org/software/make/manual/make.html#Testing-Flags.
    
    Link: https://lists.gnu.org/archive/html/bug-make/2022-11/msg00190.html
    Reported-by: Jan Palus <jpalus+gnu@fastmail.com>
    Signed-off-by: Dmitry Goncharov <dgoncharov@users.sf.net>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8ac5467e1f3f773326454bea793172ed7cff5be
Author: Jonas Karlman <jonas@kwiboo.se>
Date:   Tue Jan 10 17:29:58 2023 +0000

    pinctrl: rockchip: fix reading pull type on rk3568
    
    commit 31b62a98de42cf65d76e4dcfb571af067d27d83a upstream.
    
    When reading pinconf-pins from debugfs it fails to get the configured pull
    type on RK3568, "unsupported pinctrl type" error messages is also reported.
    
    Fix this by adding support for RK3568 in rockchip_get_pull, including a
    reverse of the pull-up value swap applied in rockchip_set_pull so that
    pull-up is correctly reported in pinconf-pins.
    Also update the workaround comment to reflect affected pins, GPIO0_D3-D6.
    
    Fixes: c0dadc0e47a8 ("pinctrl: rockchip: add support for rk3568")
    Signed-off-by: Jonas Karlman <jonas@kwiboo.se>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Reviewed-by: Jianqun Xu <jay.xu@rock-chips.com>
    Link: https://lore.kernel.org/r/20230110172955.1258840-1-jonas@kwiboo.se
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50afcd5316f263d42fdef0b25c2104a2609eb535
Author: Jonas Karlman <jonas@kwiboo.se>
Date:   Tue Jan 10 08:46:53 2023 +0000

    pinctrl: rockchip: fix mux route data for rk3568
    
    commit 431d1531466033909d2e8c754a7dc3704b70843f upstream.
    
    IO mux selection is configured in PMU_GRF_SOC_CON4 and GRF_IOFUNC_SEL0-5
    regs on RK3568. pwm0-2 is configured in PMU_GRF reg and the rest is
    configured in GRF_IOFUNC regs according to TRM [1].
    
    Update mux route data to reflect this and use proper detection pin for
    UART1 IO mux M1.
    
    This fixes HDMITX IO mux M1 selection and makes it possible to enable
    HDMI CEC on my Radxa ROCK 3 Model A v1.31 board.
    
    [1] http://opensource.rock-chips.com/images/2/26/Rockchip_RK3568_TRM_Part1_V1.3-20220930P.PDF
    
    Fixes: c0dadc0e47a8 ("pinctrl: rockchip: add support for rk3568")
    Signed-off-by: Jonas Karlman <jonas@kwiboo.se>
    Link: https://lore.kernel.org/r/20230110084636.1141740-1-jonas@kwiboo.se
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 844da3901304d6946c42edc89b793cc07981683b
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 15 17:55:42 2022 +0100

    wifi: ath9k: use proper statements in conditionals
    
    commit b7dc753fe33a707379e2254317794a4dad6c0fe2 upstream.
    
    A previous cleanup patch accidentally broke some conditional
    expressions by replacing the safe "do {} while (0)" constructs
    with empty macros. gcc points this out when extra warnings
    are enabled:
    
    drivers/net/wireless/ath/ath9k/hif_usb.c: In function 'ath9k_skb_queue_complete':
    drivers/net/wireless/ath/ath9k/hif_usb.c:251:57: error: suggest braces around empty body in an 'else' statement [-Werror=empty-body]
      251 |                         TX_STAT_INC(hif_dev, skb_failed);
    
    Make both sets of macros proper expressions again.
    
    Fixes: d7fc76039b74 ("ath9k: htc: clean up statistics macros")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221215165553.1950307-1-arnd@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2a1e3f4ed5bf698b41f0aeddfdb931bb0718168
Author: Robert Marko <robimarko@gmail.com>
Date:   Fri Jan 13 17:44:41 2023 +0100

    arm64: dts: qcom: ipq8074: fix Gen2 PCIe QMP PHY
    
    commit 100d9c94ccf15b02742c326cd04f422ab729153b upstream.
    
    Serdes register space sizes are incorrect, update them to match the
    actual sizes from downstream QCA 5.4 kernel.
    
    Fixes: 942bcd33ed45 ("arm64: dts: qcom: Fix IPQ8074 PCIe PHY nodes")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230113164449.906002-1-robimarko@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64a99c0ac6f8b714960a71d34a91a54acb4117e4
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Wed Jan 4 12:05:16 2023 +0200

    drm/edid: fix AVI infoframe aspect ratio handling
    
    commit 1cbc1f0d324ba6c4d1b10ac6362b5e0b029f63d5 upstream.
    
    We try to avoid sending VICs defined in the later specs in AVI
    infoframes to sinks that conform to the earlier specs, to not upset
    them, and use 0 for the VIC instead. However, we do this detection and
    conversion to 0 too early, as we'll need the actual VIC to figure out
    the aspect ratio.
    
    In particular, for a mode with 64:27 aspect ratio, 0 for VIC fails the
    AVI infoframe generation altogether with -EINVAL.
    
    Separate the VIC lookup from the "filtering", and postpone the
    filtering, to use the proper VIC for aspect ratio handling, and the 0
    VIC for the infoframe video code as needed.
    
    Reported-by: William Tseng <william.tseng@intel.com>
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/6153
    References: https://lore.kernel.org/r/20220920062316.43162-1-william.tseng@intel.com
    Cc: <stable@vger.kernel.org>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/c3e78cc6d01ed237f71ad0038826b08d83d75eef.1672826282.git.jani.nikula@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f064aaa81af466ea5da53181debe9c82aeed4be
Author: Mark Hawrylak <mark.hawrylak@gmail.com>
Date:   Sun Feb 19 16:02:00 2023 +1100

    drm/radeon: Fix eDP for single-display iMac11,2
    
    commit 05eacc198c68cbb35a7281ce4011f8899ee1cfb8 upstream.
    
    Apple iMac11,2 (mid 2010) also with Radeon HD-4670 that has the same
    issue as iMac10,1 (late 2009) where the internal eDP panel stays dark on
    driver load.  This patch treats iMac11,2 the same as iMac10,1,
    so the eDP panel stays active.
    
    Additional steps:
    Kernel boot parameter radeon.nomodeset=0 required to keep the eDP
    panel active.
    
    This patch is an extension of
    commit 564d8a2cf3ab ("drm/radeon: Fix eDP for single-display iMac10,1 (v2)")
    Link: https://lore.kernel.org/all/lsq.1507553064.833262317@decadent.org.uk/
    Signed-off-by: Mark Hawrylak <mark.hawrylak@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 266864c1e0edb4034f6346b5309f0e68494bcfb3
Author: Mavroudis Chatzilaridis <mavchatz@protonmail.com>
Date:   Wed Feb 1 18:51:25 2023 +0000

    drm/i915/quirks: Add inverted backlight quirk for HP 14-r206nv
    
    commit 5e438bf7f9a1705ebcae5fa89cdbfbc6932a7871 upstream.
    
    This laptop uses inverted backlight PWM. Thus, without this quirk,
    backlight brightness decreases as the brightness value increases and
    vice versa.
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/8013
    Cc: stable@vger.kernel.org
    Signed-off-by: Mavroudis Chatzilaridis <mavchatz@protonmail.com>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230201184947.8835-1-mavchatz@protonmail.com
    (cherry picked from commit 83e7d6fd330d413cb2064e680ffea91b0512a520)
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a271242716846cc016736fb76be2b40ee49b0c3
Author: Steve Sistare <steven.sistare@oracle.com>
Date:   Tue Jan 31 08:58:04 2023 -0800

    vfio/type1: prevent underflow of locked_vm via exec()
    
    commit 046eca5018f8a5dd1dc2cedf87fb5843b9ea3026 upstream.
    
    When a vfio container is preserved across exec, the task does not change,
    but it gets a new mm with locked_vm=0, and loses the count from existing
    dma mappings.  If the user later unmaps a dma mapping, locked_vm underflows
    to a large unsigned value, and a subsequent dma map request fails with
    ENOMEM in __account_locked_vm.
    
    To avoid underflow, grab and save the mm at the time a dma is mapped.
    Use that mm when adjusting locked_vm, rather than re-acquiring the saved
    task's mm, which may have changed.  If the saved mm is dead, do nothing.
    
    locked_vm is incremented for existing mappings in a subsequent patch.
    
    Fixes: 73fa0d10d077 ("vfio: Type1 IOMMU implementation")
    Cc: stable@vger.kernel.org
    Signed-off-by: Steve Sistare <steven.sistare@oracle.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Link: https://lore.kernel.org/r/1675184289-267876-3-git-send-email-steven.sistare@oracle.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 691a8e26de7809fe15284713c2338c93ffe0345c
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Sat Jan 28 10:39:51 2023 +0900

    PCI: Avoid FLR for AMD FCH AHCI adapters
    
    commit 63ba51db24ed1b8f8088a897290eb6c036c5435d upstream.
    
    PCI passthrough to VMs does not work with AMD FCH AHCI adapters: the guest
    OS fails to correctly probe devices attached to the controller due to FIS
    communication failures:
    
      ata4: softreset failed (1st FIS failed)
      ...
      ata4.00: qc timeout after 5000 msecs (cmd 0xec)
      ata4.00: failed to IDENTIFY (I/O error, err_mask=0x4)
    
    Forcing the "bus" reset method before unbinding & binding the adapter to
    the vfio-pci driver solves this issue, e.g.:
    
      echo "bus" > /sys/bus/pci/devices/<ID>/reset_method
    
    gives a working guest OS, indicating that the default FLR reset method
    doesn't work correctly.
    
    Apply quirk_no_flr() to AMD FCH AHCI devices to work around this issue.
    
    Link: https://lore.kernel.org/r/20230128013951.523247-1-damien.lemoal@opensource.wdc.com
    Reported-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88b51c6a6d57f90638d54e28e58dca3f73c31bca
Author: Lukas Wunner <lukas@wunner.de>
Date:   Fri Jan 20 10:19:02 2023 +0100

    PCI: hotplug: Allow marking devices as disconnected during bind/unbind
    
    commit 74ff8864cc842be994853095dba6db48e716400a upstream.
    
    On surprise removal, pciehp_unconfigure_device() and acpiphp's
    trim_stale_devices() call pci_dev_set_disconnected() to mark removed
    devices as permanently offline.  Thereby, the PCI core and drivers know
    to skip device accesses.
    
    However pci_dev_set_disconnected() takes the device_lock and thus waits for
    a concurrent driver bind or unbind to complete.  As a result, the driver's
    ->probe and ->remove hooks have no chance to learn that the device is gone.
    
    That doesn't make any sense, so drop the device_lock and instead use atomic
    xchg() and cmpxchg() operations to update the device state.
    
    As a byproduct, an AB-BA deadlock reported by Anatoli is fixed which occurs
    on surprise removal with AER concurrently performing a bus reset.
    
    AER bus reset:
    
      INFO: task irq/26-aerdrv:95 blocked for more than 120 seconds.
      Tainted: G        W          6.2.0-rc3-custom-norework-jan11+
      schedule
      rwsem_down_write_slowpath
      down_write_nested
      pciehp_reset_slot                      # acquires reset_lock
      pci_reset_hotplug_slot
      pci_slot_reset                         # acquires device_lock
      pci_bus_error_reset
      aer_root_reset
      pcie_do_recovery
      aer_process_err_devices
      aer_isr
    
    pciehp surprise removal:
    
      INFO: task irq/26-pciehp:96 blocked for more than 120 seconds.
      Tainted: G        W          6.2.0-rc3-custom-norework-jan11+
      schedule_preempt_disabled
      __mutex_lock
      mutex_lock_nested
      pci_dev_set_disconnected               # acquires device_lock
      pci_walk_bus
      pciehp_unconfigure_device
      pciehp_disable_slot
      pciehp_handle_presence_or_link_change
      pciehp_ist                             # acquires reset_lock
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215590
    Fixes: a6bd101b8f84 ("PCI: Unify device inaccessible")
    Link: https://lore.kernel.org/r/3dc88ea82bdc0e37d9000e413d5ebce481cbd629.1674205689.git.lukas@wunner.de
    Reported-by: Anatoli Antonovitch <anatoli.antonovitch@amd.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org # v4.20+
    Cc: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d219b19e1f26997a4c864ad2d0931fd859967e44
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Jan 15 09:20:31 2023 +0100

    PCI/PM: Observe reset delay irrespective of bridge_d3
    
    commit 8ef0217227b42e2c34a18de316cee3da16c9bf1e upstream.
    
    If a PCI bridge is suspended to D3cold upon entering system sleep,
    resuming it entails a Fundamental Reset per PCIe r6.0 sec 5.8.
    
    The delay prescribed after a Fundamental Reset in PCIe r6.0 sec 6.6.1
    is sought to be observed by:
    
      pci_pm_resume_noirq()
        pci_pm_bridge_power_up_actions()
          pci_bridge_wait_for_secondary_bus()
    
    However, pci_bridge_wait_for_secondary_bus() bails out if the bridge_d3
    flag is not set.  That flag indicates whether a bridge is allowed to
    suspend to D3cold at *runtime*.
    
    Hence *no* delay is observed on resume from system sleep if runtime
    D3cold is forbidden.  That doesn't make any sense, so drop the bridge_d3
    check from pci_bridge_wait_for_secondary_bus().
    
    The purpose of the bridge_d3 check was probably to avoid delays if a
    bridge remained in D0 during suspend.  However the sole caller of
    pci_bridge_wait_for_secondary_bus(), pci_pm_bridge_power_up_actions(),
    is only invoked if the previous power state was D3cold.  Hence the
    additional bridge_d3 check seems superfluous.
    
    Fixes: ad9001f2f411 ("PCI/PM: Add missing link delays required by the PCIe spec")
    Link: https://lore.kernel.org/r/eb37fa345285ec8bacabbf06b020b803f77bdd3d.1673769517.git.lukas@wunner.de
    Tested-by: Ravi Kishore Koppuravuri <ravi.kishore.koppuravuri@intel.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Cc: stable@vger.kernel.org # v5.5+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 285d8390d98e2a3e44d79f391e09cc7047a50579
Author: Andy Chiu <andy.chiu@sifive.com>
Date:   Mon Feb 6 04:04:40 2023 -0500

    riscv: jump_label: Fixup unaligned arch_static_branch function
    
    commit 9ddfc3cd806081ce1f6c9c2f988cbb031f35d28f upstream.
    
    Runtime code patching must be done at a naturally aligned address, or we
    may execute on a partial instruction.
    
    We have encountered problems traced back to static jump functions during
    the test. We switched the tracer randomly for every 1~5 seconds on a
    dual-core QEMU setup and found the kernel sucking at a static branch
    where it jumps to itself.
    
    The reason is that the static branch was 2-byte but not 4-byte aligned.
    Then, the kernel would patch the instruction, either J or NOP, with two
    half-word stores if the machine does not have efficient unaligned
    accesses. Thus, moments exist where half of the NOP mixes with the other
    half of the J when transitioning the branch. In our particular case, on
    a little-endian machine, the upper half of the NOP was mixed with the
    lower part of the J when enabling the branch, resulting in a jump that
    jumped to itself. Conversely, it would result in a HINT instruction when
    disabling the branch, but it might not be observable.
    
    ARM64 does not have this problem since all instructions must be 4-byte
    aligned.
    
    Fixes: ebc00dde8a97 ("riscv: Add jump-label implementation")
    Link: https://lore.kernel.org/linux-riscv/20220913094252.3555240-6-andy.chiu@sifive.com/
    Reviewed-by: Greentime Hu <greentime.hu@sifive.com>
    Signed-off-by: Andy Chiu <andy.chiu@sifive.com>
    Signed-off-by: Guo Ren <guoren@kernel.org>
    Link: https://lore.kernel.org/r/20230206090440.1255001-1-guoren@kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f9542cad6c27297c8391de3a659f0b7948495d0
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Feb 2 17:24:51 2023 +0100

    scsi: ses: Fix slab-out-of-bounds in ses_intf_remove()
    
    commit 578797f0c8cbc2e3ec5fc0dab87087b4c7073686 upstream.
    
    A fix for:
    
    BUG: KASAN: slab-out-of-bounds in ses_intf_remove+0x23f/0x270 [ses]
    Read of size 8 at addr ffff88a10d32e5d8 by task rmmod/12013
    
    When edev->components is zero, accessing edev->component[0] members is
    wrong.
    
    Link: https://lore.kernel.org/r/20230202162451.15346-5-thenzl@redhat.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c315560e3ef77c1d822249f1743e647dc9c9912a
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Feb 2 17:24:50 2023 +0100

    scsi: ses: Fix possible desc_ptr out-of-bounds accesses
    
    commit 801ab13d50cf3d26170ee073ea8bb4eececb76ab upstream.
    
    Sanitize possible desc_ptr out-of-bounds accesses in
    ses_enclosure_data_process().
    
    Link: https://lore.kernel.org/r/20230202162451.15346-4-thenzl@redhat.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ecd344173a5663d523433819da0484cb268b186
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Feb 2 17:24:49 2023 +0100

    scsi: ses: Fix possible addl_desc_ptr out-of-bounds accesses
    
    commit db95d4df71cb55506425b6e4a5f8d68e3a765b63 upstream.
    
    Sanitize possible addl_desc_ptr out-of-bounds accesses in
    ses_enclosure_data_process().
    
    Link: https://lore.kernel.org/r/20230202162451.15346-3-thenzl@redhat.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4dd25da784b2e07dbfbf04509afa4c5a1375227
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Feb 2 17:24:48 2023 +0100

    scsi: ses: Fix slab-out-of-bounds in ses_enclosure_data_process()
    
    commit 9b4f5028e493cb353a5c8f5c45073eeea0303abd upstream.
    
    A fix for:
    
    BUG: KASAN: slab-out-of-bounds in ses_enclosure_data_process+0x949/0xe30 [ses]
    Read of size 1 at addr ffff88a1b043a451 by task systemd-udevd/3271
    
    Checking after (and before in next loop) addl_desc_ptr[1] is sufficient, we
    expect the size to be sanitized before first access to addl_desc_ptr[1].
    Make sure we don't walk beyond end of page.
    
    Link: https://lore.kernel.org/r/20230202162451.15346-2-thenzl@redhat.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d68937dfc73ee7f61cf3424fa3225be93cacaa00
Author: James Bottomley <jejb@linux.ibm.com>
Date:   Sat Nov 28 15:27:21 2020 -0800

    scsi: ses: Don't attach if enclosure has no components
    
    commit 3fe97ff3d94934649abb0652028dd7296170c8d0 upstream.
    
    An enclosure with no components can't usefully be operated by the driver
    (since effectively it has nothing to manage), so report the problem and
    don't attach. Not attaching also fixes an oops which could occur if the
    driver tries to manage a zero component enclosure.
    
    [mkp: Switched to KERN_WARNING since this scenario is common]
    
    Link: https://lore.kernel.org/r/c5deac044ac409e32d9ad9968ce0dcbc996bfc7a.camel@linux.ibm.com
    Cc: stable@vger.kernel.org
    Reported-by: Ding Hui <dinghui@sangfor.com.cn>
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d14ace68dd5b58365bca8991cd72f40975fe0df
Author: Quinn Tran <qutran@marvell.com>
Date:   Mon Dec 19 03:07:45 2022 -0800

    scsi: qla2xxx: Fix erroneous link down
    
    commit 3fbc74feb642deb688cc97f76d40b7287ddd4cb1 upstream.
    
    If after an adapter reset the appearance of link is not recovered, the
    devices are not rediscovered.  This is result of a race condition between
    adapter reset (abort_isp) and the topology scan.  During adapter reset, the
    ABORT_ISP_ACTIVE flag is set.  Topology scan usually occurred after adapter
    reset.  In this case, the topology scan came earlier than usual where it
    ran into problem due to ABORT_ISP_ACTIVE flag was still set.
    
    kernel: qla2xxx [0000:13:00.0]-1005:1: Cmd 0x6a aborted with timeout since ISP Abort is pending
    kernel: qla2xxx [0000:13:00.0]-28a0:1: MBX_GET_PORT_NAME failed, No FL Port.
    kernel: qla2xxx [0000:13:00.0]-286b:1: qla2x00_configure_loop: exiting normally. local port wwpn 51402ec0123d9a80 id 012300)
    kernel: qla2xxx [0000:13:00.0]-8017:1: ADAPTER RESET SUCCEEDED nexus=1:0:15.
    
    Allow adapter reset to complete before any scan can start.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e596253113b69b4018818260bd5da40c201bee73
Author: Arun Easi <aeasi@marvell.com>
Date:   Mon Dec 19 03:07:40 2022 -0800

    scsi: qla2xxx: Fix DMA-API call trace on NVMe LS requests
    
    commit c75e6aef5039830cce5d4cf764dd204522f89e6b upstream.
    
    The following message and call trace was seen with debug kernels:
    
    DMA-API: qla2xxx 0000:41:00.0: device driver failed to check map
    error [device address=0x00000002a3ff38d8] [size=1024 bytes] [mapped as
    single]
    WARNING: CPU: 0 PID: 2930 at kernel/dma/debug.c:1017
             check_unmap+0xf42/0x1990
    
    Call Trace:
            debug_dma_unmap_page+0xc9/0x100
            qla_nvme_ls_unmap+0x141/0x210 [qla2xxx]
    
    Remove DMA mapping from the driver altogether, as it is already done by FC
    layer. This prevents the warning.
    
    Fixes: c85ab7d9e27a ("scsi: qla2xxx: Fix missed DMA unmap for NVMe ls requests")
    Cc: stable@vger.kernel.org
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40bedbf10d562d3702b3dde88e9e501058d287f1
Author: Quinn Tran <qutran@marvell.com>
Date:   Mon Dec 19 03:07:39 2022 -0800

    scsi: qla2xxx: Fix link failure in NPIV environment
    
    commit b1ae65c082f74536ec292b15766f2846f0238373 upstream.
    
    User experienced symptoms of adapter failure in NPIV environment. NPIV
    hosts were allowed to trigger chip reset back to back due to NPIV link
    state being slow to come online.
    
    Fix link failure in NPIV environment by removing NPIV host from directly
    being able to perform chip reset.
    
     kernel: qla2xxx [0000:04:00.1]-6009:261: Loop down - aborting ISP.
     kernel: qla2xxx [0000:04:00.1]-6009:262: Loop down - aborting ISP.
     kernel: qla2xxx [0000:04:00.1]-6009:281: Loop down - aborting ISP.
     kernel: qla2xxx [0000:04:00.1]-6009:285: Loop down - aborting ISP
    
    Fixes: 0d6e61bc6a4f ("[SCSI] qla2xxx: Correct various NPIV issues.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e02a43acd0691791df79ce538f2dd497a6c9b76
Author: Mukesh Ojha <quic_mojha@quicinc.com>
Date:   Tue Feb 14 17:36:43 2023 +0530

    ring-buffer: Handle race between rb_move_tail and rb_check_pages
    
    commit 8843e06f67b14f71c044bf6267b2387784c7e198 upstream.
    
    It seems a data race between ring_buffer writing and integrity check.
    That is, RB_FLAG of head_page is been updating, while at same time
    RB_FLAG was cleared when doing integrity check rb_check_pages():
    
      rb_check_pages()            rb_handle_head_page():
      --------                    --------
      rb_head_page_deactivate()
                                  rb_head_page_set_normal()
      rb_head_page_activate()
    
    We do intergrity test of the list to check if the list is corrupted and
    it is still worth doing it. So, let's refactor rb_check_pages() such that
    we no longer clear and set flag during the list sanity checking.
    
    [1] and [2] are the test to reproduce and the crash report respectively.
    
    1:
    ``` read_trace.sh
      while true;
      do
        # the "trace" file is closed after read
        head -1 /sys/kernel/tracing/trace > /dev/null
      done
    ```
    ``` repro.sh
      sysctl -w kernel.panic_on_warn=1
      # function tracer will writing enough data into ring_buffer
      echo function > /sys/kernel/tracing/current_tracer
      ./read_trace.sh &
      ./read_trace.sh &
      ./read_trace.sh &
      ./read_trace.sh &
      ./read_trace.sh &
      ./read_trace.sh &
      ./read_trace.sh &
      ./read_trace.sh &
    ```
    
    2:
    ------------[ cut here ]------------
    WARNING: CPU: 9 PID: 62 at kernel/trace/ring_buffer.c:2653
    rb_move_tail+0x450/0x470
    Modules linked in:
    CPU: 9 PID: 62 Comm: ksoftirqd/9 Tainted: G        W          6.2.0-rc6+
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014
    RIP: 0010:rb_move_tail+0x450/0x470
    Code: ff ff 4c 89 c8 f0 4d 0f b1 02 48 89 c2 48 83 e2 fc 49 39 d0 75 24
    83 e0 03 83 f8 02 0f 84 e1 fb ff ff 48 8b 57 10 f0 ff 42 08 <0f> 0b 83
    f8 02 0f 84 ce fb ff ff e9 db
    RSP: 0018:ffffb5564089bd00 EFLAGS: 00000203
    RAX: 0000000000000000 RBX: ffff9db385a2bf81 RCX: ffffb5564089bd18
    RDX: ffff9db281110100 RSI: 0000000000000fe4 RDI: ffff9db380145400
    RBP: ffff9db385a2bf80 R08: ffff9db385a2bfc0 R09: ffff9db385a2bfc2
    R10: ffff9db385a6c000 R11: ffff9db385a2bf80 R12: 0000000000000000
    R13: 00000000000003e8 R14: ffff9db281110100 R15: ffffffffbb006108
    FS:  0000000000000000(0000) GS:ffff9db3bdcc0000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00005602323024c8 CR3: 0000000022e0c000 CR4: 00000000000006e0
    Call Trace:
     <TASK>
     ring_buffer_lock_reserve+0x136/0x360
     ? __do_softirq+0x287/0x2df
     ? __pfx_rcu_softirq_qs+0x10/0x10
     trace_function+0x21/0x110
     ? __pfx_rcu_softirq_qs+0x10/0x10
     ? __do_softirq+0x287/0x2df
     function_trace_call+0xf6/0x120
     0xffffffffc038f097
     ? rcu_softirq_qs+0x5/0x140
     rcu_softirq_qs+0x5/0x140
     __do_softirq+0x287/0x2df
     run_ksoftirqd+0x2a/0x30
     smpboot_thread_fn+0x188/0x220
     ? __pfx_smpboot_thread_fn+0x10/0x10
     kthread+0xe7/0x110
     ? __pfx_kthread+0x10/0x10
     ret_from_fork+0x2c/0x50
     </TASK>
    ---[ end trace 0000000000000000 ]---
    
    [ crash report and test reproducer credit goes to Zheng Yejian]
    
    Link: https://lore.kernel.org/linux-trace-kernel/1676376403-16462-1-git-send-email-quic_mojha@quicinc.com
    
    Cc: <mhiramat@kernel.org>
    Cc: stable@vger.kernel.org
    Fixes: 1039221cc278 ("ring-buffer: Do not disable recording when there is an iterator")
    Reported-by: Zheng Yejian <zhengyejian1@huawei.com>
    Signed-off-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1693f3bc1f2566718993747166b9afe98c572fec
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Wed Jan 18 16:37:25 2023 -0500

    ktest.pl: Add RUN_TIMEOUT option with default unlimited
    
    commit 4e7d2a8f0b52abf23b1dc13b3d88bc0923383cd5 upstream.
    
    There is a disconnect between the run_command function and the
    wait_for_input. The wait_for_input has a default timeout of 2 minutes. But
    if that happens, the run_command loop will exit out to the waitpid() of
    the executing command. This fails in that it no longer monitors the
    command, and also, the ssh to the test box can hang when its finished, as
    it's waiting for the pipe it's writing to to flush, but the loop that
    reads that pipe has already exited, leaving the command stuck, and the
    test hangs.
    
    Instead, make the default "wait_for_input" of the run_command infinite,
    and allow the user to override it if they want with a default timeout
    option "RUN_TIMEOUT".
    
    But this fixes the hang that happens when the pipe is full and the ssh
    session never exits.
    
    Cc: stable@vger.kernel.org
    Fixes: 6e98d1b4415fe ("ktest: Add timeout to ssh command")
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39255e4788fb5a27dd6957540a62b037aa7841ea
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Wed Jan 18 11:31:25 2023 -0500

    ktest.pl: Fix missing "end_monitor" when machine check fails
    
    commit e8bf9b98d40dbdf4e39362e3b85a70c61da68cb7 upstream.
    
    In the "reboot" command, it does a check of the machine to see if it is
    still alive with a simple "ssh echo" command. If it fails, it will assume
    that a normal "ssh reboot" is not possible and force a power cycle.
    
    In this case, the "start_monitor" is executed, but the "end_monitor" is
    not, and this causes the screen will not be given back to the console. That
    is, after the test, a "reset" command needs to be performed, as "echo" is
    turned off.
    
    Cc: stable@vger.kernel.org
    Fixes: 6474ace999edd ("ktest.pl: Powercycle the box on reboot if no connection can be made")
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dfb3f4588bc03d344e4ca4a70a06f24cf0cf6ec
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Wed Jan 18 16:32:13 2023 -0500

    ktest.pl: Give back console on Ctrt^C on monitor
    
    commit 83d29d439cd3ef23041570d55841f814af2ecac0 upstream.
    
    When monitoring the console output, the stdout is being redirected to do
    so. If Ctrl^C is hit during this mode, the stdout is not back to the
    console, the user does not see anything they type (no echo).
    
    Add "end_monitor" to the SIGINT interrupt handler to give back the console
    on Ctrl^C.
    
    Cc: stable@vger.kernel.org
    Fixes: 9f2cdcbbb90e7 ("ktest: Give console process a dedicated tty")
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed77831e69ee85a09ff3e8c179bc01c06cb76e3d
Author: Yin Fengwei <fengwei.yin@intel.com>
Date:   Fri Dec 23 21:52:07 2022 +0800

    mm/thp: check and bail out if page in deferred queue already
    
    commit 81e506bec9be1eceaf5a2c654e28ba5176ef48d8 upstream.
    
    Kernel build regression with LLVM was reported here:
    https://lore.kernel.org/all/Y1GCYXGtEVZbcv%2F5@dev-arch.thelio-3990X/ with
    commit f35b5d7d676e ("mm: align larger anonymous mappings on THP
    boundaries").  And the commit f35b5d7d676e was reverted.
    
    It turned out the regression is related with madvise(MADV_DONTNEED)
    was used by ld.lld. But with none PMD_SIZE aligned parameter len.
    trace-bpfcc captured:
    531607  531732  ld.lld          do_madvise.part.0 start: 0x7feca9000000, len: 0x7fb000, behavior: 0x4
    531607  531793  ld.lld          do_madvise.part.0 start: 0x7fec86a00000, len: 0x7fb000, behavior: 0x4
    
    If the underneath physical page is THP, the madvise(MADV_DONTNEED) can
    trigger split_queue_lock contention raised significantly. perf showed
    following data:
        14.85%     0.00%  ld.lld           [kernel.kallsyms]           [k]
           entry_SYSCALL_64_after_hwframe
               11.52%
                    entry_SYSCALL_64_after_hwframe
                    do_syscall_64
                    __x64_sys_madvise
                    do_madvise.part.0
                    zap_page_range
                    unmap_single_vma
                    unmap_page_range
                    page_remove_rmap
                    deferred_split_huge_page
                    __lock_text_start
                    native_queued_spin_lock_slowpath
    
    If THP can't be removed from rmap as whole THP, partial THP will be
    removed from rmap by removing sub-pages from rmap.  Even the THP head page
    is added to deferred queue already, the split_queue_lock will be acquired
    and check whether the THP head page is in the queue already.  Thus, the
    contention of split_queue_lock is raised.
    
    Before acquire split_queue_lock, check and bail out early if the THP
    head page is in the queue already. The checking without holding
    split_queue_lock could race with deferred_split_scan, but it doesn't
    impact the correctness here.
    
    Test result of building kernel with ld.lld:
    commit 7b5a0b664ebe (parent commit of f35b5d7d676e):
    time -f "\t%E real,\t%U user,\t%S sys" make LD=ld.lld -skj96 allmodconfig all
            6:07.99 real,   26367.77 user,  5063.35 sys
    
    commit f35b5d7d676e:
    time -f "\t%E real,\t%U user,\t%S sys" make LD=ld.lld -skj96 allmodconfig all
            7:22.15 real,   26235.03 user,  12504.55 sys
    
    commit f35b5d7d676e with the fixing patch:
    time -f "\t%E real,\t%U user,\t%S sys" make LD=ld.lld -skj96 allmodconfig all
            6:08.49 real,   26520.15 user,  5047.91 sys
    
    Link: https://lkml.kernel.org/r/20221223135207.2275317-1-fengwei.yin@intel.com
    Signed-off-by: Yin Fengwei <fengwei.yin@intel.com>
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Acked-by: David Rientjes <rientjes@google.com>
    Reviewed-by: "Huang, Ying" <ying.huang@intel.com>
    Cc: Feng Tang <feng.tang@intel.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Xing Zhengjun <zhengjun.xing@linux.intel.com>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6d20325f422b3252aff2d42d8d09b2ebb434892
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Wed Dec 7 14:00:39 2022 +0100

    mm: memcontrol: deprecate charge moving
    
    commit da34a8484d162585e22ed8c1e4114aa2f60e3567 upstream.
    
    Charge moving mode in cgroup1 allows memory to follow tasks as they
    migrate between cgroups.  This is, and always has been, a questionable
    thing to do - for several reasons.
    
    First, it's expensive.  Pages need to be identified, locked and isolated
    from various MM operations, and reassigned, one by one.
    
    Second, it's unreliable.  Once pages are charged to a cgroup, there isn't
    always a clear owner task anymore.  Cache isn't moved at all, for example.
    Mapped memory is moved - but if trylocking or isolating a page fails,
    it's arbitrarily left behind.  Frequent moving between domains may leave a
    task's memory scattered all over the place.
    
    Third, it isn't really needed.  Launcher tasks can kick off workload tasks
    directly in their target cgroup.  Using dedicated per-workload groups
    allows fine-grained policy adjustments - no need to move tasks and their
    physical pages between control domains.  The feature was never
    forward-ported to cgroup2, and it hasn't been missed.
    
    Despite it being a niche usecase, the maintenance overhead of supporting
    it is enormous.  Because pages are moved while they are live and subject
    to various MM operations, the synchronization rules are complicated.
    There are lock_page_memcg() in MM and FS code, which non-cgroup people
    don't understand.  In some cases we've been able to shift code and cgroup
    API calls around such that we can rely on native locking as much as
    possible.  But that's fragile, and sometimes we need to hold MM locks for
    longer than we otherwise would (pte lock e.g.).
    
    Mark the feature deprecated. Hopefully we can remove it soon.
    
    And backport into -stable kernels so that people who develop against
    earlier kernels are warned about this deprecation as early as possible.
    
    [akpm@linux-foundation.org: fix memory.rst underlining]
    Link: https://lkml.kernel.org/r/Y5COd+qXwk/S+n8N@cmpxchg.org
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Hugh Dickins <hughd@google.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Muchun Song <songmuchun@bytedance.com>
    Cc: Roman Gushchin <roman.gushchin@linux.dev>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1f6c87d82248b59904889538fff1b8063800af4
Author: John Ogness <john.ogness@linutronix.de>
Date:   Thu Dec 29 14:49:39 2022 +0106

    docs: gdbmacros: print newest record
    
    commit f2e4cca2f670c8e52fbb551a295f2afc9aa2bd72 upstream.
    
    @head_id points to the newest record, but the printing loop
    exits when it increments to this value (before printing).
    
    Exit the printing loop after the newest record has been printed.
    
    The python-based function in scripts/gdb/linux/dmesg.py already
    does this correctly.
    
    Fixes: e60768311af8 ("scripts/gdb: update for lockless printk ringbuffer")
    Cc: stable@vger.kernel.org
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20221229134339.197627-1-john.ogness@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6814e8e4202f3507a5b51c80a3c38f6e7a3973fb
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Wed Jan 4 16:31:10 2023 +0800

    remoteproc/mtk_scp: Move clk ops outside send_lock
    
    commit e46ceea3148163166ef9b7bcac578e72dd30c064 upstream.
    
    Clocks are properly reference counted and do not need to be inside the
    lock range.
    
    Right now this triggers a false-positive lockdep warning on MT8192 based
    Chromebooks, through a combination of mtk-scp that has a cros-ec-rpmsg
    sub-device, the (actual) cros-ec I2C adapter registration, I2C client
    (not on cros-ec) probe doing i2c transfers and enabling clocks.
    
    This is a false positive because the cros-ec-rpmsg under mtk-scp does
    not have an I2C adapter, and also each I2C adapter and cros-ec instance
    have their own mutex.
    
    Move the clk operations outside of the send_lock range.
    
    Fixes: 63c13d61eafe ("remoteproc/mediatek: add SCP support for mt8183")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230104083110.736377-1-wenst@chromium.org
    [Fixed "Fixes:" tag line]
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b78c2482bbe1889bc8c441e113c666ff6b6b329
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Wed Dec 21 09:30:11 2022 +0100

    media: ipu3-cio2: Fix PM runtime usage_count in driver unbind
    
    commit 909d3096ac99fa2289f9b8945a3eab2269947a0a upstream.
    
    Get the PM runtime usage_count and forbid PM runtime at driver unbind. The
    opposite is being done in probe() already.
    
    Fixes: commit c2a6a07afe4a ("media: intel-ipu3: cio2: add new MIPI-CSI2 driver")
    Cc: stable@vger.kernel.org # for >= 4.16
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c96c0b2e32661b2da11d4eab9c895336b2e9680
Author: Elvira Khabirova <lineprinter0@gmail.com>
Date:   Sat Feb 18 23:43:59 2023 +0100

    mips: fix syscall_get_nr
    
    commit 85cc91e2ba4262a602ec65e2b76c4391a9e60d3d upstream.
    
    The implementation of syscall_get_nr on mips used to ignore the task
    argument and return the syscall number of the calling thread instead of
    the target thread.
    
    The bug was exposed to user space by commit 201766a20e30f ("ptrace: add
    PTRACE_GET_SYSCALL_INFO request") and detected by strace test suite.
    
    Link: https://github.com/strace/strace/issues/235
    Fixes: c2d9f1775731 ("MIPS: Fix syscall_get_nr for the syscall exit tracing.")
    Cc: <stable@vger.kernel.org> # v3.19+
    Co-developed-by: Dmitry V. Levin <ldv@strace.io>
    Signed-off-by: Dmitry V. Levin <ldv@strace.io>
    Signed-off-by: Elvira Khabirova <lineprinter0@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd4d3eab231006f6c174a2630f3158ee25c3fceb
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Feb 16 00:36:02 2023 -0800

    dax/kmem: Fix leak of memory-hotplug resources
    
    commit e686c32590f40bffc45f105c04c836ffad3e531a upstream.
    
    While experimenting with CXL region removal the following corruption of
    /proc/iomem appeared.
    
    Before:
    f010000000-f04fffffff : CXL Window 0
      f010000000-f02fffffff : region4
        f010000000-f02fffffff : dax4.0
          f010000000-f02fffffff : System RAM (kmem)
    
    After (modprobe -r cxl_test):
    f010000000-f02fffffff : **redacted binary garbage**
      f010000000-f02fffffff : System RAM (kmem)
    
    ...and testing further the same is visible with persistent memory
    assigned to kmem:
    
    Before:
    480000000-243fffffff : Persistent Memory
      480000000-57e1fffff : namespace3.0
      580000000-243fffffff : dax3.0
        580000000-243fffffff : System RAM (kmem)
    
    After (ndctl disable-region all):
    480000000-243fffffff : Persistent Memory
      580000000-243fffffff : ***redacted binary garbage***
        580000000-243fffffff : System RAM (kmem)
    
    The corrupted data is from a use-after-free of the "dax4.0" and "dax3.0"
    resources, and it also shows that the "System RAM (kmem)" resource is
    not being removed. The bug does not appear after "modprobe -r kmem", it
    requires the parent of "dax4.0" and "dax3.0" to be removed which
    re-parents the leaked "System RAM (kmem)" instances. Those in turn
    reference the freed resource as a parent.
    
    First up for the fix is release_mem_region_adjustable() needs to
    reliably delete the resource inserted by add_memory_driver_managed().
    That is thwarted by a check for IORESOURCE_SYSRAM that predates the
    dax/kmem driver, from commit:
    
    65c78784135f ("kernel, resource: check for IORESOURCE_SYSRAM in release_mem_region_adjustable")
    
    That appears to be working around the behavior of HMM's
    "MEMORY_DEVICE_PUBLIC" facility that has since been deleted. With that
    check removed the "System RAM (kmem)" resource gets removed, but
    corruption still occurs occasionally because the "dax" resource is not
    reliably removed.
    
    The dax range information is freed before the device is unregistered, so
    the driver can not reliably recall (another use after free) what it is
    meant to release. Lastly if that use after free got lucky, the driver
    was covering up the leak of "System RAM (kmem)" due to its use of
    release_resource() which detaches, but does not free, child resources.
    The switch to remove_resource() forces remove_memory() to be responsible
    for the deletion of the resource added by add_memory_driver_managed().
    
    Fixes: c2f3011ee697 ("device-dax: add an allocation interface for device-dax instances")
    Cc: <stable@vger.kernel.org>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Pavel Tatashin <pasha.tatashin@soleen.com>
    Reviewed-by: Vishal Verma <vishal.l.verma@intel.com>
    Reviewed-by: Pasha Tatashin <pasha.tatashin@soleen.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/167653656244.3147810.5705900882794040229.stgit@dwillia2-xfh.jf.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 241e893df474c18340bea83eef3fd35fc4bb1d0e
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Jan 6 19:25:59 2023 -0500

    alpha: fix FEN fault handling
    
    commit 977a3009547dad4a5bc95d91be4a58c9f7eedac0 upstream.
    
    Type 3 instruction fault (FPU insn with FPU disabled) is handled
    by quietly enabling FPU and returning.  Which is fine, except that
    we need to do that both for fault in userland and in the kernel;
    the latter *can* legitimately happen - all it takes is this:
    
    .global _start
    _start:
            call_pal 0xae
            lda $0, 0
            ldq $0, 0($0)
    
    - call_pal CLRFEN to clear "FPU enabled" flag and arrange for
    a signal delivery (SIGSEGV in this case).
    
    Fixed by moving the handling of type 3 into the common part of
    do_entIF(), before we check for kernel vs. user mode.
    
    Incidentally, the check for kernel mode is unidiomatic; the normal
    way to do that is !user_mode(regs).  The difference is that
    the open-coded variant treats any of bits 63..3 of regs->ps being
    set as "it's user mode" while the normal approach is to check just
    the bit 3.  PS is a 4-bit register and regs->ps always will have
    bits 63..4 clear, so the open-coded variant here is actually equivalent
    to !user_mode(regs).  Harder to follow, though...
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Richard Henderson <rth@twiddle.net>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae16346078b1189aee934afd872d9f3d0a682c33
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Fri Feb 24 18:48:54 2023 +0100

    rbd: avoid use-after-free in do_rbd_add() when rbd_dev_create() fails
    
    commit f7c4d9b133c7a04ca619355574e96b6abf209fba upstream.
    
    If getting an ID or setting up a work queue in rbd_dev_create() fails,
    use-after-free on rbd_dev->rbd_client, rbd_dev->spec and rbd_dev->opts
    is triggered in do_rbd_add().  The root cause is that the ownership of
    these structures is transfered to rbd_dev prematurely and they all end
    up getting freed when rbd_dev_create() calls rbd_dev_free() prior to
    returning to do_rbd_add().
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE, an
    incomplete patch submitted by Natalia Petrova <n.petrova@fintech.ru>.
    
    Cc: stable@vger.kernel.org
    Fixes: 1643dfa4c2c8 ("rbd: introduce a per-device ordered workqueue")
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f2fd21b5b54530f14f75ef11cc62dc7f52dab1b
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Feb 9 11:58:40 2023 +0100

    ARM: dts: exynos: correct TMU phandle in Odroid HC1
    
    commit 2e3d0e20d8456f876607a8af61fdb83dfbf98cb6 upstream.
    
    TMU node uses 0 as thermal-sensor-cells, thus thermal zone referencing
    it must not have an argument to phandle.  This was not critical before,
    but since rework of thermal Devicetree initialization in the
    commit 3fd6d6e2b4e8 ("thermal/of: Rework the thermal device tree
    initialization"), this leads to errors registering thermal zones other
    than first one:
    
      thermal_sys: cpu0-thermal: Failed to read thermal-sensors cells: -2
      thermal_sys: Failed to find thermal zone for tmu id=0
      exynos-tmu 10064000.tmu: Failed to register sensor: -2
      exynos-tmu: probe of 10064000.tmu failed with error -2
    
    Fixes: 1ac49427b566 ("ARM: dts: exynos: Add support for Hardkernel's Odroid HC1 board")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230209105841.779596-5-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dd9de2e2f7b040c31dbf3695b102ad0398dfeb6
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Feb 9 11:58:39 2023 +0100

    ARM: dts: exynos: correct TMU phandle in Odroid XU
    
    commit 9372eca505e7a19934d750b4b4c89a3652738e66 upstream.
    
    TMU node uses 0 as thermal-sensor-cells, thus thermal zone referencing
    it must not have an argument to phandle.  Since thermal-sensors property
    is already defined in included exynosi5410.dtsi, drop it from
    exynos5410-odroidxu.dts to fix the error and remoev redundancy.
    
    Fixes: 88644b4c750b ("ARM: dts: exynos: Configure PWM, usb3503, PMIC and thermal on Odroid XU board")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230209105841.779596-4-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1887cca652603076ae814c16935c8a956d6aa28
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Feb 9 11:58:38 2023 +0100

    ARM: dts: exynos: correct TMU phandle in Exynos5250
    
    commit 33e2c595e2e4016991ead44933a29d1ef93d5f26 upstream.
    
    TMU node uses 0 as thermal-sensor-cells, thus thermal zone referencing
    it must not have an argument to phandle.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 9843a2236003 ("ARM: dts: Provide dt bindings identical for Exynos TMU")
    Link: https://lore.kernel.org/r/20230209105841.779596-3-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 136d6f3c5dc96d5bc67e63cd607f343158f7b7ba
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Feb 9 11:58:41 2023 +0100

    ARM: dts: exynos: correct TMU phandle in Odroid XU3 family
    
    commit a3583e92d188ec6c58c7f603ac5e72dd8a11c21a upstream.
    
    TMU node uses 0 as thermal-sensor-cells, thus thermal zone referencing
    it must not have an argument to phandle.  This was not critical before,
    but since rework of thermal Devicetree initialization in the
    commit 3fd6d6e2b4e8 ("thermal/of: Rework the thermal device tree
    initialization"), this leads to errors registering thermal zones other
    than first one:
    
      thermal_sys: cpu0-thermal: Failed to read thermal-sensors cells: -2
      thermal_sys: Failed to find thermal zone for tmu id=0
      exynos-tmu 10064000.tmu: Failed to register sensor: -2
      exynos-tmu: probe of 10064000.tmu failed with error -2
    
    Fixes: f1722d7dd8b8 ("ARM: dts: Define default thermal-zones for exynos5422")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230209105841.779596-6-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 135e968d6a86e6091a9c68851d39d9d5e8bab19c
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Feb 9 11:58:36 2023 +0100

    ARM: dts: exynos: correct TMU phandle in Exynos4
    
    commit 8e4505e617a80f601e2f53a917611777f128f925 upstream.
    
    TMU node uses 0 as thermal-sensor-cells, thus thermal zone referencing
    it must not have an argument to phandle.
    
    Fixes: 328829a6ad70 ("ARM: dts: define default thermal-zones for exynos4")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230209105841.779596-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aaa2d2249c90b3ec91dc98b5a93958cdee2f685f
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Feb 9 11:58:37 2023 +0100

    ARM: dts: exynos: correct TMU phandle in Exynos4210
    
    commit 408ab6786dbf6dd696488054c9559681112ef994 upstream.
    
    TMU node uses 0 as thermal-sensor-cells, thus thermal zone referencing
    it must not have an argument to phandle.  Since thermal-sensors property is
    already defined in included exynos4-cpu-thermal.dtsi, drop it from
    exynos4210.dtsi to fix the error and remoev redundancy.
    
    Fixes: 9843a2236003 ("ARM: dts: Provide dt bindings identical for Exynos TMU")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230209105841.779596-2-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2b478228bfdd11e358c5bc197561331f5d5c394
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jan 22 14:02:57 2023 -0500

    dm flakey: don't corrupt the zero page
    
    commit f50714b57aecb6b3dc81d578e295f86d9c73f078 upstream.
    
    When we need to zero some range on a block device, the function
    __blkdev_issue_zero_pages submits a write bio with the bio vector pointing
    to the zero page. If we use dm-flakey with corrupt bio writes option, it
    will corrupt the content of the zero page which results in crashes of
    various userspace programs. Glibc assumes that memory returned by mmap is
    zeroed and it uses it for calloc implementation; if the newly mapped
    memory is not zeroed, calloc will return non-zeroed memory.
    
    Fix this bug by testing if the page is equal to ZERO_PAGE(0) and
    avoiding the corruption in this case.
    
    Cc: stable@vger.kernel.org
    Fixes: a00f5276e266 ("dm flakey: Properly corrupt multi-page bios.")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Sweet Tea Dorminy <sweettea-kernel@dorminy.me>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07e375c18af0d661c128937a88c54c332d04bc95
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jan 22 14:03:56 2023 -0500

    dm flakey: fix logic when corrupting a bio
    
    commit aa56b9b75996ff4c76a0a4181c2fa0206c3d91cc upstream.
    
    If "corrupt_bio_byte" is set to corrupt reads and corrupt_bio_flags is
    used, dm-flakey would erroneously return all writes as errors. Likewise,
    if "corrupt_bio_byte" is set to corrupt writes, dm-flakey would return
    errors for all reads.
    
    Fix the logic so that if fc->corrupt_bio_byte is non-zero, dm-flakey
    will not abort reads on writes with an error.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Sweet Tea Dorminy <sweettea-kernel@dorminy.me>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17f81b127712afb47060941a0290db9114b2f83a
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Wed Feb 1 12:39:41 2023 -0800

    thermal: intel: powerclamp: Fix cur_state for multi package system
    
    commit 8e47363588377e1bdb65e2b020b409cfb44dd260 upstream.
    
    The powerclamp cooling device cur_state shows actual idle observed by
    package C-state idle counters. But the implementation is not sufficient
    for multi package or multi die system. The cur_state value is incorrect.
    On these systems, these counters must be read from each package/die and
    somehow aggregate them. But there is no good method for aggregation.
    
    It was not a problem when explicit CPU model addition was required to
    enable intel powerclamp. In this way certain CPU models could have
    been avoided. But with the removal of CPU model check with the
    availability of Package C-state counters, the driver is loaded on most
    of the recent systems.
    
    For multi package/die systems, just show the actual target idle state,
    the system is trying to achieve. In powerclamp this is the user set
    state minus one.
    
    Also there is no use of starting a worker thread for polling package
    C-state counters and applying any compensation for multiple package
    or multiple die systems.
    
    Fixes: b721ca0d1927 ("thermal/powerclamp: remove cpu whitelist")
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: 4.14+ <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cfe78619b0de6d2da773978bc2d22797212eaa7
Author: Alexander Wetzel <alexander@wetzel-home.de>
Date:   Tue Jan 24 15:18:56 2023 +0100

    wifi: cfg80211: Fix use after free for wext
    
    commit 015b8cc5e7c4d7bb671f1984d7b7338c310b185b upstream.
    
    Key information in wext.connect is not reset on (re)connect and can hold
    data from a previous connection.
    
    Reset key data to avoid that drivers or mac80211 incorrectly detect a
    WEP connection request and access the freed or already reused memory.
    
    Additionally optimize cfg80211_sme_connect() and avoid an useless
    schedule of conn_work.
    
    Fixes: fffd0934b939 ("cfg80211: rework key operation")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230124141856.356646-1-alexander@wetzel-home.de
    Signed-off-by: Alexander Wetzel <alexander@wetzel-home.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73090cebe3f3f4c5a13d2e76b5da4761fb15186b
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Sun Jan 8 17:08:16 2023 +0200

    wifi: rtl8xxxu: Use a longer retry limit of 48
    
    commit 2a86aa9a1892d60ef2e3f310f5b42b8b05546d65 upstream.
    
    The Realtek rate control algorithm goes back and forth a lot between
    the highest and the lowest rate it's allowed to use. This is due to
    a lot of frames being dropped because the retry limits set by
    IEEE80211_CONF_CHANGE_RETRY_LIMITS are too low. (Experimentally, they
    are 4 for long frames and 7 for short frames.)
    
    The vendor drivers hardcode the value 48 for both retry limits (for
    station mode), which makes dropped frames very rare and thus the rate
    control is more stable.
    
    Because most Realtek chips handle the rate control in the firmware,
    which can't be modified, ignore the limits set by
    IEEE80211_CONF_CHANGE_RETRY_LIMITS and use the value 48 (set during
    chip initialisation), same as the vendor drivers.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Reviewed-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/477d745b-6bac-111d-403c-487fc19aa30d@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3383f79d6b0a0641f767052fda3952dd1805d2d6
Author: Pingfan Liu <piliu@redhat.com>
Date:   Wed Feb 15 19:23:40 2023 +0800

    dm: add cond_resched() to dm_wq_work()
    
    commit 0ca44fcef241768fd25ee763b3d203b9852f269b upstream.
    
    Otherwise the while() loop in dm_wq_work() can result in a "dead
    loop" on systems that have preemption disabled. This is particularly
    problematic on single cpu systems.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Pingfan Liu <piliu@redhat.com>
    Acked-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6409208c13f7c56adc12dd795abf4141e3d5e64
Author: Louis Rannou <lrannou@baylibre.com>
Date:   Fri Feb 3 09:07:54 2023 +0200

    mtd: spi-nor: Fix shift-out-of-bounds in spi_nor_set_erase_type
    
    commit f0f0cfdc3a024e21161714f2e05f0df3b84d42ad upstream.
    
    spi_nor_set_erase_type() was used either to set or to mask out an erase
    type. When we used it to mask out an erase type a shift-out-of-bounds
    was hit:
    UBSAN: shift-out-of-bounds in drivers/mtd/spi-nor/core.c:2237:24
    shift exponent 4294967295 is too large for 32-bit type 'int'
    
    The setting of the size_{shift, mask} and of the opcode are unnecessary
    when the erase size is zero, as throughout the code just the erase size
    is considered to determine whether an erase type is supported or not.
    Setting the opcode to 0xFF was wrong too as nobody guarantees that 0xFF
    is an unused opcode. Thus when masking out an erase type, just set the
    erase size to zero. This will fix the shift-out-of-bounds.
    
    Fixes: 5390a8df769e ("mtd: spi-nor: add support to non-uniform SFDP SPI NOR flash memories")
    Cc: stable@vger.kernel.org
    Reported-by: Alexander Stein <Alexander.Stein@tq-group.com>
    Signed-off-by: Louis Rannou <lrannou@baylibre.com>
    Tested-by: Alexander Stein <Alexander.Stein@tq-group.com>
    Link: https://lore.kernel.org/r/20230203070754.50677-1-tudor.ambarus@linaro.org
    [ta: refine changes, new commit message, fix compilation error]
    Signed-off-by: Tudor Ambarus <tudor.ambarus@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dc0fa313bb4e86382a3e7125429710d44383196
Author: Jun Nie <jun.nie@linaro.org>
Date:   Tue Jan 3 09:45:17 2023 +0800

    ext4: refuse to create ea block when umounted
    
    commit f31173c19901a96bb2ebf6bcfec8a08df7095c91 upstream.
    
    The ea block expansion need to access s_root while it is
    already set as NULL when umount is triggered. Refuse this
    request to avoid panic.
    
    Reported-by: syzbot+2dacb8f015bf1420155f@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=3613786cb88c93aa1c6a279b1df6a7b201347d08
    Link: https://lore.kernel.org/r/20230103014517.495275-3-jun.nie@linaro.org
    Cc: stable@kernel.org
    Signed-off-by: Jun Nie <jun.nie@linaro.org>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d738789ae9ec47d3458a008788f3cdc862ebf0cb
Author: Jun Nie <jun.nie@linaro.org>
Date:   Tue Jan 3 09:45:16 2023 +0800

    ext4: optimize ea_inode block expansion
    
    commit 1e9d62d252812575ded7c620d8fc67c32ff06c16 upstream.
    
    Copy ea data from inode entry when expanding ea block if possible.
    Then remove the ea entry if expansion success. Thus memcpy to a
    temporary buffer may be avoided.
    
    If the expansion fails, we do not need to recovery the removed ea
    entry neither in this way.
    
    Reported-by: syzbot+2dacb8f015bf1420155f@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=3613786cb88c93aa1c6a279b1df6a7b201347d08
    Link: https://lore.kernel.org/r/20230103014517.495275-2-jun.nie@linaro.org
    Cc: stable@kernel.org
    Signed-off-by: Jun Nie <jun.nie@linaro.org>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab22799f11e378a37d1c8c4e47e796f84be97a60
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Tue Jan 10 09:53:27 2023 +0800

    jbd2: fix data missing when reusing bh which is ready to be checkpointed
    
    commit e6b9bd7290d334451ce054e98e752abc055e0034 upstream.
    
    Following process will make data lost and could lead to a filesystem
    corrupted problem:
    
    1. jh(bh) is inserted into T1->t_checkpoint_list, bh is dirty, and
       jh->b_transaction = NULL
    2. T1 is added into journal->j_checkpoint_transactions.
    3. Get bh prepare to write while doing checkpoing:
               PA                               PB
       do_get_write_access             jbd2_log_do_checkpoint
        spin_lock(&jh->b_state_lock)
         if (buffer_dirty(bh))
          clear_buffer_dirty(bh)   // clear buffer dirty
           set_buffer_jbddirty(bh)
                                        transaction =
                                        journal->j_checkpoint_transactions
                                        jh = transaction->t_checkpoint_list
                                        if (!buffer_dirty(bh))
                                          __jbd2_journal_remove_checkpoint(jh)
                                          // bh won't be flushed
                                        jbd2_cleanup_journal_tail
        __jbd2_journal_file_buffer(jh, transaction, BJ_Reserved)
    4. Aborting journal/Power-cut before writing latest bh on journal area.
    
    In this way we get a corrupted filesystem with bh's data lost.
    
    Fix it by moving the clearing of buffer_dirty bit just before the call
    to __jbd2_journal_file_buffer(), both bit clearing and jh->b_transaction
    assignment are under journal->j_list_lock locked, so that
    jbd2_log_do_checkpoint() will wait until jh's new transaction fininshed
    even bh is currently not dirty. And journal_shrink_one_cp_list() won't
    remove jh from checkpoint list if the buffer head is reused in
    do_get_write_access().
    
    Fetch a reproducer in [Link].
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216898
    Cc: <stable@kernel.org>
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: zhanchengbin <zhanchengbin1@huawei.com>
    Suggested-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20230110015327.1181863-1-chengzhihao1@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9cd89463ea44606b68c149da1b27e1c1ee704de
Author: Łukasz Stelmach <l.stelmach@samsung.com>
Date:   Thu Feb 23 08:47:48 2023 +0100

    ALSA: hda/realtek: Add quirk for HP EliteDesk 800 G6 Tower PC
    
    commit ea24b9953bcd3889f77a66e7f1d7e86e995dd9c3 upstream.
    
    HP EliteDesk 800 G6 Tower PC (103c:870c) requires a quirk for enabling
    headset-mic.
    
    Signed-off-by: Łukasz Stelmach <l.stelmach@samsung.com>
    Cc: <stable@vger.kernel.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=217008
    Link: https://lore.kernel.org/r/20230223074749.1026060-1-l.stelmach@samsung.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae2340769ed3c2a3d3de0fab64b667db6df27744
Author: Dmitry Fomin <fomindmitriyfoma@mail.ru>
Date:   Sat Feb 25 21:43:21 2023 +0300

    ALSA: ice1712: Do not left ice->gpio_mutex locked in aureon_add_controls()
    
    commit 951606a14a8901e3551fe4d8d3cedd73fe954ce1 upstream.
    
    If snd_ctl_add() fails in aureon_add_controls(), it immediately returns
    and leaves ice->gpio_mutex locked. ice->gpio_mutex locks in
    snd_ice1712_save_gpio_status and unlocks in
    snd_ice1712_restore_gpio_status(ice).
    
    It seems that the mutex is required only for aureon_cs8415_get(),
    so snd_ice1712_restore_gpio_status(ice) can be placed
    just after that. Compile tested only.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Dmitry Fomin <fomindmitriyfoma@mail.ru>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230225184322.6286-1-fomindmitriyfoma@mail.ru
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 246f26664b2ec47b4d6ba41b5c2b779550bda61d
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Mar 6 13:28:57 2023 -0700

    io_uring/poll: allow some retries for poll triggering spuriously
    
    commit c16bda37594f83147b167d381d54c010024efecf upstream.
    
    If we get woken spuriously when polling and fail the operation with
    -EAGAIN again, then we generally only allow polling again if data
    had been transferred at some point. This is indicated with
    REQ_F_PARTIAL_IO. However, if the spurious poll triggers when the socket
    was originally empty, then we haven't transferred data yet and we will
    fail the poll re-arm. This either punts the socket to io-wq if it's
    blocking, or it fails the request with -EAGAIN if not. Neither condition
    is desirable, as the former will slow things down, while the latter
    will make the application confused.
    
    We want to ensure that a repeated poll trigger doesn't lead to infinite
    work making no progress, that's what the REQ_F_PARTIAL_IO check was
    for. But it doesn't protect against a loop post the first receive, and
    it's unnecessarily strict if we started out with an empty socket.
    
    Add a somewhat random retry count, just to put an upper limit on the
    potential number of retries that will be done. This should be high enough
    that we won't really hit it in practice, unless something needs to be
    aborted anyway.
    
    Cc: stable@vger.kernel.org # v5.10+
    Link: https://github.com/axboe/liburing/issues/364
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f3d13241574663c33c7ecda72ff1978a82a4db5
Author: David Lamparter <equinox@diac24.net>
Date:   Mon Mar 6 13:23:06 2023 -0700

    io_uring: remove MSG_NOSIGNAL from recvmsg
    
    commit 7605c43d67face310b4b87dee1a28bc0c8cd8c0f upstream.
    
    MSG_NOSIGNAL is not applicable for the receiving side, SIGPIPE is
    generated when trying to write to a "broken pipe".  AF_PACKET's
    packet_recvmsg() does enforce this, giving back EINVAL when MSG_NOSIGNAL
    is set - making it unuseable in io_uring's recvmsg.
    
    Remove MSG_NOSIGNAL from io_recvmsg_prep().
    
    Cc: stable@vger.kernel.org # v5.10+
    Signed-off-by: David Lamparter <equinox@diac24.net>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20230224150123.128346-1-equinox@diac24.net
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72783d2af89b622282f7d83b166052292b70c87b
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Mon Mar 6 13:21:40 2023 -0700

    io_uring/rsrc: disallow multi-source reg buffers
    
    commit edd478269640b360c6f301f2baa04abdda563ef3 upstream.
    
    If two or more mappings go back to back to each other they can be passed
    into io_uring to be registered as a single registered buffer. That would
    even work if mappings came from different sources, e.g. it's possible to
    mix in this way anon pages and pages from shmem or hugetlb. That is not
    a problem but it'd rather be less prone if we forbid such mixing.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a442f12e47aa866d09d442522eea14d5280e3a18
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Mar 6 13:18:27 2023 -0700

    io_uring: add a conditional reschedule to the IOPOLL cancelation loop
    
    commit fcc926bb857949dbfa51a7d95f3f5ebc657f198c upstream.
    
    If the kernel is configured with CONFIG_PREEMPT_NONE, we could be
    sitting in a tight loop reaping events but not giving them a chance to
    finish. This results in a trace ala:
    
    rcu: INFO: rcu_sched self-detected stall on CPU
    rcu:    2-...!: (5249 ticks this GP) idle=935c/1/0x4000000000000000 softirq=4265/4274 fqs=1
            (t=5251 jiffies g=465 q=4135 ncpus=4)
    rcu: rcu_sched kthread starved for 5249 jiffies! g465 f0x0 RCU_GP_WAIT_FQS(5) ->state=0x0 ->cpu=0
    rcu:    Unless rcu_sched kthread gets sufficient CPU time, OOM is now expected behavior.
    rcu: RCU grace-period kthread stack dump:
    task:rcu_sched       state:R  running task     stack:0     pid:12    ppid:2      flags:0x00000008
    Call trace:
     __switch_to+0xb0/0xc8
     __schedule+0x43c/0x520
     schedule+0x4c/0x98
     schedule_timeout+0xbc/0xdc
     rcu_gp_fqs_loop+0x308/0x344
     rcu_gp_kthread+0xd8/0xf0
     kthread+0xb8/0xc8
     ret_from_fork+0x10/0x20
    rcu: Stack dump where RCU GP kthread last ran:
    Task dump for CPU 0:
    task:kworker/u8:10   state:R  running task     stack:0     pid:89    ppid:2      flags:0x0000000a
    Workqueue: events_unbound io_ring_exit_work
    Call trace:
     __switch_to+0xb0/0xc8
     0xffff0000c8fefd28
    CPU: 2 PID: 95 Comm: kworker/u8:13 Not tainted 6.2.0-rc5-00042-g40316e337c80-dirty #2759
    Hardware name: linux,dummy-virt (DT)
    Workqueue: events_unbound io_ring_exit_work
    pstate: 61400005 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)
    pc : io_do_iopoll+0x344/0x360
    lr : io_do_iopoll+0xb8/0x360
    sp : ffff800009bebc60
    x29: ffff800009bebc60 x28: 0000000000000000 x27: 0000000000000000
    x26: ffff0000c0f67d48 x25: ffff0000c0f67840 x24: ffff800008950024
    x23: 0000000000000001 x22: 0000000000000000 x21: ffff0000c27d3200
    x20: ffff0000c0f67840 x19: ffff0000c0f67800 x18: 0000000000000000
    x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000
    x14: 0000000000000001 x13: 0000000000000001 x12: 0000000000000000
    x11: 0000000000000179 x10: 0000000000000870 x9 : ffff800009bebd60
    x8 : ffff0000c27d3ad0 x7 : fefefefefefefeff x6 : 0000646e756f626e
    x5 : ffff0000c0f67840 x4 : 0000000000000000 x3 : ffff0000c2398000
    x2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000000
    Call trace:
     io_do_iopoll+0x344/0x360
     io_uring_try_cancel_requests+0x21c/0x334
     io_ring_exit_work+0x90/0x40c
     process_one_work+0x1a4/0x254
     worker_thread+0x1ec/0x258
     kthread+0xb8/0xc8
     ret_from_fork+0x10/0x20
    
    Add a cond_resched() in the cancelation IOPOLL loop to fix this.
    
    Cc: stable@vger.kernel.org # 5.10+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d1f9533a39d16f18ed7e630ecb07c0c2181b2cd
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Mar 6 13:16:38 2023 -0700

    io_uring: mark task TASK_RUNNING before handling resume/task work
    
    commit 2f2bb1ffc9983e227424d0787289da5483b0c74f upstream.
    
    Just like for task_work, set the task mode to TASK_RUNNING before doing
    potential resume work. We're not holding any locks at this point,
    but we may have already set the task state to TASK_INTERRUPTIBLE in
    preparation for going to sleep waiting for events. Ensure that we set it
    back to TASK_RUNNING if we have work to process, to avoid warnings on
    calling blocking operations with !TASK_RUNNING.
    
    Fixes: b5d3ae202fbf ("io_uring: handle TIF_NOTIFY_RESUME when checking for task_work")
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Link: https://lore.kernel.org/oe-lkp/202302062208.24d3e563-oliver.sang@intel.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f32f8492e10ec740552c051a1b0a331490f356b
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Mar 6 13:15:06 2023 -0700

    io_uring: handle TIF_NOTIFY_RESUME when checking for task_work
    
    commit b5d3ae202fbfe055aa2a8ae8524531ee1dcab717 upstream.
    
    If TIF_NOTIFY_RESUME is set, then we need to call resume_user_mode_work()
    for PF_IO_WORKER threads. They never return to usermode, hence never get
    a chance to process any items that are marked by this flag. Most notably
    this includes the final put of files, but also any throttling markers set
    by block cgroups.
    
    Cc: stable@vger.kernel.org # 5.10+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 306c8b49b5666856dfe74d032e2dc5ac17d3784e
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Mon Feb 13 11:42:45 2023 +0100

    irqdomain: Drop bogus fwspec-mapping error handling
    
    commit e3b7ab025e931accdc2c12acf9b75c6197f1c062 upstream.
    
    In case a newly allocated IRQ ever ends up not having any associated
    struct irq_data it would not even be possible to dispose the mapping.
    
    Replace the bogus disposal with a WARN_ON().
    
    This will also be used to fix a shared-interrupt mapping race, hence the
    CC-stable tag.
    
    Fixes: 1e2a7d78499e ("irqdomain: Don't set type when mapping an IRQ")
    Cc: stable@vger.kernel.org      # 4.8
    Tested-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Tested-by: Mark-PK Tsai <mark-pk.tsai@mediatek.com>
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230213104302.17307-4-johan+linaro@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0538aa7e099d494cf523958a84bfbedc5b56d02
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Mon Feb 13 11:42:44 2023 +0100

    irqdomain: Fix disassociation race
    
    commit 3f883c38f5628f46b30bccf090faec054088e262 upstream.
    
    The global irq_domain_mutex is held when mapping interrupts from
    non-hierarchical domains but currently not when disposing them.
    
    This specifically means that updates of the domain mapcount is racy
    (currently only used for statistics in debugfs).
    
    Make sure to hold the global irq_domain_mutex also when disposing
    mappings from non-hierarchical domains.
    
    Fixes: 9dc6be3d4193 ("genirq/irqdomain: Add map counter")
    Cc: stable@vger.kernel.org      # 4.13
    Tested-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Tested-by: Mark-PK Tsai <mark-pk.tsai@mediatek.com>
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230213104302.17307-3-johan+linaro@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b24bd85ae5c86e54f05874f2edd35ffd2496522
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Mon Feb 13 11:42:43 2023 +0100

    irqdomain: Fix association race
    
    commit b06730a571a9ff1ba5bd6b20bf9e50e5a12f1ec6 upstream.
    
    The sanity check for an already mapped virq is done outside of the
    irq_domain_mutex-protected section which means that an (unlikely) racing
    association may not be detected.
    
    Fix this by factoring out the association implementation, which will
    also be used in a follow-on change to fix a shared-interrupt mapping
    race.
    
    Fixes: ddaf144c61da ("irqdomain: Refactor irq_domain_associate_many()")
    Cc: stable@vger.kernel.org      # 3.11
    Tested-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Tested-by: Mark-PK Tsai <mark-pk.tsai@mediatek.com>
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230213104302.17307-2-johan+linaro@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c64acd24aedf723e5f289d35220467d7cfdc637
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Tue Jan 31 18:42:43 2023 +0100

    ima: Align ima_file_mmap() parameters with mmap_file LSM hook
    
    commit 4971c268b85e1c7a734a61622fc0813c86e2362e upstream.
    
    Commit 98de59bfe4b2f ("take calculation of final prot in
    security_mmap_file() into a helper") moved the code to update prot, to be
    the actual protections applied to the kernel, to a new helper called
    mmap_prot().
    
    However, while without the helper ima_file_mmap() was getting the updated
    prot, with the helper ima_file_mmap() gets the original prot, which
    contains the protections requested by the application.
    
    A possible consequence of this change is that, if an application calls
    mmap() with only PROT_READ, and the kernel applies PROT_EXEC in addition,
    that application would have access to executable memory without having this
    event recorded in the IMA measurement list. This situation would occur for
    example if the application, before mmap(), calls the personality() system
    call with READ_IMPLIES_EXEC as the first argument.
    
    Align ima_file_mmap() parameters with those of the mmap_file LSM hook, so
    that IMA can receive both the requested prot and the final prot. Since the
    requested protections are stored in a new variable, and the final
    protections are stored in the existing variable, this effectively restores
    the original behavior of the MMAP_CHECK hook.
    
    Cc: stable@vger.kernel.org
    Fixes: 98de59bfe4b2 ("take calculation of final prot in security_mmap_file() into a helper")
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Reviewed-by: Stefan Berger <stefanb@linux.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1aa96927b242acfd25457b73cf9d175b58ede7a
Author: Jens Axboe <axboe@kernel.dk>
Date:   Thu Feb 16 07:57:32 2023 -0700

    brd: return 0/-error from brd_insert_page()
    
    commit db0ccc44a20b4bb3039c0f6885a1f9c3323c7673 upstream.
    
    It currently returns a page, but callers just check for NULL/page to
    gauge success. Clean this up and return the appropriate error directly
    instead.
    
    Cc: stable@vger.kernel.org # 5.10+
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3326ef84cdbe13a3872a6ac9e428cd60ed243f70
Author: KP Singh <kpsingh@kernel.org>
Date:   Mon Feb 27 07:05:41 2023 +0100

    Documentation/hw-vuln: Document the interaction between IBRS and STIBP
    
    commit e02b50ca442e88122e1302d4dbc1b71a4808c13f upstream.
    
    Explain why STIBP is needed with legacy IBRS as currently implemented
    (KERNEL_IBRS) and why STIBP is not needed when enhanced IBRS is enabled.
    
    Fixes: 7c693f54c873 ("x86/speculation: Add spectre_v2=ibrs option to support Kernel IBRS")
    Signed-off-by: KP Singh <kpsingh@kernel.org>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/20230227060541.1939092-2-kpsingh@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abfed855f05863d292de2d0ebab4656791bab9c8
Author: KP Singh <kpsingh@kernel.org>
Date:   Mon Feb 27 07:05:40 2023 +0100

    x86/speculation: Allow enabling STIBP with legacy IBRS
    
    commit 6921ed9049bc7457f66c1596c5b78aec0dae4a9d upstream.
    
    When plain IBRS is enabled (not enhanced IBRS), the logic in
    spectre_v2_user_select_mitigation() determines that STIBP is not needed.
    
    The IBRS bit implicitly protects against cross-thread branch target
    injection. However, with legacy IBRS, the IBRS bit is cleared on
    returning to userspace for performance reasons which leaves userspace
    threads vulnerable to cross-thread branch target injection against which
    STIBP protects.
    
    Exclude IBRS from the spectre_v2_in_ibrs_mode() check to allow for
    enabling STIBP (through seccomp/prctl() by default or always-on, if
    selected by spectre_v2_user kernel cmdline parameter).
    
      [ bp: Massage. ]
    
    Fixes: 7c693f54c873 ("x86/speculation: Add spectre_v2=ibrs option to support Kernel IBRS")
    Reported-by: José Oliveira <joseloliveira11@gmail.com>
    Reported-by: Rodrigo Branco <rodrigo@kernelhacking.com>
    Signed-off-by: KP Singh <kpsingh@kernel.org>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20230220120127.1975241-1-kpsingh@kernel.org
    Link: https://lore.kernel.org/r/20230221184908.2349578-1-kpsingh@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44a44b57e88f311c1415be1f567c50050913c149
Author: Borislav Petkov (AMD) <bp@alien8.de>
Date:   Thu Jan 26 16:26:17 2023 +0100

    x86/microcode/AMD: Fix mixed steppings support
    
    commit 7ff6edf4fef38ab404ee7861f257e28eaaeed35f upstream.
    
    The AMD side of the loader has always claimed to support mixed
    steppings. But somewhere along the way, it broke that by assuming that
    the cached patch blob is a single one instead of it being one per
    *node*.
    
    So turn it into a per-node one so that each node can stash the blob
    relevant for it.
    
      [ NB: Fixes tag is not really the exactly correct one but it is good
        enough. ]
    
    Fixes: fe055896c040 ("x86/microcode: Merge the early microcode loader")
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Cc: <stable@kernel.org> # 2355370cd941 ("x86/microcode/amd: Remove load_microcode_amd()'s bsp parameter")
    Cc: <stable@kernel.org> # a5ad92134bd1 ("x86/microcode/AMD: Add a @cpu parameter to the reloading functions")
    Link: https://lore.kernel.org/r/20230130161709.11615-4-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87cf9bc78c433c005d769111c007adb58d7697a6
Author: Borislav Petkov (AMD) <bp@alien8.de>
Date:   Thu Jan 26 00:08:03 2023 +0100

    x86/microcode/AMD: Add a @cpu parameter to the reloading functions
    
    commit a5ad92134bd153a9ccdcddf09a95b088f36c3cce upstream.
    
    Will be used in a subsequent change.
    
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/20230130161709.11615-3-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a89768b85f010107b8051285379dc88c002715b
Author: Borislav Petkov (AMD) <bp@alien8.de>
Date:   Tue Jan 17 23:59:24 2023 +0100

    x86/microcode/amd: Remove load_microcode_amd()'s bsp parameter
    
    commit 2355370cd941cbb20882cc3f34460f9f2b8f9a18 upstream.
    
    It is always the BSP.
    
    No functional changes.
    
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/20230130161709.11615-2-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5255fd8dfbd2944aecf69c338aa9e9f2a3e38f00
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Tue Feb 21 08:49:16 2023 +0900

    x86/kprobes: Fix arch_check_optimized_kprobe check within optimized_kprobe range
    
    commit f1c97a1b4ef709e3f066f82e3ba3108c3b133ae6 upstream.
    
    When arch_prepare_optimized_kprobe calculating jump destination address,
    it copies original instructions from jmp-optimized kprobe (see
    __recover_optprobed_insn), and calculated based on length of original
    instruction.
    
    arch_check_optimized_kprobe does not check KPROBE_FLAG_OPTIMATED when
    checking whether jmp-optimized kprobe exists.
    As a result, setup_detour_execution may jump to a range that has been
    overwritten by jump destination address, resulting in an inval opcode error.
    
    For example, assume that register two kprobes whose addresses are
    <func+9> and <func+11> in "func" function.
    The original code of "func" function is as follows:
    
       0xffffffff816cb5e9 <+9>:     push   %r12
       0xffffffff816cb5eb <+11>:    xor    %r12d,%r12d
       0xffffffff816cb5ee <+14>:    test   %rdi,%rdi
       0xffffffff816cb5f1 <+17>:    setne  %r12b
       0xffffffff816cb5f5 <+21>:    push   %rbp
    
    1.Register the kprobe for <func+11>, assume that is kp1, corresponding optimized_kprobe is op1.
      After the optimization, "func" code changes to:
    
       0xffffffff816cc079 <+9>:     push   %r12
       0xffffffff816cc07b <+11>:    jmp    0xffffffffa0210000
       0xffffffff816cc080 <+16>:    incl   0xf(%rcx)
       0xffffffff816cc083 <+19>:    xchg   %eax,%ebp
       0xffffffff816cc084 <+20>:    (bad)
       0xffffffff816cc085 <+21>:    push   %rbp
    
    Now op1->flags == KPROBE_FLAG_OPTIMATED;
    
    2. Register the kprobe for <func+9>, assume that is kp2, corresponding optimized_kprobe is op2.
    
    register_kprobe(kp2)
      register_aggr_kprobe
        alloc_aggr_kprobe
          __prepare_optimized_kprobe
            arch_prepare_optimized_kprobe
              __recover_optprobed_insn    // copy original bytes from kp1->optinsn.copied_insn,
                                          // jump address = <func+14>
    
    3. disable kp1:
    
    disable_kprobe(kp1)
      __disable_kprobe
        ...
        if (p == orig_p || aggr_kprobe_disabled(orig_p)) {
          ret = disarm_kprobe(orig_p, true)       // add op1 in unoptimizing_list, not unoptimized
          orig_p->flags |= KPROBE_FLAG_DISABLED;  // op1->flags ==  KPROBE_FLAG_OPTIMATED | KPROBE_FLAG_DISABLED
        ...
    
    4. unregister kp2
    __unregister_kprobe_top
      ...
      if (!kprobe_disabled(ap) && !kprobes_all_disarmed) {
        optimize_kprobe(op)
          ...
          if (arch_check_optimized_kprobe(op) < 0) // because op1 has KPROBE_FLAG_DISABLED, here not return
            return;
          p->kp.flags |= KPROBE_FLAG_OPTIMIZED;   //  now op2 has KPROBE_FLAG_OPTIMIZED
      }
    
    "func" code now is:
    
       0xffffffff816cc079 <+9>:     int3
       0xffffffff816cc07a <+10>:    push   %rsp
       0xffffffff816cc07b <+11>:    jmp    0xffffffffa0210000
       0xffffffff816cc080 <+16>:    incl   0xf(%rcx)
       0xffffffff816cc083 <+19>:    xchg   %eax,%ebp
       0xffffffff816cc084 <+20>:    (bad)
       0xffffffff816cc085 <+21>:    push   %rbp
    
    5. if call "func", int3 handler call setup_detour_execution:
    
      if (p->flags & KPROBE_FLAG_OPTIMIZED) {
        ...
        regs->ip = (unsigned long)op->optinsn.insn + TMPL_END_IDX;
        ...
      }
    
    The code for the destination address is
    
       0xffffffffa021072c:  push   %r12
       0xffffffffa021072e:  xor    %r12d,%r12d
       0xffffffffa0210731:  jmp    0xffffffff816cb5ee <func+14>
    
    However, <func+14> is not a valid start instruction address. As a result, an error occurs.
    
    Link: https://lore.kernel.org/all/20230216034247.32348-3-yangjihong1@huawei.com/
    
    Fixes: f66c0447cca1 ("kprobes: Set unoptimized flag after unoptimizing code")
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Cc: stable@vger.kernel.org
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c16e4610d5e5e2698f25280121173292c1c3f805
Author: Yang Jihong <yangjihong1@huawei.com>
Date:   Tue Feb 21 08:49:16 2023 +0900

    x86/kprobes: Fix __recover_optprobed_insn check optimizing logic
    
    commit 868a6fc0ca2407622d2833adefe1c4d284766c4c upstream.
    
    Since the following commit:
    
      commit f66c0447cca1 ("kprobes: Set unoptimized flag after unoptimizing code")
    
    modified the update timing of the KPROBE_FLAG_OPTIMIZED, a optimized_kprobe
    may be in the optimizing or unoptimizing state when op.kp->flags
    has KPROBE_FLAG_OPTIMIZED and op->list is not empty.
    
    The __recover_optprobed_insn check logic is incorrect, a kprobe in the
    unoptimizing state may be incorrectly determined as unoptimizing.
    As a result, incorrect instructions are copied.
    
    The optprobe_queued_unopt function needs to be exported for invoking in
    arch directory.
    
    Link: https://lore.kernel.org/all/20230216034247.32348-2-yangjihong1@huawei.com/
    
    Fixes: f66c0447cca1 ("kprobes: Set unoptimized flag after unoptimizing code")
    Cc: stable@vger.kernel.org
    Signed-off-by: Yang Jihong <yangjihong1@huawei.com>
    Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f75ee95196cecd0375c28f56d1bc713368474c63
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Nov 30 23:36:50 2022 +0000

    x86/reboot: Disable SVM, not just VMX, when stopping CPUs
    
    commit a2b07fa7b93321c059af0c6d492cc9a4f1e390aa upstream.
    
    Disable SVM and more importantly force GIF=1 when halting a CPU or
    rebooting the machine.  Similar to VMX, SVM allows software to block
    INITs via CLGI, and thus can be problematic for a crash/reboot.  The
    window for failure is smaller with SVM as INIT is only blocked while
    GIF=0, i.e. between CLGI and STGI, but the window does exist.
    
    Fixes: fba4f472b33a ("x86/reboot: Turn off KVM when halting a CPU")
    Cc: stable@vger.kernel.org
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20221130233650.1404148-5-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 051f991c571bb17d5b37eb7d73741ff0bd8b1b99
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Nov 30 23:36:49 2022 +0000

    x86/reboot: Disable virtualization in an emergency if SVM is supported
    
    commit d81f952aa657b76cea381384bef1fea35c5fd266 upstream.
    
    Disable SVM on all CPUs via NMI shootdown during an emergency reboot.
    Like VMX, SVM can block INIT, e.g. if the emergency reboot is triggered
    between CLGI and STGI, and thus can prevent bringing up other CPUs via
    INIT-SIPI-SIPI.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20221130233650.1404148-4-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ff2cc2f87750507048d372e8d0f4d27ef446d3b
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Nov 30 23:36:47 2022 +0000

    x86/crash: Disable virt in core NMI crash handler to avoid double shootdown
    
    commit 26044aff37a5455b19a91785086914fd33053ef4 upstream.
    
    Disable virtualization in crash_nmi_callback() and rework the
    emergency_vmx_disable_all() path to do an NMI shootdown if and only if a
    shootdown has not already occurred.   NMI crash shootdown fundamentally
    can't support multiple invocations as responding CPUs are deliberately
    put into halt state without unblocking NMIs.  But, the emergency reboot
    path doesn't have any work of its own, it simply cares about disabling
    virtualization, i.e. so long as a shootdown occurred, emergency reboot
    doesn't care who initiated the shootdown, or when.
    
    If "crash_kexec_post_notifiers" is specified on the kernel command line,
    panic() will invoke crash_smp_send_stop() and result in a second call to
    nmi_shootdown_cpus() during native_machine_emergency_restart().
    
    Invoke the callback _before_ disabling virtualization, as the current
    VMCS needs to be cleared before doing VMXOFF.  Note, this results in a
    subtle change in ordering between disabling virtualization and stopping
    Intel PT on the responding CPUs.  While VMX and Intel PT do interact,
    VMXOFF and writes to MSR_IA32_RTIT_CTL do not induce faults between one
    another, which is all that matters when panicking.
    
    Harden nmi_shootdown_cpus() against multiple invocations to try and
    capture any such kernel bugs via a WARN instead of hanging the system
    during a crash/dump, e.g. prior to the recent hardening of
    register_nmi_handler(), re-registering the NMI handler would trigger a
    double list_add() and hang the system if CONFIG_BUG_ON_DATA_CORRUPTION=y.
    
     list_add double add: new=ffffffff82220800, prev=ffffffff8221cfe8, next=ffffffff82220800.
     WARNING: CPU: 2 PID: 1319 at lib/list_debug.c:29 __list_add_valid+0x67/0x70
     Call Trace:
      __register_nmi_handler+0xcf/0x130
      nmi_shootdown_cpus+0x39/0x90
      native_machine_emergency_restart+0x1c9/0x1d0
      panic+0x237/0x29b
    
    Extract the disabling logic to a common helper to deduplicate code, and
    to prepare for doing the shootdown in the emergency reboot path if SVM
    is supported.
    
    Note, prior to commit ed72736183c4 ("x86/reboot: Force all cpus to exit
    VMX root if VMX is supported"), nmi_shootdown_cpus() was subtly protected
    against a second invocation by a cpu_vmx_enabled() check as the kdump
    handler would disable VMX if it ran first.
    
    Fixes: ed72736183c4 ("x86/reboot: Force all cpus to exit VMX root if VMX is supported")
    Cc: stable@vger.kernel.org
    Reported-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Cc: Vitaly Kuznetsov <vkuznets@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Link: https://lore.kernel.org/all/20220427224924.592546-2-gpiccoli@igalia.com
    Tested-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20221130233650.1404148-2-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 537be939a86a37793705f926b6a1882f8bb7ffee
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Nov 30 23:36:48 2022 +0000

    x86/virt: Force GIF=1 prior to disabling SVM (for reboot flows)
    
    commit 6a3236580b0b1accc3976345e723104f74f6f8e6 upstream.
    
    Set GIF=1 prior to disabling SVM to ensure that INIT is recognized if the
    kernel is disabling SVM in an emergency, e.g. if the kernel is about to
    jump into a crash kernel or may reboot without doing a full CPU RESET.
    If GIF is left cleared, the new kernel (or firmware) will be unabled to
    awaken APs.  Eat faults on STGI (due to EFER.SVME=0) as it's possible
    that SVM could be disabled via NMI shootdown between reading EFER.SVME
    and executing STGI.
    
    Link: https://lore.kernel.org/all/cbcb6f35-e5d7-c1c9-4db9-fe5cc4de579a@amd.com
    Cc: stable@vger.kernel.org
    Cc: Andrew Cooper <Andrew.Cooper3@citrix.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20221130233650.1404148-3-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edd7f5bc6f9749a5093921e01fc120c465000f01
Author: Nico Boehr <nrb@linux.ibm.com>
Date:   Fri Jan 27 15:05:32 2023 +0100

    KVM: s390: disable migration mode when dirty tracking is disabled
    
    commit f2d3155e2a6bac44d16f04415a321e8707d895c6 upstream.
    
    Migration mode is a VM attribute which enables tracking of changes in
    storage attributes (PGSTE). It assumes dirty tracking is enabled on all
    memslots to keep a dirty bitmap of pages with changed storage attributes.
    
    When enabling migration mode, we currently check that dirty tracking is
    enabled for all memslots. However, userspace can disable dirty tracking
    without disabling migration mode.
    
    Since migration mode is pointless with dirty tracking disabled, disable
    migration mode whenever userspace disables dirty tracking on any slot.
    
    Also update the documentation to clarify that dirty tracking must be
    enabled when enabling migration mode, which is already enforced by the
    code in kvm_s390_vm_start_migration().
    
    Also highlight in the documentation for KVM_S390_GET_CMMA_BITS that it
    can now fail with -EINVAL when dirty tracking is disabled while
    migration mode is on. Move all the error codes to a table so this stays
    readable.
    
    To disable migration mode, slots_lock should be held, which is taken
    in kvm_set_memory_region() and thus held in
    kvm_arch_prepare_memory_region().
    
    Restructure the prepare code a bit so all the sanity checking is done
    before disabling migration mode. This ensures migration mode isn't
    disabled when some sanity check fails.
    
    Cc: stable@vger.kernel.org
    Fixes: 190df4a212a7 ("KVM: s390: CMMA tracking, ESSA emulation, migration mode")
    Signed-off-by: Nico Boehr <nrb@linux.ibm.com>
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Reviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Link: https://lore.kernel.org/r/20230127140532.230651-2-nrb@linux.ibm.com
    Message-Id: <20230127140532.230651-2-nrb@linux.ibm.com>
    [frankja@linux.ibm.com: fixed commit message typo, moved api.rst error table upwards]
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 018798c6fbefe03b05eff96629fb9b15a1115c3d
Author: Sean Christopherson <seanjc@google.com>
Date:   Sat Jan 7 01:10:20 2023 +0000

    KVM: x86: Inject #GP if WRMSR sets reserved bits in APIC Self-IPI
    
    commit ba5838abb05334e4abfdff1490585c7f365e0424 upstream.
    
    Inject a #GP if the guest attempts to set reserved bits in the x2APIC-only
    Self-IPI register.  Bits 7:0 hold the vector, all other bits are reserved.
    
    Reported-by: Marc Orr <marcorr@google.com>
    Cc: Ben Gardon <bgardon@google.com>
    Cc: Venkatesh Srinivas <venkateshs@chromium.org>
    Cc: stable@vger.kernel.org
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20230107011025.565472-2-seanjc@google.com
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76a9886e1b61ce5592df5ae78a19ed30399ae189
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Dec 19 17:19:24 2022 +0000

    KVM: Destroy target device if coalesced MMIO unregistration fails
    
    commit b1cb1fac22abf102ffeb29dd3eeca208a3869d54 upstream.
    
    Destroy and free the target coalesced MMIO device if unregistering said
    device fails.  As clearly noted in the code, kvm_io_bus_unregister_dev()
    does not destroy the target device.
    
      BUG: memory leak
      unreferenced object 0xffff888112a54880 (size 64):
        comm "syz-executor.2", pid 5258, jiffies 4297861402 (age 14.129s)
        hex dump (first 32 bytes):
          38 c7 67 15 00 c9 ff ff 38 c7 67 15 00 c9 ff ff  8.g.....8.g.....
          e0 c7 e1 83 ff ff ff ff 00 30 67 15 00 c9 ff ff  .........0g.....
        backtrace:
          [<0000000006995a8a>] kmalloc include/linux/slab.h:556 [inline]
          [<0000000006995a8a>] kzalloc include/linux/slab.h:690 [inline]
          [<0000000006995a8a>] kvm_vm_ioctl_register_coalesced_mmio+0x8e/0x3d0 arch/x86/kvm/../../../virt/kvm/coalesced_mmio.c:150
          [<00000000022550c2>] kvm_vm_ioctl+0x47d/0x1600 arch/x86/kvm/../../../virt/kvm/kvm_main.c:3323
          [<000000008a75102f>] vfs_ioctl fs/ioctl.c:46 [inline]
          [<000000008a75102f>] file_ioctl fs/ioctl.c:509 [inline]
          [<000000008a75102f>] do_vfs_ioctl+0xbab/0x1160 fs/ioctl.c:696
          [<0000000080e3f669>] ksys_ioctl+0x76/0xa0 fs/ioctl.c:713
          [<0000000059ef4888>] __do_sys_ioctl fs/ioctl.c:720 [inline]
          [<0000000059ef4888>] __se_sys_ioctl fs/ioctl.c:718 [inline]
          [<0000000059ef4888>] __x64_sys_ioctl+0x6f/0xb0 fs/ioctl.c:718
          [<000000006444fa05>] do_syscall_64+0x9f/0x4e0 arch/x86/entry/common.c:290
          [<000000009a4ed50b>] entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
      BUG: leak checking failed
    
    Fixes: 5d3c4c79384a ("KVM: Stop looking for coalesced MMIO zones if the bus is destroyed")
    Cc: stable@vger.kernel.org
    Reported-by: 柳菁峰 <liujingfeng@qianxin.com>
    Reported-by: Michal Luczaj <mhal@rbox.co>
    Link: https://lore.kernel.org/r/20221219171924.67989-1-seanjc@google.com
    Link: https://lore.kernel.org/all/20230118220003.1239032-1-mhal@rbox.co
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bacfce056ea694ad023ce577950abde515de0599
Author: Jan Kara <jack@suse.cz>
Date:   Mon Jan 23 14:18:47 2023 +0100

    udf: Fix file corruption when appending just after end of preallocated extent
    
    commit 36ec52ea038b18a53e198116ef7d7e70c87db046 upstream.
    
    When we append new block just after the end of preallocated extent, the
    code in inode_getblk() wrongly determined we're going to use the
    preallocated extent which resulted in adding block into a wrong logical
    offset in the file. Sequence like this manifests it:
    
    xfs_io -f -c "pwrite 0x2cacf 0xd122" -c "truncate 0x2dd6f" \
      -c "pwrite 0x27fd9 0x69a9" -c "pwrite 0x32981 0x7244" <file>
    
    The code that determined the use of preallocated extent is actually
    stale because udf_do_extend_file() does not create preallocation anymore
    so after calling that function we are sure there's no usable
    preallocation. Just remove the faulty condition.
    
    CC: stable@vger.kernel.org
    Fixes: 16d055656814 ("udf: Discard preallocation before extending file with a hole")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a44ec34b90440ada190924f5908b97026504fdcd
Author: Jan Kara <jack@suse.cz>
Date:   Tue Jan 3 10:03:35 2023 +0100

    udf: Detect system inodes linked into directory hierarchy
    
    commit 85a37983ec69cc9fcd188bc37c4de15ee326355a upstream.
    
    When UDF filesystem is corrupted, hidden system inodes can be linked
    into directory hierarchy which is an avenue for further serious
    corruption of the filesystem and kernel confusion as noticed by syzbot
    fuzzed images. Refuse to access system inodes linked into directory
    hierarchy and vice versa.
    
    CC: stable@vger.kernel.org
    Reported-by: syzbot+38695a20b8addcbc1084@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63478c3ce24bba1fb4736102bfb1aa986e215cb0
Author: Jan Kara <jack@suse.cz>
Date:   Tue Jan 3 09:56:56 2023 +0100

    udf: Preserve link count of system files
    
    commit fc8033a34a3ca7d23353e645e6dde5d364ac5f12 upstream.
    
    System files in UDF filesystem have link count 0. To not confuse VFS we
    fudge the link count to be 1 when reading such inodes however we forget
    to restore the link count of 0 when writing such inodes. Fix that.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb2133900cac2d2f78befd6be41666cf1a2315d9
Author: Jan Kara <jack@suse.cz>
Date:   Mon Jan 2 20:14:47 2023 +0100

    udf: Do not update file length for failed writes to inline files
    
    commit 256fe4162f8b5a1625b8603ca5f7ff79725bfb47 upstream.
    
    When write to inline file fails (or happens only partly), we still
    updated length of inline data as if the whole write succeeded. Fix the
    update of length of inline data to happen only if the write succeeds.
    
    Reported-by: syzbot+0937935b993956ba28ab@syzkaller.appspotmail.com
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 965982feb333aefa9256c0fe188b5f1b958aef63
Author: Jan Kara <jack@suse.cz>
Date:   Fri Dec 16 12:37:51 2022 +0100

    udf: Do not bother merging very long extents
    
    commit 53cafe1d6d8ef9f93318e5bfccc0d24f27d41ced upstream.
    
    When merging very long extents we try to push as much length as possible
    to the first extent. However this is unnecessarily complicated and not
    really worth the trouble. Furthermore there was a bug in the logic
    resulting in corrupting extents in the file as syzbot reproducer shows.
    So just don't bother with the merging of extents that are too long
    together.
    
    CC: stable@vger.kernel.org
    Reported-by: syzbot+60f291a24acecb3c2bd5@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c792a59e078cb9675a23a9ce633c475957d1a18
Author: Jan Kara <jack@suse.cz>
Date:   Thu Dec 15 14:24:03 2022 +0100

    udf: Truncate added extents on failed expansion
    
    commit 70bfb3a8d661d4fdc742afc061b88a7f3fc9f500 upstream.
    
    When a file expansion failed because we didn't have enough space for
    indirect extents make sure we truncate extents created so far so that we
    don't leave extents beyond EOF.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bf9caa58526eef67411733f4f26e6c13cfb94a4
Author: Heming Zhao via Ocfs2-devel <ocfs2-devel@oss.oracle.com>
Date:   Mon Feb 20 13:05:26 2023 +0800

    ocfs2: fix non-auto defrag path not working issue
    
    commit 236b9254f8d1edc273ad88b420aa85fbd84f492d upstream.
    
    This fixes three issues on move extents ioctl without auto defrag:
    
    a) In ocfs2_find_victim_alloc_group(), we have to convert bits to block
       first in case of global bitmap.
    
    b) In ocfs2_probe_alloc_group(), when finding enough bits in block
       group bitmap, we have to back off move_len to start pos as well,
       otherwise it may corrupt filesystem.
    
    c) In ocfs2_ioctl_move_extents(), set me_threshold both for non-auto
       and auto defrag paths.  Otherwise it will set move_max_hop to 0 and
       finally cause unexpectedly ENOSPC error.
    
    Currently there are no tools triggering the above issues since
    defragfs.ocfs2 enables auto defrag by default.  Tested with manually
    changing defragfs.ocfs2 to run non auto defrag path.
    
    Link: https://lkml.kernel.org/r/20230220050526.22020-1-heming.zhao@suse.com
    Signed-off-by: Heming Zhao <heming.zhao@suse.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c559b3ba8e0b9e3c4bb08159a28ccadc698410f
Author: Heming Zhao via Ocfs2-devel <ocfs2-devel@oss.oracle.com>
Date:   Fri Feb 17 08:37:17 2023 +0800

    ocfs2: fix defrag path triggering jbd2 ASSERT
    
    commit 60eed1e3d45045623e46944ebc7c42c30a4350f0 upstream.
    
    code path:
    
    ocfs2_ioctl_move_extents
     ocfs2_move_extents
      ocfs2_defrag_extent
       __ocfs2_move_extent
        + ocfs2_journal_access_di
        + ocfs2_split_extent  //sub-paths call jbd2_journal_restart
        + ocfs2_journal_dirty //crash by jbs2 ASSERT
    
    crash stacks:
    
    PID: 11297  TASK: ffff974a676dcd00  CPU: 67  COMMAND: "defragfs.ocfs2"
     #0 [ffffb25d8dad3900] machine_kexec at ffffffff8386fe01
     #1 [ffffb25d8dad3958] __crash_kexec at ffffffff8395959d
     #2 [ffffb25d8dad3a20] crash_kexec at ffffffff8395a45d
     #3 [ffffb25d8dad3a38] oops_end at ffffffff83836d3f
     #4 [ffffb25d8dad3a58] do_trap at ffffffff83833205
     #5 [ffffb25d8dad3aa0] do_invalid_op at ffffffff83833aa6
     #6 [ffffb25d8dad3ac0] invalid_op at ffffffff84200d18
        [exception RIP: jbd2_journal_dirty_metadata+0x2ba]
        RIP: ffffffffc09ca54a  RSP: ffffb25d8dad3b70  RFLAGS: 00010207
        RAX: 0000000000000000  RBX: ffff9706eedc5248  RCX: 0000000000000000
        RDX: 0000000000000001  RSI: ffff97337029ea28  RDI: ffff9706eedc5250
        RBP: ffff9703c3520200   R8: 000000000f46b0b2   R9: 0000000000000000
        R10: 0000000000000001  R11: 00000001000000fe  R12: ffff97337029ea28
        R13: 0000000000000000  R14: ffff9703de59bf60  R15: ffff9706eedc5250
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
     #7 [ffffb25d8dad3ba8] ocfs2_journal_dirty at ffffffffc137fb95 [ocfs2]
     #8 [ffffb25d8dad3be8] __ocfs2_move_extent at ffffffffc139a950 [ocfs2]
     #9 [ffffb25d8dad3c80] ocfs2_defrag_extent at ffffffffc139b2d2 [ocfs2]
    
    Analysis
    
    This bug has the same root cause of 'commit 7f27ec978b0e ("ocfs2: call
    ocfs2_journal_access_di() before ocfs2_journal_dirty() in
    ocfs2_write_end_nolock()")'.  For this bug, jbd2_journal_restart() is
    called by ocfs2_split_extent() during defragmenting.
    
    How to fix
    
    For ocfs2_split_extent() can handle journal operations totally by itself.
    Caller doesn't need to call journal access/dirty pair, and caller only
    needs to call journal start/stop pair.  The fix method is to remove
    journal access/dirty from __ocfs2_move_extent().
    
    The discussion for this patch:
    https://oss.oracle.com/pipermail/ocfs2-devel/2023-February/000647.html
    
    Link: https://lkml.kernel.org/r/20230217003717.32469-1-heming.zhao@suse.com
    Signed-off-by: Heming Zhao <heming.zhao@suse.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9f20138b5fb1a70e3ff5b50606f65e4461eda9e
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Feb 2 17:02:39 2023 -0800

    f2fs: fix cgroup writeback accounting with fs-layer encryption
    
    commit 844545c51a5b2a524b22a2fe9d0b353b827d24b4 upstream.
    
    When writing a page from an encrypted file that is using
    filesystem-layer encryption (not inline encryption), f2fs encrypts the
    pagecache page into a bounce page, then writes the bounce page.
    
    It also passes the bounce page to wbc_account_cgroup_owner().  That's
    incorrect, because the bounce page is a newly allocated temporary page
    that doesn't have the memory cgroup of the original pagecache page.
    This makes wbc_account_cgroup_owner() not account the I/O to the owner
    of the pagecache page as it should.
    
    Fix this by always passing the pagecache page to
    wbc_account_cgroup_owner().
    
    Fixes: 578c647879f7 ("f2fs: implement cgroup writeback support")
    Cc: stable@vger.kernel.org
    Reported-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00b5587326625d0fddb2a5f5a3d4acd950102ace
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Jan 22 23:04:14 2023 -0800

    f2fs: fix information leak in f2fs_move_inline_dirents()
    
    commit 9a5571cff4ffcfc24847df9fd545cc5799ac0ee5 upstream.
    
    When converting an inline directory to a regular one, f2fs is leaking
    uninitialized memory to disk because it doesn't initialize the entire
    directory block.  Fix this by zero-initializing the block.
    
    This bug was introduced by commit 4ec17d688d74 ("f2fs: avoid unneeded
    initializing when converting inline dentry"), which didn't consider the
    security implications of leaking uninitialized memory to disk.
    
    This was found by running xfstest generic/435 on a KMSAN-enabled kernel.
    
    Fixes: 4ec17d688d74 ("f2fs: avoid unneeded initializing when converting inline dentry")
    Cc: <stable@vger.kernel.org> # v4.3+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9dbc35ecb9431d1396f550c4a471486e3133b68
Author: Yuezhang Mo <Yuezhang.Mo@sony.com>
Date:   Wed Jan 4 14:37:47 2023 +0800

    exfat: fix inode->i_blocks for non-512 byte sector size device
    
    commit 39c1ce8eafc0ff64fb9e28536ccc7df6a8e2999d upstream.
    
    inode->i_blocks is not real number of blocks, but 512 byte ones.
    
    Fixes: 98d917047e8b ("exfat: add file operations")
    Cc: stable@vger.kernel.org # v5.7+
    Reported-by: Wang Yugui <wangyugui@e16-tech.com>
    Tested-by: Wang Yugui <wangyugui@e16-tech.com>
    Signed-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>
    Reviewed-by: Andy Wu <Andy.Wu@sony.com>
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4017209e08d23ab6f52f51caa7a81df23a7fd8f8
Author: Sungjong Seo <sj1557.seo@samsung.com>
Date:   Thu Dec 29 20:52:38 2022 +0900

    exfat: redefine DIR_DELETED as the bad cluster number
    
    commit bdaadfd343e3cba49ad0b009ff4b148dad0fa404 upstream.
    
    When a file or a directory is deleted, the hint for the cluster of
    its parent directory in its in-memory inode is set as DIR_DELETED.
    Therefore, DIR_DELETED must be one of invalid cluster numbers. According
    to the exFAT specification, a volume can have at most 2^32-11 clusters.
    However, DIR_DELETED is wrongly defined as 0xFFFF0321, which could be
    a valid cluster number. To fix it, let's redefine DIR_DELETED as
    0xFFFFFFF7, the bad cluster number.
    
    Fixes: 1acf1a564b60 ("exfat: add in-memory and on-disk structures and headers")
    Cc: stable@vger.kernel.org # v5.7+
    Reported-by: Yuezhang Mo <Yuezhang.Mo@sony.com>
    Signed-off-by: Sungjong Seo <sj1557.seo@samsung.com>
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2d1997074ce3207cd779c26bc8b32b077d93085
Author: Yuezhang Mo <Yuezhang.Mo@sony.com>
Date:   Thu Sep 22 14:43:47 2022 +0800

    exfat: fix unexpected EOF while reading dir
    
    commit 6cb5d1a16a51d080fbc1649a5144cbc5ca7d6f88 upstream.
    
    If the position is not aligned with the dentry size, the return
    value of readdir() will be NULL and errno is 0, which means the
    end of the directory stream is reached.
    
    If the position is aligned with dentry size, but there is no file
    or directory at the position, exfat_readdir() will continue to
    get dentry from the next dentry. So the dentry gotten by readdir()
    may not be at the position.
    
    After this commit, if the position is not aligned with the dentry
    size, round the position up to the dentry size and continue to get
    the dentry.
    
    Fixes: ca06197382bd ("exfat: add directory operations")
    Cc: stable@vger.kernel.org # v5.7+
    Reported-by: Wang Yugui <wangyugui@e16-tech.com>
    Signed-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>
    Reviewed-by: Andy Wu <Andy.Wu@sony.com>
    Reviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>
    Reviewed-by: Sungjong Seo <sj1557.seo@samsung.com>
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34b05883414cc97e4c592988bb45225aede4ff63
Author: Yuezhang Mo <Yuezhang.Mo@sony.com>
Date:   Thu Oct 20 14:27:37 2022 +0800

    exfat: fix reporting fs error when reading dir beyond EOF
    
    commit 706fdcac002316893434d753be8cfb549fe1d40d upstream.
    
    Since seekdir() does not check whether the position is valid, the
    position may exceed the size of the directory. We found that for
    a directory with discontinuous clusters, if the position exceeds
    the size of the directory and the excess size is greater than or
    equal to the cluster size, exfat_readdir() will return -EIO,
    causing a file system error and making the file system unavailable.
    
    Reproduce this bug by:
    
    seekdir(dir, dir_size + cluster_size);
    dirent = readdir(dir);
    
    The following log will be printed if mount with 'errors=remount-ro'.
    
    [11166.712896] exFAT-fs (sdb1): error, invalid access to FAT (entry 0xffffffff)
    [11166.712905] exFAT-fs (sdb1): Filesystem has been set read-only
    
    Fixes: 1e5654de0f51 ("exfat: handle wrong stream entry size in exfat_readdir()")
    Cc: stable@vger.kernel.org # v5.7+
    Signed-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>
    Reviewed-by: Andy Wu <Andy.Wu@sony.com>
    Reviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>
    Reviewed-by: Sungjong Seo <sj1557.seo@samsung.com>
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef7d71d7bd57b8b7fe514e459927696c1c6d1047
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Sun Feb 26 20:49:47 2023 +0800

    fs: hfsplus: fix UAF issue in hfsplus_put_super
    
    commit 07db5e247ab5858439b14dd7cc1fe538b9efcf32 upstream.
    
    The current hfsplus_put_super first calls hfs_btree_close on
    sbi->ext_tree, then invokes iput on sbi->hidden_dir, resulting in an
    use-after-free issue in hfsplus_release_folio.
    
    As shown in hfsplus_fill_super, the error handling code also calls iput
    before hfs_btree_close.
    
    To fix this error, we move all iput calls before hfsplus_btree_close.
    
    Note that this patch is tested on Syzbot.
    
    Link: https://lkml.kernel.org/r/20230226124948.3175736-1-mudongliangabcd@gmail.com
    Reported-by: syzbot+57e3e98f7e3b80f64d56@syzkaller.appspotmail.com
    Tested-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Cc: Bart Van Assche <bvanassche@acm.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Muchun Song <songmuchun@bytedance.com>
    Cc: Roman Gushchin <roman.gushchin@linux.dev>
    Cc: "Theodore Ts'o" <tytso@mit.edu>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc9f78b6d254427a06e568f2887b1011ef3143ef
Author: Liu Shixin <liushixin2@huawei.com>
Date:   Mon Dec 12 10:16:27 2022 +0800

    hfs: fix missing hfs_bnode_get() in __hfs_bnode_create
    
    commit a9dc087fd3c484fd1ed18c5efb290efaaf44ce03 upstream.
    
    Syzbot found a kernel BUG in hfs_bnode_put():
    
     kernel BUG at fs/hfs/bnode.c:466!
     invalid opcode: 0000 [#1] PREEMPT SMP KASAN
     CPU: 0 PID: 3634 Comm: kworker/u4:5 Not tainted 6.1.0-rc7-syzkaller-00190-g97ee9d1c1696 #0
     Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
     Workqueue: writeback wb_workfn (flush-7:0)
     RIP: 0010:hfs_bnode_put+0x46f/0x480 fs/hfs/bnode.c:466
     Code: 8a 80 ff e9 73 fe ff ff 89 d9 80 e1 07 80 c1 03 38 c1 0f 8c a0 fe ff ff 48 89 df e8 db 8a 80 ff e9 93 fe ff ff e8 a1 68 2c ff <0f> 0b e8 9a 68 2c ff 0f 0b 0f 1f 84 00 00 00 00 00 55 41 57 41 56
     RSP: 0018:ffffc90003b4f258 EFLAGS: 00010293
     RAX: ffffffff825e318f RBX: 0000000000000000 RCX: ffff8880739dd7c0
     RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
     RBP: ffffc90003b4f430 R08: ffffffff825e2d9b R09: ffffed10045157d1
     R10: ffffed10045157d1 R11: 1ffff110045157d0 R12: ffff8880228abe80
     R13: ffff88807016c000 R14: dffffc0000000000 R15: ffff8880228abe00
     FS:  0000000000000000(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007fa6ebe88718 CR3: 000000001e93d000 CR4: 00000000003506f0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      <TASK>
      hfs_write_inode+0x1bc/0xb40
      write_inode fs/fs-writeback.c:1440 [inline]
      __writeback_single_inode+0x4d6/0x670 fs/fs-writeback.c:1652
      writeback_sb_inodes+0xb3b/0x18f0 fs/fs-writeback.c:1878
      __writeback_inodes_wb+0x125/0x420 fs/fs-writeback.c:1949
      wb_writeback+0x440/0x7b0 fs/fs-writeback.c:2054
      wb_check_start_all fs/fs-writeback.c:2176 [inline]
      wb_do_writeback fs/fs-writeback.c:2202 [inline]
      wb_workfn+0x827/0xef0 fs/fs-writeback.c:2235
      process_one_work+0x877/0xdb0 kernel/workqueue.c:2289
      worker_thread+0xb14/0x1330 kernel/workqueue.c:2436
      kthread+0x266/0x300 kernel/kthread.c:376
      ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306
      </TASK>
    
    The BUG_ON() is triggered at here:
    
    /* Dispose of resources used by a node */
    void hfs_bnode_put(struct hfs_bnode *node)
    {
            if (node) {
                    <skipped>
                    BUG_ON(!atomic_read(&node->refcnt)); <- we have issue here!!!!
                    <skipped>
            }
    }
    
    By tracing the refcnt, I found the node is created by hfs_bmap_alloc()
    with refcnt 1.  Then the node is used by hfs_btree_write().  There is a
    missing of hfs_bnode_get() after find the node.  The issue happened in
    following path:
    
    <alloc>
     hfs_bmap_alloc
       hfs_bnode_find
         __hfs_bnode_create   <- allocate a new node with refcnt 1.
       hfs_bnode_put          <- decrease the refcnt
    
    <write>
     hfs_btree_write
       hfs_bnode_find
         __hfs_bnode_create
           hfs_bnode_findhash <- find the node without refcnt increased.
       hfs_bnode_put          <- trigger the BUG_ON() since refcnt is 0.
    
    Link: https://lkml.kernel.org/r/20221212021627.3766829-1-liushixin2@huawei.com
    Reported-by: syzbot+5b04b49a7ec7226c7426@syzkaller.appspotmail.com
    Signed-off-by: Liu Shixin <liushixin2@huawei.com>
    Cc: Fabio M. De Francesco <fmdefrancesco@gmail.com>
    Cc: Viacheslav Dubeyko <slava@dubeyko.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 300b6404e60161355bca54552ae38b49c3bbf63d
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Wed Jan 25 10:45:05 2023 +0100

    ARM: dts: exynos: correct HDMI phy compatible in Exynos4
    
    commit af1c89ddb74f170eccd5a57001d7317560b638ea upstream.
    
    The HDMI phy compatible was missing vendor prefix.
    
    Fixes: ed80d4cab772 ("ARM: dts: add hdmi related nodes for exynos4 SoCs")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20230125094513.155063-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69493675fdfb81192981bf106533c248cc980752
Author: Volker Lendecke <vl@samba.org>
Date:   Wed Jan 11 12:37:58 2023 +0100

    cifs: Fix uninitialized memory read in smb3_qfs_tcon()
    
    commit d447e794a37288ec7a080aa1b044a8d9deebbab7 upstream.
    
    oparms was not fully initialized
    
    Signed-off-by: Volker Lendecke <vl@samba.org>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Cc: stable@vger.kernel.org
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59102ded74805820e5114ead1f7bb5a84bc029e2
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Mar 1 17:58:06 2023 +0100

    s390/kprobes: fix current_kprobe never cleared after kprobes reenter
    
    commit cd57953936f2213dfaccce10d20f396956222c7d upstream.
    
    Recent test_kprobe_missed kprobes kunit test uncovers the following
    problem. Once kprobe is triggered from another kprobe (kprobe reenter),
    all future kprobes on this cpu are considered as kprobe reenter, thus
    pre_handler and post_handler are not being called and kprobes are counted
    as "missed".
    
    Commit b9599798f953 ("[S390] kprobes: activation and deactivation")
    introduced a simpler scheme for kprobes (de)activation and status
    tracking by using push_kprobe/pop_kprobe, which supposed to work for
    both initial kprobe entry as well as kprobe reentry and helps to avoid
    handling those two cases differently. The problem is that a sequence of
    calls in case of kprobes reenter:
    push_kprobe() <- NULL (current_kprobe)
    push_kprobe() <- kprobe1 (current_kprobe)
    pop_kprobe() -> kprobe1 (current_kprobe)
    pop_kprobe() -> kprobe1 (current_kprobe)
    leaves "kprobe1" as "current_kprobe" on this cpu, instead of setting it
    to NULL. In fact push_kprobe/pop_kprobe can only store a single state
    (there is just one prev_kprobe in kprobe_ctlblk). Which is a hack but
    sufficient, there is no need to have another prev_kprobe just to store
    NULL. To make a simple and backportable fix simply reset "prev_kprobe"
    when kprobe is poped from this "stack". No need to worry about
    "kprobe_status" in this case, because its value is only checked when
    current_kprobe != NULL.
    
    Cc: stable@vger.kernel.org
    Fixes: b9599798f953 ("[S390] kprobes: activation and deactivation")
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8724dc0ce7642081b399ad5c1009cc4964d8ac7
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Mar 1 02:23:08 2023 +0100

    s390/kprobes: fix irq mask clobbering on kprobe reenter from post_handler
    
    commit 42e19e6f04984088b6f9f0507c4c89a8152d9730 upstream.
    
    Recent test_kprobe_missed kprobes kunit test uncovers the following error
    (reported when CONFIG_DEBUG_ATOMIC_SLEEP is enabled):
    
    BUG: sleeping function called from invalid context at kernel/locking/mutex.c:580
    in_atomic(): 0, irqs_disabled(): 1, non_block: 0, pid: 662, name: kunit_try_catch
    preempt_count: 0, expected: 0
    RCU nest depth: 0, expected: 0
    no locks held by kunit_try_catch/662.
    irq event stamp: 280
    hardirqs last  enabled at (279): [<00000003e60a3d42>] __do_pgm_check+0x17a/0x1c0
    hardirqs last disabled at (280): [<00000003e3bd774a>] kprobe_exceptions_notify+0x27a/0x318
    softirqs last  enabled at (0): [<00000003e3c5c890>] copy_process+0x14a8/0x4c80
    softirqs last disabled at (0): [<0000000000000000>] 0x0
    CPU: 46 PID: 662 Comm: kunit_try_catch Tainted: G                 N 6.2.0-173644-g44c18d77f0c0 #2
    Hardware name: IBM 3931 A01 704 (LPAR)
    Call Trace:
     [<00000003e60a3a00>] dump_stack_lvl+0x120/0x198
     [<00000003e3d02e82>] __might_resched+0x60a/0x668
     [<00000003e60b9908>] __mutex_lock+0xc0/0x14e0
     [<00000003e60bad5a>] mutex_lock_nested+0x32/0x40
     [<00000003e3f7b460>] unregister_kprobe+0x30/0xd8
     [<00000003e51b2602>] test_kprobe_missed+0xf2/0x268
     [<00000003e51b5406>] kunit_try_run_case+0x10e/0x290
     [<00000003e51b7dfa>] kunit_generic_run_threadfn_adapter+0x62/0xb8
     [<00000003e3ce30f8>] kthread+0x2d0/0x398
     [<00000003e3b96afa>] __ret_from_fork+0x8a/0xe8
     [<00000003e60ccada>] ret_from_fork+0xa/0x40
    
    The reason for this error report is that kprobes handling code failed
    to restore irqs.
    
    The problem is that when kprobe is triggered from another kprobe
    post_handler current sequence of enable_singlestep / disable_singlestep
    is the following:
    enable_singlestep  <- original kprobe (saves kprobe_saved_imask)
    enable_singlestep  <- kprobe triggered from post_handler (clobbers kprobe_saved_imask)
    disable_singlestep <- kprobe triggered from post_handler (restores kprobe_saved_imask)
    disable_singlestep <- original kprobe (restores wrong clobbered kprobe_saved_imask)
    
    There is just one kprobe_ctlblk per cpu and both calls saves and
    loads irq mask to kprobe_saved_imask. To fix the problem simply move
    resume_execution (which calls disable_singlestep) before calling
    post_handler. This also fixes the problem that post_handler is called
    with pt_regs which were not yet adjusted after single-stepping.
    
    Cc: stable@vger.kernel.org
    Fixes: 4ba069b802c2 ("[S390] add kprobes support.")
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d43abcf91c5ed55443d26cd8c7721bd8409a7aff
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Mon Jan 23 22:50:32 2023 +0100

    s390: discard .interp section
    
    commit e9c9cb90e76ffaabcc7ca8f275d9e82195fd6367 upstream.
    
    When debugging vmlinux with QEMU + GDB, the following GDB error may
    occur:
    
        (gdb) c
        Continuing.
        Warning:
        Cannot insert breakpoint -1.
        Cannot access memory at address 0xffffffffffff95c0
    
        Command aborted.
        (gdb)
    
    The reason is that, when .interp section is present, GDB tries to
    locate the file specified in it in memory and put a number of
    breakpoints there (see enable_break() function in gdb/solib-svr4.c).
    Sometimes GDB finds a bogus location that matches its heuristics,
    fails to set a breakpoint and stops. This makes further debugging
    impossible.
    
    The .interp section contains misleading information anyway (vmlinux
    does not need ld.so), so fix by discarding it.
    
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cf48403c46ae4f4ac74a439ca2ff2ddb5eab8c5
Author: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
Date:   Mon Feb 27 20:03:00 2023 +0100

    s390/extmem: return correct segment type in __segment_load()
    
    commit 8c42dd78df148c90e48efff204cce38743906a79 upstream.
    
    Commit f05f62d04271f ("s390/vmem: get rid of memory segment list")
    reshuffled the call to vmem_add_mapping() in __segment_load(), which now
    overwrites rc after it was set to contain the segment type code.
    
    As result, __segment_load() will now always return 0 on success, which
    corresponds to the segment type code SEG_TYPE_SW, i.e. a writeable
    segment. This results in a kernel crash when loading a read-only segment
    as dcssblk block device, and trying to write to it.
    
    Instead of reshuffling code again, make sure to return the segment type
    on success, and also describe this rather delicate and unexpected logic
    in the function comment. Also initialize new segtype variable with
    invalid value, to prevent possible future confusion.
    
    Fixes: f05f62d04271 ("s390/vmem: get rid of memory segment list")
    Cc: <stable@vger.kernel.org> # 5.9+
    Signed-off-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be2dad7bc932216f9db755e92cbfda46b0dfa513
Author: Corey Minyard <cminyard@mvista.com>
Date:   Wed Jan 25 10:13:13 2023 -0600

    ipmi_ssif: Rename idle state and check
    
    commit 8230831c43a328c2be6d28c65d3f77e14c59986b upstream.
    
    Rename the SSIF_IDLE() to IS_SSIF_IDLE(), since that is more clear, and
    rename SSIF_NORMAL to SSIF_IDLE, since that's more accurate.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66b40f8756d2ef55c60a20831fa5ce28ffdb6f03
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Thu Feb 2 16:54:27 2023 +0100

    rtc: pm8xxx: fix set-alarm race
    
    commit c88db0eff9722fc2b6c4d172a50471d20e08ecc6 upstream.
    
    Make sure to disable the alarm before updating the four alarm time
    registers to avoid spurious alarms during the update.
    
    Note that the disable needs to be done outside of the ctrl_reg_lock
    section to prevent a racing alarm interrupt from disabling the newly set
    alarm when the lock is released.
    
    Fixes: 9a9a54ad7aa2 ("drivers/rtc: add support for Qualcomm PMIC8xxx RTC")
    Cc: stable@vger.kernel.org      # 3.1
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Reviewed-by: David Collins <quic_collinsd@quicinc.com>
    Link: https://lore.kernel.org/r/20230202155448.6715-2-johan+linaro@kernel.org
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5b643645a9af861b31356374446dc34a8129a4e
Author: Alper Nebi Yasak <alpernebiyasak@gmail.com>
Date:   Sun Jan 22 22:04:31 2023 +0300

    firmware: coreboot: framebuffer: Ignore reserved pixel color bits
    
    commit e6acaf25cba14661211bb72181c35dd13b24f5b3 upstream.
    
    The coreboot framebuffer doesn't support transparency, its 'reserved'
    bit field is merely padding for byte/word alignment of pixel colors [1].
    When trying to match the framebuffer to a simplefb format, the kernel
    driver unnecessarily requires the format's transparency bit field to
    exactly match this padding, even if the former is zero-width.
    
    Due to a coreboot bug [2] (fixed upstream), some boards misreport the
    reserved field's size as equal to its position (0x18 for both on a
    'Lick' Chromebook), and the driver fails to probe where it would have
    otherwise worked fine with e.g. the a8r8g8b8 or x8r8g8b8 formats.
    
    Remove the transparency comparison with reserved bits. When the
    bits-per-pixel and other color components match, transparency will
    already be in a subset of the reserved field. Not forcing it to match
    reserved bits allows the driver to work on the boards which misreport
    the reserved field. It also enables using simplefb formats that don't
    have transparency bits, although this doesn't currently happen due to
    format support and ordering in linux/platform_data/simplefb.h.
    
    [1] https://review.coreboot.org/plugins/gitiles/coreboot/+/4.19/src/commonlib/include/commonlib/coreboot_tables.h#255
    [2] https://review.coreboot.org/plugins/gitiles/coreboot/+/4.13/src/drivers/intel/fsp2_0/graphics.c#82
    
    Signed-off-by: Alper Nebi Yasak <alpernebiyasak@gmail.com>
    Link: https://lore.kernel.org/r/20230122190433.195941-1-alpernebiyasak@gmail.com
    Cc: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf990eebeaa7585326ee7b02ea589480deda1181
Author: Jun ASAKA <JunASAKA@zzy040330.moe>
Date:   Sat Dec 17 11:06:59 2022 +0800

    wifi: rtl8xxxu: fixing transmisison failure for rtl8192eu
    
    commit c6015bf3ff1ffb3caa27eb913797438a0fc634a0 upstream.
    
    Fixing transmission failure which results in
    "authentication with ... timed out". This can be
    fixed by disable the REG_TXPAUSE.
    
    Signed-off-by: Jun ASAKA <JunASAKA@zzy040330.moe>
    Reviewed-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221217030659.12577-1-JunASAKA@zzy040330.moe
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 759f6a72bc5aaa44634adbac26e14fac709a3c8b
Author: Jeff Layton <jlayton@kernel.org>
Date:   Tue Jan 17 14:38:30 2023 -0500

    nfsd: zero out pointers after putting nfsd_files on COPY setup error
    
    [ Upstream commit 1f0001d43d0c0ac2a19a34a914f6595ad97cbc1d ]
    
    At first, I thought this might be a source of nfsd_file overputs, but
    the current callers seem to avoid an extra put when nfsd4_verify_copy
    returns an error.
    
    Still, it's "bad form" to leave the pointers filled out when we don't
    have a reference to them anymore, and that might lead to bugs later.
    Zero them out as a defensive coding measure.
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b8047b2100081e42b7c2a513db9bbeac9c25958
Author: Mike Snitzer <snitzer@kernel.org>
Date:   Thu Feb 16 15:31:08 2023 -0500

    dm cache: add cond_resched() to various workqueue loops
    
    [ Upstream commit 76227f6dc805e9e960128bcc6276647361e0827c ]
    
    Otherwise on resource constrained systems these workqueues may be too
    greedy.
    
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52206dd1c77f04093be0dce7c9a6d58634ae6a53
Author: Mike Snitzer <snitzer@kernel.org>
Date:   Thu Feb 16 15:29:44 2023 -0500

    dm thin: add cond_resched() to various workqueue loops
    
    [ Upstream commit e4f80303c2353952e6e980b23914e4214487f2a6 ]
    
    Otherwise on resource constrained systems these workqueues may be too
    greedy.
    
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 861229a52bac05d8259346fe6959d125676b63cb
Author: Darrell Kavanagh <darrell.kavanagh@gmail.com>
Date:   Tue Feb 14 16:46:59 2023 +0000

    drm: panel-orientation-quirks: Add quirk for Lenovo IdeaPad Duet 3 10IGL5
    
    [ Upstream commit 38b2d8efd03d2e56431b611e3523f0158306451d ]
    
    Another Lenovo convertable where the panel is installed landscape but is
    reported to the kernel as portrait.
    
    Signed-off-by: Darrell Kavanagh <darrell.kavanagh@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230214164659.3583-1-darrell.kavanagh@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7df5da8e6bcf27f09d74c55e3d6e3b8f7c973307
Author: Bastien Nocera <hadess@hadess.net>
Date:   Wed Jan 25 13:17:22 2023 +0100

    HID: logitech-hidpp: Don't restart communication if not necessary
    
    [ Upstream commit 498ba20690357691103de0f766960355247c78be ]
    
    Don't stop and restart communication with the device unless we need to
    modify the connect flags used because of a device quirk.
    
    Signed-off-by: Bastien Nocera <hadess@hadess.net>
    Link: https://lore.kernel.org/r/20230125121723.3122-1-hadess@hadess.net
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca64ebcb45019a1f80c16c4824b4493fa0c24dca
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Fri Feb 3 15:27:14 2023 +0200

    pinctrl: at91: use devm_kasprintf() to avoid potential leaks
    
    [ Upstream commit 1c4e5c470a56f7f7c649c0c70e603abc1eab15c4 ]
    
    Use devm_kasprintf() instead of kasprintf() to avoid any potential
    leaks. At the moment drivers have no remove functionality thus
    there is no need for fixes tag.
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20230203132714.1931596-1-claudiu.beznea@microchip.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5735878a7b7db7e9ce731cb36cec298a9de67549
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Tue Jan 3 12:46:20 2023 +0100

    hwmon: (coretemp) Simplify platform device handling
    
    [ Upstream commit 6d03bbff456befeccdd4d663177c4d6c75d0c4ff ]
    
    Coretemp's platform driver is unconventional. All the real work is done
    globally by the initcall and CPU hotplug notifiers, while the "driver"
    effectively just wraps an allocation and the registration of the hwmon
    interface in a long-winded round-trip through the driver core.  The whole
    logic of dynamically creating and destroying platform devices to bring
    the interfaces up and down is error prone, since it assumes
    platform_device_add() will synchronously bind the driver and set drvdata
    before it returns, thus results in a NULL dereference if drivers_autoprobe
    is turned off for the platform bus. Furthermore, the unusual approach of
    doing that from within a CPU hotplug notifier, already commented in the
    code that it deadlocks suspend, also causes lockdep issues for other
    drivers or subsystems which may want to legitimately register a CPU
    hotplug notifier from a platform bus notifier.
    
    All of these issues can be solved by ripping this unusual behaviour out
    completely, simply tying the platform devices to the lifetime of the
    module itself, and directly managing the hwmon interfaces from the
    hotplug notifiers. There is a slight user-visible change in that
    /sys/bus/platform/drivers/coretemp will no longer appear, and
    /sys/devices/platform/coretemp.n will remain present if package n is
    hotplugged off, but hwmon users should really only be looking for the
    presence of the hwmon interfaces, whose behaviour remains unchanged.
    
    Link: https://lore.kernel.org/lkml/20220922101036.87457-1-janusz.krzysztofik@linux.intel.com/
    Link: https://gitlab.freedesktop.org/drm/intel/issues/6641
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
    Link: https://lore.kernel.org/r/20230103114620.15319-1-janusz.krzysztofik@linux.intel.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f8623377f3e0cfaa80558631b8694d02a492b4c
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Tue Jan 31 15:06:53 2023 +0100

    gfs2: Improve gfs2_make_fs_rw error handling
    
    [ Upstream commit b66f723bb552ad59c2acb5d45ea45c890f84498b ]
    
    In gfs2_make_fs_rw(), make sure to call gfs2_consist() to report an
    inconsistency and mark the filesystem as withdrawn when
    gfs2_find_jhead() fails.
    
    At the end of gfs2_make_fs_rw(), when we discover that the filesystem
    has been withdrawn, make sure we report an error.  This also replaces
    the gfs2_withdrawn() check after gfs2_find_jhead().
    
    Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: syzbot+f51cb4b9afbd87ec06f2@syzkaller.appspotmail.com
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfa4ffd8159159ea17d4759a4c3a355a81617c99
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jan 27 16:53:58 2023 -0800

    regulator: s5m8767: Bounds check id indexing into arrays
    
    [ Upstream commit e314e15a0b58f9d051c00b25951073bcdae61953 ]
    
    The compiler has no way to know if "id" is within the array bounds of
    the regulators array. Add a check for this and a build-time check that
    the regulators and reg_voltage_map arrays are sized the same. Seen with
    GCC 13:
    
    ../drivers/regulator/s5m8767.c: In function 's5m8767_pmic_probe':
    ../drivers/regulator/s5m8767.c:936:35: warning: array subscript [0, 36] is outside array bounds of 'struct regulator_desc[37]' [-Warray-bounds=]
      936 |                         regulators[id].vsel_reg =
          |                         ~~~~~~~~~~^~~~
    
    Cc: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: linux-samsung-soc@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20230128005358.never.313-kees@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4ff71c6f0290f9a12437ae27e0e666147e91e1e
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jan 27 14:52:07 2023 -0800

    regulator: max77802: Bounds check regulator id against opmode
    
    [ Upstream commit 4fd8bcec5fd7c0d586206fa2f42bd67b06cdaa7e ]
    
    Explicitly bounds-check the id before accessing the opmode array. Seen
    with GCC 13:
    
    ../drivers/regulator/max77802-regulator.c: In function 'max77802_enable':
    ../drivers/regulator/max77802-regulator.c:217:29: warning: array subscript [0, 41] is outside array bounds of 'unsigned int[42]' [-Warray-bounds=]
      217 |         if (max77802->opmode[id] == MAX77802_OFF_PWRREQ)
          |             ~~~~~~~~~~~~~~~~^~~~
    ../drivers/regulator/max77802-regulator.c:62:22: note: while referencing 'opmode'
       62 |         unsigned int opmode[MAX77802_REG_MAX];
          |                      ^~~~~~
    
    Cc: Javier Martinez Canillas <javier@dowhile0.org>
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Javier Martinez Canillas <javierm@redhat.com>
    Link: https://lore.kernel.org/r/20230127225203.never.864-kees@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0adacf6d6b1233f24a1e1775e0e2766fd0b69314
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jan 27 14:41:29 2023 -0800

    ASoC: kirkwood: Iterate over array indexes instead of using pointer math
    
    [ Upstream commit b3bcedc0402fcdc5c8624c433562d9d1882749d8 ]
    
    Walking the dram->cs array was seen as accesses beyond the first array
    item by the compiler. Instead, use the array index directly. This allows
    for run-time bounds checking under CONFIG_UBSAN_BOUNDS as well. Seen
    with GCC 13 with -fstrict-flex-arrays:
    
    ../sound/soc/kirkwood/kirkwood-dma.c: In function
    'kirkwood_dma_conf_mbus_windows.constprop':
    ../sound/soc/kirkwood/kirkwood-dma.c:90:24: warning: array subscript 0 is outside array bounds of 'const struct mbus_dram_window[0]' [-Warray-bounds=]
       90 |                 if ((cs->base & 0xffff0000) < (dma & 0xffff0000)) {
          |                      ~~^~~~~~
    
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Jaroslav Kysela <perex@perex.cz>
    Cc: Takashi Iwai <tiwai@suse.com>
    Cc: alsa-devel@alsa-project.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20230127224128.never.410-kees@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcfc7740228d2a4ce105950a41494ede86712d09
Author: Jakob Koschel <jkl820.git@gmail.com>
Date:   Fri Jan 20 00:23:20 2023 +0100

    docs/scripts/gdb: add necessary make scripts_gdb step
    
    [ Upstream commit 6b219431037bf98c9efd49716aea9b68440477a3 ]
    
    In order to debug the kernel successfully with gdb you need to run
    'make scripts_gdb' nowadays.
    
    This was changed with the following commit:
    
    Commit 67274c083438340ad16c ("scripts/gdb: delay generation of gdb
    constants.py")
    
    In order to have a complete guide for beginners this remark
    should be added to the offial documentation.
    
    Signed-off-by: Jakob Koschel <jkl820.git@gmail.com>
    Link: https://lore.kernel.org/r/20230112-documentation-gdb-v2-1-292785c43dc9@gmail.com
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 540c66180afd59309a442d3bf1f2393464c8b4c5
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Jan 10 10:16:51 2023 +0800

    drm/msm/dsi: Add missing check for alloc_ordered_workqueue
    
    [ Upstream commit 115906ca7b535afb1fe7b5406c566ccd3873f82b ]
    
    Add check for the return value of alloc_ordered_workqueue as it may return
    NULL pointer and cause NULL pointer dereference.
    
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/517646/
    Link: https://lore.kernel.org/r/20230110021651.12770-1-jiasheng@iscas.ac.cn
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d473c55ce1975c9e601c25293328a5039225d2b2
Author: Konstantin Meskhidze <konstantin.meskhidze@huawei.com>
Date:   Wed Nov 30 10:50:46 2022 +0800

    drm: amd: display: Fix memory leakage
    
    [ Upstream commit 6b8701be1f66064ca72733c5f6e13748cdbf8397 ]
    
    This commit fixes memory leakage in dc_construct_ctx() function.
    
    Signed-off-by: Konstantin Meskhidze <konstantin.meskhidze@huawei.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce9e9d3dcbb0d1551ffd1a7f16e7c051f3ba4140
Author: Liwei Song <liwei.song@windriver.com>
Date:   Fri Jan 6 17:47:29 2023 +0800

    drm/radeon: free iio for atombios when driver shutdown
    
    [ Upstream commit 4773fadedca918faec443daaca5e4ea1c0ced144 ]
    
    Fix below kmemleak when unload radeon driver:
    
    unreferenced object 0xffff9f8608ede200 (size 512):
      comm "systemd-udevd", pid 326, jiffies 4294682822 (age 716.338s)
      hex dump (first 32 bytes):
        00 00 00 00 c4 aa ec aa 14 ab 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<0000000062fadebe>] kmem_cache_alloc_trace+0x2f1/0x500
        [<00000000b6883cea>] atom_parse+0x117/0x230 [radeon]
        [<00000000158c23fd>] radeon_atombios_init+0xab/0x170 [radeon]
        [<00000000683f672e>] si_init+0x57/0x750 [radeon]
        [<00000000566cc31f>] radeon_device_init+0x559/0x9c0 [radeon]
        [<0000000046efabb3>] radeon_driver_load_kms+0xc1/0x1a0 [radeon]
        [<00000000b5155064>] drm_dev_register+0xdd/0x1d0
        [<0000000045fec835>] radeon_pci_probe+0xbd/0x100 [radeon]
        [<00000000e69ecca3>] pci_device_probe+0xe1/0x160
        [<0000000019484b76>] really_probe.part.0+0xc1/0x2c0
        [<000000003f2649da>] __driver_probe_device+0x96/0x130
        [<00000000231c5bb1>] driver_probe_device+0x24/0xf0
        [<0000000000a42377>] __driver_attach+0x77/0x190
        [<00000000d7574da6>] bus_for_each_dev+0x7f/0xd0
        [<00000000633166d2>] driver_attach+0x1e/0x30
        [<00000000313b05b8>] bus_add_driver+0x12c/0x1e0
    
    iio was allocated in atom_index_iio() called by atom_parse(),
    but it doesn't got released when the dirver is shutdown.
    Fix this kmemleak by free it in radeon_atombios_fini().
    
    Signed-off-by: Liwei Song <liwei.song@windriver.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 819d8dba030dc99bdf6dfacac671db23cec28427
Author: Carlo Caione <ccaione@baylibre.com>
Date:   Mon Dec 19 10:02:38 2022 +0100

    drm/tiny: ili9486: Do not assume 8-bit only SPI controllers
    
    [ Upstream commit 77772e607522daa61f3af74df018559db75c43d6 ]
    
    The pixel data for the ILI9486 is always 16-bits wide and it must be
    sent over the SPI bus. When the controller is only able to deal with
    8-bit transfers, this 16-bits data needs to be swapped before the
    sending to account for the big endian bus, this is on the contrary not
    needed when the SPI controller already supports 16-bits transfers.
    
    The decision about swapping the pixel data or not is taken in the MIPI
    DBI code by probing the controller capabilities: if the controller only
    suppors 8-bit transfers the data is swapped, otherwise it is not.
    
    This swapping/non-swapping is relying on the assumption that when the
    controller does support 16-bit transactions then the data is sent
    unswapped in 16-bits-per-word over SPI.
    
    The problem with the ILI9486 driver is that it is forcing 8-bit
    transactions also for controllers supporting 16-bits, violating the
    assumption and corrupting the pixel data.
    
    Align the driver to what is done in the MIPI DBI code by adjusting the
    transfer size to the maximum allowed by the SPI controller.
    
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Carlo Caione <ccaione@baylibre.com>
    Reviewed-by: Kamlesh Gurudasani <kamlesh.gurudasani@gmail.com>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221116-s905x_spi_ili9486-v4-2-f86b4463b9e4@baylibre.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc919c866dd5a6bc0533f1418cb021ac83b1b913
Author: Jingyuan Liang <jingyliang@chromium.org>
Date:   Tue Dec 13 22:53:30 2022 +0000

    HID: Add Mapping for System Microphone Mute
    
    [ Upstream commit 2d60f9f4f26785a00273cb81fe60eff129ebd449 ]
    
    HUTRR110 added a new usage code for a key that is supposed to
    mute/unmute microphone system-wide.
    
    Map the new usage code(0x01 0xa9) to keycode KEY_MICMUTE.
    Additionally hid-debug is adjusted to recognize this keycode as well.
    
    Signed-off-by: Jingyuan Liang <jingyliang@chromium.org>
    Reviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4cb425252086a5f81e77200a84837102dddfea3
Author: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
Date:   Fri Sep 16 11:22:05 2022 +0300

    drm/omap: dsi: Fix excessive stack usage
    
    [ Upstream commit cfca78971b9233aef0891507a98fba62046d4542 ]
    
    dsi_dump_dsi_irqs(), a function used for debugfs prints, has a large
    struct in its frame, which can result in:
    
    drivers/gpu/drm/omapdrm/dss/dsi.c:1126:1: warning: the frame size of 1060 bytes is larger than 1024 bytes [-Wframe-larger-than=]
    
    As the performance of the function is of no concern, let's allocate the
    struct with kmalloc instead.
    
    Compile-tested only.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220916082206.167427-1-tomi.valkeinen@ideasonboard.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f73793b81637c60ccc83cc508645310b8ab7d80
Author: Roman Li <roman.li@amd.com>
Date:   Thu Dec 1 09:06:42 2022 -0500

    drm/amd/display: Fix potential null-deref in dm_resume
    
    [ Upstream commit 7a7175a2cd84b7874bebbf8e59f134557a34161b ]
    
    [Why]
    Fixing smatch error:
    dm_resume() error: we previously assumed 'aconnector->dc_link' could be null
    
    [How]
    Check if dc_link null at the beginning of the loop,
    so further checks can be dropped.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    
    Reviewed-by: Wayne Lin <Wayne.Lin@amd.com>
    Acked-by: Jasdeep Dhillon <jdhillon@amd.com>
    Signed-off-by: Roman Li <roman.li@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 348cc9ab33803bc0ed6e9cfd61b07f09f98debec
Author: Moises Cardona <moisesmcardona@gmail.com>
Date:   Sun Dec 25 14:07:13 2022 -0500

    Bluetooth: btusb: Add VID:PID 13d3:3529 for Realtek RTL8821CE
    
    [ Upstream commit 1eec3b95b5ce7fb2cdd273ac4f8b24b1ed6776a1 ]
    
    This patch adds VID:PID 13d3:3529 to the btusb.c file.
    
    This VID:PID is found in the Realtek RTL8821CE module
    (M.2 module AW-CB304NF on an ASUS E210MA laptop)
    
    Output of /sys/kernel/debug/usb/devices:
    
    T:  Bus=01 Lev=01 Prnt=01 Port=07 Cnt=02 Dev#=  3 Spd=12   MxCh= 0
    D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=13d3 ProdID=3529 Rev= 1.10
    S:  Manufacturer=Realtek
    S:  Product=Bluetooth Radio
    C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    
    Signed-off-by: Moises Cardona <moisesmcardona@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e974e8f1e37d22c0de07374f8ddc84073fef2f1d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Feb 2 16:15:15 2023 +0100

    PM: EM: fix memory leak with using debugfs_lookup()
    
    [ Upstream commit a0e8c13ccd6a9a636d27353da62c2410c4eca337 ]
    
    When calling debugfs_lookup() the result must have dput() called on it,
    otherwise the memory will leak over time.  To make things simpler, just
    call debugfs_lookup_and_remove() instead which handles all of the logic
    at once.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c2b778edd8a4609e6650c55d490af9359c1e62f
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jan 31 17:37:59 2023 -0800

    uaccess: Add minimum bounds check on kernel buffer size
    
    [ Upstream commit 04ffde1319a715bd0550ded3580d4ea3bc003776 ]
    
    While there is logic about the difference between ksize and usize,
    copy_struct_from_user() didn't check the size of the destination buffer
    (when it was known) against ksize. Add this check so there is an upper
    bounds check on the possible memset() call, otherwise lower bounds
    checks made by callers will trigger bounds warnings under -Warray-bounds.
    Seen under GCC 13:
    
    In function 'copy_struct_from_user',
        inlined from 'iommufd_fops_ioctl' at
    ../drivers/iommu/iommufd/main.c:333:8:
    ../include/linux/fortify-string.h:59:33: warning: '__builtin_memset' offset [57, 4294967294] is out of the bounds [0, 56] of object 'buf' with type 'union ucmd_buffer' [-Warray-bounds=]
       59 | #define __underlying_memset     __builtin_memset
          |                                 ^
    ../include/linux/fortify-string.h:453:9: note: in expansion of macro '__underlying_memset'
      453 |         __underlying_memset(p, c, __fortify_size); \
          |         ^~~~~~~~~~~~~~~~~~~
    ../include/linux/fortify-string.h:461:25: note: in expansion of macro '__fortify_memset_chk'
      461 | #define memset(p, c, s) __fortify_memset_chk(p, c, s, \
          |                         ^~~~~~~~~~~~~~~~~~~~
    ../include/linux/uaccess.h:334:17: note: in expansion of macro 'memset'
      334 |                 memset(dst + size, 0, rest);
          |                 ^~~~~~
    ../drivers/iommu/iommufd/main.c: In function 'iommufd_fops_ioctl':
    ../drivers/iommu/iommufd/main.c:311:27: note: 'buf' declared here
      311 |         union ucmd_buffer buf;
          |                           ^~~
    
    Cc: Christian Brauner <brauner@kernel.org>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Dinh Nguyen <dinguyen@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Alexander Potapenko <glider@google.com>
    Acked-by: Aleksa Sarai <cyphar@cyphar.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/lkml/20230203193523.never.667-kees@kernel.org/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d80f947bb303f501d397bcad285393ed1e532035
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jan 27 14:39:21 2023 -0800

    coda: Avoid partial allocation of sig_inputArgs
    
    [ Upstream commit 48df133578c70185a95a49390d42df1996ddba2a ]
    
    GCC does not like having a partially allocated object, since it cannot
    reason about it for bounds checking when it is passed to other code.
    Instead, fully allocate sig_inputArgs. (Alternatively, sig_inputArgs
    should be defined as a struct coda_in_hdr, if it is actually not using
    any other part of the union.) Seen under GCC 13:
    
    ../fs/coda/upcall.c: In function 'coda_upcall':
    ../fs/coda/upcall.c:801:22: warning: array subscript 'union inputArgs[0]' is partly outside array bounds of 'unsigned char[20]' [-Warray-bounds=]
      801 |         sig_inputArgs->ih.opcode = CODA_SIGNAL;
          |                      ^~
    
    Cc: Jan Harkes <jaharkes@cs.cmu.edu>
    Cc: coda@cs.cmu.edu
    Cc: codalist@coda.cs.cmu.edu
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20230127223921.never.882-kees@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 206c511e4214b713a684022cfa84b1bd5ccae5c6
Author: Shay Drory <shayd@nvidia.com>
Date:   Wed Jan 11 13:34:02 2023 +0200

    net/mlx5: fw_tracer: Fix debug print
    
    [ Upstream commit 988c2352273997a242f15c4fc3711773515006a2 ]
    
    The debug message specify tdsn, but takes as an argument the
    tmsn. The correct argument is tmsn, hence, fix the print.
    
    Signed-off-by: Shay Drory <shayd@nvidia.com>
    Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ef724fed392f7ed56e64817b04ba75e64903101
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Feb 2 13:44:49 2023 +0100

    ACPI: video: Fix Lenovo Ideapad Z570 DMI match
    
    [ Upstream commit 2d11eae42d52a131f06061015e49dc0f085c5bfc ]
    
    Multiple Ideapad Z570 variants need acpi_backlight=native to force native
    use on these pre Windows 8 machines since acpi_video backlight control
    does not work here.
    
    The original DMI quirk matches on a product_name of "102434U" but other
    variants may have different product_name-s such as e.g. "1024D9U".
    
    Move to checking product_version instead as is more or less standard for
    Lenovo DMI quirks for similar reasons.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46ce77b07cd83b12cbe6f1aa617cf4487b06317a
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sun Jan 1 12:47:57 2023 +0100

    wifi: mt76: dma: free rx_head in mt76_dma_rx_cleanup
    
    [ Upstream commit 1b88b47e898edef0e56e3a2f4e49f052a136153d ]
    
    Free rx_head skb in mt76_dma_rx_cleanup routine in order to avoid
    possible memory leak at module unload.
    
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7873def499dfc1a5406f0ac06d288b4e9ee461e4
Author: Michael Schmitz <schmitzmic@gmail.com>
Date:   Thu Jan 12 16:55:27 2023 +1300

    m68k: Check syscall_trace_enter() return code
    
    [ Upstream commit 2ca8a1de4437f21562e57f9ac123914747a8e7a1 ]
    
    Check return code of syscall_trace_enter(), and skip syscall
    if -1. Return code will be left at what had been set by
    ptrace or seccomp (in regs->d0).
    
    No regression seen in testing with strace on ARAnyM.
    
    Signed-off-by: Michael Schmitz <schmitzmic@gmail.com>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Link: https://lore.kernel.org/r/20230112035529.13521-2-schmitzmic@gmail.com
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 841881320562cbeac7046b537b91cd000480cea2
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Jan 26 16:08:19 2023 -0800

    net: bcmgenet: Add a check for oversized packets
    
    [ Upstream commit 5c0862c2c962052ed5055220a00ac1cefb92fbcd ]
    
    Occasionnaly we may get oversized packets from the hardware which
    exceed the nomimal 2KiB buffer size we allocate SKBs with. Add an early
    check which drops the packet to avoid invoking skb_over_panic() and move
    on to processing the next packet.
    
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fc9760afd8a012f303eea4532a205a2eb158e8f
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jan 5 20:19:48 2023 -0800

    crypto: hisilicon: Wipe entire pool on error
    
    [ Upstream commit aa85923a954e7704bc9d3847dabeb8540aa98d13 ]
    
    To work around a Clang __builtin_object_size bug that shows up under
    CONFIG_FORTIFY_SOURCE and UBSAN_BOUNDS, move the per-loop-iteration
    mem_block wipe into a single wipe of the entire pool structure after
    the loop.
    
    Reported-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://github.com/ClangBuiltLinux/linux/issues/1780
    Cc: Weili Qian <qianweili@huawei.com>
    Cc: Zhou Wang <wangzhou1@hisilicon.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: linux-crypto@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Tested-by: Nathan Chancellor <nathan@kernel.org> # build
    Link: https://lore.kernel.org/r/20230106041945.never.831-kees@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fc7748d4823fc69a05d0003608b9398ca8cc165
Author: Feng Tang <feng.tang@intel.com>
Date:   Tue Dec 20 16:25:12 2022 +0800

    clocksource: Suspend the watchdog temporarily when high read latency detected
    
    [ Upstream commit b7082cdfc464bf9231300605d03eebf943dda307 ]
    
    Bugs have been reported on 8 sockets x86 machines in which the TSC was
    wrongly disabled when the system is under heavy workload.
    
     [ 818.380354] clocksource: timekeeping watchdog on CPU336: hpet wd-wd read-back delay of 1203520ns
     [ 818.436160] clocksource: wd-tsc-wd read-back delay of 181880ns, clock-skew test skipped!
     [ 819.402962] clocksource: timekeeping watchdog on CPU338: hpet wd-wd read-back delay of 324000ns
     [ 819.448036] clocksource: wd-tsc-wd read-back delay of 337240ns, clock-skew test skipped!
     [ 819.880863] clocksource: timekeeping watchdog on CPU339: hpet read-back delay of 150280ns, attempt 3, marking unstable
     [ 819.936243] tsc: Marking TSC unstable due to clocksource watchdog
     [ 820.068173] TSC found unstable after boot, most likely due to broken BIOS. Use 'tsc=unstable'.
     [ 820.092382] sched_clock: Marking unstable (818769414384, 1195404998)
     [ 820.643627] clocksource: Checking clocksource tsc synchronization from CPU 267 to CPUs 0,4,25,70,126,430,557,564.
     [ 821.067990] clocksource: Switched to clocksource hpet
    
    This can be reproduced by running memory intensive 'stream' tests,
    or some of the stress-ng subcases such as 'ioport'.
    
    The reason for these issues is the when system is under heavy load, the
    read latency of the clocksources can be very high.  Even lightweight TSC
    reads can show high latencies, and latencies are much worse for external
    clocksources such as HPET or the APIC PM timer.  These latencies can
    result in false-positive clocksource-unstable determinations.
    
    These issues were initially reported by a customer running on a production
    system, and this problem was reproduced on several generations of Xeon
    servers, especially when running the stress-ng test.  These Xeon servers
    were not production systems, but they did have the latest steppings
    and firmware.
    
    Given that the clocksource watchdog is a continual diagnostic check with
    frequency of twice a second, there is no need to rush it when the system
    is under heavy load.  Therefore, when high clocksource read latencies
    are detected, suspend the watchdog timer for 5 minutes.
    
    Signed-off-by: Feng Tang <feng.tang@intel.com>
    Acked-by: Waiman Long <longman@redhat.com>
    Cc: John Stultz <jstultz@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Stephen Boyd <sboyd@kernel.org>
    Cc: Feng Tang <feng.tang@intel.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94933dab75d595fc4fd2389577d19fee3015729e
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Jan 23 13:45:58 2023 +0000

    ACPI: Don't build ACPICA with '-Os'
    
    [ Upstream commit 8f9e0a52810dd83406c768972d022c37e7a18f1f ]
    
    The ACPICA code has been built with '-Os' since the beginning of git
    history, though there's no explanatory comment as to why.
    
    This is unfortunate as GCC drops the alignment specificed by
    '-falign-functions=N' when '-Os' is used, as reported in GCC bug 88345:
    
      https://gcc.gnu.org/bugzilla/show_bug.cgi?id=88345
    
    This prevents CONFIG_FUNCTION_ALIGNMENT and
    CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B from having their expected effect
    on the ACPICA code. This is doubly unfortunate as in subsequent patches
    arm64 will depend upon CONFIG_FUNCTION_ALIGNMENT for its ftrace
    implementation.
    
    Drop the '-Os' flag when building the ACPICA code. With this removed,
    the code builds cleanly and works correctly in testing so far.
    
    I've tested this by selecting CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B=y,
    building and booting a kernel using ACPI, and looking for misaligned
    text symbols:
    
    * arm64:
    
      Before, v6.2-rc3:
        # uname -rm
        6.2.0-rc3 aarch64
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | wc -l
        5009
    
      Before, v6.2-rc3 + fixed __cold:
        # uname -rm
        6.2.0-rc3-00001-g2a2bedf8bfa9 aarch64
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | wc -l
        919
    
      After:
        # uname -rm
        6.2.0-rc3-00002-g267bddc38572 aarch64
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | wc -l
        323
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | grep acpi | wc -l
        0
    
    * x86_64:
    
      Before, v6.2-rc3:
        # uname -rm
        6.2.0-rc3 x86_64
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | wc -l
        11537
    
      Before, v6.2-rc3 + fixed __cold:
        # uname -rm
        6.2.0-rc3-00001-g2a2bedf8bfa9 x86_64
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | wc -l
        2805
    
      After:
        # uname -rm
        6.2.0-rc3-00002-g267bddc38572 x86_64
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | wc -l
        1357
        # grep ' [Tt] ' /proc/kallsyms | grep -iv '[048c]0 [Tt] ' | grep acpi | wc -l
        0
    
    With the patch applied, the remaining unaligned text labels are a
    combination of static call trampolines and labels in assembly, which can
    be dealt with in subsequent patches.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Florent Revest <revest@chromium.org>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Robert Moore <robert.moore@intel.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Will Deacon <will@kernel.org>
    Cc: linux-acpi@vger.kernel.org
    Link: https://lore.kernel.org/r/20230123134603.1064407-4-mark.rutland@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f1865ebfa7a81263746521c1dc1ed4346266d8b
Author: Jesse Brandeburg <jesse.brandeburg@intel.com>
Date:   Tue Dec 13 16:01:31 2022 -0800

    ice: add missing checks for PF vsi type
    
    [ Upstream commit 6a8d013e904ad9a66706fcc926ec9993bed7d190 ]
    
    There were a few places we had missed checking the VSI type to make sure
    it was definitely a PF VSI, before calling setup functions intended only
    for the PF VSI.
    
    This doesn't fix any explicit bugs but cleans up the code in a few
    places and removes one explicit != vsi->type check that can be
    superseded by this code (it's a super set)
    
    Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Gurucharan G <gurucharanx.g@intel.com> (A Contingent worker at Intel)
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b33091fc28963deed329ccfce0d53f5323acf663
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sat Jan 14 13:11:41 2023 +0000

    inet: fix fast path in __inet_hash_connect()
    
    [ Upstream commit 21cbd90a6fab7123905386985e3e4a80236b8714 ]
    
    __inet_hash_connect() has a fast path taken if sk_head(&tb->owners) is
    equal to the sk parameter.
    sk_head() returns the hlist_entry() with respect to the sk_node field.
    However entries in the tb->owners list are inserted with respect to the
    sk_bind_node field with sk_add_bind_node().
    Thus the check would never pass and the fast path never execute.
    
    This fast path has never been executed or tested as this bug seems
    to be present since commit 1da177e4c3f4 ("Linux-2.6.12-rc2"), thus
    remove it to reduce code complexity.
    
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Reviewed-by: Kuniyuki Iwashima <kuniyu@amazon.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20230112-inet_hash_connect_bind_head-v3-1-b591fd212b93@diag.uniroma1.it
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47dc1f425af57b71111d7b01ebd24e04e8d967ef
Author: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
Date:   Thu Dec 29 18:29:06 2022 +0900

    wifi: mt7601u: fix an integer underflow
    
    [ Upstream commit 803f3176c5df3b5582c27ea690f204abb60b19b9 ]
    
    Fix an integer underflow that leads to a null pointer dereference in
    'mt7601u_rx_skb_from_seg()'. The variable 'dma_len' in the URB packet
    could be manipulated, which could trigger an integer underflow of
    'seg_len' in 'mt7601u_rx_process_seg()'. This underflow subsequently
    causes the 'bad_frame' checks in 'mt7601u_rx_skb_from_seg()' to be
    bypassed, eventually leading to a dereference of the pointer 'p', which
    is a null pointer.
    
    Ensure that 'dma_len' is greater than 'min_seg_len'.
    
    Found by a modified version of syzkaller.
    
    KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
    CPU: 0 PID: 12 Comm: ksoftirqd/0 Tainted: G        W  O      5.14.0+
    #139
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    RIP: 0010:skb_add_rx_frag+0x143/0x370
    Code: e2 07 83 c2 03 38 ca 7c 08 84 c9 0f 85 86 01 00 00 4c 8d 7d 08 44
    89 68 08 48 b8 00 00 00 00 00 fc ff df 4c 89 fa 48 c1 ea 03 <80> 3c 02
    00 0f 85 cd 01 00 00 48 8b 45 08 a8 01 0f 85 3d 01 00 00
    RSP: 0018:ffffc900000cfc90 EFLAGS: 00010202
    RAX: dffffc0000000000 RBX: ffff888115520dc0 RCX: 0000000000000000
    RDX: 0000000000000001 RSI: ffff8881118430c0 RDI: ffff8881118430f8
    RBP: 0000000000000000 R08: 0000000000000e09 R09: 0000000000000010
    R10: ffff888111843017 R11: ffffed1022308602 R12: 0000000000000000
    R13: 0000000000000e09 R14: 0000000000000010 R15: 0000000000000008
    FS:  0000000000000000(0000) GS:ffff88811a800000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000004035af40 CR3: 00000001157f2000 CR4: 0000000000750ef0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
     mt7601u_rx_tasklet+0xc73/0x1270
     ? mt7601u_submit_rx_buf.isra.0+0x510/0x510
     ? tasklet_action_common.isra.0+0x79/0x2f0
     tasklet_action_common.isra.0+0x206/0x2f0
     __do_softirq+0x1b5/0x880
     ? tasklet_unlock+0x30/0x30
     run_ksoftirqd+0x26/0x50
     smpboot_thread_fn+0x34f/0x7d0
     ? smpboot_register_percpu_thread+0x370/0x370
     kthread+0x3a1/0x480
     ? set_kthread_struct+0x120/0x120
     ret_from_fork+0x1f/0x30
    Modules linked in: 88XXau(O) 88x2bu(O)
    ---[ end trace 57f34f93b4da0f9b ]---
    RIP: 0010:skb_add_rx_frag+0x143/0x370
    Code: e2 07 83 c2 03 38 ca 7c 08 84 c9 0f 85 86 01 00 00 4c 8d 7d 08 44
    89 68 08 48 b8 00 00 00 00 00 fc ff df 4c 89 fa 48 c1 ea 03 <80> 3c 02
    00 0f 85 cd 01 00 00 48 8b 45 08 a8 01 0f 85 3d 01 00 00
    RSP: 0018:ffffc900000cfc90 EFLAGS: 00010202
    RAX: dffffc0000000000 RBX: ffff888115520dc0 RCX: 0000000000000000
    RDX: 0000000000000001 RSI: ffff8881118430c0 RDI: ffff8881118430f8
    RBP: 0000000000000000 R08: 0000000000000e09 R09: 0000000000000010
    R10: ffff888111843017 R11: ffffed1022308602 R12: 0000000000000000
    R13: 0000000000000e09 R14: 0000000000000010 R15: 0000000000000008
    FS:  0000000000000000(0000) GS:ffff88811a800000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000004035af40 CR3: 00000001157f2000 CR4: 0000000000750ef0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    
    Signed-off-by: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
    Acked-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221229092906.2328282-1-jisoo.jang@yonsei.ac.kr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ca2efea4f11c6255061e852ac188264c469c197
Author: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
Date:   Fri Dec 30 16:51:39 2022 +0900

    wifi: brcmfmac: ensure CLM version is null-terminated to prevent stack-out-of-bounds
    
    [ Upstream commit 660145d708be52f946a82e5b633c020f58f996de ]
    
    Fix a stack-out-of-bounds read in brcmfmac that occurs
    when 'buf' that is not null-terminated is passed as an argument of
    strreplace() in brcmf_c_preinit_dcmds(). This buffer is filled with
    a CLM version string by memcpy() in brcmf_fil_iovar_data_get().
    Ensure buf is null-terminated.
    
    Found by a modified version of syzkaller.
    
    [   33.004414][ T1896] brcmfmac: brcmf_c_process_clm_blob: no clm_blob available (err=-2), device may have limited channels available
    [   33.013486][ T1896] brcmfmac: brcmf_c_preinit_dcmds: Firmware: BCM43236/3 wl0: Nov 30 2011 17:33:42 version 5.90.188.22
    [   33.021554][ T1896] ==================================================================
    [   33.022379][ T1896] BUG: KASAN: stack-out-of-bounds in strreplace+0xf2/0x110
    [   33.023122][ T1896] Read of size 1 at addr ffffc90001d6efc8 by task kworker/0:2/1896
    [   33.023852][ T1896]
    [   33.024096][ T1896] CPU: 0 PID: 1896 Comm: kworker/0:2 Tainted: G           O      5.14.0+ #132
    [   33.024927][ T1896] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    [   33.026065][ T1896] Workqueue: usb_hub_wq hub_event
    [   33.026581][ T1896] Call Trace:
    [   33.026896][ T1896]  dump_stack_lvl+0x57/0x7d
    [   33.027372][ T1896]  print_address_description.constprop.0.cold+0xf/0x334
    [   33.028037][ T1896]  ? strreplace+0xf2/0x110
    [   33.028403][ T1896]  ? strreplace+0xf2/0x110
    [   33.028807][ T1896]  kasan_report.cold+0x83/0xdf
    [   33.029283][ T1896]  ? strreplace+0xf2/0x110
    [   33.029666][ T1896]  strreplace+0xf2/0x110
    [   33.029966][ T1896]  brcmf_c_preinit_dcmds+0xab1/0xc40
    [   33.030351][ T1896]  ? brcmf_c_set_joinpref_default+0x100/0x100
    [   33.030787][ T1896]  ? rcu_read_lock_sched_held+0xa1/0xd0
    [   33.031223][ T1896]  ? rcu_read_lock_bh_held+0xb0/0xb0
    [   33.031661][ T1896]  ? lock_acquire+0x19d/0x4e0
    [   33.032091][ T1896]  ? find_held_lock+0x2d/0x110
    [   33.032605][ T1896]  ? brcmf_usb_deq+0x1a7/0x260
    [   33.033087][ T1896]  ? brcmf_usb_rx_fill_all+0x5a/0xf0
    [   33.033582][ T1896]  brcmf_attach+0x246/0xd40
    [   33.034022][ T1896]  ? wiphy_new_nm+0x1476/0x1d50
    [   33.034383][ T1896]  ? kmemdup+0x30/0x40
    [   33.034722][ T1896]  brcmf_usb_probe+0x12de/0x1690
    [   33.035223][ T1896]  ? brcmf_usbdev_qinit.constprop.0+0x470/0x470
    [   33.035833][ T1896]  usb_probe_interface+0x25f/0x710
    [   33.036315][ T1896]  really_probe+0x1be/0xa90
    [   33.036656][ T1896]  __driver_probe_device+0x2ab/0x460
    [   33.037026][ T1896]  ? usb_match_id.part.0+0x88/0xc0
    [   33.037383][ T1896]  driver_probe_device+0x49/0x120
    [   33.037790][ T1896]  __device_attach_driver+0x18a/0x250
    [   33.038300][ T1896]  ? driver_allows_async_probing+0x120/0x120
    [   33.038986][ T1896]  bus_for_each_drv+0x123/0x1a0
    [   33.039906][ T1896]  ? bus_rescan_devices+0x20/0x20
    [   33.041412][ T1896]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   33.041861][ T1896]  ? trace_hardirqs_on+0x1c/0x120
    [   33.042330][ T1896]  __device_attach+0x207/0x330
    [   33.042664][ T1896]  ? device_bind_driver+0xb0/0xb0
    [   33.043026][ T1896]  ? kobject_uevent_env+0x230/0x12c0
    [   33.043515][ T1896]  bus_probe_device+0x1a2/0x260
    [   33.043914][ T1896]  device_add+0xa61/0x1ce0
    [   33.044227][ T1896]  ? __mutex_unlock_slowpath+0xe7/0x660
    [   33.044891][ T1896]  ? __fw_devlink_link_to_suppliers+0x550/0x550
    [   33.045531][ T1896]  usb_set_configuration+0x984/0x1770
    [   33.046051][ T1896]  ? kernfs_create_link+0x175/0x230
    [   33.046548][ T1896]  usb_generic_driver_probe+0x69/0x90
    [   33.046931][ T1896]  usb_probe_device+0x9c/0x220
    [   33.047434][ T1896]  really_probe+0x1be/0xa90
    [   33.047760][ T1896]  __driver_probe_device+0x2ab/0x460
    [   33.048134][ T1896]  driver_probe_device+0x49/0x120
    [   33.048516][ T1896]  __device_attach_driver+0x18a/0x250
    [   33.048910][ T1896]  ? driver_allows_async_probing+0x120/0x120
    [   33.049437][ T1896]  bus_for_each_drv+0x123/0x1a0
    [   33.049814][ T1896]  ? bus_rescan_devices+0x20/0x20
    [   33.050164][ T1896]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   33.050579][ T1896]  ? trace_hardirqs_on+0x1c/0x120
    [   33.050936][ T1896]  __device_attach+0x207/0x330
    [   33.051399][ T1896]  ? device_bind_driver+0xb0/0xb0
    [   33.051888][ T1896]  ? kobject_uevent_env+0x230/0x12c0
    [   33.052314][ T1896]  bus_probe_device+0x1a2/0x260
    [   33.052688][ T1896]  device_add+0xa61/0x1ce0
    [   33.053121][ T1896]  ? __fw_devlink_link_to_suppliers+0x550/0x550
    [   33.053568][ T1896]  usb_new_device.cold+0x463/0xf66
    [   33.053953][ T1896]  ? hub_disconnect+0x400/0x400
    [   33.054313][ T1896]  ? rwlock_bug.part.0+0x90/0x90
    [   33.054661][ T1896]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   33.055094][ T1896]  hub_event+0x10d5/0x3330
    [   33.055530][ T1896]  ? hub_port_debounce+0x280/0x280
    [   33.055934][ T1896]  ? __lock_acquire+0x1671/0x5790
    [   33.056387][ T1896]  ? wq_calc_node_cpumask+0x170/0x2a0
    [   33.056924][ T1896]  ? lock_release+0x640/0x640
    [   33.057383][ T1896]  ? rcu_read_lock_sched_held+0xa1/0xd0
    [   33.057916][ T1896]  ? rcu_read_lock_bh_held+0xb0/0xb0
    [   33.058402][ T1896]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   33.059019][ T1896]  process_one_work+0x873/0x13e0
    [   33.059488][ T1896]  ? lock_release+0x640/0x640
    [   33.059932][ T1896]  ? pwq_dec_nr_in_flight+0x320/0x320
    [   33.060446][ T1896]  ? rwlock_bug.part.0+0x90/0x90
    [   33.060898][ T1896]  worker_thread+0x8b/0xd10
    [   33.061348][ T1896]  ? __kthread_parkme+0xd9/0x1d0
    [   33.061810][ T1896]  ? process_one_work+0x13e0/0x13e0
    [   33.062288][ T1896]  kthread+0x379/0x450
    [   33.062660][ T1896]  ? _raw_spin_unlock_irq+0x24/0x30
    [   33.063148][ T1896]  ? set_kthread_struct+0x100/0x100
    [   33.063606][ T1896]  ret_from_fork+0x1f/0x30
    [   33.064070][ T1896]
    [   33.064313][ T1896]
    [   33.064545][ T1896] addr ffffc90001d6efc8 is located in stack of task kworker/0:2/1896 at offset 512 in frame:
    [   33.065478][ T1896]  brcmf_c_preinit_dcmds+0x0/0xc40
    [   33.065973][ T1896]
    [   33.066191][ T1896] this frame has 4 objects:
    [   33.066614][ T1896]  [48, 56) 'ptr'
    [   33.066618][ T1896]  [80, 148) 'revinfo'
    [   33.066957][ T1896]  [192, 210) 'eventmask'
    [   33.067338][ T1896]  [256, 512) 'buf'
    [   33.067742][ T1896]
    [   33.068304][ T1896] Memory state around the buggy address:
    [   33.068838][ T1896]  ffffc90001d6ee80: f2 00 00 02 f2 f2 f2 f2 f2 00 00 00 00 00 00 00
    [   33.069545][ T1896]  ffffc90001d6ef00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   33.070626][ T1896] >ffffc90001d6ef80: 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
    [   33.072052][ T1896]                                               ^
    [   33.073043][ T1896]  ffffc90001d6f000: f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   33.074230][ T1896]  ffffc90001d6f080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   33.074914][ T1896] ==================================================================
    [   33.075713][ T1896] Disabling lock debugging due to kernel taint
    
    Reviewed-by: Arend van Spriel<arend.vanspriel@broadcom.com>
    Signed-off-by: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221230075139.56591-1-jisoo.jang@yonsei.ac.kr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4707c94f7f89da7fa656df38d890d9d6a32bd0e0
Author: Breno Leitao <leitao@debian.org>
Date:   Mon Nov 28 07:31:48 2022 -0800

    x86/bugs: Reset speculation control settings on init
    
    [ Upstream commit 0125acda7d76b943ca55811df40ed6ec0ecf670f ]
    
    Currently, x86_spec_ctrl_base is read at boot time and speculative bits
    are set if Kconfig items are enabled. For example, IBRS is enabled if
    CONFIG_CPU_IBRS_ENTRY is configured, etc. These MSR bits are not cleared
    if the mitigations are disabled.
    
    This is a problem when kexec-ing a kernel that has the mitigation
    disabled from a kernel that has the mitigation enabled. In this case,
    the MSR bits are not cleared during the new kernel boot. As a result,
    this might have some performance degradation that is hard to pinpoint.
    
    This problem does not happen if the machine is (hard) rebooted because
    the bit will be cleared by default.
    
      [ bp: Massage. ]
    
    Suggested-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/20221128153148.1129350-1-leitao@debian.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ef02cdb5a304cd06eba6724975b5d9d2991afad
Author: Jann Horn <jannh@google.com>
Date:   Thu Jan 5 14:44:03 2023 +0100

    timers: Prevent union confusion from unexpected restart_syscall()
    
    [ Upstream commit 9f76d59173d9d146e96c66886b671c1915a5c5e5 ]
    
    The nanosleep syscalls use the restart_block mechanism, with a quirk:
    The `type` and `rmtp`/`compat_rmtp` fields are set up unconditionally on
    syscall entry, while the rest of the restart_block is only set up in the
    unlikely case that the syscall is actually interrupted by a signal (or
    pseudo-signal) that doesn't have a signal handler.
    
    If the restart_block was set up by a previous syscall (futex(...,
    FUTEX_WAIT, ...) or poll()) and hasn't been invalidated somehow since then,
    this will clobber some of the union fields used by futex_wait_restart() and
    do_restart_poll().
    
    If userspace afterwards wrongly calls the restart_syscall syscall,
    futex_wait_restart()/do_restart_poll() will read struct fields that have
    been clobbered.
    
    This doesn't actually lead to anything particularly interesting because
    none of the union fields contain trusted kernel data, and
    futex(..., FUTEX_WAIT, ...) and poll() aren't syscalls where it makes much
    sense to apply seccomp filters to their arguments.
    
    So the current consequences are just of the "if userspace does bad stuff,
    it can damage itself, and that's not a problem" flavor.
    
    But still, it seems like a hazard for future developers, so invalidate the
    restart_block when partly setting it up in the nanosleep syscalls.
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20230105134403.754986-1-jannh@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 781bff0a532fd9590eff75cc99634d2e75ae6625
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Fri Jan 6 08:59:51 2023 +0800

    thermal: intel: Fix unsigned comparison with less than zero
    
    [ Upstream commit e7fcfe67f9f410736b758969477b17ea285e8e6c ]
    
    The return value from the call to intel_tcc_get_tjmax() is int, which can
    be a negative error code. However, the return value is being assigned to
    an u32 variable 'tj_max', so making 'tj_max' an int.
    
    Eliminate the following warning:
    ./drivers/thermal/intel/intel_soc_dts_iosf.c:394:5-11: WARNING: Unsigned expression compared with zero: tj_max < 0
    
    Link: https://bugzilla.openanolis.cn/show_bug.cgi?id=3637
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Acked-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 744e538dcf27f06b44a4f50eb45c0f2417747d18
Author: Kalle Valo <quic_kvalo@quicinc.com>
Date:   Thu Dec 22 19:15:59 2022 +0200

    wifi: ath11k: debugfs: fix to work with multiple PCI devices
    
    [ Upstream commit 323d91d4684d238f6bc3693fed93caf795378fe0 ]
    
    ath11k fails to load if there are multiple ath11k PCI devices with same name:
    
     ath11k_pci 0000:01:00.0: Hardware name qcn9074 hw1.0
     debugfs: Directory 'ath11k' with parent '/' already present!
     ath11k_pci 0000:01:00.0: failed to create ath11k debugfs
     ath11k_pci 0000:01:00.0: failed to create soc core: -17
     ath11k_pci 0000:01:00.0: failed to init core: -17
     ath11k_pci: probe of 0000:01:00.0 failed with error -17
    
    Fix this by creating a directory for each ath11k device using schema
    <bus>-<devname>, for example "pci-0000:06:00.0". This directory created under
    the top-level ath11k directory, for example /sys/kernel/debug/ath11k.
    
    The reference to the toplevel ath11k directory is not stored anymore within ath11k, instead
    it's retrieved using debugfs_lookup(). If the directory does not exist it will
    be created. After the last directory from the ath11k directory is removed, for
    example when doing rmmod ath11k, the empty ath11k directory is left in place,
    it's a minor cosmetic issue anyway.
    
    Here's an example hierarchy with one WCN6855:
    
    ath11k
    `-- pci-0000:06:00.0
        |-- mac0
        |   |-- dfs_block_radar_events
        |   |-- dfs_simulate_radar
        |   |-- ext_rx_stats
        |   |-- ext_tx_stats
        |   |-- fw_dbglog_config
        |   |-- fw_stats
        |   |   |-- beacon_stats
        |   |   |-- pdev_stats
        |   |   `-- vdev_stats
        |   |-- htt_stats
        |   |-- htt_stats_reset
        |   |-- htt_stats_type
        |   `-- pktlog_filter
        |-- simulate_fw_crash
        `-- soc_dp_stats
    
    I didn't have a test setup where I could connect multiple ath11k devices to the
    same the host, so I have only tested this with one device.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.9
    Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.5.0.1-01208-QCAHKSWPL_SILICONZ-1
    Tested-on: QCN9074 hw1.0 PCI WLAN.HK.2.5.0.1-01208-QCAHKSWPL_SILICONZ-1
    
    Tested-by: Robert Marko <robert.marko@sartura.hr>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20221220121231.20120-1-kvalo@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d99d194e2f8c7809ebf8b27f345b6ce9a87c17bd
Author: Zqiang <qiang1.zhang@intel.com>
Date:   Thu Dec 1 07:45:33 2022 +0800

    rcu-tasks: Make rude RCU-Tasks work well with CPU hotplug
    
    [ Upstream commit ea5c8987fef20a8cca07e428aa28bc64649c5104 ]
    
    The synchronize_rcu_tasks_rude() function invokes rcu_tasks_rude_wait_gp()
    to wait one rude RCU-tasks grace period.  The rcu_tasks_rude_wait_gp()
    function in turn checks if there is only a single online CPU.  If so, it
    will immediately return, because a call to synchronize_rcu_tasks_rude()
    is by definition a grace period on a single-CPU system.  (We could
    have blocked!)
    
    Unfortunately, this check uses num_online_cpus() without synchronization,
    which can result in too-short grace periods.  To see this, consider the
    following scenario:
    
            CPU0                                   CPU1 (going offline)
                                              migration/1 task:
                                          cpu_stopper_thread
                                           -> take_cpu_down
                                              -> _cpu_disable
                                               (dec __num_online_cpus)
                                              ->cpuhp_invoke_callback
                                                    preempt_disable
                                                    access old_data0
               task1
     del old_data0                                  .....
     synchronize_rcu_tasks_rude()
     task1 schedule out
     ....
     task2 schedule in
     rcu_tasks_rude_wait_gp()
         ->__num_online_cpus == 1
           ->return
     ....
     task1 schedule in
     ->free old_data0
                                                    preempt_enable
    
    When CPU1 decrements __num_online_cpus, its value becomes 1.  However,
    CPU1 has not finished going offline, and will take one last trip through
    the scheduler and the idle loop before it actually stops executing
    instructions.  Because synchronize_rcu_tasks_rude() is mostly used for
    tracing, and because both the scheduler and the idle loop can be traced,
    this means that CPU0's prematurely ended grace period might disrupt the
    tracing on CPU1.  Given that this disruption might include CPU1 executing
    instructions in memory that was just now freed (and maybe reallocated),
    this is a matter of some concern.
    
    This commit therefore removes that problematic single-CPU check from the
    rcu_tasks_rude_wait_gp() function.  This dispenses with the single-CPU
    optimization, but there is no evidence indicating that this optimization
    is important.  In addition, synchronize_rcu_tasks_generic() contains a
    similar optimization (albeit only for early boot), which also splats.
    (As in exactly why are you invoking synchronize_rcu_tasks_rude() so
    early in boot, anyway???)
    
    It is OK for the synchronize_rcu_tasks_rude() function's check to be
    unsynchronized because the only times that this check can evaluate to
    true is when there is only a single CPU running with preemption
    disabled.
    
    While in the area, this commit also fixes a minor bug in which a
    call to synchronize_rcu_tasks_rude() would instead be attributed to
    synchronize_rcu_tasks().
    
    [ paulmck: Add "synchronize_" prefix and "()" suffix. ]
    
    Signed-off-by: Zqiang <qiang1.zhang@intel.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bf501f1bc78883222bba17aad9402deae11ef1e
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Fri Dec 16 15:55:48 2022 -0800

    rcu: Suppress smp_processor_id() complaint in synchronize_rcu_expedited_wait()
    
    [ Upstream commit 2d7f00b2f01301d6e41fd4a28030dab0442265be ]
    
    The normal grace period's RCU CPU stall warnings are invoked from the
    scheduling-clock interrupt handler, and can thus invoke smp_processor_id()
    with impunity, which allows them to directly invoke dump_cpu_task().
    In contrast, the expedited grace period's RCU CPU stall warnings are
    invoked from process context, which causes the dump_cpu_task() function's
    calls to smp_processor_id() to complain bitterly in debug kernels.
    
    This commit therefore causes synchronize_rcu_expedited_wait() to disable
    preemption around its call to dump_cpu_task().
    
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5657f3306031d4ee338d1a91ea5115f0f9c7af7
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Wed Dec 14 11:41:44 2022 -0800

    rcu: Make RCU_LOCKDEP_WARN() avoid early lockdep checks
    
    [ Upstream commit 0cae5ded535c3a80aed94f119bbd4ee3ae284a65 ]
    
    Currently, RCU_LOCKDEP_WARN() checks the condition before checking
    to see if lockdep is still enabled.  This is necessary to avoid the
    false-positive splats fixed by commit 3066820034b5dd ("rcu: Reject
    RCU_LOCKDEP_WARN() false positives").  However, the current state can
    result in false-positive splats during early boot before lockdep is fully
    initialized.  This commit therefore checks debug_lockdep_rcu_enabled()
    both before and after checking the condition, thus avoiding both sets
    of false-positive error reports.
    
    Reported-by: Steven Rostedt <rostedt@goodmis.org>
    Reported-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Reported-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Reviewed-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Boqun Feng <boqun.feng@gmail.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6ef66194bb4a6c18f5b9649bf62597909b040e4
Author: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
Date:   Tue Nov 15 13:34:58 2022 +0900

    wifi: brcmfmac: Fix potential stack-out-of-bounds in brcmf_c_preinit_dcmds()
    
    [ Upstream commit 0a06cadcc2a0044e4a117cc0e61436fc3a0dad69 ]
    
    This patch fixes a stack-out-of-bounds read in brcmfmac that occurs
    when 'buf' that is not null-terminated is passed as an argument of
    strsep() in brcmf_c_preinit_dcmds(). This buffer is filled with a firmware
    version string by memcpy() in brcmf_fil_iovar_data_get().
    The patch ensures buf is null-terminated.
    
    Found by a modified version of syzkaller.
    
    [   47.569679][ T1897] brcmfmac: brcmf_fw_alloc_request: using brcm/brcmfmac43236b for chip BCM43236/3
    [   47.582839][ T1897] brcmfmac: brcmf_c_process_clm_blob: no clm_blob available (err=-2), device may have limited channels available
    [   47.601565][ T1897] ==================================================================
    [   47.602574][ T1897] BUG: KASAN: stack-out-of-bounds in strsep+0x1b2/0x1f0
    [   47.603447][ T1897] Read of size 1 at addr ffffc90001f6f000 by task kworker/0:2/1897
    [   47.604336][ T1897]
    [   47.604621][ T1897] CPU: 0 PID: 1897 Comm: kworker/0:2 Tainted: G           O      5.14.0+ #131
    [   47.605617][ T1897] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    [   47.606907][ T1897] Workqueue: usb_hub_wq hub_event
    [   47.607453][ T1897] Call Trace:
    [   47.607801][ T1897]  dump_stack_lvl+0x8e/0xd1
    [   47.608295][ T1897]  print_address_description.constprop.0.cold+0xf/0x334
    [   47.609009][ T1897]  ? strsep+0x1b2/0x1f0
    [   47.609434][ T1897]  ? strsep+0x1b2/0x1f0
    [   47.609863][ T1897]  kasan_report.cold+0x83/0xdf
    [   47.610366][ T1897]  ? strsep+0x1b2/0x1f0
    [   47.610882][ T1897]  strsep+0x1b2/0x1f0
    [   47.611300][ T1897]  ? brcmf_fil_iovar_data_get+0x3a/0xf0
    [   47.611883][ T1897]  brcmf_c_preinit_dcmds+0x995/0xc40
    [   47.612434][ T1897]  ? brcmf_c_set_joinpref_default+0x100/0x100
    [   47.613078][ T1897]  ? rcu_read_lock_sched_held+0xa1/0xd0
    [   47.613662][ T1897]  ? rcu_read_lock_bh_held+0xb0/0xb0
    [   47.614208][ T1897]  ? lock_acquire+0x19d/0x4e0
    [   47.614704][ T1897]  ? find_held_lock+0x2d/0x110
    [   47.615236][ T1897]  ? brcmf_usb_deq+0x1a7/0x260
    [   47.615741][ T1897]  ? brcmf_usb_rx_fill_all+0x5a/0xf0
    [   47.616288][ T1897]  brcmf_attach+0x246/0xd40
    [   47.616758][ T1897]  ? wiphy_new_nm+0x1703/0x1dd0
    [   47.617280][ T1897]  ? kmemdup+0x43/0x50
    [   47.617720][ T1897]  brcmf_usb_probe+0x12de/0x1690
    [   47.618244][ T1897]  ? brcmf_usbdev_qinit.constprop.0+0x470/0x470
    [   47.618901][ T1897]  usb_probe_interface+0x2aa/0x760
    [   47.619429][ T1897]  ? usb_probe_device+0x250/0x250
    [   47.619950][ T1897]  really_probe+0x205/0xb70
    [   47.620435][ T1897]  ? driver_allows_async_probing+0x130/0x130
    [   47.621048][ T1897]  __driver_probe_device+0x311/0x4b0
    [   47.621595][ T1897]  ? driver_allows_async_probing+0x130/0x130
    [   47.622209][ T1897]  driver_probe_device+0x4e/0x150
    [   47.622739][ T1897]  __device_attach_driver+0x1cc/0x2a0
    [   47.623287][ T1897]  bus_for_each_drv+0x156/0x1d0
    [   47.623796][ T1897]  ? bus_rescan_devices+0x30/0x30
    [   47.624309][ T1897]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   47.624907][ T1897]  ? trace_hardirqs_on+0x46/0x160
    [   47.625437][ T1897]  __device_attach+0x23f/0x3a0
    [   47.625924][ T1897]  ? device_bind_driver+0xd0/0xd0
    [   47.626433][ T1897]  ? kobject_uevent_env+0x287/0x14b0
    [   47.627057][ T1897]  bus_probe_device+0x1da/0x290
    [   47.627557][ T1897]  device_add+0xb7b/0x1eb0
    [   47.628027][ T1897]  ? wait_for_completion+0x290/0x290
    [   47.628593][ T1897]  ? __fw_devlink_link_to_suppliers+0x5a0/0x5a0
    [   47.629249][ T1897]  usb_set_configuration+0xf59/0x16f0
    [   47.629829][ T1897]  usb_generic_driver_probe+0x82/0xa0
    [   47.630385][ T1897]  usb_probe_device+0xbb/0x250
    [   47.630927][ T1897]  ? usb_suspend+0x590/0x590
    [   47.631397][ T1897]  really_probe+0x205/0xb70
    [   47.631855][ T1897]  ? driver_allows_async_probing+0x130/0x130
    [   47.632469][ T1897]  __driver_probe_device+0x311/0x4b0
    [   47.633002][ T1897]  ? usb_generic_driver_match+0x75/0x90
    [   47.633573][ T1897]  ? driver_allows_async_probing+0x130/0x130
    [   47.634170][ T1897]  driver_probe_device+0x4e/0x150
    [   47.634703][ T1897]  __device_attach_driver+0x1cc/0x2a0
    [   47.635248][ T1897]  bus_for_each_drv+0x156/0x1d0
    [   47.635748][ T1897]  ? bus_rescan_devices+0x30/0x30
    [   47.636271][ T1897]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   47.636881][ T1897]  ? trace_hardirqs_on+0x46/0x160
    [   47.637396][ T1897]  __device_attach+0x23f/0x3a0
    [   47.637904][ T1897]  ? device_bind_driver+0xd0/0xd0
    [   47.638426][ T1897]  ? kobject_uevent_env+0x287/0x14b0
    [   47.638985][ T1897]  bus_probe_device+0x1da/0x290
    [   47.639512][ T1897]  device_add+0xb7b/0x1eb0
    [   47.639977][ T1897]  ? __fw_devlink_link_to_suppliers+0x5a0/0x5a0
    [   47.640612][ T1897]  ? kfree+0x14a/0x6b0
    [   47.641055][ T1897]  ? __usb_get_extra_descriptor+0x116/0x160
    [   47.641679][ T1897]  usb_new_device.cold+0x49c/0x1029
    [   47.642245][ T1897]  ? hub_disconnect+0x450/0x450
    [   47.642756][ T1897]  ? rwlock_bug.part.0+0x90/0x90
    [   47.643273][ T1897]  ? _raw_spin_unlock_irq+0x24/0x30
    [   47.643822][ T1897]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   47.644445][ T1897]  hub_event+0x1c98/0x3950
    [   47.644939][ T1897]  ? hub_port_debounce+0x2e0/0x2e0
    [   47.645467][ T1897]  ? check_irq_usage+0x861/0xf20
    [   47.645975][ T1897]  ? drain_workqueue+0x280/0x360
    [   47.646506][ T1897]  ? lock_release+0x640/0x640
    [   47.646994][ T1897]  ? rcu_read_lock_sched_held+0xa1/0xd0
    [   47.647572][ T1897]  ? rcu_read_lock_bh_held+0xb0/0xb0
    [   47.648111][ T1897]  ? lockdep_hardirqs_on_prepare+0x273/0x3e0
    [   47.648735][ T1897]  process_one_work+0x92b/0x1460
    [   47.649262][ T1897]  ? pwq_dec_nr_in_flight+0x330/0x330
    [   47.649816][ T1897]  ? rwlock_bug.part.0+0x90/0x90
    [   47.650336][ T1897]  worker_thread+0x95/0xe00
    [   47.650830][ T1897]  ? __kthread_parkme+0x115/0x1e0
    [   47.651361][ T1897]  ? process_one_work+0x1460/0x1460
    [   47.651904][ T1897]  kthread+0x3a1/0x480
    [   47.652329][ T1897]  ? set_kthread_struct+0x120/0x120
    [   47.652878][ T1897]  ret_from_fork+0x1f/0x30
    [   47.653370][ T1897]
    [   47.653608][ T1897]
    [   47.653848][ T1897] addr ffffc90001f6f000 is located in stack of task kworker/0:2/1897 at offset 512 in frame:
    [   47.654891][ T1897]  brcmf_c_preinit_dcmds+0x0/0xc40
    [   47.655442][ T1897]
    [   47.655690][ T1897] this frame has 4 objects:
    [   47.656151][ T1897]  [48, 56) 'ptr'
    [   47.656159][ T1897]  [80, 148) 'revinfo'
    [   47.656534][ T1897]  [192, 210) 'eventmask'
    [   47.656953][ T1897]  [256, 512) 'buf'
    [   47.657410][ T1897]
    [   47.658035][ T1897] Memory state around the buggy address:
    [   47.658743][ T1897]  ffffc90001f6ef00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   47.659577][ T1897]  ffffc90001f6ef80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   47.660394][ T1897] >ffffc90001f6f000: f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
    [   47.661199][ T1897]                    ^
    [   47.661625][ T1897]  ffffc90001f6f080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   47.662455][ T1897]  ffffc90001f6f100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1
    [   47.663318][ T1897] ==================================================================
    [   47.664147][ T1897] Disabling lock debugging due to kernel taint
    
    Reported-by: Dokyung Song <dokyungs@yonsei.ac.kr>
    Reported-by: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
    Reported-by: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
    Signed-off-by: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221115043458.37562-1-jisoo.jang@yonsei.ac.kr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99ff971b62e5bd5dee65bbe9777375206f5db791
Author: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
Date:   Mon Dec 5 10:43:08 2022 +0900

    wifi: ath9k: Fix use-after-free in ath9k_hif_usb_disconnect()
    
    [ Upstream commit f099c5c9e2ba08a379bd354a82e05ef839ae29ac ]
    
    This patch fixes a use-after-free in ath9k that occurs in
    ath9k_hif_usb_disconnect() when ath9k_destroy_wmi() is trying to access
    'drv_priv' that has already been freed by ieee80211_free_hw(), called by
    ath9k_htc_hw_deinit(). The patch moves ath9k_destroy_wmi() before
    ieee80211_free_hw(). Note that urbs from the driver should be killed
    before freeing 'wmi' with ath9k_destroy_wmi() as their callbacks will
    access 'wmi'.
    
    Found by a modified version of syzkaller.
    
    ==================================================================
    BUG: KASAN: use-after-free in ath9k_destroy_wmi+0x38/0x40
    Read of size 8 at addr ffff8881069132a0 by task kworker/0:1/7
    
    CPU: 0 PID: 7 Comm: kworker/0:1 Tainted: G O 5.14.0+ #131
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    Workqueue: usb_hub_wq hub_event
    Call Trace:
     dump_stack_lvl+0x8e/0xd1
     print_address_description.constprop.0.cold+0x93/0x334
     ? ath9k_destroy_wmi+0x38/0x40
     ? ath9k_destroy_wmi+0x38/0x40
     kasan_report.cold+0x83/0xdf
     ? ath9k_destroy_wmi+0x38/0x40
     ath9k_destroy_wmi+0x38/0x40
     ath9k_hif_usb_disconnect+0x329/0x3f0
     ? ath9k_hif_usb_suspend+0x120/0x120
     ? usb_disable_interface+0xfc/0x180
     usb_unbind_interface+0x19b/0x7e0
     ? usb_autoresume_device+0x50/0x50
     device_release_driver_internal+0x44d/0x520
     bus_remove_device+0x2e5/0x5a0
     device_del+0x5b2/0xe30
     ? __device_link_del+0x370/0x370
     ? usb_remove_ep_devs+0x43/0x80
     ? remove_intf_ep_devs+0x112/0x1a0
     usb_disable_device+0x1e3/0x5a0
     usb_disconnect+0x267/0x870
     hub_event+0x168d/0x3950
     ? rcu_read_lock_sched_held+0xa1/0xd0
     ? hub_port_debounce+0x2e0/0x2e0
     ? check_irq_usage+0x860/0xf20
     ? drain_workqueue+0x281/0x360
     ? lock_release+0x640/0x640
     ? rcu_read_lock_sched_held+0xa1/0xd0
     ? rcu_read_lock_bh_held+0xb0/0xb0
     ? lockdep_hardirqs_on_prepare+0x273/0x3e0
     process_one_work+0x92b/0x1460
     ? pwq_dec_nr_in_flight+0x330/0x330
     ? rwlock_bug.part.0+0x90/0x90
     worker_thread+0x95/0xe00
     ? __kthread_parkme+0x115/0x1e0
     ? process_one_work+0x1460/0x1460
     kthread+0x3a1/0x480
     ? set_kthread_struct+0x120/0x120
     ret_from_fork+0x1f/0x30
    
    The buggy address belongs to the page:
    page:ffffea00041a44c0 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x106913
    flags: 0x200000000000000(node=0|zone=2)
    raw: 0200000000000000 0000000000000000 dead000000000122 0000000000000000
    raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    page_owner tracks the page as freed
    page last allocated via order 3, migratetype Unmovable, gfp_mask 0x40dc0(GFP_KERNEL|__GFP_COMP|__GFP_ZERO), pid 7, ts 38347963444, free_ts 41399957635
     prep_new_page+0x1aa/0x240
     get_page_from_freelist+0x159a/0x27c0
     __alloc_pages+0x2da/0x6a0
     alloc_pages+0xec/0x1e0
     kmalloc_order+0x39/0xf0
     kmalloc_order_trace+0x19/0x120
     __kmalloc+0x308/0x390
     wiphy_new_nm+0x6f5/0x1dd0
     ieee80211_alloc_hw_nm+0x36d/0x2230
     ath9k_htc_probe_device+0x9d/0x1e10
     ath9k_htc_hw_init+0x34/0x50
     ath9k_hif_usb_firmware_cb+0x25f/0x4e0
     request_firmware_work_func+0x131/0x240
     process_one_work+0x92b/0x1460
     worker_thread+0x95/0xe00
     kthread+0x3a1/0x480
    page last free stack trace:
     free_pcp_prepare+0x3d3/0x7f0
     free_unref_page+0x1e/0x3d0
     device_release+0xa4/0x240
     kobject_put+0x186/0x4c0
     put_device+0x20/0x30
     ath9k_htc_disconnect_device+0x1cf/0x2c0
     ath9k_htc_hw_deinit+0x26/0x30
     ath9k_hif_usb_disconnect+0x2d9/0x3f0
     usb_unbind_interface+0x19b/0x7e0
     device_release_driver_internal+0x44d/0x520
     bus_remove_device+0x2e5/0x5a0
     device_del+0x5b2/0xe30
     usb_disable_device+0x1e3/0x5a0
     usb_disconnect+0x267/0x870
     hub_event+0x168d/0x3950
     process_one_work+0x92b/0x1460
    
    Memory state around the buggy address:
     ffff888106913180: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
     ffff888106913200: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    >ffff888106913280: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
                                   ^
     ffff888106913300: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
     ffff888106913380: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    ==================================================================
    
    Reported-by: Dokyung Song <dokyungs@yonsei.ac.kr>
    Reported-by: Jisoo Jang <jisoo.jang@yonsei.ac.kr>
    Reported-by: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
    Signed-off-by: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20221205014308.1617597-1-linuxlovemin@yonsei.ac.kr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e291810fe83a384700eb24a1f714966391ed562
Author: Li Nan <linan122@huawei.com>
Date:   Tue Jan 17 15:08:05 2023 +0800

    blk-iocost: fix divide by 0 error in calc_lcoefs()
    
    [ Upstream commit 984af1e66b4126cf145153661cc24c213e2ec231 ]
    
    echo max of u64 to cost.model can cause divide by 0 error.
    
      # echo 8:0 rbps=18446744073709551615 > /sys/fs/cgroup/io.cost.model
    
      divide error: 0000 [#1] PREEMPT SMP
      RIP: 0010:calc_lcoefs+0x4c/0xc0
      Call Trace:
       <TASK>
       ioc_refresh_params+0x2b3/0x4f0
       ioc_cost_model_write+0x3cb/0x4c0
       ? _copy_from_iter+0x6d/0x6c0
       ? kernfs_fop_write_iter+0xfc/0x270
       cgroup_file_write+0xa0/0x200
       kernfs_fop_write_iter+0x17d/0x270
       vfs_write+0x414/0x620
       ksys_write+0x73/0x160
       __x64_sys_write+0x1e/0x30
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    calc_lcoefs() uses the input value of cost.model in DIV_ROUND_UP_ULL,
    overflow would happen if bps plus IOC_PAGE_SIZE is greater than
    ULLONG_MAX, it can cause divide by 0 error.
    
    Fix the problem by setting basecost
    
    Signed-off-by: Li Nan <linan122@huawei.com>
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Link: https://lore.kernel.org/r/20230117070806.3857142-5-yukuai1@huaweicloud.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 199624f3144d79fab1cff533ce6a4b82390520a3
Author: Markuss Broks <markuss.broks@gmail.com>
Date:   Sat Jan 21 22:18:42 2023 +0200

    ARM: dts: exynos: Use Exynos5420 compatible for the MIPI video phy
    
    [ Upstream commit 5d5aa219a790d61cad2c38e1aa32058f16ad2f0b ]
    
    For some reason, the driver adding support for Exynos5420 MIPI phy
    back in 2016 wasn't used on Exynos5420, which caused a kernel panic.
    Add the proper compatible for it.
    
    Signed-off-by: Markuss Broks <markuss.broks@gmail.com>
    Link: https://lore.kernel.org/r/20230121201844.46872-2-markuss.broks@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f34cc701ea0a0a915b17ad5b108341bd78e8a634
Author: Jan Kara <jack@suse.cz>
Date:   Thu Sep 29 16:34:45 2022 +0200

    udf: Define EFSCORRUPTED error code
    
    [ Upstream commit 3d2d7e61553dbcc8ba45201d8ae4f383742c8202 ]
    
    Similarly to other filesystems define EFSCORRUPTED error code for
    reporting internal filesystem corruption.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91f9d708716daf9dfc4d585ff57ef5ef05b69437
Author: Bjorn Andersson <quic_bjorande@quicinc.com>
Date:   Tue Feb 14 15:42:31 2023 -0800

    rpmsg: glink: Avoid infinite loop on intent for missing channel
    
    [ Upstream commit 3e74ec2f39362bffbd42854acbb67c7f4cb808f9 ]
    
    In the event that an intent advertisement arrives on an unknown channel
    the fifo is not advanced, resulting in the same message being handled
    over and over.
    
    Fixes: dacbb35e930f ("rpmsg: glink: Receive and store the remote intent buffers")
    Signed-off-by: Bjorn Andersson <quic_bjorande@quicinc.com>
    Reviewed-by: Chris Lew <quic_clew@quicinc.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230214234231.2069751-1-quic_bjorande@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b72ceef174041b9e74fd2897876841737fd8f19
Author: Tasos Sahanidis <tasos@tasossah.com>
Date:   Thu Jan 26 12:00:59 2023 +0100

    media: saa7134: Use video_unregister_device for radio_dev
    
    [ Upstream commit bc7635c6435c77a0c168e2cc6535740adfaff4e4 ]
    
    The radio device doesn't use vb2, thus calling vb2_video_unregister_device()
    which results in the following warning being printed on module unload.
    
    WARNING: CPU: 1 PID: 215963 at drivers/media/common/videobuf2/videobuf2-v4l2.c:1236 vb2_video_unregister_device+0xc6/0xe0 [videobuf2_v4l2]
    
    Fixes: 11788d9b7e91 ("media: media/pci: use vb2_video_unregister_device()")
    Signed-off-by: Tasos Sahanidis <tasos@tasossah.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42f8ba8355682f6c4125b75503cac0cef4ac91d3
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Mon Jan 23 03:04:38 2023 +0100

    media: usb: siano: Fix use after free bugs caused by do_submit_urb
    
    [ Upstream commit ebad8e731c1c06adf04621d6fd327b860c0861b5 ]
    
    There are UAF bugs caused by do_submit_urb(). One of the KASan reports
    is shown below:
    
    [   36.403605] BUG: KASAN: use-after-free in worker_thread+0x4a2/0x890
    [   36.406105] Read of size 8 at addr ffff8880059600e8 by task kworker/0:2/49
    [   36.408316]
    [   36.408867] CPU: 0 PID: 49 Comm: kworker/0:2 Not tainted 6.2.0-rc3-15798-g5a41237ad1d4-dir8
    [   36.411696] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g15584
    [   36.416157] Workqueue:  0x0 (events)
    [   36.417654] Call Trace:
    [   36.418546]  <TASK>
    [   36.419320]  dump_stack_lvl+0x96/0xd0
    [   36.420522]  print_address_description+0x75/0x350
    [   36.421992]  print_report+0x11b/0x250
    [   36.423174]  ? _raw_spin_lock_irqsave+0x87/0xd0
    [   36.424806]  ? __virt_addr_valid+0xcf/0x170
    [   36.426069]  ? worker_thread+0x4a2/0x890
    [   36.427355]  kasan_report+0x131/0x160
    [   36.428556]  ? worker_thread+0x4a2/0x890
    [   36.430053]  worker_thread+0x4a2/0x890
    [   36.431297]  ? worker_clr_flags+0x90/0x90
    [   36.432479]  kthread+0x166/0x190
    [   36.433493]  ? kthread_blkcg+0x50/0x50
    [   36.434669]  ret_from_fork+0x22/0x30
    [   36.435923]  </TASK>
    [   36.436684]
    [   36.437215] Allocated by task 24:
    [   36.438289]  kasan_set_track+0x50/0x80
    [   36.439436]  __kasan_kmalloc+0x89/0xa0
    [   36.440566]  smsusb_probe+0x374/0xc90
    [   36.441920]  usb_probe_interface+0x2d1/0x4c0
    [   36.443253]  really_probe+0x1d5/0x580
    [   36.444539]  __driver_probe_device+0xe3/0x130
    [   36.446085]  driver_probe_device+0x49/0x220
    [   36.447423]  __device_attach_driver+0x19e/0x1b0
    [   36.448931]  bus_for_each_drv+0xcb/0x110
    [   36.450217]  __device_attach+0x132/0x1f0
    [   36.451470]  bus_probe_device+0x59/0xf0
    [   36.452563]  device_add+0x4ec/0x7b0
    [   36.453830]  usb_set_configuration+0xc63/0xe10
    [   36.455230]  usb_generic_driver_probe+0x3b/0x80
    [   36.456166] printk: console [ttyGS0] disabled
    [   36.456569]  usb_probe_device+0x90/0x110
    [   36.459523]  really_probe+0x1d5/0x580
    [   36.461027]  __driver_probe_device+0xe3/0x130
    [   36.462465]  driver_probe_device+0x49/0x220
    [   36.463847]  __device_attach_driver+0x19e/0x1b0
    [   36.465229]  bus_for_each_drv+0xcb/0x110
    [   36.466466]  __device_attach+0x132/0x1f0
    [   36.467799]  bus_probe_device+0x59/0xf0
    [   36.469010]  device_add+0x4ec/0x7b0
    [   36.470125]  usb_new_device+0x863/0xa00
    [   36.471374]  hub_event+0x18c7/0x2220
    [   36.472746]  process_one_work+0x34c/0x5b0
    [   36.474041]  worker_thread+0x4b7/0x890
    [   36.475216]  kthread+0x166/0x190
    [   36.476267]  ret_from_fork+0x22/0x30
    [   36.477447]
    [   36.478160] Freed by task 24:
    [   36.479239]  kasan_set_track+0x50/0x80
    [   36.480512]  kasan_save_free_info+0x2b/0x40
    [   36.481808]  ____kasan_slab_free+0x122/0x1a0
    [   36.483173]  __kmem_cache_free+0xc4/0x200
    [   36.484563]  smsusb_term_device+0xcd/0xf0
    [   36.485896]  smsusb_probe+0xc85/0xc90
    [   36.486976]  usb_probe_interface+0x2d1/0x4c0
    [   36.488303]  really_probe+0x1d5/0x580
    [   36.489498]  __driver_probe_device+0xe3/0x130
    [   36.491140]  driver_probe_device+0x49/0x220
    [   36.492475]  __device_attach_driver+0x19e/0x1b0
    [   36.493988]  bus_for_each_drv+0xcb/0x110
    [   36.495171]  __device_attach+0x132/0x1f0
    [   36.496617]  bus_probe_device+0x59/0xf0
    [   36.497875]  device_add+0x4ec/0x7b0
    [   36.498972]  usb_set_configuration+0xc63/0xe10
    [   36.500264]  usb_generic_driver_probe+0x3b/0x80
    [   36.501740]  usb_probe_device+0x90/0x110
    [   36.503084]  really_probe+0x1d5/0x580
    [   36.504241]  __driver_probe_device+0xe3/0x130
    [   36.505548]  driver_probe_device+0x49/0x220
    [   36.506766]  __device_attach_driver+0x19e/0x1b0
    [   36.508368]  bus_for_each_drv+0xcb/0x110
    [   36.509646]  __device_attach+0x132/0x1f0
    [   36.510911]  bus_probe_device+0x59/0xf0
    [   36.512103]  device_add+0x4ec/0x7b0
    [   36.513215]  usb_new_device+0x863/0xa00
    [   36.514736]  hub_event+0x18c7/0x2220
    [   36.516130]  process_one_work+0x34c/0x5b0
    [   36.517396]  worker_thread+0x4b7/0x890
    [   36.518591]  kthread+0x166/0x190
    [   36.519599]  ret_from_fork+0x22/0x30
    [   36.520851]
    [   36.521405] Last potentially related work creation:
    [   36.523143]  kasan_save_stack+0x3f/0x60
    [   36.524275]  kasan_record_aux_stack_noalloc+0x9d/0xb0
    [   36.525831]  insert_work+0x25/0x130
    [   36.527039]  __queue_work+0x4d4/0x620
    [   36.528236]  queue_work_on+0x72/0xb0
    [   36.529344]  __usb_hcd_giveback_urb+0x13f/0x1b0
    [   36.530819]  dummy_timer+0x350/0x1a40
    [   36.532149]  call_timer_fn+0x2c/0x190
    [   36.533567]  expire_timers+0x69/0x1f0
    [   36.534736]  __run_timers+0x289/0x2d0
    [   36.535841]  run_timer_softirq+0x2d/0x60
    [   36.537110]  __do_softirq+0x116/0x380
    [   36.538377]
    [   36.538950] Second to last potentially related work creation:
    [   36.540855]  kasan_save_stack+0x3f/0x60
    [   36.542084]  kasan_record_aux_stack_noalloc+0x9d/0xb0
    [   36.543592]  insert_work+0x25/0x130
    [   36.544891]  __queue_work+0x4d4/0x620
    [   36.546168]  queue_work_on+0x72/0xb0
    [   36.547328]  __usb_hcd_giveback_urb+0x13f/0x1b0
    [   36.548805]  dummy_timer+0x350/0x1a40
    [   36.550116]  call_timer_fn+0x2c/0x190
    [   36.551570]  expire_timers+0x69/0x1f0
    [   36.552762]  __run_timers+0x289/0x2d0
    [   36.553916]  run_timer_softirq+0x2d/0x60
    [   36.555118]  __do_softirq+0x116/0x380
    [   36.556239]
    [   36.556807] The buggy address belongs to the object at ffff888005960000
    [   36.556807]  which belongs to the cache kmalloc-4k of size 4096
    [   36.560652] The buggy address is located 232 bytes inside of
    [   36.560652]  4096-byte region [ffff888005960000, ffff888005961000)
    [   36.564791]
    [   36.565355] The buggy address belongs to the physical page:
    [   36.567212] page:000000004f0a0731 refcount:1 mapcount:0 mapping:0000000000000000 index:0x00
    [   36.570534] head:000000004f0a0731 order:3 compound_mapcount:0 subpages_mapcount:0 compound0
    [   36.573717] flags: 0x100000000010200(slab|head|node=0|zone=1)
    [   36.575481] raw: 0100000000010200 ffff888001042140 dead000000000122 0000000000000000
    [   36.577842] raw: 0000000000000000 0000000000040004 00000001ffffffff 0000000000000000
    [   36.580175] page dumped because: kasan: bad access detected
    [   36.581994]
    [   36.582548] Memory state around the buggy address:
    [   36.583983]  ffff88800595ff80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [   36.586240]  ffff888005960000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   36.588884] >ffff888005960080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   36.591071]                                                           ^
    [   36.593295]  ffff888005960100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   36.595705]  ffff888005960180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   36.598026] ==================================================================
    [   36.600224] Disabling lock debugging due to kernel taint
    [   36.602681] general protection fault, probably for non-canonical address 0x43600a000000060I
    [   36.607129] CPU: 0 PID: 49 Comm: kworker/0:2 Tainted: G    B              6.2.0-rc3-15798-8
    [   36.611115] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g15584
    [   36.615026] Workqueue: events do_submit_urb
    [   36.616290] RIP: 0010:_raw_spin_lock_irqsave+0x8a/0xd0
    [   36.618107] Code: 24 00 00 00 00 48 89 df be 04 00 00 00 e8 9e b5 c6 fe 48 89 ef be 04 00 5
    [   36.623522] RSP: 0018:ffff888004b6fcf0 EFLAGS: 00010046
    [   36.625072] RAX: 0000000000000000 RBX: 043600a000000060 RCX: ffffffff9fc0e0d7
    [   36.627206] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: ffff888004b6fcf0
    [   36.629813] RBP: ffff888004b6fcf0 R08: dffffc0000000000 R09: ffffed100096df9f
    [   36.631974] R10: dfffe9100096dfa0 R11: 1ffff1100096df9e R12: ffff888005960020
    [   36.634285] R13: ffff8880059600f0 R14: 0000000000000246 R15: 0000000000000001
    [   36.636438] FS:  0000000000000000(0000) GS:ffff88806d600000(0000) knlGS:0000000000000000
    [   36.639092] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   36.640951] CR2: 00007f07476819a3 CR3: 0000000004a34000 CR4: 00000000000006f0
    [   36.643411] Call Trace:
    [   36.644215]  <TASK>
    [   36.644902]  smscore_getbuffer+0x3e/0x1e0
    [   36.646147]  do_submit_urb+0x4f/0x190
    [   36.647449]  process_one_work+0x34c/0x5b0
    [   36.648777]  worker_thread+0x4b7/0x890
    [   36.649984]  ? worker_clr_flags+0x90/0x90
    [   36.651166]  kthread+0x166/0x190
    [   36.652151]  ? kthread_blkcg+0x50/0x50
    [   36.653547]  ret_from_fork+0x22/0x30
    [   36.655051]  </TASK>
    [   36.655733] Modules linked in:
    [   36.656787] ---[ end trace 0000000000000000 ]---
    [   36.658328] RIP: 0010:_raw_spin_lock_irqsave+0x8a/0xd0
    [   36.660045] Code: 24 00 00 00 00 48 89 df be 04 00 00 00 e8 9e b5 c6 fe 48 89 ef be 04 00 5
    [   36.665730] RSP: 0018:ffff888004b6fcf0 EFLAGS: 00010046
    [   36.667448] RAX: 0000000000000000 RBX: 043600a000000060 RCX: ffffffff9fc0e0d7
    [   36.669675] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: ffff888004b6fcf0
    [   36.672645] RBP: ffff888004b6fcf0 R08: dffffc0000000000 R09: ffffed100096df9f
    [   36.674921] R10: dfffe9100096dfa0 R11: 1ffff1100096df9e R12: ffff888005960020
    [   36.677034] R13: ffff8880059600f0 R14: 0000000000000246 R15: 0000000000000001
    [   36.679184] FS:  0000000000000000(0000) GS:ffff88806d600000(0000) knlGS:0000000000000000
    [   36.681655] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   36.683383] CR2: 00007f07476819a3 CR3: 0000000004a34000 CR4: 00000000000006f0
    [   36.685733] Kernel panic - not syncing: Fatal exception
    [   36.688585] Kernel Offset: 0x1d400000 from 0xffffffff81000000 (relocation range: 0xfffffff)
    [   36.692199] ---[ end Kernel panic - not syncing: Fatal exception ]---
    
    When the siano device is plugged in, it may call the following functions
    to initialize the device.
    
    smsusb_probe()-->smsusb_init_device()-->smscore_start_device().
    
    When smscore_start_device() gets failed, the function smsusb_term_device()
    will be called and smsusb_device_t will be deallocated. Although we use
    usb_kill_urb() in smsusb_stop_streaming() to cancel transfer requests
    and wait for them to finish, the worker threads that are scheduled by
    smsusb_onresponse() may be still running. As a result, the UAF bugs
    could happen.
    
    We add cancel_work_sync() in smsusb_stop_streaming() in order that the
    worker threads could finish before the smsusb_device_t is deallocated.
    
    Fixes: dd47fbd40e6e ("[media] smsusb: don't sleep while atomic")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc2f9c8eb1ee470e055d6d383027077d072899d8
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Thu Jan 26 14:03:51 2023 +0100

    media: i2c: ov7670: 0 instead of -EINVAL was returned
    
    [ Upstream commit 6a4c664539e6de9b32b65ddcf767ec1bcc1d7f8a ]
    
    If the media bus is unsupported, then return -EINVAL. Instead it
    returned 'ret' which happened to be 0.
    
    This fixes a smatch warning:
    
    ov7670.c:1843 ov7670_parse_dt() warn: missing error code? 'ret'
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: 01b8444828fc ("media: v4l2: i2c: ov7670: Implement OF mbus configuration")
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78da5a378bdacd5bf68c3a6389bdc1dd0c0f5b3c
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Tue Jan 24 08:55:33 2023 +0100

    media: rc: Fix use-after-free bugs caused by ene_tx_irqsim()
    
    [ Upstream commit 29b0589a865b6f66d141d79b2dd1373e4e50fe17 ]
    
    When the ene device is detaching, function ene_remove() will
    be called. But there is no function to cancel tx_sim_timer
    in ene_remove(), the timer handler ene_tx_irqsim() could race
    with ene_remove(). As a result, the UAF bugs could happen,
    the process is shown below.
    
        (cleanup routine)          |        (timer routine)
                                   | mod_timer(&dev->tx_sim_timer, ..)
    ene_remove()                   | (wait a time)
                                   | ene_tx_irqsim()
                                   |   dev->hw_lock //USE
                                   |   ene_tx_sample(dev) //USE
    
    Fix by adding del_timer_sync(&dev->tx_sim_timer) in ene_remove(),
    The tx_sim_timer could stop before ene device is deallocated.
    
    What's more, The rc_unregister_device() and del_timer_sync()
    should be called first in ene_remove() and the deallocated
    functions such as free_irq(), release_region() and so on
    should be called behind them. Because the rc_unregister_device()
    is well synchronized. Otherwise, race conditions may happen. The
    situations that may lead to race conditions are shown below.
    
    Firstly, the rx receiver is disabled with ene_rx_disable()
    before rc_unregister_device() in ene_remove(), which means it
    can be enabled again if a process opens /dev/lirc0 between
    ene_rx_disable() and rc_unregister_device().
    
    Secondly, the irqaction descriptor is freed by free_irq()
    before the rc device is unregistered, which means irqaction
    descriptor may be accessed again after it is deallocated.
    
    Thirdly, the timer can call ene_tx_sample() that can write
    to the io ports, which means the io ports could be accessed
    again after they are deallocated by release_region().
    
    Therefore, the rc_unregister_device() and del_timer_sync()
    should be called first in ene_remove().
    
    Suggested by: Sean Young <sean@mess.org>
    
    Fixes: 9ea53b74df9c ("V4L/DVB: STAGING: remove lirc_ene0100 driver")
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6c3b4ae31664e2b52e31a80b231c6f37f370c97
Author: Jai Luthra <j-luthra@ti.com>
Date:   Tue Jan 17 09:16:23 2023 +0100

    media: i2c: imx219: Fix binning for RAW8 capture
    
    [ Upstream commit ef86447e775fb1f2ced00d4c7fff2c0a1c63f165 ]
    
    2x2 binning works fine for RAW10 capture, but for RAW8 1232p mode it
    leads to corrupted frames [1][2].
    
    Using the special 2x2 analog binning mode fixes the issue, but causes
    artefacts for RAW10 1232p capture. So here we choose the binning mode
    depending upon the frame format selected.
    
    As both binning modes work fine for 480p RAW8 and RAW10 capture, it can
    share the same code path as 1232p for selecting binning mode.
    
    [1] https://forums.raspberrypi.com/viewtopic.php?t=332103
    [2] https://github.com/raspberrypi/libcamera-apps/issues/281
    
    Fixes: 22da1d56e982 ("media: i2c: imx219: Add support for RAW8 bit bayer format")
    Signed-off-by: Jai Luthra <j-luthra@ti.com>
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a34288e3a1169abc6509c943fc76ddc43843ec9c
Author: Adam Ford <aford173@gmail.com>
Date:   Tue Dec 20 13:07:53 2022 +0100

    media: i2c: imx219: Split common registers from mode tables
    
    [ Upstream commit 8508455961d5a9e8907bcfd8dcd58f19d9b6ce47 ]
    
    There are four modes, and each mode has a table of registers.
    Some of the registers are common to all modes, so create new
    tables for these common registers to reduce duplicate code.
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Stable-dep-of: ef86447e775f ("media: i2c: imx219: Fix binning for RAW8 capture")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09a0410886aa80269d5fee39a5d61dde98694f90
Author: Sameer Puri <purisame@spuri.io>
Date:   Mon Apr 13 17:51:47 2020 +0200

    media: i2c: imx219: remove redundant writes
    
    [ Upstream commit fbef89886da6d7735d20fdde16a1ee6ed6c6ab56 ]
    
    These writes to 0x162, 0x163 already appear earlier in the struct for
    the 1920x1080 mode and do not need to be repeated.
    
    Signed-off-by: Sameer Puri <purisame@spuri.io>
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Stable-dep-of: ef86447e775f ("media: i2c: imx219: Fix binning for RAW8 capture")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfaafeb8e9537969e8dba75491f732478c7fa9d6
Author: Yuan Can <yuancan@huawei.com>
Date:   Thu Dec 8 09:06:25 2022 +0100

    media: i2c: ov772x: Fix memleak in ov772x_probe()
    
    [ Upstream commit 7485edb2b6ca5960205c0a49bedfd09bba30e521 ]
    
    A memory leak was reported when testing ov772x with bpf mock device:
    
    AssertionError: unreferenced object 0xffff888109afa7a8 (size 8):
      comm "python3", pid 279, jiffies 4294805921 (age 20.681s)
      hex dump (first 8 bytes):
        80 22 88 15 81 88 ff ff                          ."......
      backtrace:
        [<000000009990b438>] __kmalloc_node+0x44/0x1b0
        [<000000009e32f7d7>] kvmalloc_node+0x34/0x180
        [<00000000faf48134>] v4l2_ctrl_handler_init_class+0x11d/0x180 [videodev]
        [<00000000da376937>] ov772x_probe+0x1c3/0x68c [ov772x]
        [<000000003f0d225e>] i2c_device_probe+0x28d/0x680
        [<00000000e0b6db89>] really_probe+0x17c/0x3f0
        [<000000001b19fcee>] __driver_probe_device+0xe3/0x170
        [<0000000048370519>] driver_probe_device+0x49/0x120
        [<000000005ead07a0>] __device_attach_driver+0xf7/0x150
        [<0000000043f452b8>] bus_for_each_drv+0x114/0x180
        [<00000000358e5596>] __device_attach+0x1e5/0x2d0
        [<0000000043f83c5d>] bus_probe_device+0x126/0x140
        [<00000000ee0f3046>] device_add+0x810/0x1130
        [<00000000e0278184>] i2c_new_client_device+0x359/0x4f0
        [<0000000070baf34f>] of_i2c_register_device+0xf1/0x110
        [<00000000a9f2159d>] of_i2c_notify+0x100/0x160
    unreferenced object 0xffff888119825c00 (size 256):
      comm "python3", pid 279, jiffies 4294805921 (age 20.681s)
      hex dump (first 32 bytes):
        00 b4 a5 17 81 88 ff ff 00 5e 82 19 81 88 ff ff  .........^......
        10 5c 82 19 81 88 ff ff 10 5c 82 19 81 88 ff ff  .\.......\......
      backtrace:
        [<000000009990b438>] __kmalloc_node+0x44/0x1b0
        [<000000009e32f7d7>] kvmalloc_node+0x34/0x180
        [<0000000073d88e0b>] v4l2_ctrl_new.cold+0x19b/0x86f [videodev]
        [<00000000b1f576fb>] v4l2_ctrl_new_std+0x16f/0x210 [videodev]
        [<00000000caf7ac99>] ov772x_probe+0x1fa/0x68c [ov772x]
        [<000000003f0d225e>] i2c_device_probe+0x28d/0x680
        [<00000000e0b6db89>] really_probe+0x17c/0x3f0
        [<000000001b19fcee>] __driver_probe_device+0xe3/0x170
        [<0000000048370519>] driver_probe_device+0x49/0x120
        [<000000005ead07a0>] __device_attach_driver+0xf7/0x150
        [<0000000043f452b8>] bus_for_each_drv+0x114/0x180
        [<00000000358e5596>] __device_attach+0x1e5/0x2d0
        [<0000000043f83c5d>] bus_probe_device+0x126/0x140
        [<00000000ee0f3046>] device_add+0x810/0x1130
        [<00000000e0278184>] i2c_new_client_device+0x359/0x4f0
        [<0000000070baf34f>] of_i2c_register_device+0xf1/0x110
    
    The reason is that if priv->hdl.error is set, ov772x_probe() jumps to the
    error_mutex_destroy without doing v4l2_ctrl_handler_free(), and all
    resources allocated in v4l2_ctrl_handler_init() and v4l2_ctrl_new_std()
    are leaked.
    
    Fixes: 1112babde214 ("media: i2c: Copy ov772x soc_camera sensor driver")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcae9115a163198dce9126aa8bedc1c007ec30ed
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Thu Dec 8 08:59:38 2022 +0100

    media: ov5675: Fix memleak in ov5675_init_controls()
    
    [ Upstream commit dd74ed6c213003533e3abf4c204374ef01d86978 ]
    
    There is a kmemleak when testing the media/i2c/ov5675.c with bpf mock
    device:
    
    AssertionError: unreferenced object 0xffff888107362160 (size 16):
      comm "python3", pid 277, jiffies 4294832798 (age 20.722s)
      hex dump (first 16 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000abe7d67c>] __kmalloc_node+0x44/0x1b0
        [<000000008a725aac>] kvmalloc_node+0x34/0x180
        [<000000009a53cd11>] v4l2_ctrl_handler_init_class+0x11d/0x180
    [videodev]
        [<0000000055b46db0>] ov5675_probe+0x38b/0x897 [ov5675]
        [<00000000153d886c>] i2c_device_probe+0x28d/0x680
        [<000000004afb7e8f>] really_probe+0x17c/0x3f0
        [<00000000ff2f18e4>] __driver_probe_device+0xe3/0x170
        [<000000000a001029>] driver_probe_device+0x49/0x120
        [<00000000e39743c7>] __device_attach_driver+0xf7/0x150
        [<00000000d32fd070>] bus_for_each_drv+0x114/0x180
        [<000000009083ac41>] __device_attach+0x1e5/0x2d0
        [<0000000015b4a830>] bus_probe_device+0x126/0x140
        [<000000007813deaf>] device_add+0x810/0x1130
        [<000000007becb867>] i2c_new_client_device+0x386/0x540
        [<000000007f9cf4b4>] of_i2c_register_device+0xf1/0x110
        [<00000000ebfdd032>] of_i2c_notify+0xfc/0x1f0
    
    ov5675_init_controls() won't clean all the allocated resources in fail
    path, which may causes the memleaks. Add v4l2_ctrl_handler_free() to
    prevent memleak.
    
    Fixes: bf27502b1f3b ("media: ov5675: Add support for OV5675 sensor")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a163ee11345d8322321c28bd61631de32455b987
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Thu Dec 8 08:59:37 2022 +0100

    media: ov2740: Fix memleak in ov2740_init_controls()
    
    [ Upstream commit 2d899592ed7829d0d5140853bac4d58742a6b8af ]
    
    There is a kmemleak when testing the media/i2c/ov2740.c with bpf mock
    device:
    
    unreferenced object 0xffff8881090e19e0 (size 16):
      comm "51-i2c-ov2740", pid 278, jiffies 4294781584 (age 23.613s)
      hex dump (first 16 bytes):
        00 f3 7c 0b 81 88 ff ff 80 75 6a 09 81 88 ff ff  ..|......uj.....
      backtrace:
        [<000000004e9fad8f>] __kmalloc_node+0x44/0x1b0
        [<0000000039c802f4>] kvmalloc_node+0x34/0x180
        [<000000009b8b5c63>] v4l2_ctrl_handler_init_class+0x11d/0x180
    [videodev]
        [<0000000038644056>] ov2740_probe+0x37d/0x84f [ov2740]
        [<0000000092489f59>] i2c_device_probe+0x28d/0x680
        [<000000001038babe>] really_probe+0x17c/0x3f0
        [<0000000098c7af1c>] __driver_probe_device+0xe3/0x170
        [<00000000e1b3dc24>] device_driver_attach+0x34/0x80
        [<000000005a04a34d>] bind_store+0x10b/0x1a0
        [<00000000ce25d4f2>] drv_attr_store+0x49/0x70
        [<000000007d9f4e9a>] sysfs_kf_write+0x8c/0xb0
        [<00000000be6cff0f>] kernfs_fop_write_iter+0x216/0x2e0
        [<0000000031ddb40a>] vfs_write+0x658/0x810
        [<0000000041beecdd>] ksys_write+0xd6/0x1b0
        [<0000000023755840>] do_syscall_64+0x38/0x90
        [<00000000b2cc2da2>] entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    ov2740_init_controls() won't clean all the allocated resources in fail
    path, which may causes the memleaks. Add v4l2_ctrl_handler_free() to
    prevent memleak.
    
    Fixes: 866edc895171 ("media: i2c: Add ov2740 image sensor driver")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 505ff3a0c5951684c3a43094ca4c1a74683d5681
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Tue Dec 6 14:05:55 2022 +0100

    media: max9286: Fix memleak in max9286_v4l2_register()
    
    [ Upstream commit 8636c5fc7658c7c6299fb8b352d24ea4b9ba99e2 ]
    
    There is a kmemleak when testing the media/i2c/max9286.c with bpf mock
    device:
    
    kmemleak: 5 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
    
    unreferenced object 0xffff88810defc400 (size 256):
      comm "python3", pid 278, jiffies 4294737563 (age 31.978s)
      hex dump (first 32 bytes):
        28 06 a7 0a 81 88 ff ff 00 fe 22 12 81 88 ff ff  (.........".....
        10 c4 ef 0d 81 88 ff ff 10 c4 ef 0d 81 88 ff ff  ................
      backtrace:
        [<00000000191de6a7>] __kmalloc_node+0x44/0x1b0
        [<000000002f4912b7>] kvmalloc_node+0x34/0x180
        [<0000000057dc4cae>] v4l2_ctrl_new+0x325/0x10f0 [videodev]
        [<0000000026030272>] v4l2_ctrl_new_std+0x16f/0x210 [videodev]
        [<00000000f0d9ea2f>] max9286_probe+0x76e/0xbff [max9286]
        [<00000000ea8f6455>] i2c_device_probe+0x28d/0x680
        [<0000000087529af3>] really_probe+0x17c/0x3f0
        [<00000000b08be526>] __driver_probe_device+0xe3/0x170
        [<000000004382edea>] driver_probe_device+0x49/0x120
        [<000000007bde528a>] __device_attach_driver+0xf7/0x150
        [<000000009f9c6ab4>] bus_for_each_drv+0x114/0x180
        [<00000000c8aaf588>] __device_attach+0x1e5/0x2d0
        [<0000000041cc06b9>] bus_probe_device+0x126/0x140
        [<000000002309860d>] device_add+0x810/0x1130
        [<000000002827bf98>] i2c_new_client_device+0x359/0x4f0
        [<00000000593bdc85>] of_i2c_register_device+0xf1/0x110
    
    max9286_v4l2_register() calls v4l2_ctrl_new_std(), but won't free the
    created v412_ctrl when fwnode_graph_get_endpoint_by_id() failed, which
    causes the memleak. Call v4l2_ctrl_handler_free() to free the v412_ctrl.
    
    Fixes: 66d8c9d2422d ("media: i2c: Add MAX9286 driver")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3e10a3437dcbee7900b437c5bceaa4f105d75e6
Author: Bastian Germann <bage@linutronix.de>
Date:   Wed May 26 01:01:37 2021 +0200

    builddeb: clean generated package content
    
    [ Upstream commit c9f9cf2560e40b62015c6c4a04be60f55ce5240e ]
    
    For each binary Debian package, a directory with the package name is
    created in the debian directory. Correct the generated file matches in the
    package's clean target, which were renamed without adjusting the target.
    
    Fixes: 1694e94e4f46 ("builddeb: match temporary directory name to the package name")
    Signed-off-by: Bastian Germann <bage@linutronix.de>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55f3bca25d3fd555935f84734d5203e25c41793b
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Jan 11 20:05:02 2023 -0700

    powerpc: Remove linker flag from KBUILD_AFLAGS
    
    [ Upstream commit 31f48f16264bc70962fb3e7ec62da64d0a2ba04a ]
    
    When clang's -Qunused-arguments is dropped from KBUILD_CPPFLAGS, it
    points out that KBUILD_AFLAGS contains a linker flag, which will be
    unused:
    
      clang: error: -Wl,-a32: 'linker' input unused [-Werror,-Wunused-command-line-argument]
    
    This was likely supposed to be '-Wa,-a$(BITS)'. However, this change is
    unnecessary, as all supported versions of clang and gcc will pass '-a64'
    or '-a32' to GNU as based on the value of '-m'; the behavior of the
    latest stable release of the oldest supported major version of each
    compiler is shown below and each compiler's latest release exhibits the
    same behavior (GCC 12.2.0 and Clang 15.0.6).
    
      $ powerpc64-linux-gcc --version | head -1
      powerpc64-linux-gcc (GCC) 5.5.0
    
      $ powerpc64-linux-gcc -m64 -### -x assembler-with-cpp -c -o /dev/null /dev/null &| grep 'as '
      .../as -a64 -mppc64 -many -mbig -o /dev/null /tmp/cctwuBzZ.s
    
      $ powerpc64-linux-gcc -m32 -### -x assembler-with-cpp -c -o /dev/null /dev/null &| grep 'as '
      .../as -a32 -mppc -many -mbig -o /dev/null /tmp/ccaZP4mF.sg
    
      $ clang --version | head -1
      Ubuntu clang version 11.1.0-++20211011094159+1fdec59bffc1-1~exp1~20211011214622.5
    
      $ clang --target=powerpc64-linux-gnu -fno-integrated-as -m64 -### \
        -x assembler-with-cpp -c -o /dev/null /dev/null &| grep gnu-as
       "/usr/bin/powerpc64-linux-gnu-as" "-a64" "-mppc64" "-many" "-o" "/dev/null" "/tmp/null-80267c.s"
    
      $ clang --target=powerpc64-linux-gnu -fno-integrated-as -m64 -### \
        -x assembler-with-cpp -c -o /dev/null /dev/null &| grep gnu-as
       "/usr/bin/powerpc64-linux-gnu-as" "-a32" "-mppc" "-many" "-o" "/dev/null" "/tmp/null-ab8f8d.s"
    
    Remove this flag altogether to avoid future issues.
    
    Fixes: 1421dc6d4829 ("powerpc/kbuild: Use flags variables rather than overriding LD/CC/AS")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Anders Roxell <anders.roxell@linaro.org>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b74aaa314f6a9e6b4e0deac993abcaf9a0029e8c
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Jan 4 09:55:37 2023 +0100

    media: platform: ti: Add missing check for devm_regulator_get
    
    [ Upstream commit da8e05f84a11c3cc3b0ba0a3c62d20e358002d99 ]
    
    Add check for the return value of devm_regulator_get since it may return
    error pointer.
    
    Fixes: 448de7e7850b ("[media] omap3isp: OMAP3 ISP core")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7a218cbf67fffcd99b76ae3b5e9c2e8bef17c8c
Author: Gaosheng Cui <cuigaosheng1@huawei.com>
Date:   Tue Nov 29 12:01:59 2022 +0100

    media: ti: cal: fix possible memory leak in cal_ctx_create()
    
    [ Upstream commit 7acd650a0484d92985a0d6d867d980c6dd019885 ]
    
    The memory of ctx is allocated in cal_ctx_create(), but it will
    not be freed when cal_ctx_v4l2_init() fails, so add kfree() when
    cal_ctx_v4l2_init() fails to fix it.
    
    Fixes: d68a94e98a89 ("media: ti-vpe: cal: Split video device initialization and registration")
    Signed-off-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a2e2674f720836e294523cf165deac9ba3b1425
Author: Sibi Sankar <quic_sibis@quicinc.com>
Date:   Tue Jan 17 14:28:35 2023 +0530

    remoteproc: qcom_q6v5_mss: Use a carveout to authenticate modem headers
    
    [ Upstream commit 57f72170a2b2a362c35bb9407fc844eac5afdec1 ]
    
    Any access to the dynamically allocated metadata region by the application
    processor after assigning it to the remote Q6 will result in a XPU
    violation. Fix this by replacing the dynamically allocated memory region
    with a no-map carveout and unmap the modem metadata memory region before
    passing control to the remote Q6.
    
    Reported-and-tested-by: Amit Pundir <amit.pundir@linaro.org>
    Fixes: 6c5a9dc2481b ("remoteproc: qcom: Make secure world call for mem ownership switch")
    Signed-off-by: Sibi Sankar <quic_sibis@quicinc.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230117085840.32356-7-quic_sibis@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e5bc675eb7b3e1e1442dc721e074e3cc02f44d0
Author: Jeff LaBundy <jeff@labundy.com>
Date:   Tue Jan 3 11:59:35 2023 -0600

    Input: iqs269a - do not poll during ATI
    
    [ Upstream commit b08134eb254db56e9ce8170d9b82f0d7a616b6f8 ]
    
    After initial start-up, the driver triggers ATI (calibration) with
    the newly loaded register configuration in place. Next, the driver
    polls a register field to ensure ATI completed in a timely fashion
    and that the device is ready to sense.
    
    However, communicating with the device over I2C while ATI is under-
    way may induce noise in the device and cause ATI to fail. As such,
    the vendor recommends not to poll the device during ATI.
    
    To solve this problem, let the device naturally signal to the host
    that ATI is complete by way of an interrupt. A completion prevents
    the device from successfully probing until this happens.
    
    As an added benefit, initial switch states are now reported in the
    interrupt handler at the same time ATI status is checked. As such,
    duplicate code that reports initial switch states has been removed
    from iqs269_input_init().
    
    The former logic that scaled ATI timeout and filter settling delay
    is not carried forward with the new implementation, as it produces
    overly conservative delays at the lower clock rate.
    
    Rather, a single timeout that covers both clock rates is used. The
    filter settling delay does not happen to be necessary and has been
    removed as well.
    
    Fixes: 04e49867fad1 ("Input: add support for Azoteq IQS269A")
    Signed-off-by: Jeff LaBundy <jeff@labundy.com>
    Reviewed-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Link: https://lore.kernel.org/r/Y7RtB2T7AF9rYMjK@nixie71
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65e39fdce1fc3f2144844051508a11d913e41fdd
Author: Jeff LaBundy <jeff@labundy.com>
Date:   Tue Jan 3 11:59:21 2023 -0600

    Input: iqs269a - do not poll during suspend or resume
    
    [ Upstream commit 18ab69c8ca5678324efbeed874b707ce7b2feae1 ]
    
    Polling the device while it transitions from automatic to manual
    power mode switching may keep the device from actually finishing
    the transition. The process appears to time out depending on the
    polling rate and the device's core clock frequency.
    
    This is ultimately unnecessary in the first place; instead it is
    sufficient to write the desired mode during initialization, then
    disable automatic switching at suspend. This eliminates the need
    to ensure the device is prepared for a manual change and removes
    the 'suspend_mode' variable.
    
    Similarly, polling the device while it transitions from one mode
    to another under manual control may time out as well. This added
    step does not appear to be necessary either, so drop it.
    
    Fixes: 04e49867fad1 ("Input: add support for Azoteq IQS269A")
    Signed-off-by: Jeff LaBundy <jeff@labundy.com>
    Reviewed-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Link: https://lore.kernel.org/r/Y7Rs+eEXlRw4Vq57@nixie71
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0b84fd32cb48dcb7d617f1abe476533447ef67f
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Jan 9 00:14:02 2023 -0500

    alpha/boot/tools/objstrip: fix the check for ELF header
    
    [ Upstream commit 1878787797cbb019eeefe6f905514dcd557302b6 ]
    
    Just memcmp() with ELFMAG - that's the normal way to do it in userland
    code, which that thing is.  Besides, that has the benefit of actually
    building - str_has_prefix() is *NOT* present in <string.h>.
    
    Fixes: 5f14596e55de "alpha: Replace strncmp with str_has_prefix"
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cab7debf3e05a6a2411c1b0192d849190be79a6
Author: Eli Cohen <elic@nvidia.com>
Date:   Mon Feb 6 14:19:56 2023 +0200

    vdpa/mlx5: Don't clear mr struct on destroy MR
    
    [ Upstream commit aef24311bd2d8a6d39a80c34f278b0fd1692aed3 ]
    
    Clearing the mr struct erases the lock owner and causes warnings to be
    emitted. It is not required to clear the mr so remove the memset call.
    
    Fixes: 94abbccdf291 ("vdpa/mlx5: Add shared memory registration code")
    Signed-off-by: Eli Cohen <elic@nvidia.com>
    Message-Id: <20230206121956.1149356-1-elic@nvidia.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bccccd43a06dfea5f5a8295a0cb384d74b90a9b3
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Feb 19 15:15:25 2023 -0800

    MIPS: vpe-mt: drop physical_memsize
    
    [ Upstream commit 91dc288f4edf0d768e46c2c6d33e0ab703403459 ]
    
    When neither LANTIQ nor MIPS_MALTA is set, 'physical_memsize' is not
    declared. This causes the build to fail with:
    
    mips-linux-ld: arch/mips/kernel/vpe-mt.o: in function `vpe_run':
    arch/mips/kernel/vpe-mt.c:(.text.vpe_run+0x280): undefined reference to `physical_memsize'
    
    LANTIQ is not using 'physical_memsize' and MIPS_MALTA's use of it is
    self-contained in mti-malta/malta-dtshim.c.
    Use of physical_memsize in vpe-mt.c appears to be unused, so eliminate
    this loader mode completely and require VPE programs to be compiled with
    DFLT_STACK_SIZE and DFLT_HEAP_SIZE defined.
    
    Fixes: 9050d50e2244 ("MIPS: lantiq: Set physical_memsize")
    Fixes: 1a2a6d7e8816 ("MIPS: APRP: Split VPE loader into separate files.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/all/202302030625.2g3E98sY-lkp@intel.com/
    Cc: Dengcheng Zhu <dzhu@wavecomp.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Philippe Mathieu-Daudé <philmd@linaro.org>
    Cc: "Steven J. Hill" <Steven.Hill@imgtec.com>
    Cc: Qais Yousef <Qais.Yousef@imgtec.com>
    Cc: Yang Yingliang <yangyingliang@huawei.com>
    Cc: Hauke Mehrtens <hauke@hauke-m.de>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 132203ce40d050dd6f09668cab54b4ea70a2ba4a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Feb 17 12:07:49 2023 -0800

    MIPS: SMP-CPS: fix build error when HOTPLUG_CPU not set
    
    [ Upstream commit 6f02e39fa40f16c24e7a5c599a854c0d1682788d ]
    
    When MIPS_CPS=y, MIPS_CPS_PM is not set, HOTPLUG_CPU is not set, and
    KEXEC=y, cps_shutdown_this_cpu() attempts to call cps_pm_enter_state(),
    which is not built when MIPS_CPS_PM is not set.
    Conditionally execute the else branch based on CONFIG_HOTPLUG_CPU
    to remove the build error.
    This build failure is from a randconfig file.
    
    mips-linux-ld: arch/mips/kernel/smp-cps.o: in function `$L162':
    smp-cps.c:(.text.cps_kexec_nonboot_cpu+0x31c): undefined reference to `cps_pm_enter_state'
    
    Fixes: 1447864bee4c ("MIPS: kexec: CPS systems to halt nonboot CPUs")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Dengcheng Zhu <dzhu@wavecomp.com>
    Cc: Paul Burton <paulburton@kernel.org>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: linux-mips@vger.kernel.org
    Cc: Sergei Shtylyov <sergei.shtylyov@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fc6d29be811b677409c22db1eb27e5d7a42a241
Author: Ganesh Goudar <ganeshgr@linux.ibm.com>
Date:   Thu Feb 9 16:26:49 2023 +0530

    powerpc/eeh: Set channel state after notifying the drivers
    
    [ Upstream commit 9efcdaac36e1643a1b7f5337e6143ce142d381b1 ]
    
    When a PCI error is encountered 6th time in an hour we
    set the channel state to perm_failure and notify the
    driver about the permanent failure.
    
    However, after upstream commit 38ddc011478e ("powerpc/eeh:
    Make permanently failed devices non-actionable"), EEH handler
    stops calling any routine once the device is marked as
    permanent failure. This issue can lead to fatal consequences
    like kernel hang with certain PCI devices.
    
    Following log is observed with lpfc driver, with and without
    this change, Without this change kernel hangs, If PCI error
    is encountered 6 times for a device in an hour.
    
    Without the change
    
     EEH: Beginning: 'error_detected(permanent failure)'
     PCI 0132:60:00.0#600000: EEH: not actionable (1,1,1)
     PCI 0132:60:00.1#600000: EEH: not actionable (1,1,1)
     EEH: Finished:'error_detected(permanent failure)'
    
    With the change
    
     EEH: Beginning: 'error_detected(permanent failure)'
     EEH: Invoking lpfc->error_detected(permanent failure)
     EEH: lpfc driver reports: 'disconnect'
     EEH: Invoking lpfc->error_detected(permanent failure)
     EEH: lpfc driver reports: 'disconnect'
     EEH: Finished:'error_detected(permanent failure)'
    
    To fix the issue, set channel state to permanent failure after
    notifying the drivers.
    
    Fixes: 38ddc011478e ("powerpc/eeh: Make permanently failed devices non-actionable")
    Suggested-by: Mahesh Salgaonkar <mahesh@linux.ibm.com>
    Signed-off-by: Ganesh Goudar <ganeshgr@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20230209105649.127707-1-ganeshgr@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfc41e3859152593f8fe843dfbdab303e9b152cc
Author: Daniel Axtens <dja@axtens.net>
Date:   Fri Oct 15 18:06:27 2021 +1100

    powerpc/eeh: Small refactor of eeh_handle_normal_event()
    
    [ Upstream commit 10b34ece132ee46dc4e6459c765d180c422a09fa ]
    
    The control flow of eeh_handle_normal_event() is a bit tricky.
    
    Break out one of the error handling paths - rather than be in an else
    block, we'll make it part of the regular body of the function and put a
    'goto out;' in the true limb of the if.
    
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211015070628.1331635-1-dja@axtens.net
    Stable-dep-of: 9efcdaac36e1 ("powerpc/eeh: Set channel state after notifying the drivers")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 386cc2af90e94f6b55e5ff19ebdb98cac56fe1ff
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Feb 10 12:41:54 2023 -0600

    powerpc/rtas: ensure 4KB alignment for rtas_data_buf
    
    [ Upstream commit 836b5b9fcc8e09cea7e8a59a070349a00e818308 ]
    
    Some RTAS functions that have work area parameters impose alignment
    requirements on the work area passed to them by the OS. Examples
    include:
    
    - ibm,configure-connector
    - ibm,update-nodes
    - ibm,update-properties
    
    4KB is the greatest alignment required by PAPR for such
    buffers. rtas_data_buf used to have a __page_aligned attribute in the
    arch/ppc64 days, but that was changed to __cacheline_aligned for
    unknown reasons by commit 033ef338b6e0 ("powerpc: Merge rtas.c into
    arch/powerpc/kernel"). That works out to 128-byte alignment
    on ppc64, which isn't right.
    
    This was found by inspection and I'm not aware of any real problems
    caused by this. Either current RTAS implementations don't enforce the
    alignment constraints, or rtas_data_buf is always being placed at a
    4KB boundary by accident (or both, perhaps).
    
    Use __aligned(SZ_4K) to ensure the rtas_data_buf has alignment
    appropriate for all users.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Fixes: 033ef338b6e0 ("powerpc: Merge rtas.c into arch/powerpc/kernel")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20230125-b4-powerpc-rtas-queue-v3-6-26929c8cce78@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9a299f2f465697b95a2431c036b43acaed265f9
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Tue Jan 24 08:04:46 2023 -0600

    powerpc/rtas: make all exports GPL
    
    [ Upstream commit 9bce6243848dfd0ff7c2be6e8d82ab9b1e6c7858 ]
    
    The first symbol exports of RTAS functions and data came with the (now
    removed) scanlog driver in 2003:
    
    https://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git/commit/?id=f92e361842d5251e50562b09664082dcbd0548bb
    
    At the time this was applied, EXPORT_SYMBOL_GPL() was very new, and
    the exports of rtas_call() etc have remained non-GPL. As new APIs have
    been added to the RTAS subsystem, their symbol exports have followed
    the convention set by existing code.
    
    However, the historical evidence is that RTAS function exports have been
    added over time only to satisfy the needs of in-kernel users, and these
    clients must have fairly intimate knowledge of how the APIs work to use
    them safely. No out of tree users are known, and future ones seem
    unlikely.
    
    Arguably the default for RTAS symbols should have become
    EXPORT_SYMBOL_GPL once it was available. Let's make it so now, and
    exceptions can be evaluated as needed.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Laurent Dufour <laurent.dufour@fr.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20230124140448.45938-3-nathanl@linux.ibm.com
    Stable-dep-of: 836b5b9fcc8e ("powerpc/rtas: ensure 4KB alignment for rtas_data_buf")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7afd768784bd7ae499f151ecd3f27c38ddcf5dc7
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Feb 10 12:41:52 2023 -0600

    powerpc/pseries/lparcfg: add missing RTAS retry status handling
    
    [ Upstream commit 5d08633e5f6564b60f1cbe09af3af40a74d66431 ]
    
    The ibm,get-system-parameter RTAS function may return -2 or 990x,
    which indicate that the caller should try again.
    
    lparcfg's parse_system_parameter_string() ignores this, making it
    possible to intermittently report incorrect SPLPAR characteristics.
    
    Move the RTAS call into a coventional rtas_busy_delay()-based loop.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20230125-b4-powerpc-rtas-queue-v3-4-26929c8cce78@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df995aef6400fc5f854ea892bb57760f85f360ee
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Feb 10 12:41:51 2023 -0600

    powerpc/pseries/lpar: add missing RTAS retry status handling
    
    [ Upstream commit daa8ab59044610aa8ef2ee45a6c157b5e11635e9 ]
    
    The ibm,get-system-parameter RTAS function may return -2 or 990x,
    which indicate that the caller should try again.
    
    pseries_lpar_read_hblkrm_characteristics() ignores this, making it
    possible to incorrectly detect TLB block invalidation characteristics
    at boot.
    
    Move the RTAS call into a coventional rtas_busy_delay()-based loop.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Fixes: 1211ee61b4a8 ("powerpc/pseries: Read TLB Block Invalidate Characteristics")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20230125-b4-powerpc-rtas-queue-v3-3-26929c8cce78@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9626f83a6ec72caceeaa22ffe400d746cf2ccfff
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Feb 10 12:41:50 2023 -0600

    powerpc/perf/hv-24x7: add missing RTAS retry status handling
    
    [ Upstream commit cc4b26eab1859fa1a70711872caaf6414809973f ]
    
    The ibm,get-system-parameter RTAS function may return -2 or 990x,
    which indicate that the caller should try again. read_24x7_sys_info()
    ignores this, allowing transient failures in reporting processor
    module information.
    
    Move the RTAS call into a coventional rtas_busy_delay()-based loop,
    along with the parsing of results on success.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Fixes: 8ba214267382 ("powerpc/hv-24x7: Add rtas call in hv-24x7 driver to get processor details")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20230125-b4-powerpc-rtas-queue-v3-2-26929c8cce78@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 831a2d8de1d605be23f3afb0caa4690a5bfc3bfb
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Tue Jan 3 17:23:30 2023 +0800

    clk: Honor CLK_OPS_PARENT_ENABLE in clk_core_is_enabled()
    
    [ Upstream commit 79200d5851c8e7179f68a4a6f162d8f1bde4986f ]
    
    In the previous commits that added CLK_OPS_PARENT_ENABLE, support for
    this flag was only added to rate change operations (rate setting and
    reparent) and disabling unused subtree. It was not added to the
    clock gate related operations. Any hardware driver that needs it for
    these operations will either see bogus results, or worse, hang.
    
    This has been seen on MT8192 and MT8195, where the imp_ii2_* clk
    drivers set this, but dumping debugfs clk_summary would cause it
    to hang.
    
    Prepare parent on prepare and enable parent on enable dependencies are
    already handled automatically by the core as part of its sequencing.
    Whether the case for "enable parent on prepare" should be supported by
    this flag or not is not clear, and thus ignored for now.
    
    This change solely fixes the handling of clk_core_is_enabled, i.e.
    enabling the parent clock when reading the hardware state. Unfortunately
    clk_core_is_enabled is called in a variety of places, sometimes with
    the enable clock already held. To avoid deadlocking, the core will
    ignore readouts and just return false if CLK_OPS_PARENT_ENABLE is set
    but the parent isn't currently enabled.
    
    Fixes: fc8726a2c021 ("clk: core: support clocks which requires parents enable (part 2)")
    Fixes: a4b3518d146f ("clk: core: support clocks which requires parents enable (part 1)")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Link: https://lore.kernel.org/r/20230103092330.494102-1-wenst@chromium.org
    Tested-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f060379aaf2a05b13bf27cccf93555e640e90a1
Author: Frederic Barrat <fbarrat@linux.ibm.com>
Date:   Fri Jan 20 10:32:15 2023 +0100

    powerpc/powernv/ioda: Skip unallocated resources when mapping to PE
    
    [ Upstream commit e64e71056f323a1e178dccf04d4c0f032d84436c ]
    
    pnv_ioda_setup_pe_res() calls opal to map a resource with a PE. However,
    the code assumes the resource is allocated and it uses the resource
    address to find out the segment(s) which need to be mapped to the
    PE. In the unlikely case where the resource hasn't been allocated, the
    computation for the segment number is garbage, which can lead to
    invalid memory access and potentially a kernel crash, such as:
    
    [ ] pci_bus 0002:02: Configuring PE for bus
    [ ] pci 0002:02     : [PE# fc] Secondary bus 0x0000000000000002..0x0000000000000002 associated with PE#fc
    [ ] BUG: Kernel NULL pointer dereference on write at 0x00000000
    [ ] Faulting instruction address: 0xc00000000005eac4
    [ ] Oops: Kernel access of bad area, sig: 7 [#1]
    [ ] LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV
    [ ] Modules linked in:
    [ ] CPU: 12 PID: 1 Comm: swapper/20 Not tainted 5.10.50-openpower1 #2
    [ ] NIP:  c00000000005eac4 LR: c00000000005ea44 CTR: 0000000030061b9c
    [ ] REGS: c000200007383650 TRAP: 0300   Not tainted  (5.10.50-openpower1)
    [ ] MSR:  9000000000009033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 44000224  XER: 20040000
    [ ] CFAR: c00000000005eaa0 DAR: 0000000000000000 DSISR: 02080000 IRQMASK: 0
    [ ] GPR00: c00000000005dd98 c0002000073838e0 c00000000185de00 c000200fff018960
    [ ] GPR04: 00000000000000fc 0000000000000003 0000000000000000 0000000000000000
    [ ] GPR08: 0000000000000000 0000000000000000 0000000000000000 9000000000001033
    [ ] GPR12: 0000000031cb0000 c000000ffffe6a80 c000000000010a58 0000000000000000
    [ ] GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [ ] GPR20: 0000000000000000 0000000000000000 0000000000000000 c00000000711e200
    [ ] GPR24: 0000000000000100 c000200009501120 c00020000cee2800 00000000000003ff
    [ ] GPR28: c000200fff018960 0000000000000000 c000200ffcb7fd00 0000000000000000
    [ ] NIP [c00000000005eac4] pnv_ioda_setup_pe_res+0x94/0x1a0
    [ ] LR [c00000000005ea44] pnv_ioda_setup_pe_res+0x14/0x1a0
    [ ] Call Trace:
    [ ] [c0002000073838e0] [c00000000005eb98] pnv_ioda_setup_pe_res+0x168/0x1a0 (unreliable)
    [ ] [c000200007383970] [c00000000005dd98] pnv_pci_ioda_dma_dev_setup+0x43c/0x970
    [ ] [c000200007383a60] [c000000000032cdc] pcibios_bus_add_device+0x78/0x18c
    [ ] [c000200007383aa0] [c00000000028f2bc] pci_bus_add_device+0x28/0xbc
    [ ] [c000200007383b10] [c00000000028f3a0] pci_bus_add_devices+0x50/0x7c
    [ ] [c000200007383b50] [c00000000028f3c4] pci_bus_add_devices+0x74/0x7c
    [ ] [c000200007383b90] [c00000000028f3c4] pci_bus_add_devices+0x74/0x7c
    [ ] [c000200007383bd0] [c00000000069ad0c] pcibios_init+0xf0/0x104
    [ ] [c000200007383c50] [c0000000000106d8] do_one_initcall+0x84/0x1c4
    [ ] [c000200007383d20] [c0000000006910b8] kernel_init_freeable+0x264/0x268
    [ ] [c000200007383dc0] [c000000000010a68] kernel_init+0x18/0x138
    [ ] [c000200007383e20] [c00000000000cbfc] ret_from_kernel_thread+0x5c/0x80
    [ ] Instruction dump:
    [ ] 7f89e840 409d000c 7fbbf840 409c000c 38210090 4848f448 809c002c e95e0120
    [ ] 7ba91764 38a00003 57a7043e 38c00000 <7c8a492e> 5484043e e87e0018 4bff23bd
    
    Hitting the problem is not that easy. It was seen with a (semi-bogus)
    PCI device with a class code of 0. The generic PCI framework doesn't
    allocate resources in such a case.
    
    The patch is simply skipping resources which are still flagged with
    IORESOURCE_UNSET.
    
    We don't have the problem with 64-bit mem resources, as the address of
    the resource is checked to be within the range of the 64-bit mmio
    window. See pnv_ioda_reserve_dev_m64_pe() and pnv_pci_is_m64().
    
    Reported-by: Andrew Jeffery <andrew@aj.id.au>
    Fixes: 23e79425fe7c ("powerpc/powernv: Simplify pnv_ioda_setup_pe_seg()")
    Signed-off-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20230120093215.19496-1-fbarrat@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15fed9258b844b4cec78f1c38a07ff33af1410c2
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Feb 1 19:23:05 2023 +0200

    clk: qcom: gpucc-sdm845: fix clk_dis_wait being programmed for CX GDSC
    
    [ Upstream commit cb81719e3c1165ef1bc33137dc628f750eed8ea4 ]
    
    The gdsc_init() function will rewrite the CLK_DIS_WAIT field while
    registering the GDSC (writing the value 0x2 by default). This will
    override the setting done in the driver's probe function.
    
    Set cx_gdsc.clk_dis_wait_val to 8 to follow the intention of the probe
    function.
    
    Fixes: 453361cdd757 ("clk: qcom: Add graphics clock controller driver for SDM845")
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230201172305.993146-2-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 241048adcb40246908a486258e98bd190e60d22c
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Feb 1 19:23:04 2023 +0200

    clk: qcom: gpucc-sc7180: fix clk_dis_wait being programmed for CX GDSC
    
    [ Upstream commit 658c82caffa042b351f5a1b6325819297a951a04 ]
    
    The gdsc_init() function will rewrite the CLK_DIS_WAIT field while
    registering the GDSC (writing the value 0x2 by default). This will
    override the setting done in the driver's probe function.
    
    Set cx_gdsc.clk_dis_wait_val to 8 to follow the intention of the probe
    function.
    
    Fixes: 745ff069a49c ("clk: qcom: Add graphics clock controller driver for SC7180")
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230201172305.993146-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1957c5b5ec4bb492150acb9ce97afcf1b07bc2a8
Author: Luca Ellero <l.ellero@asem.it>
Date:   Thu Jan 26 11:52:27 2023 +0100

    Input: ads7846 - don't check penirq immediately for 7845
    
    [ Upstream commit fa9f4275b20ec7b2a8fb05c66362d10b36f9efec ]
    
    To discard false readings, one should use "ti,penirq-recheck-delay-usecs".
    Checking get_pendown_state() at the beginning, most of the time fails
    causing malfunctioning.
    
    Fixes: ffa458c1bd9b ("spi: ads7846 driver")
    Signed-off-by: Luca Ellero <l.ellero@asem.it>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20230126105227.47648-4-l.ellero@asem.it
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d9b9e56c2b618bd3e45fdbdc2cc966d9f5efb50
Author: Luca Ellero <l.ellero@asem.it>
Date:   Thu Jan 26 11:52:26 2023 +0100

    Input: ads7846 - always set last command to PWRDOWN
    
    [ Upstream commit 13f82ca3878db8284a70ef9711d7f710a31eb562 ]
    
    Controllers that report pressure (e.g. ADS7846) use 5 commands and the
    correct sequence is READ_X, READ_Y, READ_Z1, READ_Z2, PWRDOWN.
    
    Controllers that don't report pressure (e.g. ADS7845/ADS7843) use only 3
    commands and the correct sequence should be READ_X, READ_Y, PWRDOWN. But
    the sequence sent was incorrect: READ_X, READ_Y, READ_Z1.
    
    Fix this by setting the third (and last) command to PWRDOWN.
    
    Fixes: ffa458c1bd9b ("spi: ads7846 driver")
    Signed-off-by: Luca Ellero <l.ellero@asem.it>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20230126105227.47648-3-l.ellero@asem.it
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d247f3527b314d2b197b9cea5615edeaa488bfa9
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Wed Jan 20 23:18:28 2021 -0800

    Input: ads7846 - convert to one message
    
    [ Upstream commit 6965eece2a89c3f1d00881c6052ee1e987870c08 ]
    
    Convert multiple full duplex transfers in to a single transfer to reduce
    CPU load.
    
    Current driver version support following filtering modes:
    - ads7846_no_filter() - not filtered
    - ads7846_debounce_filter() - driver specific debounce filter
    - pdata->filter - platform specific debounce filter (do any platform
            provides such filter?)
    
    Without filter this HW is not really usable, since the physic of
    resistive touchscreen can provide some bounce effects. With driver internal
    filter, we have constant amount of retries + debounce retries if some anomaly
    was detected.
    
    High amount of tiny SPI transfers is the primer reason of high CPU load
    and interrupt frequency.
    
    This patch create one SPI transfer with all fields and not optional retires. If
    bounce anomaly was detected, we will make more transfer if needed.
    
    Without this patch, we will get about 10% CPU load on iMX6S on pen-down event.
    For example by holding stylus on the screen.
    
    With this patch, depending in the amount of retries, the CPU load will
    be 1% with "ti,debounce-rep = <3>".
    
    One buffer transfer allows us to use PIO FIFO or DMA engine, depending
    on the platform.
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/r/20201110085041.16303-3-o.rempel@pengutronix.de
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Stable-dep-of: 13f82ca3878d ("Input: ads7846 - always set last command to PWRDOWN")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6c43844462ec89b6fe796ba91614f7f9f280fc2
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Wed Nov 11 16:39:05 2020 -0800

    Input: ads7846 - convert to full duplex
    
    [ Upstream commit 9c9509717b53e701469493a8d87ed42c7d782502 ]
    
    Starting with 3eac5c7e44f3 ("Input: ads7846 - extend the driver for ads7845
    controller support"), the ads7845 was partially converted to full duplex
    mode.
    
    Since it is not touchscreen controller specific, it is better to extend
    this conversion to cover entire driver. This will reduce CPU load and make
    driver more readable.
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/r/20201110085041.16303-2-o.rempel@pengutronix.de
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Stable-dep-of: 13f82ca3878d ("Input: ads7846 - always set last command to PWRDOWN")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f2034b9b0610c0fa1cc623287c315de70faec9f
Author: Luca Ellero <l.ellero@asem.it>
Date:   Thu Jan 26 11:52:25 2023 +0100

    Input: ads7846 - don't report pressure for ads7845
    
    [ Upstream commit d50584d783313c8b05b84d0b07a2142f1bde46dd ]
    
    ADS7845 doesn't support pressure.
    Avoid the following error reported by libinput-list-devices:
    "ADS7845 Touchscreen: kernel bug: device has min == max on ABS_PRESSURE".
    
    Fixes: ffa458c1bd9b ("spi: ads7846 driver")
    Signed-off-by: Luca Ellero <l.ellero@asem.it>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20230126105227.47648-2-l.ellero@asem.it
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 092effd9f99282dbc936b9597dfec0e8d8cb66fa
Author: Peng Fan <peng.fan@nxp.com>
Date:   Wed Jan 4 19:00:29 2023 +0800

    clk: imx: avoid memory leak
    
    [ Upstream commit f4419db4086e8c31821da14140e81498516a3c75 ]
    
    In case imx_register_uart_clocks return early, the imx_uart_clocks
    memory will be no freed. So execute kfree always to avoid memory leak.
    
    Fixes: 379c9a24cc23 ("clk: imx: Fix reparenting of UARTs not associated with stdout")
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Abel Vesa <abel.vesa@linaro.org>
    Signed-off-by: Abel Vesa <abel.vesa@linaro.org>
    Link: https://lore.kernel.org/r/20230104110032.1220721-2-peng.fan@oss.nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 092f17eca84be0f0b7bd9dc70a9e3bd9e93e3329
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jan 11 09:23:34 2023 +0100

    clk: renesas: cpg-mssr: Remove superfluous check in resume code
    
    [ Upstream commit 1c052043c79af5f70e80e2acd4dd70904ae08666 ]
    
    When the code flow arrives at printing the error message in
    cpg_mssr_resume_noirq(), we know for sure that we are not running on an
    RZ/A Soc, as the code checked for that before.
    
    Fixes: ace342097768e35f ("clk: renesas: cpg-mssr: Fix STBCR suspend/resume handling")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/144a3e66d748c0c17f3524ac8fa6ece5bf5b6f1e.1673425314.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7beb9b4538e785a72061a4cff9afa18d77b943f4
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Fri Dec 23 17:40:17 2022 +0300

    clk: renesas: cpg-mssr: Fix use after free if cpg_mssr_common_init() failed
    
    [ Upstream commit fbfd614aeaa2853c2c575299dfe2458db8eff67e ]
    
    If cpg_mssr_common_init() fails after assigning priv to global variable
    cpg_mssr_priv, it deallocates priv, but cpg_mssr_priv keeps dangling
    pointer that potentially can be used later.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 1f7db7bbf031 ("clk: renesas: cpg-mssr: Add early clock support")
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/1671806417-32623-1-git-send-email-khoroshilov@ispras.ru
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44a2a912c75049fa6cb2306ec8bc1276544b0c62
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Thu May 6 02:45:15 2021 +0900

    linux/kconfig.h: replace IF_ENABLED() with PTR_IF() in <linux/kernel.h>
    
    [ Upstream commit 0ab1438bad43d95877f848b7df551bd431680270 ]
    
    <linux/kconfig.h> is included from all the kernel-space source files,
    including C, assembly, linker scripts. It is intended to contain a
    minimal set of macros to evaluate CONFIG options.
    
    IF_ENABLED() is an intruder here because (x ? y : z) is C code, which
    should not be included from assembly files or linker scripts.
    
    Also, <linux/kconfig.h> is no longer self-contained because NULL is
    defined in <linux/stddef.h>.
    
    Move IF_ENABLED() out to <linux/kernel.h> as PTR_IF(). PTF_IF()
    takes the general boolean expression instead of a CONFIG option
    so that it fits better in <linux/kernel.h>.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Stable-dep-of: 18ab69c8ca56 ("Input: iqs269a - do not poll during suspend or resume")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a6dca86cfae3cefe857633d6670a5c9a64e31c3
Author: Jeff LaBundy <jeff@labundy.com>
Date:   Tue Jan 3 11:59:12 2023 -0600

    Input: iqs269a - configure device with a single block write
    
    [ Upstream commit 3689abfc4e369a643d758a02fb9ad0b2403d6d6d ]
    
    Unless it is being done as part of servicing a soft reset interrupt,
    configuring channels on-the-fly (as is the case when writing to the
    ati_trigger attribute) may cause GPIO3 (which reflects the state of
    touch for a selected channel) to be inadvertently asserted.
    
    To solve this problem, follow the vendor's recommendation and write
    all channel configuration as well as the REDO_ATI register field as
    part of a single block write. This ensures the device has been told
    to re-calibrate itself following an I2C stop condition, after which
    sensing resumes and GPIO3 may be asserted.
    
    Fixes: 04e49867fad1 ("Input: add support for Azoteq IQS269A")
    Signed-off-by: Jeff LaBundy <jeff@labundy.com>
    Reviewed-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Link: https://lore.kernel.org/r/Y7Rs8GyV7g0nF5Yy@nixie71
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7afc359f6e57dc9d0e0a58d3072692a237c5998
Author: Jeff LaBundy <jeff@labundy.com>
Date:   Tue Jan 3 11:58:59 2023 -0600

    Input: iqs269a - increase interrupt handler return delay
    
    [ Upstream commit e023cc4abde3c01b895660b0e5a8488deb36b8c1 ]
    
    The time the device takes to deassert its RDY output following an
    I2C stop condition scales with the core clock frequency.
    
    To prevent level-triggered interrupts from being reasserted after
    the interrupt handler returns, increase the time before returning
    to account for the worst-case delay (~140 us) plus margin.
    
    Fixes: 04e49867fad1 ("Input: add support for Azoteq IQS269A")
    Signed-off-by: Jeff LaBundy <jeff@labundy.com>
    Reviewed-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Link: https://lore.kernel.org/r/Y7Rs484ypy4dab5G@nixie71
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6a70ab2bbe24704b5241d4cab6f4e031ceef3ce
Author: Jeff LaBundy <jeff@labundy.com>
Date:   Tue Jan 3 11:58:31 2023 -0600

    Input: iqs269a - drop unused device node references
    
    [ Upstream commit 59bc9cb3b80abaa42643abede0d5db8477901d9c ]
    
    Each call to device/fwnode_get_named_child_node() must be matched
    with a call to fwnode_handle_put() once the corresponding node is
    no longer in use. This ensures a reference count remains balanced
    in the case of dynamic device tree support.
    
    Currently, the driver does not call fwnode_handle_put() on nested
    event nodes. This patch solves this problem by adding the missing
    instances of fwnode_handle_put().
    
    As part of this change, the logic which parses each channel's key
    code is gently refactored in order to reduce the number of places
    from which fwnode_handle_put() is called.
    
    Fixes: 04e49867fad1 ("Input: add support for Azoteq IQS269A")
    Signed-off-by: Jeff LaBundy <jeff@labundy.com>
    Link: https://lore.kernel.org/r/Y7Rsx68k/gvDVXAt@nixie71
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7fb5b5d2c8c6196d8b8dccaaefc40dbf59f31d9
Author: Samuel Holland <samuel@sholland.org>
Date:   Thu Dec 29 12:15:24 2022 -0600

    mtd: rawnand: sunxi: Fix the size of the last OOB region
    
    [ Upstream commit 34569d869532b54d6e360d224a0254dcdd6a1785 ]
    
    The previous code assigned to the wrong structure member.
    
    Fixes: c66811e6d350 ("mtd: nand: sunxi: switch to mtd_ooblayout_ops")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Acked-By: Dhruva Gole <d-gole@ti.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20221229181526.53766-6-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c90fa32bd4d200fa972b39e0d3b28f6c900b23e8
Author: Heiko Stuebner <heiko.stuebner@vrull.eu>
Date:   Fri Dec 23 23:13:21 2022 +0100

    RISC-V: fix funct4 definition for c.jalr in parse_asm.h
    
    [ Upstream commit a3775634f6da23f5511d0282d7e792cf606e5f3b ]
    
    The opcode definition for c.jalr is
        c.jalr c_rs1_n0  1..0=2 15..13=4 12=1 6..2=0
    
    This means funct4 consisting of bit [15:12] is 1001b, so the value is 0x9.
    
    Fixes: edde5584c7ab ("riscv: Add SW single-step support for KDB")
    Reported-by: Andrew Jones <ajones@ventanamicro.com>
    Reviewed-by: Andrew Jones <ajones@ventanamicro.com>
    Reviewed-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Signed-off-by: Heiko Stuebner <heiko.stuebner@vrull.eu>
    Link: https://lore.kernel.org/r/20221223221332.4127602-2-heiko@sntech.de
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7950aa8728085d4ef374f2b03572ffaf8eeed3c
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Mon Dec 26 06:21:44 2022 +0200

    clk: qcom: gcc-qcs404: fix names of the DSI clocks used as parents
    
    [ Upstream commit 47d94d30cd3dcc743241b4208b1eec7247610c84 ]
    
    The QCS404 uses 28nm LPM DSI PHY, which registers dsi0pll and
    dsi0pllbyte clocks. Fix all DSI PHY clock names used as parents inside
    the GCC driver.
    
    Fixes: 652f1813c113 ("clk: qcom: gcc: Add global clock controller driver for QCS404")
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221226042154.2666748-7-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fd6fd898b64834e3e7d7b344ced7b7dba62c9ab
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Mon Dec 26 06:21:43 2022 +0200

    clk: qcom: gcc-qcs404: disable gpll[04]_out_aux parents
    
    [ Upstream commit 712c64caf31374de57aa193a9dff57172b2f6f82 ]
    
    On the QCS404 platform the driver for the Global Clock Controller
    doens't define gpll0_out_aux and gpll4_out_aux clocks, so it's not
    possible to use them as parents. Remove entries for these clocks.
    
    Note: backporting this patch to earlier kernels would also require a
    previous patch which switches the gcc driver to use ARRAY_SIZE for
    parent data arrays.
    
    Fixes: 652f1813c113 ("clk: qcom: gcc: Add global clock controller driver for QCS404")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221226042154.2666748-6-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ee13bdf0d25ae8752ae6185b6d13bbb0d5a8e30
Author: Qiheng Lin <linqiheng@huawei.com>
Date:   Thu Dec 8 14:15:55 2022 +0800

    mfd: pcf50633-adc: Fix potential memleak in pcf50633_adc_async_read()
    
    [ Upstream commit 8b450dcff23aa254844492831a8e2b508a9d522d ]
    
    `req` is allocated in pcf50633_adc_async_read(), but
    adc_enqueue_request() could fail to insert the `req` into queue.
    We need to check the return value and free it in the case of failure.
    
    Fixes: 08c3e06a5eb2 ("mfd: PCF50633 adc driver")
    Signed-off-by: Qiheng Lin <linqiheng@huawei.com>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/20221208061555.8776-1-linqiheng@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a041377a4583850be020db01fd8f45bad0abaaf
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Feb 15 14:00:58 2023 +0100

    objtool: add UACCESS exceptions for __tsan_volatile_read/write
    
    [ Upstream commit d5d469247264e56960705dc5ae7e1d014861fe40 ]
    
    A lot of the tsan helpers are already excempt from the UACCESS warnings,
    but some more functions were added that need the same thing:
    
    kernel/kcsan/core.o: warning: objtool: __tsan_volatile_read16+0x0: call to __tsan_unaligned_read16() with UACCESS enabled
    kernel/kcsan/core.o: warning: objtool: __tsan_volatile_write16+0x0: call to __tsan_unaligned_write16() with UACCESS enabled
    vmlinux.o: warning: objtool: __tsan_unaligned_volatile_read16+0x4: call to __tsan_unaligned_read16() with UACCESS enabled
    vmlinux.o: warning: objtool: __tsan_unaligned_volatile_write16+0x4: call to __tsan_unaligned_write16() with UACCESS enabled
    
    As Marco points out, these functions don't even call each other
    explicitly but instead gcc (but not clang) notices the functions
    being identical and turns one symbol into a direct branch to the
    other.
    
    Link: https://lkml.kernel.org/r/20230215130058.3836177-4-arnd@kernel.org
    Fixes: 75d75b7a4d54 ("kcsan: Support distinguishing volatile accesses")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Marco Elver <elver@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Konovalov <andreyknvl@gmail.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Josh Poimboeuf <jpoimboe@kernel.org>
    Cc: Kuan-Ying Lee <Kuan-Ying.Lee@mediatek.com>
    Cc: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Vincenzo Frascino <vincenzo.frascino@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 455cf05161be58d3f3892d001f09a5c315a27680
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Feb 6 20:40:57 2023 +0100

    printf: fix errname.c list
    
    [ Upstream commit 0c2baf6509af1d11310ae4c1c839481a6e9a4bc4 ]
    
    On most architectures, gcc -Wextra warns about the list of error
    numbers containing both EDEADLK and EDEADLOCK:
    
    lib/errname.c:15:67: warning: initialized field overwritten [-Woverride-init]
       15 | #define E(err) [err + BUILD_BUG_ON_ZERO(err <= 0 || err > 300)] = "-" #err
          |                                                                   ^~~
    lib/errname.c:172:2: note: in expansion of macro 'E'
      172 |  E(EDEADLK), /* EDEADLOCK */
          |  ^
    
    On parisc, a similar error happens with -ECANCELLED, which is an
    alias for ECANCELED.
    
    Make the EDEADLK printing conditional on the number being distinct
    from EDEADLOCK, and remove the -ECANCELLED bit completely as it
    can never be hit.
    
    To ensure these are correct, add static_assert lines that verify
    all the remaining aliases are in fact identical to the canonical
    name.
    
    Fixes: 57f5677e535b ("printf: add support for printing symbolic error names")
    Cc: Petr Mladek <pmladek@suse.com>
    Suggested-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Acked-by: Uwe Kleine-König <uwe@kleine-koenig.org>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/all/20210514213456.745039-1-arnd@kernel.org/
    Link: https://lore.kernel.org/all/20210927123409.1109737-1-arnd@kernel.org/
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Acked-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20230206194126.380350-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b18946a9cee2d239a556d6f94f2ea118c84d7a9e
Author: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Date:   Sun Jan 22 08:32:50 2023 +0900

    selftests/ftrace: Fix bash specific "==" operator
    
    [ Upstream commit 1e6b485c922fbedf41d5a9f4e6449c5aeb923a32 ]
    
    Since commit a1d6cd88c897 ("selftests/ftrace: event_triggers: wait
    longer for test_event_enable") introduced bash specific "=="
    comparation operator, that test will fail when we run it on a
    posix-shell. `checkbashisms` warned it as below.
    
    possible bashism in ftrace/func_event_triggers.tc line 45 (should be 'b = a'):
            if [ "$e" == $val ]; then
    
    This replaces it with "=".
    
    Fixes: a1d6cd88c897 ("selftests/ftrace: event_triggers: wait longer for test_event_enable")
    Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8dc9f6fde194631f6e6158a65cdfcc77f597de3
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Feb 4 16:43:57 2023 -0800

    sparc: allow PM configs for sparc32 COMPILE_TEST
    
    [ Upstream commit 7be6a87c2473957090995b7eb541e31d57a2c801 ]
    
    When doing randconfig builds for sparc32 with COMPILE_TEST, some
    (non-Sparc) drivers cause kconfig warnings with the Kconfig symbols PM,
    PM_GENERIC_DOMAINS, or PM_GENERIC_DOMAINS_OF.
    
    This is due to arch/sparc/Kconfig not using the PM Kconfig for
    Sparc32:
    
      if SPARC64
      source "kernel/power/Kconfig"
      endif
    
    Arnd suggested adding "|| COMPILE_TEST" to the conditional,
    instead of trying to track down every driver that selects
    any of these PM symbols.
    
    Fixes the following kconfig warnings:
    
    WARNING: unmet direct dependencies detected for PM
      Depends on [n]: SPARC64 [=n]
      Selected by [y]:
      - SUN20I_PPU [=y] && (ARCH_SUNXI || COMPILE_TEST [=y])
    
    WARNING: unmet direct dependencies detected for PM
      Depends on [n]: SPARC64 [=n]
      Selected by [y]:
      - SUN20I_PPU [=y] && (ARCH_SUNXI || COMPILE_TEST [=y])
    
    WARNING: unmet direct dependencies detected for PM_GENERIC_DOMAINS
      Depends on [n]: SPARC64 [=n] && PM [=y]
      Selected by [y]:
      - QCOM_GDSC [=y] && COMMON_CLK [=y] && PM [=y]
      - SUN20I_PPU [=y] && (ARCH_SUNXI || COMPILE_TEST [=y])
      - MESON_GX_PM_DOMAINS [=y] && (ARCH_MESON || COMPILE_TEST [=y]) && PM [=y] && OF [=y]
      - BCM2835_POWER [=y] && (ARCH_BCM2835 || COMPILE_TEST [=y] && OF [=y]) && PM [=y]
      - BCM_PMB [=y] && (ARCH_BCMBCA || COMPILE_TEST [=y] && OF [=y]) && PM [=y]
      - ROCKCHIP_PM_DOMAINS [=y] && (ARCH_ROCKCHIP || COMPILE_TEST [=y]) && PM [=y]
      Selected by [m]:
      - ARM_SCPI_POWER_DOMAIN [=m] && (ARM_SCPI_PROTOCOL [=m] || COMPILE_TEST [=y] && OF [=y]) && PM [=y]
      - MESON_EE_PM_DOMAINS [=m] && (ARCH_MESON || COMPILE_TEST [=y]) && PM [=y] && OF [=y]
      - QCOM_AOSS_QMP [=m] && (ARCH_QCOM || COMPILE_TEST [=y]) && MAILBOX [=y] && COMMON_CLK [=y] && PM [=y]
    
    WARNING: unmet direct dependencies detected for PM_GENERIC_DOMAINS_OF
      Depends on [n]: SPARC64 [=n] && PM_GENERIC_DOMAINS [=y] && OF [=y]
      Selected by [y]:
      - MESON_GX_PM_DOMAINS [=y] && (ARCH_MESON || COMPILE_TEST [=y]) && PM [=y] && OF [=y]
      Selected by [m]:
      - MESON_EE_PM_DOMAINS [=m] && (ARCH_MESON || COMPILE_TEST [=y]) && PM [=y] && OF [=y]
    
    Link: https://lkml.kernel.org/r/20230205004357.29459-1-rdunlap@infradead.org
    Fixes: bdde6b3c8ba4 ("sparc64: Hibernation support")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Kirill Tkhai <tkhai@yandex.ru>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93925ab9dd74dc65e1c63b829c0bee8467be29d0
Author: Yicong Yang <yangyicong@hisilicon.com>
Date:   Tue Feb 7 11:50:57 2023 +0800

    perf tools: Fix auto-complete on aarch64
    
    [ Upstream commit ffd1240e8f0814262ceb957dbe961f6e0aef1e7a ]
    
    On aarch64 CPU related events are not under event_source/devices/cpu/events,
    they're under event_source/devices/armv8_pmuv3_0/events on my machine.
    Using current auto-complete script will generate below error:
    
      [root@localhost bin]# perf stat -e
      ls: cannot access '/sys/bus/event_source/devices/cpu/events': No such file or directory
    
    Fix this by not testing /sys/bus/event_source/devices/cpu/events on
    aarch64 machine.
    
    Fixes: 74cd5815d9af6e6c ("perf tool: Improve bash command line auto-complete for multiple events with comma")
    Reviewed-by: James Clark <james.clark@arm.com>
    Signed-off-by: Yicong Yang <yangyicong@hisilicon.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linuxarm@huawei.com
    Cc: prime.zeng@hisilicon.com
    Link: https://lore.kernel.org/r/20230207035057.43394-1-yangyicong@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d6101d9222e1ca8c01b3fa9ebf0dcf7bcd82564
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Dec 20 16:18:07 2022 +0400

    leds: led-core: Fix refcount leak in of_led_get()
    
    [ Upstream commit da1afe8e6099980fe1e2fd7436dca284af9d3f29 ]
    
    class_find_device_by_of_node() calls class_find_device(), it will take
    the reference, use the put_device() to drop the reference when not need
    anymore.
    
    Fixes: 699a8c7c4bd3 ("leds: Add of_led_get() and led_put()")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/20221220121807.1543790-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 071b7f572051259f9f5aaae1cecda1a7055a03d5
Author: Ian Rogers <irogers@google.com>
Date:   Thu Jan 5 00:26:09 2023 -0800

    perf llvm: Fix inadvertent file creation
    
    [ Upstream commit 9f19aab47ced012eddef1e2bc96007efc7713b61 ]
    
    The LLVM template is first echo-ed into command_out and then
    command_out executed. The echo surrounds the template with double
    quotes, however, the template itself may contain quotes. This is
    generally innocuous but in tools/perf/tests/bpf-script-test-prologue.c
    we see:
    ...
    SEC("func=null_lseek file->f_mode offset orig")
    ...
    where the first double quote ends the double quote of the echo, then
    the > redirects output into a file called f_mode.
    
    To avoid this inadvertent behavior substitute redirects and similar
    characters to be ASCII control codes, then substitute the output in
    the echo back again.
    
    Fixes: 5eab5a7ee032acaa ("perf llvm: Display eBPF compiling command in debug output")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andrii Nakryiko <andrii@kernel.org>
    Cc: bpf@vger.kernel.org
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: llvm@lists.linux.dev
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tom Rix <trix@redhat.com>
    Link: https://lore.kernel.org/r/20230105082609.344538-1-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit deece7bd60b0890dc9cb9b7e7295ca994a38abde
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Wed Feb 1 15:08:50 2023 +0100

    gfs2: jdata writepage fix
    
    [ Upstream commit cbb60951ce18c9b6e91d2eb97deb41d8ff616622 ]
    
    The ->writepage() and ->writepages() operations are supposed to write
    entire pages.  However, on filesystems with a block size smaller than
    PAGE_SIZE, __gfs2_jdata_writepage() only adds the first block to the
    current transaction instead of adding the entire page.  Fix that.
    
    Fixes: 18ec7d5c3f43 ("[GFS2] Make journaled data files identical to normal files on disk")
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfd85a0922c4696d768965e686ad805a58d9d834
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Fri Nov 18 16:42:08 2022 +0800

    cifs: Fix warning and UAF when destroy the MR list
    
    [ Upstream commit 3e161c2791f8e661eed24a2c624087084d910215 ]
    
    If the MR allocate failed, the MR recovery work not initialized
    and list not cleared. Then will be warning and UAF when release
    the MR:
    
      WARNING: CPU: 4 PID: 824 at kernel/workqueue.c:3066 __flush_work.isra.0+0xf7/0x110
      CPU: 4 PID: 824 Comm: mount.cifs Not tainted 6.1.0-rc5+ #82
      RIP: 0010:__flush_work.isra.0+0xf7/0x110
      Call Trace:
       <TASK>
       __cancel_work_timer+0x2ba/0x2e0
       smbd_destroy+0x4e1/0x990
       _smbd_get_connection+0x1cbd/0x2110
       smbd_get_connection+0x21/0x40
       cifs_get_tcp_session+0x8ef/0xda0
       mount_get_conns+0x60/0x750
       cifs_mount+0x103/0xd00
       cifs_smb3_do_mount+0x1dd/0xcb0
       smb3_get_tree+0x1d5/0x300
       vfs_get_tree+0x41/0xf0
       path_mount+0x9b3/0xdd0
       __x64_sys_mount+0x190/0x1d0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
      BUG: KASAN: use-after-free in smbd_destroy+0x4fc/0x990
      Read of size 8 at addr ffff88810b156a08 by task mount.cifs/824
      CPU: 4 PID: 824 Comm: mount.cifs Tainted: G        W          6.1.0-rc5+ #82
      Call Trace:
       dump_stack_lvl+0x34/0x44
       print_report+0x171/0x472
       kasan_report+0xad/0x130
       smbd_destroy+0x4fc/0x990
       _smbd_get_connection+0x1cbd/0x2110
       smbd_get_connection+0x21/0x40
       cifs_get_tcp_session+0x8ef/0xda0
       mount_get_conns+0x60/0x750
       cifs_mount+0x103/0xd00
       cifs_smb3_do_mount+0x1dd/0xcb0
       smb3_get_tree+0x1d5/0x300
       vfs_get_tree+0x41/0xf0
       path_mount+0x9b3/0xdd0
       __x64_sys_mount+0x190/0x1d0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
      Allocated by task 824:
       kasan_save_stack+0x1e/0x40
       kasan_set_track+0x21/0x30
       __kasan_kmalloc+0x7a/0x90
       _smbd_get_connection+0x1b6f/0x2110
       smbd_get_connection+0x21/0x40
       cifs_get_tcp_session+0x8ef/0xda0
       mount_get_conns+0x60/0x750
       cifs_mount+0x103/0xd00
       cifs_smb3_do_mount+0x1dd/0xcb0
       smb3_get_tree+0x1d5/0x300
       vfs_get_tree+0x41/0xf0
       path_mount+0x9b3/0xdd0
       __x64_sys_mount+0x190/0x1d0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
      Freed by task 824:
       kasan_save_stack+0x1e/0x40
       kasan_set_track+0x21/0x30
       kasan_save_free_info+0x2a/0x40
       ____kasan_slab_free+0x143/0x1b0
       __kmem_cache_free+0xc8/0x330
       _smbd_get_connection+0x1c6a/0x2110
       smbd_get_connection+0x21/0x40
       cifs_get_tcp_session+0x8ef/0xda0
       mount_get_conns+0x60/0x750
       cifs_mount+0x103/0xd00
       cifs_smb3_do_mount+0x1dd/0xcb0
       smb3_get_tree+0x1d5/0x300
       vfs_get_tree+0x41/0xf0
       path_mount+0x9b3/0xdd0
       __x64_sys_mount+0x190/0x1d0
       do_syscall_64+0x35/0x80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    Let's initialize the MR recovery work before MR allocate to prevent
    the warning, remove the MRs from the list to prevent the UAF.
    
    Fixes: c7398583340a ("CIFS: SMBD: Implement RDMA memory registration")
    Acked-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reviewed-by: Tom Talpey <tom@talpey.com>
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit caac205e0d5b44c4c23a10c6c0976d50ebe16ac2
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Fri Nov 18 16:42:07 2022 +0800

    cifs: Fix lost destroy smbd connection when MR allocate failed
    
    [ Upstream commit e9d3401d95d62a9531082cd2453ed42f2740e3fd ]
    
    If the MR allocate failed, the smb direct connection info is NULL,
    then smbd_destroy() will directly return, then the connection info
    will be leaked.
    
    Let's set the smb direct connection info to the server before call
    smbd_destroy().
    
    Fixes: c7398583340a ("CIFS: SMBD: Implement RDMA memory registration")
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Acked-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reviewed-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Tom Talpey <tom@talpey.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e8ccaf4ff2c4808004276267365da72693b9ddc
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Fri Jan 27 11:18:56 2023 -0500

    nfsd: fix race to check ls_layouts
    
    [ Upstream commit fb610c4dbc996415d57d7090957ecddd4fd64fb6 ]
    
    Its possible for __break_lease to find the layout's lease before we've
    added the layout to the owner's ls_layouts list.  In that case, setting
    ls_recalled = true without actually recalling the layout will cause the
    server to never send a recall callback.
    
    Move the check for ls_layouts before setting ls_recalled.
    
    Fixes: c5c707f96fc9 ("nfsd: implement pNFS layout recalls")
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e73640184cb6f74b9c425f6e503f98ea102e0670
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sun Feb 12 00:01:44 2023 +0000

    hid: bigben_probe(): validate report count
    
    [ Upstream commit b94335f899542a0da5fafc38af8edcaf90195843 ]
    
    bigben_probe() does not validate that the output report has the
    needed report values in the first field.
    A malicious device registering a report with one field and a single
    value causes an head OOB write in bigben_worker() when
    accessing report_field->value[1] to report_field->value[7].
    Use hid_validate_values() which takes care of all the needed checks.
    
    Fixes: 256a90ed9e46 ("HID: hid-bigbenff: driver for BigBen Interactive PS3OFMINIPAD gamepad")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Link: https://lore.kernel.org/r/20230211-bigben-oob-v1-1-d2849688594c@diag.uniroma1.it
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fddde36316da8acb45a3cca2e5fda102f5215877
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sun Feb 12 19:00:01 2023 +0000

    HID: bigben: use spinlock to safely schedule workers
    
    [ Upstream commit 76ca8da989c7d97a7f76c75d475fe95a584439d7 ]
    
    Use spinlocks to deal with workers introducing a wrapper
    bigben_schedule_work(), and several spinlock checks.
    Otherwise, bigben_set_led() may schedule bigben->worker after the
    structure has been freed, causing a use-after-free.
    
    Fixes: 4eb1b01de5b9 ("HID: hid-bigbenff: fix race condition for scheduled work during removal")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Link: https://lore.kernel.org/r/20230125-hid-unregister-leds-v4-3-7860c5763c38@diag.uniroma1.it
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec8b79668ebf0df155b360b5480362f07cdd37d2
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sun Feb 12 19:00:00 2023 +0000

    HID: bigben_worker() remove unneeded check on report_field
    
    [ Upstream commit 27d2a2fd844ec7da70d19fabb482304fd1e0595b ]
    
    bigben_worker() checks report_field to be non-NULL.
    The check has been added in commit
    918aa1ef104d ("HID: bigbenff: prevent null pointer dereference")
    to prevent a NULL pointer crash.
    However, the true root cause was a missing check for output
    reports, patched in commit
    c7bf714f8755 ("HID: check empty report_list in bigben_probe()"),
    where the type-confused report list_entry was overlapping with
    a NULL pointer, which was then causing the crash.
    
    Fixes: 918aa1ef104d ("HID: bigbenff: prevent null pointer dereference")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Link: https://lore.kernel.org/r/20230125-hid-unregister-leds-v4-2-7860c5763c38@diag.uniroma1.it
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ca8ae5cf61e5598dcbc5f66c114649660e997ec
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sun Feb 12 18:59:59 2023 +0000

    HID: bigben: use spinlock to protect concurrent accesses
    
    [ Upstream commit 9fefb6201c4f8dd9f58c581b2a66e5cde2895ea2 ]
    
    bigben driver has a worker that may access data concurrently.
    Proct the accesses using a spinlock.
    
    Fixes: 256a90ed9e46 ("HID: hid-bigbenff: driver for BigBen Interactive PS3OFMINIPAD gamepad")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Link: https://lore.kernel.org/r/20230125-hid-unregister-leds-v4-1-7860c5763c38@diag.uniroma1.it
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f69065e1bd901781d04f91b1cc95a980642f97b2
Author: Lucas Tanure <lucas.tanure@collabora.com>
Date:   Wed Feb 15 13:28:51 2023 +0000

    ASoC: soc-dapm.h: fixup warning struct snd_pcm_substream not declared
    
    [ Upstream commit fdff966bfde7cf0c85562d2bfb1ff1ba83da5f7b ]
    
    Add struct snd_pcm_substream forward declaration
    
    Fixes: 078a85f2806f ("ASoC: dapm: Only power up active channels from a DAI")
    Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20230215132851.1626881-1-lucas.tanure@collabora.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c785a87d9a7745b06ef48e0d4bc905a102b3272d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Feb 15 14:01:28 2023 +0100

    spi: synquacer: Fix timeout handling in synquacer_spi_transfer_one()
    
    [ Upstream commit e6a0b671880207566e1ece983bf989dde60bc1d7 ]
    
    wait_for_completion_timeout() never returns a <0 value. It returns either
    on timeout or a positive value (at least 1, or number of jiffies left
    till timeout)
    
    So, fix the error handling path and return -ETIMEDOUT should a timeout
    occur.
    
    Fixes: b0823ee35cf9 ("spi: Add spi driver for Socionext SynQuacer platform")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Jassi Brar <jaswinder.singh@linaro.org>
    Link: https://lore.kernel.org/r/c2040bf3cfa201fd8890cfab14fa5a701ffeca14.1676466072.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac3a513d4fa888a3d3778419a19fe75cc856eade
Author: NeilBrown <neilb@suse.de>
Date:   Wed Feb 8 15:45:38 2023 +1100

    NFS: fix disabling of swap
    
    [ Upstream commit 5bab56fff53ce161ed859d9559a10361d4f79578 ]
    
    When swap is activated to a file on an NFSv4 mount we arrange that the
    state manager thread is always present as starting a new thread requires
    memory allocations that might block waiting for swap.
    
    Unfortunately the code for allowing the state manager thread to exit when
    swap is disabled was not tested properly and does not work.
    This can be seen by examining /proc/fs/nfsfs/servers after disabling swap
    and unmounting the filesystem.  The servers file will still list one
    entry.  Also a "ps" listing will show the state manager thread is still
    present.
    
    There are two problems.
     1/ rpc_clnt_swap_deactivate() doesn't walk up the ->cl_parent list to
        find the primary client on which the state manager runs.
    
     2/ The thread is not woken up properly and it immediately goes back to
        sleep without checking whether it is really needed.  Using
        nfs4_schedule_state_manager() ensures a proper wake-up.
    
    Reported-by: Olga Kornievskaia <aglo@umich.edu>
    Fixes: 4dc73c679114 ("NFSv4: keep state manager thread active if swap is enabled")
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 242df51a829185cef75c7bdb4495ebb1b19f7dfa
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Tue Feb 14 08:18:23 2023 -0500

    nfs4trace: fix state manager flag printing
    
    [ Upstream commit b46d80bd2d6e7e063c625a20de54248afe8d4889 ]
    
    __print_flags wants a mask, not the enum value.  Add two more flags.
    
    Fixes: 511ba52e4c01 ("NFS4: Trace state recovery operation")
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d434b4c49f05924d722e773ee02240b64ffe19d
Author: NeilBrown <neilb@suse.de>
Date:   Mon Mar 7 10:41:44 2022 +1100

    NFSv4: keep state manager thread active if swap is enabled
    
    [ Upstream commit 4dc73c679114a2f408567e2e44770ed934190db2 ]
    
    If we are swapping over NFSv4, we may not be able to allocate memory to
    start the state-manager thread at the time when we need it.
    So keep it always running when swap is enabled, and just signal it to
    start.
    
    This requires updating and testing the cl_swapper count on the root
    rpc_clnt after following all ->cl_parent links.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Stable-dep-of: b46d80bd2d6e ("nfs4trace: fix state manager flag printing")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d601f782824e3541887cc4628c3aa61526bda431
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Mar 25 14:51:36 2021 -0400

    NFS: Fix up handling of outstanding layoutcommit in nfs_update_inode()
    
    [ Upstream commit 709fa5769914b377af87962bbe4ff81ffb019b2d ]
    
    If there is an outstanding layoutcommit, then the list of attributes
    whose values are expected to change is not the full set. So let's
    be explicit about the full list.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Stable-dep-of: b46d80bd2d6e ("nfs4trace: fix state manager flag printing")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c550f65a54a0de1d8199e4dc146820d484856118
Author: Mike Snitzer <snitzer@kernel.org>
Date:   Tue Feb 14 13:06:05 2023 -0500

    dm: remove flush_scheduled_work() during local_exit()
    
    [ Upstream commit 0b22ff5360f5c4e11050b89206370fdf7dc0a226 ]
    
    Commit acfe0ad74d2e1 ("dm: allocate a special workqueue for deferred
    device removal") switched from using system workqueue to a single
    workqueue local to DM.  But it didn't eliminate the call to
    flush_scheduled_work() that was introduced purely for the benefit of
    deferred device removal with commit 2c140a246dc ("dm: allow remove to
    be deferred").
    
    Since DM core uses its own workqueue (and queue_work) there is no need
    to call flush_scheduled_work() from local_exit().  local_exit()'s
    destroy_workqueue(deferred_remove_workqueue) handles flushing work
    started with queue_work().
    
    Fixes: acfe0ad74d2e1 ("dm: allocate a special workqueue for deferred device removal")
    Signed-off-by: Mike Snitzer <snitzer@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f23a4b9bf8950fd914c61c99e2189f3582909998
Author: Steffen Aschbacher <steffen.aschbacher@stihl.de>
Date:   Mon Feb 13 09:38:05 2023 +0200

    ASoC: tlv320adcx140: fix 'ti,gpio-config' DT property init
    
    [ Upstream commit 771725efe5e2e5396dd9d1220437e5f9d6b9ca9d ]
    
    When the 'ti,gpio-config' property is not defined, the
    device_property_count_u32() will return an error, rather than zero.
    
    The current check, only handles a return value of zero, which assumes that
    the property is defined and has nothing defined.
    
    This change extends the check to also check for an error case (most likely
    to be hit by the case that the 'ti,gpio-config' is not defined).
    
    In case that the 'ti,gpio-config' and the returned 'gpio_count' is not
    correct, there is a 'if (gpio_count != ADCX140_NUM_GPIO_CFGS)' check, a few
    lines lower that will return -EINVAL.
    This means that someone tried to define 'ti,gpio-config', but with the
    wrong number of GPIOs.
    
    Fixes: d5214321498a ("ASoC: tlv320adcx140: Add support for configuring GPIO pin")
    Signed-off-by: Steffen Aschbacher <steffen.aschbacher@stihl.de>
    Signed-off-by: Alexandru Ardelean <alex@shruggie.ro>
    Link: https://lore.kernel.org/r/20230213073805.14640-1-alex@shruggie.ro
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c6d18ea71d86efbdf8861628699af050fb71868
Author: Vadim Pasternak <vadimp@nvidia.com>
Date:   Sun Feb 12 16:57:30 2023 +0200

    hwmon: (mlxreg-fan) Return zero speed for broken fan
    
    [ Upstream commit a1ffd3c46267ee5c807acd780e15df9bb692223f ]
    
    Currently for broken fan driver returns value calculated based on error
    code (0xFF) in related fan speed register.
    Thus, for such fan user gets fan{n}_fault to 1 and fan{n}_input with
    misleading value.
    
    Add check for fan fault prior return speed value and return zero if
    fault is detected.
    
    Fixes: 65afb4c8e7e4 ("hwmon: (mlxreg-fan) Add support for Mellanox FAN driver")
    Signed-off-by: Vadim Pasternak <vadimp@nvidia.com>
    Link: https://lore.kernel.org/r/20230212145730.24247-1-vadimp@nvidia.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a79f1e71e7b57329b157569037d3f8e98be9bd6e
Author: William Zhang <william.zhang@broadcom.com>
Date:   Thu Feb 9 12:02:41 2023 -0800

    spi: bcm63xx-hsspi: Fix multi-bit mode setting
    
    [ Upstream commit 811ff802aaf878ebbbaeac0307a0164fa21e7d40 ]
    
    Currently the driver always sets the controller to dual data bit mode
    for both tx and rx data in the profile mode control register even for
    single data bit transfer. Luckily the opcode is set correctly according
    to SPI transfer data bit width so it does not actually cause issues.
    
    This change fixes the problem by setting tx and rx data bit mode field
    correctly according to the actual SPI transfer tx and rx data bit width.
    
    Fixes: 142168eba9dc ("spi: bcm63xx-hsspi: add bcm63xx HSSPI driver")
    Signed-off-by: William Zhang <william.zhang@broadcom.com>
    Link: https://lore.kernel.org/r/20230209200246.141520-11-william.zhang@broadcom.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59b0ce292a0990316abbf21490c6b88b814bb6f0
Author: Álvaro Fernández Rojas <noltari@gmail.com>
Date:   Tue Feb 23 16:18:51 2021 +0100

    spi: bcm63xx-hsspi: fix pm_runtime
    
    [ Upstream commit 216e8e80057a9f0b6366327881acf88eaf9f1fd4 ]
    
    The driver sets auto_runtime_pm to true, but it doesn't call
    pm_runtime_enable(), which results in "Failed to power device" when PM support
    is enabled.
    
    Signed-off-by: Álvaro Fernández Rojas <noltari@gmail.com>
    Link: https://lore.kernel.org/r/20210223151851.4110-3-noltari@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Stable-dep-of: 811ff802aaf8 ("spi: bcm63xx-hsspi: Fix multi-bit mode setting")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca769960cb570b539acdd00e6b9cf0f9b5c5c66d
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Sat Jan 28 19:08:32 2023 +0800

    scsi: aic94xx: Add missing check for dma_map_single()
    
    [ Upstream commit 32fe45274edb5926abc0fac7263d9f889d02d9cf ]
    
    Add check for dma_map_single() and return error if it fails in order to
    avoid invalid DMA address.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Link: https://lore.kernel.org/r/20230128110832.6792-1-jiasheng@iscas.ac.cn
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Jason Yan <yanaijie@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30c7c72b6cf9d8c95f9b219c9d2e4e31b15bebe5
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Tue Feb 7 16:21:59 2023 +0100

    scsi: mpt3sas: Fix a memory leak
    
    [ Upstream commit 54dd96015e8d7a2a07359e2dfebf05b529d1780c ]
    
    Add a forgotten kfree().
    
    Fixes: dbec4c9040ed ("scsi: mpt3sas: lockless command submission")
    Link: https://lore.kernel.org/r/20230207152159.18627-1-thenzl@redhat.com
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cb8a92a880d4cae226f52a72fcde495ef655e9a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Feb 6 20:36:02 2023 +0100

    drm/amdgpu: fix enum odm_combine_mode mismatch
    
    [ Upstream commit 087bad7eb1f6945f8232f132953ecc2bda8bd38d ]
    
    A conversion from 'bool' to 'enum odm_combine_mode' was incomplete,
    and gcc warns about this with many instances of
    
    display/dc/dml/dcn20/display_mode_vba_20.c:3899:44: warning: implicit conversion from 'enum <anonymous>' to 'enum
    odm_combine_mode' [-Wenum-conversion]
     3899 |     locals->ODMCombineEnablePerState[i][k] = false;
    
    Change the ones that we get a warning for, using the same numerical
    values to leave the behavior unchanged.
    
    Fixes: 5fc11598166d ("drm/amd/display: expand dml structs")
    Link: https://lore.kernel.org/all/20201026210039.3884312-3-arnd@kernel.org/
    Link: https://lore.kernel.org/all/20210927100659.1431744-1-arnd@kernel.org/
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 859bdc96ba89b253fc8e8997ef717b5c1e67c909
Author: Jonathan Cormier <jcormier@criticallink.com>
Date:   Thu Jan 26 17:32:25 2023 -0500

    hwmon: (ltc2945) Handle error case in ltc2945_value_store
    
    [ Upstream commit 178b01eccfb0b8149682f61388400bd3d903dddc ]
    
    ltc2945_val_to_reg errors were not being handled
    which would have resulted in register being set to
    0 (clamped) instead of being left alone.
    
    Fixes: 6700ce035f83 ("hwmon: Driver for Linear Technologies LTC2945")
    
    Signed-off-by: Jonathan Cormier <jcormier@criticallink.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9bcf67b8bb39e951e8e16c46e3a7274f3d3774f
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Feb 2 19:36:46 2023 +0100

    ASoC: dt-bindings: meson: fix gx-card codec node regex
    
    [ Upstream commit 480b26226873c88e482575ceb0d0a38d76e1be57 ]
    
    'codec' is a valid node name when there is a single codec
    in the link. Fix the node regular expression to apply this.
    
    Fixes: fd00366b8e41 ("ASoC: meson: gx: add sound card dt-binding documentation")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Link: https://lore.kernel.org/r/20230202183653.486216-3-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4d74716da0079ce6c8241e8ad74c7b14450efe8
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Thu Feb 2 09:34:19 2023 -0700

    ASoC: mchp-spdifrx: Fix uninitialized use of mr in mchp_spdifrx_hw_params()
    
    [ Upstream commit 218674a45930c700486d27b765bf2f1b43f8cbf7 ]
    
    Clang warns:
    
      ../sound/soc/atmel/mchp-spdifrx.c:455:3: error: variable 'mr' is uninitialized when used here [-Werror,-Wuninitialized]
                      mr |= SPDIFRX_MR_ENDIAN_BIG;
                      ^~
      ../sound/soc/atmel/mchp-spdifrx.c:432:8: note: initialize the variable 'mr' to silence this warning
              u32 mr;
                    ^
                     = 0
      1 error generated.
    
    Zero initialize mr so that these bitwise OR and assignment operation
    works unconditionally.
    
    Fixes: fa09fa60385a ("ASoC: mchp-spdifrx: fix controls which rely on rsr register")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1797
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20230202-mchp-spdifrx-fix-uninit-mr-v1-1-629a045d7a2f@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce07bbe038aead7d9fc996e52a5d92d0243abaac
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Jan 30 14:06:43 2023 +0200

    ASoC: mchp-spdifrx: disable all interrupts in mchp_spdifrx_dai_remove()
    
    [ Upstream commit aaecdc32b7e35b4f9b457fb3509414aa9a932589 ]
    
    CSC interrupts which might be used in controls are on bits 8 and 9 of
    SPDIFRX_IDR register. Thus disable all the interrupts that are exported
    by driver.
    
    Fixes: ef265c55c1ac ("ASoC: mchp-spdifrx: add driver for SPDIF RX")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20230130120647.638049-5-claudiu.beznea@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8f5539b5e7f37a522c69d7561d2419a435363b6
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Jan 30 14:06:42 2023 +0200

    ASoC: mchp-spdifrx: fix controls that works with completion mechanism
    
    [ Upstream commit d3681df44e856aab523a6eb7ba15b5e41efcbb1c ]
    
    Channel status get and channel subcode get controls relies on data
    returned by controls when certain IRQs are raised. To achieve that
    completions are used b/w controls and interrupt service routine. The
    concurrent accesses to these controls are protected by
    struct snd_card::controls_rwsem.
    
    Issues identified:
    - reinit_completion() may be called while waiting for completion
      which should be avoided
    - in case of multiple threads waiting, the complete() call in interrupt
      will signal only one waiting thread per interrupt which may lead to
      timeout for the others
    - in case of channel status get as the CSC interrupt is not refcounted
      ISR may disable interrupt for threads that were just enabled it.
    
    To solve these the access to controls were protected by a mutex. Along
    with this there is no need for spinlock to protect the software cache
    reads/updates b/w controls and ISR as the update is happening only when
    requested from control, and only one reader can reach the control.
    
    Fixes: ef265c55c1ac ("ASoC: mchp-spdifrx: add driver for SPDIF RX")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20230130120647.638049-4-claudiu.beznea@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45956f1764ca8067c1817fea060bf1835acc2cb8
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Jan 30 14:06:41 2023 +0200

    ASoC: mchp-spdifrx: fix return value in case completion times out
    
    [ Upstream commit a4c4161d6eae3ef5f486d1638ef452d9bc1376b0 ]
    
    wait_for_completion_interruptible_timeout() returns 0 in case of
    timeout. Check this into account when returning from function.
    
    Fixes: ef265c55c1ac ("ASoC: mchp-spdifrx: add driver for SPDIF RX")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20230130120647.638049-3-claudiu.beznea@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 426423ed55def0667770b05ef8fcb1b3f6fe9317
Author: Gu Shengxian <gushengxian@yulong.com>
Date:   Tue Jul 6 18:02:30 2021 +0800

    ASoC: atmel: fix spelling mistakes
    
    [ Upstream commit 55233b22502151e0b2d9cc599e1ddf1f5584c87a ]
    
    Fix some spelling mistakes as follows:
    regaedles ==> regardless
    prezent ==> present
    underrrun ==> underrun
    controlls ==> controls
    
    Signed-off-by: Gu Shengxian <gushengxian@yulong.com>
    Link: https://lore.kernel.org/r/20210706100230.32633-1-gushengxian507419@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Stable-dep-of: a4c4161d6eae ("ASoC: mchp-spdifrx: fix return value in case completion times out")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1983a70778eb999f62fe4d6dfa8bcfefe0b7f47f
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Jan 30 14:06:40 2023 +0200

    ASoC: mchp-spdifrx: fix controls which rely on rsr register
    
    [ Upstream commit fa09fa60385abbf99342494b280da8b4aebbc0e9 ]
    
    The SPDIFRX block is clocked by 2 clocks: peripheral and generic clocks.
    Peripheral clock feeds user interface (registers) and generic clock feeds
    the receiver.
    
    To enable the receiver the generic clock needs to be enabled and also the
    ENABLE bit of MCHP_SPDIFRX_MR register need to be set.
    
    The signal control exported by mchp-spdifrx driver reports wrong status
    when the receiver is disabled. This can happen when requesting the signal
    and the capture was not previously started. To solve this the receiver
    needs to be enabled (by enabling generic clock and setting ENABLE bit of
    MR register) before reading the signal status.
    
    As with this fix there are 2 paths now that need to control the generic
    clock and ENABLE bit of SPDIFRX_MR register (one path though controls, one
    path though configuration) a mutex has been introduced. We can't rely on
    subsystem locking as the controls are protected by
    struct snd_card::controls_rwsem semaphore and configuration is protected
    by a different lock (embedded in snd_pcm_stream_lock_irq()).
    
    The introduction of mutex is also extended to other controls which rely on
    SPDIFRX_RSR.ULOCK bit as it has been discovered experimentally that having
    both clocks enabled but not the receiver (through ENABLE bit of SPDIFRX.MR)
    leads to inconsistent values of SPDIFRX_RSR.ULOCK. Thus on some controls we
    rely on software state (dev->trigger_enabled protected by mutex) to
    retrieve proper values.
    
    Fixes: ef265c55c1ac ("ASoC: mchp-spdifrx: add driver for SPDIF RX")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20230130120647.638049-2-claudiu.beznea@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b33ca7b7bb66332e3498d0e3f3d912af5cbcc465
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jan 30 15:01:40 2023 +0100

    spi: dw_bt1: fix MUX_MMIO dependencies
    
    [ Upstream commit d4bde04318c0d33705e9a77d4c7df72f262011e0 ]
    
    Selecting a symbol with additional dependencies requires
    adding the same dependency here:
    
    WARNING: unmet direct dependencies detected for MUX_MMIO
      Depends on [n]: MULTIPLEXER [=y] && OF [=n]
      Selected by [y]:
      - SPI_DW_BT1 [=y] && SPI [=y] && SPI_MASTER [=y] && SPI_DESIGNWARE [=y] && (MIPS_BAIKAL_T1 || COMPILE_TEST [=y])
    
    Drop the 'select' here to avoid the problem. Anyone using
    the dw-bt1 SPI driver should make sure they include the
    mux driver as well now.
    
    Fixes: 7218838109fe ("spi: dw-bt1: Fix undefined devm_mux_control_get symbol")
    Fixes: abf00907538e ("spi: dw: Add Baikal-T1 SPI Controller glue driver")
    Link: https://lore.kernel.org/all/20221218192523.c6vnfo26ua6xqf26@mobilestation/
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Link: https://lore.kernel.org/r/20230130140156.3620863-1-arnd@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33033f392d8122a94074472191f961243079a14c
Author: Haibo Chen <haibo.chen@nxp.com>
Date:   Tue Dec 20 17:02:47 2022 +0800

    gpio: vf610: connect GPIO label to dev name
    
    [ Upstream commit 6f8ecb7f85f441eb7d78ba2a4df45ee8a821934e ]
    
    Current GPIO label is fixed, so can't distinguish different GPIO
    controllers through labels. Use dev name instead.
    
    Fixes: 7f2691a19627 ("gpio: vf610: add gpiolib/IRQ chip driver for Vybrid")
    Signed-off-by: Clark Wang <xiaoning.wang@nxp.com>
    Signed-off-by: Haibo Chen <haibo.chen@nxp.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2f6e683d9e76b2678a39b5d18a29098a41dc281
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Jan 23 23:17:20 2023 +0000

    ASoC: soc-compress.c: fixup private_data on snd_soc_new_compress()
    
    [ Upstream commit ffe4c0f0bfaa571a676a0e946d4a6a0607f94294 ]
    
    commit d3268a40d4b19f ("ASoC: soc-compress.c: fix NULL dereference")
    enables DPCM capture, but it should independent from playback.
    This patch fixup it.
    
    Fixes: d3268a40d4b1 ("ASoC: soc-compress.c: fix NULL dereference")
    Link: https://lore.kernel.org/r/87tu0i6j7j.wl-kuninori.morimoto.gx@renesas.com
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/871qnkvo1s.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a89ddee1686a8872384aaa9f0bcfa6b675acd86
Author: Nícolas F. R. A. Prado <nfraprado@collabora.com>
Date:   Tue Nov 22 09:39:49 2022 -0500

    drm/mediatek: Clean dangling pointer on bind error path
    
    [ Upstream commit 36aa8c61af55675ed967900fbe5deb32d776f051 ]
    
    mtk_drm_bind() can fail, in which case drm_dev_put() is called,
    destroying the drm_device object. However a pointer to it was still
    being held in the private object, and that pointer would be passed along
    to DRM in mtk_drm_sys_prepare() if a suspend were triggered at that
    point, resulting in a panic. Clean the pointer when destroying the
    object in the error path to prevent this from happening.
    
    Fixes: 119f5173628a ("drm/mediatek: Add DRM Driver for Mediatek SoC MT8173.")
    Signed-off-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/20221122143949.3493104-1-nfraprado@collabora.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b64b6dff15a38468b8cd33fc7864fa4e02b0933a
Author: ruanjinjie <ruanjinjie@huawei.com>
Date:   Mon Dec 5 17:51:15 2022 +0800

    drm/mediatek: mtk_drm_crtc: Add checks for devm_kcalloc
    
    [ Upstream commit 5bf1e3bd7da625ccf9a22c8cb7d65271e6e47f4c ]
    
    As the devm_kcalloc may return NULL, the return value needs to be checked
    to avoid NULL poineter dereference.
    
    Fixes: 31c5558dae05 ("drm/mediatek: Refactor plane init")
    Signed-off-by: ruanjinjie <ruanjinjie@huawei.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/20221205095115.2905090-1-ruanjinjie@huawei.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a50d86696f6a7305b84987a9096ed111bf85e8f
Author: Rob Clark <robdclark@chromium.org>
Date:   Thu Jan 19 15:12:55 2023 -0800

    drm/mediatek: Drop unbalanced obj unref
    
    [ Upstream commit 4deef811828e87e26a978d5d6433b261d4713849 ]
    
    In the error path, mtk_drm_gem_object_mmap() is dropping an obj
    reference that it doesn't own.
    
    Fixes: 119f5173628a ("drm/mediatek: Add DRM Driver for Mediatek SoC MT8173.")
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/20230119231255.2883365-1-robdclark@gmail.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55bc7babc094db91342a8dc98270fe240e35e96b
Author: Miles Chen <miles.chen@mediatek.com>
Date:   Wed Jan 11 10:44:41 2023 +0800

    drm/mediatek: Use NULL instead of 0 for NULL pointer
    
    [ Upstream commit 4744cde06f57dd6fbaac468663b1fe2f653eaa16 ]
    
    Use NULL for NULL pointer to fix the following sparse warning:
    drivers/gpu/drm/mediatek/mtk_drm_gem.c:265:27: sparse: warning: Using plain integer as NULL pointer
    
    Fixes: 3df64d7b0a4f ("drm/mediatek: Implement gem prime vmap/vunmap function")
    Signed-off-by: Miles Chen <miles.chen@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/20230111024443.24559-1-miles.chen@mediatek.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da5fd53999335be8296410b41304457788a4b1cf
Author: Xinlei Lee <xinlei.lee@mediatek.com>
Date:   Tue Jan 10 13:54:51 2023 +0800

    drm/mediatek: dsi: Reduce the time of dsi from LP11 to sending cmd
    
    [ Upstream commit 91aeaed2c1147e3b1157dc084d23f190856a6c23 ]
    
    According to Figure 16 Turnaround Procedure on page 36 in [1], you
    can see the status of LP-00 -> LP10 -> LP11. This state can correspond
    to the state of DSI from LP00 -> LP11 in mtk_dsi_lane_ready function
    in mtk_dsi.c.
    
    LP-00 -> LP10 -> LP11 takes about 2*TLPX time (refer to [1] page 51
    to see that TLPX is 50ns)
    
    The delay at the end of the mtk_dsi_lane_ready function should be
    greater than the 2*TLPX specified by the DSI spec, and less than
    the time specified by the DSI_RX (generally 6ms to 40ms), to avoid
    problems caused by the RX specification
    
    [1]:mipi_D-PHY_specification_v1-1
    
    Fixes: 39e8d062b03c ("drm/mediatek: Keep dsi as LP00 before dcs cmds transfer")
    Signed-off-by: Xinlei Lee <xinlei.lee@mediatek.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://patchwork.kernel.org/project/linux-mediatek/patch/1673330093-6771-2-git-send-email-xinlei.lee@mediatek.com/
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfd710a7e5a53b3c537d6ba142bb9933bad87357
Author: Mikko Perttunen <mperttunen@nvidia.com>
Date:   Thu Jan 19 15:39:00 2023 +0200

    gpu: host1x: Don't skip assigning syncpoints to channels
    
    [ Upstream commit eb258cc1fd458e584082be987dbc6ec42668c05e ]
    
    The code to write the syncpoint channel assignment register
    incorrectly skips the write if hypervisor registers are not available.
    
    The register, however, is within the guest aperture so remove the
    check and assign syncpoints properly even on virtualized systems.
    
    Fixes: c3f52220f276 ("gpu: host1x: Enable Tegra186 syncpoint protection")
    Signed-off-by: Mikko Perttunen <mperttunen@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53f98ffcd89bf382ae3e4792cef5b1b25268424e
Author: Guodong Liu <Guodong.Liu@mediatek.com>
Date:   Wed Jan 18 14:20:36 2023 +0800

    pinctrl: mediatek: Initialize variable *buf to zero
    
    [ Upstream commit 2e34f82ba214134ecf590fbe0cdbd87401645a8a ]
    
    Coverity spotted that *buf is not initialized to zero in
    mtk_pctrl_dbg_show. Using uninitialized variable *buf as argument to %s
    when calling seq_printf. Fix this coverity by initializing *buf as zero.
    
    Fixes: 184d8e13f9b1 ("pinctrl: mediatek: Add support for pin configuration dump via debugfs.")
    Signed-off-by: Guodong Liu <Guodong.Liu@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20230118062036.26258-3-Guodong.Liu@mediatek.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2eb2e7125143fc4531b938c2c47e365b9f1a436
Author: Guodong Liu <Guodong.Liu@mediatek.com>
Date:   Wed Jan 18 14:20:35 2023 +0800

    pinctrl: mediatek: Initialize variable pullen and pullup to zero
    
    [ Upstream commit a298c70a10c604a6b3df5a0aa56597b705ba0f6b ]
    
    Coverity spotted that pullen and pullup is not initialized to zero in
    mtk_pctrl_show_one_pin. The uninitialized variable pullen is used in
    assignment statement "rsel = pullen;" in mtk_pctrl_show_one_pin, and
    Uninitialized variable pullup is used when calling scnprintf. Fix this
    coverity by initializing pullen and pullup as zero.
    
    Fixes: 184d8e13f9b1 ("pinctrl: mediatek: Add support for pin configuration dump via debugfs.")
    Signed-off-by: Guodong Liu <Guodong.Liu@mediatek.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20230118062036.26258-2-Guodong.Liu@mediatek.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a46d29437b0a2a948d368758cd50396272be910c
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jan 13 23:53:50 2023 +0200

    pinctrl: bcm2835: Remove of_node_put() in bcm2835_of_gpio_ranges_fallback()
    
    [ Upstream commit 2d578dd27871372f7159dd3206149ec616700d87 ]
    
    Remove wrong of_node_put() in bcm2835_of_gpio_ranges_fallback(),
    there is no counterpart of_node_get() for it.
    
    Fixes: d2b67744fd99 ("pinctrl: bcm2835: implement hook for missing gpio-ranges")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Stefan Wahren <stefan.wahren@i2se.com>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Bartosz Golaszewski <bartosz.golaszewski@linaro.org>
    Link: https://lore.kernel.org/r/20230113215352.44272-3-andriy.shevchenko@linux.intel.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49907c8873826ee771ba0ca1629e809c6479f617
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Dec 6 15:48:19 2022 +0800

    drm/msm/mdp5: Add check for kzalloc
    
    [ Upstream commit 13fcfcb2a9a4787fe4e49841d728f6f2e9fa6911 ]
    
    As kzalloc may fail and return NULL pointer,
    it should be better to check the return value
    in order to avoid the NULL pointer dereference.
    
    Fixes: 1cff7440a86e ("drm/msm: Convert to using __drm_atomic_helper_crtc_reset() for reset.")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/514154/
    Link: https://lore.kernel.org/r/20221206074819.18134-1-jiasheng@iscas.ac.cn
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9743b3052e125c44b555f07f2876a4bdccfd983
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Dec 6 16:02:36 2022 +0800

    drm/msm/dpu: Add check for pstates
    
    [ Upstream commit 93340e10b9c5fc86730d149636e0aa8b47bb5a34 ]
    
    As kzalloc may fail and return NULL pointer,
    it should be better to check pstates
    in order to avoid the NULL pointer dereference.
    
    Fixes: 25fdd5933e4c ("drm/msm: Add SDM845 DPU support")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/514160/
    Link: https://lore.kernel.org/r/20221206080236.43687-1-jiasheng@iscas.ac.cn
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31f2f8de0ea7387cde18a24f94ba5e0b886b9842
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Dec 6 16:05:17 2022 +0800

    drm/msm/dpu: Add check for cstate
    
    [ Upstream commit c96988b7d99327bb08bd9efd29a203b22cd88ace ]
    
    As kzalloc may fail and return NULL pointer,
    it should be better to check cstate
    in order to avoid the NULL pointer dereference
    in __drm_atomic_helper_crtc_reset.
    
    Fixes: 1cff7440a86e ("drm/msm: Convert to using __drm_atomic_helper_crtc_reset() for reset.")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/514163/
    Link: https://lore.kernel.org/r/20221206080517.43786-1-jiasheng@iscas.ac.cn
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70bc4db1fb7b47ef17b5342529d022497a6e1e7d
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 18 04:01:52 2023 +0200

    drm/msm: use strscpy instead of strncpy
    
    [ Upstream commit d7fd8634f48d76aa799ed57beb7d87dab91bde80 ]
    
    Using strncpy can result in non-NULL-terminated destination string. Use
    strscpy instead. This fixes following warning:
    
    drivers/gpu/drm/msm/msm_fence.c: In function ‘msm_fence_context_alloc’:
    drivers/gpu/drm/msm/msm_fence.c:25:9: warning: ‘strncpy’ specified bound 32 equals destination size [-Wstringop-truncation]
       25 |         strncpy(fctx->name, name, sizeof(fctx->name));
          |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Fixes: f97decac5f4c ("drm/msm: Support multiple ringbuffers")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/518787/
    Link: https://lore.kernel.org/r/20230118020152.1689213-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23770064a339ae9130cbe03de4bf47989298de59
Author: Daniel Mentz <danielmentz@google.com>
Date:   Mon Jan 16 17:49:07 2023 -0500

    drm/mipi-dsi: Fix byte order of 16-bit DCS set/get brightness
    
    [ Upstream commit c9d27c6be518b4ef2966d9564654ef99292ea1b3 ]
    
    The MIPI DCS specification demands that brightness values are sent in
    big endian byte order. It also states that one parameter (i.e. one byte)
    shall be sent/received for 8 bit wide values, and two parameters shall
    be used for values that are between 9 and 16 bits wide.
    
    Add new functions to properly handle 16-bit brightness in big endian,
    since the two 8- and 16-bit cases are distinct from each other.
    
    [richard: use separate functions instead of switch/case]
    [richard: split into 16-bit component]
    
    Fixes: 1a9d759331b8 ("drm/dsi: Implement DCS set/get display brightness")
    Signed-off-by: Daniel Mentz <danielmentz@google.com>
    Link: https://android.googlesource.com/kernel/msm/+/754affd62d0ee268c686c53169b1dbb7deac8550
    [richard: fix 16-bit brightness_get]
    Signed-off-by: Richard Acayan <mailingradian@gmail.com>
    Tested-by: Caleb Connolly <caleb@connolly.tech>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230116224909.23884-2-mailingradian@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10c58ca62a54bbf513b290f4ae05b26d9446a364
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 18 10:16:51 2023 +0200

    drm/bridge: lt9611: pass a pointer to the of node
    
    [ Upstream commit b0a7f8736789935f62d6df32d441cdf05a5c05d2 ]
    
    Pass a pointer to the OF node while registering lt9611 MIPI device.
    
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230118081658.2198520-7-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffd4cbd7eabd7c082504512ac90d236ee162b276
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 18 10:16:50 2023 +0200

    drm/bridge: lt9611: fix clock calculation
    
    [ Upstream commit 2576eb26494eb0509dd9ceb0cd27771a7a5e3674 ]
    
    Instead of having several fixed values for the pcr register, calculate
    it before programming. This allows the bridge to support most of the
    display modes.
    
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230118081658.2198520-6-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa37ec52c1a98c7cf757e5204d93bf0873c07b99
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 18 10:16:49 2023 +0200

    drm/bridge: lt9611: fix programming of video modes
    
    [ Upstream commit ad188aa47edaa033a270e1a3efae43836ff47569 ]
    
    Program the upper part of the hfront_porch into the proper register.
    
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230118081658.2198520-5-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bffd0078026fd9578e41fb57cdec87d35629b5b1
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 18 10:16:48 2023 +0200

    drm/bridge: lt9611: fix polarity programming
    
    [ Upstream commit 0b157efa384ea417304b1da284ee2f603c607fc3 ]
    
    Fix programming of hsync and vsync polarities
    
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230118081658.2198520-4-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c865a014623f525acd822b00ee0804364802ce2
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 18 10:16:47 2023 +0200

    drm/bridge: lt9611: fix HPD reenablement
    
    [ Upstream commit a7790f6bd38f3642b60ae3504a2c749135b89451 ]
    
    The driver will reset the bridge in the atomic_pre_enable(). However
    this will also drop the HPD interrupt state. Instead of resetting the
    bridge, properly wake it up. This fixes the HPD interrupt delivery after
    the disable/enable cycle.
    
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230118081658.2198520-3-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88618e800acf13f54ee435a132bd40466a02ea31
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Jan 18 10:16:46 2023 +0200

    drm/bridge: lt9611: fix sleep mode setup
    
    [ Upstream commit ae2d329f104b75a0a78dcaded29fe6283289cdf9 ]
    
    On atomic_post_disable the bridge goes to the low power state. However
    the code disables too much of the chip, so the HPD event is not being
    detected and delivered to the host. Reduce the power saving in order to
    get the HPD event.
    
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20230118081658.2198520-2-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dbd54d679e3ab37be43bc1ed9f463dbf83a2259
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Tue Jan 10 00:15:55 2023 +0100

    drm/msm/dpu: Disallow unallocated resources to be returned
    
    [ Upstream commit abc40122d9a69f56c04efb5a7485795f5ac799d1 ]
    
    In the event that the topology requests resources that have not been
    created by the system (because they are typically not represented in
    dpu_mdss_cfg ^1), the resource(s) in global_state (in this case DSC
    blocks, until their allocation/assignment is being sanity-checked in
    "drm/msm/dpu: Reject topologies for which no DSC blocks are available")
    remain NULL but will still be returned out of
    dpu_rm_get_assigned_resources, where the caller expects to get an array
    containing num_blks valid pointers (but instead gets these NULLs).
    
    To prevent this from happening, where null-pointer dereferences
    typically result in a hard-to-debug platform lockup, num_blks shouldn't
    increase past NULL blocks and will print an error and break instead.
    After all, max_blks represents the static size of the maximum number of
    blocks whereas the actual amount varies per platform.
    
    ^1: which can happen after a git rebase ended up moving additions to
    _dpu_cfg to a different struct which has the same patch context.
    
    Fixes: bb00a452d6f7 ("drm/msm/dpu: Refactor resource manager")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/517636/
    Link: https://lore.kernel.org/r/20230109231556.344977-1-marijn.suijten@somainline.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42fdae9f59b181fbee772a1d85fef6b7ee2e03b7
Author: Alexey V. Vissarionov <gremlin@altlinux.org>
Date:   Tue Jan 17 14:15:23 2023 +0300

    ALSA: hda/ca0132: minor fix for allocation size
    
    [ Upstream commit 3ee0fe7fa39b14d1cea455b7041f2df933bd97d2 ]
    
    Although the "dma_chan" pointer occupies more or equal space compared
    to "*dma_chan", the allocation size should use the size of variable
    itself.
    
    Found by Linux Verification Center (linuxtesting.org) with SVACE.
    
    Fixes: 01ef7dbffb41 ("ALSA: hda - Update CA0132 codec to load DSP firmware binary")
    Signed-off-by: Alexey V. Vissarionov <gremlin@altlinux.org>
    Link: https://lore.kernel.org/r/20230117111522.GA15213@altlinux.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b26bd7791f3cdf3c3318162b1d40c9d1910facca
Author: Akhil P Oommen <quic_akhilpo@quicinc.com>
Date:   Wed Dec 21 20:39:56 2022 +0530

    drm/msm/adreno: Fix null ptr access in adreno_gpu_cleanup()
    
    [ Upstream commit dbeedbcb268d055d8895aceca427f897e12c2b50 ]
    
    Fix the below kernel panic due to null pointer access:
    [   18.504431] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000048
    [   18.513464] Mem abort info:
    [   18.516346]   ESR = 0x0000000096000005
    [   18.520204]   EC = 0x25: DABT (current EL), IL = 32 bits
    [   18.525706]   SET = 0, FnV = 0
    [   18.528878]   EA = 0, S1PTW = 0
    [   18.532117]   FSC = 0x05: level 1 translation fault
    [   18.537138] Data abort info:
    [   18.540110]   ISV = 0, ISS = 0x00000005
    [   18.544060]   CM = 0, WnR = 0
    [   18.547109] user pgtable: 4k pages, 39-bit VAs, pgdp=0000000112826000
    [   18.553738] [0000000000000048] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000
    [   18.562690] Internal error: Oops: 0000000096000005 [#1] PREEMPT SMP
    **Snip**
    [   18.696758] Call trace:
    [   18.699278]  adreno_gpu_cleanup+0x30/0x88
    [   18.703396]  a6xx_destroy+0xc0/0x130
    [   18.707066]  a6xx_gpu_init+0x308/0x424
    [   18.710921]  adreno_bind+0x178/0x288
    [   18.714590]  component_bind_all+0xe0/0x214
    [   18.718797]  msm_drm_bind+0x1d4/0x614
    [   18.722566]  try_to_bring_up_aggregate_device+0x16c/0x1b8
    [   18.728105]  __component_add+0xa0/0x158
    [   18.732048]  component_add+0x20/0x2c
    [   18.735719]  adreno_probe+0x40/0xc0
    [   18.739300]  platform_probe+0xb4/0xd4
    [   18.743068]  really_probe+0xfc/0x284
    [   18.746738]  __driver_probe_device+0xc0/0xec
    [   18.751129]  driver_probe_device+0x48/0x110
    [   18.755421]  __device_attach_driver+0xa8/0xd0
    [   18.759900]  bus_for_each_drv+0x90/0xdc
    [   18.763843]  __device_attach+0xfc/0x174
    [   18.767786]  device_initial_probe+0x20/0x2c
    [   18.772090]  bus_probe_device+0x40/0xa0
    [   18.776032]  deferred_probe_work_func+0x94/0xd0
    [   18.780686]  process_one_work+0x190/0x3d0
    [   18.784805]  worker_thread+0x280/0x3d4
    [   18.788659]  kthread+0x104/0x1c0
    [   18.791981]  ret_from_fork+0x10/0x20
    [   18.795654] Code: f9400408 aa0003f3 aa1f03f4 91142015 (f9402516)
    [   18.801913] ---[ end trace 0000000000000000 ]---
    [   18.809039] Kernel panic - not syncing: Oops: Fatal exception
    
    Fixes: 17e822f7591f ("drm/msm: fix unbalanced pm_runtime_enable in adreno_gpu_{init, cleanup}")
    Signed-off-by: Akhil P Oommen <quic_akhilpo@quicinc.com>
    Patchwork: https://patchwork.freedesktop.org/patch/515605/
    Link: https://lore.kernel.org/r/20221221203925.v2.1.Ib978de92c4bd000b515486aad72e96c2481f84d0@changeid
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3bf72eab8c8c2286fbcddb1d2776342f655332f
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Mon Jan 16 15:07:54 2023 +0800

    ASoC: fsl_sai: initialize is_dsp_mode flag
    
    [ Upstream commit a23924b7dd7b748fff8e305e1daf590fed2af21b ]
    
    Initialize is_dsp_mode flag in the beginning of function
    fsl_sai_set_dai_fmt_tr().
    
    When the DAIFMT is DAIFMT_DSP_B the first time, is_dsp_mode is
    true, then the second time DAIFMT is DAIFMT_I2S, is_dsp_mode
    still true, which is a wrong state. So need to initialize
    is_dsp_mode flag every time.
    
    Fixes: a3f7dcc9cc03 ("ASoC: fsl-sai: Add SND_SOC_DAIFMT_DSP_A/B support.")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Iuliana Prodan <iuliana.prodan@nxp.com>
    Link: https://lore.kernel.org/r/1673852874-32200-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4438cbd9c04c7a5cee457193ece2e012cf9ed9b
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Wed Dec 7 12:53:25 2022 +0100

    drm/vc4: hdmi: Correct interlaced timings again
    
    [ Upstream commit 771d6539f27bd55f43d8a95d53a7eeaaffa2681c ]
    
    The back porch timings were correct, only the sync offset was wrong.
    Correct timing is now reported for 1080i and 576i, but the h offset is
    incorrect for 480i for non-obvious reasons.
    
    Fixes: fb10dc451c0f ("drm/vc4: hdmi: Correct HDMI timing registers for interlaced modes")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20221207-rpi-hvs-crtc-misc-v1-14-1f8e0770798b@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15a6be1011c2965a3fbaaf2ce110c63d06351fe5
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Wed Dec 7 12:53:17 2022 +0100

    drm/vc4: hvs: Fix colour order for xRGB1555 on HVS5
    
    [ Upstream commit 902973dc1a049c0d7bf0c222b8f2b3876f01b4a2 ]
    
    Same as the xRGB8888 formats, HVS5 has managed to swap the colour
    channels for the xRGB1555 formats as well. Add the relevant
    config for pixel_order_hvs5.
    
    Fixes: c54619b0bfb3 ("drm/vc4: Add support for the BCM2711 HVS5")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20221207-rpi-hvs-crtc-misc-v1-6-1f8e0770798b@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc65127ba4c0091886811d94c7d46aecfd13c2f1
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Wed Dec 7 12:53:13 2022 +0100

    drm/vc4: hvs: Set AXI panic modes
    
    [ Upstream commit df993fced230daa8452892406f3180c93ebf7e7b ]
    
    The HVS can change AXI request mode based on how full the COB
    FIFOs are.
    Until now the vc4 driver has been relying on the firmware to
    have set these to sensible values.
    
    With HVS channel 2 now being used for live video, change the
    panic mode for all channels to be explicitly set by the driver,
    and the same for all channels.
    
    Fixes: c54619b0bfb3 ("drm/vc4: Add support for the BCM2711 HVS5")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20221207-rpi-hvs-crtc-misc-v1-2-1f8e0770798b@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d562054a3a2eede3507a5461011ee82b671fcb88
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 2 15:28:45 2023 +0400

    pinctrl: rockchip: Fix refcount leak in rockchip_pinctrl_parse_groups
    
    [ Upstream commit c818ae563bf99457f02e8170aabd6b174f629f65 ]
    
    of_find_node_by_phandle() returns a node pointer with refcount incremented,
    We should use of_node_put() on it when not needed anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: d3e5116119bd ("pinctrl: add pinctrl driver for Rockchip SoCs")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20230102112845.3982407-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3dd6f159385d13853e41e697cb71070a942f221c
Author: Jianqun Xu <jay.xu@rock-chips.com>
Date:   Tue Apr 20 17:12:40 2021 +0800

    pinctrl: rockchip: do coding style for mux route struct
    
    [ Upstream commit fe202ea8e5b170ef7b3741da885e8cb7bae1106e ]
    
    The mux route tables take many lines for each SoC, and it will be more
    instances for newly SoC, that makes the file size increase larger.
    
    This patch only do coding style for mux route struct, by adding a new
    definition and replace the structs by script which supplied by
    huangtao@rock-chips.com
    
    sed -i -e "
    /static struct rockchip_mux_route_data /bcheck
    b
    :append-next-line
    N
    :check
    /^[^;]*$/bappend-next-line
    s/[[:blank:]]*.bank_num = \([[:digit:]]*,\)\n/\tRK_MUXROUTE_SAME(\1/g
    s/[[:blank:]]*.pin =[[:blank:]]*0,\n/ RK_PA0,/g
    s/[[:blank:]]*.pin =[[:blank:]]*1,\n/ RK_PA1,/g
    s/[[:blank:]]*.pin =[[:blank:]]*2,\n/ RK_PA2,/g
    s/[[:blank:]]*.pin =[[:blank:]]*3,\n/ RK_PA3,/g
    s/[[:blank:]]*.pin =[[:blank:]]*4,\n/ RK_PA4,/g
    s/[[:blank:]]*.pin =[[:blank:]]*5,\n/ RK_PA5,/g
    s/[[:blank:]]*.pin =[[:blank:]]*6,\n/ RK_PA6,/g
    s/[[:blank:]]*.pin =[[:blank:]]*7,\n/ RK_PA7,/g
    s/[[:blank:]]*.pin =[[:blank:]]*8,\n/ RK_PB0,/g
    s/[[:blank:]]*.pin =[[:blank:]]*9,\n/ RK_PB1,/g
    s/[[:blank:]]*.pin =[[:blank:]]*10,\n/ RK_PB2,/g
    s/[[:blank:]]*.pin =[[:blank:]]*11,\n/ RK_PB3,/g
    s/[[:blank:]]*.pin =[[:blank:]]*12,\n/ RK_PB4,/g
    s/[[:blank:]]*.pin =[[:blank:]]*13,\n/ RK_PB5,/g
    s/[[:blank:]]*.pin =[[:blank:]]*14,\n/ RK_PB6,/g
    s/[[:blank:]]*.pin =[[:blank:]]*15,\n/ RK_PB7,/g
    s/[[:blank:]]*.pin =[[:blank:]]*16,\n/ RK_PC0,/g
    s/[[:blank:]]*.pin =[[:blank:]]*17,\n/ RK_PC1,/g
    s/[[:blank:]]*.pin =[[:blank:]]*18,\n/ RK_PC2,/g
    s/[[:blank:]]*.pin =[[:blank:]]*19,\n/ RK_PC3,/g
    s/[[:blank:]]*.pin =[[:blank:]]*20,\n/ RK_PC4,/g
    s/[[:blank:]]*.pin =[[:blank:]]*21,\n/ RK_PC5,/g
    s/[[:blank:]]*.pin =[[:blank:]]*22,\n/ RK_PC6,/g
    s/[[:blank:]]*.pin =[[:blank:]]*23,\n/ RK_PC7,/g
    s/[[:blank:]]*.pin =[[:blank:]]*24,\n/ RK_PD0,/g
    s/[[:blank:]]*.pin =[[:blank:]]*25,\n/ RK_PD1,/g
    s/[[:blank:]]*.pin =[[:blank:]]*26,\n/ RK_PD2,/g
    s/[[:blank:]]*.pin =[[:blank:]]*27,\n/ RK_PD3,/g
    s/[[:blank:]]*.pin =[[:blank:]]*28,\n/ RK_PD4,/g
    s/[[:blank:]]*.pin =[[:blank:]]*29,\n/ RK_PD5,/g
    s/[[:blank:]]*.pin =[[:blank:]]*30,\n/ RK_PD6,/g
    s/[[:blank:]]*.pin =[[:blank:]]*31,\n/ RK_PD7,/g
    s/[[:blank:]]*.func = \([[:digit:]]*,\)\n/ \1/g
    s/[[:blank:]]*.route_location =[[:blank:]]*\([[:print:]]*,\)\n//g
    s/[[:blank:]]*.route_offset = \(0x[[:xdigit:]]*,\)\n/ \1/g
    s/[[:blank:]]*.route_val =[[:blank:]]*\([[:print:]]*\),\n/ \1),/g
    s/\t{\n//g
    s/\t}, {\n//g
    s/\t},//g
    s/[[:blank:]]*\(\/\*[[:print:]]*\*\/\)\n[[:blank:]]*RK_MUXROUTE_SAME(\([[:print:]]*\)),\n/\tRK_MUXROUTE_SAME(\2), \1\n/g
    s/[[:blank:]]*\(\/\*[[:print:]]*\*\/\)\n[[:blank:]]*RK_MUXROUTE_SAME(\([[:print:]]*\)),/\tRK_MUXROUTE_SAME(\2), \1\n/g
    " drivers/pinctrl/pinctrl-rockchip.c
    
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Jianqun Xu <jay.xu@rock-chips.com>
    Link: https://lore.kernel.org/r/20210420091240.1246429-1-jay.xu@rock-chips.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Stable-dep-of: c818ae563bf9 ("pinctrl: rockchip: Fix refcount leak in rockchip_pinctrl_parse_groups")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6da121152ada3f158dcab9430ada8291eb39c2bc
Author: Jianqun Xu <jay.xu@rock-chips.com>
Date:   Fri Mar 19 16:14:41 2021 +0800

    pinctrl: rockchip: add support for rk3568
    
    [ Upstream commit c0dadc0e47a895e95c17a4df1fa12737e1d57d6f ]
    
    RK3568 SoCs have 5 gpio controllers, each gpio has 32 pins. GPIO supports
    set iomux, pull, drive strength and schmitt.
    
    Signed-off-by: Jianqun Xu <jay.xu@rock-chips.com>
    Link: https://lore.kernel.org/r/20210319081441.368358-1-jay.xu@rock-chips.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Stable-dep-of: c818ae563bf9 ("pinctrl: rockchip: Fix refcount leak in rockchip_pinctrl_parse_groups")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ab860dd8717a7e4a143988885fea0d7e5a9412e
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 2 12:24:56 2023 +0400

    pinctrl: stm32: Fix refcount leak in stm32_pctrl_get_irq_domain
    
    [ Upstream commit dcef18c8ac40aa85bb339f64c1dd31dd458b06fb ]
    
    of_irq_find_parent() returns a node pointer with refcount incremented,
    We should use of_node_put() on it when not needed anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: d86f4d71e42a ("pinctrl: stm32: check irq controller availability at probe")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20230102082503.3944927-1-linmq006@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86704e50ffb589f81af74b6a9c48d9629fb89bfc
Author: Adam Skladowski <a39.skl@gmail.com>
Date:   Sat Dec 31 17:42:50 2022 +0100

    pinctrl: qcom: pinctrl-msm8976: Correct function names for wcss pins
    
    [ Upstream commit a7cc0e2685082a0d79baec02df184dfa83cbfac3 ]
    
    Adjust names of function for wcss pins, also fix third gpio in bt group.
    
    Fixes: bcd11493f0ab ("pinctrl: qcom: Add a pinctrl driver for MSM8976 and 8956")
    Signed-off-by: Adam Skladowski <a39.skl@gmail.com>
    Reviewed-by: Marijn Suijten <marijn.suijten@somainline.org>
    Link: https://lore.kernel.org/r/20221231164250.74550-1-a39.skl@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bab31a0969ca4ac90907a5d3b44af104229eafd
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Jan 6 10:30:11 2023 +0800

    drm/msm/hdmi: Add missing check for alloc_ordered_workqueue
    
    [ Upstream commit afe4cb96153a0d8003e4e4ebd91b5c543e10df84 ]
    
    Add check for the return value of alloc_ordered_workqueue as it may return
    NULL pointer and cause NULL pointer dereference in `hdmi_hdcp.c` and
    `hdmi_hpd.c`.
    
    Fixes: c6a57a50ad56 ("drm/msm/hdmi: add hdmi hdcp support (V3)")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Patchwork: https://patchwork.freedesktop.org/patch/517211/
    Link: https://lore.kernel.org/r/20230106023011.3985-1-jiasheng@iscas.ac.cn
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8eb74bd9c9726425fe62330a2eda4d862edb6dd1
Author: Liang He <windhl@126.com>
Date:   Wed Jul 20 23:22:27 2022 +0800

    gpu: ipu-v3: common: Add of_node_put() for reference returned by of_graph_get_port_by_id()
    
    [ Upstream commit 9afdf98cfdfa2ba8ec068cf08c5fcdc1ed8daf3f ]
    
    In ipu_add_client_devices(), we need to call of_node_put() for
    reference returned by of_graph_get_port_by_id() in fail path.
    
    Fixes: 17e052175039 ("gpu: ipu-v3: Do not bail out on missing optional port nodes")
    Signed-off-by: Liang He <windhl@126.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Link: https://lore.kernel.org/r/20220720152227.1288413-1-windhl@126.com
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220720152227.1288413-1-windhl@126.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdcacfd11015cd46aaad2d7a6be0b10ebe247102
Author: Randolph Sapp <rs@ti.com>
Date:   Thu Dec 1 18:18:03 2022 -0600

    drm: tidss: Fix pixel format definition
    
    [ Upstream commit 2df0433b18f2735a49d2c3a968b40fa2881137c0 ]
    
    There was a long-standing bug from a typo that created 2 ARGB1555 and
    ABGR1555 pixel format entries. Weston 10 has a sanity check that alerted
    me to this issue.
    
    According to the Supported Pixel Data formats table we have the later
    entries should have been for Alpha-X instead.
    
    Signed-off-by: Randolph Sapp <rs@ti.com>
    Fixes: 32a1795f57eecc ("drm/tidss: New driver for TI Keystone platform Display SubSystem")
    Reviewed-by: Aradhya Bhatia <a-bhatia1@ti.com>
    Acked-by: Andrew Davis <afd@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221202001803.1765805-1-rs@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2adbcf94ebfcd183223d434227d55b9841458bf0
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Thu Dec 1 09:42:52 2022 +0100

    drm/vc4: dpi: Fix format mapping for RGB565
    
    [ Upstream commit 0870d86eac8a9abd89a0be1b719d5dc5bac936f0 ]
    
    The mapping is incorrect for RGB565_1X16 as it should be
    DPI_FORMAT_18BIT_666_RGB_1 instead of DPI_FORMAT_18BIT_666_RGB_3.
    
    Fixes: 08302c35b59d ("drm/vc4: Add DPI driver")
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Link: https://lore.kernel.org/r/20221013-rpi-dpi-improvements-v3-7-eb76e26a772d@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09c6e21d6a1eaacac54a5d1ea7202e8383a886e6
Author: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date:   Mon Jun 13 16:47:36 2022 +0200

    drm/vc4: dpi: Add option for inverting pixel clock and output enable
    
    [ Upstream commit 3c2707632146b22e97b0fbf6778bab8add2eaa1d ]
    
    DRM provides flags for inverting pixel clock and output enable
    signals, but these were not mapped to the relevant registers.
    
    Add those mappings.
    
    Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://lore.kernel.org/r/20220613144800.326124-10-maxime@cerno.tech
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Stable-dep-of: 0870d86eac8a ("drm/vc4: dpi: Fix format mapping for RGB565")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b8f390e2251191f1b179cc87f65d54c96565f0d
Author: Yuan Can <yuancan@huawei.com>
Date:   Tue Nov 1 06:51:56 2022 +0000

    drm/vkms: Fix null-ptr-deref in vkms_release()
    
    [ Upstream commit 2fe2a8f40c21161ffe7653cc234e7934db5b7cc5 ]
    
    A null-ptr-deref is triggered when it tries to destroy the workqueue in
    vkms->output.composer_workq in vkms_release().
    
     KASAN: null-ptr-deref in range [0x0000000000000118-0x000000000000011f]
     CPU: 5 PID: 17193 Comm: modprobe Not tainted 6.0.0-11331-gd465bff130bf #24
     RIP: 0010:destroy_workqueue+0x2f/0x710
     ...
     Call Trace:
      <TASK>
      ? vkms_config_debugfs_init+0x50/0x50 [vkms]
      __devm_drm_dev_alloc+0x15a/0x1c0 [drm]
      vkms_init+0x245/0x1000 [vkms]
      do_one_initcall+0xd0/0x4f0
      do_init_module+0x1a4/0x680
      load_module+0x6249/0x7110
      __do_sys_finit_module+0x140/0x200
      do_syscall_64+0x35/0x80
      entry_SYSCALL_64_after_hwframe+0x46/0xb0
    
    The reason is that an OOM happened which triggers the destroy of the
    workqueue, however, the workqueue is alloced in the later process,
    thus a null-ptr-deref happened. A simple call graph is shown as below:
    
     vkms_init()
      vkms_create()
        devm_drm_dev_alloc()
          __devm_drm_dev_alloc()
            devm_drm_dev_init()
              devm_add_action_or_reset()
                devm_add_action() # an error happened
                devm_drm_dev_init_release()
                  drm_dev_put()
                    kref_put()
                      drm_dev_release()
                        vkms_release()
                          destroy_workqueue() # null-ptr-deref happened
        vkms_modeset_init()
          vkms_output_init()
            vkms_crtc_init() # where the workqueue get allocated
    
    Fix this by checking if composer_workq is NULL before passing it to
    the destroy_workqueue() in vkms_release().
    
    Fixes: 6c234fe37c57 ("drm/vkms: Implement CRC debugfs API")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Melissa Wen <mwen@igalia.com>
    Signed-off-by: Melissa Wen <melissa.srw@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221101065156.41584-3-yuancan@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b9bcb33cf3ffa60c520c02b33a364cb64d7e7df
Author: Yuan Can <yuancan@huawei.com>
Date:   Tue Nov 8 09:12:26 2022 +0000

    drm/bridge: megachips: Fix error handling in i2c_register_driver()
    
    [ Upstream commit 4ecff954c370b82bce45bdca2846c5c5563e8a8a ]
    
    A problem about insmod megachips-stdpxxxx-ge-b850v3-fw.ko failed is
    triggered with the following log given:
    
    [ 4497.981497] Error: Driver 'stdp4028-ge-b850v3-fw' is already registered, aborting...
    insmod: ERROR: could not insert module megachips-stdpxxxx-ge-b850v3-fw.ko: Device or resource busy
    
    The reason is that stdpxxxx_ge_b850v3_init() returns i2c_add_driver()
    directly without checking its return value, if i2c_add_driver() failed,
    it returns without calling i2c_del_driver() on the previous i2c driver,
    resulting the megachips-stdpxxxx-ge-b850v3-fw can never be installed
    later.
    A simple call graph is shown as below:
    
     stdpxxxx_ge_b850v3_init()
       i2c_add_driver(&stdp4028_ge_b850v3_fw_driver)
       i2c_add_driver(&stdp2690_ge_b850v3_fw_driver)
         i2c_register_driver()
           driver_register()
             bus_add_driver()
               priv = kzalloc(...) # OOM happened
       # return without delete stdp4028_ge_b850v3_fw_driver
    
    Fix by calling i2c_del_driver() on stdp4028_ge_b850v3_fw_driver when
    i2c_add_driver() returns error.
    
    Fixes: fcfa0ddc18ed ("drm/bridge: Drivers for megachips-stdpxxxx-ge-b850v3-fw (LVDS-DP++)")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Andrzej Hajda <andrzej.hajda@intel.com>
    Tested-by: Ian Ray <ian.ray@ge.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221108091226.114524-1-yuancan@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 181fb5efb64974709ac3b9ebc0c8278ccc96a3d0
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Nov 21 16:59:55 2022 +0100

    drm: mxsfb: DRM_MXSFB should depend on ARCH_MXS || ARCH_MXC
    
    [ Upstream commit 7783cc67862f9166c901bfa0f80b717aa8d354dd ]
    
    Freescale/NXP i.MX LCDIF and eLCDIF LCD controllers are only present on
    Freescale/NXP i.MX SoCs.  Hence add a dependency on ARCH_MXS ||
    ARCH_MXC, to prevent asking the user about this driver when configuring
    a kernel without Freescale/NXP i.MX support.
    
    Fixes: 45d59d704080cc0c ("drm: Add new driver for MXSFB controller")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Marek Vasut <marex@denx.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/98e74779ca2bc575d91afff03369e86b080c01ac.1669046358.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a86bd12bd974c20d0f045ac601f96ab0e8db0410
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Wed Nov 23 17:43:10 2022 +0100

    drm/fourcc: Add missing big-endian XRGB1555 and RGB565 formats
    
    [ Upstream commit 6fb6c979ca628583d4d0c59a0f8ff977e581ecc0 ]
    
    As of commit eae06120f1974e1a ("drm: refuse ADDFB2 ioctl for broken
    bigendian drivers"), drivers must set the
    quirk_addfb_prefer_host_byte_order quirk to make the drm_mode_addfb()
    compat code work correctly on big-endian machines.
    
    While that works fine for big-endian XRGB8888 and ARGB8888, which are
    mapped to the existing little-endian BGRX8888 and BGRA8888 formats, it
    does not work for big-endian XRGB1555 and RGB565, as the latter are not
    listed in the format database.
    
    Fix this by adding the missing formats.  Limit this to big-endian
    platforms, as there is currently no need to support these formats on
    little-endian platforms.
    
    Fixes: 6960e6da9cec3f66 ("drm: fix drm_mode_addfb() on big endian machines.")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/3ee1f8144feb96c28742b22384189f1f83bcfc1a.1669221671.git.geert@linux-m68k.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ae70041a6d7de62a0cdb2bbcfe0c9cf753035d0
Author: Shang XiaoJing <shangxiaojing@huawei.com>
Date:   Fri Nov 18 10:16:51 2022 +0800

    drm: Fix potential null-ptr-deref due to drmm_mode_config_init()
    
    [ Upstream commit 834c23e4f798dcdc8af251b3c428ceef94741991 ]
    
    drmm_mode_config_init() will call drm_mode_create_standard_properties()
    and won't check the ret value. When drm_mode_create_standard_properties()
    failed due to alloc, property will be a NULL pointer and may causes the
    null-ptr-deref. Fix the null-ptr-deref by adding the ret value check.
    
    Found null-ptr-deref while testing insert module bochs:
    general protection fault, probably for non-canonical address
        0xdffffc000000000c: 0000 [#1] SMP KASAN PTI
    KASAN: null-ptr-deref in range [0x0000000000000060-0x0000000000000067]
    CPU: 3 PID: 249 Comm: modprobe Not tainted 6.1.0-rc1+ #364
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014
    RIP: 0010:drm_object_attach_property+0x73/0x3c0 [drm]
    Call Trace:
     <TASK>
     __drm_connector_init+0xb6c/0x1100 [drm]
     bochs_pci_probe.cold.11+0x4cb/0x7fe [bochs]
     pci_device_probe+0x17d/0x340
     really_probe+0x1db/0x5d0
     __driver_probe_device+0x1e7/0x250
     driver_probe_device+0x4a/0x120
     __driver_attach+0xcd/0x2c0
     bus_for_each_dev+0x11a/0x1b0
     bus_add_driver+0x3d7/0x500
     driver_register+0x18e/0x320
     do_one_initcall+0xc4/0x3e0
     do_init_module+0x1b4/0x630
     load_module+0x5dca/0x7230
     __do_sys_finit_module+0x100/0x170
     do_syscall_64+0x3f/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    RIP: 0033:0x7ff65af9f839
    
    Fixes: 6b4959f43a04 ("drm/atomic: atomic plane properties")
    Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20221118021651.2460-1-shangxiaojing@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f06907f9f5814cf14c9fd8b0e4e616fd29b2b26
Author: Jiri Pirko <jiri@nvidia.com>
Date:   Mon Feb 20 14:23:36 2023 +0100

    sefltests: netdevsim: wait for devlink instance after netns removal
    
    [ Upstream commit f922c7b1c1c45740d329bf248936fdb78c0cff6e ]
    
    When devlink instance is put into network namespace and that network
    namespace gets deleted, devlink instance is moved back into init_ns.
    This is done as a part of cleanup_net() routine. Since cleanup_net()
    is called asynchronously from workqueue, there is no guarantee that
    the devlink instance move is done after "ip netns del" returns.
    
    So fix this race by making sure that the devlink instance is present
    before any other operation.
    
    Reported-by: Amir Tzin <amirtz@nvidia.com>
    Fixes: b74c37fd35a2 ("selftests: netdevsim: add tests for devlink reload with resources")
    Signed-off-by: Jiri Pirko <jiri@nvidia.com>
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Link: https://lore.kernel.org/r/20230220132336.198597-1-jiri@resnulli.us
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6038e458798d578d9e6736f4b424d8b851fc6d10
Author: Roxana Nicolescu <roxana.nicolescu@canonical.com>
Date:   Mon Feb 20 12:04:00 2023 +0100

    selftest: fib_tests: Always cleanup before exit
    
    [ Upstream commit b60417a9f2b890a8094477b2204d4f73c535725e ]
    
    Usage of `set -e` before executing a command causes immediate exit
    on failure, without cleanup up the resources allocated at setup.
    This can affect the next tests that use the same resources,
    leading to a chain of failures.
    
    A simple fix is to always call cleanup function when the script exists.
    This approach is already used by other existing tests.
    
    Fixes: 1056691b2680 ("selftests: fib_tests: Make test results more verbose")
    Signed-off-by: Roxana Nicolescu <roxana.nicolescu@canonical.com>
    Link: https://lore.kernel.org/r/20230220110400.26737-2-roxana.nicolescu@canonical.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1c848d9ddd56f67f201e6e7571cbca90dfdf4fb
Author: Doug Berger <opendmb@gmail.com>
Date:   Thu Feb 16 11:41:28 2023 -0800

    net: bcmgenet: fix MoCA LED control
    
    [ Upstream commit a7515af9fb8f0890fe540b108def4a86b9e8330a ]
    
    When the bcmgenet_mii_config() code was refactored it was missed
    that the LED control for the MoCA interface got overwritten by
    the port_ctrl value. Its previous programming is restored here.
    
    Fixes: 4f8d81b77e66 ("net: bcmgenet: Refactor register access in bcmgenet_mii_config")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a413d360959962995e16a899cf2b9ef53e9fcb9
Author: Shigeru Yoshida <syoshida@redhat.com>
Date:   Fri Feb 17 01:37:10 2023 +0900

    l2tp: Avoid possible recursive deadlock in l2tp_tunnel_register()
    
    [ Upstream commit 9ca5e7ecab064f1f47da07f7c1ddf40e4bc0e5ac ]
    
    When a file descriptor of pppol2tp socket is passed as file descriptor
    of UDP socket, a recursive deadlock occurs in l2tp_tunnel_register().
    This situation is reproduced by the following program:
    
    int main(void)
    {
            int sock;
            struct sockaddr_pppol2tp addr;
    
            sock = socket(AF_PPPOX, SOCK_DGRAM, PX_PROTO_OL2TP);
            if (sock < 0) {
                    perror("socket");
                    return 1;
            }
    
            addr.sa_family = AF_PPPOX;
            addr.sa_protocol = PX_PROTO_OL2TP;
            addr.pppol2tp.pid = 0;
            addr.pppol2tp.fd = sock;
            addr.pppol2tp.addr.sin_family = PF_INET;
            addr.pppol2tp.addr.sin_port = htons(0);
            addr.pppol2tp.addr.sin_addr.s_addr = inet_addr("192.168.0.1");
            addr.pppol2tp.s_tunnel = 1;
            addr.pppol2tp.s_session = 0;
            addr.pppol2tp.d_tunnel = 0;
            addr.pppol2tp.d_session = 0;
    
            if (connect(sock, (const struct sockaddr *)&addr, sizeof(addr)) < 0) {
                    perror("connect");
                    return 1;
            }
    
            return 0;
    }
    
    This program causes the following lockdep warning:
    
     ============================================
     WARNING: possible recursive locking detected
     6.2.0-rc5-00205-gc96618275234 #56 Not tainted
     --------------------------------------------
     repro/8607 is trying to acquire lock:
     ffff8880213c8130 (sk_lock-AF_PPPOX){+.+.}-{0:0}, at: l2tp_tunnel_register+0x2b7/0x11c0
    
     but task is already holding lock:
     ffff8880213c8130 (sk_lock-AF_PPPOX){+.+.}-{0:0}, at: pppol2tp_connect+0xa82/0x1a30
    
     other info that might help us debug this:
      Possible unsafe locking scenario:
    
            CPU0
            ----
       lock(sk_lock-AF_PPPOX);
       lock(sk_lock-AF_PPPOX);
    
      *** DEADLOCK ***
    
      May be due to missing lock nesting notation
    
     1 lock held by repro/8607:
      #0: ffff8880213c8130 (sk_lock-AF_PPPOX){+.+.}-{0:0}, at: pppol2tp_connect+0xa82/0x1a30
    
     stack backtrace:
     CPU: 0 PID: 8607 Comm: repro Not tainted 6.2.0-rc5-00205-gc96618275234 #56
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.1-2.fc37 04/01/2014
     Call Trace:
      <TASK>
      dump_stack_lvl+0x100/0x178
      __lock_acquire.cold+0x119/0x3b9
      ? lockdep_hardirqs_on_prepare+0x410/0x410
      lock_acquire+0x1e0/0x610
      ? l2tp_tunnel_register+0x2b7/0x11c0
      ? lock_downgrade+0x710/0x710
      ? __fget_files+0x283/0x3e0
      lock_sock_nested+0x3a/0xf0
      ? l2tp_tunnel_register+0x2b7/0x11c0
      l2tp_tunnel_register+0x2b7/0x11c0
      ? sprintf+0xc4/0x100
      ? l2tp_tunnel_del_work+0x6b0/0x6b0
      ? debug_object_deactivate+0x320/0x320
      ? lockdep_init_map_type+0x16d/0x7a0
      ? lockdep_init_map_type+0x16d/0x7a0
      ? l2tp_tunnel_create+0x2bf/0x4b0
      ? l2tp_tunnel_create+0x3c6/0x4b0
      pppol2tp_connect+0x14e1/0x1a30
      ? pppol2tp_put_sk+0xd0/0xd0
      ? aa_sk_perm+0x2b7/0xa80
      ? aa_af_perm+0x260/0x260
      ? bpf_lsm_socket_connect+0x9/0x10
      ? pppol2tp_put_sk+0xd0/0xd0
      __sys_connect_file+0x14f/0x190
      __sys_connect+0x133/0x160
      ? __sys_connect_file+0x190/0x190
      ? lockdep_hardirqs_on+0x7d/0x100
      ? ktime_get_coarse_real_ts64+0x1b7/0x200
      ? ktime_get_coarse_real_ts64+0x147/0x200
      ? __audit_syscall_entry+0x396/0x500
      __x64_sys_connect+0x72/0xb0
      do_syscall_64+0x38/0xb0
      entry_SYSCALL_64_after_hwframe+0x63/0xcd
    
    This patch fixes the issue by getting/creating the tunnel before
    locking the pppol2tp socket.
    
    Fixes: 0b2c59720e65 ("l2tp: close all race conditions in l2tp_tunnel_register()")
    Cc: Cong Wang <cong.wang@bytedance.com>
    Signed-off-by: Shigeru Yoshida <syoshida@redhat.com>
    Reviewed-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5663df20622d0e19283de8d348037a841f33ff65
Author: Jakub Sitnicki <jakub@cloudflare.com>
Date:   Thu Feb 16 13:43:40 2023 +0100

    selftests/net: Interpret UDP_GRO cmsg data as an int value
    
    [ Upstream commit 436864095a95fcc611c20c44a111985fa9848730 ]
    
    Data passed to user-space with a (SOL_UDP, UDP_GRO) cmsg carries an
    int (see udp_cmsg_recv), not a u16 value, as strace confirms:
    
      recvmsg(8, {msg_name=...,
                  msg_iov=[{iov_base="\0\0..."..., iov_len=96000}],
                  msg_iovlen=1,
                  msg_control=[{cmsg_len=20,         <-- sizeof(cmsghdr) + 4
                                cmsg_level=SOL_UDP,
                                cmsg_type=0x68}],    <-- UDP_GRO
                                msg_controllen=24,
                                msg_flags=0}, 0) = 11200
    
    Interpreting the data as an u16 value won't work on big-endian platforms.
    Since it is too late to back out of this API decision [1], fix the test.
    
    [1]: https://lore.kernel.org/netdev/20230131174601.203127-1-jakub@cloudflare.com/
    
    Fixes: 3327a9c46352 ("selftests: add functionals test for UDP GRO")
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cefa692224a94ae65ef844037c74119ad13f855
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Dec 16 15:09:34 2022 -0800

    irqchip/irq-bcm7120-l2: Set IRQ_LEVEL for level triggered interrupts
    
    [ Upstream commit 13a157b38ca5b4f9eed81442b8821db293755961 ]
    
    When support for the interrupt controller was added with a5042de2688d,
    we forgot to update the flags to be set to contain IRQ_LEVEL. While the
    flow handler is correct, the output from /proc/interrupts does not show
    such interrupts as being level triggered when they are, correct that.
    
    Fixes: a5042de2688d ("irqchip: bcm7120-l2: Add Broadcom BCM7120-style Level 2 interrupt controller")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Philippe Mathieu-Daudé <philmd@linaro.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20221216230934.2478345-3-f.fainelli@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27a601623dde64da601dc4a881691ee592cfaab0
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Dec 16 15:09:33 2022 -0800

    irqchip/irq-brcmstb-l2: Set IRQ_LEVEL for level triggered interrupts
    
    [ Upstream commit 94debe03e8afa1267f95a9001786a6aa506b9ff3 ]
    
    When support for the level triggered interrupt controller flavor was
    added with c0ca7262088e, we forgot to update the flags to be set to
    contain IRQ_LEVEL. While the flow handler is correct, the output from
    /proc/interrupts does not show such interrupts as being level triggered
    when they are, correct that.
    
    Fixes: c0ca7262088e ("irqchip/brcmstb-l2: Add support for the BCM7271 L2 controller")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Philippe Mathieu-Daudé <philmd@linaro.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20221216230934.2478345-2-f.fainelli@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f487d888ee5cddc6d78c16ae6cd554ceda78a78
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Wed Feb 15 20:59:52 2023 -0800

    bpf: Fix global subprog context argument resolution logic
    
    [ Upstream commit d384dce281ed1b504fae2e279507827638d56fa3 ]
    
    KPROBE program's user-facing context type is defined as typedef
    bpf_user_pt_regs_t. This leads to a problem when trying to passing
    kprobe/uprobe/usdt context argument into global subprog, as kernel
    always strip away mods and typedefs of user-supplied type, but takes
    expected type from bpf_ctx_convert as is, which causes mismatch.
    
    Current way to work around this is to define a fake struct with the same
    name as expected typedef:
    
      struct bpf_user_pt_regs_t {};
    
      __noinline my_global_subprog(struct bpf_user_pt_regs_t *ctx) { ... }
    
    This patch fixes the issue by resolving expected type, if it's not
    a struct. It still leaves the above work-around working for backwards
    compatibility.
    
    Fixes: 91cc1a99740e ("bpf: Annotate context types")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Stanislav Fomichev <sdf@google.com>
    Link: https://lore.kernel.org/bpf/20230216045954.3002473-2-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e8733949f81c5e95002f7365974adcef2ea3888
Author: Frank Jungclaus <frank.jungclaus@esd.eu>
Date:   Thu Feb 16 20:04:48 2023 +0100

    can: esd_usb: Move mislocated storage of SJA1000_ECC_SEG bits in case of a bus error
    
    [ Upstream commit 118469f88180438ef43dee93d71f77c00e7b425d ]
    
    Move the supply for cf->data[3] (bit stream position of CAN error), in
    case of a bus- or protocol-error, outside of the "switch (ecc &
    SJA1000_ECC_MASK){}"-statement, because this bit stream position is
    independent of the error type.
    
    Fixes: 96d8e90382dc ("can: Add driver for esd CAN-USB/2 device")
    Signed-off-by: Frank Jungclaus <frank.jungclaus@esd.eu>
    Link: https://lore.kernel.org/all/20230216190450.3901254-2-frank.jungclaus@esd.eu
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e02bc492883abf751fd1a8d89fc025fbce6744c6
Author: Yongqin Liu <yongqin.liu@linaro.org>
Date:   Fri Feb 10 22:15:07 2023 +0800

    thermal/drivers/hisi: Drop second sensor hi3660
    
    [ Upstream commit 15cc25829a97c3957e520e971868aacc84341317 ]
    
    The commit 74c8e6bffbe1 ("driver core: Add __alloc_size hint to devm
    allocators") exposes a panic "BRK handler: Fatal exception" on the
    hi3660_thermal_probe funciton.
    This is because the function allocates memory for only one
    sensors array entry, but tries to fill up a second one.
    
    Fix this by removing the unneeded second access.
    
    Fixes: 7d3a2a2bbadb ("thermal/drivers/hisi: Fix number of sensors on hi3660")
    Signed-off-by: Yongqin Liu <yongqin.liu@linaro.org>
    Link: https://lore.kernel.org/linux-mm/20221101223321.1326815-5-keescook@chromium.org/
    Link: https://lore.kernel.org/r/20230210141507.71014-1-yongqin.liu@linaro.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3856f7559722b76a66a3f59eb3217dfd7fcaca15
Author: Shayne Chen <shayne.chen@mediatek.com>
Date:   Thu Feb 9 19:06:59 2023 +0800

    wifi: mac80211: make rate u32 in sta_set_rate_info_rx()
    
    [ Upstream commit 59336e07b287d91dc4ec265e07724e8f7e3d0209 ]
    
    The value of last_rate in ieee80211_sta_rx_stats is degraded from u32 to
    u16 after being assigned to rate variable, which causes information loss
    in STA_STATS_FIELD_TYPE and later bitfields.
    
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Link: https://lore.kernel.org/r/20230209110659.25447-1-shayne.chen@mediatek.com
    Fixes: 41cbb0f5a295 ("mac80211: add support for HE")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f333346001f9ea152d04b3848e77f986ab69e5aa
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Feb 6 14:01:53 2023 +0800

    crypto: crypto4xx - Call dma_unmap_page when done
    
    [ Upstream commit bcdda4301bdc4955d45f7e1ffefb6207967b067e ]
    
    In crypto4xx_cipher_done, we should be unmapping the dst page, not
    mapping it.
    
    This was flagged by a sparse warning about the unused addr variable.
    While we're at it, also fix a sparse warning regarding the unused
    ctx variable in crypto4xx_ahash_done (by actually using it).
    
    Fixes: 049359d65527 ("crypto: amcc - Add crypt4xx driver")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b10827bce73943b0823b26ef5aebc4b971733d50
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Thu Feb 9 00:12:11 2023 +0100

    selftests/bpf: Fix out-of-srctree build
    
    [ Upstream commit 0b0757244754ea1d0721195c824770f5576e119e ]
    
    Building BPF selftests out of srctree fails with:
    
      make: *** No rule to make target '/linux-build//ima_setup.sh', needed by 'ima_setup.sh'.  Stop.
    
    The culprit is the rule that defines convenient shorthands like
    "make test_progs", which builds $(OUTPUT)/test_progs. These shorthands
    make sense only for binaries that are built though; scripts that live
    in the source tree do not end up in $(OUTPUT).
    
    Therefore drop $(TEST_PROGS) and $(TEST_PROGS_EXTENDED) from the rule.
    
    The issue exists for a while, but it became a problem only after commit
    d68ae4982cb7 ("selftests/bpf: Install all required files to run selftests"),
    which added dependencies on these scripts.
    
    Fixes: 03dcb78460c2 ("selftests/bpf: Add simple per-test targets to Makefile")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20230208231211.283606-1-iii@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7c5ecbc4915be882a305e4aadf43857cca6eb93
Author: Dan Carpenter <error27@gmail.com>
Date:   Mon Feb 6 17:41:33 2023 +0300

    wifi: mwifiex: fix loop iterator in mwifiex_update_ampdu_txwinsize()
    
    [ Upstream commit 3cfb7df24cee0f5fdc4cc5d3176cab9aadfcb430 ]
    
    This code re-uses "i" to be the iterator for both the inside and outside
    loops.  It means the outside loop will exit earlier than intended.
    
    Fixes: d219b7eb3792 ("mwifiex: handle BT coex event to adjust Rx BA window size")
    Signed-off-by: Dan Carpenter <error27@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/Y+ERnaDaZD7RtLvX@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3185d6cfc59277a77bf311dce701b7e25193f66a
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Feb 9 09:07:48 2023 +0800

    wifi: iwl4965: Add missing check for create_singlethread_workqueue()
    
    [ Upstream commit 26e6775f75517ad6844fe5b79bc5f3fa8c22ee61 ]
    
    Add the check for the return value of the create_singlethread_workqueue()
    in order to avoid NULL pointer dereference.
    
    Fixes: b481de9ca074 ("[IWLWIFI]: add iwlwifi wireless drivers")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20230209010748.45454-1-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f80b3ff92514ebd227e5c55d3d1e480401b02b7
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Feb 8 14:30:32 2023 +0800

    wifi: iwl3945: Add missing check for create_singlethread_workqueue
    
    [ Upstream commit 1fdeb8b9f29dfd64805bb49475ac7566a3cb06cb ]
    
    Add the check for the return value of the create_singlethread_workqueue
    in order to avoid NULL pointer dereference.
    
    Fixes: b481de9ca074 ("[IWLWIFI]: add iwlwifi wireless drivers")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20230208063032.42763-2-jiasheng@iscas.ac.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5da95a7eb9e3e045db4082fd906b40e67181c443
Author: Conor Dooley <conor.dooley@microchip.com>
Date:   Tue Jan 3 19:41:00 2023 +0530

    RISC-V: time: initialize hrtimer based broadcast clock event device
    
    [ Upstream commit 8b3b8fbb4896984b5564789a42240e4b3caddb61 ]
    
    Similarly to commit 022eb8ae8b5e ("ARM: 8938/1: kernel: initialize
    broadcast hrtimer based clock event device"), RISC-V needs to initiate
    hrtimer based broadcast clock event device before C3STOP can be used.
    Otherwise, the introduction of C3STOP for the RISC-V arch timer in
    commit 232ccac1bd9b ("clocksource/drivers/riscv: Events are stopped
    during CPU suspend") leaves us without any broadcast timer registered.
    This prevents the kernel from entering oneshot mode, which breaks timer
    behaviour, for example clock_nanosleep().
    
    A test app that sleeps each cpu for 6, 5, 4, 3 ms respectively, HZ=250
    & C3STOP enabled, the sleep times are rounded up to the next jiffy:
    == CPU: 1 ==      == CPU: 2 ==      == CPU: 3 ==      == CPU: 4 ==
    Mean: 7.974992    Mean: 7.976534    Mean: 7.962591    Mean: 3.952179
    Std Dev: 0.154374 Std Dev: 0.156082 Std Dev: 0.171018 Std Dev: 0.076193
    Hi: 9.472000      Hi: 10.495000     Hi: 8.864000      Hi: 4.736000
    Lo: 6.087000      Lo: 6.380000      Lo: 4.872000      Lo: 3.403000
    Samples: 521      Samples: 521      Samples: 521      Samples: 521
    
    Link: https://lore.kernel.org/linux-riscv/YzYTNQRxLr7Q9JR0@spud/
    Fixes: 232ccac1bd9b ("clocksource/drivers/riscv: Events are stopped during CPU suspend")
    Suggested-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Conor Dooley <conor.dooley@microchip.com>
    Signed-off-by: Anup Patel <apatel@ventanamicro.com>
    Reviewed-by: Samuel Holland <samuel@sholland.org>
    Acked-by: Palmer Dabbelt <palmer@rivosinc.com>
    Link: https://lore.kernel.org/r/20230103141102.772228-2-apatel@ventanamicro.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dabc22a30d83f97128992a8e1f9b8ee2f8a16f55
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Feb 8 17:08:25 2023 -0800

    m68k: /proc/hardware should depend on PROC_FS
    
    [ Upstream commit 1e5b5df65af99013b4d31607ddb3ca5731dbe44d ]
    
    When CONFIG_PROC_FS is not set, there is a build error for an unused
    function. Make PROC_HARDWARE depend on PROC_FS to prevent this error.
    
    In file included from ../arch/m68k/kernel/setup.c:3:
    ../arch/m68k/kernel/setup_mm.c:477:12: error: 'hardware_proc_show' defined but not used [-Werror=unused-function]
      477 | static int hardware_proc_show(struct seq_file *m, void *v)
          |            ^~~~~~~~~~~~~~~~~~
    
    Fixes: 66d857b08b8c ("m68k: merge m68k and m68knommu arch directories") # v3.0
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Link: https://lore.kernel.org/r/20230209010825.24136-1-rdunlap@infradead.org
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9c87142260cd2278aaa432588788916e54d461c
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Tue Jan 31 16:02:04 2023 +0800

    crypto: rsa-pkcs1pad - Use akcipher_request_complete
    
    [ Upstream commit 564cabc0ca0bdfa8f0fc1ae74b24d0a7554522c5 ]
    
    Use the akcipher_request_complete helper instead of calling the
    completion function directly.  In fact the previous code was buggy
    in that EINPROGRESS was never passed back to the original caller.
    
    Fixes: 3d5b1ecdea6f ("crypto: rsa - RSA padding algorithm")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb209a35d3627b6345bea0f07020c99897a2ca87
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Thu Feb 9 12:26:23 2023 +0000

    rds: rds_rm_zerocopy_callback() correct order for list_add_tail()
    
    [ Upstream commit 68762148d1b011d47bc2ceed7321739b5aea1e63 ]
    
    rds_rm_zerocopy_callback() uses list_add_tail() with swapped
    arguments. This links the list head with the new entry, losing
    the references to the remaining part of the list.
    
    Fixes: 9426bbc6de99 ("rds: use list structure to track information for zerocopy completion notification")
    Suggested-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7aa7fbc16936efa5171b8038848e18acdbab63d
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Fri Feb 10 01:12:01 2023 +0100

    libbpf: Fix alen calculation in libbpf_nla_dump_errormsg()
    
    [ Upstream commit 17bcd27a08a21397698edf143084d7c87ce17946 ]
    
    The code assumes that everything that comes after nlmsgerr are nlattrs.
    When calculating their size, it does not account for the initial
    nlmsghdr. This may lead to accessing uninitialized memory.
    
    Fixes: bbf48c18ee0c ("libbpf: add error reporting in XDP")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20230210001210.395194-8-iii@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8ed41cc04fb74005aa51d17865ca3d022760335
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Feb 1 14:01:11 2023 -0800

    Bluetooth: L2CAP: Fix potential user-after-free
    
    [ Upstream commit df5703348813235874d851934e957c3723d71644 ]
    
    This fixes all instances of which requires to allocate a buffer calling
    alloc_skb which may release the chan lock and reacquire later which
    makes it possible that the chan is disconnected in the meantime.
    
    Fixes: a6a5568c03c4 ("Bluetooth: Lock the L2CAP channel when sending")
    Reported-by: Alexander Coffin <alex.coffin@matician.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f4c970a05a24f4e3ecbfda534ec95caf498d2a0
Author: Qi Zheng <zhengqi.arch@bytedance.com>
Date:   Wed Feb 8 12:00:37 2023 +0800

    OPP: fix error checking in opp_migrate_dentry()
    
    [ Upstream commit eca4c0eea53432ec4b711b2a8ad282cbad231b4f ]
    
    Since commit ff9fb72bc077 ("debugfs: return error values,
    not NULL") changed return value of debugfs_rename() in
    error cases from %NULL to %ERR_PTR(-ERROR), we should
    also check error values instead of NULL.
    
    Fixes: ff9fb72bc077 ("debugfs: return error values, not NULL")
    Signed-off-by: Qi Zheng <zhengqi.arch@bytedance.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a9272a864cbf6dacc3f4b35213108dd01691d31
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sat Feb 4 17:39:22 2023 +0000

    tap: tap_open(): correctly initialize socket uid
    
    [ Upstream commit 66b2c338adce580dfce2199591e65e2bab889cff ]
    
    sock_init_data() assumes that the `struct socket` passed in input is
    contained in a `struct socket_alloc` allocated with sock_alloc().
    However, tap_open() passes a `struct socket` embedded in a `struct
    tap_queue` allocated with sk_alloc().
    This causes a type confusion when issuing a container_of() with
    SOCK_INODE() in sock_init_data() which results in assigning a wrong
    sk_uid to the `struct sock` in input.
    On default configuration, the type confused field overlaps with
    padding bytes between `int vnet_hdr_sz` and `struct tap_dev __rcu
    *tap` in `struct tap_queue`, which makes the uid of all tap sockets 0,
    i.e., the root one.
    Fix the assignment by using sock_init_data_uid().
    
    Fixes: 86741ec25462 ("net: core: Add a UID field to struct sock.")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a31af61f397500ccae49d56d809b2217d1e2178
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sat Feb 4 17:39:21 2023 +0000

    tun: tun_chr_open(): correctly initialize socket uid
    
    [ Upstream commit a096ccca6e503a5c575717ff8a36ace27510ab0a ]
    
    sock_init_data() assumes that the `struct socket` passed in input is
    contained in a `struct socket_alloc` allocated with sock_alloc().
    However, tun_chr_open() passes a `struct socket` embedded in a `struct
    tun_file` allocated with sk_alloc().
    This causes a type confusion when issuing a container_of() with
    SOCK_INODE() in sock_init_data() which results in assigning a wrong
    sk_uid to the `struct sock` in input.
    On default configuration, the type confused field overlaps with the
    high 4 bytes of `struct tun_struct __rcu *tun` of `struct tun_file`,
    NULL at the time of call, which makes the uid of all tun sockets 0,
    i.e., the root one.
    Fix the assignment by using sock_init_data_uid().
    
    Fixes: 86741ec25462 ("net: core: Add a UID field to struct sock.")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2416abd6bad28b8de107ccffe55095812369dd2b
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sat Feb 4 17:39:20 2023 +0000

    net: add sock_init_data_uid()
    
    [ Upstream commit 584f3742890e966d2f0a1f3c418c9ead70b2d99e ]
    
    Add sock_init_data_uid() to explicitly initialize the socket uid.
    To initialise the socket uid, sock_init_data() assumes a the struct
    socket* sock is always embedded in a struct socket_alloc, used to
    access the corresponding inode uid. This may not be true.
    Examples are sockets created in tun_chr_open() and tap_open().
    
    Fixes: 86741ec25462 ("net: core: Add a UID field to struct sock.")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a614a68d9f87b22b4177e5e255a0ab90239b20d
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Sat Jan 28 17:35:12 2023 +0100

    s390/vmem: fix empty page tables cleanup under KASAN
    
    [ Upstream commit 108303b0a2d27cb14eed565e33e64ad9eefe5d7e ]
    
    Commit b9ff81003cf1 ("s390/vmem: cleanup empty page tables") introduced
    empty page tables cleanup in vmem code, but when the kernel is built
    with KASAN enabled the code has no effect due to wrong KASAN shadow
    memory intersection condition, which effectively ignores any memory
    range below KASAN shadow. Fix intersection condition to make code
    work as anticipated.
    
    Fixes: b9ff81003cf1 ("s390/vmem: cleanup empty page tables")
    Reviewed-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df8d3536b660c6c6f6b25fa8b157e9b38ad78142
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 2 12:56:10 2023 +0400

    irqchip/ti-sci: Fix refcount leak in ti_sci_intr_irq_domain_probe
    
    [ Upstream commit 02298b7bae12936ca313975b02e7f98b06670d37 ]
    
    of_irq_find_parent() returns a node pointer with refcount incremented,
    We should use of_node_put() on it when not needed anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: cd844b0715ce ("irqchip/ti-sci-intr: Add support for Interrupt Router driver")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230102085611.3955984-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cee12e8be8e227731a845ae43a4c9ce2e404be45
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 2 12:42:08 2023 +0400

    irqchip/irq-mvebu-gicp: Fix refcount leak in mvebu_gicp_probe
    
    [ Upstream commit 9419e700021a393f67be36abd0c4f3acc6139041 ]
    
    of_irq_find_parent() returns a node pointer with refcount incremented,
    We should use of_node_put() on it when not needed anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: a68a63cb4dfc ("irqchip/irq-mvebu-gicp: Add new driver for Marvell GICP")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230102084208.3951758-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9aaf4efe1f02b2fef21a69fb3652f5ad12a5710
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 2 12:28:10 2023 +0400

    irqchip/alpine-msi: Fix refcount leak in alpine_msix_init_domains
    
    [ Upstream commit 071d068b89e95d1b078aa6bbcb9d0961b77d6aa1 ]
    
    of_irq_find_parent() returns a node pointer with refcount incremented,
    We should use of_node_put() on it when not needed anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: e6b78f2c3e14 ("irqchip: Add the Alpine MSIX interrupt controller")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230102082811.3947760-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b00baffcc2561374f8fe8af873d00531f19864eb
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 2 16:13:18 2023 +0400

    irqchip: Fix refcount leak in platform_irqchip_probe
    
    [ Upstream commit 6caa5a2b78f5f53c433d3a3781e53325da22f0ac ]
    
    of_irq_find_parent() returns a node pointer with refcount incremented,
    We should use of_node_put() on it when not needed anymore.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: f8410e626569 ("irqchip: Add IRQCHIP_PLATFORM_DRIVER_BEGIN/END and IRQCHIP_MATCH helper macros")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20230102121318.3990586-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cc2a41c5804e2de2cbc74cfeceff0606b23896b
Author: Jack Morgenstein <jackm@nvidia.com>
Date:   Wed Jan 18 19:57:04 2023 +0200

    net/mlx5: Enhance debug print in page allocation failure
    
    [ Upstream commit 7eef93003e5d20e1a6a6e59e12d914b5431cbda2 ]
    
    Provide more details to aid debugging.
    
    Fixes: bf0bf77f6519 ("mlx5: Support communicating arbitrary host page size to firmware")
    Signed-off-by: Eran Ben Elisha <eranbe@nvidia.com>
    Signed-off-by: Majd Dibbiny <majd@nvidia.com>
    Signed-off-by: Jack Morgenstein <jackm@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94c4eafbbde36de86685a78526ab52c2b5c2cd56
Author: Tonghao Zhang <tong@infragraf.org>
Date:   Thu Feb 2 21:17:01 2023 +0800

    bpftool: profile online CPUs instead of possible
    
    [ Upstream commit 377c16fa3f3c60d21e4b05314c8be034ce37f2eb ]
    
    The number of online cpu may be not equal to possible cpu.
    "bpftool prog profile" can not create pmu event on possible
    but on online cpu.
    
    $ dmidecode -s system-product-name
    PowerEdge R620
    $ cat /sys/devices/system/cpu/possible
    0-47
    $ cat /sys/devices/system/cpu/online
    0-31
    
    Disable cpu dynamically:
    $ echo 0 > /sys/devices/system/cpu/cpuX/online
    
    If one cpu is offline, perf_event_open will return ENODEV.
    To fix this issue:
    * check value returned and skip offline cpu.
    * close pmu_fd immediately on error path, avoid fd leaking.
    
    Fixes: 47c09d6a9f67 ("bpftool: Introduce "prog profile" command")
    Signed-off-by: Tonghao Zhang <tong@infragraf.org>
    Cc: Quentin Monnet <quentin@isovalent.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Andrii Nakryiko <andrii@kernel.org>
    Cc: Martin KaFai Lau <martin.lau@linux.dev>
    Cc: Song Liu <song@kernel.org>
    Cc: Yonghong Song <yhs@fb.com>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: KP Singh <kpsingh@kernel.org>
    Cc: Stanislav Fomichev <sdf@google.com>
    Cc: Hao Luo <haoluo@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/r/20230202131701.29519-1-tong@infragraf.org
    Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 627e140a5b7df4ec285271b8566720a3990732b8
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jan 23 16:53:08 2023 -0600

    crypto: ccp - Flush the SEV-ES TMR memory before giving it to firmware
    
    [ Upstream commit 46a334a98f585ef78d51d8f5736596887bdd7f54 ]
    
    Perform a cache flush on the SEV-ES TMR memory after allocation to prevent
    any possibility of the firmware encountering an error should dirty cache
    lines be present. Use clflush_cache_range() to flush the SEV-ES TMR memory.
    
    Fixes: 97f9ac3db661 ("crypto: ccp - Add support for SEV-ES to the PSP driver")
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 959bd9d42a839809b00c7243037919d61b4b7763
Author: Peter Gonda <pgonda@google.com>
Date:   Tue Dec 7 15:33:04 2021 -0800

    crypto: ccp - Refactor out sev_fw_alloc()
    
    [ Upstream commit cc17982d58d1e67eab831e7023ede999dda56173 ]
    
    Create a helper function sev_fw_alloc() which can be used to allocate
    aligned memory regions for use by the PSP firmware. Currently only used
    for the SEV-ES TMR region but will be used for the SEV_INIT_EX NV memory
    region.
    
    Signed-off-by: Peter Gonda <pgonda@google.com>
    Reviewed-by: Marc Orr <marcorr@google.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Acked-by: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Marc Orr <marcorr@google.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: David Rientjes <rientjes@google.com>
    Cc: John Allen <john.allen@amd.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: linux-crypto@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Stable-dep-of: 46a334a98f58 ("crypto: ccp - Flush the SEV-ES TMR memory before giving it to firmware")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6952629bed36a0ba0dd4bedf8d4d799bdae757ae
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Jan 20 12:45:14 2023 +0100

    leds: led-class: Add missing put_device() to led_put()
    
    [ Upstream commit 445110941eb94709216363f9d807d2508e64abd7 ]
    
    led_put() is used to "undo" a successful of_led_get() call,
    of_led_get() uses class_find_device_by_of_node() which returns
    a reference to the device which must be free-ed with put_device()
    when the caller is done with it.
    
    Add a put_device() call to led_put() to free the reference returned
    by class_find_device_by_of_node().
    
    And also add a put_device() in the error-exit case of try_module_get()
    failing.
    
    Fixes: 699a8c7c4bd3 ("leds: Add of_led_get() and led_put()")
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Lee Jones <lee@kernel.org>
    Link: https://lore.kernel.org/r/20230120114524.408368-2-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92a07ba4f0af2cccdc2aa5ee32679c9c9714db90
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Sun Jan 22 16:07:37 2023 +0800

    crypto: xts - Handle EBUSY correctly
    
    [ Upstream commit 51c082514c2dedf2711c99d93c196cc4eedceb40 ]
    
    As it is xts only handles the special return value of EINPROGRESS,
    which means that in all other cases it will free data related to the
    request.
    
    However, as the caller of xts may specify MAY_BACKLOG, we also need
    to expect EBUSY and treat it in the same way.  Otherwise backlogged
    requests will trigger a use-after-free.
    
    Fixes: 8083b1bf8163 ("crypto: xts - add support for ciphertext stealing")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 119848416480f70d57d7cff7597391f2c2735838
Author: Wang Qing <wangqing@vivo.com>
Date:   Mon Dec 13 01:44:36 2021 -0800

    net: ethernet: ti: add missing of_node_put before return
    
    [ Upstream commit be565ec71d1d59438bed0c7ed0a252a327e0b0ef ]
    
    Fix following coccicheck warning:
    WARNING: Function "for_each_child_of_node"
    should have of_node_put() before return.
    
    Early exits from for_each_child_of_node should decrement the
    node reference counter.
    
    Signed-off-by: Wang Qing <wangqing@vivo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80c81aafc998a551d41f7efbcfa27aff7cec6ef5
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Fri Oct 30 22:07:07 2020 +0200

    net: ethernet: ti: am65-cpsw: handle deferred probe with dev_err_probe()
    
    [ Upstream commit 8fbc2f9edce23d19fc09ef5bf8d4eb38be2db0f8 ]
    
    Use new dev_err_probe() API to handle deferred probe properly and simplify
    the code.
    
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37f0ca73fe81305bc889d8d765bbb6f8756b53b5
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Fri Oct 30 22:07:04 2020 +0200

    net: ethernet: ti: am65-cpsw: fix tx csum offload for multi mac mode
    
    [ Upstream commit 97067aaf127487788a297267dede0008cd75bb7b ]
    
    The current implementation uses .ndo_set_features() callback to track
    NETIF_F_HW_CSUM feature changes and update generic
    CPSW_P0_CONTROL_REG.RX_CHECKSUM_EN option accordingly. It's not going to
    work in case of multi-port devices as TX csum offload can be changed per
    netdev.
    
    On K3 CPSWxG devices TX csum offload enabled in the following way:
    
     - the CPSW_P0_CONTROL_REG.RX_CHECKSUM_EN option enables TX csum offload in
    generic and affects all TX DMA channels and packets;
    
     - corresponding fields in TX DMA descriptor have to be filed properly when
    upper layer wants to offload TX csum (skb->ip_summed == CHECKSUM_PARTIAL)
    and it's per-packet option.
    
    The Linux Network core is expected to never request TX csum offload if
    netdev NETIF_F_HW_CSUM feature is disabled, and, as result, TX DMA
    descriptors should not be modified, and per-packet TX csum offload will be
    disabled (or enabled) on per-netdev basis. Which, in turn, makes it safe to
    enable the CPSW_P0_CONTROL_REG.RX_CHECKSUM_EN option unconditionally.
    
    Hence, fix TX csum offload for multi-port devices by:
     - enabling the CPSW_P0_CONTROL_REG.RX_CHECKSUM_EN option in
    am65_cpsw_nuss_common_open() unconditionally
     - and removing .ndo_set_features() callback implementation, which was used
    only NETIF_F_HW_CSUM feature update purposes
    
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e83e1619fac9151b1515177f5066ae67b0cbda2
Author: Ashok Raj <ashok.raj@intel.com>
Date:   Mon Jan 9 07:35:52 2023 -0800

    x86/microcode: Adjust late loading result reporting message
    
    [ Upstream commit 6eab3abac7043226e5375e9ead0c7607ced6767b ]
    
    During late microcode loading, the "Reload completed" message is issued
    unconditionally, regardless of success or failure.
    
    Adjust the message to report the result of the update.
    
      [ bp: Massage. ]
    
    Fixes: 9bd681251b7c ("x86/microcode: Announce reload operation's completion")
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Link: https://lore.kernel.org/lkml/874judpqqd.ffs@tglx/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 511e27e5fdd658e6cb06b4947fb0d3ac76163776
Author: Ashok Raj <ashok.raj@intel.com>
Date:   Mon Jan 9 07:35:51 2023 -0800

    x86/microcode: Check CPU capabilities after late microcode update correctly
    
    [ Upstream commit c0dd9245aa9e25a697181f6085692272c9ec61bc ]
    
    The kernel caches each CPU's feature bits at boot in an x86_capability[]
    structure. However, the capabilities in the BSP's copy can be turned off
    as a result of certain command line parameters or configuration
    restrictions, for example the SGX bit. This can cause a mismatch when
    comparing the values before and after the microcode update.
    
    Another example is X86_FEATURE_SRBDS_CTRL which gets added only after
    microcode update:
    
    #  --- cpuid.before     2023-01-21 14:54:15.652000747 +0100
    #  +++ cpuid.after      2023-01-21 14:54:26.632001024 +0100
    #  @@ -10,7 +10,7 @@ CPU:
    #      0x00000004 0x04: eax=0x00000000 ebx=0x00000000 ecx=0x00000000 edx=0x00000000
    #      0x00000005 0x00: eax=0x00000040 ebx=0x00000040 ecx=0x00000003 edx=0x11142120
    #      0x00000006 0x00: eax=0x000027f7 ebx=0x00000002 ecx=0x00000001 edx=0x00000000
    #  -   0x00000007 0x00: eax=0x00000000 ebx=0x029c6fbf ecx=0x40000000 edx=0xbc002400
    #  +   0x00000007 0x00: eax=0x00000000 ebx=0x029c6fbf ecx=0x40000000 edx=0xbc002e00
                                                                                 ^^^
    
    and which proves for a gazillionth time that late loading is a bad bad
    idea.
    
    microcode_check() is called after an update to report any previously
    cached CPUID bits which might have changed due to the update.
    
    Therefore, store the cached CPU caps before the update and compare them
    with the CPU caps after the microcode update has succeeded.
    
    Thus, the comparison is done between the CPUID *hardware* bits before
    and after the upgrade instead of using the cached, possibly runtime
    modified values in BSP's boot_cpu_data copy.
    
    As a result, false warnings about CPUID bits changes are avoided.
    
      [ bp:
            - Massage.
            - Add SRBDS_CTRL example.
            - Add kernel-doc.
            - Incorporate forgotten review feedback from dhansen.
            ]
    
    Fixes: 1008c52c09dc ("x86/CPU: Add a microcode loader callback")
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/20230109153555.4986-3-ashok.raj@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89e848bb4aa140e701eb0d017736ce5d1ee198da
Author: Ashok Raj <ashok.raj@intel.com>
Date:   Mon Jan 9 07:35:50 2023 -0800

    x86/microcode: Add a parameter to microcode_check() to store CPU capabilities
    
    [ Upstream commit ab31c74455c64e69342ddab21fd9426fcbfefde7 ]
    
    Add a parameter to store CPU capabilities before performing a microcode
    update so that CPU capabilities can be compared before and after update.
    
      [ bp: Massage. ]
    
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
    Link: https://lore.kernel.org/r/20230109153555.4986-2-ashok.raj@intel.com
    Stable-dep-of: c0dd9245aa9e ("x86/microcode: Check CPU capabilities after late microcode update correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5e78fa916aafe2dbcb323ee8b436f3e81cf0aec
Author: Ashok Raj <ashok.raj@intel.com>
Date:   Mon Aug 29 18:10:30 2022 +0000

    x86/microcode: Print previous version of microcode after reload
    
    [ Upstream commit 7fce8d6eccbc31a561d07c79f359ad09f0424347 ]
    
    Print both old and new versions of microcode after a reload is complete
    because knowing the previous microcode version is sometimes important
    from a debugging perspective.
    
      [ bp: Massage commit message. ]
    
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Link: https://lore.kernel.org/r/20220829181030.722891-1-ashok.raj@intel.com
    Stable-dep-of: c0dd9245aa9e ("x86/microcode: Check CPU capabilities after late microcode update correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6230806681fa25b7a3829c021d5b33d68c9bd09
Author: Borislav Petkov <bp@suse.de>
Date:   Wed May 25 18:12:30 2022 +0200

    x86/microcode: Default-disable late loading
    
    [ Upstream commit a77a94f86273ce42a39cb479217dd8d68acfe0ff ]
    
    It is dangerous and it should not be used anyway - there's a nice early
    loading already.
    
    Requested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20220525161232.14924-3-bp@alien8.de
    Stable-dep-of: c0dd9245aa9e ("x86/microcode: Check CPU capabilities after late microcode update correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e56938f207241512aab787b17c88c96dc150b90
Author: Borislav Petkov <bp@suse.de>
Date:   Wed May 25 18:12:29 2022 +0200

    x86/microcode: Rip out the OLD_INTERFACE
    
    [ Upstream commit 181b6f40e9ea80c76756d4d0cdeed396016c487e ]
    
    Everything should be using the early initrd loading by now.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20220525161232.14924-2-bp@alien8.de
    Stable-dep-of: c0dd9245aa9e ("x86/microcode: Check CPU capabilities after late microcode update correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8078a170baab3696dba1b6a2bd48ec59aefaacdc
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Mar 8 16:30:47 2022 +0100

    x86: Mark stop_this_cpu() __noreturn
    
    [ Upstream commit f9cdf7ca57cada055f61ef6d0eb4db21c3f200db ]
    
    vmlinux.o: warning: objtool: smp_stop_nmi_callback()+0x2b: unreachable instruction
    
    0000 0000000000047cf0 <smp_stop_nmi_callback>:
    ...
    0026    47d16:  e8 00 00 00 00          call   47d1b <smp_stop_nmi_callback+0x2b>       47d17: R_X86_64_PLT32   stop_this_cpu-0x4
    002b    47d1b:  b8 01 00 00 00          mov    $0x1,%eax
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Link: https://lore.kernel.org/r/20220308154319.290905453@infradead.org
    Stable-dep-of: c0dd9245aa9e ("x86/microcode: Check CPU capabilities after late microcode update correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3900b7de1df724bc8d70c8d48ff6dab39611b6d4
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Aug 3 16:15:51 2021 +0200

    x86/microcode: Replace deprecated CPU-hotplug functions.
    
    [ Upstream commit 2089f34f8c5b91f7235023ec72e71e3247261ecc ]
    
    The functions get_online_cpus() and put_online_cpus() have been
    deprecated during the CPU hotplug rework. They map directly to
    cpus_read_lock() and cpus_read_unlock().
    
    Replace deprecated CPU-hotplug functions with the official version.
    The behavior remains unchanged.
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20210803141621.780504-9-bigeasy@linutronix.de
    Stable-dep-of: c0dd9245aa9e ("x86/microcode: Check CPU capabilities after late microcode update correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e3bd75f64d2f844a0f8c7b2d80eba17d1959677
Author: Borislav Petkov <bp@suse.de>
Date:   Mon May 10 23:29:25 2021 +0200

    x86/cpu: Init AP exception handling from cpu_init_secondary()
    
    [ Upstream commit b1efd0ff4bd16e8bb8607ba566b03f2024a830bb ]
    
    SEV-ES guests require properly setup task register with which the TSS
    descriptor in the GDT can be located so that the IST-type #VC exception
    handler which they need to function properly, can be executed.
    
    This setup needs to happen before attempting to load microcode in
    ucode_cpu_init() on secondary CPUs which can cause such #VC exceptions.
    
    Simplify the machinery by running that exception setup from a new function
    cpu_init_secondary() and explicitly call cpu_init_exception_handling() for
    the boot CPU before cpu_init(). The latter prepares for fixing and
    simplifying the exception/IST setup on the boot CPU.
    
    There should be no functional changes resulting from this patch.
    
    [ tglx: Reworked it so cpu_init_exception_handling() stays seperate ]
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Lai Jiangshan <laijs@linux.alibaba.com>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/87k0o6gtvu.ffs@nanos.tec.linutronix.de
    Stable-dep-of: c0dd9245aa9e ("x86/microcode: Check CPU capabilities after late microcode update correctly")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e7a569929acdea82e56f0d0c2f45ff85dc25161
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Jan 3 20:57:26 2023 +0800

    powercap: fix possible name leak in powercap_register_zone()
    
    [ Upstream commit 1b6599f741a4525ca761ecde46e5885ff1e6ba58 ]
    
    In the error path after calling dev_set_name(), the device
    name is leaked. To fix this, calling dev_set_name() before
    device_register(), and call put_device() if it returns error.
    
    All the resources is released in powercap_release(), so it
    can return from powercap_register_zone() directly.
    
    Fixes: 75d2364ea0ca ("PowerCap: Add class driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae849d2f48019ff9c104e32bf588ccbfb200e971
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jan 13 18:27:51 2023 +0800

    crypto: seqiv - Handle EBUSY correctly
    
    [ Upstream commit 32e62025e5e52fbe4812ef044759de7010b15dbc ]
    
    As it is seqiv only handles the special return value of EINPROGERSS,
    which means that in all other cases it will free data related to the
    request.
    
    However, as the caller of seqiv may specify MAY_BACKLOG, we also need
    to expect EBUSY and treat it in the same way.  Otherwise backlogged
    requests will trigger a use-after-free.
    
    Fixes: 0a270321dbf9 ("[CRYPTO] seqiv: Add Sequence Number IV Generator")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 796e02cca30a67322161f0745e5ce994bbe75605
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jan 13 18:24:09 2023 +0800

    crypto: essiv - Handle EBUSY correctly
    
    [ Upstream commit b5a772adf45a32c68bef28e60621f12617161556 ]
    
    As it is essiv only handles the special return value of EINPROGERSS,
    which means that in all other cases it will free data related to the
    request.
    
    However, as the caller of essiv may specify MAY_BACKLOG, we also need
    to expect EBUSY and treat it in the same way.  Otherwise backlogged
    requests will trigger a use-after-free.
    
    Fixes: be1eb7f78aa8 ("crypto: essiv - create wrapper template...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62d428c9fe1b3c1c4aabab710e464f8e360b2786
Author: Koba Ko <koba.taiwan@gmail.com>
Date:   Mon Jan 9 10:15:02 2023 +0800

    crypto: ccp - Failure on re-initialization due to duplicate sysfs filename
    
    [ Upstream commit 299bf602b3f92f1456aef59c6413591fb02e762a ]
    
    The following warning appears during the CCP module re-initialization:
    
    [  140.965403] sysfs: cannot create duplicate filename
    '/devices/pci0000:00/0000:00:07.1/0000:03:00.2/dma/dma0chan0'
    [  140.975736] CPU: 0 PID: 388 Comm: kworker/0:2 Kdump: loaded Not
    tainted 6.2.0-0.rc2.18.eln124.x86_64 #1
    [  140.985185] Hardware name: HPE ProLiant DL325 Gen10/ProLiant DL325
    Gen10, BIOS A41 07/17/2020
    [  140.993761] Workqueue: events work_for_cpu_fn
    [  140.998151] Call Trace:
    [  141.000613]  <TASK>
    [  141.002726]  dump_stack_lvl+0x33/0x46
    [  141.006415]  sysfs_warn_dup.cold+0x17/0x23
    [  141.010542]  sysfs_create_dir_ns+0xba/0xd0
    [  141.014670]  kobject_add_internal+0xba/0x260
    [  141.018970]  kobject_add+0x81/0xb0
    [  141.022395]  device_add+0xdc/0x7e0
    [  141.025822]  ? complete_all+0x20/0x90
    [  141.029510]  __dma_async_device_channel_register+0xc9/0x130
    [  141.035119]  dma_async_device_register+0x19e/0x3b0
    [  141.039943]  ccp_dmaengine_register+0x334/0x3f0 [ccp]
    [  141.045042]  ccp5_init+0x662/0x6a0 [ccp]
    [  141.049000]  ? devm_kmalloc+0x40/0xd0
    [  141.052688]  ccp_dev_init+0xbb/0xf0 [ccp]
    [  141.056732]  ? __pci_set_master+0x56/0xd0
    [  141.060768]  sp_init+0x70/0x90 [ccp]
    [  141.064377]  sp_pci_probe+0x186/0x1b0 [ccp]
    [  141.068596]  local_pci_probe+0x41/0x80
    [  141.072374]  work_for_cpu_fn+0x16/0x20
    [  141.076145]  process_one_work+0x1c8/0x380
    [  141.080181]  worker_thread+0x1ab/0x380
    [  141.083953]  ? __pfx_worker_thread+0x10/0x10
    [  141.088250]  kthread+0xda/0x100
    [  141.091413]  ? __pfx_kthread+0x10/0x10
    [  141.095185]  ret_from_fork+0x2c/0x50
    [  141.098788]  </TASK>
    [  141.100996] kobject_add_internal failed for dma0chan0 with -EEXIST,
    don't try to register things with the same name in the same directory.
    [  141.113703] ccp 0000:03:00.2: ccp initialization failed
    
    The /dma/dma0chan0 sysfs file is not removed since dma_chan object
    has been released in ccp_dma_release() before releasing dma device.
    A correct procedure would be: release dma channels first => unregister
    dma device => release ccp dma object.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=216888
    Fixes: 68dbe80f5b51 ("crypto: ccp - Release dma channels before dmaengine unrgister")
    Tested-by: Vladis Dronov <vdronov@redhat.com>
    Signed-off-by: Koba Ko <koba.ko@canonical.com>
    Reviewed-by: Vladis Dronov <vdronov@redhat.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fb7dead798c97f6c13acdea1023979d16dd7482
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Sat Jan 14 09:50:50 2023 +0100

    ACPI: battery: Fix missing NUL-termination with large strings
    
    [ Upstream commit f2ac14b5f197e4a2dec51e5ceaa56682ff1592bc ]
    
    When encountering a string bigger than the destination buffer (32 bytes),
    the string is not properly NUL-terminated, causing buffer overreads later.
    
    This for example happens on the Inspiron 3505, where the battery
    model name is larger than 32 bytes, which leads to sysfs showing
    the model name together with the serial number string (which is
    NUL-terminated and thus prevents worse).
    
    Fix this by using strscpy() which ensures that the result is
    always NUL-terminated.
    
    Fixes: 106449e870b3 ("ACPI: Battery: Allow extract string from integer")
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45a1ca6f3ae7c75cc317a0850196e08af76f583b
Author: Shivani Baranwal <quic_shivbara@quicinc.com>
Date:   Tue Dec 6 20:07:14 2022 +0530

    wifi: cfg80211: Fix extended KCK key length check in nl80211_set_rekey_data()
    
    [ Upstream commit df4969ca135b9b3b2c38c07514aaa775112ac835 ]
    
    The extended KCK key length check wrongly using the KEK key attribute
    for validation. Due to this GTK rekey offload is failing when the KCK
    key length is 24 bytes even though the driver advertising
    WIPHY_FLAG_SUPPORTS_EXT_KEK_KCK flag. Use correct attribute to fix the
    same.
    
    Fixes: 093a48d2aa4b ("cfg80211: support bigger kek/kck key length")
    Signed-off-by: Shivani Baranwal <quic_shivbara@quicinc.com>
    Signed-off-by: Veerendranath Jakkam <quic_vjakkam@quicinc.com>
    Link: https://lore.kernel.org/r/20221206143715.1802987-2-quic_vjakkam@quicinc.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 137963e3b95776f1d57c62f249a93fe47e019a22
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Mon Jan 2 12:11:42 2023 +0400

    wifi: ath11k: Fix memory leak in ath11k_peer_rx_frag_setup
    
    [ Upstream commit ed3f83b3459a67a3ab9d806490ac304b567b1c2d ]
    
    crypto_alloc_shash() allocates resources, which should be released by
    crypto_free_shash(). When ath11k_peer_find() fails, there has memory
    leak. Add missing crypto_free_shash() to fix this.
    
    Fixes: 243874c64c81 ("ath11k: handle RX fragments")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20230102081142.3937570-1-linmq006@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78b56b0a613a87b61290b95be497fdfe2fe58aa6
Author: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
Date:   Wed Jan 4 21:41:30 2023 +0900

    wifi: ath9k: Fix potential stack-out-of-bounds write in ath9k_wmi_rsp_callback()
    
    [ Upstream commit 8a2f35b9830692f7a616f2f627f943bc748af13a ]
    
    Fix a stack-out-of-bounds write that occurs in a WMI response callback
    function that is called after a timeout occurs in ath9k_wmi_cmd().
    The callback writes to wmi->cmd_rsp_buf, a stack-allocated buffer that
    could no longer be valid when a timeout occurs. Set wmi->last_seq_id to
    0 when a timeout occurred.
    
    Found by a modified version of syzkaller.
    
    BUG: KASAN: stack-out-of-bounds in ath9k_wmi_ctrl_rx
    Write of size 4
    Call Trace:
     memcpy
     ath9k_wmi_ctrl_rx
     ath9k_htc_rx_msg
     ath9k_hif_usb_reg_in_cb
     __usb_hcd_giveback_urb
     usb_hcd_giveback_urb
     dummy_timer
     call_timer_fn
     run_timer_softirq
     __do_softirq
     irq_exit_rcu
     sysvec_apic_timer_interrupt
    
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Signed-off-by: Minsuk Kang <linuxlovemin@yonsei.ac.kr>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20230104124130.10996-1-linuxlovemin@yonsei.ac.kr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f26dd69f61eff2eedf5df2d199bdd23108309947
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Wed Jan 4 15:36:15 2023 +0300

    wifi: ath9k: hif_usb: clean up skbs if ath9k_hif_usb_rx_stream() fails
    
    [ Upstream commit 0af54343a76263a12dbae7fafb64eb47c4a6ad38 ]
    
    Syzkaller detected a memory leak of skbs in ath9k_hif_usb_rx_stream().
    While processing skbs in ath9k_hif_usb_rx_stream(), the already allocated
    skbs in skb_pool are not freed if ath9k_hif_usb_rx_stream() fails. If we
    have an incorrect pkt_len or pkt_tag, the input skb is considered invalid
    and dropped. All the associated packets already in skb_pool should be
    dropped and freed. Added a comment describing this issue.
    
    The patch also makes remain_skb NULL after being processed so that it
    cannot be referenced after potential free. The initialization of hif_dev
    fields which are associated with remain_skb (rx_remain_len,
    rx_transfer_len and rx_pad_len) is moved after a new remain_skb is
    allocated.
    
    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.
    
    Fixes: 6ce708f54cc8 ("ath9k: Fix out-of-bound memcpy in ath9k_hif_usb_rx_stream")
    Fixes: 44b23b488d44 ("ath9k: hif_usb: Reduce indent 1 column")
    Reported-by: syzbot+e9632e3eb038d93d6bc6@syzkaller.appspotmail.com
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20230104123615.51511-1-pchelkin@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5668e63e2673303d969a075aa5c028d3758a4a6e
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Mon Jun 13 21:44:07 2022 +0300

    ath9k: htc: clean up statistics macros
    
    [ Upstream commit d7fc76039b74ad37b7056d5607b05d7cb31a5404 ]
    
    I've changed *STAT_* macros a bit in previous patch and I seems like
    they become really unreadable. Align these macros definitions to make
    code cleaner and fix folllowing checkpatch warning
    
    ERROR: Macros with complex values should be enclosed in parentheses
    
    Also, statistics macros now accept an hif_dev as argument, since
    macros that depend on having a local variable with a magic name
    don't abide by the coding style.
    
    No functional change
    
    Suggested-by: Jeff Johnson <quic_jjohnson@quicinc.com>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/ebb2306d06a496cd1b032155ae52fdc5fa8cc2c5.1655145743.git.paskripkin@gmail.com
    Stable-dep-of: 0af54343a762 ("wifi: ath9k: hif_usb: clean up skbs if ath9k_hif_usb_rx_stream() fails")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 221f9bd5ec56933c3e1ee07ff941804296ad5560
Author: Wan Jiabing <wanjiabing@vivo.com>
Date:   Wed Apr 27 10:37:32 2022 +0300

    ath9k: hif_usb: simplify if-if to if-else
    
    [ Upstream commit 2950833f10cfa601813262e1d9c8473f9415681b ]
    
    Use if and else instead of if(A) and if (!A).
    
    Signed-off-by: Wan Jiabing <wanjiabing@vivo.com>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20220424094441.104937-1-wanjiabing@vivo.com
    Stable-dep-of: 0af54343a762 ("wifi: ath9k: hif_usb: clean up skbs if ath9k_hif_usb_rx_stream() fails")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec246dfe006b2a8f36353f7489e4f525114db9a5
Author: Fedor Pchelkin <pchelkin@ispras.ru>
Date:   Wed Jan 4 15:35:46 2023 +0300

    wifi: ath9k: htc_hst: free skb in ath9k_htc_rx_msg() if there is no callback function
    
    [ Upstream commit 9b25e3985477ac3f02eca5fc1e0cc6850a3f7e69 ]
    
    It is stated that ath9k_htc_rx_msg() either frees the provided skb or
    passes its management to another callback function. However, the skb is
    not freed in case there is no another callback function, and Syzkaller was
    able to cause a memory leak. Also minor comment fix.
    
    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.
    
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Reported-by: syzbot+e008dccab31bd3647609@syzkaller.appspotmail.com
    Reported-by: syzbot+6692c72009680f7c4eb2@syzkaller.appspotmail.com
    Signed-off-by: Fedor Pchelkin <pchelkin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20230104123546.51427-1-pchelkin@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b44178e71810b9556fb14515fcea527b73b9573c
Author: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
Date:   Tue Dec 27 16:33:06 2022 +0300

    wifi: orinoco: check return value of hermes_write_wordrec()
    
    [ Upstream commit 1e346cbb096a5351a637ec1992beffbf330547f0 ]
    
    There is currently no return check for writing an authentication
    type (HERMES_AUTH_SHARED_KEY or HERMES_AUTH_OPEN). It looks like
    it was accidentally skipped.
    
    This patch adds a return check similar to the other checks in
    __orinoco_hw_setup_enc() for hermes_write_wordrec().
    
    Detected using the static analysis tool - Svace.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Alexey Kodanev <aleksei.kodanev@bell-sw.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221227133306.201356-1-aleksei.kodanev@bell-sw.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 430f9f9bec53a75f9ccc53e156a66f13fc098b83
Author: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date:   Thu Dec 22 13:48:04 2022 +0200

    wifi: rtl8xxxu: Fix memory leaks with RTL8723BU, RTL8192EU
    
    [ Upstream commit b39f662ce1648db0b9de32e6a849b098480793cb ]
    
    The wifi + bluetooth combo chip RTL8723BU can leak memory (especially?)
    when it's connected to a bluetooth audio device. The busy bluetooth
    traffic generates lots of C2H (card to host) messages, which are not
    freed correctly.
    
    To fix this, move the dev_kfree_skb() call in rtl8xxxu_c2hcmd_callback()
    inside the loop where skb_dequeue() is called.
    
    The RTL8192EU leaks memory because the C2H messages are added to the
    queue and left there forever. (This was fine in the past because it
    probably wasn't sending any C2H messages until commit e542e66b7c2e
    ("wifi: rtl8xxxu: gen2: Turn on the rate control"). Since that commit
    it sends a C2H message when the TX rate changes.)
    
    To fix this, delete the check for rf_paths > 1 and the goto. Let the
    function process the C2H messages from RTL8192EU like the ones from
    the other chips.
    
    Theoretically the RTL8188FU could also leak like RTL8723BU, but it
    most likely doesn't send C2H messages frequently enough.
    
    This change was tested with RTL8723BU by Erhard F. I tested it with
    RTL8188FU and RTL8192EU.
    
    Reported-by: Erhard F. <erhard_f@mailbox.org>
    Tested-by: Erhard F. <erhard_f@mailbox.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215197
    Fixes: e542e66b7c2e ("rtl8xxxu: add bluetooth co-existence support for single antenna")
    Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
    Reviewed-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/03b099c1-c671-d252-36f4-57b70d721f9d@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 695f1d9431ff702eeecd637ff24698b17ceb7d42
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Jan 1 21:40:20 2023 +0200

    thermal/drivers/tsens: Sort out msm8976 vs msm8956 data
    
    [ Upstream commit a7d3006be5ca7b04e4b84b5ceaae55a700e511bd ]
    
    Tsens driver mentions that msm8976 data should be used for both msm8976
    and msm8956 SoCs. This is not quite correct, as according to the
    vendor kernels, msm8976 should use standard slope values (3200), while
    msm8956 really uses the slope values found in the driver.
    
    Add separate compatibility string for msm8956, move slope value
    overrides to the corresponding init function and use the standard
    compute_intercept_slope() function for both platforms.
    
    Fixes: 0e580290170d ("thermal: qcom: tsens-v1: Add support for MSM8956 and MSM8976")
    Cc: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20230101194034.831222-7-dmitry.baryshkov@linaro.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40f62ff0d7edbbc77d0074e5321f7fe0d275e57f
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Apr 6 03:26:46 2022 +0300

    thermal/drivers/tsens: Add compat string for the qcom,msm8960
    
    [ Upstream commit 2caf73969de6675318a711d0622406c8c66afc03 ]
    
    On apq8064 (msm8960) platforms the tsens device is created manually by
    the gcc driver. Prepare the tsens driver for the qcom,msm8960-tsens
    device instantiated from the device tree.
    
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20220406002648.393486-3-dmitry.baryshkov@linaro.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Stable-dep-of: a7d3006be5ca ("thermal/drivers/tsens: Sort out msm8976 vs msm8956 data")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9f2002484ec6bd40094fb5d3d2feb90dbcd705a
Author: Konrad Dybcio <konrad.dybcio@somainline.org>
Date:   Thu Feb 25 22:31:19 2021 +0100

    thermal/drivers/qcom/tsens_v1: Enable sensor 3 on MSM8976
    
    [ Upstream commit 007d81a4519f04fa5ced5e9e28bf70cd753c398d ]
    
    The sensor *is* in fact used and does report temperature.
    
    Signed-off-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Acked-by: Thara Gopinath <thara.gopinath@linaro.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210225213119.116550-1-konrad.dybcio@somainline.org
    Stable-dep-of: a7d3006be5ca ("thermal/drivers/tsens: Sort out msm8976 vs msm8956 data")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6ec7fa688d93839dcc1949b524e6b9bcea3a069
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sun Jan 1 21:40:19 2023 +0200

    thermal/drivers/tsens: Drop msm8976-specific defines
    
    [ Upstream commit 3bf0ea99e2e32b0335106b86d84404cc85bcd113 ]
    
    Drop msm8976-specific defines, which duplicate generic ones.
    
    Fixes: 0e580290170d ("thermal: qcom: tsens-v1: Add support for MSM8956 and MSM8976")
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20230101194034.831222-6-dmitry.baryshkov@linaro.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5419cd28c8f29ccb347b5adbda1c2acc967700e6
Author: Daniil Tatianin <d-tatianin@yandex-team.ru>
Date:   Sat Jan 7 02:53:08 2023 +0300

    ACPICA: nsrepair: handle cases without a return value correctly
    
    [ Upstream commit ca843a4c79486e99a19b859ef0b9887854afe146 ]
    
    Previously acpi_ns_simple_repair() would crash if expected_btypes
    contained any combination of ACPI_RTYPE_NONE with a different type,
    e.g | ACPI_RTYPE_INTEGER because of slightly incorrect logic in the
    !return_object branch, which wouldn't return AE_AML_NO_RETURN_VALUE
    for such cases.
    
    Found by Linux Verification Center (linuxtesting.org) with the SVACE
    static analysis tool.
    
    Link: https://github.com/acpica/acpica/pull/811
    Fixes: 61db45ca2163 ("ACPICA: Restore code that repairs NULL package elements in return values.")
    Signed-off-by: Daniil Tatianin <d-tatianin@yandex-team.ru>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c33e01fe1d294b46c0212f213b8553e53604375
Author: David Rientjes <rientjes@google.com>
Date:   Fri Dec 30 14:18:46 2022 -0800

    crypto: ccp - Avoid page allocation failure warning for SEV_GET_ID2
    
    [ Upstream commit 91dfd98216d817ec5f1c55890bacb7b4fe9b068a ]
    
    For SEV_GET_ID2, the user provided length does not have a specified
    limitation because the length of the ID may change in the future.  The
    kernel memory allocation, however, is implicitly limited to 4MB on x86 by
    the page allocator, otherwise the kzalloc() will fail.
    
    When this happens, it is best not to spam the kernel log with the warning.
    Simply fail the allocation and return ENOMEM to the user.
    
    Fixes: d6112ea0cb34 ("crypto: ccp - introduce SEV_GET_ID2 command")
    Reported-by: Andy Nguyen <theflow@google.com>
    Reported-by: Peter Gonda <pgonda@google.com>
    Suggested-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David Rientjes <rientjes@google.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c5300f6f5e18b11c02a92f136e69b98fddba15e
Author: John Allen <john.allen@amd.com>
Date:   Wed May 18 15:31:26 2022 +0000

    crypto: ccp - Use kzalloc for sev ioctl interfaces to prevent kernel memory leak
    
    [ Upstream commit 13dc15a3f5fd7f884e4bfa8c011a0ae868df12ae ]
    
    For some sev ioctl interfaces, input may be passed that is less than or
    equal to SEV_FW_BLOB_MAX_SIZE, but larger than the data that PSP
    firmware returns. In this case, kmalloc will allocate memory that is the
    size of the input rather than the size of the data. Since PSP firmware
    doesn't fully overwrite the buffer, the sev ioctl interfaces with the
    issue may return uninitialized slab memory.
    
    Currently, all of the ioctl interfaces in the ccp driver are safe, but
    to prevent future problems, change all ioctl interfaces that allocate
    memory with kmalloc to use kzalloc and memset the data buffer to zero
    in sev_ioctl_do_platform_status.
    
    Fixes: 38103671aad3 ("crypto: ccp: Use the stack and common buffer for status commands")
    Fixes: e799035609e15 ("crypto: ccp: Implement SEV_PEK_CSR ioctl command")
    Fixes: 76a2b524a4b1d ("crypto: ccp: Implement SEV_PDH_CERT_EXPORT ioctl command")
    Fixes: d6112ea0cb344 ("crypto: ccp - introduce SEV_GET_ID2 command")
    Cc: stable@vger.kernel.org
    Reported-by: Andy Nguyen <theflow@google.com>
    Suggested-by: David Rientjes <rientjes@google.com>
    Suggested-by: Peter Gonda <pgonda@google.com>
    Signed-off-by: John Allen <john.allen@amd.com>
    Reviewed-by: Peter Gonda <pgonda@google.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Stable-dep-of: 91dfd98216d8 ("crypto: ccp - Avoid page allocation failure warning for SEV_GET_ID2")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit daaec051cd19e917215a5889bc67d58c0931e433
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Apr 6 15:49:50 2021 -0700

    crypto: ccp: Use the stack and common buffer for status commands
    
    [ Upstream commit 38103671aad38e888743dd26c767869cfc15adca ]
    
    Drop the dedicated status_cmd_buf and instead use a local variable for
    PLATFORM_STATUS.  Now that the low level helper uses an internal buffer
    for all commands, using the stack for the upper layers is safe even when
    running with CONFIG_VMAP_STACK=y.
    
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210406224952.4177376-7-seanjc@google.com>
    Reviewed-by: Brijesh Singh <brijesh.singh@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Stable-dep-of: 91dfd98216d8 ("crypto: ccp - Avoid page allocation failure warning for SEV_GET_ID2")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c997b509fd0168a3ced0b903c717f5b1a18a396b
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Apr 6 15:49:49 2021 -0700

    crypto: ccp: Use the stack for small SEV command buffers
    
    [ Upstream commit e4a9af799e5539b0feb99571f0aaed5a3c81dc5a ]
    
    For commands with small input/output buffers, use the local stack to
    "allocate" the structures used to communicate with the PSP.   Now that
    __sev_do_cmd_locked() gracefully handles vmalloc'd buffers, there's no
    reason to avoid using the stack, e.g. CONFIG_VMAP_STACK=y will just work.
    
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210406224952.4177376-6-seanjc@google.com>
    Reviewed-by: Brijesh Singh <brijesh.singh@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Stable-dep-of: 91dfd98216d8 ("crypto: ccp - Avoid page allocation failure warning for SEV_GET_ID2")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 318dd6f5b7b401a7496e8474ed41a6a0e345afe1
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Tue Dec 27 15:27:39 2022 +0100

    lib/mpi: Fix buffer overrun when SG is too long
    
    [ Upstream commit 7361d1bc307b926cbca214ab67b641123c2d6357 ]
    
    The helper mpi_read_raw_from_sgl sets the number of entries in
    the SG list according to nbytes.  However, if the last entry
    in the SG list contains more data than nbytes, then it may overrun
    the buffer because it only allocates enough memory for nbytes.
    
    Fixes: 2d4d1eea540b ("lib/mpi: Add mpi sgl helpers")
    Reported-by: Roberto Sassu <roberto.sassu@huaweicloud.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c37e86a78c20b3b9d6997ad3f43431b6b2fe2f0
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Fri Nov 25 14:55:00 2022 +0100

    rcu-tasks: Fix synchronize_rcu_tasks() VS zap_pid_ns_processes()
    
    [ Upstream commit 28319d6dc5e2ffefa452c2377dd0f71621b5bff0 ]
    
    RCU Tasks and PID-namespace unshare can interact in do_exit() in a
    complicated circular dependency:
    
    1) TASK A calls unshare(CLONE_NEWPID), this creates a new PID namespace
       that every subsequent child of TASK A will belong to. But TASK A
       doesn't itself belong to that new PID namespace.
    
    2) TASK A forks() and creates TASK B. TASK A stays attached to its PID
       namespace (let's say PID_NS1) and TASK B is the first task belonging
       to the new PID namespace created by unshare()  (let's call it PID_NS2).
    
    3) Since TASK B is the first task attached to PID_NS2, it becomes the
       PID_NS2 child reaper.
    
    4) TASK A forks() again and creates TASK C which get attached to PID_NS2.
       Note how TASK C has TASK A as a parent (belonging to PID_NS1) but has
       TASK B (belonging to PID_NS2) as a pid_namespace child_reaper.
    
    5) TASK B exits and since it is the child reaper for PID_NS2, it has to
       kill all other tasks attached to PID_NS2, and wait for all of them to
       die before getting reaped itself (zap_pid_ns_process()).
    
    6) TASK A calls synchronize_rcu_tasks() which leads to
       synchronize_srcu(&tasks_rcu_exit_srcu).
    
    7) TASK B is waiting for TASK C to get reaped. But TASK B is under a
       tasks_rcu_exit_srcu SRCU critical section (exit_notify() is between
       exit_tasks_rcu_start() and exit_tasks_rcu_finish()), blocking TASK A.
    
    8) TASK C exits and since TASK A is its parent, it waits for it to reap
       TASK C, but it can't because TASK A waits for TASK B that waits for
       TASK C.
    
    Pid_namespace semantics can hardly be changed at this point. But the
    coverage of tasks_rcu_exit_srcu can be reduced instead.
    
    The current task is assumed not to be concurrently reapable at this
    stage of exit_notify() and therefore tasks_rcu_exit_srcu can be
    temporarily relaxed without breaking its constraints, providing a way
    out of the deadlock scenario.
    
    [ paulmck: Fix build failure by adding additional declaration. ]
    
    Fixes: 3f95aa81d265 ("rcu: Make TASKS_RCU handle tasks that are almost done exiting")
    Reported-by: Pengfei Xu <pengfei.xu@intel.com>
    Suggested-by: Boqun Feng <boqun.feng@gmail.com>
    Suggested-by: Neeraj Upadhyay <quic_neeraju@quicinc.com>
    Suggested-by: Paul E. McKenney <paulmck@kernel.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: Eric W . Biederman <ebiederm@xmission.com>
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad410f64f7ab189e71192b1edb5786ffbe59c622
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Fri Nov 25 14:54:59 2022 +0100

    rcu-tasks: Remove preemption disablement around srcu_read_[un]lock() calls
    
    [ Upstream commit 44757092958bdd749775022f915b7ac974384c2a ]
    
    Ever since the following commit:
    
            5a41344a3d83 ("srcu: Simplify __srcu_read_unlock() via this_cpu_dec()")
    
    SRCU doesn't rely anymore on preemption to be disabled in order to
    modify the per-CPU counter. And even then it used to be done from the API
    itself.
    
    Therefore and after checking further, it appears to be safe to remove
    the preemption disablement around __srcu_read_[un]lock() in
    exit_tasks_rcu_start() and exit_tasks_rcu_finish()
    
    Suggested-by: Boqun Feng <boqun.feng@gmail.com>
    Suggested-by: Paul E. McKenney <paulmck@kernel.org>
    Suggested-by: Neeraj Upadhyay <quic_neeraju@quicinc.com>
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Stable-dep-of: 28319d6dc5e2 ("rcu-tasks: Fix synchronize_rcu_tasks() VS zap_pid_ns_processes()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b02b6bb83c683efb69f62f709ac1b064a176ac32
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Fri Nov 25 14:54:58 2022 +0100

    rcu-tasks: Improve comments explaining tasks_rcu_exit_srcu purpose
    
    [ Upstream commit e4e1e8089c5fd948da12cb9f4adc93821036945f ]
    
    Make sure we don't need to look again into the depths of git blame in
    order not to miss a subtle part about how rcu-tasks is dealing with
    exiting tasks.
    
    Suggested-by: Boqun Feng <boqun.feng@gmail.com>
    Suggested-by: Neeraj Upadhyay <quic_neeraju@quicinc.com>
    Suggested-by: Paul E. McKenney <paulmck@kernel.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Stable-dep-of: 28319d6dc5e2 ("rcu-tasks: Fix synchronize_rcu_tasks() VS zap_pid_ns_processes()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4935bb734448a71e4eae539b1d7768f6ed134ac
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Sat Nov 19 17:25:03 2022 +0800

    genirq: Fix the return type of kstat_cpu_irqs_sum()
    
    [ Upstream commit 47904aed898a08f028572b9b5a5cc101ddfb2d82 ]
    
    The type of member ->irqs_sum is unsigned long, but kstat_cpu_irqs_sum()
    returns int, which can result in truncation.  Therefore, change the
    kstat_cpu_irqs_sum() function's return value to unsigned long to avoid
    truncation.
    
    Fixes: f2c66cd8eedd ("/proc/stat: scalability of irq num per cpu")
    Reported-by: Elliott, Robert (Servers) <elliott@hpe.com>
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
    Cc: Josh Don <joshdon@google.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Frederic Weisbecker <frederic@kernel.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5562585c4aa26ba4f044c52a0af244b4b772bfe5
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Thu Dec 15 09:51:20 2022 -0600

    ACPICA: Drop port I/O validation for some regions
    
    [ Upstream commit e1d9148582ab2c3dada5c5cf8ca7531ca269fee5 ]
    
    Microsoft introduced support in Windows XP for blocking port I/O
    to various regions.  For Windows compatibility ACPICA has adopted
    the same protections and will disallow writes to those
    (presumably) the same regions.
    
    On some systems the AML included with the firmware will issue 4 byte
    long writes to 0x80.  These writes aren't making it over because of this
    blockage. The first 4 byte write attempt is rejected, and then
    subsequently 1 byte at a time each offset is tried. The first at 0x80
    works, but then the next 3 bytes are rejected.
    
    This manifests in bizarre failures for devices that expected the AML to
    write all 4 bytes.  Trying the same AML on Windows 10 or 11 doesn't hit
    this failure and all 4 bytes are written.
    
    Either some of these regions were wrong or some point after Windows XP
    some of these regions blocks have been lifted.
    
    In the last 15 years there doesn't seem to be any reports popping up of
    this error in the Windows event viewer anymore.  There is no documentation
    at Microsoft's developer site indicating that Windows ACPI interpreter
    blocks these regions. Between the lack of documentation and the fact that
    the writes actually do work in Windows 10 and 11, it's quite likely
    Windows doesn't actually enforce this anymore.
    
    So to help the issue, only enforce Windows XP specific entries if the
    latest _OSI supported is Windows XP. Continue to enforce the
    ALWAYS_ILLEGAL entries.
    
    Link: https://github.com/acpica/acpica/pull/817
    Fixes: 7f0719039085 ("ACPICA: New: I/O port protection")
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e43b2d9d166286c232d91302906108063e33181
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Dec 19 21:40:40 2022 -0800

    crypto: x86/ghash - fix unaligned access in ghash_setkey()
    
    [ Upstream commit 116db2704c193fff6d73ea6c2219625f0c9bdfc8 ]
    
    The key can be unaligned, so use the unaligned memory access helpers.
    
    Fixes: 8ceee72808d1 ("crypto: ghash-clmulni-intel - use C implementation for setkey()")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6e429cde9ead0c42aba9fee5dc640fa9ba31ad0
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 23:04:53 2022 +0800

    wifi: wl3501_cs: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 44bacbdf9066c590423259dbd6d520baac99c1a8 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave(). Compile
    tested only.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207150453.114742-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93b8809be5ba7d28218fd5561560c10cf058e998
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 23:00:08 2022 +0800

    wifi: libertas: cmdresp: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 708a49a64237f19bd404852f297aaadbc9e7fee0 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave(). Compile
    tested only.
    
    Fixes: f52b041aed77 ("libertas: Add spinlock to avoid race condition")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207150008.111743-5-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ddb1820bdacbccc0f296c70b3344308ed2c7623
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 23:00:07 2022 +0800

    wifi: libertas: main: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit f393df151540bf858effbd29ff572ab94e76a4c4 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave(). Compile
    tested only.
    
    Fixes: d2e7b3425c47 ("libertas: disable functionality when interface is down")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207150008.111743-4-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 647230e71e1c306810996966721ad581899d5b2c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 23:00:06 2022 +0800

    wifi: libertas: if_usb: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 3968e81ba644f10a7d45bae2539560db9edac501 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave(). Compile
    tested only.
    
    Fixes: a3128feef6d5 ("libertas: use irqsave() in USB's complete callback")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207150008.111743-3-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0258757caab5e987b725243cfef0c4a105654db2
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 23:00:05 2022 +0800

    wifi: libertas_tf: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 9388ce97b98216833c969191ee6df61a7201d797 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. So replace kfree_skb()
    with dev_kfree_skb_irq() under spin_lock_irqsave(). Compile
    tested only.
    
    Fixes: fc75122fabb5 ("libertas_tf: use irqsave() in USB's complete callback")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207150008.111743-2-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4b4447481dbdffb0220632b4ba3be397b1d2676
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Wed Dec 7 09:31:14 2022 +0800

    wifi: brcmfmac: unmap dma buffer in brcmf_msgbuf_alloc_pktid()
    
    [ Upstream commit b9f420032f2ba1e634b22ca7b433e5c40ea663af ]
    
    After the DMA buffer is mapped to a physical address, address is stored
    in pktids in brcmf_msgbuf_alloc_pktid(). Then, pktids is parsed in
    brcmf_msgbuf_get_pktid()/brcmf_msgbuf_release_array() to obtain physaddr
    and later unmap the DMA buffer. But when count is always equal to
    pktids->array_size, physaddr isn't stored in pktids and the DMA buffer
    will not be unmapped anyway.
    
    Fixes: 9a1bb60250d2 ("brcmfmac: Adding msgbuf protocol.")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Reviewed-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207013114.1748936-1-shaozhengchao@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e08e6812efb6a8c676e733de0518594d1517e0d9
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Nov 17 19:33:01 2022 +0800

    wifi: brcmfmac: fix potential memory leak in brcmf_netdev_start_xmit()
    
    [ Upstream commit 212fde3fe76e962598ce1d47b97cc78afdfc71b3 ]
    
    The brcmf_netdev_start_xmit() returns NETDEV_TX_OK without freeing skb
    in case of pskb_expand_head() fails, add dev_kfree_skb() to fix it.
    Compile tested only.
    
    Fixes: 270a6c1f65fe ("brcmfmac: rework headroom check in .start_xmit()")
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Reviewed-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/1668684782-47422-1-git-send-email-zhangchangzhong@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1e94fb4d09d0fcfeaa73aa49d787f06c42db7ee
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Nov 17 19:36:03 2022 +0800

    wifi: wilc1000: fix potential memory leak in wilc_mac_xmit()
    
    [ Upstream commit deb962ec9e1c9a81babd3d37542ad4bd6ac3396e ]
    
    The wilc_mac_xmit() returns NETDEV_TX_OK without freeing skb, add
    dev_kfree_skb() to fix it. Compile tested only.
    
    Fixes: c5c77ba18ea6 ("staging: wilc1000: Add SDIO/SPI 802.11 driver")
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/1668684964-48622-1-git-send-email-zhangchangzhong@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a2eb9d9d0c1535bc8e22840193bff4cdcac878b
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Fri Dec 9 09:24:22 2022 +0800

    wifi: ipw2200: fix memory leak in ipw_wdev_init()
    
    [ Upstream commit 9fe21dc626117fb44a8eb393713a86a620128ce3 ]
    
    In the error path of ipw_wdev_init(), exception value is returned, and
    the memory applied for in the function is not released. Also the memory
    is not released in ipw_pci_probe(). As a result, memory leakage occurs.
    So memory release needs to be added to the error path of ipw_wdev_init().
    
    Fixes: a3caa99e6c68 ("libipw: initiate cfg80211 API conversion (v2)")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221209012422.182669-1-shaozhengchao@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 841ae9b924f4e7ff3bfa887fafb113a6665d01ff
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 22:38:26 2022 +0800

    wifi: ipw2x00: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 45fc6d7461f18df2f238caf0cbc5acc4163203d1 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In this case, dev_kfree_skb() is called to free and drop the SKB when
    it's reset, so replace it with dev_kfree_skb_irq(). Compile tested
    only.
    
    Fixes: 43f66a6ce8da ("Add ipw2200 wireless driver.")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221208143826.2385218-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3938f01405d61fde44b25a960c2d6cc851c80467
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Dec 12 13:15:03 2022 -0800

    libbpf: Fix btf__align_of() by taking into account field offsets
    
    [ Upstream commit 25a4481b4136af7794e1df2d6c90ed2f354d60ce ]
    
    btf__align_of() is supposed to be return alignment requirement of
    a requested BTF type. For STRUCT/UNION it doesn't always return correct
    value, because it calculates alignment only based on field types. But
    for packed structs this is not enough, we need to also check field
    offsets and struct size. If field offset isn't aligned according to
    field type's natural alignment, then struct must be packed. Similarly,
    if struct size is not a multiple of struct's natural alignment, then
    struct must be packed as well.
    
    This patch fixes this issue precisely by additionally checking these
    conditions.
    
    Fixes: 3d208f4ca111 ("libbpf: Expose btf__align_of() API")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20221212211505.558851-5-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e950b9a841bc96e98ee25680d5c7aa305120be1
Author: Li Zetao <lizetao1@huawei.com>
Date:   Mon Dec 12 10:58:12 2022 +0800

    wifi: rtlwifi: Fix global-out-of-bounds bug in _rtl8812ae_phy_set_txpower_limit()
    
    [ Upstream commit 117dbeda22ec5ea0918254d03b540ef8b8a64d53 ]
    
    There is a global-out-of-bounds reported by KASAN:
    
      BUG: KASAN: global-out-of-bounds in
      _rtl8812ae_eq_n_byte.part.0+0x3d/0x84 [rtl8821ae]
      Read of size 1 at addr ffffffffa0773c43 by task NetworkManager/411
    
      CPU: 6 PID: 411 Comm: NetworkManager Tainted: G      D
      6.1.0-rc8+ #144 e15588508517267d37
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009),
      Call Trace:
       <TASK>
       ...
       kasan_report+0xbb/0x1c0
       _rtl8812ae_eq_n_byte.part.0+0x3d/0x84 [rtl8821ae]
       rtl8821ae_phy_bb_config.cold+0x346/0x641 [rtl8821ae]
       rtl8821ae_hw_init+0x1f5e/0x79b0 [rtl8821ae]
       ...
       </TASK>
    
    The root cause of the problem is that the comparison order of
    "prate_section" in _rtl8812ae_phy_set_txpower_limit() is wrong. The
    _rtl8812ae_eq_n_byte() is used to compare the first n bytes of the two
    strings from tail to head, which causes the problem. In the
    _rtl8812ae_phy_set_txpower_limit(), it was originally intended to meet
    this requirement by carefully designing the comparison order.
    For example, "pregulation" and "pbandwidth" are compared in order of
    length from small to large, first is 3 and last is 4. However, the
    comparison order of "prate_section" dose not obey such order requirement,
    therefore when "prate_section" is "HT", when comparing from tail to head,
    it will lead to access out of bounds in _rtl8812ae_eq_n_byte(). As
    mentioned above, the _rtl8812ae_eq_n_byte() has the same function as
    strcmp(), so just strcmp() is enough.
    
    Fix it by removing _rtl8812ae_eq_n_byte() and use strcmp() barely.
    Although it can be fixed by adjusting the comparison order of
    "prate_section", this may cause the value of "rate_section" to not be
    from 0 to 5. In addition, commit "21e4b0726dc6" not only moved driver
    from staging to regular tree, but also added setting txpower limit
    function during the driver config phase, so the problem was introduced
    by this commit.
    
    Fixes: 21e4b0726dc6 ("rtlwifi: rtl8821ae: Move driver from staging to regular tree")
    Signed-off-by: Li Zetao <lizetao1@huawei.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221212025812.1541311-1-lizetao1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4fddfd7282f57c63c8099c246a4b852a0e7020c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Oct 26 22:29:53 2020 +0100

    rtlwifi: fix -Wpointer-sign warning
    
    [ Upstream commit ef41937631bfee855e2b406e1d536efdaa9ce512 ]
    
    There are thousands of warnings in a W=2 build from just one file:
    
    drivers/net/wireless/realtek/rtlwifi/rtl8821ae/table.c:3788:15: warning: pointer targets in initialization of 'u8 *' {aka 'unsigned char *'} from 'char *' differ in signedness [-Wpointer-sign]
    
    Change the types to consistently use 'const char *' for the
    strings.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201026213040.3889546-6-arnd@kernel.org
    Stable-dep-of: 117dbeda22ec ("wifi: rtlwifi: Fix global-out-of-bounds bug in _rtl8812ae_phy_set_txpower_limit()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75f4eed70a519717ea91347370207e57b97a632f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 8 22:35:17 2022 +0800

    wifi: rtl8xxxu: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 4c2005ac87685907b3719b4f40215b578efd27c4 ]
    
    It is not allowed to call kfree_skb() or consume_skb() from hardware
    interrupt context or with hardware interrupts being disabled.
    
    It should use dev_kfree_skb_irq() or dev_consume_skb_irq() instead.
    The difference between them is free reason, dev_kfree_skb_irq() means
    the SKB is dropped in error and dev_consume_skb_irq() means the SKB
    is consumed in normal.
    
    In this case, dev_kfree_skb() is called to free and drop the SKB when
    it's shutdown, so replace it with dev_kfree_skb_irq(). Compile tested
    only.
    
    Fixes: 26f1fad29ad9 ("New driver: rtl8xxxu (mac80211)")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221208143517.2383424-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c8f50c7433bdfba1588831c413136ecc3f29f99
Author: Zhengchao Shao <shaozhengchao@huawei.com>
Date:   Thu Dec 8 20:14:48 2022 +0800

    wifi: libertas: fix memory leak in lbs_init_adapter()
    
    [ Upstream commit 16a03958618fb91bb1bc7077cf3211055162cc2f ]
    
    When kfifo_alloc() failed in lbs_init_adapter(), cmd buffer is not
    released. Add free memory to processing error path.
    
    Fixes: 7919b89c8276 ("libertas: convert libertas driver to use an event/cmdresp queue")
    Signed-off-by: Zhengchao Shao <shaozhengchao@huawei.com>
    Reviewed-by: Jiri Pirko <jiri@nvidia.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221208121448.2845986-1-shaozhengchao@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9ef5631dd43d3cdcd55c2c7c6e0be9bff41552c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 22:40:13 2022 +0800

    wifi: iwlegacy: common: don't call dev_kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 0c1528675d7a9787cb516b64d8f6c0f6f8efcb48 ]
    
    It is not allowed to call consume_skb() from hardware interrupt context
    or with interrupts being disabled. So replace dev_kfree_skb() with
    dev_consume_skb_irq() under spin_lock_irqsave(). Compile tested only.
    
    Fixes: 4bc85c1324aa ("Revert "iwlwifi: split the drivers for agn and legacy devices 3945/4965"")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207144013.70210-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e5b782c1c728546642a5d4e518a822cb7050a31
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 22:14:11 2022 +0800

    wifi: rtlwifi: rtl8723be: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 313950c2114e7051c4e3020fd82495fa1fb526a8 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. All the SKBs have
    been dequeued from the old queue, so it's safe to enqueue these
    SKBs to a free queue, then free them after spin_unlock_irqrestore()
    at once. Compile tested only.
    
    Fixes: 5c99f04fec93 ("rtlwifi: rtl8723be: Update driver to match Realtek release of 06/28/14")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207141411.46098-4-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97018e737bd0d3391c3a8c6fcce652fa1dff64b7
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 22:14:10 2022 +0800

    wifi: rtlwifi: rtl8188ee: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 2611687fa7ffc84190f92292de0b80468de17220 ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. All the SKBs have
    been dequeued from the old queue, so it's safe to enqueue these
    SKBs to a free queue, then free them after spin_unlock_irqrestore()
    at once. Compile tested only.
    
    Fixes: 7fe3b3abb5da ("rtlwifi: rtl8188ee: rtl8821ae: Fix a queue locking problem")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207141411.46098-3-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d85d0b1a6135bb218d140052e291a3f1292b976f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Dec 7 22:14:09 2022 +0800

    wifi: rtlwifi: rtl8821ae: don't call kfree_skb() under spin_lock_irqsave()
    
    [ Upstream commit 106031c1f4a850915190d7ec1026696282f9359b ]
    
    It is not allowed to call kfree_skb() from hardware interrupt
    context or with interrupts being disabled. All the SKBs have
    been dequeued from the old queue, so it's safe to enqueue these
    SKBs to a free queue, then free them after spin_unlock_irqrestore()
    at once. Compile tested only.
    
    Fixes: 5c99f04fec93 ("rtlwifi: rtl8723be: Update driver to match Realtek release of 06/28/14")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221207141411.46098-2-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efc8df970561ff708379b89b348e16d3b410cc7b
Author: Yuan Can <yuancan@huawei.com>
Date:   Mon Dec 5 06:14:41 2022 +0000

    wifi: rsi: Fix memory leak in rsi_coex_attach()
    
    [ Upstream commit 956fb851a6e19da5ab491e19c1bc323bb2c2cf6f ]
    
    The coex_cb needs to be freed when rsi_create_kthread() failed in
    rsi_coex_attach().
    
    Fixes: 2108df3c4b18 ("rsi: add coex support")
    Signed-off-by: Yuan Can <yuancan@huawei.com>
    Reviewed-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20221205061441.114632-1-yuancan@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a82c1e0573b87bf32f96165a76d19e2ebd23c35
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Wed Feb 15 12:18:01 2023 -0500

    block: bio-integrity: Copy flags when bio_integrity_payload is cloned
    
    [ Upstream commit b6a4bdcda430e3ca43bbb9cb1d4d4d34ebe15c40 ]
    
    Make sure to copy the flags when a bio_integrity_payload is cloned.
    Otherwise per-I/O properties such as IP checksum flag will not be
    passed down to the HBA driver. Since the integrity buffer is owned by
    the original bio, the BIP_BLOCK_INTEGRITY flag needs to be masked off
    to avoid a double free in the completion path.
    
    Fixes: aae7df50190a ("block: Integrity checksum flag")
    Fixes: b1f01388574c ("block: Relocate bio integrity flags")
    Reported-by: Saurav Kashyap <skashyap@marvell.com>
    Tested-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Link: https://lore.kernel.org/r/20230215171801.21062-1-martin.petersen@oracle.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 895cb50196ab4bcd53959385aafec593bbd23755
Author: silviazhao <silviazhao-oc@zhaoxin.com>
Date:   Wed Feb 8 16:27:22 2023 +0800

    x86/perf/zhaoxin: Add stepping check for ZXC
    
    [ Upstream commit fd636b6a9bc6034f2e5bb869658898a2b472c037 ]
    
    Some of Nano series processors will lead GP when accessing
    PMC fixed counter. Meanwhile, their hardware support for PMC
    has not announced externally. So exclude Nano CPUs from ZXC
    by checking stepping information. This is an unambiguous way
    to differentiate between ZXC and Nano CPUs.
    
    Following are Nano and ZXC FMS information:
    Nano FMS: Family=6, Model=F, Stepping=[0-A][C-D]
    ZXC FMS:  Family=6, Model=F, Stepping=E-F OR
              Family=6, Model=0x19, Stepping=0-3
    
    Fixes: 3a4ac121c2ca ("x86/perf: Add hardware performance events support for Zhaoxin CPU.")
    
    Reported-by: Arjan <8vvbbqzo567a@nospam.xutrox.com>
    Reported-by: Kevin Brace <kevinbrace@gmx.com>
    Signed-off-by: silviazhao <silviazhao-oc@zhaoxin.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=212389
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80a1751730b302d8ab63a084b2fa52c820ad0273
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Mon Feb 6 22:33:54 2023 +0000

    sched/rt: pick_next_rt_entity(): check list_entry
    
    [ Upstream commit 7c4a5b89a0b5a57a64b601775b296abf77a9fe97 ]
    
    Commit 326587b84078 ("sched: fix goto retry in pick_next_task_rt()")
    removed any path which could make pick_next_rt_entity() return NULL.
    However, BUG_ON(!rt_se) in _pick_next_task_rt() (the only caller of
    pick_next_rt_entity()) still checks the error condition, which can
    never happen, since list_entry() never returns NULL.
    Remove the BUG_ON check, and instead emit a warning in the only
    possible error condition here: the queue being empty which should
    never happen.
    
    Fixes: 326587b84078 ("sched: fix goto retry in pick_next_task_rt()")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Phil Auld <pauld@redhat.com>
    Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Link: https://lore.kernel.org/r/20230128-list-entry-null-check-sched-v3-1-b1a71bd1ac6b@diag.uniroma1.it
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53dbbe36340d602017b435e67c3ce5f80ab9df98
Author: Dietmar Eggemann <dietmar.eggemann@arm.com>
Date:   Wed Mar 2 19:34:33 2022 +0100

    sched/deadline,rt: Remove unused parameter from pick_next_[rt|dl]_entity()
    
    [ Upstream commit 821aecd09e5ad2f8d4c3d8195333d272b392f7d3 ]
    
    The `struct rq *rq` parameter isn't used. Remove it.
    
    Signed-off-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Juri Lelli <juri.lelli@redhat.com>
    Link: https://lore.kernel.org/r/20220302183433.333029-7-dietmar.eggemann@arm.com
    Stable-dep-of: 7c4a5b89a0b5 ("sched/rt: pick_next_rt_entity(): check list_entry")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a50e28d433acf22258f9f34831057387f04ef074
Author: Qiheng Lin <linqiheng@huawei.com>
Date:   Fri Feb 10 01:02:53 2023 +0100

    s390/dasd: Fix potential memleak in dasd_eckd_init()
    
    [ Upstream commit 460e9bed82e49db1b823dcb4e421783854d86c40 ]
    
    `dasd_reserve_req` is allocated before `dasd_vol_info_req`, and it
    also needs to be freed before the error returns, just like the other
    cases in this function.
    
    Fixes: 9e12e54c7a8f ("s390/dasd: Handle out-of-space constraint")
    Signed-off-by: Qiheng Lin <linqiheng@huawei.com>
    Link: https://lore.kernel.org/r/20221208133809.16796-1-linqiheng@huawei.com
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Link: https://lore.kernel.org/r/20230210000253.1644903-3-sth@linux.ibm.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72aebdac390bf0dc04c0385d2db7ee522f4ffa3c
Author: Jan Höppner <hoeppner@linux.ibm.com>
Date:   Thu Oct 8 15:13:35 2020 +0200

    s390/dasd: Prepare for additional path event handling
    
    [ Upstream commit b72949328869dfd45f6452c2410647afd7db5f1a ]
    
    As more path events need to be handled for ECKD the current path
    verification infrastructure can be reused. Rename all path verifcation
    code to fit the more broadly based task of path event handling and put
    the path verification in a new separate function.
    
    Signed-off-by: Jan Höppner <hoeppner@linux.ibm.com>
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: 460e9bed82e4 ("s390/dasd: Fix potential memleak in dasd_eckd_init()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a33c33593b66d37d3eb4027a4f03645bde31262e
Author: Kemeng Shi <shikemeng@huaweicloud.com>
Date:   Wed Jan 18 17:37:26 2023 +0800

    blk-mq: correct stale comment of .get_budget
    
    [ Upstream commit 01542f651a9f58a9b176c3d3dc3eefbacee53b78 ]
    
    Commit 88022d7201e96 ("blk-mq: don't handle failure in .get_budget")
    remove BLK_STS_RESOURCE return value and we only check if we can get
    the budget from .get_budget() now.
    Correct stale comment that ".get_budget() returns BLK_STS_NO_RESOURCE"
    to ".get_budget() fails to get the budget".
    
    Fixes: 88022d7201e9 ("blk-mq: don't handle failure in .get_budget")
    Signed-off-by: Kemeng Shi <shikemeng@huaweicloud.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c58012d9656491392cdf60191492874c11ecc43
Author: Kemeng Shi <shikemeng@huaweicloud.com>
Date:   Wed Jan 18 17:37:14 2023 +0800

    blk-mq: remove stale comment for blk_mq_sched_mark_restart_hctx
    
    [ Upstream commit c31e76bcc379182fe67a82c618493b7b8868c672 ]
    
    Commit 97889f9ac24f8 ("blk-mq: remove synchronize_rcu() from
    blk_mq_del_queue_tag_set()") remove handle of TAG_SHARED in restart,
    then shared_hctx_restart counted for how many hardware queues are marked
    for restart is removed too.
    Remove the stale comment that we still count hardware queues need restart.
    
    Fixes: 97889f9ac24f ("blk-mq: remove synchronize_rcu() from blk_mq_del_queue_tag_set()")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Kemeng Shi <shikemeng@huaweicloud.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12bcc4ec54967c3169e702d1179c2b618039e4b5
Author: Kemeng Shi <shikemeng@huaweicloud.com>
Date:   Wed Jan 18 17:37:13 2023 +0800

    blk-mq: avoid sleep in blk_mq_alloc_request_hctx
    
    [ Upstream commit 6ee858a3d3270a68902d66bb47c151a83622535c ]
    
    Commit 1f5bd336b9150 ("blk-mq: add blk_mq_alloc_request_hctx") add
    blk_mq_alloc_request_hctx to send commands to a specific queue. If
    BLK_MQ_REQ_NOWAIT is not set in tag allocation, we may change to different
    hctx after sleep and get tag from unexpected hctx. So BLK_MQ_REQ_NOWAIT
    must be set in flags for blk_mq_alloc_request_hctx.
    After commit 600c3b0cea784 ("blk-mq: open code __blk_mq_alloc_request in
    blk_mq_alloc_request_hctx"), blk_mq_alloc_request_hctx return -EINVAL
    if both BLK_MQ_REQ_NOWAIT and BLK_MQ_REQ_RESERVED are not set instead of
    if BLK_MQ_REQ_NOWAIT is not set. So if BLK_MQ_REQ_NOWAIT is not set and
    BLK_MQ_REQ_RESERVED is set, blk_mq_alloc_request_hctx could alloc tag
    from unexpected hctx. I guess what we need here is that return -EINVAL
    if either BLK_MQ_REQ_NOWAIT or BLK_MQ_REQ_RESERVED is not set.
    
    Currently both BLK_MQ_REQ_NOWAIT and BLK_MQ_REQ_RESERVED will be set if
    specific hctx is needed in nvme_auth_submit, nvmf_connect_io_queue
    and nvmf_connect_admin_queue. Fix the potential BLK_MQ_REQ_NOWAIT missed
    case in future.
    
    Fixes: 600c3b0cea78 ("blk-mq: open code __blk_mq_alloc_request in blk_mq_alloc_request_hctx")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Kemeng Shi <shikemeng@huaweicloud.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7cf3864d781469cb8b323c6d8606890758afaee
Author: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
Date:   Mon Nov 28 12:20:27 2022 +0100

    arm64: dts: mediatek: mt7622: Add missing pwm-cells to pwm node
    
    [ Upstream commit 22925af785fa3470efdf566339616d801119d348 ]
    
    Specify #pwm-cells on pwm@11006000 to make it actually usable.
    
    Fixes: ae457b7679c4 ("arm64: dts: mt7622: add SoC and peripheral related device nodes")
    Signed-off-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221128112028.58021-2-angelogioacchino.delregno@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e874629c5fb77ac1a09190f0c2352791f5f8e844
Author: Peng Fan <peng.fan@nxp.com>
Date:   Fri Dec 23 11:04:33 2022 +0800

    ARM: dts: imx7s: correct iomuxc gpr mux controller cells
    
    [ Upstream commit 0e3e1946606a2919b1dda9967ab2e1c5af2fedd6 ]
    
    Per binding doc reg-mux.yaml, the #mux-control-cells should be 1
    
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Marco Felsch <m.felsch@pengutronix.de>
    Fixes: 94a905a79f2c ("ARM: dts: imx7s: add multiplexer controls")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbddc7c708704df61451e759bd3f530d68a86ee2
Author: Samuel Holland <samuel@sholland.org>
Date:   Sat Dec 31 16:58:54 2022 -0600

    ARM: dts: sun8i: nanopi-duo2: Fix regulator GPIO reference
    
    [ Upstream commit 2177d4ae971f79b4a9a3c411f2fb8ae6113d1430 ]
    
    The property named in the schema is 'enable-gpios', not 'enable-gpio'.
    This makes no difference at runtime, because the regulator is marked as
    always-on, but it breaks validation.
    
    Fixes: 4701fc6e5dd9 ("ARM: dts: sun8i: add FriendlyARM NanoPi Duo2")
    Reviewed-by: Andre Przywara <andre.przywara@arm.com>
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Link: https://lore.kernel.org/r/20221231225854.16320-2-samuel@sholland.org
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a451c1377aa89ab9b503b846cc1e6e434b2401d3
Author: Adam Ford <aford173@gmail.com>
Date:   Sat Jan 14 16:56:45 2023 -0600

    arm64: dts: renesas: beacon-renesom: Fix gpio expander reference
    
    [ Upstream commit d7f9492dfc03153ac56ab59066a196558748f575 ]
    
    The board used to originally introduce the Beacon Embedded RZ/G2[M/N/H]
    boards had a GPIO expander with address 20, but this was changed when
    the final board went to production.
    
    The production boards changed both the part itself and the address.
    With the incorrect address, the LCD cannot come up.  If the LCD fails,
    the rcar-du driver fails to come up, and that also breaks HDMI.
    
    Pre-release board were not shipped to the general public, so it should
    be safe to push this as a fix.  Anyone with a production board would
    have video fail due to this GPIO expander change.
    
    Fixes: a1d8a344f1ca ("arm64: dts: renesas: Introduce r8a774a1-beacon-rzg2m-kit")
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20230114225647.227972-1-aford173@gmail.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c37a37743a6bc52e79b758599552cdb18912d82
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:34 2023 +0100

    arm64: dts: amlogic: meson-gxbb-kii-pro: fix led node name
    
    [ Upstream commit afdef3b188c934f79ad4b0a7bd8c692742f9b5af ]
    
    Fixes:
    leds: status: {...} is not of type 'array'
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-13-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c39c3ed4a3b9d4f1667f7966a60b3ec6abdacf37
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:33 2023 +0100

    arm64: dts: amlogic: meson-gxl-s905d-phicomm-n1: fix led node name
    
    [ Upstream commit eee64d8fbbdaab72bbab3e462f3a7b742d20c8c2 ]
    
    Fixes:
    leds: status: {...} is not of type 'array'
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-12-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 269fd2fb043e01aaf1b59e730319397f56099edf
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:31 2023 +0100

    arm64: dts: amlogic: meson-gx-libretech-pc: fix update button name
    
    [ Upstream commit 6bb506ed36968207a8832f0143ebc127f0770eef ]
    
    Fixes:
     adc-keys: 'update-button' does not match any of the regexes: '^button-', 'pinctrl-[0-9]+'
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-10-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 373bb505ffe605086fa470790d806d661ac111fa
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:30 2023 +0100

    arm64: dts: amlogic: meson-gxl: add missing unit address to eth-phy-mux node name
    
    [ Upstream commit d19189f70ba596798ea49166d2d1ef36a8df5289 ]
    
    Fixes:
    bus@c8834000: eth-phy-mux: {...} should not be valid under {'type': 'object'}
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-9-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c30db46dd1d4a4f45600cc88fa92d1373855f2b
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:27 2023 +0100

    arm64: dts: amlogic: meson-gx: add missing unit address to rng node name
    
    [ Upstream commit 61ff70708b98a85516eccb3755084ac97b42cf48 ]
    
    Fixes:
    bus@c8834000: rng: {...} should not be valid under {'type': 'object'}
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-6-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 436060c1b6684815eb7219ce3af034feeedbe4da
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:26 2023 +0100

    arm64: dts: amlogic: meson-gxl-s905d-sml5442tw: drop invalid clock-names property
    
    [ Upstream commit e3bd275ccbacf5eb18eaa311cea39f8bf8655feb ]
    
    Fixes:
    bluetooth: 'clock-names' does not match any of the regexes: 'pinctrl-[0-9]+'
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-5-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a46320f2ae7372003b333f45019709334405e9f
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:24 2023 +0100

    arm64: dts: amlogic: meson-gx: add missing SCPI sensors compatible
    
    [ Upstream commit 2ff650051493d5bdb6dd09d4c2850bb37db6be31 ]
    
    Fixes:
    scpi: sensors:compatible: 'oneOf' conditional failed, one must be fixed:
            ['amlogic,meson-gxbb-scpi-sensors'] is too short
            'arm,scpi-sensors' was expected
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-3-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb5f2c56577920f28b4defa3731b06cecc09097b
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:23 2023 +0100

    arm64: dts: amlogic: meson-axg: fix SCPI clock dvfs node name
    
    [ Upstream commit 5b7069d72f03c92a0ab919725017394ebce03a81 ]
    
    Fixes:
    scpi: clocks: 'clock-controller' does not match any of the regexes: '^clocks-[0-9a-f]+$', 'pinctrl-[0-9]+'
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-2-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7163b258ae8ab4013bb6feaca3f3c000ff210ca
Author: Neil Armstrong <neil.armstrong@linaro.org>
Date:   Tue Jan 24 11:34:22 2023 +0100

    arm64: dts: amlogic: meson-gx: fix SCPI clock dvfs node name
    
    [ Upstream commit 127f79212b07c5d9a6657a87e3eafdd889335814 ]
    
    Fixes:
    scpi: clocks: 'clock-controller' does not match any of the regexes: '^clocks-[0-9a-f]+$', 'pinctrl-[0-9]+'
    
    Link: https://lore.kernel.org/r/20230124-b4-amlogic-bindings-fixups-v1-1-44351528957e@linaro.org
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14736f2eaec5e3fe812c50031400293fd11b3608
Author: Angus Chen <angus.chen@jaguarmicro.com>
Date:   Thu Jan 5 14:11:23 2023 +0800

    ARM: imx: Call ida_simple_remove() for ida_simple_get
    
    [ Upstream commit ebeb49f43c8952f12aa20f03f00d7009edc2d1c5 ]
    
    The function call ida_simple_get maybe fail,we should deal with it.
    And if ida_simple_get success ,it need to call ida_simple_remove also.
    BTW,devm_kasprintf can handle id is zero for consistency.
    
    Fixes: e76bdfd7403a ("ARM: imx: Added perf functionality to mmdc driver")
    Signed-off-by: Angus Chen <angus.chen@jaguarmicro.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23134f7a5429153a61d976aa727a92b05b045a11
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Fri Jan 20 16:53:54 2023 +0100

    ARM: dts: exynos: correct wr-active property in Exynos3250 Rinato
    
    [ Upstream commit d15d2a617499882971ddb773a583015bf36fa492 ]
    
    The property is wr-active:
    
      exynos3250-rinato.dtb: fimd@11c00000: i80-if-timings: 'wr-act' does not match any of the regexes: 'pinctrl-[0-9]+'
    
    Fixes: b59b3afb94d4 ("ARM: dts: add fimd device support for exynos3250-rinato")
    Link: https://lore.kernel.org/r/20230120155404.323386-2-krzysztof.kozlowski@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5325b8a1208c864b8bd2a94892da6ab73543e389
Author: Vaishnav Achath <vaishnav.a@ti.com>
Date:   Thu Jan 19 09:56:22 2023 +0530

    arm64: dts: ti: k3-j7200: Fix wakeup pinmux range
    
    [ Upstream commit 9ae21ac445e911e3541985c20052fc05d60f6879 ]
    
    The WKUP_PADCONFIG register region in J7200 has multiple non-addressable
    regions, split the existing wkup_pmx region as follows to avoid the
    non-addressable regions and include all valid WKUP_PADCONFIG registers.
    Also update references to old nodes with new ones.
    
    wkup_pmx0 -> 13 pins (WKUP_PADCONFIG 0 - 12)
    wkup_pmx1 -> 2 pins (WKUP_PADCONFIG 14 - 15)
    wkup_pmx2 -> 59 pins (WKUP_PADCONFIG 26 - 84)
    wkup_pmx3 -> 8 pins (WKUP_PADCONFIG 93 - 100)
    
    J7200 Datasheet (Table 6-106, Section 6.4 Pin Multiplexing) :
            https://www.ti.com/lit/ds/symlink/dra821u.pdf
    
    Fixes: d361ed88455f ("arm64: dts: ti: Add support for J7200 SoC")
    
    Signed-off-by: Vaishnav Achath <vaishnav.a@ti.com>
    Reviewed-by: Jayesh Choudhary <j-choudhary@ti.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Link: https://lore.kernel.org/r/20230119042622.22310-1-vaishnav.a@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4811cfd28622d1c2f29779ba1e1554d57b7dfb24
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 18 10:02:12 2023 +0100

    ARM: s3c: fix s3c64xx_set_timer_source prototype
    
    [ Upstream commit 5bf52f5e4d12b8109f348cab60cb7d51092c4270 ]
    
    The prototype does not match the definition, as gcc-13 points
    out:
    
    arch/arm/mach-s3c/s3c64xx.c:169:13: error: conflicting types for 's3c64xx_set_timer_source' due to enum/integer mismatch; have 'void(unsigned int,  unsigned int)' [-Werror=enum-int-mismatch]
      169 | void __init s3c64xx_set_timer_source(unsigned int event, unsigned int source)
          |             ^~~~~~~~~~~~~~~~~~~~~~~~
    In file included from arch/arm/mach-s3c/s3c64xx.c:50:
    arch/arm/mach-s3c/s3c64xx.h:62:20: note: previous declaration of 's3c64xx_set_timer_source' with type 'void(enum s3c64xx_timer_mode,  enum s3c64xx_timer_mode)'
       62 | extern void __init s3c64xx_set_timer_source(enum s3c64xx_timer_mode event,
          |                    ^~~~~~~~~~~~~~~~~~~~~~~~
    
    Fixes: 4280506ac9bb ("ARM: SAMSUNG: Move all platforms to new clocksource driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20230118090224.2162863-1-arnd@kernel.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66315db914aab58a55b3648baad645314f8993b5
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Jan 19 11:57:54 2023 +0200

    ARM: OMAP1: call platform_device_put() in error case in omap1_dm_timer_init()
    
    [ Upstream commit 0414a100d6ab32721efa70ab55524540fdfe0ede ]
    
    If platform_device_add() is not called or failed, it should call
    platform_device_put() in error case.
    
    Fixes: 97933d6ced60 ("ARM: OMAP1: dmtimer: conversion to platform devices")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Message-Id: <20220701094602.2365099-1-yangyingliang@huawei.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fa673af0af8f70f244d3c534b361898e2960ab3
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Thu Jan 19 05:30:31 2023 +0000

    arm64: dts: meson: remove CPU opps below 1GHz for G12A boards
    
    [ Upstream commit 3cbd431c2b34d84605d358c8c57654193fd661fb ]
    
    Amlogic G12A devices experience CPU stalls and random board wedges when
    the system idles and CPU cores clock down to lower opp points. Recent
    vendor kernels include a change to remove 100-250MHz and other distro
    sources also remove the 500/667MHz points. Unless all 100-667Mhz opps
    are removed or the CPU governor forced to performance stalls are still
    observed, so let's remove them to improve stability and uptime.
    
    Fixes: b190056fa9ee ("arm64: dts: meson-g12a: add cpus OPP table")
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Link: https://lore.kernel.org/r/20230119053031.21400-1-christianshewitt@gmail.com
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c56595b948ad42de867c9e64e3540b151e7c77dc
Author: Robert Marko <robimarko@gmail.com>
Date:   Fri Jan 13 17:44:49 2023 +0100

    arm64: dts: qcom: ipq8074: correct PCIe QMP PHY output clock names
    
    [ Upstream commit 0e8b90c0256cf9c9589e2cee517dedc987a34355 ]
    
    Current PCIe QMP PHY output name were changed in ("arm64: dts: qcom: Fix
    IPQ8074 PCIe PHY nodes") however it did not account for the fact that GCC
    driver is relying on the old names to match them as they are being used as
    the parent for the gcc_pcie0_pipe_clk and gcc_pcie1_pipe_clk.
    
    This broke parenting as GCC could not find the parent clock, so fix it by
    changing to the names that driver is expecting.
    
    Fixes: 942bcd33ed45 ("arm64: dts: qcom: Fix IPQ8074 PCIe PHY nodes")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230113164449.906002-9-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 192cb335d89b9bb6fdc96f1108916a9ac5235054
Author: Robert Marko <robimarko@gmail.com>
Date:   Fri Jan 13 17:44:48 2023 +0100

    arm64: dts: qcom: ipq8074: fix Gen3 PCIe node
    
    [ Upstream commit 3e83a9c41ab0244a45a4a2800b9adb8de0d15f82 ]
    
    IPQ8074 comes in 2 silicon versions:
    * v1 with 2x Gen2 PCIe ports and QMP PHY-s
    * v2 with 1x Gen3 and 1x Gen2 PCIe ports and QMP PHY-s
    
    v2 is the final and production version that is actually supported by the
    kernel, however it looks like PCIe related nodes were added for the v1 SoC.
    
    Finish the PCIe fixup by using the correct compatible, adding missing ATU
    register space, declaring max-link-speed, use correct ranges, add missing
    clocks and resets.
    
    Fixes: 33057e1672fe ("ARM: dts: ipq8074: Add pcie nodes")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230113164449.906002-8-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e839d027d71a8f20ba4218dd039c6d28431ccd27
Author: Robert Marko <robimarko@gmail.com>
Date:   Fri Jan 13 17:44:43 2023 +0100

    arm64: dts: qcom: ipq8074: correct Gen2 PCIe ranges
    
    [ Upstream commit 2055cb7dccea16bafa3adf9c5e3216949512c34a ]
    
    Current ranges property set in Gen2 PCIe node is incorrect, replace it
    with the downstream 5.4 QCA kernel value.
    
    Fixes: 33057e1672fe ("ARM: dts: ipq8074: Add pcie nodes")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230113164449.906002-3-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77970cf38954b790a51fcfe3bf85d487a944053f
Author: Robert Marko <robimarko@gmail.com>
Date:   Fri Jan 13 17:44:42 2023 +0100

    arm64: dts: qcom: ipq8074: fix Gen3 PCIe QMP PHY
    
    [ Upstream commit 7ba33591b45f9d547a317e42f1c2acd19c925eb6 ]
    
    IPQ8074 comes in 2 silicon versions:
    * v1 with 2x Gen2 PCIe ports and QMP PHY-s
    * v2 with 1x Gen3 and 1x Gen2 PCIe ports and QMP PHY-s
    
    v2 is the final and production version that is actually supported by the
    kernel, however it looks like PCIe related nodes were added for the v1 SoC.
    
    Now that we have Gen3 QMP PHY support, we can start fixing the PCIe support
    by fixing the Gen3 QMP PHY node first.
    
    Change the compatible to the Gen3 QMP PHY, correct the register space start
    and size, add the missing misc PCS register space.
    
    Fixes: 33057e1672fe ("ARM: dts: ipq8074: Add pcie nodes")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230113164449.906002-2-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b5b1652e330f463f90e7a06846a750c3bc08633
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Thu Sep 15 16:34:30 2022 +0200

    arm64: dts: qcom: ipq8074: fix PCIe PHY serdes size
    
    [ Upstream commit ed22cc93abae68f9d3fc4957c20a1d902cf28882 ]
    
    The size of the PCIe PHY serdes register region is 0x1c4 and the
    corresponding 'reg' property should specifically not include the
    adjacent regions that are defined in the child node (e.g. tx and rx).
    
    Fixes: 33057e1672fe ("ARM: dts: ipq8074: Add pcie nodes")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220915143431.19842-1-johan+linaro@kernel.org
    Stable-dep-of: 7ba33591b45f ("arm64: dts: qcom: ipq8074: fix Gen3 PCIe QMP PHY")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f1cb871f948f616af395c18f34ae1479806d1cd
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Wed Sep 29 11:42:51 2021 +0800

    arm64: dts: qcom: Fix IPQ8074 PCIe PHY nodes
    
    [ Upstream commit 942bcd33ed455ad40b71a59901bd926bbf4a500e ]
    
    IPQ8074 PCIe PHY nodes are broken in the many ways:
    
    - '#address-cells', '#size-cells' and 'ranges' are missing.
    - Child phy/lane node is missing, and the child properties like
      '#phy-cells' and 'clocks' are mistakenly put into parent node.
    - The clocks properties for parent node are missing.
    
    Fix them to get the nodes comply with the bindings schema.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210929034253.24570-9-shawn.guo@linaro.org
    Stable-dep-of: 7ba33591b45f ("arm64: dts: qcom: ipq8074: fix Gen3 PCIe QMP PHY")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ee2ca51e35715fafd4ad27dc2eb2129055efdae
Author: Robert Marko <robimarko@gmail.com>
Date:   Sun Jan 8 14:04:40 2023 +0100

    arm64: dts: qcom: ipq8074: correct USB3 QMP PHY-s clock output names
    
    [ Upstream commit 877cff3568c0f54511d77918ae16b2d6e9a0dfce ]
    
    It seems that clock-output-names for the USB3 QMP PHY-s where set without
    actually checking what is the GCC clock driver expecting, so clock core
    could never actually find the parents for usb0_pipe_clk_src and
    usb1_pipe_clk_src clocks in the GCC driver.
    
    So, correct the names to be what the driver expects so that parenting
    works.
    
    Before:
    gcc_usb0_pipe_clk_src                0        0        0   125000000          0     0  50000         Y
    gcc_usb1_pipe_clk_src                0        0        0   125000000          0     0  50000         Y
    
    After:
     usb3phy_0_cc_pipe_clk                1        1        0   125000000          0     0  50000         Y
        usb0_pipe_clk_src                 1        1        0   125000000          0     0  50000         Y
           gcc_usb0_pipe_clk              1        1        0   125000000          0     0  50000         Y
     usb3phy_1_cc_pipe_clk                1        1        0   125000000          0     0  50000         Y
        usb1_pipe_clk_src                 1        1        0   125000000          0     0  50000         Y
           gcc_usb1_pipe_clk              1        1        0   125000000          0     0  50000         Y
    
    Fixes: 5e09bc51d07b ("arm64: dts: ipq8074: enable USB support")
    Signed-off-by: Robert Marko <robimarko@gmail.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20230108130440.670181-2-robimarko@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5633e86cce6a653d69919a2a8827d2911d16fa09
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Wed Jan 11 22:13:50 2023 +0100

    arm64: dts: meson-gx: Fix the SCPI DVFS node name and unit address
    
    [ Upstream commit f189c869ad92787ddd753558bcbae89d75825bb6 ]
    
    Node names should be generic and use hyphens instead of underscores to
    not cause warnings. Also nodes without a reg property should not have a
    unit-address. Change the scpi_dvfs node to use clock-controller as node
    name without a unit address (since it does not have a reg property).
    
    Fixes: 70db166a2baa ("ARM64: dts: meson-gxbb: Add SCPI with cpufreq & sensors Nodes")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://lore.kernel.org/r/20230111211350.1461860-7-martin.blumenstingl@googlemail.com
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd55aa16bf34231e128d1f1540a29bf27d6df7e6
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Wed Jan 11 22:13:49 2023 +0100

    arm64: dts: meson-g12a: Fix internal Ethernet PHY unit name
    
    [ Upstream commit e7303651bbc76c848007f1cfac1fbeaa65f600d1 ]
    
    Documentation/devicetree/bindings/net/ethernet-phy.yaml defines that the
    node name for Ethernet PHYs should match the following pattern:
      ^ethernet-phy(@[a-f0-9]+)?$
    
    Replace the underscore with a hyphen to adhere to this binding.
    
    Fixes: 280c17df8fbf ("arm64: dts: meson: g12a: add mdio multiplexer")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://lore.kernel.org/r/20230111211350.1461860-6-martin.blumenstingl@googlemail.com
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8303a34fce2ae22381d4a2dae0806bc75b707693
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Wed Jan 11 22:13:48 2023 +0100

    arm64: dts: meson-gx: Fix Ethernet MAC address unit name
    
    [ Upstream commit 8ed5310356bfa47cc6bb4221ae6b21258c52e3d1 ]
    
    Unit names should use hyphens instead of underscores to not cause
    warnings.
    
    Fixes: bfe59f92d306 ("ARM64: dts: amlogic: gxbb: Enable NVMEM")
    Suggested-by: Vyacheslav Bocharov <adeep@lexina.in>
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://lore.kernel.org/r/20230111211350.1461860-5-martin.blumenstingl@googlemail.com
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2df155a114475359f3383c4547bb67a0b83147c4
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Tue Dec 13 11:19:17 2022 +0100

    arm64: dts: qcom: sc7180: correct SPMI bus address cells
    
    [ Upstream commit 1f75745537222172f84783d369bbd1fb2d4b6414 ]
    
    The SPMI bus uses two address cells and zero size cells (second reg
    entry - SPMI_USID - is not the size):
    
      spmi@c440000: #address-cells:0:0: 2 was expected
    
    Fixes: 0f9dc5f09fbd ("arm64: dts: qcom: sc7180: Add SPMI PMIC arbiter device")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221213101921.47924-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64b69cb420c5b6a185e72fb6e685d3736734f763
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu Dec 22 16:13:16 2022 +0100

    arm64: dts: qcom: sdm845-db845c: fix audio codec interrupt pin name
    
    [ Upstream commit 740862bb5f59b93efb390a417995f88a64bdc323 ]
    
    The pin config entry should have a string, not number, for the GPIO used
    as WCD9340 audio codec interrupt.
    
    Fixes: 89a32a4e769c ("arm64: dts: qcom: db845c: add analog audio support")
    Reported-by: Doug Anderson <dianders@chromium.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221222151319.122398-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 717aa39846524ce1790f1130c4a0fc560fcecc89
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Thu Dec 1 16:42:26 2022 +0800

    arm64: dts: mediatek: mt8183: Fix systimer 13 MHz clock description
    
    [ Upstream commit ce8a06b5bac75ccce99c0cf91b96b767d64f28a7 ]
    
    The systimer block derives its 13 MHz clock by dividing the main 26 MHz
    oscillator clock by 2 internally, not through the TOPCKGEN clock
    controller.
    
    On the MT8183 this divider is set either by power-on-reset or by the
    bootloader. The bootloader may then make the divider unconfigurable to,
    but can be read out by, the operating system.
    
    Making the systimer block take the 26 MHz clock directly requires
    changing the implementations. As an ABI compatible fix, change the
    input clock of the systimer block a fixed factor divide-by-2 clock
    that takes the 26 MHz oscillator as its input.
    
    Fixes: 5bc8e2875ffb ("arm64: dts: mt8183: add systimer0 device node")
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20221201084229.3464449-2-wenst@chromium.org
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 227f8c1c5c4b3d131b66e57e58d38054f441b915
Author: Qiheng Lin <linqiheng@huawei.com>
Date:   Tue Nov 29 22:05:44 2022 +0800

    ARM: zynq: Fix refcount leak in zynq_early_slcr_init
    
    [ Upstream commit 9eedb910a3be0005b88c696a8552c0d4c9937cd4 ]
    
    of_find_compatible_node() returns a node pointer with refcount incremented,
    we should use of_node_put() on error path.
    Add missing of_node_put() to avoid refcount leak.
    
    Fixes: 3329659df030 ("ARM: zynq: Simplify SLCR initialization")
    Signed-off-by: Qiheng Lin <linqiheng@huawei.com>
    Link: https://lore.kernel.org/r/20221129140544.41293-1-linqiheng@huawei.com
    Signed-off-by: Michal Simek <michal.simek@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 644688a92162781d887a7d858617f056fc5b2946
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Mon Dec 26 06:21:51 2022 +0200

    arm64: dts: qcom: qcs404: use symbol names for PCIe resets
    
    [ Upstream commit 41a37d157a613444c97e8f71a5fb2a21116b70d7 ]
    
    The commit e5bbbff5b7d7 ("clk: gcc-qcs404: Add PCIe resets") added names
    for PCIe resets, but it did not change the existing qcs404.dtsi to use
    these names. Do it now and use symbol names to make it easier to check
    and modify the dtsi in future.
    
    Fixes: e5bbbff5b7d7 ("clk: gcc-qcs404: Add PCIe resets")
    Reviewed-by: Konrad Dybcio <konrad.dybcio@linaro.org>
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20221226042154.2666748-14-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4862c41d5f3bee1ec64c979c82bd8cfe96b78f7d
Author: Chen Hui <judy.chenhui@huawei.com>
Date:   Tue Nov 8 22:19:17 2022 +0800

    ARM: OMAP2+: Fix memory leak in realtime_counter_init()
    
    [ Upstream commit ed8167cbf65c2b6ff6faeb0f96ded4d6d581e1ac ]
    
    The "sys_clk" resource is malloced by clk_get(),
    it is not released when the function return.
    
    Fixes: fa6d79d27614 ("ARM: OMAP: Add initialisation for the real-time counter.")
    Signed-off-by: Chen Hui <judy.chenhui@huawei.com>
    Message-Id: <20221108141917.46796-1-judy.chenhui@huawei.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1bb97947cac54822c92816dcb483544765c10ca
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Wed Aug 10 13:43:18 2022 +0200

    powerpc/mm: Rearrange if-else block to avoid clang warning
    
    commit d78c8e32890ef7eca79ffd67c96022c7f9d8cce4 upstream.
    
    Clang warns:
    
      arch/powerpc/mm/book3s64/radix_tlb.c:1191:23: error: variable 'hstart' is uninitialized when used here
        __tlbiel_va_range(hstart, hend, pid,
                          ^~~~~~
      arch/powerpc/mm/book3s64/radix_tlb.c:1191:31: error: variable 'hend' is uninitialized when used here
        __tlbiel_va_range(hstart, hend, pid,
                                  ^~~~
    
    Rework the 'if (IS_ENABLE(CONFIG_TRANSPARENT_HUGEPAGE))' so hstart/hend
    is always initialized to silence the warnings. That will also simplify
    the 'else' path. Clang is getting confused with these warnings, but the
    warnings is a false-positive.
    
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Suggested-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20220810114318.3220630-1-anders.roxell@linaro.org
    Signed-off-by: Daniel Díaz <daniel.diaz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21a2eec4a440060a6eb294dc890eaf553101ba09
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sun Feb 12 19:00:03 2023 +0000

    HID: asus: use spinlock to safely schedule workers
    
    commit 4ab3a086d10eeec1424f2e8a968827a6336203df upstream.
    
    Use spinlocks to deal with workers introducing a wrapper
    asus_schedule_work(), and several spinlock checks.
    Otherwise, asus_kbd_backlight_set() may schedule led->work after the
    structure has been freed, causing a use-after-free.
    
    Fixes: af22a610bc38 ("HID: asus: support backlight on USB keyboards")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Link: https://lore.kernel.org/r/20230125-hid-unregister-leds-v4-5-7860c5763c38@diag.uniroma1.it
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a63a3334acad9821b21e2dabcf67d82cdcbc44e
Author: Pietro Borrello <borrello@diag.uniroma1.it>
Date:   Sun Feb 12 19:00:02 2023 +0000

    HID: asus: use spinlock to protect concurrent accesses
    
    commit 315c537068a13f0b5681d33dd045a912f4bece6f upstream.
    
    asus driver has a worker that may access data concurrently.
    Proct the accesses using a spinlock.
    
    Fixes: af22a610bc38 ("HID: asus: support backlight on USB keyboards")
    Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
    Link: https://lore.kernel.org/r/20230125-hid-unregister-leds-v4-4-7860c5763c38@diag.uniroma1.it
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb8382c3714540e404fa62bb9440f5387f8dd8f0
Author: Luke D. Jones <luke@ljones.dev>
Date:   Mon Jul 5 10:26:59 2021 +1200

    HID: asus: Remove check for same LED brightness on set
    
    commit 3fdcf7cdfc229346d028242e73562704ad644dd0 upstream.
    
    Remove the early return on LED brightness set so that any controller
    application, daemon, or desktop may set the same brightness at any stage.
    
    This is required because many ASUS ROG keyboards will default to max
    brightness on laptop resume if the LEDs were set to off before sleep.
    
    Signed-off-by: Luke D Jones <luke@ljones.dev>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Stefan Ghinea <stefan.ghinea@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
