commit 17aac9b7af2bc5f7b4426603940e92ae8aa73d5d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 12 09:53:28 2022 +0200

    Linux 5.15.73
    
    Link: https://lore.kernel.org/r/20221010070331.211113813@linuxfoundation.org
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20221010191226.167997210@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Allen Pais  <apais@microsoft.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Kelsey Steele <kelseysteele@linux.microsoft.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7b16f51753a845b08e977184fb0b76b145ae0ba
Author: Sasha Levin <sashal@kernel.org>
Date:   Tue Oct 11 08:58:00 2022 -0400

    Revert "clk: ti: Stop using legacy clkctrl names for omap4 and 5"
    
    This reverts commit 67c830a6de835a36b4e19fe4d968dbaf8dc4e9c6.
    
    Which was upstream commit 255584b138343d4a28c6d25bd82d04b09460d672.
    
    Reported as causing boot failures.
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8b1b64a070eaee77e360d2bfe18d85b5b4e2c39
Author: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Date:   Thu May 19 09:33:28 2022 +0200

    rpmsg: qcom: glink: replace strncpy() with strscpy_pad()
    
    commit 766279a8f85df32345dbda03b102ca1ee3d5ddea upstream.
    
    The use of strncpy() is considered deprecated for NUL-terminated
    strings[1]. Replace strncpy() with strscpy_pad(), to keep existing
    pad-behavior of strncpy, similarly to commit 08de420a8014 ("rpmsg:
    glink: Replace strncpy() with strscpy_pad()").  This fixes W=1 warning:
    
      In function ‘qcom_glink_rx_close’,
        inlined from ‘qcom_glink_work’ at ../drivers/rpmsg/qcom_glink_native.c:1638:4:
      drivers/rpmsg/qcom_glink_native.c:1549:17: warning: ‘strncpy’ specified bound 32 equals destination size [-Wstringop-truncation]
       1549 |                 strncpy(chinfo.name, channel->name, sizeof(chinfo.name));
    
    [1] https://www.kernel.org/doc/html/latest/process/deprecated.html#strncpy-on-nul-terminated-strings
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20220519073330.7187-1-krzysztof.kozlowski@linaro.org
    Signed-off-by: Andrew Chernyakov <acherniakov@astralinux.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d58eb80b723d5440f497a9ee3bce955c7bbb547d
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Sep 13 16:53:12 2022 +0200

    USB: serial: ftdi_sio: fix 300 bps rate for SIO
    
    commit 7bd7ad3c310cd6766f170927381eea0aa6f46c69 upstream.
    
    The 300 bps rate of SIO devices has been mapped to 9600 bps since
    2003... Let's fix the regression.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ff80339cdc3143b89eee2ad91ae44b4dbf65ad1
Author: Tadeusz Struk <tadeusz.struk@linaro.org>
Date:   Mon Sep 19 14:59:57 2022 -0700

    usb: mon: make mmapped memory read only
    
    commit a659daf63d16aa883be42f3f34ff84235c302198 upstream.
    
    Syzbot found an issue in usbmon module, where the user space client can
    corrupt the monitor's internal memory, causing the usbmon module to
    crash the kernel with segfault, UAF, etc.
    
    The reproducer mmaps the /dev/usbmon memory to user space, and
    overwrites it with arbitrary data, which causes all kinds of issues.
    
    Return an -EPERM error from mon_bin_mmap() if the flag VM_WRTIE is set.
    Also clear VM_MAYWRITE to make it impossible to change it to writable
    later.
    
    Cc: "Dmitry Vyukov" <dvyukov@google.com>
    Cc: stable <stable@kernel.org>
    Fixes: 6f23ee1fefdc ("USB: add binary API to usbmon")
    Suggested-by: PaX Team <pageexec@freemail.hu>   # for the VM_MAYRITE portion
    Link: https://syzkaller.appspot.com/bug?id=2eb1f35d6525fa4a74d75b4244971e5b1411c95a
    Reported-by: syzbot+23f57c5ae902429285d7@syzkaller.appspotmail.com
    Signed-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Link: https://lore.kernel.org/r/20220919215957.205681-1-tadeusz.struk@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 278fefd29eeafb7b032fc30b2b3705deb6aae838
Author: Vlad Buslov <vladbu@nvidia.com>
Date:   Thu Aug 11 13:46:36 2022 +0200

    net/mlx5: Disable irq when locking lag_lock
    
    [ Upstream commit 8e93f29422ffe968d7161f91acdf0d47f5323727 ]
    
    The lag_lock is taken from both process and softirq contexts which results
    lockdep warning[0] about potential deadlock. However, just disabling
    softirqs by using *_bh spinlock API is not enough since it will cause
    warning in some contexts where the lock is obtained with hard irqs
    disabled. To fix the issue save current irq state, disable them before
    obtaining the lock an re-enable irqs from saved state after releasing it.
    
    [0]:
    
    [Sun Aug  7 13:12:29 2022] ================================
    [Sun Aug  7 13:12:29 2022] WARNING: inconsistent lock state
    [Sun Aug  7 13:12:29 2022] 5.19.0_for_upstream_debug_2022_08_04_16_06 #1 Not tainted
    [Sun Aug  7 13:12:29 2022] --------------------------------
    [Sun Aug  7 13:12:29 2022] inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
    [Sun Aug  7 13:12:29 2022] swapper/0/0 [HC0[0]:SC1[1]:HE1:SE0] takes:
    [Sun Aug  7 13:12:29 2022] ffffffffa06dc0d8 (lag_lock){+.?.}-{2:2}, at: mlx5_lag_is_shared_fdb+0x1f/0x120 [mlx5_core]
    [Sun Aug  7 13:12:29 2022] {SOFTIRQ-ON-W} state was registered at:
    [Sun Aug  7 13:12:29 2022]   lock_acquire+0x1c1/0x550
    [Sun Aug  7 13:12:29 2022]   _raw_spin_lock+0x2c/0x40
    [Sun Aug  7 13:12:29 2022]   mlx5_lag_add_netdev+0x13b/0x480 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]   mlx5e_nic_enable+0x114/0x470 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]   mlx5e_attach_netdev+0x30e/0x6a0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]   mlx5e_resume+0x105/0x160 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]   mlx5e_probe+0xac3/0x14f0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]   auxiliary_bus_probe+0x9d/0xe0
    [Sun Aug  7 13:12:29 2022]   really_probe+0x1e0/0xaa0
    [Sun Aug  7 13:12:29 2022]   __driver_probe_device+0x219/0x480
    [Sun Aug  7 13:12:29 2022]   driver_probe_device+0x49/0x130
    [Sun Aug  7 13:12:29 2022]   __driver_attach+0x1e4/0x4d0
    [Sun Aug  7 13:12:29 2022]   bus_for_each_dev+0x11e/0x1a0
    [Sun Aug  7 13:12:29 2022]   bus_add_driver+0x3f4/0x5a0
    [Sun Aug  7 13:12:29 2022]   driver_register+0x20f/0x390
    [Sun Aug  7 13:12:29 2022]   __auxiliary_driver_register+0x14e/0x260
    [Sun Aug  7 13:12:29 2022]   mlx5e_init+0x38/0x90 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]   vhost_iotlb_itree_augment_rotate+0xcb/0x180 [vhost_iotlb]
    [Sun Aug  7 13:12:29 2022]   do_one_initcall+0xc4/0x400
    [Sun Aug  7 13:12:29 2022]   do_init_module+0x18a/0x620
    [Sun Aug  7 13:12:29 2022]   load_module+0x563a/0x7040
    [Sun Aug  7 13:12:29 2022]   __do_sys_finit_module+0x122/0x1d0
    [Sun Aug  7 13:12:29 2022]   do_syscall_64+0x3d/0x90
    [Sun Aug  7 13:12:29 2022]   entry_SYSCALL_64_after_hwframe+0x46/0xb0
    [Sun Aug  7 13:12:29 2022] irq event stamp: 3596508
    [Sun Aug  7 13:12:29 2022] hardirqs last  enabled at (3596508): [<ffffffff813687c2>] __local_bh_enable_ip+0xa2/0x100
    [Sun Aug  7 13:12:29 2022] hardirqs last disabled at (3596507): [<ffffffff813687da>] __local_bh_enable_ip+0xba/0x100
    [Sun Aug  7 13:12:29 2022] softirqs last  enabled at (3596488): [<ffffffff81368a2a>] irq_exit_rcu+0x11a/0x170
    [Sun Aug  7 13:12:29 2022] softirqs last disabled at (3596495): [<ffffffff81368a2a>] irq_exit_rcu+0x11a/0x170
    [Sun Aug  7 13:12:29 2022]
                               other info that might help us debug this:
    [Sun Aug  7 13:12:29 2022]  Possible unsafe locking scenario:
    
    [Sun Aug  7 13:12:29 2022]        CPU0
    [Sun Aug  7 13:12:29 2022]        ----
    [Sun Aug  7 13:12:29 2022]   lock(lag_lock);
    [Sun Aug  7 13:12:29 2022]   <Interrupt>
    [Sun Aug  7 13:12:29 2022]     lock(lag_lock);
    [Sun Aug  7 13:12:29 2022]
                                *** DEADLOCK ***
    
    [Sun Aug  7 13:12:29 2022] 4 locks held by swapper/0/0:
    [Sun Aug  7 13:12:29 2022]  #0: ffffffff84643260 (rcu_read_lock){....}-{1:2}, at: mlx5e_napi_poll+0x43/0x20a0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  #1: ffffffff84643260 (rcu_read_lock){....}-{1:2}, at: netif_receive_skb_list_internal+0x2d7/0xd60
    [Sun Aug  7 13:12:29 2022]  #2: ffff888144a18b58 (&br->hash_lock){+.-.}-{2:2}, at: br_fdb_update+0x301/0x570
    [Sun Aug  7 13:12:29 2022]  #3: ffffffff84643260 (rcu_read_lock){....}-{1:2}, at: atomic_notifier_call_chain+0x5/0x1d0
    [Sun Aug  7 13:12:29 2022]
                               stack backtrace:
    [Sun Aug  7 13:12:29 2022] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.19.0_for_upstream_debug_2022_08_04_16_06 #1
    [Sun Aug  7 13:12:29 2022] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
    [Sun Aug  7 13:12:29 2022] Call Trace:
    [Sun Aug  7 13:12:29 2022]  <IRQ>
    [Sun Aug  7 13:12:29 2022]  dump_stack_lvl+0x57/0x7d
    [Sun Aug  7 13:12:29 2022]  mark_lock.part.0.cold+0x5f/0x92
    [Sun Aug  7 13:12:29 2022]  ? lock_chain_count+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  ? unwind_next_frame+0x1c4/0x1b50
    [Sun Aug  7 13:12:29 2022]  ? secondary_startup_64_no_verify+0xcd/0xdb
    [Sun Aug  7 13:12:29 2022]  ? mlx5e_napi_poll+0x4e9/0x20a0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? mlx5e_napi_poll+0x4e9/0x20a0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? stack_access_ok+0x1d0/0x1d0
    [Sun Aug  7 13:12:29 2022]  ? start_kernel+0x3a7/0x3c5
    [Sun Aug  7 13:12:29 2022]  __lock_acquire+0x1260/0x6720
    [Sun Aug  7 13:12:29 2022]  ? lock_chain_count+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  ? lock_chain_count+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  ? register_lock_class+0x1880/0x1880
    [Sun Aug  7 13:12:29 2022]  ? mark_lock.part.0+0xed/0x3060
    [Sun Aug  7 13:12:29 2022]  ? stack_trace_save+0x91/0xc0
    [Sun Aug  7 13:12:29 2022]  lock_acquire+0x1c1/0x550
    [Sun Aug  7 13:12:29 2022]  ? mlx5_lag_is_shared_fdb+0x1f/0x120 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? lockdep_hardirqs_on_prepare+0x400/0x400
    [Sun Aug  7 13:12:29 2022]  ? __lock_acquire+0xd6f/0x6720
    [Sun Aug  7 13:12:29 2022]  _raw_spin_lock+0x2c/0x40
    [Sun Aug  7 13:12:29 2022]  ? mlx5_lag_is_shared_fdb+0x1f/0x120 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  mlx5_lag_is_shared_fdb+0x1f/0x120 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  mlx5_esw_bridge_rep_vport_num_vhca_id_get+0x1a0/0x600 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? mlx5_esw_bridge_update_work+0x90/0x90 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? lock_acquire+0x1c1/0x550
    [Sun Aug  7 13:12:29 2022]  mlx5_esw_bridge_switchdev_event+0x185/0x8f0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? mlx5_esw_bridge_port_obj_attr_set+0x3e0/0x3e0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? check_chain_key+0x24a/0x580
    [Sun Aug  7 13:12:29 2022]  atomic_notifier_call_chain+0xd7/0x1d0
    [Sun Aug  7 13:12:29 2022]  br_switchdev_fdb_notify+0xea/0x100
    [Sun Aug  7 13:12:29 2022]  ? br_switchdev_set_port_flag+0x310/0x310
    [Sun Aug  7 13:12:29 2022]  fdb_notify+0x11b/0x150
    [Sun Aug  7 13:12:29 2022]  br_fdb_update+0x34c/0x570
    [Sun Aug  7 13:12:29 2022]  ? lock_chain_count+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  ? br_fdb_add_local+0x50/0x50
    [Sun Aug  7 13:12:29 2022]  ? br_allowed_ingress+0x5f/0x1070
    [Sun Aug  7 13:12:29 2022]  ? check_chain_key+0x24a/0x580
    [Sun Aug  7 13:12:29 2022]  br_handle_frame_finish+0x786/0x18e0
    [Sun Aug  7 13:12:29 2022]  ? check_chain_key+0x24a/0x580
    [Sun Aug  7 13:12:29 2022]  ? br_handle_local_finish+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  ? __lock_acquire+0xd6f/0x6720
    [Sun Aug  7 13:12:29 2022]  ? sctp_inet_bind_verify+0x4d/0x190
    [Sun Aug  7 13:12:29 2022]  ? xlog_unpack_data+0x2e0/0x310
    [Sun Aug  7 13:12:29 2022]  ? br_handle_local_finish+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  br_nf_hook_thresh+0x227/0x380 [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  ? setup_pre_routing+0x460/0x460 [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  ? br_handle_local_finish+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  ? br_nf_pre_routing_ipv6+0x48b/0x69c [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  br_nf_pre_routing_finish_ipv6+0x5c2/0xbf0 [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  ? br_handle_local_finish+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  br_nf_pre_routing_ipv6+0x4c6/0x69c [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  ? br_validate_ipv6+0x9e0/0x9e0 [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  ? br_nf_forward_arp+0xb70/0xb70 [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  ? br_nf_pre_routing+0xacf/0x1160 [br_netfilter]
    [Sun Aug  7 13:12:29 2022]  br_handle_frame+0x8a9/0x1270
    [Sun Aug  7 13:12:29 2022]  ? br_handle_frame_finish+0x18e0/0x18e0
    [Sun Aug  7 13:12:29 2022]  ? register_lock_class+0x1880/0x1880
    [Sun Aug  7 13:12:29 2022]  ? br_handle_local_finish+0x20/0x20
    [Sun Aug  7 13:12:29 2022]  ? bond_handle_frame+0xf9/0xac0 [bonding]
    [Sun Aug  7 13:12:29 2022]  ? br_handle_frame_finish+0x18e0/0x18e0
    [Sun Aug  7 13:12:29 2022]  __netif_receive_skb_core+0x7c0/0x2c70
    [Sun Aug  7 13:12:29 2022]  ? check_chain_key+0x24a/0x580
    [Sun Aug  7 13:12:29 2022]  ? generic_xdp_tx+0x5b0/0x5b0
    [Sun Aug  7 13:12:29 2022]  ? __lock_acquire+0xd6f/0x6720
    [Sun Aug  7 13:12:29 2022]  ? register_lock_class+0x1880/0x1880
    [Sun Aug  7 13:12:29 2022]  ? check_chain_key+0x24a/0x580
    [Sun Aug  7 13:12:29 2022]  __netif_receive_skb_list_core+0x2d7/0x8a0
    [Sun Aug  7 13:12:29 2022]  ? lock_acquire+0x1c1/0x550
    [Sun Aug  7 13:12:29 2022]  ? process_backlog+0x960/0x960
    [Sun Aug  7 13:12:29 2022]  ? lockdep_hardirqs_on_prepare+0x129/0x400
    [Sun Aug  7 13:12:29 2022]  ? kvm_clock_get_cycles+0x14/0x20
    [Sun Aug  7 13:12:29 2022]  netif_receive_skb_list_internal+0x5f4/0xd60
    [Sun Aug  7 13:12:29 2022]  ? do_xdp_generic+0x150/0x150
    [Sun Aug  7 13:12:29 2022]  ? mlx5e_poll_rx_cq+0xf6b/0x2960 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? mlx5e_poll_ico_cq+0x3d/0x1590 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  napi_complete_done+0x188/0x710
    [Sun Aug  7 13:12:29 2022]  mlx5e_napi_poll+0x4e9/0x20a0 [mlx5_core]
    [Sun Aug  7 13:12:29 2022]  ? __queue_work+0x53c/0xeb0
    [Sun Aug  7 13:12:29 2022]  __napi_poll+0x9f/0x540
    [Sun Aug  7 13:12:29 2022]  net_rx_action+0x420/0xb70
    [Sun Aug  7 13:12:29 2022]  ? napi_threaded_poll+0x470/0x470
    [Sun Aug  7 13:12:29 2022]  ? __common_interrupt+0x79/0x1a0
    [Sun Aug  7 13:12:29 2022]  __do_softirq+0x271/0x92c
    [Sun Aug  7 13:12:29 2022]  irq_exit_rcu+0x11a/0x170
    [Sun Aug  7 13:12:29 2022]  common_interrupt+0x7d/0xa0
    [Sun Aug  7 13:12:29 2022]  </IRQ>
    [Sun Aug  7 13:12:29 2022]  <TASK>
    [Sun Aug  7 13:12:29 2022]  asm_common_interrupt+0x22/0x40
    [Sun Aug  7 13:12:29 2022] RIP: 0010:default_idle+0x42/0x60
    [Sun Aug  7 13:12:29 2022] Code: c1 83 e0 07 48 c1 e9 03 83 c0 03 0f b6 14 11 38 d0 7c 04 84 d2 75 14 8b 05 6b f1 22 02 85 c0 7e 07 0f 00 2d 80 3b 4a 00 fb f4 <c3> 48 c7 c7 e0 07 7e 85 e8 21 bd 40 fe eb de 66 66 2e 0f 1f 84 00
    [Sun Aug  7 13:12:29 2022] RSP: 0018:ffffffff84407e18 EFLAGS: 00000242
    [Sun Aug  7 13:12:29 2022] RAX: 0000000000000001 RBX: ffffffff84ec4a68 RCX: 1ffffffff0afc0fc
    [Sun Aug  7 13:12:29 2022] RDX: 0000000000000004 RSI: 0000000000000000 RDI: ffffffff835b1fac
    [Sun Aug  7 13:12:29 2022] RBP: 0000000000000000 R08: 0000000000000001 R09: ffff8884d2c44ac3
    [Sun Aug  7 13:12:29 2022] R10: ffffed109a588958 R11: 00000000ffffffff R12: 0000000000000000
    [Sun Aug  7 13:12:29 2022] R13: ffffffff84efac20 R14: 0000000000000000 R15: dffffc0000000000
    [Sun Aug  7 13:12:29 2022]  ? default_idle_call+0xcc/0x460
    [Sun Aug  7 13:12:29 2022]  default_idle_call+0xec/0x460
    [Sun Aug  7 13:12:29 2022]  do_idle+0x394/0x450
    [Sun Aug  7 13:12:29 2022]  ? arch_cpu_idle_exit+0x40/0x40
    [Sun Aug  7 13:12:29 2022]  cpu_startup_entry+0x19/0x20
    [Sun Aug  7 13:12:29 2022]  rest_init+0x156/0x250
    [Sun Aug  7 13:12:29 2022]  arch_call_rest_init+0xf/0x15
    [Sun Aug  7 13:12:29 2022]  start_kernel+0x3a7/0x3c5
    [Sun Aug  7 13:12:29 2022]  secondary_startup_64_no_verify+0xcd/0xdb
    [Sun Aug  7 13:12:29 2022]  </TASK>
    
    Fixes: ff9b7521468b ("net/mlx5: Bridge, support LAG")
    Signed-off-by: Vlad Buslov <vladbu@nvidia.com>
    Reviewed-by: Mark Bloch <mbloch@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54f382d4b7f8c4b309ecdb2a9b724c0bda22b292
Author: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
Date:   Thu Sep 8 23:40:34 2022 +0530

    wifi: cfg80211: fix MCS divisor value
    
    [ Upstream commit 64e966d1e84b29c9fa916cfeaabbf4013703942e ]
    
    The Bitrate for HE/EHT MCS6 is calculated wrongly due to the
    incorrect MCS divisor value for mcs6. Fix it with the proper
    value.
    
    previous mcs_divisor value = (11769/6144) = 1.915527
    
    fixed mcs_divisor value = (11377/6144) = 1.851725
    
    Fixes: 9c97c88d2f4b ("cfg80211: Add support to calculate and report 4096-QAM HE rates")
    Signed-off-by: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
    Link: https://lore.kernel.org/r/20220908181034.9936-1-quic_tamizhr@quicinc.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fa249414a6fa863383834624bd030fb0fc7fa23
Author: Naoya Horiguchi <naoya.horiguchi@nec.com>
Date:   Thu Sep 8 13:11:50 2022 +0900

    mm/huge_memory: use pfn_to_online_page() in split_huge_pages_all()
    
    [ Upstream commit 2b7aa91ba0e86b8643f5d3c83874c80599c731d7 ]
    
    NULL pointer dereference is triggered when calling thp split via debugfs
    on the system with offlined memory blocks.  With debug option enabled, the
    following kernel messages are printed out:
    
      page:00000000467f4890 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x121c000
      flags: 0x17fffc00000000(node=0|zone=2|lastcpupid=0x1ffff)
      raw: 0017fffc00000000 0000000000000000 dead000000000122 0000000000000000
      raw: 0000000000000000 0000000000000000 00000001ffffffff 0000000000000000
      page dumped because: unmovable page
      page:000000007d7ab72e is uninitialized and poisoned
      page dumped because: VM_BUG_ON_PAGE(PagePoisoned(p))
      ------------[ cut here ]------------
      kernel BUG at include/linux/mm.h:1248!
      invalid opcode: 0000 [#1] PREEMPT SMP PTI
      CPU: 16 PID: 20964 Comm: bash Tainted: G          I        6.0.0-rc3-foll-numa+ #41
      ...
      RIP: 0010:split_huge_pages_write+0xcf4/0xe30
    
    This shows that page_to_nid() in page_zone() is unexpectedly called for an
    offlined memmap.
    
    Use pfn_to_online_page() to get struct page in PFN walker.
    
    Link: https://lkml.kernel.org/r/20220908041150.3430269-1-naoya.horiguchi@linux.dev
    Fixes: f1dd2cd13c4b ("mm, memory_hotplug: do not associate hotadded memory to zones until online")      [visible after d0dc12e86b319]
    Signed-off-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Co-developed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Yang Shi <shy828301@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Muchun Song <songmuchun@bytedance.com>
    Cc: <stable@vger.kernel.org>    [5.10+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1d6894159fc4164647f6b0e9a0a49b18ae64feb
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Mon Jul 4 21:21:57 2022 +0800

    mm/huge_memory: minor cleanup for split_huge_pages_all
    
    [ Upstream commit a17206dac7b262e7abed5a05e34a6bd6bd0a9b06 ]
    
    There is nothing to do if a zone doesn't have any pages managed by the
    buddy allocator. So we should check managed_zone instead. Also if a thp
    is found, there's no need to traverse the subpages again.
    
    Link: https://lkml.kernel.org/r/20220704132201.14611-13-linmiaohe@huawei.com
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Muchun Song <songmuchun@bytedance.com>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Zach O'Keefe <zokeefe@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Stable-dep-of: 2b7aa91ba0e8 ("mm/huge_memory: use pfn_to_online_page() in split_huge_pages_all()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7190afd4cd5ff3b94efb1032b6cd4572c2141373
Author: Ian Rogers <irogers@google.com>
Date:   Fri Oct 15 10:21:31 2021 -0700

    perf parse-events: Identify broken modifiers
    
    [ Upstream commit eabd4523395e4a8f2b049165642801f2ab8ff893 ]
    
    Previously the broken modifier causes a usage message to printed but
    nothing else.
    
    After:
    
      $ perf stat -e 'cycles:kk' -a sleep 2
      event syntax error: 'cycles:kk'
                                  \___ Bad modifier
      Run 'perf list' for a list of valid events
    
       Usage: perf stat [<options>] [<command>]
    
          -e, --event <event>   event selector. use 'perf list' to list available events
    
      $ perf stat -e '{instructions,cycles}:kk' -a sleep 2
      event syntax error: '..ns,cycles}:kk'
                                        \___ Bad modifier
      Run 'perf list' for a list of valid events
    
       Usage: perf stat [<options>] [<command>]
    
          -e, --event <event>   event selector. use 'perf list' to list available events
    
    Signed-off-by: Ian Rogers <irogers@google.com>
    Acked-by: Andi Kleen <ak@linux.intel.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Antonov <alexander.antonov@linux.intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andrew Kilroy <andrew.kilroy@arm.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Changbin Du <changbin.du@intel.com>
    Cc: Denys Zagorui <dzagorui@cisco.com>
    Cc: Fabian Hemmer <copy@copy.sh>
    Cc: Felix Fietkau <nbd@nbd.name>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jacob Keller <jacob.e.keller@intel.com>
    Cc: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Joakim Zhang <qiangqing.zhang@nxp.com>
    Cc: John Garry <john.garry@huawei.com>
    Cc: Kajol Jain <kjain@linux.ibm.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Kees Kook <keescook@chromium.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Nicholas Fraser <nfraser@codeweavers.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Paul Clarke <pc@us.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Riccardo Mancini <rickyman7@gmail.com>
    Cc: Sami Tolvanen <samitolvanen@google.com>
    Cc: ShihCheng Tu <mrtoastcheng@gmail.com>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Cc: Wan Jiabing <wanjiabing@vivo.com>
    Cc: Zhen Lei <thunder.leizhen@huawei.com>
    Link: https://lore.kernel.org/r/20211015172132.1162559-21-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Stable-dep-of: 71c86cda750b ("perf parse-events: Remove "not supported" hybrid cache events")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6f740f6ca3b0f49608334588bb657e620ab5604
Author: Brian Norris <briannorris@chromium.org>
Date:   Tue Sep 13 18:40:10 2022 -0700

    mmc: core: Terminate infinite loop in SD-UHS voltage switch
    
    [ Upstream commit e9233917a7e53980664efbc565888163c0a33c3f ]
    
    This loop intends to retry a max of 10 times, with some implicit
    termination based on the SD_{R,}OCR_S18A bit. Unfortunately, the
    termination condition depends on the value reported by the SD card
    (*rocr), which may or may not correctly reflect what we asked it to do.
    
    Needless to say, it's not wise to rely on the card doing what we expect;
    we should at least terminate the loop regardless. So, check both the
    input and output values, so we ensure we will terminate regardless of
    the SD card behavior.
    
    Note that SDIO learned a similar retry loop in commit 0797e5f1453b
    ("mmc: core: Fixup signal voltage switch"), but that used the 'ocr'
    result, and so the current pre-terminating condition looks like:
    
        rocr & ocr & R4_18V_PRESENT
    
    (i.e., it doesn't have the same bug.)
    
    This addresses a number of crash reports seen on ChromeOS that look
    like the following:
    
        ... // lots of repeated: ...
        <4>[13142.846061] mmc1: Skipping voltage switch
        <4>[13143.406087] mmc1: Skipping voltage switch
        <4>[13143.964724] mmc1: Skipping voltage switch
        <4>[13144.526089] mmc1: Skipping voltage switch
        <4>[13145.086088] mmc1: Skipping voltage switch
        <4>[13145.645941] mmc1: Skipping voltage switch
        <3>[13146.153969] INFO: task halt:30352 blocked for more than 122 seconds.
        ...
    
    Fixes: f2119df6b764 ("mmc: sd: add support for signal voltage switch procedure")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20220914014010.2076169-1-briannorris@chromium.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9635e05e015a6762a6dfa6e59d64080e9773e1a6
Author: ChanWoo Lee <cw9316.lee@samsung.com>
Date:   Wed Jul 6 09:48:40 2022 +0900

    mmc: core: Replace with already defined values for readability
    
    [ Upstream commit e427266460826bea21b70f9b2bb29decfb2c2620 ]
    
    SD_ROCR_S18A is already defined and is used to check the rocr value, so
    let's replace with already defined values for readability.
    
    Signed-off-by: ChanWoo Lee <cw9316.lee@samsung.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20220706004840.24812-1-cw9316.lee@samsung.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Stable-dep-of: e9233917a7e5 ("mmc: core: Terminate infinite loop in SD-UHS voltage switch")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2af62d909adb14105443d33914c703b71c775c2
Author: zhikzhai <zhikai.zhai@amd.com>
Date:   Fri Aug 26 19:44:50 2022 +0800

    drm/amd/display: skip audio setup when audio stream is enabled
    
    [ Upstream commit 65fbfb02c2734cacffec5e3f492e1b4f1dabcf98 ]
    
    [why]
    We have minimal pipe split transition method to avoid pipe
    allocation outage.However, this method will invoke audio setup
    which cause audio output stuck once pipe reallocate.
    
    [how]
    skip audio setup for pipelines which audio stream has been enabled
    
    Reviewed-by: Charlene Liu <Charlene.Liu@amd.com>
    Acked-by: Wayne Lin <wayne.lin@amd.com>
    Signed-off-by: zhikzhai <zhikai.zhai@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d444cfe6d0472278d040a171efbd7cb8a846bf1a
Author: Hugo Hu <hugo.hu@amd.com>
Date:   Thu Sep 1 10:08:35 2022 +0800

    drm/amd/display: update gamut remap if plane has changed
    
    [ Upstream commit 52bb21499cf54fa65b56d97cd0d68579c90207dd ]
    
    [Why]
    The desktop plane and full-screen game plane may have different
    gamut remap coefficients, if switching between desktop and
    full-screen game without updating the gamut remap will cause
    incorrect color.
    
    [How]
    Update gamut remap if planes change.
    
    Reviewed-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Acked-by: Wayne Lin <wayne.lin@amd.com>
    Signed-off-by: Hugo Hu <hugo.hu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4afcb53474aef6006ae6ce86f5aa09cd856563ba
Author: Michael Strauss <michael.strauss@amd.com>
Date:   Wed Aug 31 15:10:43 2022 -0400

    drm/amd/display: Assume an LTTPR is always present on fixed_vs links
    
    [ Upstream commit 29956d0fded036a570bd8e7d4ea4b1a1730307d2 ]
    
    [WHY]
    LTTPRs can in very rare instsances fail to increment DPCD LTTPR count.
    This results in aux-i LTTPR requests to be sent to the wrong DPCD
    address, which causes link training failure.
    
    [HOW]
    Override internal repeater count if fixed_vs flag is set for a given link
    
    Reviewed-by: George Shen <George.Shen@amd.com>
    Acked-by: Wayne Lin <wayne.lin@amd.com>
    Signed-off-by: Michael Strauss <michael.strauss@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e76ff629a201e920cfd6d4ec09432ec500256cb
Author: Leo Li <sunpeng.li@amd.com>
Date:   Tue Aug 30 16:38:16 2022 -0400

    drm/amd/display: Fix double cursor on non-video RGB MPO
    
    [ Upstream commit b261509952bc19d1012cf732f853659be6ebc61e ]
    
    [Why]
    
    DC makes use of layer_index (zpos) when picking the HW plane to enable
    HW cursor on. However, some compositors will not attach zpos information
    to each DRM plane. Consequently, in amdgpu, we default layer_index to 0
    and do not update it.
    
    This causes said DC logic to enable HW cursor on all planes of the same
    layer_index, which manifests as a double cursor issue if one of the
    planes is scaled (and hence scaling the cursor as well).
    
    [How]
    
    Use DRM core helpers to calculate a normalized_zpos value for each
    drm_plane_state under each crtc, within the atomic state.
    
    This helper will first consider existing zpos values, and if
    identical/unset, fallback to plane ID ordering.
    
    The normalized_zpos is then passed to dc_plane_info during atomic check
    for later use by the cursor logic.
    
    Reviewed-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
    Acked-by: Wayne Lin <wayne.lin@amd.com>
    Signed-off-by: Leo Li <sunpeng.li@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6590139ffa3bc18c7f87754d0b79a93f1ae43c6
Author: Jianglei Nie <niejianglei2021@163.com>
Date:   Wed Sep 14 09:42:38 2022 +0800

    net: atlantic: fix potential memory leak in aq_ndev_close()
    
    [ Upstream commit 65e5d27df61283e5390f04b09dc79cd832f95607 ]
    
    If aq_nic_stop() fails, aq_ndev_close() returns err without calling
    aq_nic_deinit() to release the relevant memory and resource, which
    will lead to a memory leak.
    
    We can fix it by deleting the if condition judgment and goto statement to
    call aq_nic_deinit() directly after aq_nic_stop() to fix the memory leak.
    
    Signed-off-by: Jianglei Nie <niejianglei2021@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 005e368a61bc0f3e500f81aad86d04dd2f63ad1d
Author: David Gow <davidgow@google.com>
Date:   Wed Sep 21 14:48:55 2022 +0800

    arch: um: Mark the stack non-executable to fix a binutils warning
    
    [ Upstream commit bd71558d585ac61cfd799db7f25e78dca404dd7a ]
    
    Since binutils 2.39, ld will print a warning if any stack section is
    executable, which is the default for stack sections on files without a
    .note.GNU-stack section.
    
    This was fixed for x86 in commit ffcf9c5700e4 ("x86: link vdso and boot with -z noexecstack --no-warn-rwx-segments"),
    but remained broken for UML, resulting in several warnings:
    
    /usr/bin/ld: warning: arch/x86/um/vdso/vdso.o: missing .note.GNU-stack section implies executable stack
    /usr/bin/ld: NOTE: This behaviour is deprecated and will be removed in a future version of the linker
    /usr/bin/ld: warning: .tmp_vmlinux.kallsyms1 has a LOAD segment with RWX permissions
    /usr/bin/ld: warning: .tmp_vmlinux.kallsyms1.o: missing .note.GNU-stack section implies executable stack
    /usr/bin/ld: NOTE: This behaviour is deprecated and will be removed in a future version of the linker
    /usr/bin/ld: warning: .tmp_vmlinux.kallsyms2 has a LOAD segment with RWX permissions
    /usr/bin/ld: warning: .tmp_vmlinux.kallsyms2.o: missing .note.GNU-stack section implies executable stack
    /usr/bin/ld: NOTE: This behaviour is deprecated and will be removed in a future version of the linker
    /usr/bin/ld: warning: vmlinux has a LOAD segment with RWX permissions
    
    Link both the VDSO and vmlinux with -z noexecstack, fixing the warnings
    about .note.GNU-stack sections. In addition, pass --no-warn-rwx-segments
    to dodge the remaining warnings about LOAD segments with RWX permissions
    in the kallsyms objects. (Note that this flag is apparently not
    available on lld, so hide it behind a test for BFD, which is what the
    x86 patch does.)
    
    Link: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=ffcf9c5700e49c0aee42dcba9a12ba21338e8136
    Link: https://sourceware.org/git/?p=binutils-gdb.git;a=commit;h=ba951afb99912da01a6e8434126b8fac7aa75107
    Signed-off-by: David Gow <davidgow@google.com>
    Reviewed-by: Lukas Straub <lukasstraub2@web.de>
    Tested-by: Lukas Straub <lukasstraub2@web.de>
    Acked-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f85191bedbad261d09168bc22b3d96b0a08a4d3
Author: Lukas Straub <lukasstraub2@web.de>
Date:   Fri Aug 26 15:29:31 2022 +0000

    um: Cleanup compiler warning in arch/x86/um/tls_32.c
    
    [ Upstream commit d27fff3499671dc23a08efd01cdb8b3764a391c4 ]
    
    arch.tls_array is statically allocated so checking for NULL doesn't
    make sense. This causes the compiler warning below.
    
    Remove the checks to silence these warnings.
    
    ../arch/x86/um/tls_32.c: In function 'get_free_idx':
    ../arch/x86/um/tls_32.c:68:13: warning: the comparison will always evaluate as 'true' for the address of 'tls_array' will never be NULL [-Waddress]
       68 |         if (!t->arch.tls_array)
          |             ^
    In file included from ../arch/x86/um/asm/processor.h:10,
                     from ../include/linux/rcupdate.h:30,
                     from ../include/linux/rculist.h:11,
                     from ../include/linux/pid.h:5,
                     from ../include/linux/sched.h:14,
                     from ../arch/x86/um/tls_32.c:7:
    ../arch/x86/um/asm/processor_32.h:22:31: note: 'tls_array' declared here
       22 |         struct uml_tls_struct tls_array[GDT_ENTRY_TLS_ENTRIES];
          |                               ^~~~~~~~~
    ../arch/x86/um/tls_32.c: In function 'get_tls_entry':
    ../arch/x86/um/tls_32.c:243:13: warning: the comparison will always evaluate as 'true' for the address of 'tls_array' will never be NULL [-Waddress]
      243 |         if (!t->arch.tls_array)
          |             ^
    ../arch/x86/um/asm/processor_32.h:22:31: note: 'tls_array' declared here
       22 |         struct uml_tls_struct tls_array[GDT_ENTRY_TLS_ENTRIES];
          |                               ^~~~~~~~~
    
    Signed-off-by: Lukas Straub <lukasstraub2@web.de>
    Acked-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6827af886be812bd65d3c9d607c8c2950c1e47d0
Author: Lukas Straub <lukasstraub2@web.de>
Date:   Fri Aug 26 15:29:27 2022 +0000

    um: Cleanup syscall_handler_t cast in syscalls_32.h
    
    [ Upstream commit 61670b4d270c71219def1fbc9441debc2ac2e6e9 ]
    
    Like in f4f03f299a56ce4d73c5431e0327b3b6cb55ebb9
    "um: Cleanup syscall_handler_t definition/cast, fix warning",
    remove the cast to to fix the compiler warning.
    
    Signed-off-by: Lukas Straub <lukasstraub2@web.de>
    Acked-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f386b373e9f7b3df9ae74e8a4a29e8a5ab6195a1
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Tue Sep 13 09:02:16 2022 +0200

    ALSA: hda/hdmi: Fix the converter reuse for the silent stream
    
    [ Upstream commit 5f80d6bd2b01de4cafac3302f58456bf860322fc ]
    
    When the user space pcm stream uses the silent stream converter,
    it is no longer allocated for the silent stream. Clear the appropriate
    flag in the hdmi_pcm_open() function. The silent stream setup may
    be applied in hdmi_pcm_close() (and the error path - open fcn) again.
    
    If the flag is not cleared, the reuse conditions for the silent
    stream converter in hdmi_choose_cvt() may improperly share
    this converter.
    
    Cc: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Link: https://lore.kernel.org/r/20220913070216.3233974-1-perex@perex.cz
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a36b2dc5c0da393c54b03382ccf80b17a5651c71
Author: Oleksandr Mazur <oleksandr.mazur@plvision.eu>
Date:   Thu Sep 8 16:14:46 2022 +0300

    net: marvell: prestera: add support for for Aldrin2
    
    [ Upstream commit 9124dbcc2dd6c51e81f97f63f7807118c4eb140a ]
    
    Aldrin2 (98DX8525) is a Marvell Prestera PP, with 100G support.
    
    Signed-off-by: Oleksandr Mazur <oleksandr.mazur@plvision.eu>
    
    V2:
      - retarget to net tree instead of net-next;
      - fix missed colon in patch subject ('net marvell' vs 'net: mavell');
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2588ba1a3389d7292d56a8c9516711df6576254
Author: Haimin Zhang <tcs.kernel@gmail.com>
Date:   Thu Sep 8 20:19:27 2022 +0800

    net/ieee802154: fix uninit value bug in dgram_sendmsg
    
    [ Upstream commit 94160108a70c8af17fa1484a37e05181c0e094af ]
    
    There is uninit value bug in dgram_sendmsg function in
    net/ieee802154/socket.c when the length of valid data pointed by the
    msg->msg_name isn't verified.
    
    We introducing a helper function ieee802154_sockaddr_check_size to
    check namelen. First we check there is addr_type in ieee802154_addr_sa.
    Then, we check namelen according to addr_type.
    
    Also fixed in raw_bind, dgram_bind, dgram_connect.
    
    Signed-off-by: Haimin Zhang <tcs_kernel@tencent.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1030659dac4ea370090ace75b3266c3c828269aa
Author: Letu Ren <fantasquex@gmail.com>
Date:   Fri Nov 12 20:06:41 2021 +0800

    scsi: qedf: Fix a UAF bug in __qedf_probe()
    
    [ Upstream commit fbfe96869b782364caebae0445763969ddb6ea67 ]
    
    In __qedf_probe(), if qedf->cdev is NULL which means
    qed_ops->common->probe() failed, then the program will goto label err1, and
    scsi_host_put() will free lport->host pointer. Because the memory qedf
    points to is allocated by libfc_host_alloc(), it will be freed by
    scsi_host_put(). However, the if statement below label err0 only checks
    whether qedf is NULL but doesn't check whether the memory has been freed.
    So a UAF bug can occur.
    
    There are two ways to reach the statements below err0. The first one is
    described as before, "qedf" should be set to NULL. The second one is goto
    "err0" directly. In the latter scenario qedf hasn't been changed and it has
    the initial value NULL. As a result the if statement is not reachable in
    any situation.
    
    The KASAN logs are as follows:
    
    [    2.312969] BUG: KASAN: use-after-free in __qedf_probe+0x5dcf/0x6bc0
    [    2.312969]
    [    2.312969] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    [    2.312969] Call Trace:
    [    2.312969]  dump_stack_lvl+0x59/0x7b
    [    2.312969]  print_address_description+0x7c/0x3b0
    [    2.312969]  ? __qedf_probe+0x5dcf/0x6bc0
    [    2.312969]  __kasan_report+0x160/0x1c0
    [    2.312969]  ? __qedf_probe+0x5dcf/0x6bc0
    [    2.312969]  kasan_report+0x4b/0x70
    [    2.312969]  ? kobject_put+0x25d/0x290
    [    2.312969]  kasan_check_range+0x2ca/0x310
    [    2.312969]  __qedf_probe+0x5dcf/0x6bc0
    [    2.312969]  ? selinux_kernfs_init_security+0xdc/0x5f0
    [    2.312969]  ? trace_rpm_return_int_rcuidle+0x18/0x120
    [    2.312969]  ? rpm_resume+0xa5c/0x16e0
    [    2.312969]  ? qedf_get_generic_tlv_data+0x160/0x160
    [    2.312969]  local_pci_probe+0x13c/0x1f0
    [    2.312969]  pci_device_probe+0x37e/0x6c0
    
    Link: https://lore.kernel.org/r/20211112120641.16073-1-fantasquex@gmail.com
    Reported-by: Zheyu Ma <zheyuma97@gmail.com>
    Acked-by: Saurav Kashyap <skashyap@marvell.com>
    Co-developed-by: Wende Tan <twd2.me@gmail.com>
    Signed-off-by: Wende Tan <twd2.me@gmail.com>
    Signed-off-by: Letu Ren <fantasquex@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7126aa3624c7811cc7474e463ec8a7d932ed440
Author: Sergei Antonov <saproj@gmail.com>
Date:   Wed Sep 7 20:53:41 2022 +0300

    ARM: dts: fix Moxa SDIO 'compatible', remove 'sdhci' misnomer
    
    [ Upstream commit 02181e68275d28cab3c3f755852770367f1bc229 ]
    
    Driver moxart-mmc.c has .compatible = "moxa,moxart-mmc".
    
    But moxart .dts/.dtsi and the documentation file moxa,moxart-dma.txt
    contain compatible = "moxa,moxart-sdhci".
    
    Change moxart .dts/.dtsi files and moxa,moxart-dma.txt to match the driver.
    
    Replace 'sdhci' with 'mmc' in names too, since SDHCI is a different
    controller from FTSDC010.
    
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sergei Antonov <saproj@gmail.com>
    Cc: Jonas Jensen <jonas.jensen@gmail.com>
    Link: https://lore.kernel.org/r/20220907175341.1477383-1-saproj@gmail.com'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 968299cd58b75bc991401d3fca7f066380cfd6a9
Author: Swati Agarwal <swati.agarwal@xilinx.com>
Date:   Wed Aug 17 11:41:25 2022 +0530

    dmaengine: xilinx_dma: Report error in case of dma_set_mask_and_coherent API failure
    
    [ Upstream commit 8f2b6bc79c32f0fa60df000ae387a790ec80eae9 ]
    
    The driver does not handle the failure case while calling
    dma_set_mask_and_coherent API.
    
    In case of failure, capture the return value of API and then report an
    error.
    
    Addresses-coverity: Unchecked return value (CHECKED_RETURN)
    
    Signed-off-by: Swati Agarwal <swati.agarwal@xilinx.com>
    Reviewed-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Link: https://lore.kernel.org/r/20220817061125.4720-4-swati.agarwal@xilinx.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17f55255af4c7c3783cff65ae97dd35d7bd18ad7
Author: Swati Agarwal <swati.agarwal@xilinx.com>
Date:   Wed Aug 17 11:41:24 2022 +0530

    dmaengine: xilinx_dma: cleanup for fetching xlnx,num-fstores property
    
    [ Upstream commit 462bce790e6a7e68620a4ce260cc38f7ed0255d5 ]
    
    Free the allocated resources for missing xlnx,num-fstores property.
    
    Signed-off-by: Swati Agarwal <swati.agarwal@xilinx.com>
    Link: https://lore.kernel.org/r/20220817061125.4720-3-swati.agarwal@xilinx.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2f2755501366ece756241721f7487cf7e37ac35
Author: Swati Agarwal <swati.agarwal@xilinx.com>
Date:   Wed Aug 17 11:41:23 2022 +0530

    dmaengine: xilinx_dma: Fix devm_platform_ioremap_resource error handling
    
    [ Upstream commit 91df7751eb890e970afc08f50b8f0fa5ea39e03d ]
    
    Add missing cleanup in devm_platform_ioremap_resource().
    When probe fails remove dma channel resources and disable clocks in
    accordance with the order of resources allocated .
    
    Signed-off-by: Swati Agarwal <swati.agarwal@xilinx.com>
    Link: https://lore.kernel.org/r/20220817061125.4720-2-swati.agarwal@xilinx.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd425b89d040fd81b25cdb966a1b43860b3a9628
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Wed Aug 17 18:27:31 2022 +0100

    firmware: arm_scmi: Add SCMI PM driver remove routine
    
    [ Upstream commit dea796fcab0a219830831c070b8dc367d7e0f708 ]
    
    Currently, when removing the SCMI PM driver not all the resources
    registered with genpd subsystem are properly de-registered.
    
    As a side effect of this after a driver unload/load cycle you get a
    splat with a few warnings like this:
    
     | debugfs: Directory 'BIG_CPU0' with parent 'pm_genpd' already present!
     | debugfs: Directory 'BIG_CPU1' with parent 'pm_genpd' already present!
     | debugfs: Directory 'LITTLE_CPU0' with parent 'pm_genpd' already present!
     | debugfs: Directory 'LITTLE_CPU1' with parent 'pm_genpd' already present!
     | debugfs: Directory 'LITTLE_CPU2' with parent 'pm_genpd' already present!
     | debugfs: Directory 'LITTLE_CPU3' with parent 'pm_genpd' already present!
     | debugfs: Directory 'BIG_SSTOP' with parent 'pm_genpd' already present!
     | debugfs: Directory 'LITTLE_SSTOP' with parent 'pm_genpd' already present!
     | debugfs: Directory 'DBGSYS' with parent 'pm_genpd' already present!
     | debugfs: Directory 'GPUTOP' with parent 'pm_genpd' already present!
    
    Add a proper scmi_pm_domain_remove callback to the driver in order to
    take care of all the needed cleanups not handled by devres framework.
    
    Link: https://lore.kernel.org/r/20220817172731.1185305-7-cristian.marussi@arm.com
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e092fc3a28922c0b360f191bfe54895f02af8747
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Wed Aug 17 18:27:28 2022 +0100

    firmware: arm_scmi: Harden accesses to the sensor domains
    
    [ Upstream commit 76f89c954788763db575fb512a40bd483864f1e9 ]
    
    Accessing sensor domains descriptors by the index upon the SCMI drivers
    requests through the SCMI sensor operations interface can potentially
    lead to out-of-bound violations if the SCMI driver misbehave.
    
    Add an internal consistency check before any such domains descriptors
    accesses.
    
    Link: https://lore.kernel.org/r/20220817172731.1185305-4-cristian.marussi@arm.com
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f81dbb934fbd580687155112ec5fd4701e044c1
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Wed Aug 17 18:27:27 2022 +0100

    firmware: arm_scmi: Improve checks in the info_get operations
    
    [ Upstream commit 1ecb7d27b1af6705e9a4e94415b4d8cc8cf2fbfb ]
    
    SCMI protocols abstract and expose a number of protocol specific
    resources like clocks, sensors and so on. Information about such
    specific domain resources are generally exposed via an `info_get`
    protocol operation.
    
    Improve the sanity check on these operations where needed.
    
    Link: https://lore.kernel.org/r/20220817172731.1185305-3-cristian.marussi@arm.com
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64b79e632869ad3ef6c098a4731d559381da1115
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Tue Aug 16 12:08:58 2022 +0800

    fs: fix UAF/GPF bug in nilfs_mdt_destroy
    
    commit 2e488f13755ffbb60f307e991b27024716a33b29 upstream.
    
    In alloc_inode, inode_init_always() could return -ENOMEM if
    security_inode_alloc() fails, which causes inode->i_private
    uninitialized. Then nilfs_is_metadata_file_inode() returns
    true and nilfs_free_inode() wrongly calls nilfs_mdt_destroy(),
    which frees the uninitialized inode->i_private
    and leads to crashes(e.g., UAF/GPF).
    
    Fix this by moving security_inode_alloc just prior to
    this_cpu_inc(nr_inodes)
    
    Link: https://lkml.kernel.org/r/CAFcO6XOcf1Jj2SeGt=jJV59wmhESeSKpfR0omdFRq+J9nD1vfQ@mail.gmail.com
    Reported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    Reported-by: Hao Sun <sunhao.th@gmail.com>
    Reported-by: Jiacheng Xu <stitch@zju.edu.cn>
    Reviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31bdba07f6b262a489f71516a5978c3595fb4099
Author: Yang Shi <shy828301@gmail.com>
Date:   Wed Sep 7 11:01:44 2022 -0700

    powerpc/64s/radix: don't need to broadcast IPI for radix pmd collapse flush
    
    commit bedf03416913d88c796288f9dca109a53608c745 upstream.
    
    The IPI broadcast is used to serialize against fast-GUP, but fast-GUP will
    move to use RCU instead of disabling local interrupts in fast-GUP.  Using
    an IPI is the old-styled way of serializing against fast-GUP although it
    still works as expected now.
    
    And fast-GUP now fixed the potential race with THP collapse by checking
    whether PMD is changed or not.  So IPI broadcast in radix pmd collapse
    flush is not necessary anymore.  But it is still needed for hash TLB.
    
    Link: https://lkml.kernel.org/r/20220907180144.555485-2-shy828301@gmail.com
    Suggested-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Yang Shi <shy828301@gmail.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Peter Xu <peterx@redhat.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Jason Gunthorpe <jgg@nvidia.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46c22e7b094f85858f5581bba0e3c59400f53dfa
Author: Yang Shi <shy828301@gmail.com>
Date:   Wed Sep 7 11:01:43 2022 -0700

    mm: gup: fix the fast GUP race against THP collapse
    
    commit 70cbc3cc78a997d8247b50389d37c4e1736019da upstream.
    
    Since general RCU GUP fast was introduced in commit 2667f50e8b81 ("mm:
    introduce a general RCU get_user_pages_fast()"), a TLB flush is no longer
    sufficient to handle concurrent GUP-fast in all cases, it only handles
    traditional IPI-based GUP-fast correctly.  On architectures that send an
    IPI broadcast on TLB flush, it works as expected.  But on the
    architectures that do not use IPI to broadcast TLB flush, it may have the
    below race:
    
       CPU A                                          CPU B
    THP collapse                                     fast GUP
                                                  gup_pmd_range() <-- see valid pmd
                                                      gup_pte_range() <-- work on pte
    pmdp_collapse_flush() <-- clear pmd and flush
    __collapse_huge_page_isolate()
        check page pinned <-- before GUP bump refcount
                                                          pin the page
                                                          check PTE <-- no change
    __collapse_huge_page_copy()
        copy data to huge page
        ptep_clear()
    install huge pmd for the huge page
                                                          return the stale page
    discard the stale page
    
    The race can be fixed by checking whether PMD is changed or not after
    taking the page pin in fast GUP, just like what it does for PTE.  If the
    PMD is changed it means there may be parallel THP collapse, so GUP should
    back off.
    
    Also update the stale comment about serializing against fast GUP in
    khugepaged.
    
    Link: https://lkml.kernel.org/r/20220907180144.555485-1-shy828301@gmail.com
    Fixes: 2667f50e8b81 ("mm: introduce a general RCU get_user_pages_fast()")
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Peter Xu <peterx@redhat.com>
    Signed-off-by: Yang Shi <shy828301@gmail.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Cc: "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Jason Gunthorpe <jgg@nvidia.com>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88ccea0a44584997e50db1e00fd650c26ac1ec55
Author: Jalal Mostafa <jalal.a.mostapha@gmail.com>
Date:   Wed Sep 21 13:57:01 2022 +0000

    xsk: Inherit need_wakeup flag for shared sockets
    
    commit 60240bc26114543fcbfcd8a28466e67e77b20388 upstream.
    
    The flag for need_wakeup is not set for xsks with `XDP_SHARED_UMEM`
    flag and of different queue ids and/or devices. They should inherit
    the flag from the first socket buffer pool since no flags can be
    specified once `XDP_SHARED_UMEM` is specified.
    
    Fixes: b5aea28dca134 ("xsk: Add shared umem support between queue ids")
    Signed-off-by: Jalal Mostafa <jalal.a.mostapha@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Magnus Karlsson <magnus.karlsson@intel.com>
    Link: https://lore.kernel.org/bpf/20220921135701.10199-1-jalal.a.mostapha@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f07fbefcea5bf3325d4f8dbed9e25042aa77b9f9
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Thu Sep 1 15:23:19 2022 -0600

    docs: update mediator information in CoC docs
    
    commit 8bfdfa0d6b929ede7b6189e0e546ceb6a124d05d upstream.
    
    Update mediator information in the CoC interpretation document.
    
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20220901212319.56644-1-skhan@linuxfoundation.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf26ddb96b4f7163ebe1bcdb83e104aa5e497c69
Author: Sami Tolvanen <samitolvanen@google.com>
Date:   Fri Sep 30 20:33:10 2022 +0000

    Makefile.extrawarn: Move -Wcast-function-type-strict to W=1
    
    commit 2120635108b35ecad9c59c8b44f6cbdf4f98214e upstream.
    
    We enable -Wcast-function-type globally in the kernel to warn about
    mismatching types in function pointer casts. Compilers currently
    warn only about ABI incompability with this flag, but Clang 16 will
    enable a stricter version of the check by default that checks for an
    exact type match. This will be very noisy in the kernel, so disable
    -Wcast-function-type-strict without W=1 until the new warnings have
    been addressed.
    
    Cc: stable@vger.kernel.org
    Link: https://reviews.llvm.org/D134831
    Link: https://github.com/ClangBuiltLinux/linux/issues/1724
    Suggested-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20220930203310.4010564-1-samitolvanen@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
