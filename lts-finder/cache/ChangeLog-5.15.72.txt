commit c68173b2012b8eba332cf9832f0ad23427d795b5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 5 10:39:44 2022 +0200

    Linux 5.15.72
    
    Link: https://lore.kernel.org/r/20221003070721.971297651@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Slade Watkins <srw@sladewatkins.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Kelsey Steele <kelseysteele@linux.microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 713fa3e4591f65f804bdc88e8648e219fabc9ee1
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Sep 16 11:24:03 2022 +0200

    drm/i915/gem: Really move i915_gem_context.link under ref protection
    
    commit d119888b09bd567e07c6b93a07f175df88857e02 upstream.
    
    i915_perf assumes that it can use the i915_gem_context reference to
    protect its i915->gem.contexts.list iteration. However, this requires
    that we do not remove the context from the list until after we drop the
    final reference and release the struct. If, as currently, we remove the
    context from the list during context_close(), the link.next pointer may
    be poisoned while we are holding the context reference and cause a GPF:
    
    [ 4070.573157] i915 0000:00:02.0: [drm:i915_perf_open_ioctl [i915]] filtering on ctx_id=0x1fffff ctx_id_mask=0x1fffff
    [ 4070.574881] general protection fault, probably for non-canonical address 0xdead000000000100: 0000 [#1] PREEMPT SMP
    [ 4070.574897] CPU: 1 PID: 284392 Comm: amd_performance Tainted: G            E     5.17.9 #180
    [ 4070.574903] Hardware name: Intel Corporation NUC7i5BNK/NUC7i5BNB, BIOS BNKBL357.86A.0052.2017.0918.1346 09/18/2017
    [ 4070.574907] RIP: 0010:oa_configure_all_contexts.isra.0+0x222/0x350 [i915]
    [ 4070.574982] Code: 08 e8 32 6e 10 e1 4d 8b 6d 50 b8 ff ff ff ff 49 83 ed 50 f0 41 0f c1 04 24 83 f8 01 0f 84 e3 00 00 00 85 c0 0f 8e fa 00 00 00 <49> 8b 45 50 48 8d 70 b0 49 8d 45 50 48 39 44 24 10 0f 85 34 fe ff
    [ 4070.574990] RSP: 0018:ffffc90002077b78 EFLAGS: 00010202
    [ 4070.574995] RAX: 0000000000000002 RBX: 0000000000000002 RCX: 0000000000000000
    [ 4070.575000] RDX: 0000000000000001 RSI: ffffc90002077b20 RDI: ffff88810ddc7c68
    [ 4070.575004] RBP: 0000000000000001 R08: ffff888103242648 R09: fffffffffffffffc
    [ 4070.575008] R10: ffffffff82c50bc0 R11: 0000000000025c80 R12: ffff888101bf1860
    [ 4070.575012] R13: dead0000000000b0 R14: ffffc90002077c04 R15: ffff88810be5cabc
    [ 4070.575016] FS:  00007f1ed50c0780(0000) GS:ffff88885ec80000(0000) knlGS:0000000000000000
    [ 4070.575021] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 4070.575025] CR2: 00007f1ed5590280 CR3: 000000010ef6f005 CR4: 00000000003706e0
    [ 4070.575029] Call Trace:
    [ 4070.575033]  <TASK>
    [ 4070.575037]  lrc_configure_all_contexts+0x13e/0x150 [i915]
    [ 4070.575103]  gen8_enable_metric_set+0x4d/0x90 [i915]
    [ 4070.575164]  i915_perf_open_ioctl+0xbc0/0x1500 [i915]
    [ 4070.575224]  ? asm_common_interrupt+0x1e/0x40
    [ 4070.575232]  ? i915_oa_init_reg_state+0x110/0x110 [i915]
    [ 4070.575290]  drm_ioctl_kernel+0x85/0x110
    [ 4070.575296]  ? update_load_avg+0x5f/0x5e0
    [ 4070.575302]  drm_ioctl+0x1d3/0x370
    [ 4070.575307]  ? i915_oa_init_reg_state+0x110/0x110 [i915]
    [ 4070.575382]  ? gen8_gt_irq_handler+0x46/0x130 [i915]
    [ 4070.575445]  __x64_sys_ioctl+0x3c4/0x8d0
    [ 4070.575451]  ? __do_softirq+0xaa/0x1d2
    [ 4070.575456]  do_syscall_64+0x35/0x80
    [ 4070.575461]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [ 4070.575467] RIP: 0033:0x7f1ed5c10397
    [ 4070.575471] Code: 3c 1c e8 1c ff ff ff 85 c0 79 87 49 c7 c4 ff ff ff ff 5b 5d 4c 89 e0 41 5c c3 66 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d a9 da 0d 00 f7 d8 64 89 01 48
    [ 4070.575478] RSP: 002b:00007ffd65c8d7a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    [ 4070.575484] RAX: ffffffffffffffda RBX: 0000000000000006 RCX: 00007f1ed5c10397
    [ 4070.575488] RDX: 00007ffd65c8d7c0 RSI: 0000000040106476 RDI: 0000000000000006
    [ 4070.575492] RBP: 00005620972f9c60 R08: 000000000000000a R09: 0000000000000005
    [ 4070.575496] R10: 000000000000000d R11: 0000000000000246 R12: 000000000000000a
    [ 4070.575500] R13: 000000000000000d R14: 0000000000000000 R15: 00007ffd65c8d7c0
    [ 4070.575505]  </TASK>
    [ 4070.575507] Modules linked in: nls_ascii(E) nls_cp437(E) vfat(E) fat(E) i915(E) x86_pkg_temp_thermal(E) intel_powerclamp(E) crct10dif_pclmul(E) crc32_pclmul(E) crc32c_intel(E) aesni_intel(E) crypto_simd(E) intel_gtt(E) cryptd(E) ttm(E) rapl(E) intel_cstate(E) drm_kms_helper(E) cfbfillrect(E) syscopyarea(E) cfbimgblt(E) intel_uncore(E) sysfillrect(E) mei_me(E) sysimgblt(E) i2c_i801(E) fb_sys_fops(E) mei(E) intel_pch_thermal(E) i2c_smbus(E) cfbcopyarea(E) video(E) button(E) efivarfs(E) autofs4(E)
    [ 4070.575549] ---[ end trace 0000000000000000 ]---
    
    v3: fix incorrect syntax of spin_lock() replacing spin_lock_irqsave()
    
    v2: irqsave not required in a worker, neither conversion to irq safe
        elsewhere (Tvrtko),
      - perf: it's safe to call gen8_configure_context() even if context has
        been closed, no need to check,
      - drop unrelated cleanup (Andi, Tvrtko)
    
    Reported-by: Mark Janes <mark.janes@intel.com>
    Closes: https://gitlab.freedesktop.org/drm/intel/issues/6222
    References: a4e7ccdac38e ("drm/i915: Move context management under GEM")
    Fixes: f8246cf4d9a9 ("drm/i915/gem: Drop free_work for GEM contexts")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Andi Shyti <andi.shyti@linux.intel.com>
    Signed-off-by: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: <stable@vger.kernel.org> # v5.12+
    Signed-off-by: Andi Shyti <andi.shyti@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220916092403.201355-3-janusz.krzysztofik@linux.intel.com
    (cherry picked from commit ad3aa7c31efa5a09b0dba42e66cfdf77e0db7dc2)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    [janusz: backport]
    Signed-off-by: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a00ed4e5d5ee2f5abc8b8820329b6dc8300774a2
Author: Nadav Amit <namit@vmware.com>
Date:   Wed Sep 21 18:09:32 2022 +0000

    x86/alternative: Fix race in try_get_desc()
    
    commit efd608fa7403ba106412b437f873929e2c862e28 upstream.
    
    I encountered some occasional crashes of poke_int3_handler() when
    kprobes are set, while accessing desc->vec.
    
    The text poke mechanism claims to have an RCU-like behavior, but it
    does not appear that there is any quiescent state to ensure that
    nobody holds reference to desc. As a result, the following race
    appears to be possible, which can lead to memory corruption.
    
      CPU0                                  CPU1
      ----                                  ----
      text_poke_bp_batch()
      -> smp_store_release(&bp_desc, &desc)
    
      [ notice that desc is on
        the stack                   ]
    
                                            poke_int3_handler()
    
                                            [ int3 might be kprobe's
                                              so sync events are do not
                                              help ]
    
                                            -> try_get_desc(descp=&bp_desc)
                                               desc = __READ_ONCE(bp_desc)
    
                                               if (!desc) [false, success]
      WRITE_ONCE(bp_desc, NULL);
      atomic_dec_and_test(&desc.refs)
    
      [ success, desc space on the stack
        is being reused and might have
        non-zero value. ]
                                            arch_atomic_inc_not_zero(&desc->refs)
    
                                            [ might succeed since desc points to
                                              stack memory that was freed and might
                                              be reused. ]
    
    Fix this issue with small backportable patch. Instead of trying to
    make RCU-like behavior for bp_desc, just eliminate the unnecessary
    level of indirection of bp_desc, and hold the whole descriptor as a
    global.  Anyhow, there is only a single descriptor at any given
    moment.
    
    Fixes: 1f676247f36a4 ("x86/alternatives: Implement a better poke_int3_handler() completion scheme")
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@kernel.org
    Link: https://lkml.kernel.org/r/20220920224743.3089-1-namit@vmware.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3d4b8970c0d86e101a6570b0131fc9db62fe431
Author: Jim Mattson <jmattson@google.com>
Date:   Thu Sep 22 16:18:54 2022 -0700

    KVM: x86: Hide IA32_PLATFORM_DCA_CAP[31:0] from the guest
    
    [ Upstream commit aae2e72229cdb21f90df2dbe4244c977e5d3265b ]
    
    The only thing reported by CPUID.9 is the value of
    IA32_PLATFORM_DCA_CAP[31:0] in EAX. This MSR doesn't even exist in the
    guest, since CPUID.1:ECX.DCA[bit 18] is clear in the guest.
    
    Clear CPUID.9 in KVM_GET_SUPPORTED_CPUID.
    
    Fixes: 24c82e576b78 ("KVM: Sanitize cpuid")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Message-Id: <20220922231854.249383-1-jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab5c5787ab5ecdc4a7ea20b4ef542579e1beb49d
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Sep 5 09:15:03 2022 -0700

    clk: iproc: Do not rely on node name for correct PLL setup
    
    [ Upstream commit 1b24a132eba7a1c19475ba2510ec1c00af3ff914 ]
    
    After commit 31fd9b79dc58 ("ARM: dts: BCM5301X: update CRU block
    description") a warning from clk-iproc-pll.c was generated due to a
    duplicate PLL name as well as the console stopped working. Upon closer
    inspection it became clear that iproc_pll_clk_setup() used the Device
    Tree node unit name as an unique identifier as well as a parent name to
    parent all clocks under the PLL.
    
    BCM5301X was the first platform on which that got noticed because of the
    DT node unit name renaming but the same assumptions hold true for any
    user of the iproc_pll_clk_setup() function.
    
    The first 'clock-output-names' property is always guaranteed to be
    unique as well as providing the actual desired PLL clock name, so we
    utilize that to register the PLL and as a parent name of all children
    clock.
    
    Fixes: 5fe225c105fd ("clk: iproc: add initial common clock support")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Rafał Miłecki <rafal@milecki.pl>
    Link: https://lore.kernel.org/r/20220905161504.1526-1-f.fainelli@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e748a084b51c01f9403f7242617c2aee233cc1cb
Author: Han Xu <han.xu@nxp.com>
Date:   Thu Sep 15 10:09:59 2022 -0500

    clk: imx: imx6sx: remove the SET_RATE_PARENT flag for QSPI clocks
    
    [ Upstream commit b1ff1bfe81e763420afd5f3f25f0b3cbfd97055c ]
    
    There is no dedicate parent clock for QSPI so SET_RATE_PARENT flag
    should not be used. For instance, the default parent clock for QSPI is
    pll2_bus, which is also the parent clock for quite a few modules, such
    as MMDC, once GPMI NAND set clock rate for EDO5 mode can cause system
    hang due to pll2_bus rate changed.
    
    Fixes: f1541e15e38e ("clk: imx6sx: Switch to clk_hw based API")
    Signed-off-by: Han Xu <han.xu@nxp.com>
    Link: https://lore.kernel.org/r/20220915150959.3646702-1-han.xu@nxp.com
    Tested-by: Fabio Estevam <festevam@denx.de>
    Reviewed-by: Abel Vesa <abel.vesa@linaro.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19f4e1636626742411036a536b9950eb89611711
Author: Stefan Roesch <shr@fb.com>
Date:   Sun Apr 24 18:10:46 2022 -0600

    fs: split off setxattr_copy and do_setxattr function from setxattr
    
    [ Upstream commit 1a91794ce8481a293c5ef432feb440aee1455619 ]
    
    This splits of the setup part of the function setxattr in its own
    dedicated function called setxattr_copy. In addition it also exposes a new
    function called do_setxattr for making the setxattr call.
    
    This makes it possible to call these two functions from io_uring in the
    processing of an xattr request.
    
    Signed-off-by: Stefan Roesch <shr@fb.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Link: https://lore.kernel.org/r/20220323154420.3301504-2-shr@fb.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Stable-dep-of: 06bbaa6dc53c ("[coredump] don't use __kernel_write() on kmap_local_page()")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0e3719e030a631e9148fb760a644d5aeffbb06d
Author: Angus Chen <angus.chen@jaguarmicro.com>
Date:   Fri Sep 23 17:10:13 2022 +0800

    vdpa/ifcvf: fix the calculation of queuepair
    
    [ Upstream commit db5db1a00d0816207be3a0166fcb4f523eaf3b52 ]
    
    The q_pair_id to address a queue pair in the lm bar should be
    calculated by queue_id / 2 rather than queue_id / nr_vring.
    
    Fixes: 2ddae773c93b ("vDPA/ifcvf: detect and use the onboard number of queues directly")
    Signed-off-by: Angus Chen <angus.chen@jaguarmicro.com>
    Reviewed-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Zhu Lingshan <lingshan.zhu@intel.com>
    Message-Id: <20220923091013.191-1-angus.chen@jaguarmicro.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4755d9d2c9b08f975b9b0a794deebb17412f2be0
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Fri Sep 23 15:02:37 2022 +0800

    selftests: Fix the if conditions of in test_extra_filter()
    
    [ Upstream commit bc7a319844891746135dc1f34ab9df78d636a3ac ]
    
    The socket 2 bind the addr in use, bind should fail with EADDRINUSE. So
    if bind success or errno != EADDRINUSE, testcase should be failed.
    
    Fixes: 3ca8e4029969 ("soreuseport: BPF selection functional test")
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Link: https://lore.kernel.org/r/1663916557-10730-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c83a7606aa6592badb737a034a4522ec9ce40b28
Author: Lukas Wunner <lukas@wunner.de>
Date:   Fri Sep 23 06:09:52 2022 +0200

    net: phy: Don't WARN for PHY_UP state in mdio_bus_phy_resume()
    
    [ Upstream commit ea64cdfad124922c931633e39287c5a31a9b14a1 ]
    
    Commit 744d23c71af3 ("net: phy: Warn about incorrect mdio_bus_phy_resume()
    state") introduced a WARN() on resume from system sleep if a PHY is not
    in PHY_HALTED state.
    
    Commit 6dbe852c379f ("net: phy: Don't WARN for PHY_READY state in
    mdio_bus_phy_resume()") added an exemption for PHY_READY state from
    the WARN().
    
    It turns out PHY_UP state needs to be exempted as well because the
    following may happen on suspend:
    
      mdio_bus_phy_suspend()
        phy_stop_machine()
          phydev->state = PHY_UP  #  if (phydev->state >= PHY_UP)
    
    Fixes: 744d23c71af3 ("net: phy: Warn about incorrect mdio_bus_phy_resume() state")
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/netdev/2b1a1588-505e-dff3-301d-bfc1fb14d685@samsung.com/
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Xiaolei Wang <xiaolei.wang@windriver.com>
    Link: https://lore.kernel.org/r/8128fdb51eeebc9efbf3776a4097363a1317aaf1.1663905575.git.lukas@wunner.de
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8cd7e1bc7cd812db94284b64f82cb4d7b096b33
Author: Junxiao Chang <junxiao.chang@intel.com>
Date:   Fri Sep 23 13:04:48 2022 +0800

    net: stmmac: power up/down serdes in stmmac_open/release
    
    [ Upstream commit 49725ffc15fc4e9fae68c55b691fd25168cbe5c1 ]
    
    This commit fixes DMA engine reset timeout issue in suspend/resume
    with ADLink I-Pi SMARC Plus board which dmesg shows:
    ...
    [   54.678271] PM: suspend exit
    [   54.754066] intel-eth-pci 0000:00:1d.2 enp0s29f2: PHY [stmmac-3:01] driver [Maxlinear Ethernet GPY215B] (irq=POLL)
    [   54.755808] intel-eth-pci 0000:00:1d.2 enp0s29f2: Register MEM_TYPE_PAGE_POOL RxQ-0
    ...
    [   54.780482] intel-eth-pci 0000:00:1d.2 enp0s29f2: Register MEM_TYPE_PAGE_POOL RxQ-7
    [   55.784098] intel-eth-pci 0000:00:1d.2: Failed to reset the dma
    [   55.784111] intel-eth-pci 0000:00:1d.2 enp0s29f2: stmmac_hw_setup: DMA engine initialization failed
    [   55.784115] intel-eth-pci 0000:00:1d.2 enp0s29f2: stmmac_open: Hw setup failed
    ...
    
    The issue is related with serdes which impacts clock.  There is
    serdes in ADLink I-Pi SMARC board ethernet controller. Please refer to
    commit b9663b7ca6ff78 ("net: stmmac: Enable SERDES power up/down sequence")
    for detial. When issue is reproduced, DMA engine clock is not ready
    because serdes is not powered up.
    
    To reproduce DMA engine reset timeout issue with hardware which has
    serdes in GBE controller, install Ubuntu. In Ubuntu GUI, click
    "Power Off/Log Out" -> "Suspend" menu, it disables network interface,
    then goes to sleep mode. When it wakes up, it enables network
    interface again. Stmmac driver is called in this way:
    
    1. stmmac_release: Stop network interface. In this function, it
       disables DMA engine and network interface;
    2. stmmac_suspend: It is called in kernel suspend flow. But because
       network interface has been disabled(netif_running(ndev) is
       false), it does nothing and returns directly;
    3. System goes into S3 or S0ix state. Some time later, system is
       waken up by keyboard or mouse;
    4. stmmac_resume: It does nothing because network interface has
       been disabled;
    5. stmmac_open: It is called to enable network interace again. DMA
       engine is initialized in this API, but serdes is not power on so
       there will be DMA engine reset timeout issue.
    
    Similarly, serdes powerdown should be added in stmmac_release.
    Network interface might be disabled by cmd "ifconfig eth0 down",
    DMA engine, phy and mac have been disabled in ndo_stop callback,
    serdes should be powered down as well. It doesn't make sense that
    serdes is on while other components have been turned off.
    
    If ethernet interface is in enabled state(netif_running(ndev) is true)
    before suspend/resume, the issue couldn't be reproduced  because serdes
    could be powered up in stmmac_resume.
    
    Because serdes_powerup is added in stmmac_open, it doesn't need to be
    called in probe function.
    
    Fixes: b9663b7ca6ff78 ("net: stmmac: Enable SERDES power up/down sequence")
    Signed-off-by: Junxiao Chang <junxiao.chang@intel.com>
    Reviewed-by: Voon Weifeng <weifeng.voon@intel.com>
    Tested-by: Jimmy JS Chen <jimmyjs.chen@adlinktech.com>
    Tested-by: Looi, Hong Aun <hong.aun.looi@intel.com>
    Link: https://lore.kernel.org/r/20220923050448.1220250-1-junxiao.chang@intel.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67c00bcf423191faa1dd82a32fc3fcc3c5f8db1e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Sep 18 21:20:52 2022 +0200

    wifi: mac80211: fix regression with non-QoS drivers
    
    [ Upstream commit d873697ef2b7e1b6fdd8e9d449d9354bd5d29a4a ]
    
    Commit 10cb8e617560 ("mac80211: enable QoS support for nl80211 ctrl port")
    changed ieee80211_tx_control_port() to aways call
    __ieee80211_select_queue() without checking local->hw.queues.
    
    __ieee80211_select_queue() returns a queue-id between 0 and 3, which means
    that now ieee80211_tx_control_port() may end up setting the queue-mapping
    for a skb to a value higher then local->hw.queues if local->hw.queues
    is less then 4.
    
    Specifically this is a problem for ralink rt2500-pci cards where
    local->hw.queues is 2. There this causes rt2x00queue_get_tx_queue() to
    return NULL and the following error to be logged: "ieee80211 phy0:
    rt2x00mac_tx: Error - Attempt to send packet over invalid queue 2",
    after which association with the AP fails.
    
    Other callers of __ieee80211_select_queue() skip calling it when
    local->hw.queues < IEEE80211_NUM_ACS, add the same check to
    ieee80211_tx_control_port(). This fixes ralink rt2500-pci and
    similar cards when less then 4 tx-queues no longer working.
    
    Fixes: 10cb8e617560 ("mac80211: enable QoS support for nl80211 ctrl port")
    Cc: Markus Theil <markus.theil@tu-ilmenau.de>
    Suggested-by: Stanislaw Gruszka <stf_xl@wp.pl>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220918192052.443529-1-hdegoede@redhat.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 520e434a082ddedc4f174b7c86701850bd30909e
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Thu Sep 22 21:49:09 2022 -0700

    nvme: Fix IOC_PR_CLEAR and IOC_PR_RELEASE ioctls for nvme devices
    
    [ Upstream commit c292a337d0e45a292c301e3cd51c35aa0ae91e95 ]
    
    The IOC_PR_CLEAR and IOC_PR_RELEASE ioctls are
    non-functional on NVMe devices because the nvme_pr_clear()
    and nvme_pr_release() functions set the IEKEY field incorrectly.
    The IEKEY field should be set only when the key is zero (i.e,
    not specified).  The current code does it backwards.
    
    Furthermore, the NVMe spec describes the persistent
    reservation "clear" function as an option on the reservation
    release command. The current implementation of nvme_pr_clear()
    erroneously uses the reservation register command.
    
    Fix these errors. Note that NVMe version 1.3 and later specify
    that setting the IEKEY field will return an error of Invalid
    Field in Command.  The fix will set IEKEY when the key is zero,
    which is appropriate as these ioctls consider a zero key to
    be "unspecified", and the intention of the spec change is
    to require a valid key.
    
    Tested on a version 1.4 PCI NVMe device in an Azure VM.
    
    Fixes: 1673f1f08c88 ("nvme: move block_device_operations and ns/ctrl freeing to common code")
    Fixes: 1d277a637a71 ("NVMe: Add persistent reservation ops")
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9d7d809022e32e3e6d80e068b1d740c6bc350ad
Author: Peng Wu <wupeng58@huawei.com>
Date:   Fri Sep 23 02:36:40 2022 +0000

    net/mlxbf_gige: Fix an IS_ERR() vs NULL bug in mlxbf_gige_mdio_probe
    
    [ Upstream commit 4774db8dfc6a2e6649920ebb2fc8e2f062c2080d ]
    
    The devm_ioremap() function returns NULL on error, it doesn't return
    error pointers.
    
    Fixes: 3a1a274e933f ("mlxbf_gige: compute MDIO period based on i1clk")
    Signed-off-by: Peng Wu <wupeng58@huawei.com>
    Link: https://lore.kernel.org/r/20220923023640.116057-1-wupeng58@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b1b908507ce2f060fb93084a2ac36cf237e2f39
Author: Rafael Mendonca <rafaelmendsr@gmail.com>
Date:   Thu Sep 22 14:51:08 2022 -0300

    cxgb4: fix missing unlock on ETHOFLD desc collect fail path
    
    [ Upstream commit c635ebe8d911a93bd849a9419b01a58783de76f1 ]
    
    The label passed to the QDESC_GET for the ETHOFLD TXQ, RXQ, and FLQ, is the
    'out' one, which skips the 'out_unlock' label, and thus doesn't unlock the
    'uld_mutex' before returning. Additionally, since commit 5148e5950c67
    ("cxgb4: add EOTID tracking and software context dump"), the access to
    these ETHOFLD hardware queues should be protected by the 'mqprio_mutex'
    instead.
    
    Fixes: 2d0cb84dd973 ("cxgb4: add ETHOFLD hardware queue support")
    Fixes: 5148e5950c67 ("cxgb4: add EOTID tracking and software context dump")
    Signed-off-by: Rafael Mendonca <rafaelmendsr@gmail.com>
    Reviewed-by: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
    Link: https://lore.kernel.org/r/20220922175109.764898-1-rafaelmendsr@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e99c7a61d89e4491389da4745a327a91dbf78655
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Fri Sep 23 10:00:46 2022 +0800

    net: sched: act_ct: fix possible refcount leak in tcf_ct_init()
    
    [ Upstream commit 6e23ec0ba92d426c77a73a9ccab16346e5e0ef49 ]
    
    nf_ct_put need to be called to put the refcount got by tcf_ct_fill_params
    to avoid possible refcount leak when tcf_ct_flow_table_get fails.
    
    Fixes: c34b961a2492 ("net/sched: act_ct: Create nf flow table per zone")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Link: https://lore.kernel.org/r/20220923020046.8021-1-hbh25y@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 815381aeff9527fa2445a0eb70171997fe8aeda9
Author: Peilin Ye <peilin.ye@bytedance.com>
Date:   Thu Sep 22 21:25:51 2022 -0700

    usbnet: Fix memory leak in usbnet_disconnect()
    
    [ Upstream commit a43206156263fbaf1f2b7f96257441f331e91bb7 ]
    
    Currently usbnet_disconnect() unanchors and frees all deferred URBs
    using usb_scuttle_anchored_urbs(), which does not free urb->context,
    causing a memory leak as reported by syzbot.
    
    Use a usb_get_from_anchor() while loop instead, similar to what we did
    in commit 19cfe912c37b ("Bluetooth: btusb: Fix memory leak in
    play_deferred").  Also free urb->sg.
    
    Reported-and-tested-by: syzbot+dcd3e13cf4472f2e0ba1@syzkaller.appspotmail.com
    Fixes: 69ee472f2706 ("usbnet & cdc-ether: Autosuspend for online devices")
    Fixes: 638c5115a794 ("USBNET: support DMA SG")
    Signed-off-by: Peilin Ye <peilin.ye@bytedance.com>
    Link: https://lore.kernel.org/r/20220923042551.2745-1-yepeilin.cs@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af91321b73724b316b50c01b0110375b188d33e7
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jul 14 20:33:25 2022 +0200

    gpio: mvebu: Fix check for pwm support on non-A8K platforms
    
    [ Upstream commit 4335417da2b8d6d9b2d4411b5f9e248e5bb2d380 ]
    
    pwm support incompatible with Armada 80x0/70x0 API is not only in
    Armada 370, but also in Armada XP, 38x and 39x. So basically every non-A8K
    platform. Fix check for pwm support appropriately.
    
    Fixes: 85b7d8abfec7 ("gpio: mvebu: add pwm support for Armada 8K/7K")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f592ccddac68f1426d98384fb519246fe31f7e73
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Sep 24 11:07:15 2022 +0800

    Input: melfas_mip4 - fix return value check in mip4_probe()
    
    [ Upstream commit a54dc27bd25f20ee3ea2009584b3166d25178243 ]
    
    devm_gpiod_get_optional() may return ERR_PTR(-EPROBE_DEFER),
    add a minus sign to fix it.
    
    Fixes: 6ccb1d8f78bd ("Input: add MELFAS MIP4 Touchscreen driver")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20220924030715.1653538-1-yangyingliang@huawei.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff982b1f325d402f24379da34fd6c966b7245fa7
Author: Brian Norris <briannorris@chromium.org>
Date:   Mon Aug 22 18:08:04 2022 -0700

    Revert "drm: bridge: analogix/dp: add panel prepare/unprepare in suspend/resume time"
    
    [ Upstream commit cc62d98bd56d45de4531844ca23913a15136c05b ]
    
    This reverts commit 211f276ed3d96e964d2d1106a198c7f4a4b3f4c0.
    
    For quite some time, core DRM helpers already ensure that any relevant
    connectors/CRTCs/etc. are disabled, as well as their associated
    components (e.g., bridges) when suspending the system. Thus,
    analogix_dp_bridge_{enable,disable}() already get called, which in turn
    call drm_panel_{prepare,unprepare}(). This makes these drm_panel_*()
    calls redundant.
    
    Besides redundancy, there are a few problems with this handling:
    
    (1) drm_panel_{prepare,unprepare}() are *not* reference-counted APIs and
    are not in general designed to be handled by multiple callers --
    although some panel drivers have a coarse 'prepared' flag that mitigates
    some damage, at least. So at a minimum this is redundant and confusing,
    but in some cases, this could be actively harmful.
    
    (2) The error-handling is a bit non-standard. We ignored errors in
    suspend(), but handled errors in resume(). And recently, people noticed
    that the clk handling is unbalanced in error paths, and getting *that*
    right is not actually trivial, given the current way errors are mostly
    ignored.
    
    (3) In the particular way analogix_dp_{suspend,resume}() get used (e.g.,
    in rockchip_dp_*(), as a late/early callback), we don't necessarily have
    a proper PM relationship between the DP/bridge device and the panel
    device. So while the DP bridge gets resumed, the panel's parent device
    (e.g., platform_device) may still be suspended, and so any prepare()
    calls may fail.
    
    So remove the superfluous, possibly-harmful suspend()/resume() handling
    of panel state.
    
    Fixes: 211f276ed3d9 ("drm: bridge: analogix/dp: add panel prepare/unprepare in suspend/resume time")
    Link: https://lore.kernel.org/all/Yv2CPBD3Picg%2FgVe@google.com/
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220822180729.1.I8ac5abe3a4c1c6fd5c061686c6e883c22f69022c@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bde7795794f46183c5eb23a9a7164c144d0178c3
Author: Francesco Dolcini <francesco.dolcini@toradex.com>
Date:   Thu Sep 22 14:43:05 2022 +0200

    drm/bridge: lt8912b: fix corrupted image output
    
    [ Upstream commit 051ad2788d35ca07aec8402542e5d38429f2426a ]
    
    Correct I2C address for the register list in lt8912_write_lvds_config(),
    these registers are on the first I2C address (0x48), the current
    function is just writing garbage to the wrong registers and this creates
    multiple issues (artifacts and output completely corrupted) on some HDMI
    displays.
    
    Correct I2C address comes from Lontium documentation and it is the one
    used on other out-of-tree LT8912B drivers [1].
    
    [1] https://github.com/boundarydevices/linux/blob/boundary-imx_5.10.x_2.0.0/drivers/video/lt8912.c#L296
    
    Fixes: 30e2ae943c26 ("drm/bridge: Introduce LT8912B DSI to HDMI bridge")
    Signed-off-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Signed-off-by: Philippe Schenker <philippe.schenker@toradex.com>
    Acked-by: Adrien Grassein <adrien.grassein@gmail.com>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220922124306.34729-4-dev@pschenker.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e103b0e83991f68f2ea68688b87e911b500820a2
Author: Philippe Schenker <philippe.schenker@toradex.com>
Date:   Thu Sep 22 14:43:04 2022 +0200

    drm/bridge: lt8912b: set hdmi or dvi mode
    
    [ Upstream commit 6dd1de12e1243f2013e4fabf31e99e63b1a860d0 ]
    
    The Lontium LT8912 does have a setting for DVI or HDMI. This patch reads
    from EDID what the display needs and sets it accordingly.
    
    Fixes: 30e2ae943c26 ("drm/bridge: Introduce LT8912B DSI to HDMI bridge")
    Signed-off-by: Philippe Schenker <philippe.schenker@toradex.com>
    Acked-by: Adrien Grassein <adrien.grassein@gmail.com>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220922124306.34729-3-dev@pschenker.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 473f653a86eea6147725009bb7fdf987b3340c7e
Author: Philippe Schenker <philippe.schenker@toradex.com>
Date:   Thu Sep 22 14:43:03 2022 +0200

    drm/bridge: lt8912b: add vsync hsync
    
    [ Upstream commit da73a94fa282f78d485bd0aab36c8ac15b6f792c ]
    
    Currently the bridge driver does not take care whether or not the display
    needs positive/negative vertical/horizontal syncs. Pass these two flags
    to the bridge from the EDID that was read out from the display.
    
    Fixes: 30e2ae943c26 ("drm/bridge: Introduce LT8912B DSI to HDMI bridge")
    Signed-off-by: Philippe Schenker <philippe.schenker@toradex.com>
    Acked-by: Adrien Grassein <adrien.grassein@gmail.com>
    Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220922124306.34729-2-dev@pschenker.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a12105d9d4ff60cee579192ba17fa05861714d3
Author: Martin Povišer <povik+lin@cutebit.org>
Date:   Mon Sep 19 19:34:53 2022 +0200

    ASoC: tas2770: Reinit regcache on reset
    
    [ Upstream commit 0a0342ede303fc420f3a388e1ae82da3ae8ff6bd ]
    
    On probe of the ASoC component, the device is reset but the regcache is
    retained. This means the regcache gets out of sync if the codec is
    rebound to a sound card for a second time. Fix it by reinitializing the
    regcache to defaults after the device is reset.
    
    Fixes: b0bcbe615756 ("ASoC: tas2770: Fix calling reset in probe")
    Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
    Link: https://lore.kernel.org/r/20220919173453.84292-1-povik+lin@cutebit.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75ef73d7d2b3f8638880dd4be9800282aa80077c
Author: Johan Hovold <johan+linaro@kernel.org>
Date:   Fri Sep 16 11:36:03 2022 +0200

    arm64: dts: qcom: sm8350: fix UFS PHY serdes size
    
    [ Upstream commit 40e9541959100e017533e18e44d07eed44f91dc5 ]
    
    The size of the UFS PHY serdes register region is 0x1c4 and the
    corresponding 'reg' property should specifically not include the
    adjacent regions that are defined in the child node (e.g. tx and rx).
    
    Fixes: 59c7cf814783 ("arm64: dts: qcom: sm8350: Add UFS nodes")
    Signed-off-by: Johan Hovold <johan+linaro@kernel.org>
    Signed-off-by: Bjorn Andersson <andersson@kernel.org>
    Link: https://lore.kernel.org/r/20220916093603.24263-1-johan+linaro@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5664dc84fc2ea32d5890a77f0e77ddb7e442e2dc
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Tue Sep 13 17:00:01 2022 +0800

    ASoC: imx-card: Fix refcount issue with of_node_put
    
    [ Upstream commit d56ba9a04d7548d4149c46ec86a0e3cc41a70f4a ]
    
    imx_card_parse_of will search all the node with loop,
    if there is defer probe happen in the middle of loop,
    the previous released codec node will be released
    twice, then cause refcount issue.
    
    Here assign NULL to pointer of released nodes to fix
    the issue.
    
    Fixes: aa736700f42f ("ASoC: imx-card: Add imx-card machine driver")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1663059601-29259-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 367403bc1cfe953a560e7764c3f288b858bc707a
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:43 2022 -0500

    soc: sunxi: sram: Fix debugfs info for A64 SRAM C
    
    [ Upstream commit e3c95edb1bd8b9c2cb0caa6ae382fc8080f6a0ed ]
    
    The labels were backward with respect to the register values. The SRAM
    is mapped to the CPU when the register value is 1.
    
    Fixes: 5e4fb6429761 ("drivers: soc: sunxi: add support for A64 and its SRAM C")
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-7-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68d2f42cf4f62db035e5a35c8819d7c38de1d147
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:42 2022 -0500

    soc: sunxi: sram: Fix probe function ordering issues
    
    [ Upstream commit 49fad91a7b8941979c3e9a35f9894ac45bc5d3d6 ]
    
    Errors from debugfs are intended to be non-fatal, and should not prevent
    the driver from probing.
    
    Since debugfs file creation is treated as infallible, move it below the
    parts of the probe function that can fail. This prevents an error
    elsewhere in the probe function from causing the file to leak. Do the
    same for the call to of_platform_populate().
    
    Finally, checkpatch suggests an octal literal for the file permissions.
    
    Fixes: 4af34b572a85 ("drivers: soc: sunxi: Introduce SoC driver to map SRAMs")
    Fixes: 5828729bebbb ("soc: sunxi: export a regmap for EMAC clock reg on A64")
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-6-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f82b52900783c708fdd89579a627253fc59d8d8
Author: Cai Huoqing <cai.huoqing@linux.dev>
Date:   Wed Sep 8 15:17:15 2021 +0800

    soc: sunxi_sram: Make use of the helper function devm_platform_ioremap_resource()
    
    [ Upstream commit 1f3753a5f042fea6539986f9caf2552877527d8a ]
    
    Use the devm_platform_ioremap_resource() helper instead of
    calling platform_get_resource() and devm_ioremap_resource()
    separately
    
    Signed-off-by: Cai Huoqing <caihuoqing@baidu.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20210908071716.772-1-caihuoqing@baidu.com
    Stable-dep-of: 49fad91a7b89 ("soc: sunxi: sram: Fix probe function ordering issues")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 861adc2b203728bd1c8c7a4a67d0ab655c975d85
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:41 2022 -0500

    soc: sunxi: sram: Prevent the driver from being unbound
    
    [ Upstream commit 90e10a1fcd9b24b4ba8c0d35136127473dcd829e ]
    
    This driver exports a regmap tied to the platform device (as opposed to
    a syscon, which exports a regmap tied to the OF node). Because of this,
    the driver can never be unbound, as that would destroy the regmap. Use
    builtin_platform_driver_probe() to enforce this limitation.
    
    Fixes: 5828729bebbb ("soc: sunxi: export a regmap for EMAC clock reg on A64")
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-5-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b07378ebe43a001d928d6704d0e49215ba81a95
Author: Samuel Holland <samuel@sholland.org>
Date:   Sun Aug 14 23:12:40 2022 -0500

    soc: sunxi: sram: Actually claim SRAM regions
    
    [ Upstream commit fd362baad2e659ef0fb5652f023a606b248f1781 ]
    
    sunxi_sram_claim() checks the sram_desc->claimed flag before updating
    the register, with the intent that only one device can claim a region.
    However, this was ineffective because the flag was never set.
    
    Fixes: 4af34b572a85 ("drivers: soc: sunxi: Introduce SoC driver to map SRAMs")
    Reviewed-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://lore.kernel.org/r/20220815041248.53268-4-samuel@sholland.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d50e0e2f3d94e71bc74536f23476cca423943aa6
Author: Romain Naour <romain.naour@skf.com>
Date:   Tue Aug 23 09:27:42 2022 +0200

    ARM: dts: am5748: keep usb4_tm disabled
    
    [ Upstream commit 6a6d9ecff14a2a46c1deeffa3eb3825349639bdd ]
    
    Commit bcbb63b80284 ("ARM: dts: dra7: Separate AM57 dtsi files")
    disabled usb4_tm for am5748 devices since USB4 IP is not present
    in this SoC.
    
    The commit log explained the difference between AM5 and DRA7 families:
    
    AM5 and DRA7 SoC families have different set of modules in them so the
    SoC sepecific dtsi files need to be separated.
    
    e.g. Some of the major differences between AM576 and DRA76
    
                    DRA76x  AM576x
    
    USB3            x
    USB4            x
    ATL             x
    VCP             x
    MLB             x
    ISS             x
    PRU-ICSS1               x
    PRU-ICSS2               x
    
    Then commit 176f26bcd41a ("ARM: dts: Add support for dra762 abz
    package") removed usb4_tm part from am5748.dtsi and introcuded new
    ti-sysc errors in dmesg:
    
    ti-sysc 48940000.target-module: clock get error for fck: -2
    ti-sysc: probe of 48940000.target-module failed with error -2
    
    Fixes: 176f26bcd41a ("ARM: dts: Add support for dra762 abz package")
    
    Signed-off-by: Romain Naour <romain.naour@skf.com>
    Signed-off-by: Romain Naour <romain.naour@smile.fr>
    Message-Id: <20220823072742.351368-1-romain.naour@smile.fr>
    Reviewed-by: Roger Quadros <rogerq@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c48e3db1df25ca228d0013558511e078957935a1
Author: Richard Zhu <hongxing.zhu@nxp.com>
Date:   Tue Aug 30 15:46:01 2022 +0800

    reset: imx7: Fix the iMX8MP PCIe PHY PERST support
    
    [ Upstream commit 051d9eb403887bb11852b7a4f744728a6a4b1b58 ]
    
    On i.MX7/iMX8MM/iMX8MQ, the initialized default value of PERST bit(BIT3)
    of SRC_PCIEPHY_RCR is 1b'1.
    But i.MX8MP has one inversed default value 1b'0 of PERST bit.
    
    And the PERST bit should be kept 1b'1 after power and clocks are stable.
    So fix the i.MX8MP PCIe PHY PERST support here.
    
    Fixes: e08672c03981 ("reset: imx7: Add support for i.MX8MP SoC")
    Signed-off-by: Richard Zhu <hongxing.zhu@nxp.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Tested-by: Marek Vasut <marex@denx.de>
    Tested-by: Richard Leitner <richard.leitner@skidata.com>
    Tested-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Link: https://lore.kernel.org/r/1661845564-11373-5-git-send-email-hongxing.zhu@nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6062291012900d2db9798b43eb522bd33a6fe91b
Author: YuTong Chang <mtwget@gmail.com>
Date:   Mon Jun 20 05:41:46 2022 -0700

    ARM: dts: am33xx: Fix MMCHS0 dma properties
    
    [ Upstream commit 2eb502f496f7764027b7958d4e74356fed918059 ]
    
    According to technical manual(table 11-24), the DMA of MMCHS0 should be
    direct mapped.
    
    Fixes: b5e509066074 ("ARM: DTS: am33xx: Use the new DT bindings for the eDMA3")
    Signed-off-by: YuTong Chang <mtwget@gmail.com>
    Message-Id: <20220620124146.5330-1-mtwget@gmail.com>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfe5dc2101ba014bd4937b76a4b02e7f8aa8f816
Author: Tianyu Lan <Tianyu.Lan@microsoft.com>
Date:   Tue May 10 10:21:09 2022 -0400

    swiotlb: max mapping size takes min align mask into account
    
    commit 82806744fd7dde603b64c151eeddaa4ee62193fd upstream.
    
    swiotlb_find_slots() skips slots according to io tlb aligned mask
    calculated from min aligned mask and original physical address
    offset. This affects max mapping size. The mapping size can't
    achieve the IO_TLB_SEGSIZE * IO_TLB_SIZE when original offset is
    non-zero. This will cause system boot up failure in Hyper-V
    Isolation VM where swiotlb force is enabled. Scsi layer use return
    value of dma_max_mapping_size() to set max segment size and it
    finally calls swiotlb_max_mapping_size(). Hyper-V storage driver
    sets min align mask to 4k - 1. Scsi layer may pass 256k length of
    request buffer with 0~4k offset and Hyper-V storage driver can't
    get swiotlb bounce buffer via DMA API. Swiotlb_find_slots() can't
    find 256k length bounce buffer with offset. Make swiotlb_max_mapping
    _size() take min align mask into account.
    
    Signed-off-by: Tianyu Lan <Tianyu.Lan@microsoft.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Rishabh Bhatnagar <risbhat@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6a3b6b11ac0f6edeab66c6b4fb7650108e17a94
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Mon Mar 21 08:33:56 2022 +0000

    media: v4l2-compat-ioctl32.c: zero buffer passed to v4l2_compat_get_array_args()
    
    commit 4e768c8e34e639cff66a0f175bc4aebf472e4305 upstream.
    
    The v4l2_compat_get_array_args() function can leave uninitialized memory in the
    buffer it is passed. So zero it before copying array elements from userspace
    into the buffer.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: syzbot+ff18193ff05f3f87f226@syzkaller.appspotmail.com
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab9d32844742f7803fdf739301480090e9dc9565
Author: Nicolas Dufresne <nicolas.dufresne@collabora.com>
Date:   Fri Jun 10 13:52:11 2022 +0100

    media: rkvdec: Disable H.264 error detection
    
    commit 3a99c4474112f49a5459933d8758614002ca0ddc upstream.
    
    Quite often, the HW get stuck in error condition if a stream error
    was detected. As documented, the HW should stop immediately and self
    reset. There is likely a problem or a miss-understanding of the self
    reset mechanism, as unless we make a long pause, the next command
    will then report an error even if there is no error in it.
    
    Disabling error detection fixes the issue, and let the decoder continue
    after an error. This patch is safe for backport into older kernels.
    
    Fixes: cd33c830448b ("media: rkvdec: Add the rkvdec driver")
    Signed-off-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Tested-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69379139ed780d6fdfac25a95bc4665786d0bcc5
Author: Hangyu Hua <hbh25y@gmail.com>
Date:   Thu May 19 03:17:43 2022 +0100

    media: dvb_vb2: fix possible out of bound access
    
    commit 37238699073e7e93f05517e529661151173cd458 upstream.
    
    vb2_core_qbuf and vb2_core_querybuf don't check the range of b->index
    controlled by the user.
    
    Fix this by adding range checking code before using them.
    
    Fixes: 57868acc369a ("media: videobuf2: Add new uAPI for DVB streaming I/O")
    Signed-off-by: Hangyu Hua <hbh25y@gmail.com>
    Reviewed-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6287c9e00595e19f6097309d80592980d933bd50
Author: Shuai Xue <xueshuai@linux.alibaba.com>
Date:   Wed Sep 14 14:49:35 2022 +0800

    mm,hwpoison: check mm when killing accessing process
    
    commit 77677cdbc2aa4b5d5d839562793d3d126201d18d upstream.
    
    The GHES code calls memory_failure_queue() from IRQ context to queue work
    into workqueue and schedule it on the current CPU.  Then the work is
    processed in memory_failure_work_func() by kworker and calls
    memory_failure().
    
    When a page is already poisoned, commit a3f5d80ea401 ("mm,hwpoison: send
    SIGBUS with error virutal address") make memory_failure() call
    kill_accessing_process() that:
    
        - holds mmap locking of current->mm
        - does pagetable walk to find the error virtual address
        - and sends SIGBUS to the current process with error info.
    
    However, the mm of kworker is not valid, resulting in a null-pointer
    dereference.  So check mm when killing the accessing process.
    
    [akpm@linux-foundation.org: remove unrelated whitespace alteration]
    Link: https://lkml.kernel.org/r/20220914064935.7851-1-xueshuai@linux.alibaba.com
    Fixes: a3f5d80ea401 ("mm,hwpoison: send SIGBUS with error virutal address")
    Signed-off-by: Shuai Xue <xueshuai@linux.alibaba.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Acked-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Baolin Wang <baolin.wang@linux.alibaba.com>
    Cc: Bixuan Cui <cuibixuan@linux.alibaba.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9aed3d8a0298a5391a1d6611a753c98d221f599
Author: Minchan Kim <minchan@kernel.org>
Date:   Thu Sep 8 08:12:04 2022 -0700

    mm: fix madivse_pageout mishandling on non-LRU page
    
    commit 58d426a7ba92870d489686dfdb9d06b66815a2ab upstream.
    
    MADV_PAGEOUT tries to isolate non-LRU pages and gets a warning from
    isolate_lru_page below.
    
    Fix it by checking PageLRU in advance.
    
    ------------[ cut here ]------------
    trying to isolate tail page
    WARNING: CPU: 0 PID: 6175 at mm/folio-compat.c:158 isolate_lru_page+0x130/0x140
    Modules linked in:
    CPU: 0 PID: 6175 Comm: syz-executor.0 Not tainted 5.18.12 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    RIP: 0010:isolate_lru_page+0x130/0x140
    
    Link: https://lore.kernel.org/linux-mm/485f8c33.2471b.182d5726afb.Coremail.hantianshuo@iie.ac.cn/
    Link: https://lkml.kernel.org/r/20220908151204.762596-1-minchan@kernel.org
    Fixes: 1a4e58cce84e ("mm: introduce MADV_PAGEOUT")
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Reported-by: 韩天ç` <hantianshuo@iie.ac.cn>
    Suggested-by: Yang Shi <shy828301@gmail.com>
    Acked-by: Yang Shi <shy828301@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1299c11988783d84fff70d6b8a2279ca2d070c8b
Author: Alistair Popple <apopple@nvidia.com>
Date:   Fri Sep 2 10:35:51 2022 +1000

    mm/migrate_device.c: flush TLB while holding PTL
    
    commit 60bae73708963de4a17231077285bd9ff2f41c44 upstream.
    
    When clearing a PTE the TLB should be flushed whilst still holding the PTL
    to avoid a potential race with madvise/munmap/etc.  For example consider
    the following sequence:
    
      CPU0                          CPU1
      ----                          ----
    
      migrate_vma_collect_pmd()
      pte_unmap_unlock()
                                    madvise(MADV_DONTNEED)
                                    -> zap_pte_range()
                                    pte_offset_map_lock()
                                    [ PTE not present, TLB not flushed ]
                                    pte_unmap_unlock()
                                    [ page is still accessible via stale TLB ]
      flush_tlb_range()
    
    In this case the page may still be accessed via the stale TLB entry after
    madvise returns.  Fix this by flushing the TLB while holding the PTL.
    
    Fixes: 8c3328f1f36a ("mm/migrate: migrate_vma() unmap page from vma while collecting pages")
    Link: https://lkml.kernel.org/r/9f801e9d8d830408f2ca27821f606e09aa856899.1662078528.git-series.apopple@nvidia.com
    Signed-off-by: Alistair Popple <apopple@nvidia.com>
    Reported-by: Nadav Amit <nadav.amit@gmail.com>
    Reviewed-by: "Huang, Ying" <ying.huang@intel.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Peter Xu <peterx@redhat.com>
    Cc: Alex Sierra <alex.sierra@amd.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Felix Kuehling <Felix.Kuehling@amd.com>
    Cc: huang ying <huang.ying.caritas@gmail.com>
    Cc: Jason Gunthorpe <jgg@nvidia.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Karol Herbst <kherbst@redhat.com>
    Cc: Logan Gunthorpe <logang@deltatee.com>
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Paul Mackerras <paulus@ozlabs.org>
    Cc: Ralph Campbell <rcampbell@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e858f7ac7395c6016065d2bdaba469013c3313e0
Author: Binyi Han <dantengknight@gmail.com>
Date:   Sun Sep 4 00:46:47 2022 -0700

    mm: fix dereferencing possible ERR_PTR
    
    commit 4eb5bbde3ccb710d3b85bfb13466612e56393369 upstream.
    
    Smatch checker complains that 'secretmem_mnt' dereferencing possible
    ERR_PTR().  Let the function return if 'secretmem_mnt' is ERR_PTR, to
    avoid deferencing it.
    
    Link: https://lkml.kernel.org/r/20220904074647.GA64291@cloud-MacBookPro
    Fixes: 1507f51255c9f ("mm: introduce memfd_secret system call to create "secret" memory areas")
    Signed-off-by: Binyi Han <dantengknight@gmail.com>
    Reviewed-by: Andrew Morton <akpm@linux-foudation.org>
    Cc: Mike Rapoport <rppt@kernel.org>
    Cc: Ammar Faizi <ammarfaizi2@gnuweeb.org>
    Cc: Hagen Paul Pfeifer <hagen@jauu.net>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d75ce115625ebd09c98e2309f0643654ff9a79b0
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Fri Jul 15 14:50:13 2022 +0200

    mm: prevent page_frag_alloc() from corrupting the memory
    
    commit dac22531bbd4af2426c4e29e05594415ccfa365d upstream.
    
    A number of drivers call page_frag_alloc() with a fragment's size >
    PAGE_SIZE.
    
    In low memory conditions, __page_frag_cache_refill() may fail the order
    3 cache allocation and fall back to order 0; In this case, the cache
    will be smaller than the fragment, causing memory corruptions.
    
    Prevent this from happening by checking if the newly allocated cache is
    large enough for the fragment; if not, the allocation will fail and
    page_frag_alloc() will return NULL.
    
    Link: https://lkml.kernel.org/r/20220715125013.247085-1-mlombard@redhat.com
    Fixes: b63ae8ca096d ("mm/net: Rename and move page fragment handling from net/ to mm/")
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Cc: Chen Lin <chen45464546@163.com>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23d17e2b04c7e955baa19fc71009596161702a32
Author: Mel Gorman <mgorman@techsingularity.net>
Date:   Wed Aug 24 12:14:50 2022 +0100

    mm/page_alloc: fix race condition between build_all_zonelists and page allocation
    
    commit 3d36424b3b5850bd92f3e89b953a430d7cfc88ef upstream.
    
    Patrick Daly reported the following problem;
    
            NODE_DATA(nid)->node_zonelists[ZONELIST_FALLBACK] - before offline operation
            [0] - ZONE_MOVABLE
            [1] - ZONE_NORMAL
            [2] - NULL
    
            For a GFP_KERNEL allocation, alloc_pages_slowpath() will save the
            offset of ZONE_NORMAL in ac->preferred_zoneref. If a concurrent
            memory_offline operation removes the last page from ZONE_MOVABLE,
            build_all_zonelists() & build_zonerefs_node() will update
            node_zonelists as shown below. Only populated zones are added.
    
            NODE_DATA(nid)->node_zonelists[ZONELIST_FALLBACK] - after offline operation
            [0] - ZONE_NORMAL
            [1] - NULL
            [2] - NULL
    
    The race is simple -- page allocation could be in progress when a memory
    hot-remove operation triggers a zonelist rebuild that removes zones.  The
    allocation request will still have a valid ac->preferred_zoneref that is
    now pointing to NULL and triggers an OOM kill.
    
    This problem probably always existed but may be slightly easier to trigger
    due to 6aa303defb74 ("mm, vmscan: only allocate and reclaim from zones
    with pages managed by the buddy allocator") which distinguishes between
    zones that are completely unpopulated versus zones that have valid pages
    not managed by the buddy allocator (e.g.  reserved, memblock, ballooning
    etc).  Memory hotplug had multiple stages with timing considerations
    around managed/present page updates, the zonelist rebuild and the zone
    span updates.  As David Hildenbrand puts it
    
            memory offlining adjusts managed+present pages of the zone
            essentially in one go. If after the adjustments, the zone is no
            longer populated (present==0), we rebuild the zone lists.
    
            Once that's done, we try shrinking the zone (start+spanned
            pages) -- which results in zone_start_pfn == 0 if there are no
            more pages. That happens *after* rebuilding the zonelists via
            remove_pfn_range_from_zone().
    
    The only requirement to fix the race is that a page allocation request
    identifies when a zonelist rebuild has happened since the allocation
    request started and no page has yet been allocated.  Use a seqlock_t to
    track zonelist updates with a lockless read-side of the zonelist and
    protecting the rebuild and update of the counter with a spinlock.
    
    [akpm@linux-foundation.org: make zonelist_update_seq static]
    Link: https://lkml.kernel.org/r/20220824110900.vh674ltxmzb3proq@techsingularity.net
    Fixes: 6aa303defb74 ("mm, vmscan: only allocate and reclaim from zones with pages managed by the buddy allocator")
    Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
    Reported-by: Patrick Daly <quic_pdaly@quicinc.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: <stable@vger.kernel.org>    [4.9+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fec2db7a434a49d2416a796316aa74f54f1d8ddc
Author: Wenchao Chen <wenchao.chen@unisoc.com>
Date:   Fri Sep 16 17:05:06 2022 +0800

    mmc: hsq: Fix data stomping during mmc recovery
    
    commit e7afa79a3b35a27a046a2139f8b20bd6b98155c2 upstream.
    
    The block device uses multiple queues to access emmc. There will be up to 3
    requests in the hsq of the host. The current code will check whether there
    is a request doing recovery before entering the queue, but it will not check
    whether there is a request when the lock is issued. The request is in recovery
    mode. If there is a request in recovery, then a read and write request is
    initiated at this time, and the conflict between the request and the recovery
    request will cause the data to be trampled.
    
    Signed-off-by: Wenchao Chen <wenchao.chen@unisoc.com>
    Fixes: 511ce378e16f ("mmc: Add MMC host software queue support")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220916090506.10662-1-wenchao.chen666@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fef6e1fe07c86f6abf8b97929aeb12e41122869
Author: Sergei Antonov <saproj@gmail.com>
Date:   Wed Sep 7 23:57:53 2022 +0300

    mmc: moxart: fix 4-bit bus width and remove 8-bit bus width
    
    commit 35ca91d1338ae158f6dcc0de5d1e86197924ffda upstream.
    
    According to the datasheet [1] at page 377, 4-bit bus width is turned on by
    bit 2 of the Bus Width Register. Thus the current bitmask is wrong: define
    BUS_WIDTH_4 BIT(1)
    
    BIT(1) does not work but BIT(2) works. This has been verified on real MOXA
    hardware with FTSDC010 controller revision 1_6_0.
    
    The corrected value of BUS_WIDTH_4 mask collides with: define BUS_WIDTH_8
    BIT(2). Additionally, 8-bit bus width mode isn't supported according to the
    datasheet, so let's remove the corresponding code.
    
    [1]
    https://bitbucket.org/Kasreyn/mkrom-uc7112lx/src/master/documents/FIC8120_DS_v1.2.pdf
    
    Fixes: 1b66e94e6b99 ("mmc: moxart: Add MOXA ART SD/MMC driver")
    Signed-off-by: Sergei Antonov <saproj@gmail.com>
    Cc: Jonas Jensen <jonas.jensen@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220907205753.1577434-1-saproj@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f75d0cacd65bb4343552cd46ca1e5faa1688cc4
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Mon Sep 26 18:38:09 2022 +0000

    libata: add ATA_HORKAGE_NOLPM for Pioneer BDR-207M and BDR-205
    
    commit ea08aec7e77bfd6599489ec430f9f859ab84575a upstream.
    
    Commit 1527f69204fe ("ata: ahci: Add Green Sardine vendor ID as
    board_ahci_mobile") added an explicit entry for AMD Green Sardine
    AHCI controller using the board_ahci_mobile configuration (this
    configuration has later been renamed to board_ahci_low_power).
    
    The board_ahci_low_power configuration enables support for low power
    modes.
    
    This explicit entry takes precedence over the generic AHCI controller
    entry, which does not enable support for low power modes.
    
    Therefore, when commit 1527f69204fe ("ata: ahci: Add Green Sardine
    vendor ID as board_ahci_mobile") was backported to stable kernels,
    it make some Pioneer optical drives, which was working perfectly fine
    before the commit was backported, stop working.
    
    The real problem is that the Pioneer optical drives do not handle low
    power modes correctly. If these optical drives would have been tested
    on another AHCI controller using the board_ahci_low_power configuration,
    this issue would have been detected earlier.
    
    Unfortunately, the board_ahci_low_power configuration is only used in
    less than 15% of the total AHCI controller entries, so many devices
    have never been tested with an AHCI controller with low power modes.
    
    Fixes: 1527f69204fe ("ata: ahci: Add Green Sardine vendor ID as board_ahci_mobile")
    Cc: stable@vger.kernel.org
    Reported-by: Jaap Berkhout <j.j.berkhout@staalenberk.nl>
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc248ddf41eab4566e95b1ee2433c8a5134ad94a
Author: Maxime Coquelin <maxime.coquelin@redhat.com>
Date:   Wed Aug 31 17:49:23 2022 +0200

    vduse: prevent uninitialized memory accesses
    
    commit 46f8a29272e51b6df7393d58fc5cb8967397ef2b upstream.
    
    If the VDUSE application provides a smaller config space
    than the driver expects, the driver may use uninitialized
    memory from the stack.
    
    This patch prevents it by initializing the buffer passed by
    the driver to store the config value.
    
    This fix addresses CVE-2022-2308.
    
    Cc: stable@vger.kernel.org # v5.15+
    Fixes: c8a6153b6c59 ("vduse: Introduce VDUSE - vDPA Device in Userspace")
    Reviewed-by: Xie Yongji <xieyongji@bytedance.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Maxime Coquelin <maxime.coquelin@redhat.com>
    Message-Id: <20220831154923.97809-1-maxime.coquelin@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea774829699a030c337c35ea94542e3eca1c5a0a
Author: Bokun Zhang <Bokun.Zhang@amd.com>
Date:   Wed Sep 28 00:30:04 2022 +0800

    drm/amdgpu: Add amdgpu suspend-resume code path under SRIOV
    
    commit 3b7329cf5a767c1be38352d43066012e220ad43c upstream.
    
    - Under SRIOV, we need to send REQ_GPU_FINI to the hypervisor
      during the suspend time. Furthermore, we cannot request a
      mode 1 reset under SRIOV as VF. Therefore, we will skip it
      as it is called in suspend_noirq() function.
    
    - In the resume code path, we need to send REQ_GPU_INIT to the
      hypervisor and also resume PSP IP block under SRIOV.
    
    Signed-off-by: Bokun Zhang <Bokun.Zhang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25759a7bc1f4f9903c067d2e657116ce6bf27b77
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Sep 21 15:52:58 2022 +0200

    drm/i915/gt: Restrict forced preemption to the active context
    
    commit 6ef7d362123ecb5bf6d163bb9c7fd6ba2d8c968c upstream.
    
    When we submit a new pair of contexts to ELSP for execution, we start a
    timer by which point we expect the HW to have switched execution to the
    pending contexts. If the promotion to the new pair of contexts has not
    occurred, we declare the executing context to have hung and force the
    preemption to take place by resetting the engine and resubmitting the
    new contexts.
    
    This can lead to an unfair situation where almost all of the preemption
    timeout is consumed by the first context which just switches into the
    second context immediately prior to the timer firing and triggering the
    preemption reset (assuming that the timer interrupts before we process
    the CS events for the context switch). The second context hasn't yet had
    a chance to yield to the incoming ELSP (and send the ACk for the
    promotion) and so ends up being blamed for the reset.
    
    If we see that a context switch has occurred since setting the
    preemption timeout, but have not yet received the ACK for the ELSP
    promotion, rearm the preemption timer and check again. This is
    especially significant if the first context was not schedulable and so
    we used the shortest timer possible, greatly increasing the chance of
    accidentally blaming the second innocent context.
    
    Fixes: 3a7a92aba8fb ("drm/i915/execlists: Force preemption")
    Fixes: d12acee84ffb ("drm/i915/execlists: Cancel banned contexts on schedule-out")
    Reported-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: Andi Shyti <andi.shyti@linux.intel.com>
    Reviewed-by: Andrzej Hajda <andrzej.hajda@intel.com>
    Tested-by: Andrzej Hajda <andrzej.hajda@intel.com>
    Cc: <stable@vger.kernel.org> # v5.5+
    Signed-off-by: Andi Shyti <andi.shyti@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220921135258.1714873-1-andrzej.hajda@intel.com
    (cherry picked from commit 107ba1a2c705f4358f2602ec2f2fd821bb651f42)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0f576335d052e32773f593d2fb72dc80a5fb147
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Mon Sep 19 14:20:33 2022 +0200

    Revert "firmware: arm_scmi: Add clock management to the SCMI power domain"
    
    commit 3c6656337852e9f1a4079d172f3fddfbf00868f9 upstream.
    
    This reverts commit a3b884cef873 ("firmware: arm_scmi: Add clock management
    to the SCMI power domain").
    
    Using the GENPD_FLAG_PM_CLK tells genpd to gate/ungate the consumer
    device's clock(s) during runtime suspend/resume through the PM clock API.
    More precisely, in genpd_runtime_resume() the clock(s) for the consumer
    device would become ungated prior to the driver-level ->runtime_resume()
    callbacks gets invoked.
    
    This behaviour isn't a good fit for all platforms/drivers. For example, a
    driver may need to make some preparations of its device in its
    ->runtime_resume() callback, like calling clk_set_rate() before the
    clock(s) should be ungated. In these cases, it's easier to let the clock(s)
    to be managed solely by the driver, rather than at the PM domain level.
    
    For these reasons, let's drop the use GENPD_FLAG_PM_CLK for the SCMI PM
    domain, as to enable it to be more easily adopted across ARM platforms.
    
    Fixes: a3b884cef873 ("firmware: arm_scmi: Add clock management to the SCMI power domain")
    Cc: Nicolas Pitre <npitre@baylibre.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Tested-by: Peng Fan <peng.fan@nxp.com>
    Acked-by: Sudeep Holla <sudeep.holla@arm.com>
    Link: https://lore.kernel.org/r/20220919122033.86126-1-ulf.hansson@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5de02ab84aeca765da0e4d8e999af35325ac67c2
Author: Alexander Couzens <lynxis@fe80.eu>
Date:   Sat Sep 17 02:07:33 2022 +0200

    net: mt7531: only do PLL once after the reset
    
    commit 42bc4fafe359ed6b73602b7a2dba0dd99588f8ce upstream.
    
    Move the PLL init of the switch out of the pad configuration of the port
    6 (usally cpu port).
    
    Fix a unidirectional 100 mbit limitation on 1 gbit or 2.5 gbit links for
    outbound traffic on port 5 or port 6.
    
    Fixes: c288575f7810 ("net: dsa: mt7530: Add the support of MT7531 switch")
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexander Couzens <lynxis@fe80.eu>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56e3f8d56299217a26917dcc0142ea7be7776861
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Sep 2 19:11:49 2022 +0000

    mm/damon/dbgfs: fix memory leak when using debugfs_lookup()
    
    commit 1552fd3ef7dbe07208b8ae84a0a6566adf7dfc9d upstream.
    
    When calling debugfs_lookup() the result must have dput() called on it,
    otherwise the memory will leak over time.  Fix this up by properly calling
    dput().
    
    Link: https://lkml.kernel.org/r/20220902191149.112434-1-sj@kernel.org
    Fixes: 75c1c2b53c78b ("mm/damon/dbgfs: support multiple contexts")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: SeongJae Park <sj@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 149da9e60b8cefbfc4d8461c1103d14067f11ef4
Author: ChenXiaoSong <chenxiaosong2@huawei.com>
Date:   Tue Aug 9 14:47:30 2022 +0800

    ntfs: fix BUG_ON in ntfs_lookup_inode_by_name()
    
    commit 1b513f613731e2afc05550e8070d79fac80c661e upstream.
    
    Syzkaller reported BUG_ON as follows:
    
    ------------[ cut here ]------------
    kernel BUG at fs/ntfs/dir.c:86!
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI
    CPU: 3 PID: 758 Comm: a.out Not tainted 5.19.0-next-20220808 #5
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014
    RIP: 0010:ntfs_lookup_inode_by_name+0xd11/0x2d10
    Code: ff e9 b9 01 00 00 e8 1e fe d6 fe 48 8b 7d 98 49 8d 5d 07 e8 91 85 29 ff 48 c7 45 98 00 00 00 00 e9 5a fb ff ff e8 ff fd d6 fe <0f> 0b e8 f8 fd d6 fe 0f 0b e8 f1 fd d6 fe 48 8b b5 50 ff ff ff 4c
    RSP: 0018:ffff888079607978 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: 0000000000008000 RCX: 0000000000000000
    RDX: ffff88807cf10000 RSI: ffffffff82a4a081 RDI: 0000000000000003
    RBP: ffff888079607a70 R08: 0000000000000001 R09: ffff88807a6d01d7
    R10: ffffed100f4da03a R11: 0000000000000000 R12: ffff88800f0fb110
    R13: ffff88800f0ee000 R14: ffff88800f0fb000 R15: 0000000000000001
    FS:  00007f33b63c7540(0000) GS:ffff888108580000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f33b635c090 CR3: 000000000f39e005 CR4: 0000000000770ee0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
     <TASK>
     load_system_files+0x1f7f/0x3620
     ntfs_fill_super+0xa01/0x1be0
     mount_bdev+0x36a/0x440
     ntfs_mount+0x3a/0x50
     legacy_get_tree+0xfb/0x210
     vfs_get_tree+0x8f/0x2f0
     do_new_mount+0x30a/0x760
     path_mount+0x4de/0x1880
     __x64_sys_mount+0x2b3/0x340
     do_syscall_64+0x38/0x90
     entry_SYSCALL_64_after_hwframe+0x63/0xcd
    RIP: 0033:0x7f33b62ff9ea
    Code: 48 8b 0d a9 f4 0b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 76 f4 0b 00 f7 d8 64 89 01 48
    RSP: 002b:00007ffd0c471aa8 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f33b62ff9ea
    RDX: 0000000020000000 RSI: 0000000020000100 RDI: 00007ffd0c471be0
    RBP: 00007ffd0c471c60 R08: 00007ffd0c471ae0 R09: 00007ffd0c471c24
    R10: 0000000000000000 R11: 0000000000000202 R12: 000055bac5afc160
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
     </TASK>
    Modules linked in:
    ---[ end trace 0000000000000000 ]---
    
    Fix this by adding sanity check on extended system files' directory inode
    to ensure that it is directory, just like ntfs_extend_init() when mounting
    ntfs3.
    
    Link: https://lkml.kernel.org/r/20220809064730.2316892-1-chenxiaosong2@huawei.com
    Signed-off-by: ChenXiaoSong <chenxiaosong2@huawei.com>
    Cc: Anton Altaparmakov <anton@tuxera.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc8cdb9884531d8350119539fa0d88548a8de128
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Sep 19 11:26:08 2022 +0200

    ARM: dts: integrator: Tag PCI host with device_type
    
    commit 4952aa696a9f221c5e34e5961e02fca41ef67ad6 upstream.
    
    The DT parser is dependent on the PCI device being tagged as
    device_type = "pci" in order to parse memory ranges properly.
    Fix this up.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220919092608.813511-1-linus.walleij@linaro.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa5c3aa3f197d1a1e3e4f771ee64879700ee3029
Author: Jarkko Sakkinen <jarkko@kernel.org>
Date:   Tue Sep 6 03:02:20 2022 +0300

    x86/sgx: Do not fail on incomplete sanitization on premature stop of ksgxd
    
    commit 133e049a3f8c91b175029fb6a59b6039d5e79cba upstream.
    
    Unsanitized pages trigger WARN_ON() unconditionally, which can panic the
    whole computer, if /proc/sys/kernel/panic_on_warn is set.
    
    In sgx_init(), if misc_register() fails or misc_register() succeeds but
    neither sgx_drv_init() nor sgx_vepc_init() succeeds, then ksgxd will be
    prematurely stopped. This may leave unsanitized pages, which will result a
    false warning.
    
    Refine __sgx_sanitize_pages() to return:
    
    1. Zero when the sanitization process is complete or ksgxd has been
       requested to stop.
    2. The number of unsanitized pages otherwise.
    
    Fixes: 51ab30eb2ad4 ("x86/sgx: Replace section->init_laundry_list with sgx_dirty_page_list")
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Reinette Chatre <reinette.chatre@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/linux-sgx/20220825051827.246698-1-jarkko@kernel.org/T/#u
    Link: https://lkml.kernel.org/r/20220906000221.34286-2-jarkko@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 476c188b9dbe1ffbd621c806f4e653833c7cc915
Author: Aidan MacDonald <aidanmacdonald.0x0@gmail.com>
Date:   Fri Jun 17 13:22:54 2022 +0100

    clk: ingenic-tcu: Properly enable registers before accessing timers
    
    commit 6726d552a6912e88cf63fe2bda87b2efa0efc7d0 upstream.
    
    Access to registers is guarded by ingenic_tcu_{enable,disable}_regs()
    so the stop bit can be cleared before accessing a timer channel, but
    those functions did not clear the stop bit on SoCs with a global TCU
    clock gate.
    
    Testing on the X1000 has revealed that the stop bits must be cleared
    _and_ the global TCU clock must be ungated to access timer registers.
    This appears to be the norm on Ingenic SoCs, and is specified in the
    documentation for the X1000 and numerous JZ47xx SoCs.
    
    If the stop bit isn't cleared, register writes don't take effect and
    the system can be left in a broken state, eg. the watchdog timer may
    not run.
    
    The bug probably went unnoticed because stop bits are zeroed when
    the SoC is reset, and the kernel does not set them unless a timer
    gets disabled at runtime. However, it is possible that a bootloader
    or a previous kernel (if using kexec) leaves the stop bits set and
    we should not rely on them being cleared.
    
    Fixing this is easy: have ingenic_tcu_{enable,disable}_regs() always
    clear the stop bit, regardless of the presence of a global TCU gate.
    
    Reviewed-by: Paul Cercueil <paul@crapouillou.net>
    Tested-by: Paul Cercueil <paul@crapouillou.net>
    Fixes: 4f89e4b8f121 ("clk: ingenic: Add driver for the TCU clocks")
    Cc: stable@vger.kernel.org
    Signed-off-by: Aidan MacDonald <aidanmacdonald.0x0@gmail.com>
    Link: https://lore.kernel.org/r/20220617122254.738900-1-aidanmacdonald.0x0@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d134b0f7a9b9e2b9a60beb6483585d08dbbbb37d
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Fri Sep 23 13:42:23 2022 +0200

    can: c_can: don't cache TX messages for C_CAN cores
    
    commit 81d192c2ce74157e717e1fc4b68791f82f7499d4 upstream.
    
    As Jacob noticed, the optimization introduced in 387da6bc7a82 ("can:
    c_can: cache frames to operate as a true FIFO") doesn't properly work
    on C_CAN, but on D_CAN IP cores. The exact reasons are still unknown.
    
    For now disable caching if CAN frames in the TX path for C_CAN cores.
    
    Fixes: 387da6bc7a82 ("can: c_can: cache frames to operate as a true FIFO")
    Link: https://lore.kernel.org/all/20220928083354.1062321-1-mkl@pengutronix.de
    Link: https://lore.kernel.org/all/15a8084b-9617-2da1-6704-d7e39d60643b@gmail.com
    Reported-by: Jacob Kroon <jacob.kroon@gmail.com>
    Tested-by: Jacob Kroon <jacob.kroon@gmail.com>
    Cc: stable@vger.kernel.org # v5.15
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fff203793cb91b5bb5b43e3db4e89f868d78ff4
Author: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date:   Tue Sep 27 07:15:45 2022 -0700

    Input: snvs_pwrkey - fix SNVS_HPVIDR1 register address
    
    commit e62563db857f81d75c5726a35bc0180bed6d1540 upstream.
    
    Both i.MX6 and i.MX8 reference manuals list 0xBF8 as SNVS_HPVIDR1
    (chapters 57.9 and 6.4.5 respectively).
    
    Without this, trying to read the revision number results in 0 on
    all revisions, causing the i.MX6 quirk to apply on all platforms,
    which in turn causes the driver to synthesise power button release
    events instead of passing the real one as they happen even on
    platforms like i.MX8 where that's not wanted.
    
    Fixes: 1a26c920717a ("Input: snvs_pwrkey - send key events for i.MX6 S, DL and Q")
    Tested-by: Martin Kepplinger <martin.kepplinger@puri.sm>
    Signed-off-by: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Reviewed-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/4599101.ElGaqSPkdT@pliszka
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 006a5085a3a870d9ddfcdb4dd80923adf5df3e3d
Author: Frank Wunderlich <frank-w@public-files.de>
Date:   Mon Sep 26 17:07:40 2022 +0200

    net: usb: qmi_wwan: Add new usb-id for Dell branded EM7455
    
    commit 797666cd5af041ffb66642fff62f7389f08566a2 upstream.
    
    Add support for Dell 5811e (EM7455) with USB-id 0x413c:0x81c2.
    
    Signed-off-by: Frank Wunderlich <frank-w@public-files.de>
    Cc: stable@vger.kernel.org
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Link: https://lore.kernel.org/r/20220926150740.6684-3-linux@fw-web.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81e759d71a6bff49a709b9c950887b8dda1541c6
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Wed Sep 21 09:54:32 2022 -0500

    thunderbolt: Explicitly reset plug events delay back to USB4 spec value
    
    commit 31f87f705b3c1635345d8e8a493697099b43e508 upstream.
    
    If any software has interacted with the USB4 registers before the Linux
    USB4 CM runs, it may have modified the plug events delay. It has been
    observed that if this value too large, it's possible that hotplugged
    devices will negotiate a fallback mode instead in Linux.
    
    To prevent this, explicitly align the plug events delay with the USB4
    spec value of 10ms.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85a70a2599166ed264516ccb466e6b499ef0eb43
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Thu Sep 22 17:59:24 2022 +0300

    usb: typec: ucsi: Remove incorrect warning
    
    commit 415ba26cb73f7d22a892043301b91b57ae54db02 upstream.
    
    Sink only devices do not have any source capabilities, so
    the driver should not warn about that. Also DRP (Dual Role
    Power) capable devices, such as USB Type-C docking stations,
    do not return any source capabilities unless they are
    plugged to a power supply themselves.
    
    Fixes: 1f4642b72be7 ("usb: typec: ucsi: Retrieve all the PDOs instead of just the first 4")
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20220922145924.80667-1-heikki.krogerus@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac12a04c8e08b1ff337c93a3d6d30e683a0f2a1f
Author: Hongling Zeng <zenghongling@kylinos.cn>
Date:   Fri Sep 23 10:46:35 2022 +0800

    uas: ignore UAS for Thinkplus chips
    
    commit 0fb9703a3eade0bb84c635705d9c795345e55053 upstream.
    
    The UAS mode of Thinkplus(0x17ef, 0x3899) is reported to influence
    performance and trigger kernel panic on several platforms with the
    following error message:
    
    [   39.702439] xhci_hcd 0000:0c:00.3: ERROR Transfer event for disabled
                   endpoint or incorrect stream ring
    [   39.702442] xhci_hcd 0000:0c:00.3: @000000026c61f810 00000000 00000000
                   1b000000 05038000
    
    [  720.545894][13] Workqueue: usb_hub_wq hub_event
    [  720.550971][13]  ffff88026c143c38 0000000000016300 ffff8802755bb900 ffff880
                        26cb80000
    [  720.559673][13]  ffff88026c144000 ffff88026ca88100 0000000000000000 ffff880
                        26cb80000
    [  720.568374][13]  ffff88026cb80000 ffff88026c143c50 ffffffff8186ae25 ffff880
                        26ca880f8
    [  720.577076][13] Call Trace:
    [  720.580201][13]  [<ffffffff8186ae25>] schedule+0x35/0x80
    [  720.586137][13]  [<ffffffff8186b0ce>] schedule_preempt_disabled+0xe/0x10
    [  720.593623][13]  [<ffffffff8186cb94>] __mutex_lock_slowpath+0x164/0x1e0
    [  720.601012][13]  [<ffffffff8186cc3f>] mutex_lock+0x2f/0x40
    [  720.607141][13]  [<ffffffff8162b8e9>] usb_disconnect+0x59/0x290
    
    Falling back to USB mass storage can solve this problem, so ignore UAS
    function of this chip.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Hongling Zeng <zenghongling@kylinos.cn>
    Link: https://lore.kernel.org/r/1663902249837086.19.seg@mailgw
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 528aba78ee0151162bcabc85c02b297801d5eefe
Author: Hongling Zeng <zenghongling@kylinos.cn>
Date:   Fri Sep 23 10:46:25 2022 +0800

    usb-storage: Add Hiksemi USB3-FW to IGNORE_UAS
    
    commit e00b488e813f0f1ad9f778e771b7cd2fe2877023 upstream.
    
    The UAS mode of Hiksemi USB_HDD is reported to fail to work on several
    platforms with the following error message, then after re-connecting the
    device will be offlined and not working at all.
    
    [  592.518442][ 2] sd 8:0:0:0: [sda] tag#17 uas_eh_abort_handler 0 uas-tag 18
                       inflight: CMD
    [  592.527575][ 2] sd 8:0:0:0: [sda] tag#17 CDB: Write(10) 2a 00 03 6f 88 00 00
                       04 00 00
    [  592.536330][ 2] sd 8:0:0:0: [sda] tag#0 uas_eh_abort_handler 0 uas-tag 1
                       inflight: CMD
    [  592.545266][ 2] sd 8:0:0:0: [sda] tag#0 CDB: Write(10) 2a 00 07 44 1a 88 00
                       00 08 00
    
    These disks have a broken uas implementation, the tag field of the status
    iu-s is not set properly,so we need to fall-back to usb-storage.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Hongling Zeng <zenghongling@kylinos.cn>
    Link: https://lore.kernel.org/r/1663901185-21067-1-git-send-email-zenghongling@kylinos.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a4e8f384e8244c275e3e01a47c14e80586722c9
Author: Hongling Zeng <zenghongling@kylinos.cn>
Date:   Fri Sep 23 10:46:13 2022 +0800

    uas: add no-uas quirk for Hiksemi usb_disk
    
    commit a625a4b8806cc1e928b7dd2cca1fee709c9de56e upstream.
    
    The UAS mode of Hiksemi is reported to fail to work on several platforms
    with the following error message, then after re-connecting the device will
    be offlined and not working at all.
    
    [  592.518442][ 2] sd 8:0:0:0: [sda] tag#17 uas_eh_abort_handler 0 uas-tag 18
                       inflight: CMD
    [  592.527575][ 2] sd 8:0:0:0: [sda] tag#17 CDB: Write(10) 2a 00 03 6f 88 00 00
                       04 00 00
    [  592.536330][ 2] sd 8:0:0:0: [sda] tag#0 uas_eh_abort_handler 0 uas-tag 1
                       inflight: CMD
    [  592.545266][ 2] sd 8:0:0:0: [sda] tag#0 CDB: Write(10) 2a 00 07 44 1a 88 00
                       00 08 00
    
    These disks have a broken uas implementation, the tag field of the status
    iu-s is not set properly,so we need to fall-back to usb-storage.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Hongling Zeng <zenghongling@kylinos.cn>
    Link: https://lore.kernel.org/r/1663901173-21020-1-git-send-email-zenghongling@kylinos.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8484a356cee8ce3d6a8e6266ff99be326e9273ad
Author: Ming Lei <ming.lei@redhat.com>
Date:   Fri Sep 23 19:51:19 2022 +0800

    cgroup: cgroup_get_from_id() must check the looked-up kn is a directory
    
    [ Upstream commit df02452f3df069a59bc9e69c84435bf115cb6e37 ]
    
    cgroup has to be one kernfs dir, otherwise kernel panic is caused,
    especially cgroup id is provide from userspace.
    
    Reported-by: Marco Patalano <mpatalan@redhat.com>
    Fixes: 6b658c4863c1 ("scsi: cgroup: Add cgroup_get_from_id()")
    Cc: Muneendra <muneendra.kumar@broadcom.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Acked-by: Mukesh Ojha <quic_mojha@quicinc.com>
    Cc: stable@vger.kernel.org # v5.14+
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae04dd5ef1801784eb0717de2141e094d7544195
Author: Shakeel Butt <shakeelb@google.com>
Date:   Sun Oct 24 23:19:14 2021 -0700

    cgroup: reduce dependency on cgroup_mutex
    
    [ Upstream commit be288169712f3dea0bc6b50c00b3ab53d85f1435 ]
    
    Currently cgroup_get_from_path() and cgroup_get_from_id() grab
    cgroup_mutex before traversing the default hierarchy to find the
    kernfs_node corresponding to the path/id and then extract the linked
    cgroup. Since cgroup_mutex is still held, it is guaranteed that the
    cgroup will be alive and the reference can be taken on it.
    
    However similar guarantee can be provided without depending on the
    cgroup_mutex and potentially reducing avenues of cgroup_mutex contentions.
    The kernfs_node's priv pointer is RCU protected pointer and with just
    rcu read lock we can grab the reference on the cgroup without
    cgroup_mutex. So, remove cgroup_mutex from them.
    
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Stable-dep-of: df02452f3df0 ("cgroup: cgroup_get_from_id() must check the looked-up kn is a directory")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a64e6dc6cb7c9b1a21b4e29d663c7788bb596f6
Author: Alexander Sergeyev <sergeev917@gmail.com>
Date:   Fri Jan 14 19:50:50 2022 +0300

    ALSA: hda/realtek: fix speakers and micmute on HP 855 G8
    
    [ Upstream commit 91502a9a0b0d5252cf3f32ebd898823c2f5aadab ]
    
    There are several PCI ids associated with HP EliteBook 855 G8 Notebook
    PC. Commit 0e68c4b11f1e6 ("ALSA: hda/realtek: fix mute/micmute LEDs for
    HP 855 G8") covers 0x103c:0x8896, while this commit covers 0x103c:0x8895
    which needs some additional work on top of the quirk from 0e68c4b11f1e6.
    
    Note that the device can boot up with working speakers and micmute LED
    without this patch, but the success rate would be quite low (order of
    16 working boots across 709 boots) at least for the built-in drivers
    scenario. This also means that there are some timing issues during early
    boot and this patch is a workaround.
    
    With this patch applied speakers and headphones are consistenly working,
    as well as mute/micmute LEDs and the internal microphone.
    
    Signed-off-by: Alexander Sergeyev <sergeev917@gmail.com>
    Link: https://lore.kernel.org/r/20220114165050.ouw2nknuspclynro@localhost.localdomain
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Stable-dep-of: 496322302bf1 ("ALSA: hda/realtek: Add a quirk for HP OMEN 16 (8902) mute LED")
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a3bee2ead9bf1286342e110fd597256435af714
Author: Mohan Kumar <mkumard@nvidia.com>
Date:   Tue Sep 13 12:28:18 2022 +0530

    ALSA: hda: Fix Nvidia dp infoframe
    
    [ Upstream commit f89e409402e2aeb3bc3aa44d2b7a597959e4e6af ]
    
    Nvidia HDA HW expects infoframe data bytes order same for both
    HDMI and DP i.e infoframe data starts from 5th bytes offset. As
    dp infoframe structure has 4th byte as valid infoframe data, use
    hdmi infoframe structure for nvidia dp infoframe to match HW behvaior.
    
    Signed-off-by: Mohan Kumar <mkumard@nvidia.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220913065818.13015-1-mkumard@nvidia.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7392f93a2fb00a62cc841f1ce46b34f82b8ba28
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Sep 10 16:25:50 2022 +0200

    ALSA: hda: Fix hang at HD-audio codec unbinding due to refcount saturation
    
    [ Upstream commit ead3d3c5b54f76da79c079e61bacb4279ec56965 ]
    
    We fixed the potential deadlock at dynamic unbinding the HD-audio
    codec at the commit 7206998f578d ("ALSA: hda: Fix potential deadlock
    at codec unbinding"), but ironically, this caused another potential
    deadlock.  The current code uses refcount_dec() and waits for the
    pending task with wait_event for dropping the refcount to 0.  This
    works fine when PCMs are assigned and actually waiting for the
    refcount drop.
    
    Meanwhile, when there was no PCM assigned, the refcount_dec() call
    itself was supposed to drop to zero -- alas, it doesn't in reality;
    refcount_dec() complains, spews kernel warning and it saturates
    instead of dropping to 0, due to the nature of refcount_dec()
    implementation.  This eventually blocks the wait_event() wakeup and
    the code get stuck there.
    
    For avoiding the problem, we call refcount_dec_and_test() and skips
    the sync-wait if it already reaches to zero.
    
    The patch does a slight code reshuffling to make sure to invoke other
    disconnect calls before the sync-wait, too.
    
    Fixes: 7206998f578d ("ALSA: hda: Fix potential deadlock at codec unbinding")
    Reported-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Tested-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YxtflWQnslMHVlU7@intel.com
    Link: https://lore.kernel.org/r/20220910142550.28494-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de5deddfa7e73dc44044a3c78c8cad25fd2d55a9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 17 14:30:40 2021 +0100

    ALSA: hda: Do disconnect jacks at codec unbind
    
    [ Upstream commit 37c4fd0db7c961145d9d1909ecab386fdf703c26 ]
    
    The HD-audio codec driver remove may happen also at dynamically
    unbinding during operation, hence it needs manual triggers of
    snd_device_disconnect() calls, while it's missing for the jack objects
    that are associated with the codec.
    
    This patch adds the manual disconnection call for jacks when the
    remove happens without card->shutdown (i.e. not under the full
    removal).
    
    Link: https://lore.kernel.org/r/20211117133040.20272-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Stable-dep-of: ead3d3c5b54f ("ALSA: hda: Fix hang at HD-audio codec unbinding due to refcount saturation")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
