hash,reviewer,bfc,comment,understanding
7d4a101c0b,jesus,False,"Adds a sanity check. It improves maintainability, but does not fix a bug.",True
c579792562,jesus,True,"* Static analysis tool reports a warning: ""Undefined or garbage value returned to caller""
* This is an interesting case. A tool detects what apparently is a bug. Something worth annotating? It could have been caught earlier, by running the tool
* This is also interesting because A probably annotated the wrong commit",
370d988cc5,jesus,False,"Apparently, there is code using a variable, but the code is commented out after the line with the assignment to the variable. The code is uncommented (thus activated), which seems to add the functionality of reporting an error. This doesn't seem a bug, more like a perfective commit. Maybe it could help to not have a bug in the future.",
bf08387fb4,jesus,True,"There is a bug, clearly defined: a scenario where the bug happens, an analysis of the cause, and the fix",
ecd1a5f62e,jesus,False,Looks like a new feature being added,
5f2f539901,jesus,True,"Interesting case. The commit explains how some registers are not well captured by the code, but it doesn't seen that is really fixing a bug, but seems more like a performance enhancement (with respect to the use of the cache) and/or refactoring. Maybe some of the changes also prevent future bugs, anyway. I finally mark it as True, with doubt, because what is clear is that the previous code was erroneous, and now it seems to be right, so it fixes a bug.",
62d5f9f711,jesus,True,"Apparently, makes a call which is needed to unmap some mappings, which apparently should be made always, and was done previously only if device was unplugged. So, it seems it is correcting a not-yet-reported bug. But without the check the mappings would not be unmapped, but it should.",
50b620303a,jesus,False,Performance improvement,
77dbd72b98,jesus,True,"Seems to fix a bug, or at least to fix code that was wrong. For example, I read ""Avoid CPU hogging""",
3ac5f2f257,jesus,False,"* C seems to be an error, because it is exactly the same description of the previous commit.
* Description of a change in a comment, in this case describing an argument in a function signature (important: this comment can be used by automatic tools)
",
da8c94c065,jesus,False,"Refactoring, changing the name of a variable",
801db90bf2,jesus,False,"Perfecting the code, making it easier to do debugging later",
d6986ce24f,jesus,True,"An identifier was not having enough memory to show its whole name. This commit allocates more memory so that the identifier can be show in full. So, the earlier code was incorrect, because it didn't allow for showing the full name, so it was a bug, which is fixed.",
202470d536,jesus,False,"* A says it is a performance fix, but still labels it as BFC: maybe an error?
* It seems to remove a check that is not wrong, but is not needed",
fbe7e52003,jesus,True,"Apparently, it adds a call that should be there to have a correct functionality. But I have some doubt, since maybe this is just a different, more convenient way of doing the same thing (now, using a helper function).",
6a4d333d54,jesus,False,"Refactoring: use the specific type for the values, instead of an implicit type case",
0d7c1153d9,jesus,False,"Restructuring the code to avoid a compiler warning, with apparently no effect in functionality",
25875aa71d,jesus,False,Adds information in a virtual device to warn about a practice that could have implications for security (new functionality),
f2c281204b,jesus,False,Add a warning (new functionality),
b1bbd3a57b,jesus,False,Just changes documentation,
86c2457a8e,jesus,False,New functionality: some registers or variables are exposed,
67b56134ce,jesus,False,Cleanup,
cc5095747e,jesus,True,"This is a mitigation for a bug that is happening in a dependency. I think the key is ""mark the page as clean to avoid unprivileged denial of service attacks until the problem can be properly fixed"". In other words, a real problem with functionality is fixed, even when the real fix should be in a dependency (that is, the root cause for the bug happens elsewhere).",
feb00b736a,jesus,False,"New functionality: allow a call to be R, W, or RW (was RW earlier). It seems that new functionality is allowed. However, it could also be that the call was wrong, since it should allow the three modes, but it didn't ",
2acfab7101,jesus,False,Improvement (a buffer not needed is not allocated),
ad1c2f39fd,jesus,False,Seems like a performance improvement / refactoring,
ea90330fa3,jesus,True,"It seems this is an adaptation to some kinds of firmware, which wouldn't load well. There is no hint this was reported as a bug, and it is likely that it is just an extension of requirements, to have into account those files. I'm labeling it as a bug just because it fixes a possible malfunction (the file wouldn't load).",
18c91bb2d8,jesus,False,"I think this is clearly a performance improvement. They change the way in which locks work, and they even mention the improvement they measure.",
e45cce30ea,jesus,False,"This seems like an improvement: a better way of dealing with kthreads in a cgroup, by removing them earlier. It doesn't seem to have an effect on the overall functionality of the system (at least in terms of failures).",
ab14f1802c,jesus,False,"Refactoring (some calculus is done in a different place, the net result seems to be the same)",
920a9fa27e,jesus,True,"Syzbot is fuzzer, checking for bugs in the Linux kernel, https://github.com/google/syzkaller/blob/master/docs/syzbot.md In this case, it found one (""Syzbot once again hit uninit(ialized) value in asix driver""), which is fixed by adding a sanity check for a problem when reading from a USB driver, and code to check it in other places of the driver.",
3e18bcb778,jesus,False," Changes are summarized at the beginning of the comment. The first change is changing how logs are logged (change in functionality), the second one adds support for a new device (added functionality). So, I don't see any BFC here.",
16860a209c,jesus,False,"Refactoring, removing a redundant branch. Apparently, no effect on functionality",
