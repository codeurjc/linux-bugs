hash,reviewer,iunderstd,understd,bfc,bpc,prc,nfc,asc,spec,obc,safety,patchset,comment
088c840599,jesus,4,True,0,4,0,0,4,0,0,0.0,True,"INFO: This seems to me clearly a BPC, fixing a warning triggered by a checking tool."
3364c6ce23,jesus,4,True,0,4,0,0,4,0,0,0.0,False,"Fixing a warning by the compiled, when -Warray-bounds is used. This is not really fixing a bug, but fixing the warning, which, maybe, could make it more difficult to find a bug if array bounds are not respected. The commit comment itself says the binary output of the compiler is exactly the same, so it is clear this cannot be fixing a bug, but just, maybe, helping to prevent a future one."
e973746882,jesus,4,False,4,0,0,0,0,0,0,0.0,False,"INFO. The discussion in LORE [1] shows what is actually happening. The fix avoids confusion when calling the kernel API from userspace. Before the patch, information provided by the kernel could be contradictory, now it is isn't. Now, the question is: does this make it a BFC, a BPC, or something else? In addition, this is in the context of commit ""690a757d610e (""kvm: x86: Add CPUID support for Intel AMX"")"" (which is mentioned in the Fixes field). In other words, some new functionality was added, but it could provide contradictory info to userspace, so that is fixed. Apparently, no bug was reported. However, it seems the spec was that the information should not be contradictory, thus this would be fixing a non-reported bug. Labeling as BFC because of that.

[1] https://lore.kernel.org/all/20220117074531.76925-1-likexu@tencent.com/"
6c1f41afc1,jesus,3,True,4,0,0,0,0,0,0,1.0,False,"It seems this is fixing a case that causes malfunction, and is reported as a bug (notice the ""Reported-by:"" line). So, I think this is a clear BFC. Maybe it could have implications for safety, in the case there is a problem with the network devices, but I'm not sure (labeling as ""1"" for that)."
16b1941eac,jesus,4,True,4,0,0,0,4,0,0,3.0,False,"INFO. This seems like a clear BFC, triggered by an automated tool (A fuzzer). It could be a safety-related bug, since a variable is used after being freed, which in principle could have unintended consequences.

This said, it is interesting this sentence in the commit message: ""The race wouldn't occur if the gadget core registered its devices on a real bus, using the standard synchronization techniques of the driver core."" Reading the complete message, the bug manifests in the gadget core (this is in the USB subsystem) because it is not using the ""standard synchronization techniques provided by the driver core"". However, the bug is fixed not in the gadget core, but in the driver core, thus preventing bugs caused by other gadgets that could not be using those standard techniques."
7a70d9a1cf,jesus,4,True,0,4,4,0,0,0,0,0.0,False,"INFO. There are two things addressed in this commit. One is checking if the needed hw is present, which seems to be a perfective commit, PRC since it really doesn't fix or prevent a malfunction, except for the log message, which in any case would be correct (stating that hw is not available). The other one is fixing dependency information, which could cause a bug (no report is provided), and is thus a BPC."
09e7af76db,jesus,4,True,0,4,0,0,0,0,0,0.0,False,"This commit is preventing a non-reported bug: ""As the potential failure of the clk_enable(), it should be better to check it and return error if fails."""
dca4f5fdbc,jesus,4,True,0,4,0,0,4,0,0,4.0,False,"INFO: Bug preventing commit. Uses a pre-defined helper, instead of some specific code, which could trigger bugs. In part, the commit is triggered by a warning, thus ASC.

Interesting that some annotators think this is a PRC (maybe because the use of a helper being a kind of refactoring?). I'm not labeling as PRC because in my opinion, the refactoring is at the service of fixing the potential bug, and is not a refactoring without an impact on behavior (now, some bugs are prevented, but nothing else changed)."
dd2319c618,jesus,4,True,0,4,0,0,0,0,0,4.0,True,"INFO. Bug preventing commit: some new annotations are included, to ensure that a warning is triggered if possible null pointers dereferences are detected. No specific bug is fixed, but the action intends to help in detecting (and hopefully fixing) bugs in vendor modules.

Interesting that, despite being in agreement with this diagnostics, two annotators still give a large mark (3, 4) to BFC."
ae962e5f63,jesus,4,True,0,4,0,0,0,0,0,0.0,True,"INFO. Bug preventing commit, to avoid possible shadowing of a variable. It doesn't directly change functionality, but tries to prevent future bugs."
6a6f457ed5,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"INFO. This commit fixes a specific case that could happen: a table could not be allocated, therefore, check if that happened, and in that case, it returns a null pointer. This seems to fix a bug, since the behavior without that check is erroneous, and could cause a malfunction, by trying to work with a table which does not exist. I think it is a BFC and not a BPC because it is actually fixing a very specific case (the table was not allocated, which would cause problems).

Interesting case of what ""prevent"" means, with respect to ""fix"" (see how annotators understood the commit)."
ec80906b0f,jesus,4,True,0,0,4,0,0,0,0,0.0,False,"INFO. Fixing errors in tests. I think this can be considered a PRC, since it improves the code, but does not impact on functionality.

It seems that the annotator who labeled this as BFC didn't notice the fix was in a test."
2703c16c75,jesus,4,True,0,0,0,4,0,0,0,0.0,True,"This is a part of a large chunk of new code to support (or better support) Compute Express Link (CXL) . As seen in the description of v0 of the patchset [1]: ""Two new drivers are introduced to support Compute Express Link 2.0 [2] HDM decoder enumeration [...] cxl_port [...] cxl_port."" In particular, the commit main purpose is to ""provide a common mechanism for a CXL.mem endpoint driver to enumerate all the ancestor CXL ports in the topology and validate CXL.mem connectivity."" So, I think this is clearly a NFC, part of a large new functionality patchset. Even when the specification could be changing in part to allow for this new implementation, that's not done in this commit.

Curiously enough, none of the annotators saw it that way... Maybe I'm wrong?

[1] https://lore.kernel.org/linux-cxl/20211120000250.1663391-1-ben.widawsky@intel.com/
"
208cc9fe6f,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"This seems like a clear BFC: a check for a memory boundary is done in the wrong way (it should use the pool's DMA address instead of using the virtual address). As is before the commit, the code would perform wrong (not calculating the boundary the right way), and the commit fixes this."
d49fc69293,jesus,4,True,0,0,4,0,0,0,0,0.0,False,"INFO. Interesting case of a compiler flag not supported in clang, causing noise. The fix is easy: adding the flag to those flags that are ignored if not available. I guess this is just a PRC (perfective commit, in this case to increase the quality of compilation logs). No functionality is changed, so no change for a BFC or BPC.

Curiosly enough, only one annotator is coincident with my classification.

I couldn't find the commit in LORE."
a156f09c90,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"A table (extable) may not be available at the time it is needed. This commit fixes that case. This seems like a clear BFC. Safety implications, because without the fix, the algo will not work in some circumstances."
b5fa1d09f1,jesus,4,True,0,4,0,0,0,0,0,4.0,False,"Preventive commit. It makes MAC addresses a constant, which could prevent errors (or allow for automatic detection of errors).

Curiously enough, none of the annotators classified it this way.

I can't find this one in LORE"
3128ea0169,jesus,3,True,4,0,0,0,0,0,0,0.0,True,"Apparently, some rx frames were not accepted, but they should be. This seems like a BFC to me. However, it could be a new feature if dropping those frames previously was intentional, and now we could consider the spec changed.

I'm not sure about implications for safety, I assume none."
e950329880,jesus,4,True,0,0,4,0,0,0,0,0.0,True,"There is a warning by a new version of the compiler (GCC 12). The warning seems to be unjustified, so the developer adds code to ignore the warning (causing it not appear in the build logs). This does not have an impact on functionality, so I classify it as perfective (produces cleaner, more trustable compile logs). It could also be a bug fixing commit, but for fixing a bug in the compiler (which is raising a warning with no cause), but I think bug fixing should be focused on bugs on the kernel, not the tools to build it.

This is a part of a patchset doing similar stuff for other GCC 12 warnings."
60f6fe665e,jesus,3,True,0,4,0,0,0,0,0,4.0,False,"From the commit comment: ""Make dcn315 base its clock table off dcfclk rather than fclk"". In other words, reading [1], make the device base its clock table off Display Controller Fabric Clock rather than Fabric Clock. This seems like a BFC (if it is fixing a bug) or a BPC commit (if it is preventing bugs that may happen because of the selection of a wrong clock in some circumstances). Since the device seems to be working before the commit, and no specific scenario is mentioned, I tend to think it is the second case, so I classify it as BPC. However, in the same patch there is also ""adds some sanity checking to make sure an empty pmfw table does not result in invalid dal clocks"", which means this is also a BPF because of that (in this case, a bug is prevented, but there is no specific scenario of how the code as it is now could be causing a malfunction).

I couldn't find a patchset (I couldn't find this message in LORE).

[1] https://docs.kernel.org/gpu/amdgpu/display/dc-glossary.html"
9995c1d096,jesus,4,True,0,0,4,0,0,0,0,0.0,True,"INFO. This commit doesn't seem to fix any bug, or prevent any bug. It is improving the implementation of a specific case, as was suggested by reviewers of a previous commit. From this point of view, it seems it is a PRC. There could be reasons for considering it a NFC, because the commit comment says: ""This would allow for a more consistent resource management for platforms where PAUSE and STOP are handled differently"", which may imply that some new functionality is being added for that kind of platforms. But I find this case to be weak enough to still consider the bug as a PRC.

However, this could be an interesting example for defining where ""perfective commits"" end (in general, they are assumed to not change functionality: does this commit change it?), and where ""new feature"" starts (in this case, it could be that supporting those platforms where PAUSE and STOP and handled differently is enough of a reason to consider it as a new feature?"
7cbeeb0553,jesus,4,True,0,4,0,0,4,0,0,4.0,False,"INFO. This is a bug prevention commit, to fix a warning raised by the compiler. As in other cases, this could be just refactoring (changing the type of a variable), but I tend to consider this as a help for catching future bugs, and therefore BPC. There is room for discussion, anyway."
a3b774342f,jesus,4,True,4,0,0,0,4,0,0,4.0,False,"INFO. This fixes an error, by not detecting shift values that are too large.

Annotators tend to think it is more a BPC than a BFC. Again, this could be a sympthom of drawing better the line between both, or that there are shadows of grey...

The error is detected by specific code in the kernel (the error is shown in the commit message, thus this is also an ASC."
da4363457f,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"Refactoring, with apparently no effect on functionality. Suggested by warnings while compiling, so ASC.

None of the annotators identified it the same way I did (?)"
690b2549b1,jesus,4,True,4,0,0,0,0,0,0,4.0,False,"Bug fix, consisting in ensuring a variable coming from the user cannot ""write beyond the end
of dma_buffer[]"".

Curiously enough, annotators consider it as a BPC mostly... Maybe because it is not clear when user functions could use the variable for overwriting beyond the end of the buffer?"
403d50341c,jesus,3,True,4,0,0,0,0,0,0,4.0,False,"Fixes a problem in a function for copying memory, by having into account some offsets. Seem to fix a bug, which would happen when those offsets are not considered, although I'm not 100% sure I correctly understand the patch."
ec906102e5,jesus,4,True,0,0,4,0,4,0,0,0.0,False,"A performance test is failing, and it is fixed. This does not deal with bugs in the kernel, but helps to test performance, therefore PRC. Triggered by an error when running the tests, so ASC."
9f22f95951,jesus,4,True,0,0,0,4,0,4,0,0.0,True,"INFO. Specific config info for two cameras, which ""don't implement the power line correctly"". This could be a bug (those cameras were not well supported), but also a new feature, since likely those two cameras were not supported at all, and are supported now. Again, this is a matter of deciding if those two cameras were in-specs or off-specs before this commit. Let's assume they were off-specs (in principle, the previous code was correct, in the sense it supported all other supported cameras), and this commit is putting these cameras in-specs, and at the same time, supporting them.

In addition, this commit is part of a patchset [1] which states: ""The goal is still to support the UVC 1.5 power line frequency control extra option (patch 1/7), and work around an issue with devices that do not implement support for disabling the power line frequency (patches 2/7 to 7/7)."" Which again seems to be a new feature (supporting ""UVC 1.5 power line frequency control extra option"").

In any case, yet another example of how definition of what is in-specs and what is off-specs is fundamental to decide if a commit is fixing a bug or adding new functionality.

[1] https://lore.kernel.org/all/20220617235610.321917-1-ribalda@chromium.org/"
747c7cf159,jesus,4,True,4,0,0,0,0,0,0,4.0,True,"The comment for the partchset reads: ""This patch series adds trigger buffer support with data ready interrupt, separate channel for step counter, an event for step change interrupt, activity recognition and activity/inactivity event support."" [1]. This seems to imply a new feature (or several new features) are being implemented. However, the patch itself seems more like a fix. The explanation in the commit diff (LSB stands for ""least significative bit"") is detailed, and seems to imply that the previous values were wrong. So, I lean towards BFC in this case. Somebody with better understanding of the code could say otehrwise, anyway.

[1] https://lore.kernel.org/all/20220505133021.22362-1-jagathjog1996@gmail.com/"
